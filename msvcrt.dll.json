{"IsBadBoundedStringPtr": "WINBOOL WINAPI IsBadBoundedStringPtr(const void *lpsz,UINT cchMax);", "IMSAdminBaseW_AddKey_Proxy": "HRESULT WINAPI IMSAdminBaseW_AddKey_Proxy(IMSAdminBaseW *This,METADATA_HANDLE hMDHandle,LPCWSTR pszMDPath);", "IMSAdminBaseW_DeleteKey_Proxy": "HRESULT WINAPI IMSAdminBaseW_DeleteKey_Proxy(IMSAdminBaseW *This,METADATA_HANDLE hMDHandle,LPCWSTR pszMDPath);", "IMSAdminBaseW_DeleteChildKeys_Proxy": "HRESULT WINAPI IMSAdminBaseW_DeleteChildKeys_Proxy(IMSAdminBaseW *This,METADATA_HANDLE hMDHandle,LPCWSTR pszMDPath);", "IMSAdminBaseW_EnumKeys_Proxy": "HRESULT WINAPI IMSAdminBaseW_EnumKeys_Proxy(IMSAdminBaseW *This,METADATA_HANDLE hMDHandle,LPCWSTR pszMDPath,LPWSTR pszMDName,DWORD dwMDEnumObjectIndex);", "IMSAdminBaseW_CopyKey_Proxy": "HRESULT WINAPI IMSAdminBaseW_CopyKey_Proxy(IMSAdminBaseW *This,METADATA_HANDLE hMDSourceHandle,LPCWSTR pszMDSourcePath,METADATA_HANDLE hMDDestHandle,LPCWSTR pszMDDestPath,WINBOOL bMDOverwriteFlag,WINBOOL bMDCopyFlag);", "IMSAdminBaseW_RenameKey_Proxy": "HRESULT WINAPI IMSAdminBaseW_RenameKey_Proxy(IMSAdminBaseW *This,METADATA_HANDLE hMDHandle,LPCWSTR pszMDPath,LPCWSTR pszMDNewName);", "IMSAdminBaseW_R_SetData_Proxy": "HRESULT WINAPI IMSAdminBaseW_R_SetData_Proxy(IMSAdminBaseW *This,METADATA_HANDLE hMDHandle,LPCWSTR pszMDPath,PMETADATA_RECORD pmdrMDData);", "IMSAdminBaseW_R_GetData_Proxy": "HRESULT WINAPI IMSAdminBaseW_R_GetData_Proxy(IMSAdminBaseW *This,METADATA_HANDLE hMDHandle,LPCWSTR pszMDPath,PMETADATA_RECORD pmdrMDData,DWORD *pdwMDRequiredDataLen,struct _IIS_CRYPTO_BLOB **ppDataBlob);", "IMSAdminBaseW_DeleteData_Proxy": "HRESULT WINAPI IMSAdminBaseW_DeleteData_Proxy(IMSAdminBaseW *This,METADATA_HANDLE hMDHandle,LPCWSTR pszMDPath,DWORD dwMDIdentifier,DWORD dwMDDataType);", "IMSAdminBaseW_R_EnumData_Proxy": "HRESULT WINAPI IMSAdminBaseW_R_EnumData_Proxy(IMSAdminBaseW *This,METADATA_HANDLE hMDHandle,LPCWSTR pszMDPath,PMETADATA_RECORD pmdrMDData,DWORD dwMDEnumDataIndex,DWORD *pdwMDRequiredDataLen,struct _IIS_CRYPTO_BLOB **ppDataBlob);", "IMSAdminBaseW_R_GetAllData_Proxy": "HRESULT WINAPI IMSAdminBaseW_R_GetAllData_Proxy(IMSAdminBaseW *This,METADATA_HANDLE hMDHandle,LPCWSTR pszMDPath,DWORD dwMDAttributes,DWORD dwMDUserType,DWORD dwMDDataType,DWORD *pdwMDNumDataEntries,DWORD *pdwMDDataSetNumber,DWORD dwMDBufferSize,DWORD *pdwMDRequiredBufferSize,struct _IIS_CRYPTO_BLOB **ppDataBlob);", "IMSAdminBaseW_DeleteAllData_Proxy": "HRESULT WINAPI IMSAdminBaseW_DeleteAllData_Proxy(IMSAdminBaseW *This,METADATA_HANDLE hMDHandle,LPCWSTR pszMDPath,DWORD dwMDUserType,DWORD dwMDDataType);", "IMSAdminBaseW_CopyData_Proxy": "HRESULT WINAPI IMSAdminBaseW_CopyData_Proxy(IMSAdminBaseW *This,METADATA_HANDLE hMDSourceHandle,LPCWSTR pszMDSourcePath,METADATA_HANDLE hMDDestHandle,LPCWSTR pszMDDestPath,DWORD dwMDAttributes,DWORD dwMDUserType,DWORD dwMDDataType,WINBOOL bMDCopyFlag);", "IMSAdminBaseW_GetDataPaths_Proxy": "HRESULT WINAPI IMSAdminBaseW_GetDataPaths_Proxy(IMSAdminBaseW *This,METADATA_HANDLE hMDHandle,LPCWSTR pszMDPath,DWORD dwMDIdentifier,DWORD dwMDDataType,DWORD dwMDBufferSize,WCHAR *pszBuffer,DWORD *pdwMDRequiredBufferSize);", "IMSAdminBaseW_OpenKey_Proxy": "HRESULT WINAPI IMSAdminBaseW_OpenKey_Proxy(IMSAdminBaseW *This,METADATA_HANDLE hMDHandle,LPCWSTR pszMDPath,DWORD dwMDAccessRequested,DWORD dwMDTimeOut,PMETADATA_HANDLE phMDNewHandle);", "IMSAdminBaseW_CloseKey_Proxy": "HRESULT WINAPI IMSAdminBaseW_CloseKey_Proxy(IMSAdminBaseW *This,METADATA_HANDLE hMDHandle);", "IMSAdminBaseW_ChangePermissions_Proxy": "HRESULT WINAPI IMSAdminBaseW_ChangePermissions_Proxy(IMSAdminBaseW *This,METADATA_HANDLE hMDHandle,DWORD dwMDTimeOut,DWORD dwMDAccessRequested);", "IMSAdminBaseW_SaveData_Proxy": "HRESULT WINAPI IMSAdminBaseW_SaveData_Proxy(IMSAdminBaseW *This);", "IMSAdminBaseW_GetHandleInfo_Proxy": "HRESULT WINAPI IMSAdminBaseW_GetHandleInfo_Proxy(IMSAdminBaseW *This,METADATA_HANDLE hMDHandle,PMETADATA_HANDLE_INFO pmdhiInfo);", "IMSAdminBaseW_GetSystemChangeNumber_Proxy": "HRESULT WINAPI IMSAdminBaseW_GetSystemChangeNumber_Proxy(IMSAdminBaseW *This,DWORD *pdwSystemChangeNumber);", "IMSAdminBaseW_GetDataSetNumber_Proxy": "HRESULT WINAPI IMSAdminBaseW_GetDataSetNumber_Proxy(IMSAdminBaseW *This,METADATA_HANDLE hMDHandle,LPCWSTR pszMDPath,DWORD *pdwMDDataSetNumber);", "IMSAdminBaseW_SetLastChangeTime_Proxy": "HRESULT WINAPI IMSAdminBaseW_SetLastChangeTime_Proxy(IMSAdminBaseW *This,METADATA_HANDLE hMDHandle,LPCWSTR pszMDPath,PFILETIME pftMDLastChangeTime,WINBOOL bLocalTime);", "IMSAdminBaseW_GetLastChangeTime_Proxy": "HRESULT WINAPI IMSAdminBaseW_GetLastChangeTime_Proxy(IMSAdminBaseW *This,METADATA_HANDLE hMDHandle,LPCWSTR pszMDPath,PFILETIME pftMDLastChangeTime,WINBOOL bLocalTime);", "IMSAdminBaseW_R_KeyExchangePhase1_Proxy": "HRESULT WINAPI IMSAdminBaseW_R_KeyExchangePhase1_Proxy(IMSAdminBaseW *This,struct _IIS_CRYPTO_BLOB *pClientKeyExchangeKeyBlob,struct _IIS_CRYPTO_BLOB *pClientSignatureKeyBlob,struct _IIS_CRYPTO_BLOB **ppServerKeyExchangeKeyBlob,struct _IIS_CRYPTO_BLOB **ppServerSignatureKeyBlob,struct _IIS_CRYPTO_BLOB **ppServerSessionKeyBlob);", "IMSAdminBaseW_R_KeyExchangePhase2_Proxy": "HRESULT WINAPI IMSAdminBaseW_R_KeyExchangePhase2_Proxy(IMSAdminBaseW *This,struct _IIS_CRYPTO_BLOB *pClientSessionKeyBlob,struct _IIS_CRYPTO_BLOB *pClientHashBlob,struct _IIS_CRYPTO_BLOB **ppServerHashBlob);", "IMSAdminBaseW_Backup_Proxy": "HRESULT WINAPI IMSAdminBaseW_Backup_Proxy(IMSAdminBaseW *This,LPCWSTR pszMDBackupLocation,DWORD dwMDVersion,DWORD dwMDFlags);", "IMSAdminBaseW_Restore_Proxy": "HRESULT WINAPI IMSAdminBaseW_Restore_Proxy(IMSAdminBaseW *This,LPCWSTR pszMDBackupLocation,DWORD dwMDVersion,DWORD dwMDFlags);", "IMSAdminBaseW_EnumBackups_Proxy": "HRESULT WINAPI IMSAdminBaseW_EnumBackups_Proxy(IMSAdminBaseW *This,LPWSTR pszMDBackupLocation,DWORD *pdwMDVersion,PFILETIME pftMDBackupTime,DWORD dwMDEnumIndex);", "IMSAdminBaseW_DeleteBackup_Proxy": "HRESULT WINAPI IMSAdminBaseW_DeleteBackup_Proxy(IMSAdminBaseW *This,LPCWSTR pszMDBackupLocation,DWORD dwMDVersion);", "IMSAdminBaseW_UnmarshalInterface_Proxy": "HRESULT WINAPI IMSAdminBaseW_UnmarshalInterface_Proxy(IMSAdminBaseW *This,IMSAdminBaseW **piadmbwInterface);", "IMSAdminBaseW_R_GetServerGuid_Proxy": "HRESULT WINAPI IMSAdminBaseW_R_GetServerGuid_Proxy(IMSAdminBaseW *This,GUID *pServerGuid);", "IMSAdminBase2W_BackupWithPasswd_Proxy": "HRESULT WINAPI IMSAdminBase2W_BackupWithPasswd_Proxy(IMSAdminBase2W *This,LPCWSTR pszMDBackupLocation,DWORD dwMDVersion,DWORD dwMDFlags,LPCWSTR pszPasswd);", "IMSAdminBase2W_RestoreWithPasswd_Proxy": "HRESULT WINAPI IMSAdminBase2W_RestoreWithPasswd_Proxy(IMSAdminBase2W *This,LPCWSTR pszMDBackupLocation,DWORD dwMDVersion,DWORD dwMDFlags,LPCWSTR pszPasswd);", "IMSAdminBase2W_Export_Proxy": "HRESULT WINAPI IMSAdminBase2W_Export_Proxy(IMSAdminBase2W *This,LPCWSTR pszPasswd,LPCWSTR pszFileName,LPCWSTR pszSourcePath,DWORD dwMDFlags);", "IMSAdminBase2W_Import_Proxy": "HRESULT WINAPI IMSAdminBase2W_Import_Proxy(IMSAdminBase2W *This,LPCWSTR pszPasswd,LPCWSTR pszFileName,LPCWSTR pszSourcePath,LPCWSTR pszDestPath,DWORD dwMDFlags);", "IMSAdminBase2W_RestoreHistory_Proxy": "HRESULT WINAPI IMSAdminBase2W_RestoreHistory_Proxy(IMSAdminBase2W *This,LPCWSTR pszMDHistoryLocation,DWORD dwMDMajorVersion,DWORD dwMDMinorVersion,DWORD dwMDFlags);", "IMSAdminBase2W_EnumHistory_Proxy": "HRESULT WINAPI IMSAdminBase2W_EnumHistory_Proxy(IMSAdminBase2W *This,LPWSTR pszMDHistoryLocation,DWORD *pdwMDMajorVersion,DWORD *pdwMDMinorVersion,PFILETIME pftMDHistoryTime,DWORD dwMDEnumIndex);", "IMSAdminBase3W_GetChildPaths_Proxy": "HRESULT WINAPI IMSAdminBase3W_GetChildPaths_Proxy(IMSAdminBase3W *This,METADATA_HANDLE hMDHandle,LPCWSTR pszMDPath,DWORD cchMDBufferSize,WCHAR *pszBuffer,DWORD *pcchMDRequiredBufferSize);", "IMSImpExpHelpW_EnumeratePathsInFile_Proxy": "HRESULT WINAPI IMSImpExpHelpW_EnumeratePathsInFile_Proxy(IMSImpExpHelpW *This,LPCWSTR pszFileName,LPCWSTR pszKeyType,DWORD dwMDBufferSize,WCHAR *pszBuffer,DWORD *pdwMDRequiredBufferSize);", "IMSAdminBaseSinkW_SinkNotify_Proxy": "HRESULT WINAPI IMSAdminBaseSinkW_SinkNotify_Proxy(IMSAdminBaseSinkW *This,DWORD dwMDNumElements,MD_CHANGE_OBJECT_W pcoChangeList[]);", "IMSAdminBaseSinkW_ShutdownNotify_Proxy": "HRESULT WINAPI IMSAdminBaseSinkW_ShutdownNotify_Proxy(IMSAdminBaseSinkW *This);", "AsyncIMSAdminBaseSinkW_Begin_SinkNotify_Proxy": "HRESULT WINAPI AsyncIMSAdminBaseSinkW_Begin_SinkNotify_Proxy(AsyncIMSAdminBaseSinkW *This,DWORD dwMDNumElements,MD_CHANGE_OBJECT_W pcoChangeList[]);", "AsyncIMSAdminBaseSinkW_Finish_SinkNotify_Proxy": "HRESULT WINAPI AsyncIMSAdminBaseSinkW_Finish_SinkNotify_Proxy(AsyncIMSAdminBaseSinkW *This);", "AsyncIMSAdminBaseSinkW_Begin_ShutdownNotify_Proxy": "HRESULT WINAPI AsyncIMSAdminBaseSinkW_Begin_ShutdownNotify_Proxy(AsyncIMSAdminBaseSinkW *This);", "AsyncIMSAdminBaseSinkW_Finish_ShutdownNotify_Proxy": "HRESULT WINAPI AsyncIMSAdminBaseSinkW_Finish_ShutdownNotify_Proxy(AsyncIMSAdminBaseSinkW *This);", "IMSAdminBaseW_SetData_Proxy": "HRESULT WINAPI IMSAdminBaseW_SetData_Proxy(IMSAdminBaseW *This,METADATA_HANDLE hMDHandle,LPCWSTR pszMDPath,PMETADATA_RECORD pmdrMDData);", "IMSAdminBaseW_SetData_Stub": "HRESULT WINAPI IMSAdminBaseW_SetData_Stub(IMSAdminBaseW *This,METADATA_HANDLE hMDHandle,LPCWSTR pszMDPath,PMETADATA_RECORD pmdrMDData);", "IMSAdminBaseW_GetData_Proxy": "HRESULT WINAPI IMSAdminBaseW_GetData_Proxy(IMSAdminBaseW *This,METADATA_HANDLE hMDHandle,LPCWSTR pszMDPath,PMETADATA_RECORD pmdrMDData,DWORD *pdwMDRequiredDataLen);", "IMSAdminBaseW_GetData_Stub": "HRESULT WINAPI IMSAdminBaseW_GetData_Stub(IMSAdminBaseW *This,METADATA_HANDLE hMDHandle,LPCWSTR pszMDPath,PMETADATA_RECORD pmdrMDData,DWORD *pdwMDRequiredDataLen,struct _IIS_CRYPTO_BLOB **ppDataBlob);", "IMSAdminBaseW_EnumData_Proxy": "HRESULT WINAPI IMSAdminBaseW_EnumData_Proxy(IMSAdminBaseW *This,METADATA_HANDLE hMDHandle,LPCWSTR pszMDPath,PMETADATA_RECORD pmdrMDData,DWORD dwMDEnumDataIndex,DWORD *pdwMDRequiredDataLen);", "IMSAdminBaseW_EnumData_Stub": "HRESULT WINAPI IMSAdminBaseW_EnumData_Stub(IMSAdminBaseW *This,METADATA_HANDLE hMDHandle,LPCWSTR pszMDPath,PMETADATA_RECORD pmdrMDData,DWORD dwMDEnumDataIndex,DWORD *pdwMDRequiredDataLen,struct _IIS_CRYPTO_BLOB **ppDataBlob);", "IMSAdminBaseW_GetAllData_Proxy": "HRESULT WINAPI IMSAdminBaseW_GetAllData_Proxy(IMSAdminBaseW *This,METADATA_HANDLE hMDHandle,LPCWSTR pszMDPath,DWORD dwMDAttributes,DWORD dwMDUserType,DWORD dwMDDataType,DWORD *pdwMDNumDataEntries,DWORD *pdwMDDataSetNumber,DWORD dwMDBufferSize,unsigned char *pbMDBuffer,DWORD *pdwMDRequiredBufferSize);", "IMSAdminBaseW_GetAllData_Stub": "HRESULT WINAPI IMSAdminBaseW_GetAllData_Stub(IMSAdminBaseW *This,METADATA_HANDLE hMDHandle,LPCWSTR pszMDPath,DWORD dwMDAttributes,DWORD dwMDUserType,DWORD dwMDDataType,DWORD *pdwMDNumDataEntries,DWORD *pdwMDDataSetNumber,DWORD dwMDBufferSize,DWORD *pdwMDRequiredBufferSize,struct _IIS_CRYPTO_BLOB **ppDataBlob);", "IMSAdminBaseW_KeyExchangePhase1_Proxy": "HRESULT WINAPI IMSAdminBaseW_KeyExchangePhase1_Proxy(IMSAdminBaseW *This);", "IMSAdminBaseW_KeyExchangePhase1_Stub": "HRESULT WINAPI IMSAdminBaseW_KeyExchangePhase1_Stub(IMSAdminBaseW *This,struct _IIS_CRYPTO_BLOB *pClientKeyExchangeKeyBlob,struct _IIS_CRYPTO_BLOB *pClientSignatureKeyBlob,struct _IIS_CRYPTO_BLOB **ppServerKeyExchangeKeyBlob,struct _IIS_CRYPTO_BLOB **ppServerSignatureKeyBlob,struct _IIS_CRYPTO_BLOB **ppServerSessionKeyBlob);", "IMSAdminBaseW_KeyExchangePhase2_Proxy": "HRESULT WINAPI IMSAdminBaseW_KeyExchangePhase2_Proxy(IMSAdminBaseW *This);", "IMSAdminBaseW_KeyExchangePhase2_Stub": "HRESULT WINAPI IMSAdminBaseW_KeyExchangePhase2_Stub(IMSAdminBaseW *This,struct _IIS_CRYPTO_BLOB *pClientSessionKeyBlob,struct _IIS_CRYPTO_BLOB *pClientHashBlob,struct _IIS_CRYPTO_BLOB **ppServerHashBlob);", "IMSAdminBaseW_GetServerGuid_Proxy": "HRESULT WINAPI IMSAdminBaseW_GetServerGuid_Proxy(IMSAdminBaseW *This);", "IMSAdminBaseW_GetServerGuid_Stub": "HRESULT WINAPI IMSAdminBaseW_GetServerGuid_Stub(IMSAdminBaseW *This,GUID *pServerGuid);", "CreateThreadpool": "WINBASEAPI PTP_POOL WINAPI CreateThreadpool (PVOID reserved);", "SetThreadpoolThreadMaximum": "WINBASEAPI VOID WINAPI SetThreadpoolThreadMaximum (PTP_POOL ptpp, DWORD cthrdMost);", "SetThreadpoolThreadMinimum": "WINBASEAPI WINBOOL WINAPI SetThreadpoolThreadMinimum (PTP_POOL ptpp, DWORD cthrdMic);", "SetThreadpoolStackInformation": "WINBASEAPI WINBOOL WINAPI SetThreadpoolStackInformation (PTP_POOL ptpp, PTP_POOL_STACK_INFORMATION ptpsi);", "QueryThreadpoolStackInformation": "WINBASEAPI WINBOOL WINAPI QueryThreadpoolStackInformation (PTP_POOL ptpp, PTP_POOL_STACK_INFORMATION ptpsi);", "CloseThreadpool": "WINBASEAPI VOID WINAPI CloseThreadpool (PTP_POOL ptpp);", "CreateThreadpoolCleanupGroup": "WINBASEAPI PTP_CLEANUP_GROUP WINAPI CreateThreadpoolCleanupGroup (VOID);", "CloseThreadpoolCleanupGroupMembers": "WINBASEAPI VOID WINAPI CloseThreadpoolCleanupGroupMembers (PTP_CLEANUP_GROUP ptpcg, WINBOOL fCancelPendingCallbacks, PVOID pvCleanupContext);", "CloseThreadpoolCleanupGroup": "WINBASEAPI VOID WINAPI CloseThreadpoolCleanupGroup (PTP_CLEANUP_GROUP ptpcg);", "SetEventWhenCallbackReturns": "WINBASEAPI VOID WINAPI SetEventWhenCallbackReturns (PTP_CALLBACK_INSTANCE pci, HANDLE evt);", "ReleaseSemaphoreWhenCallbackReturns": "WINBASEAPI VOID WINAPI ReleaseSemaphoreWhenCallbackReturns (PTP_CALLBACK_INSTANCE pci, HANDLE sem, DWORD crel);", "ReleaseMutexWhenCallbackReturns": "WINBASEAPI VOID WINAPI ReleaseMutexWhenCallbackReturns (PTP_CALLBACK_INSTANCE pci, HANDLE mut);", "LeaveCriticalSectionWhenCallbackReturns": "WINBASEAPI VOID WINAPI LeaveCriticalSectionWhenCallbackReturns (PTP_CALLBACK_INSTANCE pci, PCRITICAL_SECTION pcs);", "FreeLibraryWhenCallbackReturns": "WINBASEAPI VOID WINAPI FreeLibraryWhenCallbackReturns (PTP_CALLBACK_INSTANCE pci, HMODULE mod);", "CallbackMayRunLong": "WINBASEAPI WINBOOL WINAPI CallbackMayRunLong (PTP_CALLBACK_INSTANCE pci);", "DisassociateCurrentThreadFromCallback": "WINBASEAPI VOID WINAPI DisassociateCurrentThreadFromCallback (PTP_CALLBACK_INSTANCE pci);", "TrySubmitThreadpoolCallback": "WINBASEAPI WINBOOL WINAPI TrySubmitThreadpoolCallback (PTP_SIMPLE_CALLBACK pfns, PVOID pv, PTP_CALLBACK_ENVIRON pcbe);", "CreateThreadpoolWork": "WINBASEAPI PTP_WORK WINAPI CreateThreadpoolWork (PTP_WORK_CALLBACK pfnwk, PVOID pv, PTP_CALLBACK_ENVIRON pcbe);", "SubmitThreadpoolWork": "WINBASEAPI VOID WINAPI SubmitThreadpoolWork (PTP_WORK pwk);", "WaitForThreadpoolWorkCallbacks": "WINBASEAPI VOID WINAPI WaitForThreadpoolWorkCallbacks (PTP_WORK pwk, WINBOOL fCancelPendingCallbacks);", "CloseThreadpoolWork": "WINBASEAPI VOID WINAPI CloseThreadpoolWork (PTP_WORK pwk);", "CreateThreadpoolTimer": "WINBASEAPI PTP_TIMER WINAPI CreateThreadpoolTimer (PTP_TIMER_CALLBACK pfnti, PVOID pv, PTP_CALLBACK_ENVIRON pcbe);", "SetThreadpoolTimer": "WINBASEAPI VOID WINAPI SetThreadpoolTimer (PTP_TIMER pti, PFILETIME pftDueTime, DWORD msPeriod, DWORD msWindowLength);", "IsThreadpoolTimerSet": "WINBASEAPI WINBOOL WINAPI IsThreadpoolTimerSet (PTP_TIMER pti);", "WaitForThreadpoolTimerCallbacks": "WINBASEAPI VOID WINAPI WaitForThreadpoolTimerCallbacks (PTP_TIMER pti, WINBOOL fCancelPendingCallbacks);", "CloseThreadpoolTimer": "WINBASEAPI VOID WINAPI CloseThreadpoolTimer (PTP_TIMER pti);", "CreateThreadpoolWait": "WINBASEAPI PTP_WAIT WINAPI CreateThreadpoolWait (PTP_WAIT_CALLBACK pfnwa, PVOID pv, PTP_CALLBACK_ENVIRON pcbe);", "SetThreadpoolWait": "WINBASEAPI VOID WINAPI SetThreadpoolWait (PTP_WAIT pwa, HANDLE h, PFILETIME pftTimeout);", "WaitForThreadpoolWaitCallbacks": "WINBASEAPI VOID WINAPI WaitForThreadpoolWaitCallbacks (PTP_WAIT pwa, WINBOOL fCancelPendingCallbacks);", "CloseThreadpoolWait": "WINBASEAPI VOID WINAPI CloseThreadpoolWait (PTP_WAIT pwa);", "CreateThreadpoolIo": "WINBASEAPI PTP_IO WINAPI CreateThreadpoolIo (HANDLE fl, PTP_WIN32_IO_CALLBACK pfnio, PVOID pv, PTP_CALLBACK_ENVIRON pcbe);", "StartThreadpoolIo": "WINBASEAPI VOID WINAPI StartThreadpoolIo (PTP_IO pio);", "CancelThreadpoolIo": "WINBASEAPI VOID WINAPI CancelThreadpoolIo (PTP_IO pio);", "WaitForThreadpoolIoCallbacks": "WINBASEAPI VOID WINAPI WaitForThreadpoolIoCallbacks (PTP_IO pio, WINBOOL fCancelPendingCallbacks);", "CloseThreadpoolIo": "WINBASEAPI VOID WINAPI CloseThreadpoolIo (PTP_IO pio);", "SetThreadpoolTimerEx": "WINBASEAPI WINBOOL WINAPI SetThreadpoolTimerEx (PTP_TIMER pti, PFILETIME pftDueTime, DWORD msPeriod, DWORD msWindowLength);", "SetThreadpoolWaitEx": "WINBASEAPI WINBOOL WINAPI SetThreadpoolWaitEx (PTP_WAIT pwa, HANDLE h, PFILETIME pftTimeout, PVOID Reserved);", "AdvanceLogBase": "WINBOOL WINAPI AdvanceLogBase(PVOID pvMarshal,PCLFS_LSN plsnBase,ULONG fFlags,LPOVERLAPPED pOverlapped);", "AlignReservedLog": "WINBOOL WINAPI AlignReservedLog(PVOID pvMarshal,ULONG cReservedRecords,LONGLONG rgcbReservation,PLONGLONG pcbAlignReservation);", "AllocReservedLog": "WINBOOL WINAPI AllocReservedLog(PVOID pvMarshal,ULONG cReservedRecords,PLONGLONG pcbAdjustment);", "AddLogContainer": "WINBOOL WINAPI AddLogContainer(HANDLE hLog,PULONGLONG pcbContainer,LPWSTR pwszContainerPath,LPVOID pReserved);", "AddLogContainerSet": "WINBOOL WINAPI AddLogContainerSet(HANDLE hLog,USHORT cContainers,PULONGLONG pcbContainer,LPWSTR *rgwszContainerPath,PVOID Reserved);", "CloseAndResetLogFile": "WINBOOL WINAPI CloseAndResetLogFile(HANDLE hLog);", "CreateLogContainerScanContext": "WINBOOL WINAPI CreateLogContainerScanContext(", "CreateLogFile": "HANDLE WINAPI CreateLogFile(", "ScanLogContainers": "WINBOOL WINAPI ScanLogContainers(", "CreateLogMarshallingArea": "WINBOOL WINAPI CreateLogMarshallingArea(", "DeleteLogMarshallingArea": "WINBOOL WINAPI DeleteLogMarshallingArea(", "DeleteLogByHandle": "WINBOOL WINAPI DeleteLogByHandle(", "DeleteLogFile": "WINBOOL WINAPI DeleteLogFile(", "DeregisterManageableLogClient": "WINBOOL WINAPI DeregisterManageableLogClient(", "DumpLogRecords": "WINBOOL WINAPI DumpLogRecords(", "ReadLogRecord": "WINBOOL WINAPI ReadLogRecord(", "ReadNextLogRecord": "WINBOOL WINAPI ReadNextLogRecord(", "FlushLogBuffers": "WINBOOL WINAPI FlushLogBuffers(", "FlushLogToLsn": "WINBOOL WINAPI FlushLogToLsn(", "FreeReservedLog": "WINBOOL WINAPI FreeReservedLog(", "GetLogContainerName": "WINBOOL WINAPI GetLogContainerName(", "GetLogFileInformation": "WINBOOL WINAPI GetLogFileInformation(", "GetLogIoStatistics": "WINBOOL WINAPI GetLogIoStatistics(", "GetNextLogArchiveExtent": "WINBOOL WINAPI GetNextLogArchiveExtent(", "PrepareLogArchive": "WINBOOL WINAPI PrepareLogArchive(", "TerminateLogArchive": "WINBOOL WINAPI TerminateLogArchive(", "LsnBlockOffset": "ULONG WINAPI LsnBlockOffset(", "LsnContainer": "CLFS_CONTAINER_ID WINAPI LsnContainer(", "LsnCreate": "CLFS_LSN WINAPI LsnCreate(", "LsnRecordSequence": "ULONG WINAPI LsnRecordSequence(", "QueryLogPolicy": "WINBOOL WINAPI QueryLogPolicy(", "ReadLogArchiveMetadata": "WINBOOL WINAPI ReadLogArchiveMetadata(", "ReadLogRestartArea": "WINBOOL WINAPI ReadLogRestartArea(", "ReadPreviousLogRestartArea": "WINBOOL WINAPI ReadPreviousLogRestartArea(", "RemoveLogContainer": "WINBOOL WINAPI RemoveLogContainer(", "RemoveLogContainerSet": "WINBOOL WINAPI RemoveLogContainerSet(", "ReserveAndAppendLog": "WINBOOL WINAPI ReserveAndAppendLog(", "ReserveAndAppendLogAligned": "WINBOOL WINAPI ReserveAndAppendLogAligned(", "SetEndOfLog": "WINBOOL WINAPI SetEndOfLog(", "SetLogArchiveMode": "WINBOOL WINAPI SetLogArchiveMode(", "SetLogArchiveTail": "WINBOOL WINAPI SetLogArchiveTail(", "TerminateReadLog": "WINBOOL WINAPI TerminateReadLog(", "ValidateLog": "WINBOOL WINAPI ValidateLog(", "LZStart": "INT WINAPI LZStart(VOID);", "LZDone": "VOID WINAPI LZDone(VOID);", "CopyLZFile": "LONG WINAPI CopyLZFile(INT,INT);", "LZCopy": "LONG WINAPI LZCopy(INT,INT);", "LZInit": "INT WINAPI LZInit(INT);", "GetExpandedNameA": "INT WINAPI GetExpandedNameA(LPSTR,LPSTR);", "GetExpandedNameW": "INT WINAPI GetExpandedNameW(LPWSTR,LPWSTR);", "LZOpenFileA": "INT WINAPI LZOpenFileA(LPSTR,LPOFSTRUCT,WORD);", "LZOpenFileW": "INT WINAPI LZOpenFileW(LPWSTR,LPOFSTRUCT,WORD);", "LZSeek": "LONG WINAPI LZSeek(INT,LONG,INT);", "LZRead": "INT WINAPI LZRead(INT,LPSTR,INT);", "LZClose": "VOID WINAPI LZClose(INT);", "timeSetEvent": "WINMMAPI MMRESULT WINAPI timeSetEvent(UINT uDelay, UINT uResolution, LPTIMECALLBACK fptc, DWORD_PTR dwUser, UINT fuEvent);", "timeKillEvent": "WINMMAPI MMRESULT WINAPI timeKillEvent(UINT uTimerID);", "KsCreateAllocator": "KSDDKAPI DWORD WINAPI KsCreateAllocator(HANDLE ConnectionHandle,PKSALLOCATOR_FRAMING AllocatorFraming,PHANDLE AllocatorHandle);", "KsCreatePin": "KSDDKAPI DWORD WINAPI KsCreatePin(HANDLE FilterHandle,PKSPIN_CONNECT Connect,ACCESS_MASK DesiredAccess,PHANDLE ConnectionHandle);", "KsCreateTopologyNode": "KSDDKAPI DWORD WINAPI KsCreateTopologyNode(HANDLE ParentHandle,PKSNODE_CREATE NodeCreate,ACCESS_MASK DesiredAccess,PHANDLE NodeHandle);", "DXGetErrorString9A": "const char*     WINAPI DXGetErrorString9A(HRESULT hr);", "DXGetErrorString9W": "const WCHAR*    WINAPI DXGetErrorString9W(HRESULT hr);", "DXGetErrorDescription9A": "const char*     WINAPI DXGetErrorDescription9A(HRESULT hr);", "DXGetErrorDescription9W": "const WCHAR*    WINAPI DXGetErrorDescription9W(HRESULT hr);", "DXTraceA": "HRESULT WINAPI  DXTraceA(const char* strFile, DWORD dwLine, HRESULT hr, const char*  strMsg, WINBOOL bPopMsgBox);", "DXTraceW": "HRESULT WINAPI  DXTraceW(const char* strFile, DWORD dwLine, HRESULT hr, const WCHAR* strMsg, WINBOOL bPopMsgBox);", "ScriptFreeCache": "HRESULT WINAPI ScriptFreeCache (SCRIPT_CACHE *psc);", "ScriptItemize": "HRESULT WINAPI ScriptItemize (const WCHAR *pwcInChars, int cInChars, int cMaxItems, const SCRIPT_CONTROL *psControl, const SCRIPT_STATE *psState, SCRIPT_ITEM *pItems, int *pcItems);", "ScriptLayout": "HRESULT WINAPI ScriptLayout (int cRuns, const BYTE *pbLevel, int *piVisualToLogical, int *piLogicalToVisual);", "ScriptShape": "HRESULT WINAPI ScriptShape (HDC hdc, SCRIPT_CACHE *psc, const WCHAR *pwcChars, int cChars, int cMaxGlyphs, SCRIPT_ANALYSIS *psa, WORD *pwOutGlyphs, WORD *pwLogClust, SCRIPT_VISATTR *psva, int *pcGlyphs);", "ScriptPlace": "HRESULT WINAPI ScriptPlace (HDC hdc, SCRIPT_CACHE *psc, const WORD *pwGlyphs, int cGlyphs, const SCRIPT_VISATTR *psva, SCRIPT_ANALYSIS *psa, int *piAdvance, GOFFSET *pGoffset, ABC *pABC);", "ScriptTextOut": "HRESULT WINAPI ScriptTextOut (const HDC hdc, SCRIPT_CACHE *psc, int x, int y, UINT fuOptions, const RECT *lprc, const SCRIPT_ANALYSIS *psa, const WCHAR *pwcReserved, int iReserved, const WORD *pwGlyphs, int cGlyphs, const int *piAdvance, const int *piJustify, const GOFFSET *pGoffset);", "ScriptJustify": "HRESULT WINAPI ScriptJustify (const SCRIPT_VISATTR *psva, const int *piAdvance, int cGlyphs, int iDx, int iMinKashida, int *piJustify);", "ScriptBreak": "HRESULT WINAPI ScriptBreak (const WCHAR *pwcChars, int cChars, const SCRIPT_ANALYSIS *psa, SCRIPT_LOGATTR *psla);", "ScriptCPtoX": "HRESULT WINAPI ScriptCPtoX (int iCP, WINBOOL fTrailing, int cChars, int cGlyphs, const WORD *pwLogClust, const SCRIPT_VISATTR *psva, const int *piAdvance, const SCRIPT_ANALYSIS *psa, int *piX);", "ScriptXtoCP": "HRESULT WINAPI ScriptXtoCP (int iX, int cChars, int cGlyphs, const WORD *pwLogClust, const SCRIPT_VISATTR *psva, const int *piAdvance, const SCRIPT_ANALYSIS *psa, int *piCP, int *piTrailing);", "ScriptGetLogicalWidths": "HRESULT WINAPI ScriptGetLogicalWidths (const SCRIPT_ANALYSIS *psa, int cChars, int cGlyphs, const int *piGlyphWidth, const WORD *pwLogClust, const SCRIPT_VISATTR *psva, int *piDx);", "ScriptApplyLogicalWidth": "HRESULT WINAPI ScriptApplyLogicalWidth (const int *piDx, int cChars, int cGlyphs, const WORD *pwLogClust, const SCRIPT_VISATTR *psva, const int *piAdvance, const SCRIPT_ANALYSIS *psa, ABC *pABC, int *piJustify);", "ScriptGetCMap": "HRESULT WINAPI ScriptGetCMap (HDC hdc, SCRIPT_CACHE *psc, const WCHAR *pwcInChars, int cChars, DWORD dwFlags, WORD *pwOutGlyphs);", "ScriptGetGlyphABCWidth": "HRESULT WINAPI ScriptGetGlyphABCWidth (HDC hdc, SCRIPT_CACHE *psc, WORD wGlyph, ABC *pABC);", "ScriptGetProperties": "HRESULT WINAPI ScriptGetProperties (const SCRIPT_PROPERTIES ***ppSp, int *piNumScripts);", "ScriptGetFontProperties": "HRESULT WINAPI ScriptGetFontProperties (HDC hdc, SCRIPT_CACHE *psc, SCRIPT_FONTPROPERTIES *sfp);", "ScriptCacheGetHeight": "HRESULT WINAPI ScriptCacheGetHeight (HDC hdc, SCRIPT_CACHE *psc, long *tmHeight);", "ScriptStringAnalyse": "HRESULT WINAPI ScriptStringAnalyse (HDC hdc, const void *pString, int cString, int cGlyphs, int iCharset, DWORD dwFlags, int iReqWidth, SCRIPT_CONTROL *psControl, SCRIPT_STATE *psState, const int *piDx, SCRIPT_TABDEF *pTabdef, const BYTE *pbInClass, SCRIPT_STRING_ANALYSIS *pssa);", "ScriptStringFree": "HRESULT WINAPI ScriptStringFree (SCRIPT_STRING_ANALYSIS *pssa);", "ScriptString_pSize": "const SIZE *WINAPI ScriptString_pSize (SCRIPT_STRING_ANALYSIS ssa);", "ScriptString_pcOutChars": "const int *WINAPI ScriptString_pcOutChars (SCRIPT_STRING_ANALYSIS ssa);", "ScriptString_pLogAttr": "const SCRIPT_LOGATTR *WINAPI ScriptString_pLogAttr (SCRIPT_STRING_ANALYSIS ssa);", "ScriptStringGetOrder": "HRESULT WINAPI ScriptStringGetOrder (SCRIPT_STRING_ANALYSIS ssa, UINT *puOrder);", "ScriptStringCPtoX": "HRESULT WINAPI ScriptStringCPtoX (SCRIPT_STRING_ANALYSIS ssa, int icp, WINBOOL fTrailing, int *pX);", "ScriptStringXtoCP": "HRESULT WINAPI ScriptStringXtoCP (SCRIPT_STRING_ANALYSIS ssa, int iX, int *piCh, int *piTrailing);", "ScriptStringGetLogicalWidths": "HRESULT WINAPI ScriptStringGetLogicalWidths (SCRIPT_STRING_ANALYSIS ssa, int *piDx);", "ScriptStringValidate": "HRESULT WINAPI ScriptStringValidate (SCRIPT_STRING_ANALYSIS ssa);", "ScriptStringOut": "HRESULT WINAPI ScriptStringOut (SCRIPT_STRING_ANALYSIS ssa, int iX, int iY, UINT uOptions, const RECT *prc, int iMinSel, int iMaxSel, WINBOOL fDisabled);", "ScriptIsComplex": "HRESULT WINAPI ScriptIsComplex (const WCHAR *pwcInChars, int cInChars, DWORD dwFlags);", "ScriptRecordDigitSubstitution": "HRESULT WINAPI ScriptRecordDigitSubstitution (LCID Locale, SCRIPT_DIGITSUBSTITUTE *psds);", "ScriptApplyDigitSubstitution": "HRESULT WINAPI ScriptApplyDigitSubstitution (const SCRIPT_DIGITSUBSTITUTE *psds, SCRIPT_CONTROL *psc, SCRIPT_STATE *pss);", "ScriptShapeOpenType": "HRESULT WINAPI ScriptShapeOpenType (HDC hdc, SCRIPT_CACHE *psc, SCRIPT_ANALYSIS *psa, OPENTYPE_TAG tagScript, OPENTYPE_TAG tagLangSys, int *rcRangeChars, TEXTRANGE_PROPERTIES **rpRangeProperties, int cRanges, const WCHAR *pwcChars, int cChars, int cMaxGlyphs, WORD *pwLogClust, SCRIPT_CHARPROP *pCharProps, WORD *pwOutGlyphs, SCRIPT_GLYPHPROP *pOutGlyphProps, int *pcGlyphs);", "ScriptPlaceOpenType": "HRESULT WINAPI ScriptPlaceOpenType (HDC hdc, SCRIPT_CACHE *psc, SCRIPT_ANALYSIS *psa, OPENTYPE_TAG tagScript, OPENTYPE_TAG tagLangSys, int *rcRangeChars, TEXTRANGE_PROPERTIES **rpRangeProperties, int cRanges, const WCHAR *pwcChars, WORD *pwLogClust, SCRIPT_CHARPROP *pCharProps, int cChars, const WORD *pwGlyphs, const SCRIPT_GLYPHPROP *pGlyphProps, int cGlyphs, int *piAdvance, GOFFSET *pGoffset, ABC *pABC);", "ScriptItemizeOpenType": "HRESULT WINAPI ScriptItemizeOpenType (const WCHAR *pwcInChars, int cInChars, int cMaxItems, const SCRIPT_CONTROL *psControl, const SCRIPT_STATE *psState, SCRIPT_ITEM *pItems, OPENTYPE_TAG *pScriptTags, int *pcItems);", "ScriptGetFontScriptTags": "HRESULT WINAPI ScriptGetFontScriptTags (HDC hdc, SCRIPT_CACHE *psc, SCRIPT_ANALYSIS *psa, int cMaxTags, OPENTYPE_TAG *pScriptTags, int *pcTags);", "ScriptGetFontLanguageTags": "HRESULT WINAPI ScriptGetFontLanguageTags (HDC hdc, SCRIPT_CACHE *psc, SCRIPT_ANALYSIS *psa, OPENTYPE_TAG tagScript, int cMaxTags, OPENTYPE_TAG *pLangsysTags, int *pcTags);", "ScriptGetFontFeatureTags": "HRESULT WINAPI ScriptGetFontFeatureTags (HDC hdc, SCRIPT_CACHE *psc, SCRIPT_ANALYSIS *psa, OPENTYPE_TAG tagScript, OPENTYPE_TAG tagLangSys, int cMaxTags, OPENTYPE_TAG *pFeatureTags, int *pcTags);", "ScriptGetFontAlternateGlyphs": "HRESULT WINAPI ScriptGetFontAlternateGlyphs (HDC hdc, SCRIPT_CACHE *psc, SCRIPT_ANALYSIS *psa, OPENTYPE_TAG tagScript, OPENTYPE_TAG tagLangSys, OPENTYPE_TAG tagFeature, WORD wGlyphId, int cMaxAlternates, WORD *pAlternateGlyphs, int *pcAlternates);", "ScriptSubstituteSingleGlyph": "HRESULT WINAPI ScriptSubstituteSingleGlyph (HDC hdc, SCRIPT_CACHE *psc, SCRIPT_ANALYSIS *psa, OPENTYPE_TAG tagScript, OPENTYPE_TAG tagLangSys, OPENTYPE_TAG tagFeature, LONG lParameter, WORD wGlyphId, WORD *pwOutGlyphId);", "ScriptPositionSingleGlyph": "HRESULT WINAPI ScriptPositionSingleGlyph (HDC hdc, SCRIPT_CACHE *psc, SCRIPT_ANALYSIS *psa, OPENTYPE_TAG tagScript, OPENTYPE_TAG tagLangSys, OPENTYPE_TAG tagFeature, LONG lParameter, WORD wGlyphId, int iAdvance, GOFFSET GOffset, int *piOutAdvance, GOFFSET *pOutGoffset);", "D3DXCreateEffectPool": "HRESULT WINAPI D3DXCreateEffectPool(ID3DXEffectPool **pool);", "D3DXCreateEffect": "HRESULT WINAPI D3DXCreateEffect(struct IDirect3DDevice9 *device, const void *srcdata, UINT srcdatalen,", "D3DXCreateEffectEx": "HRESULT WINAPI D3DXCreateEffectEx(struct IDirect3DDevice9 *device, const void *srcdata, UINT srcdatalen,", "D3DXCreateEffectCompiler": "HRESULT WINAPI D3DXCreateEffectCompiler(const char *srcdata, UINT srcdatalen, const D3DXMACRO *defines,", "D3DXCreateEffectFromFileExA": "HRESULT WINAPI D3DXCreateEffectFromFileExA(struct IDirect3DDevice9 *device, const char *srcfile,", "D3DXCreateEffectFromFileExW": "HRESULT WINAPI D3DXCreateEffectFromFileExW(struct IDirect3DDevice9 *device, const WCHAR *srcfile,", "D3DXCreateEffectFromFileA": "HRESULT WINAPI D3DXCreateEffectFromFileA(struct IDirect3DDevice9 *device, const char *srcfile,", "D3DXCreateEffectFromFileW": "HRESULT WINAPI D3DXCreateEffectFromFileW(struct IDirect3DDevice9 *device, const WCHAR *srcfile,", "D3DXCreateEffectFromResourceExA": "HRESULT WINAPI D3DXCreateEffectFromResourceExA(struct IDirect3DDevice9 *device, HMODULE srcmodule,", "D3DXCreateEffectFromResourceExW": "HRESULT WINAPI D3DXCreateEffectFromResourceExW(struct IDirect3DDevice9 *device, HMODULE srcmodule,", "D3DXCreateEffectFromResourceA": "HRESULT WINAPI D3DXCreateEffectFromResourceA(struct IDirect3DDevice9 *device, HMODULE srcmodule,", "D3DXCreateEffectFromResourceW": "HRESULT WINAPI D3DXCreateEffectFromResourceW(struct IDirect3DDevice9 *device, HMODULE srcmodule,", "D3DXCreateEffectCompilerFromFileA": "HRESULT WINAPI D3DXCreateEffectCompilerFromFileA(const char *srcfile, const D3DXMACRO *defines,", "D3DXCreateEffectCompilerFromFileW": "HRESULT WINAPI D3DXCreateEffectCompilerFromFileW(const WCHAR *srcfile, const D3DXMACRO *defines,", "D3DXCreateEffectCompilerFromResourceA": "HRESULT WINAPI D3DXCreateEffectCompilerFromResourceA(HMODULE srcmodule, const char *srcresource,", "D3DXCreateEffectCompilerFromResourceW": "HRESULT WINAPI D3DXCreateEffectCompilerFromResourceW(HMODULE srcmodule, const WCHAR *srcresource,", "D3DXDisassembleEffect": "HRESULT WINAPI D3DXDisassembleEffect(ID3DXEffect *effect, WINBOOL enable_color_code, ID3DXBuffer **disassembly);", "RtmRegisterClient": "HANDLE WINAPI RtmRegisterClient(DWORD ProtocolFamily,DWORD RoutingProtocol,HANDLE ChangeEvent,DWORD Flags);", "RtmDeregisterClient": "DWORD WINAPI RtmDeregisterClient(HANDLE ClientHandle);", "RtmDequeueRouteChangeMessage": "DWORD WINAPI RtmDequeueRouteChangeMessage(HANDLE ClientHandle,DWORD *Flags,PVOID CurBestRoute,PVOID PrevBestRoute);", "RtmAddRoute": "DWORD WINAPI RtmAddRoute(HANDLE ClientHandle,PVOID Route,DWORD TimeToLive,DWORD *Flags,PVOID CurBestRoute,PVOID PrevBestRoute);", "RtmDeleteRoute": "DWORD WINAPI RtmDeleteRoute(HANDLE ClientHandle,PVOID Route,DWORD *Flags,PVOID CurBestRoute);", "RtmIsRoute": "WINBOOL WINAPI RtmIsRoute(DWORD ProtocolFamily,PVOID Network,PVOID BestRoute);", "RtmGetNetworkCount": "ULONG WINAPI RtmGetNetworkCount(DWORD ProtocolFamily);", "RtmGetRouteAge": "ULONG WINAPI RtmGetRouteAge(PVOID Route);", "RtmCreateEnumerationHandle": "HANDLE WINAPI RtmCreateEnumerationHandle(DWORD ProtocolFamily,DWORD EnumerationFlags,PVOID CriteriaRoute);", "RtmEnumerateGetNextRoute": "DWORD WINAPI RtmEnumerateGetNextRoute(HANDLE EnumerationHandle,PVOID Route);", "RtmCloseEnumerationHandle": "DWORD WINAPI RtmCloseEnumerationHandle(HANDLE EnumerationHandle);", "RtmBlockDeleteRoutes": "DWORD WINAPI RtmBlockDeleteRoutes(HANDLE ClientHandle,DWORD EnumerationFlags,PVOID CriteriaRoute);", "RtmGetFirstRoute": "DWORD WINAPI RtmGetFirstRoute(DWORD ProtocolFamily,DWORD EnumerationFlags,PVOID Route);", "RtmGetNextRoute": "DWORD WINAPI RtmGetNextRoute(DWORD ProtocolFamily,DWORD EnumerationFlags,PVOID Route);", "RtmLookupIPDestination": "WINBOOL WINAPI RtmLookupIPDestination(DWORD dwDestAddr,PRTM_IP_ROUTE prir);", "GetOverlappedResult": "WINBASEAPI WINBOOL WINAPI GetOverlappedResult (HANDLE hFile, LPOVERLAPPED lpOverlapped, LPDWORD lpNumberOfBytesTransferred, WINBOOL bWait);", "CreateIoCompletionPort": "WINBASEAPI HANDLE WINAPI CreateIoCompletionPort (HANDLE FileHandle, HANDLE ExistingCompletionPort, ULONG_PTR CompletionKey, DWORD NumberOfConcurrentThreads);", "GetQueuedCompletionStatus": "WINBASEAPI WINBOOL WINAPI GetQueuedCompletionStatus (HANDLE CompletionPort, LPDWORD lpNumberOfBytesTransferred, PULONG_PTR lpCompletionKey, LPOVERLAPPED *lpOverlapped, DWORD dwMilliseconds);", "PostQueuedCompletionStatus": "WINBASEAPI WINBOOL WINAPI PostQueuedCompletionStatus (HANDLE CompletionPort, DWORD dwNumberOfBytesTransferred, ULONG_PTR dwCompletionKey, LPOVERLAPPED lpOverlapped);", "DeviceIoControl": "WINBASEAPI WINBOOL WINAPI DeviceIoControl (HANDLE hDevice, DWORD dwIoControlCode, LPVOID lpInBuffer, DWORD nInBufferSize, LPVOID lpOutBuffer, DWORD nOutBufferSize, LPDWORD lpBytesReturned, LPOVERLAPPED lpOverlapped);", "CancelIo": "WINBASEAPI WINBOOL WINAPI CancelIo (HANDLE hFile);", "GetOverlappedResultEx": "WINBASEAPI WINBOOL WINAPI GetOverlappedResultEx (HANDLE hFile, LPOVERLAPPED lpOverlapped, LPDWORD lpNumberOfBytesTransferred, DWORD dwMilliseconds, WINBOOL bAlertable);", "GetQueuedCompletionStatusEx": "WINBASEAPI WINBOOL WINAPI GetQueuedCompletionStatusEx (HANDLE CompletionPort, LPOVERLAPPED_ENTRY lpCompletionPortEntries, ULONG ulCount, PULONG ulNumEntriesRemoved, DWORD dwMilliseconds, WINBOOL fAlertable);", "CancelIoEx": "WINBASEAPI WINBOOL WINAPI CancelIoEx (HANDLE hFile, LPOVERLAPPED lpOverlapped);", "CancelSynchronousIo": "WINBASEAPI WINBOOL WINAPI CancelSynchronousIo (HANDLE hThread);", "EcClose": "WINBOOL WINAPI EcClose(", "EcDeleteSubscription": "WINBOOL WINAPI EcDeleteSubscription(", "EcEnumNextSubscription": "WINBOOL WINAPI EcEnumNextSubscription(", "EcGetObjectArrayProperty": "WINBOOL WINAPI EcGetObjectArrayProperty(", "EcGetObjectArraySize": "WINBOOL WINAPI EcGetObjectArraySize(", "EcGetSubscriptionProperty": "WINBOOL WINAPI EcGetSubscriptionProperty(", "EcGetSubscriptionRunTimeStatus": "WINBOOL WINAPI EcGetSubscriptionRunTimeStatus(", "EcInsertObjectArrayElement": "WINBOOL WINAPI EcInsertObjectArrayElement(", "EcOpenSubscription": "EC_HANDLE WINAPI EcOpenSubscription(", "EcOpenSubscriptionEnum": "EC_HANDLE WINAPI EcOpenSubscriptionEnum(", "EcRemoveObjectArrayElement": "WINBOOL WINAPI EcRemoveObjectArrayElement(", "EcRetrySubscription": "WINBOOL WINAPI EcRetrySubscription(", "EcSaveSubscription": "WINBOOL WINAPI EcSaveSubscription(", "EcSetObjectArrayProperty": "WINBOOL WINAPI EcSetObjectArrayProperty(", "EcSetSubscriptionProperty": "WINBOOL WINAPI EcSetSubscriptionProperty(", "NetServiceControl": "NET_API_STATUS WINAPI NetServiceControl(LPCWSTR servername,LPCWSTR service,DWORD opcode,DWORD arg,LPBYTE *bufptr);", "NetServiceEnum": "NET_API_STATUS WINAPI NetServiceEnum(LPCWSTR servername,DWORD level,LPBYTE *bufptr,DWORD prefmaxlen,LPDWORD entriesread,LPDWORD totalentries,LPDWORD resume_handle);", "NetServiceGetInfo": "NET_API_STATUS WINAPI NetServiceGetInfo(LPCWSTR servername,LPCWSTR service,DWORD level,LPBYTE *bufptr);", "NetServiceInstall": "NET_API_STATUS WINAPI NetServiceInstall(LPCWSTR servername,LPCWSTR service,DWORD argc,LPCWSTR argv[],LPBYTE *bufptr);", "GetVDMPointer32W": "DWORD WINAPI GetVDMPointer32W(LPVOID vp,UINT fMode);", "LoadLibraryEx32W": "DWORD WINAPI LoadLibraryEx32W(LPCSTR lpszLibFile,DWORD hFile,DWORD dwFlags);", "GetProcAddress32W": "DWORD WINAPI GetProcAddress32W(DWORD hModule,LPCSTR lpszProc);", "FreeLibrary32W": "DWORD WINAPI FreeLibrary32W(DWORD hLibModule);", "WHvGetCapability": "HRESULT WINAPI WHvGetCapability(WHV_CAPABILITY_CODE CapabilityCode, VOID *CapabilityBuffer, UINT32 CapabilityBufferSizeInBytes, UINT32 *WrittenSizeInBytes);", "WHvCreatePartition": "HRESULT WINAPI WHvCreatePartition(WHV_PARTITION_HANDLE *Partition);", "WHvSetupPartition": "HRESULT WINAPI WHvSetupPartition(WHV_PARTITION_HANDLE Partition);", "WHvResetPartition": "HRESULT WINAPI WHvResetPartition(WHV_PARTITION_HANDLE Partition);", "WHvDeletePartition": "HRESULT WINAPI WHvDeletePartition(WHV_PARTITION_HANDLE Partition);", "WHvGetPartitionProperty": "HRESULT WINAPI WHvGetPartitionProperty(WHV_PARTITION_HANDLE Partition, WHV_PARTITION_PROPERTY_CODE PropertyCode, VOID *PropertyBuffer, UINT32 PropertyBufferSizeInBytes, UINT32 *WrittenSizeInBytes);", "WHvSetPartitionProperty": "HRESULT WINAPI WHvSetPartitionProperty(WHV_PARTITION_HANDLE Partition, WHV_PARTITION_PROPERTY_CODE PropertyCode, const VOID *PropertyBuffer, UINT32 PropertyBufferSizeInBytes);", "WHvSuspendPartitionTime": "HRESULT WINAPI WHvSuspendPartitionTime(WHV_PARTITION_HANDLE Partition);", "WHvResumePartitionTime": "HRESULT WINAPI WHvResumePartitionTime(WHV_PARTITION_HANDLE Partition);", "WHvMapGpaRange": "HRESULT WINAPI WHvMapGpaRange(WHV_PARTITION_HANDLE Partition, VOID *SourceAddress, WHV_GUEST_PHYSICAL_ADDRESS GuestAddress, UINT64 SizeInBytes, WHV_MAP_GPA_RANGE_FLAGS Flags);", "WHvMapGpaRange2": "HRESULT WINAPI WHvMapGpaRange2(WHV_PARTITION_HANDLE Partition, HANDLE Process, VOID *SourceAddress, WHV_GUEST_PHYSICAL_ADDRESS GuestAddress, UINT64 SizeInBytes, WHV_MAP_GPA_RANGE_FLAGS Flags);", "WHvUnmapGpaRange": "HRESULT WINAPI WHvUnmapGpaRange(WHV_PARTITION_HANDLE Partition, WHV_GUEST_PHYSICAL_ADDRESS GuestAddress, UINT64 SizeInBytes);", "WHvTranslateGva": "HRESULT WINAPI WHvTranslateGva(WHV_PARTITION_HANDLE Partition, UINT32 VpIndex, WHV_GUEST_VIRTUAL_ADDRESS Gva, WHV_TRANSLATE_GVA_FLAGS TranslateFlags, WHV_TRANSLATE_GVA_RESULT *TranslationResult, WHV_GUEST_PHYSICAL_ADDRESS *Gpa);", "WHvCreateVirtualProcessor": "HRESULT WINAPI WHvCreateVirtualProcessor(WHV_PARTITION_HANDLE Partition, UINT32 VpIndex, UINT32 Flags);", "WHvCreateVirtualProcessor2": "HRESULT WINAPI WHvCreateVirtualProcessor2(WHV_PARTITION_HANDLE Partition, UINT32 VpIndex, const WHV_VIRTUAL_PROCESSOR_PROPERTY *Properties, UINT32 PropertyCount);", "WHvDeleteVirtualProcessor": "HRESULT WINAPI WHvDeleteVirtualProcessor(WHV_PARTITION_HANDLE Partition, UINT32 VpIndex);", "WHvRunVirtualProcessor": "HRESULT WINAPI WHvRunVirtualProcessor(WHV_PARTITION_HANDLE Partition, UINT32 VpIndex, VOID *ExitContext, UINT32 ExitContextSizeInBytes);", "WHvCancelRunVirtualProcessor": "HRESULT WINAPI WHvCancelRunVirtualProcessor(WHV_PARTITION_HANDLE Partition, UINT32 VpIndex, UINT32 Flags);", "WHvGetVirtualProcessorRegisters": "HRESULT WINAPI WHvGetVirtualProcessorRegisters(WHV_PARTITION_HANDLE Partition, UINT32 VpIndex, const WHV_REGISTER_NAME *RegisterNames, UINT32 RegisterCount, WHV_REGISTER_VALUE *RegisterValues);", "WHvSetVirtualProcessorRegisters": "HRESULT WINAPI WHvSetVirtualProcessorRegisters(WHV_PARTITION_HANDLE Partition, UINT32 VpIndex, const WHV_REGISTER_NAME *RegisterNames, UINT32 RegisterCount, const WHV_REGISTER_VALUE *RegisterValues);", "WHvGetVirtualProcessorInterruptControllerState": "HRESULT WINAPI WHvGetVirtualProcessorInterruptControllerState(WHV_PARTITION_HANDLE Partition, UINT32 VpIndex, VOID *State, UINT32 StateSize, UINT32 *WrittenSize);", "WHvSetVirtualProcessorInterruptControllerState": "HRESULT WINAPI WHvSetVirtualProcessorInterruptControllerState(WHV_PARTITION_HANDLE Partition, UINT32 VpIndex, const VOID *State, UINT32 StateSize);", "WHvRequestInterrupt": "HRESULT WINAPI WHvRequestInterrupt(WHV_PARTITION_HANDLE Partition, const WHV_INTERRUPT_CONTROL *Interrupt, UINT32 InterruptControlSize);", "WHvGetVirtualProcessorXsaveState": "HRESULT WINAPI WHvGetVirtualProcessorXsaveState(WHV_PARTITION_HANDLE Partition, UINT32 VpIndex, VOID *Buffer, UINT32 BufferSizeInBytes, UINT32 *BytesWritten);", "WHvSetVirtualProcessorXsaveState": "HRESULT WINAPI WHvSetVirtualProcessorXsaveState(WHV_PARTITION_HANDLE Partition, UINT32 VpIndex, const VOID *Buffer, UINT32 BufferSizeInBytes);", "WHvQueryGpaRangeDirtyBitmap": "HRESULT WINAPI WHvQueryGpaRangeDirtyBitmap(WHV_PARTITION_HANDLE Partition, WHV_GUEST_PHYSICAL_ADDRESS GuestAddress, UINT64 RangeSizeInBytes, UINT64 *Bitmap, UINT32 BitmapSizeInBytes);", "WHvGetPartitionCounters": "HRESULT WINAPI WHvGetPartitionCounters(WHV_PARTITION_HANDLE Partition, WHV_PARTITION_COUNTER_SET CounterSet, VOID *Buffer, UINT32 BufferSizeInBytes, UINT32 *BytesWritten);", "WHvGetVirtualProcessorCounters": "HRESULT WINAPI WHvGetVirtualProcessorCounters(WHV_PARTITION_HANDLE Partition, UINT32 VpIndex, WHV_PROCESSOR_COUNTER_SET CounterSet, VOID *Buffer, UINT32 BufferSizeInBytes, UINT32 *BytesWritten);", "WHvGetVirtualProcessorInterruptControllerState2": "HRESULT WINAPI WHvGetVirtualProcessorInterruptControllerState2(WHV_PARTITION_HANDLE Partition, UINT32 VpIndex, VOID *State, UINT32 StateSize, UINT32 *WrittenSize);", "WHvSetVirtualProcessorInterruptControllerState2": "HRESULT WINAPI WHvSetVirtualProcessorInterruptControllerState2(WHV_PARTITION_HANDLE Partition, UINT32 VpIndex, const VOID *State, UINT32 StateSize);", "WHvRegisterPartitionDoorbellEvent": "HRESULT WINAPI WHvRegisterPartitionDoorbellEvent(WHV_PARTITION_HANDLE Partition, const WHV_DOORBELL_MATCH_DATA *MatchData, HANDLE EventHandle);", "WHvUnregisterPartitionDoorbellEvent": "HRESULT WINAPI WHvUnregisterPartitionDoorbellEvent(WHV_PARTITION_HANDLE Partition, const WHV_DOORBELL_MATCH_DATA *MatchData);", "WHvAdviseGpaRange": "HRESULT WINAPI WHvAdviseGpaRange(WHV_PARTITION_HANDLE Partition, const WHV_MEMORY_RANGE_ENTRY *GpaRanges, UINT32 GpaRangesCount, WHV_ADVISE_GPA_RANGE_CODE Advice, const VOID *AdviceBuffer, UINT32 AdviceBufferSizeInBytes);", "WHvReadGpaRange": "HRESULT WINAPI WHvReadGpaRange(WHV_PARTITION_HANDLE Partition, UINT32 VpIndex, WHV_GUEST_PHYSICAL_ADDRESS GuestAddress, WHV_ACCESS_GPA_CONTROLS Controls, PVOID Data, UINT32 DataSizeInBytes);", "WHvWriteGpaRange": "HRESULT WINAPI WHvWriteGpaRange(WHV_PARTITION_HANDLE Partition, UINT32 VpIndex, WHV_GUEST_PHYSICAL_ADDRESS GuestAddress, WHV_ACCESS_GPA_CONTROLS Controls, const VOID *Data, UINT32 DataSizeInBytes);", "WHvSignalVirtualProcessorSynicEvent": "HRESULT WINAPI WHvSignalVirtualProcessorSynicEvent(WHV_PARTITION_HANDLE Partition, WHV_SYNIC_EVENT_PARAMETERS SynicEvent, WINBOOL *NewlySignaled);", "WHvGetVirtualProcessorState": "HRESULT WINAPI WHvGetVirtualProcessorState(WHV_PARTITION_HANDLE Partition, UINT32 VpIndex, WHV_VIRTUAL_PROCESSOR_STATE_TYPE StateType, VOID *Buffer, UINT32 BufferSizeInBytes, UINT32 *BytesWritten);", "WHvSetVirtualProcessorState": "HRESULT WINAPI WHvSetVirtualProcessorState(WHV_PARTITION_HANDLE Partition, UINT32 VpIndex, WHV_VIRTUAL_PROCESSOR_STATE_TYPE StateType, const VOID *Buffer, UINT32 BufferSizeInBytes);", "WHvAllocateVpciResource": "HRESULT WINAPI WHvAllocateVpciResource(const GUID *ProviderId, WHV_ALLOCATE_VPCI_RESOURCE_FLAGS Flags, const VOID *ResourceDescriptor, UINT32 ResourceDescriptorSizeInBytes, HANDLE *VpciResource);", "WHvCreateVpciDevice": "HRESULT WINAPI WHvCreateVpciDevice(WHV_PARTITION_HANDLE Partition, UINT64 LogicalDeviceId, HANDLE VpciResource, WHV_CREATE_VPCI_DEVICE_FLAGS Flags, HANDLE NotificationEventHandle);", "WHvDeleteVpciDevice": "HRESULT WINAPI WHvDeleteVpciDevice(WHV_PARTITION_HANDLE Partition, UINT64 LogicalDeviceId);", "WHvGetVpciDeviceProperty": "HRESULT WINAPI WHvGetVpciDeviceProperty(WHV_PARTITION_HANDLE Partition, UINT64 LogicalDeviceId, WHV_VPCI_DEVICE_PROPERTY_CODE PropertyCode, VOID *PropertyBuffer, UINT32 PropertyBufferSizeInBytes, UINT32 *WrittenSizeInBytes);", "WHvGetVpciDeviceNotification": "HRESULT WINAPI WHvGetVpciDeviceNotification(WHV_PARTITION_HANDLE Partition, UINT64 LogicalDeviceId, WHV_VPCI_DEVICE_NOTIFICATION *Notification, UINT32 NotificationSizeInBytes);", "WHvMapVpciDeviceMmioRanges": "HRESULT WINAPI WHvMapVpciDeviceMmioRanges(WHV_PARTITION_HANDLE Partition, UINT64 LogicalDeviceId, UINT32 *MappingCount, WHV_VPCI_MMIO_MAPPING **Mappings);", "WHvUnmapVpciDeviceMmioRanges": "HRESULT WINAPI WHvUnmapVpciDeviceMmioRanges(WHV_PARTITION_HANDLE Partition, UINT64 LogicalDeviceId);", "WHvSetVpciDevicePowerState": "HRESULT WINAPI WHvSetVpciDevicePowerState(WHV_PARTITION_HANDLE Partition, UINT64 LogicalDeviceId, DEVICE_POWER_STATE PowerState);", "WHvReadVpciDeviceRegister": "HRESULT WINAPI WHvReadVpciDeviceRegister(WHV_PARTITION_HANDLE Partition, UINT64 LogicalDeviceId, const WHV_VPCI_DEVICE_REGISTER *Register, VOID *Data);", "WHvWriteVpciDeviceRegister": "HRESULT WINAPI WHvWriteVpciDeviceRegister(WHV_PARTITION_HANDLE Partition, UINT64 LogicalDeviceId, const WHV_VPCI_DEVICE_REGISTER *Register, const VOID *Data);", "WHvMapVpciDeviceInterrupt": "HRESULT WINAPI WHvMapVpciDeviceInterrupt(WHV_PARTITION_HANDLE Partition, UINT64 LogicalDeviceId, UINT32 Index, UINT32 MessageCount, const WHV_VPCI_INTERRUPT_TARGET *Target, UINT64 *MsiAddress, UINT32 *MsiData);", "WHvUnmapVpciDeviceInterrupt": "HRESULT WINAPI WHvUnmapVpciDeviceInterrupt(WHV_PARTITION_HANDLE Partition, UINT64 LogicalDeviceId, UINT32 Index);", "WHvRetargetVpciDeviceInterrupt": "HRESULT WINAPI WHvRetargetVpciDeviceInterrupt(WHV_PARTITION_HANDLE Partition, UINT64 LogicalDeviceId, UINT64 MsiAddress, UINT32 MsiData, const WHV_VPCI_INTERRUPT_TARGET *Target);", "WHvRequestVpciDeviceInterrupt": "HRESULT WINAPI WHvRequestVpciDeviceInterrupt(WHV_PARTITION_HANDLE Partition, UINT64 LogicalDeviceId, UINT64 MsiAddress, UINT32 MsiData);", "WHvGetVpciDeviceInterruptTarget": "HRESULT WINAPI WHvGetVpciDeviceInterruptTarget(WHV_PARTITION_HANDLE Partition, UINT64 LogicalDeviceId, UINT32 Index, UINT32 MultiMessageNumber, WHV_VPCI_INTERRUPT_TARGET *Target, UINT32 TargetSizeInBytes, UINT32 *BytesWritten);", "WHvCreateTrigger": "HRESULT WINAPI WHvCreateTrigger(WHV_PARTITION_HANDLE Partition, const WHV_TRIGGER_PARAMETERS *Parameters, WHV_TRIGGER_HANDLE *TriggerHandle, HANDLE *EventHandle);", "WHvUpdateTriggerParameters": "HRESULT WINAPI WHvUpdateTriggerParameters(WHV_PARTITION_HANDLE Partition, const WHV_TRIGGER_PARAMETERS *Parameters, WHV_TRIGGER_HANDLE TriggerHandle);", "WHvDeleteTrigger": "HRESULT WINAPI WHvDeleteTrigger(WHV_PARTITION_HANDLE Partition, WHV_TRIGGER_HANDLE TriggerHandle);", "WHvCreateNotificationPort": "HRESULT WINAPI WHvCreateNotificationPort(WHV_PARTITION_HANDLE Partition, const WHV_NOTIFICATION_PORT_PARAMETERS *Parameters, HANDLE EventHandle, WHV_NOTIFICATION_PORT_HANDLE *PortHandle);", "WHvSetNotificationPortProperty": "HRESULT WINAPI WHvSetNotificationPortProperty(WHV_PARTITION_HANDLE Partition, WHV_NOTIFICATION_PORT_HANDLE PortHandle, WHV_NOTIFICATION_PORT_PROPERTY_CODE PropertyCode, WHV_NOTIFICATION_PORT_PROPERTY PropertyValue);", "WHvDeleteNotificationPort": "HRESULT WINAPI WHvDeleteNotificationPort(WHV_PARTITION_HANDLE Partition, WHV_NOTIFICATION_PORT_HANDLE PortHandle);", "WHvPostVirtualProcessorSynicMessage": "HRESULT WINAPI WHvPostVirtualProcessorSynicMessage(WHV_PARTITION_HANDLE Partition, UINT32 VpIndex, UINT32 SintIndex, const VOID *Message, UINT32 MessageSizeInBytes);", "WHvGetVirtualProcessorCpuidOutput": "HRESULT WINAPI WHvGetVirtualProcessorCpuidOutput(WHV_PARTITION_HANDLE Partition, UINT32 VpIndex, UINT32 Eax, UINT32 Ecx, WHV_CPUID_OUTPUT *CpuidOutput);", "WHvGetInterruptTargetVpSet": "HRESULT WINAPI WHvGetInterruptTargetVpSet(WHV_PARTITION_HANDLE Partition, UINT64 Destination, WHV_INTERRUPT_DESTINATION_MODE DestinationMode, UINT32 *TargetVps, UINT32 VpCount, UINT32 *TargetVpCount);", "WHvStartPartitionMigration": "HRESULT WINAPI WHvStartPartitionMigration(WHV_PARTITION_HANDLE Partition, HANDLE *MigrationHandle);", "WHvAcceptPartitionMigration": "HRESULT WINAPI WHvAcceptPartitionMigration(HANDLE MigrationHandle, WHV_PARTITION_HANDLE *Partition);", "CreateTimerQueueTimer": "WINBASEAPI WINBOOL WINAPI CreateTimerQueueTimer (PHANDLE phNewTimer, HANDLE TimerQueue, WAITORTIMERCALLBACK Callback, PVOID Parameter, DWORD DueTime, DWORD Period, ULONG Flags);", "DeleteTimerQueueTimer": "WINBASEAPI WINBOOL WINAPI DeleteTimerQueueTimer (HANDLE TimerQueue, HANDLE Timer, HANDLE CompletionEvent);", "QueueUserWorkItem": "WINBASEAPI WINBOOL WINAPI QueueUserWorkItem (LPTHREAD_START_ROUTINE Function, PVOID Context, ULONG Flags);", "UnregisterWaitEx": "WINBASEAPI WINBOOL WINAPI UnregisterWaitEx (HANDLE WaitHandle, HANDLE CompletionEvent);", "CreateTimerQueue": "WINBASEAPI HANDLE WINAPI CreateTimerQueue (VOID);", "ChangeTimerQueueTimer": "WINBASEAPI WINBOOL WINAPI ChangeTimerQueueTimer (HANDLE TimerQueue, HANDLE Timer, ULONG DueTime, ULONG Period);", "DeleteTimerQueueEx": "WINBASEAPI WINBOOL WINAPI DeleteTimerQueueEx (HANDLE TimerQueue, HANDLE CompletionEvent);", "EnumProtocolsA": "INT WINAPI EnumProtocolsA(LPINT lpiProtocols,LPVOID lpProtocolBuffer,LPDWORD lpdwBufferLength);", "EnumProtocolsW": "INT WINAPI EnumProtocolsW(LPINT lpiProtocols,LPVOID lpProtocolBuffer,LPDWORD lpdwBufferLength);", "GetAddressByNameA": "INT WINAPI GetAddressByNameA(DWORD dwNameSpace,LPGUID lpServiceType,LPSTR lpServiceName,LPINT lpiProtocols,DWORD dwResolution,LPSERVICE_ASYNC_INFO lpServiceAsyncInfo,LPVOID lpCsaddrBuffer,LPDWORD lpdwBufferLength,LPSTR lpAliasBuffer,LPDWORD lpdwAliasBufferLength);", "GetAddressByNameW": "INT WINAPI GetAddressByNameW(DWORD dwNameSpace,LPGUID lpServiceType,LPWSTR lpServiceName,LPINT lpiProtocols,DWORD dwResolution,LPSERVICE_ASYNC_INFO lpServiceAsyncInfo,LPVOID lpCsaddrBuffer,LPDWORD lpdwBufferLength,LPWSTR lpAliasBuffer,LPDWORD lpdwAliasBufferLength);", "GetTypeByNameA": "INT WINAPI GetTypeByNameA(LPSTR lpServiceName,LPGUID lpServiceType);", "GetTypeByNameW": "INT WINAPI GetTypeByNameW(LPWSTR lpServiceName,LPGUID lpServiceType);", "GetNameByTypeA": "INT WINAPI GetNameByTypeA(LPGUID lpServiceType,LPSTR lpServiceName,DWORD dwNameLength);", "GetNameByTypeW": "INT WINAPI GetNameByTypeW(LPGUID lpServiceType,LPWSTR lpServiceName,DWORD dwNameLength);", "SetServiceA": "INT WINAPI SetServiceA(DWORD dwNameSpace,DWORD dwOperation,DWORD dwFlags,LPSERVICE_INFOA lpServiceInfo,LPSERVICE_ASYNC_INFO lpServiceAsyncInfo,LPDWORD lpdwStatusFlags);", "SetServiceW": "INT WINAPI SetServiceW(DWORD dwNameSpace,DWORD dwOperation,DWORD dwFlags,LPSERVICE_INFOW lpServiceInfo,LPSERVICE_ASYNC_INFO lpServiceAsyncInfo,LPDWORD lpdwStatusFlags);", "GetServiceA": "INT WINAPI GetServiceA(DWORD dwNameSpace,LPGUID lpGuid,LPSTR lpServiceName,DWORD dwProperties,LPVOID lpBuffer,LPDWORD lpdwBufferSize,LPSERVICE_ASYNC_INFO lpServiceAsyncInfo);", "GetServiceW": "INT WINAPI GetServiceW(DWORD dwNameSpace,LPGUID lpGuid,LPWSTR lpServiceName,DWORD dwProperties,LPVOID lpBuffer,LPDWORD lpdwBufferSize,LPSERVICE_ASYNC_INFO lpServiceAsyncInfo);", "CryptUIDlgViewContext": "WINBOOL WINAPI CryptUIDlgViewContext(DWORD dwContextType,const void *pvContext,HWND hwnd,LPCWSTR pwszTitle,DWORD dwFlags,void *pvReserved);", "CryptUIDlgSelectCertificateFromStore": "PCCERT_CONTEXT WINAPI CryptUIDlgSelectCertificateFromStore(HCERTSTORE hCertStore,HWND hwnd,LPCWSTR pwszTitle,LPCWSTR pwszDisplayString,DWORD dwDontUseColumn,DWORD dwFlags,void *pvReserved);", "CryptUIDlgCertMgr": "WINBOOL WINAPI CryptUIDlgCertMgr(PCCRYPTUI_CERT_MGR_STRUCT pCryptUICertMgr);", "CryptUIWizDigitalSign": "WINBOOL WINAPI CryptUIWizDigitalSign(DWORD dwFlags,HWND hwndParent,LPCWSTR pwszWizardTitle,PCCRYPTUI_WIZ_DIGITAL_SIGN_INFO pDigitalSignInfo,PCCRYPTUI_WIZ_DIGITAL_SIGN_CONTEXT *ppSignContext);", "CryptUIWizFreeDigitalSignContext": "WINBOOL WINAPI CryptUIWizFreeDigitalSignContext(PCCRYPTUI_WIZ_DIGITAL_SIGN_CONTEXT pSignContext);", "CryptUIDlgViewCertificateW": "WINBOOL WINAPI CryptUIDlgViewCertificateW(PCCRYPTUI_VIEWCERTIFICATE_STRUCTW pCertViewInfo,WINBOOL *pfPropertiesChanged);", "CryptUIDlgViewCertificateA": "WINBOOL WINAPI CryptUIDlgViewCertificateA(PCCRYPTUI_VIEWCERTIFICATE_STRUCTA pCertViewInfo,WINBOOL *pfPropertiesChanged);", "CryptUIWizExport": "WINBOOL WINAPI CryptUIWizExport(DWORD dwFlags,HWND hwndParent,LPCWSTR pwszWizardTitle,PCCRYPTUI_WIZ_EXPORT_INFO pExportInfo,void *pvoid);", "CryptUIWizImport": "WINBOOL WINAPI CryptUIWizImport(DWORD dwFlags,HWND hwndParent,LPCWSTR pwszWizardTitle,PCCRYPTUI_WIZ_IMPORT_SRC_INFO pImportSrc,HCERTSTORE hDestCertStore);", "EncodePointer": "WINBASEAPI PVOID WINAPI EncodePointer (PVOID Ptr);", "DecodePointer": "WINBASEAPI PVOID WINAPI DecodePointer (PVOID Ptr);", "EncodeSystemPointer": "WINBASEAPI PVOID WINAPI EncodeSystemPointer (PVOID Ptr);", "DecodeSystemPointer": "WINBASEAPI PVOID WINAPI DecodeSystemPointer (PVOID Ptr);", "Beep": "WINBASEAPI WINBOOL WINAPI Beep (DWORD dwFreq, DWORD dwDuration);", "sndPlaySoundA": "WINMMAPI WINBOOL WINAPI sndPlaySoundA(LPCSTR pszSound, UINT fuSound);", "sndPlaySoundW": "WINMMAPI WINBOOL WINAPI sndPlaySoundW(LPCWSTR pszSound, UINT fuSound);", "PlaySoundA": "WINMMAPI WINBOOL WINAPI PlaySoundA(LPCSTR pszSound, HMODULE hmod, DWORD fdwSound);", "PlaySoundW": "WINMMAPI WINBOOL WINAPI PlaySoundW(LPCWSTR pszSound, HMODULE hmod, DWORD fdwSound);", "DWriteCreateFactory": "HRESULT WINAPI DWriteCreateFactory(DWRITE_FACTORY_TYPE,REFIID,IUnknown**);", "IsValidCodePage": "WINBASEAPI WINBOOL WINAPI IsValidCodePage (UINT CodePage);", "GetACP": "WINBASEAPI UINT WINAPI GetACP (void);", "IsDBCSLeadByte": "WINBASEAPI WINBOOL WINAPI IsDBCSLeadByte (BYTE TestChar);", "IsDBCSLeadByteEx": "WINBASEAPI WINBOOL WINAPI IsDBCSLeadByteEx (UINT CodePage, BYTE TestChar);", "IsNLSDefinedString": "WINBASEAPI WINBOOL WINAPI IsNLSDefinedString (NLS_FUNCTION Function, DWORD dwFlags, LPNLSVERSIONINFO lpVersionInformation, LPCWSTR lpString, INT cchStr);", "GetLocaleInfoW": "WINBASEAPI int WINAPI GetLocaleInfoW (LCID Locale, LCTYPE LCType, LPWSTR lpLCData, int cchData);", "GetLocaleInfoA": "WINBASEAPI int WINAPI GetLocaleInfoA (LCID Locale, LCTYPE LCType, LPSTR lpLCData, int cchData);", "GetOEMCP": "WINBASEAPI UINT WINAPI GetOEMCP (void);", "CompareStringA": "WINBASEAPI int WINAPI CompareStringA (LCID Locale, DWORD dwCmpFlags, PCNZCH lpString1, int cchCount1, PCNZCH lpString2, int cchCount2);", "LCMapStringW": "WINBASEAPI int WINAPI LCMapStringW (LCID Locale, DWORD dwMapFlags, LPCWSTR lpSrcStr, int cchSrc, LPWSTR lpDestStr, int cchDest);", "LCMapStringA": "WINBASEAPI int WINAPI LCMapStringA (LCID Locale, DWORD dwMapFlags, LPCSTR lpSrcStr, int cchSrc, LPSTR lpDestStr, int cchDest);", "GetNumberFormatA": "WINBASEAPI int WINAPI GetNumberFormatA (LCID Locale, DWORD dwFlags, LPCSTR lpValue, CONST NUMBERFMTA *lpFormat, LPSTR lpNumberStr, int cchNumber);", "GetNumberFormatW": "WINBASEAPI int WINAPI GetNumberFormatW (LCID Locale, DWORD dwFlags, LPCWSTR lpValue, CONST NUMBERFMTW *lpFormat, LPWSTR lpNumberStr, int cchNumber);", "GetCurrencyFormatA": "WINBASEAPI int WINAPI GetCurrencyFormatA (LCID Locale, DWORD dwFlags, LPCSTR lpValue, CONST CURRENCYFMTA *lpFormat, LPSTR lpCurrencyStr, int cchCurrency);", "GetCurrencyFormatW": "WINBASEAPI int WINAPI GetCurrencyFormatW (LCID Locale, DWORD dwFlags, LPCWSTR lpValue, CONST CURRENCYFMTW *lpFormat, LPWSTR lpCurrencyStr, int cchCurrency);", "EnumCalendarInfoA": "WINBASEAPI WINBOOL WINAPI EnumCalendarInfoA (CALINFO_ENUMPROCA lpCalInfoEnumProc, LCID Locale, CALID Calendar, CALTYPE CalType);", "EnumCalendarInfoW": "WINBASEAPI WINBOOL WINAPI EnumCalendarInfoW (CALINFO_ENUMPROCW lpCalInfoEnumProc, LCID Locale, CALID Calendar, CALTYPE CalType);", "EnumCalendarInfoExA": "WINBASEAPI WINBOOL WINAPI EnumCalendarInfoExA (CALINFO_ENUMPROCEXA lpCalInfoEnumProcEx, LCID Locale, CALID Calendar, CALTYPE CalType);", "EnumCalendarInfoExW": "WINBASEAPI WINBOOL WINAPI EnumCalendarInfoExW (CALINFO_ENUMPROCEXW lpCalInfoEnumProcEx, LCID Locale, CALID Calendar, CALTYPE CalType);", "EnumTimeFormatsA": "WINBASEAPI WINBOOL WINAPI EnumTimeFormatsA (TIMEFMT_ENUMPROCA lpTimeFmtEnumProc, LCID Locale, DWORD dwFlags);", "EnumTimeFormatsW": "WINBASEAPI WINBOOL WINAPI EnumTimeFormatsW (TIMEFMT_ENUMPROCW lpTimeFmtEnumProc, LCID Locale, DWORD dwFlags);", "EnumDateFormatsA": "WINBASEAPI WINBOOL WINAPI EnumDateFormatsA (DATEFMT_ENUMPROCA lpDateFmtEnumProc, LCID Locale, DWORD dwFlags);", "EnumDateFormatsW": "WINBASEAPI WINBOOL WINAPI EnumDateFormatsW (DATEFMT_ENUMPROCW lpDateFmtEnumProc, LCID Locale, DWORD dwFlags);", "EnumDateFormatsExA": "WINBASEAPI WINBOOL WINAPI EnumDateFormatsExA (DATEFMT_ENUMPROCEXA lpDateFmtEnumProcEx, LCID Locale, DWORD dwFlags);", "EnumDateFormatsExW": "WINBASEAPI WINBOOL WINAPI EnumDateFormatsExW (DATEFMT_ENUMPROCEXW lpDateFmtEnumProcEx, LCID Locale, DWORD dwFlags);", "IsValidLanguageGroup": "WINBASEAPI WINBOOL WINAPI IsValidLanguageGroup (LGRPID LanguageGroup, DWORD dwFlags);", "GetNLSVersion": "WINBASEAPI WINBOOL WINAPI GetNLSVersion (NLS_FUNCTION Function, LCID Locale, LPNLSVERSIONINFO lpVersionInformation);", "IsValidLocale": "WINBASEAPI WINBOOL WINAPI IsValidLocale (LCID Locale, DWORD dwFlags);", "SetLocaleInfoA": "WINBASEAPI WINBOOL WINAPI SetLocaleInfoA (LCID Locale, LCTYPE LCType, LPCSTR lpLCData);", "SetLocaleInfoW": "WINBASEAPI WINBOOL WINAPI SetLocaleInfoW (LCID Locale, LCTYPE LCType, LPCWSTR lpLCData);", "GetCalendarInfoA": "WINBASEAPI int WINAPI GetCalendarInfoA (LCID Locale, CALID Calendar, CALTYPE CalType, LPSTR lpCalData, int cchData, LPDWORD lpValue);", "GetCalendarInfoW": "WINBASEAPI int WINAPI GetCalendarInfoW (LCID Locale, CALID Calendar, CALTYPE CalType, LPWSTR lpCalData, int cchData, LPDWORD lpValue);", "SetCalendarInfoA": "WINBASEAPI WINBOOL WINAPI SetCalendarInfoA (LCID Locale, CALID Calendar, CALTYPE CalType, LPCSTR lpCalData);", "SetCalendarInfoW": "WINBASEAPI WINBOOL WINAPI SetCalendarInfoW (LCID Locale, CALID Calendar, CALTYPE CalType, LPCWSTR lpCalData);", "GetDurationFormat": "WINBASEAPI int WINAPI GetDurationFormat (LCID Locale, DWORD dwFlags, CONST SYSTEMTIME *lpDuration, ULONGLONG ullDuration, LPCWSTR lpFormat, LPWSTR lpDurationStr, int cchDuration);", "FindNLSString": "WINBASEAPI int WINAPI FindNLSString (LCID Locale, DWORD dwFindNLSStringFlags, LPCWSTR lpStringSource, int cchSource, LPCWSTR lpStringValue, int cchValue, LPINT pcchFound);", "LoadStringByReference": "WINBASEAPI WINBOOL WINAPI LoadStringByReference (DWORD Flags, PCWSTR Language, PCWSTR SourceString, PWSTR Buffer, ULONG cchBuffer, PCWSTR Directory, PULONG pcchBufferOut);", "GetGeoInfoA": "WINBASEAPI int WINAPI GetGeoInfoA (GEOID Location, GEOTYPE GeoType, LPSTR lpGeoData, int cchData, LANGID LangId);", "GetGeoInfoW": "WINBASEAPI int WINAPI GetGeoInfoW (GEOID Location, GEOTYPE GeoType, LPWSTR lpGeoData, int cchData, LANGID LangId);", "EnumSystemGeoID": "WINBASEAPI WINBOOL WINAPI EnumSystemGeoID (GEOCLASS GeoClass, GEOID ParentGeoId, GEO_ENUMPROC lpGeoEnumProc);", "GetUserGeoID": "WINBASEAPI GEOID WINAPI GetUserGeoID (GEOCLASS GeoClass);", "GetUserDefaultGeoName": "WINBASEAPI int WINAPI GetUserDefaultGeoName (LPWSTR geoName, int geoNameCount);", "GetCPInfo": "WINBASEAPI WINBOOL WINAPI GetCPInfo (UINT CodePage, LPCPINFO lpCPInfo);", "GetCPInfoExA": "WINBASEAPI WINBOOL WINAPI GetCPInfoExA (UINT CodePage, DWORD dwFlags, LPCPINFOEXA lpCPInfoEx);", "GetCPInfoExW": "WINBASEAPI WINBOOL WINAPI GetCPInfoExW (UINT CodePage, DWORD dwFlags, LPCPINFOEXW lpCPInfoEx);", "LCIDToLocaleName": "WINBASEAPI int WINAPI LCIDToLocaleName (LCID Locale, LPWSTR lpName, int cchName, DWORD dwFlags);", "LocaleNameToLCID": "WINBASEAPI LCID WINAPI LocaleNameToLCID (LPCWSTR lpName, DWORD dwFlags);", "GetGeoInfoEx": "WINBASEAPI int WINAPI GetGeoInfoEx (PWSTR location, GEOTYPE geoType, PWSTR geoData, int geoDataCount);", "SetUserGeoName": "WINBASEAPI WINBOOL WINAPI SetUserGeoName (PWSTR geoName);", "SetUserGeoID": "WINBASEAPI WINBOOL WINAPI SetUserGeoID (GEOID GeoId);", "ConvertDefaultLocale": "WINBASEAPI LCID WINAPI ConvertDefaultLocale (LCID Locale);", "GetThreadLocale": "WINBASEAPI LCID WINAPI GetThreadLocale (void);", "SetThreadLocale": "WINBASEAPI WINBOOL WINAPI SetThreadLocale (LCID Locale);", "GetSystemDefaultUILanguage": "WINBASEAPI LANGID WINAPI GetSystemDefaultUILanguage (void);", "GetSystemDefaultLangID": "WINBASEAPI LANGID WINAPI GetSystemDefaultLangID (void);", "GetSystemDefaultLCID": "WINBASEAPI LCID WINAPI GetSystemDefaultLCID (void);", "GetUserDefaultLCID": "WINBASEAPI LCID WINAPI GetUserDefaultLCID (void);", "SetThreadUILanguage": "WINBASEAPI LANGID WINAPI SetThreadUILanguage (LANGID LangId);", "GetStringTypeA": "WINBASEAPI WINBOOL WINAPI GetStringTypeA (LCID Locale, DWORD dwInfoType, LPCSTR lpSrcStr, int cchSrc, LPWORD lpCharType);", "FoldStringA": "WINBASEAPI int WINAPI FoldStringA (DWORD dwMapFlags, LPCSTR lpSrcStr, int cchSrc, LPSTR lpDestStr, int cchDest);", "EnumSystemLocalesA": "WINBASEAPI WINBOOL WINAPI EnumSystemLocalesA (LOCALE_ENUMPROCA lpLocaleEnumProc, DWORD dwFlags);", "EnumSystemLocalesW": "WINBASEAPI WINBOOL WINAPI EnumSystemLocalesW (LOCALE_ENUMPROCW lpLocaleEnumProc, DWORD dwFlags);", "EnumSystemLanguageGroupsA": "WINBASEAPI WINBOOL WINAPI EnumSystemLanguageGroupsA (LANGUAGEGROUP_ENUMPROCA lpLanguageGroupEnumProc, DWORD dwFlags, LONG_PTR lParam);", "EnumSystemLanguageGroupsW": "WINBASEAPI WINBOOL WINAPI EnumSystemLanguageGroupsW (LANGUAGEGROUP_ENUMPROCW lpLanguageGroupEnumProc, DWORD dwFlags, LONG_PTR lParam);", "EnumLanguageGroupLocalesA": "WINBASEAPI WINBOOL WINAPI EnumLanguageGroupLocalesA (LANGGROUPLOCALE_ENUMPROCA lpLangGroupLocaleEnumProc, LGRPID LanguageGroup, DWORD dwFlags, LONG_PTR lParam);", "EnumLanguageGroupLocalesW": "WINBASEAPI WINBOOL WINAPI EnumLanguageGroupLocalesW (LANGGROUPLOCALE_ENUMPROCW lpLangGroupLocaleEnumProc, LGRPID LanguageGroup, DWORD dwFlags, LONG_PTR lParam);", "GetThreadUILanguage": "WINBASEAPI LANGID WINAPI GetThreadUILanguage (void);", "GetProcessPreferredUILanguages": "WINBASEAPI WINBOOL WINAPI GetProcessPreferredUILanguages (DWORD dwFlags, PULONG pulNumLanguages, PZZWSTR pwszLanguagesBuffer, PULONG pcchLanguagesBuffer);", "SetProcessPreferredUILanguages": "WINBASEAPI WINBOOL WINAPI SetProcessPreferredUILanguages (DWORD dwFlags, PCZZWSTR pwszLanguagesBuffer, PULONG pulNumLanguages);", "GetUserPreferredUILanguages": "WINBASEAPI WINBOOL WINAPI GetUserPreferredUILanguages (DWORD dwFlags, PULONG pulNumLanguages, PZZWSTR pwszLanguagesBuffer, PULONG pcchLanguagesBuffer);", "GetSystemPreferredUILanguages": "WINBASEAPI WINBOOL WINAPI GetSystemPreferredUILanguages (DWORD dwFlags, PULONG pulNumLanguages, PZZWSTR pwszLanguagesBuffer, PULONG pcchLanguagesBuffer);", "GetThreadPreferredUILanguages": "WINBASEAPI WINBOOL WINAPI GetThreadPreferredUILanguages (DWORD dwFlags, PULONG pulNumLanguages, PZZWSTR pwszLanguagesBuffer, PULONG pcchLanguagesBuffer);", "SetThreadPreferredUILanguages": "WINBASEAPI WINBOOL WINAPI SetThreadPreferredUILanguages (DWORD dwFlags, PCZZWSTR pwszLanguagesBuffer, PULONG pulNumLanguages);", "GetFileMUIInfo": "WINBASEAPI WINBOOL WINAPI GetFileMUIInfo (DWORD dwFlags, PCWSTR pcwszFilePath, PFILEMUIINFO pFileMUIInfo, DWORD *pcbFileMUIInfo);", "GetFileMUIPath": "WINBASEAPI WINBOOL WINAPI GetFileMUIPath (DWORD dwFlags, PCWSTR pcwszFilePath, PWSTR pwszLanguage, PULONG pcchLanguage, PWSTR pwszFileMUIPath, PULONG pcchFileMUIPath, PULONGLONG pululEnumerator);", "GetUILanguageInfo": "WINBASEAPI WINBOOL WINAPI GetUILanguageInfo (DWORD dwFlags, PCZZWSTR pwmszLanguage, PZZWSTR pwszFallbackLanguages, PDWORD pcchFallbackLanguages, PDWORD pAttributes);", "NotifyUILanguageChange": "WINBASEAPI WINBOOL WINAPI NotifyUILanguageChange (DWORD dwFlags, PCWSTR pcwstrNewLanguage, PCWSTR pcwstrPreviousLanguage, DWORD dwReserved, PDWORD pdwStatusRtrn);", "EnumSystemGeoNames": "WINBASEAPI WINBOOL WINAPI EnumSystemGeoNames (GEOCLASS geoClass, GEO_ENUMNAMEPROC geoEnumProc, LPARAM data);", "SetThreadPreferredUILanguages2": "WINBASEAPI WINBOOL WINAPI SetThreadPreferredUILanguages2 (ULONG flags, PCZZWSTR languages, PULONG numLanguagesSet, HSAVEDUILANGUAGES *snapshot);", "RestoreThreadPreferredUILanguages": "WINBASEAPI void WINAPI RestoreThreadPreferredUILanguages (const HSAVEDUILANGUAGES snapshot);", "GetStringTypeExA": "WINBASEAPI WINBOOL WINAPI GetStringTypeExA (LCID Locale, DWORD dwInfoType, LPCSTR lpSrcStr, int cchSrc, LPWORD lpCharType);", "GetUserDefaultUILanguage": "WINBASEAPI LANGID WINAPI GetUserDefaultUILanguage (void);", "EnumUILanguagesA": "WINBASEAPI WINBOOL WINAPI EnumUILanguagesA (UILANGUAGE_ENUMPROCA lpUILanguageEnumProc, DWORD dwFlags, LONG_PTR lParam);", "EnumUILanguagesW": "WINBASEAPI WINBOOL WINAPI EnumUILanguagesW (UILANGUAGE_ENUMPROCW lpUILanguageEnumProc, DWORD dwFlags, LONG_PTR lParam);", "EnumSystemCodePagesA": "WINBASEAPI WINBOOL WINAPI EnumSystemCodePagesA (CODEPAGE_ENUMPROCA lpCodePageEnumProc, DWORD dwFlags);", "EnumSystemCodePagesW": "WINBASEAPI WINBOOL WINAPI EnumSystemCodePagesW (CODEPAGE_ENUMPROCW lpCodePageEnumProc, DWORD dwFlags);", "GetUserDefaultLangID": "WINBASEAPI LANGID WINAPI GetUserDefaultLangID (void);", "NormalizeString": "WINNORMALIZEAPI int WINAPI NormalizeString (NORM_FORM NormForm, LPCWSTR lpSrcString, int cwSrcLength, LPWSTR lpDstString, int cwDstLength);", "IsNormalizedString": "WINNORMALIZEAPI WINBOOL WINAPI IsNormalizedString (NORM_FORM NormForm, LPCWSTR lpString, int cwLength);", "IdnToAscii": "WINNORMALIZEAPI int WINAPI IdnToAscii (DWORD dwFlags, LPCWSTR lpUnicodeCharStr, int cchUnicodeChar, LPWSTR lpASCIICharStr, int cchASCIIChar);", "IdnToNameprepUnicode": "WINNORMALIZEAPI int WINAPI IdnToNameprepUnicode (DWORD dwFlags, LPCWSTR lpUnicodeCharStr, int cchUnicodeChar, LPWSTR lpNameprepCharStr, int cchNameprepChar);", "IdnToUnicode": "WINNORMALIZEAPI int WINAPI IdnToUnicode (DWORD dwFlags, LPCWSTR lpASCIICharStr, int cchASCIIChar, LPWSTR lpUnicodeCharStr, int cchUnicodeChar);", "VerifyScripts": "WINBASEAPI WINBOOL WINAPI VerifyScripts (DWORD dwFlags, LPCWSTR lpLocaleScripts, int cchLocaleScripts, LPCWSTR lpTestScripts, int cchTestScripts);", "GetStringScripts": "WINBASEAPI int WINAPI GetStringScripts (DWORD dwFlags, LPCWSTR lpString, int cchString, LPWSTR lpScripts, int cchScripts);", "GetLocaleInfoEx": "WINBASEAPI int WINAPI GetLocaleInfoEx (LPCWSTR lpLocaleName, LCTYPE LCType, LPWSTR lpLCData, int cchData);", "GetCalendarInfoEx": "WINBASEAPI int WINAPI GetCalendarInfoEx (LPCWSTR lpLocaleName, CALID Calendar, LPCWSTR lpReserved, CALTYPE CalType, LPWSTR lpCalData, int cchData, LPDWORD lpValue);", "GetDurationFormatEx": "WINBASEAPI int WINAPI GetDurationFormatEx (LPCWSTR lpLocaleName, DWORD dwFlags, CONST SYSTEMTIME *lpDuration, ULONGLONG ullDuration, LPCWSTR lpFormat, LPWSTR lpDurationStr, int cchDuration);", "GetNumberFormatEx": "WINBASEAPI int WINAPI GetNumberFormatEx (LPCWSTR lpLocaleName, DWORD dwFlags, LPCWSTR lpValue, CONST NUMBERFMTW *lpFormat, LPWSTR lpNumberStr, int cchNumber);", "GetCurrencyFormatEx": "WINBASEAPI int WINAPI GetCurrencyFormatEx (LPCWSTR lpLocaleName, DWORD dwFlags, LPCWSTR lpValue, CONST CURRENCYFMTW *lpFormat, LPWSTR lpCurrencyStr, int cchCurrency);", "GetUserDefaultLocaleName": "WINBASEAPI int WINAPI GetUserDefaultLocaleName (LPWSTR lpLocaleName, int cchLocaleName);", "GetSystemDefaultLocaleName": "WINBASEAPI int WINAPI GetSystemDefaultLocaleName (LPWSTR lpLocaleName, int cchLocaleName);", "GetNLSVersionEx": "WINBASEAPI WINBOOL WINAPI GetNLSVersionEx (NLS_FUNCTION function, LPCWSTR lpLocaleName, LPNLSVERSIONINFOEX lpVersionInformation);", "FindNLSStringEx": "WINBASEAPI int WINAPI FindNLSStringEx (LPCWSTR lpLocaleName, DWORD dwFindNLSStringFlags, LPCWSTR lpStringSource, int cchSource, LPCWSTR lpStringValue, int cchValue, LPINT pcchFound, LPNLSVERSIONINFO lpVersionInformation, LPVOID lpReserved, LPARAM sortHandle);", "LCMapStringEx": "WINBASEAPI int WINAPI LCMapStringEx (LPCWSTR lpLocaleName, DWORD dwMapFlags, LPCWSTR lpSrcStr, int cchSrc, LPWSTR lpDestStr, int cchDest, LPNLSVERSIONINFO lpVersionInformation, LPVOID lpReserved, LPARAM sortHandle);", "IsValidLocaleName": "WINBASEAPI WINBOOL WINAPI IsValidLocaleName (LPCWSTR lpLocaleName);", "EnumCalendarInfoExEx": "WINBASEAPI WINBOOL WINAPI EnumCalendarInfoExEx (CALINFO_ENUMPROCEXEX pCalInfoEnumProcExEx, LPCWSTR lpLocaleName, CALID Calendar, LPCWSTR lpReserved, CALTYPE CalType, LPARAM lParam);", "EnumDateFormatsExEx": "WINBASEAPI WINBOOL WINAPI EnumDateFormatsExEx (DATEFMT_ENUMPROCEXEX lpDateFmtEnumProcExEx, LPCWSTR lpLocaleName, DWORD dwFlags, LPARAM lParam);", "EnumTimeFormatsEx": "WINBASEAPI WINBOOL WINAPI EnumTimeFormatsEx (TIMEFMT_ENUMPROCEX lpTimeFmtEnumProcEx, LPCWSTR lpLocaleName, DWORD dwFlags, LPARAM lParam);", "EnumSystemLocalesEx": "WINBASEAPI WINBOOL WINAPI EnumSystemLocalesEx (LOCALE_ENUMPROCEX lpLocaleEnumProcEx, DWORD dwFlags, LPARAM lParam, LPVOID lpReserved);", "ResolveLocaleName": "WINBASEAPI int WINAPI ResolveLocaleName (LPCWSTR lpNameToResolve, LPWSTR lpLocaleName, int cchLocaleName);", "IsValidNLSVersion": "WINBASEAPI DWORD WINAPI IsValidNLSVersion (NLS_FUNCTION function, LPCWSTR lpLocaleName, LPNLSVERSIONINFOEX lpVersionInformation);", "DismInitialize": "HRESULT WINAPI DismInitialize (DismLogLevel LogLevel, PCWSTR LogFilePath, PCWSTR ScratchDirectory);", "DismShutdown": "HRESULT WINAPI DismShutdown (void);", "DismMountImage": "HRESULT WINAPI DismMountImage (PCWSTR ImageFilePath, PCWSTR MountPath, UINT ImageIndex, PCWSTR ImageName, DismImageIdentifier ImageIdentifier, DWORD Flags, HANDLE CancelEvent, DISM_PROGRESS_CALLBACK Progress, PVOID UserData);", "DismUnmountImage": "HRESULT WINAPI DismUnmountImage (PCWSTR MountPath, DWORD Flags, HANDLE CancelEvent, DISM_PROGRESS_CALLBACK Progress, PVOID UserData);", "DismOpenSession": "HRESULT WINAPI DismOpenSession (PCWSTR ImagePath, PCWSTR WindowsDirectory, PCWSTR SystemDrive, DismSession *Session);", "DismCloseSession": "HRESULT WINAPI DismCloseSession (DismSession Session);", "DismGetLastErrorMessage": "HRESULT WINAPI DismGetLastErrorMessage (DismString **ErrorMessage);", "DismRemountImage": "HRESULT WINAPI DismRemountImage (PCWSTR MountPath);", "DismCommitImage": "HRESULT WINAPI DismCommitImage (DismSession Session, DWORD Flags, HANDLE CancelEvent, DISM_PROGRESS_CALLBACK Progress, PVOID UserData);", "DismGetImageInfo": "HRESULT WINAPI DismGetImageInfo (PCWSTR ImageFilePath, DismImageInfo **ImageInfo, UINT *Count);", "DismGetMountedImageInfo": "HRESULT WINAPI DismGetMountedImageInfo (DismMountedImageInfo **MountedImageInfo, UINT *Count);", "DismCleanupMountpoints": "HRESULT WINAPI DismCleanupMountpoints (void);", "DismCheckImageHealth": "HRESULT WINAPI DismCheckImageHealth (DismSession Session, WINBOOL ScanImage, HANDLE CancelEvent, DISM_PROGRESS_CALLBACK Progress, PVOID UserData, DismImageHealthState *ImageHealth);", "DismRestoreImageHealth": "HRESULT WINAPI DismRestoreImageHealth (DismSession Session, PCWSTR *SourcePaths, UINT SourcePathCount, WINBOOL LimitAccess, HANDLE CancelEvent, DISM_PROGRESS_CALLBACK Progress, PVOID UserData);", "DismDelete": "HRESULT WINAPI DismDelete (VOID *DismStructure);", "DismAddPackage": "HRESULT WINAPI DismAddPackage (DismSession Session, PCWSTR PackagePath, WINBOOL IgnoreCheck, WINBOOL PreventPending, HANDLE CancelEvent, DISM_PROGRESS_CALLBACK Progress, PVOID UserData);", "DismRemovePackage": "HRESULT WINAPI DismRemovePackage (DismSession Session, PCWSTR Identifier, DismPackageIdentifier PackageIdentifier, HANDLE CancelEvent, DISM_PROGRESS_CALLBACK Progress, PVOID UserData);", "DismEnableFeature": "HRESULT WINAPI DismEnableFeature (DismSession Session, PCWSTR FeatureName, PCWSTR Identifier, DismPackageIdentifier PackageIdentifier, WINBOOL LimitAccess, PCWSTR *SourcePaths, UINT SourcePathCount, WINBOOL EnableAll, HANDLE CancelEvent, DISM_PROGRESS_CALLBACK Progress, PVOID UserData);", "DismDisableFeature": "HRESULT WINAPI DismDisableFeature (DismSession Session, PCWSTR FeatureName, PCWSTR PackageName, WINBOOL RemovePayload, HANDLE CancelEvent, DISM_PROGRESS_CALLBACK Progress, PVOID UserData);", "DismGetPackages": "HRESULT WINAPI DismGetPackages (DismSession Session, DismPackage **Package, UINT *Count);", "DismGetPackageInfo": "HRESULT WINAPI DismGetPackageInfo (DismSession Session, PCWSTR Identifier, DismPackageIdentifier PackageIdentifier, DismPackageInfo **PackageInfo);", "DismGetPackageInfoEx": "HRESULT WINAPI DismGetPackageInfoEx (DismSession Session, PCWSTR Identifier, DismPackageIdentifier PackageIdentifier, DismPackageInfoEx **PackageInfoEx);", "DismGetFeatures": "HRESULT WINAPI DismGetFeatures (DismSession Session, PCWSTR Identifier, DismPackageIdentifier PackageIdentifier, DismFeature **Feature, UINT *Count);", "DismGetFeatureInfo": "HRESULT WINAPI DismGetFeatureInfo (DismSession Session, PCWSTR FeatureName, PCWSTR Identifier, DismPackageIdentifier PackageIdentifier, DismFeatureInfo **FeatureInfo);", "DismGetFeatureParent": "HRESULT WINAPI DismGetFeatureParent (DismSession Session, PCWSTR FeatureName, PCWSTR Identifier, DismPackageIdentifier PackageIdentifier, DismFeature **Feature, UINT *Count);", "DismApplyUnattend": "HRESULT WINAPI DismApplyUnattend (DismSession Session, PCWSTR UnattendFile, WINBOOL SingleSession);", "DismAddDriver": "HRESULT WINAPI DismAddDriver (DismSession Session, PCWSTR DriverPath, WINBOOL ForceUnsigned);", "DismRemoveDriver": "HRESULT WINAPI DismRemoveDriver (DismSession Session, PCWSTR DriverPath);", "DismGetDrivers": "HRESULT WINAPI DismGetDrivers (DismSession Session, WINBOOL AllDrivers, DismDriverPackage **DriverPackage, UINT *Count);", "DismGetDriverInfo": "HRESULT WINAPI DismGetDriverInfo (DismSession Session, PCWSTR DriverPath, DismDriver **Driver, UINT *Count, DismDriverPackage **DriverPackage);", "DismGetCapabilities": "HRESULT WINAPI DismGetCapabilities (DismSession Session, DismCapability **Capability, UINT *Count);", "DismGetCapabilityInfo": "HRESULT WINAPI DismGetCapabilityInfo (DismSession Session, PCWSTR Name, DismCapabilityInfo **Info);", "DismAddCapability": "HRESULT WINAPI DismAddCapability (DismSession Session, PCWSTR Name, WINBOOL LimitAccess, PCWSTR *SourcePaths, UINT SourcePathCount, HANDLE CancelEvent, DISM_PROGRESS_CALLBACK Progress, PVOID UserData);", "DismRemoveCapability": "HRESULT WINAPI DismRemoveCapability (DismSession Session, PCWSTR Name, HANDLE CancelEvent, DISM_PROGRESS_CALLBACK Progress, PVOID UserData);", "IProvisioningDomain_Add_Proxy": "HRESULT WINAPI IProvisioningDomain_Add_Proxy(IProvisioningDomain *This,LPCWSTR pszwPathToFolder);", "IProvisioningDomain_Query_Proxy": "HRESULT WINAPI IProvisioningDomain_Query_Proxy(IProvisioningDomain *This,LPCWSTR pszwDomain,LPCWSTR pszwLanguage,LPCWSTR pszwXPathQuery,IXMLDOMNodeList **Nodes);", "IProvisioningProfileWireless_CreateProfile_Proxy": "HRESULT WINAPI IProvisioningProfileWireless_CreateProfile_Proxy(IProvisioningProfileWireless *This,BSTR bstrXMLWirelessConfigProfile,BSTR bstrXMLConnectionConfigProfile,GUID *pAdapterInstanceGuid,ULONG *pulStatus);", "IFlashConfig_RunWizard_Proxy": "HRESULT WINAPI IFlashConfig_RunWizard_Proxy(IFlashConfig *This,HWND hwndParent,FLASHCONFIG_FLAGS eFlags);", "CreateSocketPort": "HANDLE WINAPI CreateSocketPort(USHORT Socket);", "DeleteSocketPort": "DWORD WINAPI DeleteSocketPort(HANDLE Handle);", "IpxRecvPacket": "DWORD WINAPI IpxRecvPacket(HANDLE Handle,PUCHAR IpxPacket,ULONG IpxPacketLength,PADDRESS_RESERVED lpReserved,LPOVERLAPPED lpOverlapped,LPOVERLAPPED_COMPLETION_ROUTINE CompletionRoutine);", "IpxSendPacket": "DWORD WINAPI IpxSendPacket(HANDLE Handle,ULONG AdapterIdx,PUCHAR IpxPacket,ULONG IpxPacketLength,PADDRESS_RESERVED lpReserved,LPOVERLAPPED lpOverlapped,LPOVERLAPPED_COMPLETION_ROUTINE CompletionRoutine);", "IService_InvokeService_Proxy": "HRESULT WINAPI IService_InvokeService_Proxy(IService *This,IUnknown *pUnkInner);", "IDBPromptInitialize_PromptDataSource_Proxy": "HRESULT WINAPI IDBPromptInitialize_PromptDataSource_Proxy(IDBPromptInitialize *This,IUnknown *pUnkOuter,HWND hWndParent,DBPROMPTOPTIONS dwPromptOptions,ULONG cSourceTypeFilter,DBSOURCETYPE *rgSourceTypeFilter,LPCOLESTR pwszszzProviderFilter,REFIID riid,IUnknown **ppDataSource);", "IDBPromptInitialize_PromptFileName_Proxy": "HRESULT WINAPI IDBPromptInitialize_PromptFileName_Proxy(IDBPromptInitialize *This,HWND hWndParent,DBPROMPTOPTIONS dwPromptOptions,LPCOLESTR pwszInitialDirectory,LPCOLESTR pwszInitialFile,LPOLESTR *ppwszSelectedFile);", "IDataInitialize_GetDataSource_Proxy": "HRESULT WINAPI IDataInitialize_GetDataSource_Proxy(IDataInitialize *This,IUnknown *pUnkOuter,DWORD dwClsCtx,LPCOLESTR pwszInitializationString,REFIID riid,IUnknown **ppDataSource);", "IDataInitialize_GetInitializationString_Proxy": "HRESULT WINAPI IDataInitialize_GetInitializationString_Proxy(IDataInitialize *This,IUnknown *pDataSource,boolean fIncludePassword,LPOLESTR *ppwszInitString);", "IDataInitialize_CreateDBInstance_Proxy": "HRESULT WINAPI IDataInitialize_CreateDBInstance_Proxy(IDataInitialize *This,REFCLSID clsidProvider,IUnknown *pUnkOuter,DWORD dwClsCtx,LPOLESTR pwszReserved,REFIID riid,IUnknown **ppDataSource);", "IDataInitialize_RemoteCreateDBInstanceEx_Proxy": "HRESULT WINAPI IDataInitialize_RemoteCreateDBInstanceEx_Proxy(IDataInitialize *This,REFCLSID clsidProvider,IUnknown *pUnkOuter,DWORD dwClsCtx,LPOLESTR pwszReserved,COSERVERINFO *pServerInfo,ULONG cmq,const IID **rgpIID,IUnknown **rgpItf,HRESULT *rghr);", "IDataInitialize_LoadStringFromStorage_Proxy": "HRESULT WINAPI IDataInitialize_LoadStringFromStorage_Proxy(IDataInitialize *This,LPCOLESTR pwszFileName,LPOLESTR *ppwszInitializationString);", "IDataInitialize_WriteStringToStorage_Proxy": "HRESULT WINAPI IDataInitialize_WriteStringToStorage_Proxy(IDataInitialize *This,LPCOLESTR pwszFileName,LPCOLESTR pwszInitializationString,DWORD dwCreationDisposition);", "IDataSourceLocator_get_hWnd_Proxy": "HRESULT WINAPI IDataSourceLocator_get_hWnd_Proxy(IDataSourceLocator *This,COMPATIBLE_LONG *phwndParent);", "IDataSourceLocator_put_hWnd_Proxy": "HRESULT WINAPI IDataSourceLocator_put_hWnd_Proxy(IDataSourceLocator *This,COMPATIBLE_LONG hwndParent);", "IDataSourceLocator_PromptNew_Proxy": "HRESULT WINAPI IDataSourceLocator_PromptNew_Proxy(IDataSourceLocator *This,IDispatch **ppADOConnection);", "IDataSourceLocator_PromptEdit_Proxy": "HRESULT WINAPI IDataSourceLocator_PromptEdit_Proxy(IDataSourceLocator *This,IDispatch **ppADOConnection,VARIANT_BOOL *pbSuccess);", "IDataInitialize_CreateDBInstanceEx_Proxy": "HRESULT WINAPI IDataInitialize_CreateDBInstanceEx_Proxy(IDataInitialize *This,REFCLSID clsidProvider,IUnknown *pUnkOuter,DWORD dwClsCtx,LPOLESTR pwszReserved,COSERVERINFO *pServerInfo,ULONG cmq,MULTI_QI *rgmqResults);", "IDataInitialize_CreateDBInstanceEx_Stub": "HRESULT WINAPI IDataInitialize_CreateDBInstanceEx_Stub(IDataInitialize *This,REFCLSID clsidProvider,IUnknown *pUnkOuter,DWORD dwClsCtx,LPOLESTR pwszReserved,COSERVERINFO *pServerInfo,ULONG cmq,const IID **rgpIID,IUnknown **rgpItf,HRESULT *rghr);", "wvsprintfA": "WINUSERAPI int WINAPI wvsprintfA(LPSTR,LPCSTR,va_list arglist);", "wvsprintfW": "WINUSERAPI int WINAPI wvsprintfW(LPWSTR,LPCWSTR,va_list arglist);", "wsprintfA": "WINUSERAPI int WINAPIV wsprintfA(LPSTR,LPCSTR,...);", "wsprintfW": "WINUSERAPI int WINAPIV wsprintfW(LPWSTR,LPCWSTR,...);", "LoadKeyboardLayoutA": "WINUSERAPI HKL WINAPI LoadKeyboardLayoutA(LPCSTR pwszKLID,UINT Flags);", "LoadKeyboardLayoutW": "WINUSERAPI HKL WINAPI LoadKeyboardLayoutW(LPCWSTR pwszKLID,UINT Flags);", "ActivateKeyboardLayout": "WINUSERAPI HKL WINAPI ActivateKeyboardLayout(HKL hkl,UINT Flags);", "ToUnicodeEx": "WINUSERAPI int WINAPI ToUnicodeEx(UINT wVirtKey,UINT wScanCode,CONST BYTE *lpKeyState,LPWSTR pwszBuff,int cchBuff,UINT wFlags,HKL dwhkl);", "UnloadKeyboardLayout": "WINUSERAPI WINBOOL WINAPI UnloadKeyboardLayout(HKL hkl);", "GetKeyboardLayoutNameA": "WINUSERAPI WINBOOL WINAPI GetKeyboardLayoutNameA(LPSTR pwszKLID);", "GetKeyboardLayoutNameW": "WINUSERAPI WINBOOL WINAPI GetKeyboardLayoutNameW(LPWSTR pwszKLID);", "GetKeyboardLayoutList": "WINUSERAPI int WINAPI GetKeyboardLayoutList(int nBuff,HKL *lpList);", "GetKeyboardLayout": "WINUSERAPI HKL WINAPI GetKeyboardLayout(DWORD idThread);", "GetMouseMovePointsEx": "WINUSERAPI int WINAPI GetMouseMovePointsEx(UINT cbSize,LPMOUSEMOVEPOINT lppt,LPMOUSEMOVEPOINT lpptBuf,int nBufPoints,DWORD resolution);", "CreateDesktopA": "WINUSERAPI HDESK WINAPI CreateDesktopA(LPCSTR lpszDesktop,LPCSTR lpszDevice,LPDEVMODEA pDevmode,DWORD dwFlags,ACCESS_MASK dwDesiredAccess,LPSECURITY_ATTRIBUTES lpsa);", "CreateDesktopW": "WINUSERAPI HDESK WINAPI CreateDesktopW(LPCWSTR lpszDesktop,LPCWSTR lpszDevice,LPDEVMODEW pDevmode,DWORD dwFlags,ACCESS_MASK dwDesiredAccess,LPSECURITY_ATTRIBUTES lpsa);", "CreateDesktopExA": "WINUSERAPI HDESK WINAPI CreateDesktopExA (LPCSTR lpszDesktop, LPCSTR lpszDevice, DEVMODEA *pDevmode, DWORD dwFlags, ACCESS_MASK dwDesiredAccess, LPSECURITY_ATTRIBUTES lpsa, ULONG ulHeapSize, PVOID pvoid);", "CreateDesktopExW": "WINUSERAPI HDESK WINAPI CreateDesktopExW (LPCWSTR lpszDesktop, LPCWSTR lpszDevice, DEVMODEW *pDevmode, DWORD dwFlags, ACCESS_MASK dwDesiredAccess, LPSECURITY_ATTRIBUTES lpsa, ULONG ulHeapSize, PVOID pvoid);", "OpenDesktopA": "WINUSERAPI HDESK WINAPI OpenDesktopA(LPCSTR lpszDesktop,DWORD dwFlags,WINBOOL fInherit,ACCESS_MASK dwDesiredAccess);", "OpenDesktopW": "WINUSERAPI HDESK WINAPI OpenDesktopW(LPCWSTR lpszDesktop,DWORD dwFlags,WINBOOL fInherit,ACCESS_MASK dwDesiredAccess);", "OpenInputDesktop": "WINUSERAPI HDESK WINAPI OpenInputDesktop(DWORD dwFlags,WINBOOL fInherit,ACCESS_MASK dwDesiredAccess);", "EnumDesktopsA": "WINUSERAPI WINBOOL WINAPI EnumDesktopsA(HWINSTA hwinsta,DESKTOPENUMPROCA lpEnumFunc,LPARAM lParam);", "EnumDesktopsW": "WINUSERAPI WINBOOL WINAPI EnumDesktopsW(HWINSTA hwinsta,DESKTOPENUMPROCW lpEnumFunc,LPARAM lParam);", "EnumDesktopWindows": "WINUSERAPI WINBOOL WINAPI EnumDesktopWindows(HDESK hDesktop,WNDENUMPROC lpfn,LPARAM lParam);", "SwitchDesktop": "WINUSERAPI WINBOOL WINAPI SwitchDesktop(HDESK hDesktop);", "SetThreadDesktop": "WINUSERAPI WINBOOL WINAPI SetThreadDesktop(HDESK hDesktop);", "CloseDesktop": "WINUSERAPI WINBOOL WINAPI CloseDesktop(HDESK hDesktop);", "GetThreadDesktop": "WINUSERAPI HDESK WINAPI GetThreadDesktop(DWORD dwThreadId);", "CreateWindowStationA": "WINUSERAPI HWINSTA WINAPI CreateWindowStationA(LPCSTR lpwinsta,DWORD dwFlags,ACCESS_MASK dwDesiredAccess,LPSECURITY_ATTRIBUTES lpsa);", "CreateWindowStationW": "WINUSERAPI HWINSTA WINAPI CreateWindowStationW(LPCWSTR lpwinsta,DWORD dwFlags,ACCESS_MASK dwDesiredAccess,LPSECURITY_ATTRIBUTES lpsa);", "OpenWindowStationA": "WINUSERAPI HWINSTA WINAPI OpenWindowStationA(LPCSTR lpszWinSta,WINBOOL fInherit,ACCESS_MASK dwDesiredAccess);", "OpenWindowStationW": "WINUSERAPI HWINSTA WINAPI OpenWindowStationW(LPCWSTR lpszWinSta,WINBOOL fInherit,ACCESS_MASK dwDesiredAccess);", "EnumWindowStationsA": "WINUSERAPI WINBOOL WINAPI EnumWindowStationsA(WINSTAENUMPROCA lpEnumFunc,LPARAM lParam);", "EnumWindowStationsW": "WINUSERAPI WINBOOL WINAPI EnumWindowStationsW(WINSTAENUMPROCW lpEnumFunc,LPARAM lParam);", "CloseWindowStation": "WINUSERAPI WINBOOL WINAPI CloseWindowStation(HWINSTA hWinSta);", "SetProcessWindowStation": "WINUSERAPI WINBOOL WINAPI SetProcessWindowStation(HWINSTA hWinSta);", "GetProcessWindowStation": "WINUSERAPI HWINSTA WINAPI GetProcessWindowStation(VOID);", "SetUserObjectSecurity": "WINUSERAPI WINBOOL WINAPI SetUserObjectSecurity(HANDLE hObj,PSECURITY_INFORMATION pSIRequested,PSECURITY_DESCRIPTOR pSID);", "GetUserObjectSecurity": "WINUSERAPI WINBOOL WINAPI GetUserObjectSecurity(HANDLE hObj,PSECURITY_INFORMATION pSIRequested,PSECURITY_DESCRIPTOR pSID,DWORD nLength,LPDWORD lpnLengthNeeded);", "GetUserObjectInformationA": "WINUSERAPI WINBOOL WINAPI GetUserObjectInformationA(HANDLE hObj,int nIndex,PVOID pvInfo,DWORD nLength,LPDWORD lpnLengthNeeded);", "GetUserObjectInformationW": "WINUSERAPI WINBOOL WINAPI GetUserObjectInformationW(HANDLE hObj,int nIndex,PVOID pvInfo,DWORD nLength,LPDWORD lpnLengthNeeded);", "SetUserObjectInformationA": "WINUSERAPI WINBOOL WINAPI SetUserObjectInformationA(HANDLE hObj,int nIndex,PVOID pvInfo,DWORD nLength);", "SetUserObjectInformationW": "WINUSERAPI WINBOOL WINAPI SetUserObjectInformationW(HANDLE hObj,int nIndex,PVOID pvInfo,DWORD nLength);", "IsHungAppWindow": "WINUSERAPI WINBOOL WINAPI IsHungAppWindow(HWND hwnd);", "DisableProcessWindowsGhosting": "WINUSERAPI VOID WINAPI DisableProcessWindowsGhosting(VOID);", "RegisterWindowMessageA": "WINUSERAPI UINT WINAPI RegisterWindowMessageA(LPCSTR lpString);", "RegisterWindowMessageW": "WINUSERAPI UINT WINAPI RegisterWindowMessageW(LPCWSTR lpString);", "TrackMouseEvent": "WINUSERAPI WINBOOL WINAPI TrackMouseEvent(LPTRACKMOUSEEVENT lpEventTrack);", "DrawEdge": "WINUSERAPI WINBOOL WINAPI DrawEdge(HDC hdc,LPRECT qrc,UINT edge,UINT grfFlags);", "DrawFrameControl": "WINUSERAPI WINBOOL WINAPI DrawFrameControl(HDC,LPRECT,UINT,UINT);", "DrawCaption": "WINUSERAPI WINBOOL WINAPI DrawCaption(HWND hwnd,HDC hdc,CONST RECT *lprect,UINT flags);", "DrawAnimatedRects": "WINUSERAPI WINBOOL WINAPI DrawAnimatedRects(HWND hwnd,int idAni,CONST RECT *lprcFrom,CONST RECT *lprcTo);", "GetMessageA": "WINUSERAPI WINBOOL WINAPI GetMessageA(LPMSG lpMsg,HWND hWnd,UINT wMsgFilterMin,UINT wMsgFilterMax);", "GetMessageW": "WINUSERAPI WINBOOL WINAPI GetMessageW(LPMSG lpMsg,HWND hWnd,UINT wMsgFilterMin,UINT wMsgFilterMax);", "TranslateMessage": "WINUSERAPI WINBOOL WINAPI TranslateMessage(CONST MSG *lpMsg);", "DispatchMessageA": "WINUSERAPI LRESULT WINAPI DispatchMessageA(CONST MSG *lpMsg);", "DispatchMessageW": "WINUSERAPI LRESULT WINAPI DispatchMessageW(CONST MSG *lpMsg);", "SetMessageQueue": "WINUSERAPI WINBOOL WINAPI SetMessageQueue(int cMessagesMax);", "PeekMessageA": "WINUSERAPI WINBOOL WINAPI PeekMessageA(LPMSG lpMsg,HWND hWnd,UINT wMsgFilterMin,UINT wMsgFilterMax,UINT wRemoveMsg);", "PeekMessageW": "WINUSERAPI WINBOOL WINAPI PeekMessageW(LPMSG lpMsg,HWND hWnd,UINT wMsgFilterMin,UINT wMsgFilterMax,UINT wRemoveMsg);", "RegisterHotKey": "WINUSERAPI WINBOOL WINAPI RegisterHotKey(HWND hWnd,int id,UINT fsModifiers,UINT vk);", "UnregisterHotKey": "WINUSERAPI WINBOOL WINAPI UnregisterHotKey(HWND hWnd,int id);", "ExitWindowsEx": "WINUSERAPI WINBOOL WINAPI ExitWindowsEx(UINT uFlags,DWORD dwReason);", "SwapMouseButton": "WINUSERAPI WINBOOL WINAPI SwapMouseButton(WINBOOL fSwap);", "GetMessagePos": "WINUSERAPI DWORD WINAPI GetMessagePos(VOID);", "GetMessageTime": "WINUSERAPI LONG WINAPI GetMessageTime(VOID);", "GetMessageExtraInfo": "WINUSERAPI LPARAM WINAPI GetMessageExtraInfo(VOID);", "GetUnpredictedMessagePos": "WINUSERAPI DWORD WINAPI GetUnpredictedMessagePos (VOID);", "IsWow64Message": "WINUSERAPI WINBOOL WINAPI IsWow64Message(VOID);", "SetMessageExtraInfo": "WINUSERAPI LPARAM WINAPI SetMessageExtraInfo(LPARAM lParam);", "SendMessageA": "WINUSERAPI LRESULT WINAPI SendMessageA(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam);", "SendMessageW": "WINUSERAPI LRESULT WINAPI SendMessageW(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam);", "SendMessageTimeoutA": "WINUSERAPI LRESULT WINAPI SendMessageTimeoutA(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam,UINT fuFlags,UINT uTimeout,PDWORD_PTR lpdwResult);", "SendMessageTimeoutW": "WINUSERAPI LRESULT WINAPI SendMessageTimeoutW(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam,UINT fuFlags,UINT uTimeout,PDWORD_PTR lpdwResult);", "SendNotifyMessageA": "WINUSERAPI WINBOOL WINAPI SendNotifyMessageA(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam);", "SendNotifyMessageW": "WINUSERAPI WINBOOL WINAPI SendNotifyMessageW(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam);", "SendMessageCallbackA": "WINUSERAPI WINBOOL WINAPI SendMessageCallbackA(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam,SENDASYNCPROC lpResultCallBack,ULONG_PTR dwData);", "SendMessageCallbackW": "WINUSERAPI WINBOOL WINAPI SendMessageCallbackW(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam,SENDASYNCPROC lpResultCallBack,ULONG_PTR dwData);", "BroadcastSystemMessageExA": "WINUSERAPI __LONG32 WINAPI BroadcastSystemMessageExA(DWORD flags,LPDWORD lpInfo,UINT Msg,WPARAM wParam,LPARAM lParam,PBSMINFO pbsmInfo);", "BroadcastSystemMessageExW": "WINUSERAPI __LONG32 WINAPI BroadcastSystemMessageExW(DWORD flags,LPDWORD lpInfo,UINT Msg,WPARAM wParam,LPARAM lParam,PBSMINFO pbsmInfo);", "BroadcastSystemMessageA": "WINUSERAPI __LONG32 WINAPI BroadcastSystemMessageA(DWORD flags,LPDWORD lpInfo,UINT Msg,WPARAM wParam,LPARAM lParam);", "BroadcastSystemMessageW": "WINUSERAPI __LONG32 WINAPI BroadcastSystemMessageW(DWORD flags,LPDWORD lpInfo,UINT Msg,WPARAM wParam,LPARAM lParam);", "RegisterPowerSettingNotification": "WINUSERAPI HPOWERNOTIFY WINAPI RegisterPowerSettingNotification (HANDLE hRecipient, LPCGUID PowerSettingGuid, DWORD Flags);", "UnregisterPowerSettingNotification": "WINUSERAPI WINBOOL WINAPI UnregisterPowerSettingNotification (HPOWERNOTIFY Handle);", "RegisterSuspendResumeNotification": "WINUSERAPI HPOWERNOTIFY WINAPI RegisterSuspendResumeNotification (HANDLE hRecipient, DWORD Flags);", "UnregisterSuspendResumeNotification": "WINUSERAPI WINBOOL WINAPI UnregisterSuspendResumeNotification (HPOWERNOTIFY Handle);", "PostMessageA": "WINUSERAPI WINBOOL WINAPI PostMessageA (HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);", "PostMessageW": "WINUSERAPI WINBOOL WINAPI PostMessageW (HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);", "PostThreadMessageA": "WINUSERAPI WINBOOL WINAPI PostThreadMessageA (DWORD idThread, UINT Msg, WPARAM wParam, LPARAM lParam);", "PostThreadMessageW": "WINUSERAPI WINBOOL WINAPI PostThreadMessageW (DWORD idThread, UINT Msg, WPARAM wParam, LPARAM lParam);", "AttachThreadInput": "WINUSERAPI WINBOOL WINAPI AttachThreadInput (DWORD idAttach, DWORD idAttachTo, WINBOOL fAttach);", "ReplyMessage": "WINUSERAPI WINBOOL WINAPI ReplyMessage (LRESULT lResult);", "WaitMessage": "WINUSERAPI WINBOOL WINAPI WaitMessage (VOID);", "WaitForInputIdle": "WINUSERAPI DWORD WINAPI WaitForInputIdle (HANDLE hProcess, DWORD dwMilliseconds);", "DefWindowProcA": "WINUSERAPI LRESULT WINAPI DefWindowProcA (HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);", "DefWindowProcW": "WINUSERAPI LRESULT WINAPI DefWindowProcW (HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);", "PostQuitMessage": "WINUSERAPI VOID WINAPI PostQuitMessage (int nExitCode);", "InSendMessage": "WINUSERAPI WINBOOL WINAPI InSendMessage (VOID);", "InSendMessageEx": "WINUSERAPI DWORD WINAPI InSendMessageEx (LPVOID lpReserved);", "GetDoubleClickTime": "WINUSERAPI UINT WINAPI GetDoubleClickTime (VOID);", "SetDoubleClickTime": "WINUSERAPI WINBOOL WINAPI SetDoubleClickTime (UINT);", "RegisterClassA": "WINUSERAPI ATOM WINAPI RegisterClassA (CONST WNDCLASSA *lpWndClass);", "RegisterClassW": "WINUSERAPI ATOM WINAPI RegisterClassW (CONST WNDCLASSW *lpWndClass);", "UnregisterClassA": "WINUSERAPI WINBOOL WINAPI UnregisterClassA (LPCSTR lpClassName, HINSTANCE hInstance);", "UnregisterClassW": "WINUSERAPI WINBOOL WINAPI UnregisterClassW (LPCWSTR lpClassName, HINSTANCE hInstance);", "GetClassInfoA": "WINUSERAPI WINBOOL WINAPI GetClassInfoA (HINSTANCE hInstance, LPCSTR lpClassName, LPWNDCLASSA lpWndClass);", "GetClassInfoW": "WINUSERAPI WINBOOL WINAPI GetClassInfoW (HINSTANCE hInstance, LPCWSTR lpClassName, LPWNDCLASSW lpWndClass);", "RegisterClassExA": "WINUSERAPI ATOM WINAPI RegisterClassExA (CONST WNDCLASSEXA *);", "RegisterClassExW": "WINUSERAPI ATOM WINAPI RegisterClassExW (CONST WNDCLASSEXW *);", "GetClassInfoExA": "WINUSERAPI WINBOOL WINAPI GetClassInfoExA (HINSTANCE hInstance, LPCSTR lpszClass, LPWNDCLASSEXA lpwcx);", "GetClassInfoExW": "WINUSERAPI WINBOOL WINAPI GetClassInfoExW (HINSTANCE hInstance, LPCWSTR lpszClass, LPWNDCLASSEXW lpwcx);", "CallWindowProcA": "WINUSERAPI LRESULT WINAPI CallWindowProcA (FARPROC lpPrevWndFunc, HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);", "CallWindowProcW": "WINUSERAPI LRESULT WINAPI CallWindowProcW (FARPROC lpPrevWndFunc, HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);", "RegisterDeviceNotificationA": "WINUSERAPI HDEVNOTIFY WINAPI RegisterDeviceNotificationA(HANDLE hRecipient,LPVOID NotificationFilter,DWORD Flags);", "RegisterDeviceNotificationW": "WINUSERAPI HDEVNOTIFY WINAPI RegisterDeviceNotificationW(HANDLE hRecipient,LPVOID NotificationFilter,DWORD Flags);", "UnregisterDeviceNotification": "WINUSERAPI WINBOOL WINAPI UnregisterDeviceNotification(HDEVNOTIFY Handle);", "CreateWindowExA": "WINUSERAPI HWND WINAPI CreateWindowExA(DWORD dwExStyle,LPCSTR lpClassName,LPCSTR lpWindowName,DWORD dwStyle,int X,int Y,int nWidth,int nHeight,HWND hWndParent,HMENU hMenu,HINSTANCE hInstance,LPVOID lpParam);", "CreateWindowExW": "WINUSERAPI HWND WINAPI CreateWindowExW(DWORD dwExStyle,LPCWSTR lpClassName,LPCWSTR lpWindowName,DWORD dwStyle,int X,int Y,int nWidth,int nHeight,HWND hWndParent,HMENU hMenu,HINSTANCE hInstance,LPVOID lpParam);", "IsWindow": "WINUSERAPI WINBOOL WINAPI IsWindow(HWND hWnd);", "IsMenu": "WINUSERAPI WINBOOL WINAPI IsMenu(HMENU hMenu);", "IsChild": "WINUSERAPI WINBOOL WINAPI IsChild(HWND hWndParent,HWND hWnd);", "DestroyWindow": "WINUSERAPI WINBOOL WINAPI DestroyWindow(HWND hWnd);", "ShowWindow": "WINUSERAPI WINBOOL WINAPI ShowWindow(HWND hWnd,int nCmdShow);", "AnimateWindow": "WINUSERAPI WINBOOL WINAPI AnimateWindow(HWND hWnd,DWORD dwTime,DWORD dwFlags);", "UpdateLayeredWindow": "WINUSERAPI WINBOOL WINAPI UpdateLayeredWindow (HWND hWnd, HDC hdcDst, POINT *pptDst, SIZE *psize, HDC hdcSrc, POINT *pptSrc, COLORREF crKey, BLENDFUNCTION *pblend, DWORD dwFlags);", "UpdateLayeredWindowIndirect": "WINUSERAPI WINBOOL WINAPI UpdateLayeredWindowIndirect (HWND hWnd, const UPDATELAYEREDWINDOWINFO *pULWInfo);", "GetLayeredWindowAttributes": "WINUSERAPI WINBOOL WINAPI GetLayeredWindowAttributes (HWND hwnd, COLORREF *pcrKey, BYTE *pbAlpha, DWORD *pdwFlags);", "PrintWindow": "WINUSERAPI WINBOOL WINAPI PrintWindow (HWND hwnd, HDC hdcBlt, UINT nFlags);", "SetLayeredWindowAttributes": "WINUSERAPI WINBOOL WINAPI SetLayeredWindowAttributes (HWND hwnd, COLORREF crKey, BYTE bAlpha, DWORD dwFlags);", "ShowWindowAsync": "WINUSERAPI WINBOOL WINAPI ShowWindowAsync (HWND hWnd, int nCmdShow);", "FlashWindow": "WINUSERAPI WINBOOL WINAPI FlashWindow (HWND hWnd, WINBOOL bInvert);", "FlashWindowEx": "WINUSERAPI WINBOOL WINAPI FlashWindowEx (PFLASHWINFO pfwi);", "ShowOwnedPopups": "WINUSERAPI WINBOOL WINAPI ShowOwnedPopups (HWND hWnd, WINBOOL fShow);", "OpenIcon": "WINUSERAPI WINBOOL WINAPI OpenIcon (HWND hWnd);", "CloseWindow": "WINUSERAPI WINBOOL WINAPI CloseWindow (HWND hWnd);", "MoveWindow": "WINUSERAPI WINBOOL WINAPI MoveWindow (HWND hWnd, int X, int Y, int nWidth, int nHeight, WINBOOL bRepaint);", "SetWindowPos": "WINUSERAPI WINBOOL WINAPI SetWindowPos (HWND hWnd, HWND hWndInsertAfter, int X, int Y, int cx, int cy, UINT uFlags);", "GetWindowPlacement": "WINUSERAPI WINBOOL WINAPI GetWindowPlacement (HWND hWnd, WINDOWPLACEMENT *lpwndpl);", "SetWindowPlacement": "WINUSERAPI WINBOOL WINAPI SetWindowPlacement (HWND hWnd, CONST WINDOWPLACEMENT *lpwndpl);", "GetWindowDisplayAffinity": "WINUSERAPI WINBOOL WINAPI GetWindowDisplayAffinity (HWND hWnd, DWORD *pdwAffinity);", "SetWindowDisplayAffinity": "WINUSERAPI WINBOOL WINAPI SetWindowDisplayAffinity (HWND hWnd, DWORD dwAffinity);", "BeginDeferWindowPos": "WINUSERAPI HDWP WINAPI BeginDeferWindowPos (int nNumWindows);", "DeferWindowPos": "WINUSERAPI HDWP WINAPI DeferWindowPos (HDWP hWinPosInfo, HWND hWnd, HWND hWndInsertAfter, int x, int y, int cx, int cy, UINT uFlags);", "EndDeferWindowPos": "WINUSERAPI WINBOOL WINAPI EndDeferWindowPos (HDWP hWinPosInfo);", "IsWindowVisible": "WINUSERAPI WINBOOL WINAPI IsWindowVisible (HWND hWnd);", "IsIconic": "WINUSERAPI WINBOOL WINAPI IsIconic (HWND hWnd);", "AnyPopup": "WINUSERAPI WINBOOL WINAPI AnyPopup (VOID);", "BringWindowToTop": "WINUSERAPI WINBOOL WINAPI BringWindowToTop (HWND hWnd);", "IsZoomed": "WINUSERAPI WINBOOL WINAPI IsZoomed (HWND hWnd);", "CreateDialogParamA": "WINUSERAPI HWND WINAPI CreateDialogParamA(HINSTANCE hInstance,LPCSTR lpTemplateName,HWND hWndParent,DLGPROC lpDialogFunc,LPARAM dwInitParam);", "CreateDialogParamW": "WINUSERAPI HWND WINAPI CreateDialogParamW(HINSTANCE hInstance,LPCWSTR lpTemplateName,HWND hWndParent,DLGPROC lpDialogFunc,LPARAM dwInitParam);", "CreateDialogIndirectParamA": "WINUSERAPI HWND WINAPI CreateDialogIndirectParamA(HINSTANCE hInstance,LPCDLGTEMPLATEA lpTemplate,HWND hWndParent,DLGPROC lpDialogFunc,LPARAM dwInitParam);", "CreateDialogIndirectParamW": "WINUSERAPI HWND WINAPI CreateDialogIndirectParamW(HINSTANCE hInstance,LPCDLGTEMPLATEW lpTemplate,HWND hWndParent,DLGPROC lpDialogFunc,LPARAM dwInitParam);", "DialogBoxParamA": "WINUSERAPI INT_PTR WINAPI DialogBoxParamA(HINSTANCE hInstance,LPCSTR lpTemplateName,HWND hWndParent,DLGPROC lpDialogFunc,LPARAM dwInitParam);", "DialogBoxParamW": "WINUSERAPI INT_PTR WINAPI DialogBoxParamW(HINSTANCE hInstance,LPCWSTR lpTemplateName,HWND hWndParent,DLGPROC lpDialogFunc,LPARAM dwInitParam);", "DialogBoxIndirectParamA": "WINUSERAPI INT_PTR WINAPI DialogBoxIndirectParamA(HINSTANCE hInstance,LPCDLGTEMPLATEA hDialogTemplate,HWND hWndParent,DLGPROC lpDialogFunc,LPARAM dwInitParam);", "DialogBoxIndirectParamW": "WINUSERAPI INT_PTR WINAPI DialogBoxIndirectParamW(HINSTANCE hInstance,LPCDLGTEMPLATEW hDialogTemplate,HWND hWndParent,DLGPROC lpDialogFunc,LPARAM dwInitParam);", "EndDialog": "WINUSERAPI WINBOOL WINAPI EndDialog(HWND hDlg,INT_PTR nResult);", "GetDlgItem": "WINUSERAPI HWND WINAPI GetDlgItem(HWND hDlg,int nIDDlgItem);", "SetDlgItemInt": "WINUSERAPI WINBOOL WINAPI SetDlgItemInt(HWND hDlg,int nIDDlgItem,UINT uValue,WINBOOL bSigned);", "GetDlgItemInt": "WINUSERAPI UINT WINAPI GetDlgItemInt(HWND hDlg,int nIDDlgItem,WINBOOL *lpTranslated,WINBOOL bSigned);", "SetDlgItemTextA": "WINUSERAPI WINBOOL WINAPI SetDlgItemTextA(HWND hDlg,int nIDDlgItem,LPCSTR lpString);", "SetDlgItemTextW": "WINUSERAPI WINBOOL WINAPI SetDlgItemTextW(HWND hDlg,int nIDDlgItem,LPCWSTR lpString);", "GetDlgItemTextA": "WINUSERAPI UINT WINAPI GetDlgItemTextA(HWND hDlg,int nIDDlgItem,LPSTR lpString,int cchMax);", "GetDlgItemTextW": "WINUSERAPI UINT WINAPI GetDlgItemTextW(HWND hDlg,int nIDDlgItem,LPWSTR lpString,int cchMax);", "CheckDlgButton": "WINUSERAPI WINBOOL WINAPI CheckDlgButton(HWND hDlg,int nIDButton,UINT uCheck);", "CheckRadioButton": "WINUSERAPI WINBOOL WINAPI CheckRadioButton(HWND hDlg,int nIDFirstButton,int nIDLastButton,int nIDCheckButton);", "IsDlgButtonChecked": "WINUSERAPI UINT WINAPI IsDlgButtonChecked(HWND hDlg,int nIDButton);", "SendDlgItemMessageA": "WINUSERAPI LRESULT WINAPI SendDlgItemMessageA(HWND hDlg,int nIDDlgItem,UINT Msg,WPARAM wParam,LPARAM lParam);", "SendDlgItemMessageW": "WINUSERAPI LRESULT WINAPI SendDlgItemMessageW(HWND hDlg,int nIDDlgItem,UINT Msg,WPARAM wParam,LPARAM lParam);", "GetNextDlgGroupItem": "WINUSERAPI HWND WINAPI GetNextDlgGroupItem(HWND hDlg,HWND hCtl,WINBOOL bPrevious);", "GetNextDlgTabItem": "WINUSERAPI HWND WINAPI GetNextDlgTabItem(HWND hDlg,HWND hCtl,WINBOOL bPrevious);", "GetDlgCtrlID": "WINUSERAPI int WINAPI GetDlgCtrlID(HWND hWnd);", "GetDialogBaseUnits": "WINUSERAPI __LONG32 WINAPI GetDialogBaseUnits(VOID);", "DefDlgProcA": "WINUSERAPI LRESULT WINAPI DefDlgProcA(HWND hDlg,UINT Msg,WPARAM wParam,LPARAM lParam);", "DefDlgProcW": "WINUSERAPI LRESULT WINAPI DefDlgProcW(HWND hDlg,UINT Msg,WPARAM wParam,LPARAM lParam);", "SetDialogControlDpiChangeBehavior": "WINBOOL WINAPI SetDialogControlDpiChangeBehavior(HWND hWnd, DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS mask, DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS values);", "GetDialogControlDpiChangeBehavior": "DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS WINAPI GetDialogControlDpiChangeBehavior(HWND hWnd);", "SetDialogDpiChangeBehavior": "WINBOOL WINAPI SetDialogDpiChangeBehavior(HWND hDlg, DIALOG_DPI_CHANGE_BEHAVIORS mask, DIALOG_DPI_CHANGE_BEHAVIORS values);", "GetDialogDpiChangeBehavior": "DIALOG_DPI_CHANGE_BEHAVIORS WINAPI GetDialogDpiChangeBehavior(HWND hDlg);", "CallMsgFilterA": "WINUSERAPI WINBOOL WINAPI CallMsgFilterA(LPMSG lpMsg,int nCode);", "CallMsgFilterW": "WINUSERAPI WINBOOL WINAPI CallMsgFilterW(LPMSG lpMsg,int nCode);", "OpenClipboard": "WINUSERAPI WINBOOL WINAPI OpenClipboard(HWND hWndNewOwner);", "CloseClipboard": "WINUSERAPI WINBOOL WINAPI CloseClipboard(VOID);", "GetClipboardSequenceNumber": "WINUSERAPI DWORD WINAPI GetClipboardSequenceNumber(VOID);", "GetClipboardOwner": "WINUSERAPI HWND WINAPI GetClipboardOwner(VOID);", "SetClipboardViewer": "WINUSERAPI HWND WINAPI SetClipboardViewer(HWND hWndNewViewer);", "GetClipboardViewer": "WINUSERAPI HWND WINAPI GetClipboardViewer(VOID);", "ChangeClipboardChain": "WINUSERAPI WINBOOL WINAPI ChangeClipboardChain(HWND hWndRemove, HWND hWndNewNext);", "SetClipboardData": "WINUSERAPI HANDLE WINAPI SetClipboardData(UINT uFormat, HANDLE hMem);", "GetClipboardData": "WINUSERAPI HANDLE WINAPI GetClipboardData(UINT uFormat);", "RegisterClipboardFormatA": "WINUSERAPI UINT WINAPI RegisterClipboardFormatA(LPCSTR lpszFormat);", "RegisterClipboardFormatW": "WINUSERAPI UINT WINAPI RegisterClipboardFormatW(LPCWSTR lpszFormat);", "CountClipboardFormats": "WINUSERAPI int WINAPI CountClipboardFormats(VOID);", "EnumClipboardFormats": "WINUSERAPI UINT WINAPI EnumClipboardFormats(UINT format);", "GetClipboardFormatNameA": "WINUSERAPI int WINAPI GetClipboardFormatNameA(UINT format, LPSTR lpszFormatName, int cchMaxCount);", "GetClipboardFormatNameW": "WINUSERAPI int WINAPI GetClipboardFormatNameW(UINT format, LPWSTR lpszFormatName, int cchMaxCount);", "EmptyClipboard": "WINUSERAPI WINBOOL WINAPI EmptyClipboard(VOID);", "IsClipboardFormatAvailable": "WINUSERAPI WINBOOL WINAPI IsClipboardFormatAvailable(UINT format);", "GetPriorityClipboardFormat": "WINUSERAPI int WINAPI GetPriorityClipboardFormat(UINT *paFormatPriorityList, int cFormats);", "GetOpenClipboardWindow": "WINUSERAPI HWND WINAPI GetOpenClipboardWindow(VOID);", "AddClipboardFormatListener": "WINUSERAPI WINBOOL WINAPI AddClipboardFormatListener (HWND hwnd);", "RemoveClipboardFormatListener": "WINUSERAPI WINBOOL WINAPI RemoveClipboardFormatListener (HWND hwnd);", "GetUpdatedClipboardFormats": "WINUSERAPI WINBOOL WINAPI GetUpdatedClipboardFormats (PUINT lpuiFormats, UINT cFormats, PUINT pcFormatsOut);", "CharToOemA": "WINUSERAPI WINBOOL WINAPI CharToOemA(LPCSTR lpszSrc,LPSTR lpszDst);", "CharToOemW": "WINUSERAPI WINBOOL WINAPI CharToOemW(LPCWSTR lpszSrc,LPSTR lpszDst);", "OemToCharA": "WINUSERAPI WINBOOL WINAPI OemToCharA(LPCSTR lpszSrc,LPSTR lpszDst);", "OemToCharW": "WINUSERAPI WINBOOL WINAPI OemToCharW(LPCSTR lpszSrc,LPWSTR lpszDst);", "CharToOemBuffA": "WINUSERAPI WINBOOL WINAPI CharToOemBuffA(LPCSTR lpszSrc,LPSTR lpszDst,DWORD cchDstLength);", "CharToOemBuffW": "WINUSERAPI WINBOOL WINAPI CharToOemBuffW(LPCWSTR lpszSrc,LPSTR lpszDst,DWORD cchDstLength);", "OemToCharBuffA": "WINUSERAPI WINBOOL WINAPI OemToCharBuffA(LPCSTR lpszSrc,LPSTR lpszDst,DWORD cchDstLength);", "OemToCharBuffW": "WINUSERAPI WINBOOL WINAPI OemToCharBuffW(LPCSTR lpszSrc,LPWSTR lpszDst,DWORD cchDstLength);", "CharUpperA": "WINUSERAPI LPSTR WINAPI CharUpperA(LPSTR lpsz);", "CharUpperW": "WINUSERAPI LPWSTR WINAPI CharUpperW(LPWSTR lpsz);", "CharUpperBuffA": "WINUSERAPI DWORD WINAPI CharUpperBuffA(LPSTR lpsz,DWORD cchLength);", "CharUpperBuffW": "WINUSERAPI DWORD WINAPI CharUpperBuffW(LPWSTR lpsz,DWORD cchLength);", "CharLowerA": "WINUSERAPI LPSTR WINAPI CharLowerA(LPSTR lpsz);", "CharLowerW": "WINUSERAPI LPWSTR WINAPI CharLowerW(LPWSTR lpsz);", "CharLowerBuffA": "WINUSERAPI DWORD WINAPI CharLowerBuffA(LPSTR lpsz,DWORD cchLength);", "CharLowerBuffW": "WINUSERAPI DWORD WINAPI CharLowerBuffW(LPWSTR lpsz,DWORD cchLength);", "CharNextA": "WINUSERAPI LPSTR WINAPI CharNextA(LPCSTR lpsz);", "CharNextW": "WINUSERAPI LPWSTR WINAPI CharNextW(LPCWSTR lpsz);", "CharPrevA": "WINUSERAPI LPSTR WINAPI CharPrevA(LPCSTR lpszStart,LPCSTR lpszCurrent);", "CharPrevW": "WINUSERAPI LPWSTR WINAPI CharPrevW(LPCWSTR lpszStart,LPCWSTR lpszCurrent);", "CharNextExA": "WINUSERAPI LPSTR WINAPI CharNextExA(WORD CodePage,LPCSTR lpCurrentChar,DWORD dwFlags);", "CharPrevExA": "WINUSERAPI LPSTR WINAPI CharPrevExA(WORD CodePage,LPCSTR lpStart,LPCSTR lpCurrentChar,DWORD dwFlags);", "IsCharAlphaA": "WINUSERAPI WINBOOL WINAPI IsCharAlphaA(CHAR ch);", "IsCharAlphaW": "WINUSERAPI WINBOOL WINAPI IsCharAlphaW(WCHAR ch);", "IsCharAlphaNumericA": "WINUSERAPI WINBOOL WINAPI IsCharAlphaNumericA(CHAR ch);", "IsCharAlphaNumericW": "WINUSERAPI WINBOOL WINAPI IsCharAlphaNumericW(WCHAR ch);", "IsCharUpperA": "WINUSERAPI WINBOOL WINAPI IsCharUpperA(CHAR ch);", "IsCharUpperW": "WINUSERAPI WINBOOL WINAPI IsCharUpperW(WCHAR ch);", "IsCharLowerA": "WINUSERAPI WINBOOL WINAPI IsCharLowerA(CHAR ch);", "IsCharLowerW": "WINUSERAPI WINBOOL WINAPI IsCharLowerW(WCHAR ch);", "SetFocus": "WINUSERAPI HWND WINAPI SetFocus(HWND hWnd);", "GetActiveWindow": "WINUSERAPI HWND WINAPI GetActiveWindow(VOID);", "GetFocus": "WINUSERAPI HWND WINAPI GetFocus(VOID);", "GetKBCodePage": "WINUSERAPI UINT WINAPI GetKBCodePage(VOID);", "GetKeyState": "WINUSERAPI SHORT WINAPI GetKeyState(int nVirtKey);", "GetAsyncKeyState": "WINUSERAPI SHORT WINAPI GetAsyncKeyState(int vKey);", "GetKeyboardState": "WINUSERAPI WINBOOL WINAPI GetKeyboardState(PBYTE lpKeyState);", "SetKeyboardState": "WINUSERAPI WINBOOL WINAPI SetKeyboardState(LPBYTE lpKeyState);", "GetKeyNameTextA": "WINUSERAPI int WINAPI GetKeyNameTextA(LONG lParam,LPSTR lpString,int cchSize);", "GetKeyNameTextW": "WINUSERAPI int WINAPI GetKeyNameTextW(LONG lParam,LPWSTR lpString,int cchSize);", "GetKeyboardType": "WINUSERAPI int WINAPI GetKeyboardType(int nTypeFlag);", "ToAscii": "WINUSERAPI int WINAPI ToAscii(UINT uVirtKey,UINT uScanCode,CONST BYTE *lpKeyState,LPWORD lpChar,UINT uFlags);", "ToAsciiEx": "WINUSERAPI int WINAPI ToAsciiEx(UINT uVirtKey,UINT uScanCode,CONST BYTE *lpKeyState,LPWORD lpChar,UINT uFlags,HKL dwhkl);", "ToUnicode": "WINUSERAPI int WINAPI ToUnicode(UINT wVirtKey,UINT wScanCode,CONST BYTE *lpKeyState,LPWSTR pwszBuff,int cchBuff,UINT wFlags);", "OemKeyScan": "WINUSERAPI DWORD WINAPI OemKeyScan(WORD wOemChar);", "VkKeyScanA": "WINUSERAPI SHORT WINAPI VkKeyScanA(CHAR ch);", "VkKeyScanW": "WINUSERAPI SHORT WINAPI VkKeyScanW(WCHAR ch);", "VkKeyScanExA": "WINUSERAPI SHORT WINAPI VkKeyScanExA(CHAR ch,HKL dwhkl);", "VkKeyScanExW": "WINUSERAPI SHORT WINAPI VkKeyScanExW(WCHAR ch,HKL dwhkl);", "keybd_event": "WINUSERAPI VOID WINAPI keybd_event(BYTE bVk,BYTE bScan,DWORD dwFlags,ULONG_PTR dwExtraInfo);", "mouse_event": "WINUSERAPI VOID WINAPI mouse_event(DWORD dwFlags,DWORD dx,DWORD dy,DWORD dwData,ULONG_PTR dwExtraInfo);", "SendInput": "WINUSERAPI UINT WINAPI SendInput(UINT cInputs,LPINPUT pInputs,int cbSize);", "GetTouchInputInfo": "WINUSERAPI WINBOOL WINAPI GetTouchInputInfo (HTOUCHINPUT hTouchInput, UINT cInputs, PTOUCHINPUT pInputs, int cbSize);", "CloseTouchInputHandle": "WINUSERAPI WINBOOL WINAPI CloseTouchInputHandle (HTOUCHINPUT hTouchInput);", "RegisterTouchWindow": "WINUSERAPI WINBOOL WINAPI RegisterTouchWindow (HWND hwnd, ULONG ulFlags);", "UnregisterTouchWindow": "WINUSERAPI WINBOOL WINAPI UnregisterTouchWindow (HWND hwnd);", "IsTouchWindow": "WINUSERAPI WINBOOL WINAPI IsTouchWindow (HWND hwnd, PULONG pulFlags);", "InitializeTouchInjection": "WINUSERAPI WINBOOL WINAPI InitializeTouchInjection (UINT32 maxCount, DWORD dwMode);", "InjectTouchInput": "WINUSERAPI WINBOOL WINAPI InjectTouchInput (UINT32 count, CONST POINTER_TOUCH_INFO *contacts);", "GetPointerType": "WINUSERAPI WINBOOL WINAPI GetPointerType (UINT32 pointerId, POINTER_INPUT_TYPE *pointerType);", "GetPointerCursorId": "WINUSERAPI WINBOOL WINAPI GetPointerCursorId (UINT32 pointerId, UINT32 *cursorId);", "GetPointerInfo": "WINUSERAPI WINBOOL WINAPI GetPointerInfo (UINT32 pointerId, POINTER_INFO *pointerInfo);", "GetPointerInfoHistory": "WINUSERAPI WINBOOL WINAPI GetPointerInfoHistory (UINT32 pointerId, UINT32 *entriesCount, POINTER_INFO *pointerInfo);", "GetPointerFrameInfo": "WINUSERAPI WINBOOL WINAPI GetPointerFrameInfo (UINT32 pointerId, UINT32 *pointerCount, POINTER_INFO *pointerInfo);", "GetPointerFrameInfoHistory": "WINUSERAPI WINBOOL WINAPI GetPointerFrameInfoHistory (UINT32 pointerId, UINT32 *entriesCount, UINT32 *pointerCount, POINTER_INFO *pointerInfo);", "GetPointerTouchInfo": "WINUSERAPI WINBOOL WINAPI GetPointerTouchInfo (UINT32 pointerId, POINTER_TOUCH_INFO *touchInfo);", "GetPointerTouchInfoHistory": "WINUSERAPI WINBOOL WINAPI GetPointerTouchInfoHistory (UINT32 pointerId, UINT32 *entriesCount, POINTER_TOUCH_INFO *touchInfo);", "GetPointerFrameTouchInfo": "WINUSERAPI WINBOOL WINAPI GetPointerFrameTouchInfo (UINT32 pointerId, UINT32 *pointerCount, POINTER_TOUCH_INFO *touchInfo);", "GetPointerFrameTouchInfoHistory": "WINUSERAPI WINBOOL WINAPI GetPointerFrameTouchInfoHistory (UINT32 pointerId, UINT32 *entriesCount, UINT32 *pointerCount, POINTER_TOUCH_INFO *touchInfo);", "GetPointerPenInfo": "WINUSERAPI WINBOOL WINAPI GetPointerPenInfo (UINT32 pointerId, POINTER_PEN_INFO *penInfo);", "GetPointerPenInfoHistory": "WINUSERAPI WINBOOL WINAPI GetPointerPenInfoHistory (UINT32 pointerId, UINT32 *entriesCount, POINTER_PEN_INFO *penInfo);", "GetPointerFramePenInfo": "WINUSERAPI WINBOOL WINAPI GetPointerFramePenInfo (UINT32 pointerId, UINT32 *pointerCount, POINTER_PEN_INFO *penInfo);", "GetPointerFramePenInfoHistory": "WINUSERAPI WINBOOL WINAPI GetPointerFramePenInfoHistory (UINT32 pointerId, UINT32 *entriesCount, UINT32 *pointerCount, POINTER_PEN_INFO *penInfo);", "SkipPointerFrameMessages": "WINUSERAPI WINBOOL WINAPI SkipPointerFrameMessages (UINT32 pointerId);", "RegisterPointerInputTarget": "WINUSERAPI WINBOOL WINAPI RegisterPointerInputTarget (HWND hwnd, POINTER_INPUT_TYPE pointerType);", "RegisterPointerInputTargetEx": "WINUSERAPI WINBOOL WINAPI RegisterPointerInputTargetEx(HWND hwnd, POINTER_INPUT_TYPE pointerType, WINBOOL fObserve);", "UnregisterPointerInputTarget": "WINUSERAPI WINBOOL WINAPI UnregisterPointerInputTarget (HWND hwnd, POINTER_INPUT_TYPE pointerType);", "UnregisterPointerInputTargetEx": "WINUSERAPI WINBOOL WINAPI UnregisterPointerInputTargetEx(HWND hwnd, POINTER_INPUT_TYPE pointerType);", "EnableMouseInPointer": "WINUSERAPI WINBOOL WINAPI EnableMouseInPointer (WINBOOL fEnable);", "IsMouseInPointerEnabled": "WINUSERAPI WINBOOL WINAPI IsMouseInPointerEnabled (VOID);", "RegisterTouchHitTestingWindow": "WINUSERAPI WINBOOL WINAPI RegisterTouchHitTestingWindow (HWND hwnd, ULONG value);", "EvaluateProximityToRect": "WINUSERAPI WINBOOL WINAPI EvaluateProximityToRect (const RECT *controlBoundingBox, const TOUCH_HIT_TESTING_INPUT *pHitTestingInput, TOUCH_HIT_TESTING_PROXIMITY_EVALUATION *pProximityEval);", "EvaluateProximityToPolygon": "WINUSERAPI WINBOOL WINAPI EvaluateProximityToPolygon (UINT32 numVertices, const POINT *controlPolygon, const TOUCH_HIT_TESTING_INPUT *pHitTestingInput, TOUCH_HIT_TESTING_PROXIMITY_EVALUATION *pProximityEval);", "PackTouchHitTestingProximityEvaluation": "WINUSERAPI LRESULT WINAPI PackTouchHitTestingProximityEvaluation (const TOUCH_HIT_TESTING_INPUT *pHitTestingInput, const TOUCH_HIT_TESTING_PROXIMITY_EVALUATION *pProximityEval);", "GetWindowFeedbackSetting": "WINUSERAPI WINBOOL WINAPI GetWindowFeedbackSetting (HWND hwnd, FEEDBACK_TYPE feedback, DWORD dwFlags, UINT32 *pSize, VOID *config);", "SetWindowFeedbackSetting": "WINUSERAPI WINBOOL WINAPI SetWindowFeedbackSetting (HWND hwnd, FEEDBACK_TYPE feedback, DWORD dwFlags, UINT32 size, CONST VOID *configuration);", "EnableMouseInPointerForThread": "WINUSERAPI WINBOOL WINAPI EnableMouseInPointerForThread(VOID);", "CreateSyntheticPointerDevice": "WINUSERAPI HSYNTHETICPOINTERDEVICE WINAPI CreateSyntheticPointerDevice(POINTER_INPUT_TYPE pointerType, ULONG maxCount, POINTER_FEEDBACK_MODE mode);", "InjectSyntheticPointerInput": "WINUSERAPI WINBOOL WINAPI InjectSyntheticPointerInput(HSYNTHETICPOINTERDEVICE device, CONST POINTER_TYPE_INFO* pointerInfo, UINT32 count);", "DestroySyntheticPointerDevice": "WINUSERAPI VOID WINAPI DestroySyntheticPointerDevice(HSYNTHETICPOINTERDEVICE device);", "GetLastInputInfo": "WINUSERAPI WINBOOL WINAPI GetLastInputInfo(PLASTINPUTINFO plii);", "MapVirtualKeyA": "WINUSERAPI UINT WINAPI MapVirtualKeyA(UINT uCode,UINT uMapType);", "MapVirtualKeyW": "WINUSERAPI UINT WINAPI MapVirtualKeyW(UINT uCode,UINT uMapType);", "MapVirtualKeyExA": "WINUSERAPI UINT WINAPI MapVirtualKeyExA(UINT uCode,UINT uMapType,HKL dwhkl);", "MapVirtualKeyExW": "WINUSERAPI UINT WINAPI MapVirtualKeyExW(UINT uCode,UINT uMapType,HKL dwhkl);", "GetInputState": "WINUSERAPI WINBOOL WINAPI GetInputState(VOID);", "GetQueueStatus": "WINUSERAPI DWORD WINAPI GetQueueStatus(UINT flags);", "GetCapture": "WINUSERAPI HWND WINAPI GetCapture(VOID);", "SetCapture": "WINUSERAPI HWND WINAPI SetCapture(HWND hWnd);", "ReleaseCapture": "WINUSERAPI WINBOOL WINAPI ReleaseCapture(VOID);", "MsgWaitForMultipleObjects": "WINUSERAPI DWORD WINAPI MsgWaitForMultipleObjects(DWORD nCount,CONST HANDLE *pHandles,WINBOOL fWaitAll,DWORD dwMilliseconds,DWORD dwWakeMask);", "MsgWaitForMultipleObjectsEx": "WINUSERAPI DWORD WINAPI MsgWaitForMultipleObjectsEx(DWORD nCount,CONST HANDLE *pHandles,DWORD dwMilliseconds,DWORD dwWakeMask,DWORD dwFlags);", "SetTimer": "WINUSERAPI UINT_PTR WINAPI SetTimer(HWND hWnd,UINT_PTR nIDEvent,UINT uElapse,TIMERPROC lpTimerFunc);", "KillTimer": "WINUSERAPI WINBOOL WINAPI KillTimer(HWND hWnd,UINT_PTR uIDEvent);", "IsWindowUnicode": "WINUSERAPI WINBOOL WINAPI IsWindowUnicode(HWND hWnd);", "EnableWindow": "WINUSERAPI WINBOOL WINAPI EnableWindow(HWND hWnd,WINBOOL bEnable);", "IsWindowEnabled": "WINUSERAPI WINBOOL WINAPI IsWindowEnabled(HWND hWnd);", "LoadAcceleratorsA": "WINUSERAPI HACCEL WINAPI LoadAcceleratorsA(HINSTANCE hInstance,LPCSTR lpTableName);", "LoadAcceleratorsW": "WINUSERAPI HACCEL WINAPI LoadAcceleratorsW(HINSTANCE hInstance,LPCWSTR lpTableName);", "CreateAcceleratorTableA": "WINUSERAPI HACCEL WINAPI CreateAcceleratorTableA(LPACCEL paccel,int cAccel);", "CreateAcceleratorTableW": "WINUSERAPI HACCEL WINAPI CreateAcceleratorTableW(LPACCEL paccel,int cAccel);", "DestroyAcceleratorTable": "WINUSERAPI WINBOOL WINAPI DestroyAcceleratorTable(HACCEL hAccel);", "CopyAcceleratorTableA": "WINUSERAPI int WINAPI CopyAcceleratorTableA(HACCEL hAccelSrc,LPACCEL lpAccelDst,int cAccelEntries);", "CopyAcceleratorTableW": "WINUSERAPI int WINAPI CopyAcceleratorTableW(HACCEL hAccelSrc,LPACCEL lpAccelDst,int cAccelEntries);", "TranslateAcceleratorA": "WINUSERAPI int WINAPI TranslateAcceleratorA(HWND hWnd,HACCEL hAccTable,LPMSG lpMsg);", "TranslateAcceleratorW": "WINUSERAPI int WINAPI TranslateAcceleratorW(HWND hWnd,HACCEL hAccTable,LPMSG lpMsg);", "SetCoalescableTimer": "WINUSERAPI UINT_PTR WINAPI SetCoalescableTimer (HWND hWnd, UINT_PTR nIDEvent, UINT uElapse, TIMERPROC lpTimerFunc, ULONG uToleranceDelay);", "GetSystemMetrics": "WINUSERAPI int WINAPI GetSystemMetrics(int nIndex);", "GetSystemMetricsForDpi": "WINUSERAPI int WINAPI GetSystemMetricsForDpi(int nIndex, UINT dpi);", "LoadMenuA": "WINUSERAPI HMENU WINAPI LoadMenuA(HINSTANCE hInstance,LPCSTR lpMenuName);", "LoadMenuW": "WINUSERAPI HMENU WINAPI LoadMenuW(HINSTANCE hInstance,LPCWSTR lpMenuName);", "LoadMenuIndirectA": "WINUSERAPI HMENU WINAPI LoadMenuIndirectA(CONST MENUTEMPLATEA *lpMenuTemplate);", "LoadMenuIndirectW": "WINUSERAPI HMENU WINAPI LoadMenuIndirectW(CONST MENUTEMPLATEW *lpMenuTemplate);", "GetMenu": "WINUSERAPI HMENU WINAPI GetMenu(HWND hWnd);", "SetMenu": "WINUSERAPI WINBOOL WINAPI SetMenu(HWND hWnd,HMENU hMenu);", "ChangeMenuA": "WINUSERAPI WINBOOL WINAPI ChangeMenuA(HMENU hMenu,UINT cmd,LPCSTR lpszNewItem,UINT cmdInsert,UINT flags);", "ChangeMenuW": "WINUSERAPI WINBOOL WINAPI ChangeMenuW(HMENU hMenu,UINT cmd,LPCWSTR lpszNewItem,UINT cmdInsert,UINT flags);", "HiliteMenuItem": "WINUSERAPI WINBOOL WINAPI HiliteMenuItem(HWND hWnd,HMENU hMenu,UINT uIDHiliteItem,UINT uHilite);", "GetMenuStringA": "WINUSERAPI int WINAPI GetMenuStringA(HMENU hMenu,UINT uIDItem,LPSTR lpString,int cchMax,UINT flags);", "GetMenuStringW": "WINUSERAPI int WINAPI GetMenuStringW(HMENU hMenu,UINT uIDItem,LPWSTR lpString,int cchMax,UINT flags);", "GetMenuState": "WINUSERAPI UINT WINAPI GetMenuState(HMENU hMenu,UINT uId,UINT uFlags);", "DrawMenuBar": "WINUSERAPI WINBOOL WINAPI DrawMenuBar(HWND hWnd);", "GetSystemMenu": "WINUSERAPI HMENU WINAPI GetSystemMenu(HWND hWnd,WINBOOL bRevert);", "CreateMenu": "WINUSERAPI HMENU WINAPI CreateMenu(VOID);", "CreatePopupMenu": "WINUSERAPI HMENU WINAPI CreatePopupMenu(VOID);", "DestroyMenu": "WINUSERAPI WINBOOL WINAPI DestroyMenu(HMENU hMenu);", "CheckMenuItem": "WINUSERAPI DWORD WINAPI CheckMenuItem(HMENU hMenu,UINT uIDCheckItem,UINT uCheck);", "EnableMenuItem": "WINUSERAPI WINBOOL WINAPI EnableMenuItem(HMENU hMenu,UINT uIDEnableItem,UINT uEnable);", "GetSubMenu": "WINUSERAPI HMENU WINAPI GetSubMenu(HMENU hMenu,int nPos);", "GetMenuItemID": "WINUSERAPI UINT WINAPI GetMenuItemID(HMENU hMenu,int nPos);", "GetMenuItemCount": "WINUSERAPI int WINAPI GetMenuItemCount(HMENU hMenu);", "InsertMenuA": "WINUSERAPI WINBOOL WINAPI InsertMenuA(HMENU hMenu,UINT uPosition,UINT uFlags,UINT_PTR uIDNewItem,LPCSTR lpNewItem);", "InsertMenuW": "WINUSERAPI WINBOOL WINAPI InsertMenuW(HMENU hMenu,UINT uPosition,UINT uFlags,UINT_PTR uIDNewItem,LPCWSTR lpNewItem);", "AppendMenuA": "WINUSERAPI WINBOOL WINAPI AppendMenuA(HMENU hMenu,UINT uFlags,UINT_PTR uIDNewItem,LPCSTR lpNewItem);", "AppendMenuW": "WINUSERAPI WINBOOL WINAPI AppendMenuW(HMENU hMenu,UINT uFlags,UINT_PTR uIDNewItem,LPCWSTR lpNewItem);", "ModifyMenuA": "WINUSERAPI WINBOOL WINAPI ModifyMenuA(HMENU hMnu,UINT uPosition,UINT uFlags,UINT_PTR uIDNewItem,LPCSTR lpNewItem);", "ModifyMenuW": "WINUSERAPI WINBOOL WINAPI ModifyMenuW(HMENU hMnu,UINT uPosition,UINT uFlags,UINT_PTR uIDNewItem,LPCWSTR lpNewItem);", "RemoveMenu": "WINUSERAPI WINBOOL WINAPI RemoveMenu(HMENU hMenu,UINT uPosition,UINT uFlags);", "DeleteMenu": "WINUSERAPI WINBOOL WINAPI DeleteMenu(HMENU hMenu,UINT uPosition,UINT uFlags);", "SetMenuItemBitmaps": "WINUSERAPI WINBOOL WINAPI SetMenuItemBitmaps(HMENU hMenu,UINT uPosition,UINT uFlags,HBITMAP hBitmapUnchecked,HBITMAP hBitmapChecked);", "GetMenuCheckMarkDimensions": "WINUSERAPI LONG WINAPI GetMenuCheckMarkDimensions(VOID);", "TrackPopupMenu": "WINUSERAPI WINBOOL WINAPI TrackPopupMenu(HMENU hMenu,UINT uFlags,int x,int y,int nReserved,HWND hWnd,CONST RECT *prcRect);", "TrackPopupMenuEx": "WINUSERAPI WINBOOL WINAPI TrackPopupMenuEx(HMENU,UINT,int,int,HWND,LPTPMPARAMS);", "GetMenuInfo": "WINUSERAPI WINBOOL WINAPI GetMenuInfo(HMENU,LPMENUINFO);", "SetMenuInfo": "WINUSERAPI WINBOOL WINAPI SetMenuInfo(HMENU,LPCMENUINFO);", "EndMenu": "WINUSERAPI WINBOOL WINAPI EndMenu(VOID);", "CalculatePopupWindowPosition": "WINUSERAPI WINBOOL WINAPI CalculatePopupWindowPosition (const POINT *anchorPoint, const SIZE *windowSize, UINT flags, RECT *excludeRect, RECT *popupWindowPosition);", "InsertMenuItemA": "WINUSERAPI WINBOOL WINAPI InsertMenuItemA(HMENU hmenu,UINT item,WINBOOL fByPosition,LPCMENUITEMINFOA lpmi);", "InsertMenuItemW": "WINUSERAPI WINBOOL WINAPI InsertMenuItemW(HMENU hmenu,UINT item,WINBOOL fByPosition,LPCMENUITEMINFOW lpmi);", "GetMenuItemInfoA": "WINUSERAPI WINBOOL WINAPI GetMenuItemInfoA(HMENU hmenu,UINT item,WINBOOL fByPosition,LPMENUITEMINFOA lpmii);", "GetMenuItemInfoW": "WINUSERAPI WINBOOL WINAPI GetMenuItemInfoW(HMENU hmenu,UINT item,WINBOOL fByPosition,LPMENUITEMINFOW lpmii);", "SetMenuItemInfoA": "WINUSERAPI WINBOOL WINAPI SetMenuItemInfoA(HMENU hmenu,UINT item,WINBOOL fByPositon,LPCMENUITEMINFOA lpmii);", "SetMenuItemInfoW": "WINUSERAPI WINBOOL WINAPI SetMenuItemInfoW(HMENU hmenu,UINT item,WINBOOL fByPositon,LPCMENUITEMINFOW lpmii);", "GetMenuDefaultItem": "WINUSERAPI UINT WINAPI GetMenuDefaultItem(HMENU hMenu,UINT fByPos,UINT gmdiFlags);", "SetMenuDefaultItem": "WINUSERAPI WINBOOL WINAPI SetMenuDefaultItem(HMENU hMenu,UINT uItem,UINT fByPos);", "GetMenuItemRect": "WINUSERAPI WINBOOL WINAPI GetMenuItemRect(HWND hWnd,HMENU hMenu,UINT uItem,LPRECT lprcItem);", "MenuItemFromPoint": "WINUSERAPI int WINAPI MenuItemFromPoint(HWND hWnd,HMENU hMenu,POINT ptScreen);", "DragObject": "WINUSERAPI DWORD WINAPI DragObject(HWND hwndParent,HWND hwndFrom,UINT fmt,ULONG_PTR data,HCURSOR hcur);", "DragDetect": "WINUSERAPI WINBOOL WINAPI DragDetect(HWND hwnd,POINT pt);", "DrawIcon": "WINUSERAPI WINBOOL WINAPI DrawIcon(HDC hDC,int X,int Y,HICON hIcon);", "DrawTextA": "WINUSERAPI int WINAPI DrawTextA(HDC hdc,LPCSTR lpchText,int cchText,LPRECT lprc,UINT format);", "DrawTextW": "WINUSERAPI int WINAPI DrawTextW(HDC hdc,LPCWSTR lpchText,int cchText,LPRECT lprc,UINT format);", "DrawTextExA": "WINUSERAPI int WINAPI DrawTextExA(HDC hdc,LPSTR lpchText,int cchText,LPRECT lprc,UINT format,LPDRAWTEXTPARAMS lpdtp);", "DrawTextExW": "WINUSERAPI int WINAPI DrawTextExW(HDC hdc,LPWSTR lpchText,int cchText,LPRECT lprc,UINT format,LPDRAWTEXTPARAMS lpdtp);", "GrayStringA": "WINUSERAPI WINBOOL WINAPI GrayStringA(HDC hDC,HBRUSH hBrush,GRAYSTRINGPROC lpOutputFunc,LPARAM lpData,int nCount,int X,int Y,int nWidth,int nHeight);", "GrayStringW": "WINUSERAPI WINBOOL WINAPI GrayStringW(HDC hDC,HBRUSH hBrush,GRAYSTRINGPROC lpOutputFunc,LPARAM lpData,int nCount,int X,int Y,int nWidth,int nHeight);", "DrawStateA": "WINUSERAPI WINBOOL WINAPI DrawStateA(HDC hdc,HBRUSH hbrFore,DRAWSTATEPROC qfnCallBack,LPARAM lData,WPARAM wData,int x,int y,int cx,int cy,UINT uFlags);", "DrawStateW": "WINUSERAPI WINBOOL WINAPI DrawStateW(HDC hdc,HBRUSH hbrFore,DRAWSTATEPROC qfnCallBack,LPARAM lData,WPARAM wData,int x,int y,int cx,int cy,UINT uFlags);", "TabbedTextOutA": "WINUSERAPI LONG WINAPI TabbedTextOutA(HDC hdc,int x,int y,LPCSTR lpString,int chCount,int nTabPositions,CONST INT *lpnTabStopPositions,int nTabOrigin);", "TabbedTextOutW": "WINUSERAPI LONG WINAPI TabbedTextOutW(HDC hdc,int x,int y,LPCWSTR lpString,int chCount,int nTabPositions,CONST INT *lpnTabStopPositions,int nTabOrigin);", "GetTabbedTextExtentA": "WINUSERAPI DWORD WINAPI GetTabbedTextExtentA(HDC hdc,LPCSTR lpString,int chCount,int nTabPositions,CONST INT *lpnTabStopPositions);", "GetTabbedTextExtentW": "WINUSERAPI DWORD WINAPI GetTabbedTextExtentW(HDC hdc,LPCWSTR lpString,int chCount,int nTabPositions,CONST INT *lpnTabStopPositions);", "UpdateWindow": "WINUSERAPI WINBOOL WINAPI UpdateWindow(HWND hWnd);", "SetActiveWindow": "WINUSERAPI HWND WINAPI SetActiveWindow(HWND hWnd);", "GetForegroundWindow": "WINUSERAPI HWND WINAPI GetForegroundWindow(VOID);", "PaintDesktop": "WINUSERAPI WINBOOL WINAPI PaintDesktop(HDC hdc);", "SwitchToThisWindow": "WINUSERAPI VOID WINAPI SwitchToThisWindow(HWND hwnd,WINBOOL fUnknown);", "SetForegroundWindow": "WINUSERAPI WINBOOL WINAPI SetForegroundWindow(HWND hWnd);", "AllowSetForegroundWindow": "WINUSERAPI WINBOOL WINAPI AllowSetForegroundWindow(DWORD dwProcessId);", "LockSetForegroundWindow": "WINUSERAPI WINBOOL WINAPI LockSetForegroundWindow(UINT uLockCode);", "WindowFromDC": "WINUSERAPI HWND WINAPI WindowFromDC(HDC hDC);", "GetDC": "WINUSERAPI HDC WINAPI GetDC(HWND hWnd);", "GetDCEx": "WINUSERAPI HDC WINAPI GetDCEx(HWND hWnd,HRGN hrgnClip,DWORD flags);", "GetWindowDC": "WINUSERAPI HDC WINAPI GetWindowDC(HWND hWnd);", "ReleaseDC": "WINUSERAPI int WINAPI ReleaseDC(HWND hWnd,HDC hDC);", "BeginPaint": "WINUSERAPI HDC WINAPI BeginPaint(HWND hWnd,LPPAINTSTRUCT lpPaint);", "EndPaint": "WINUSERAPI WINBOOL WINAPI EndPaint(HWND hWnd,CONST PAINTSTRUCT *lpPaint);", "GetUpdateRect": "WINUSERAPI WINBOOL WINAPI GetUpdateRect(HWND hWnd,LPRECT lpRect,WINBOOL bErase);", "GetUpdateRgn": "WINUSERAPI int WINAPI GetUpdateRgn(HWND hWnd,HRGN hRgn,WINBOOL bErase);", "SetWindowRgn": "WINUSERAPI int WINAPI SetWindowRgn(HWND hWnd,HRGN hRgn,WINBOOL bRedraw);", "GetWindowRgn": "WINUSERAPI int WINAPI GetWindowRgn(HWND hWnd,HRGN hRgn);", "GetWindowRgnBox": "WINUSERAPI int WINAPI GetWindowRgnBox(HWND hWnd,LPRECT lprc);", "ExcludeUpdateRgn": "WINUSERAPI int WINAPI ExcludeUpdateRgn(HDC hDC,HWND hWnd);", "InvalidateRect": "WINUSERAPI WINBOOL WINAPI InvalidateRect(HWND hWnd,CONST RECT *lpRect,WINBOOL bErase);", "ValidateRect": "WINUSERAPI WINBOOL WINAPI ValidateRect(HWND hWnd,CONST RECT *lpRect);", "InvalidateRgn": "WINUSERAPI WINBOOL WINAPI InvalidateRgn(HWND hWnd,HRGN hRgn,WINBOOL bErase);", "ValidateRgn": "WINUSERAPI WINBOOL WINAPI ValidateRgn(HWND hWnd,HRGN hRgn);", "RedrawWindow": "WINUSERAPI WINBOOL WINAPI RedrawWindow(HWND hWnd,CONST RECT *lprcUpdate,HRGN hrgnUpdate,UINT flags);", "LockWindowUpdate": "WINUSERAPI WINBOOL WINAPI LockWindowUpdate(HWND hWndLock);", "ScrollWindow": "WINUSERAPI WINBOOL WINAPI ScrollWindow(HWND hWnd,int XAmount,int YAmount,CONST RECT *lpRect,CONST RECT *lpClipRect);", "ScrollDC": "WINUSERAPI WINBOOL WINAPI ScrollDC(HDC hDC,int dx,int dy,CONST RECT *lprcScroll,CONST RECT *lprcClip,HRGN hrgnUpdate,LPRECT lprcUpdate);", "ScrollWindowEx": "WINUSERAPI int WINAPI ScrollWindowEx(HWND hWnd,int dx,int dy,CONST RECT *prcScroll,CONST RECT *prcClip,HRGN hrgnUpdate,LPRECT prcUpdate,UINT flags);", "SetScrollPos": "WINUSERAPI int WINAPI SetScrollPos(HWND hWnd,int nBar,int nPos,WINBOOL bRedraw);", "GetScrollPos": "WINUSERAPI int WINAPI GetScrollPos(HWND hWnd,int nBar);", "SetScrollRange": "WINUSERAPI WINBOOL WINAPI SetScrollRange(HWND hWnd,int nBar,int nMinPos,int nMaxPos,WINBOOL bRedraw);", "GetScrollRange": "WINUSERAPI WINBOOL WINAPI GetScrollRange(HWND hWnd,int nBar,LPINT lpMinPos,LPINT lpMaxPos);", "ShowScrollBar": "WINUSERAPI WINBOOL WINAPI ShowScrollBar(HWND hWnd,int wBar,WINBOOL bShow);", "EnableScrollBar": "WINUSERAPI WINBOOL WINAPI EnableScrollBar(HWND hWnd,UINT wSBflags,UINT wArrows);", "SetPropA": "WINUSERAPI WINBOOL WINAPI SetPropA(HWND hWnd,LPCSTR lpString,HANDLE hData);", "SetPropW": "WINUSERAPI WINBOOL WINAPI SetPropW(HWND hWnd,LPCWSTR lpString,HANDLE hData);", "GetPropA": "WINUSERAPI HANDLE WINAPI GetPropA(HWND hWnd,LPCSTR lpString);", "GetPropW": "WINUSERAPI HANDLE WINAPI GetPropW(HWND hWnd,LPCWSTR lpString);", "RemovePropA": "WINUSERAPI HANDLE WINAPI RemovePropA(HWND hWnd,LPCSTR lpString);", "RemovePropW": "WINUSERAPI HANDLE WINAPI RemovePropW(HWND hWnd,LPCWSTR lpString);", "EnumPropsExA": "WINUSERAPI int WINAPI EnumPropsExA(HWND hWnd,PROPENUMPROCEXA lpEnumFunc,LPARAM lParam);", "EnumPropsExW": "WINUSERAPI int WINAPI EnumPropsExW(HWND hWnd,PROPENUMPROCEXW lpEnumFunc,LPARAM lParam);", "EnumPropsA": "WINUSERAPI int WINAPI EnumPropsA(HWND hWnd,PROPENUMPROCA lpEnumFunc);", "EnumPropsW": "WINUSERAPI int WINAPI EnumPropsW(HWND hWnd,PROPENUMPROCW lpEnumFunc);", "SetWindowTextA": "WINUSERAPI WINBOOL WINAPI SetWindowTextA(HWND hWnd,LPCSTR lpString);", "SetWindowTextW": "WINUSERAPI WINBOOL WINAPI SetWindowTextW(HWND hWnd,LPCWSTR lpString);", "GetWindowTextA": "WINUSERAPI int WINAPI GetWindowTextA(HWND hWnd,LPSTR lpString,int nMaxCount);", "GetWindowTextW": "WINUSERAPI int WINAPI GetWindowTextW(HWND hWnd,LPWSTR lpString,int nMaxCount);", "GetWindowTextLengthA": "WINUSERAPI int WINAPI GetWindowTextLengthA(HWND hWnd);", "GetWindowTextLengthW": "WINUSERAPI int WINAPI GetWindowTextLengthW(HWND hWnd);", "GetClientRect": "WINUSERAPI WINBOOL WINAPI GetClientRect(HWND hWnd,LPRECT lpRect);", "GetWindowRect": "WINUSERAPI WINBOOL WINAPI GetWindowRect(HWND hWnd,LPRECT lpRect);", "AdjustWindowRect": "WINUSERAPI WINBOOL WINAPI AdjustWindowRect(LPRECT lpRect,DWORD dwStyle,WINBOOL bMenu);", "AdjustWindowRectEx": "WINUSERAPI WINBOOL WINAPI AdjustWindowRectEx(LPRECT lpRect,DWORD dwStyle,WINBOOL bMenu,DWORD dwExStyle);", "AdjustWindowRectExForDpi": "WINUSERAPI WINBOOL WINAPI AdjustWindowRectExForDpi(LPRECT lpRect, DWORD dwStyle, WINBOOL bMenu, DWORD dwExStyle, UINT dpi);", "SetWindowContextHelpId": "WINUSERAPI WINBOOL WINAPI SetWindowContextHelpId(HWND,DWORD);", "GetWindowContextHelpId": "WINUSERAPI DWORD WINAPI GetWindowContextHelpId(HWND);", "SetMenuContextHelpId": "WINUSERAPI WINBOOL WINAPI SetMenuContextHelpId(HMENU,DWORD);", "GetMenuContextHelpId": "WINUSERAPI DWORD WINAPI GetMenuContextHelpId(HMENU);", "MessageBoxA": "WINUSERAPI int WINAPI MessageBoxA(HWND hWnd,LPCSTR lpText,LPCSTR lpCaption,UINT uType);", "MessageBoxW": "WINUSERAPI int WINAPI MessageBoxW(HWND hWnd,LPCWSTR lpText,LPCWSTR lpCaption,UINT uType);", "MessageBoxExA": "WINUSERAPI int WINAPI MessageBoxExA(HWND hWnd,LPCSTR lpText,LPCSTR lpCaption,UINT uType,WORD wLanguageId);", "MessageBoxExW": "WINUSERAPI int WINAPI MessageBoxExW(HWND hWnd,LPCWSTR lpText,LPCWSTR lpCaption,UINT uType,WORD wLanguageId);", "MessageBoxIndirectA": "WINUSERAPI int WINAPI MessageBoxIndirectA(CONST MSGBOXPARAMSA *lpmbp);", "MessageBoxIndirectW": "WINUSERAPI int WINAPI MessageBoxIndirectW(CONST MSGBOXPARAMSW *lpmbp);", "MessageBeep": "WINUSERAPI WINBOOL WINAPI MessageBeep(UINT uType);", "ShowCursor": "WINUSERAPI int WINAPI ShowCursor(WINBOOL bShow);", "SetCursorPos": "WINUSERAPI WINBOOL WINAPI SetCursorPos(int X,int Y);", "SetCursor": "WINUSERAPI HCURSOR WINAPI SetCursor(HCURSOR hCursor);", "GetCursorPos": "WINUSERAPI WINBOOL WINAPI GetCursorPos(LPPOINT lpPoint);", "ClipCursor": "WINUSERAPI WINBOOL WINAPI ClipCursor(CONST RECT *lpRect);", "GetClipCursor": "WINUSERAPI WINBOOL WINAPI GetClipCursor(LPRECT lpRect);", "GetCursor": "WINUSERAPI HCURSOR WINAPI GetCursor(VOID);", "CreateCaret": "WINUSERAPI WINBOOL WINAPI CreateCaret(HWND hWnd,HBITMAP hBitmap,int nWidth,int nHeight);", "GetCaretBlinkTime": "WINUSERAPI UINT WINAPI GetCaretBlinkTime(VOID);", "SetCaretBlinkTime": "WINUSERAPI WINBOOL WINAPI SetCaretBlinkTime(UINT uMSeconds);", "DestroyCaret": "WINUSERAPI WINBOOL WINAPI DestroyCaret(VOID);", "HideCaret": "WINUSERAPI WINBOOL WINAPI HideCaret(HWND hWnd);", "ShowCaret": "WINUSERAPI WINBOOL WINAPI ShowCaret(HWND hWnd);", "SetCaretPos": "WINUSERAPI WINBOOL WINAPI SetCaretPos(int X,int Y);", "GetCaretPos": "WINUSERAPI WINBOOL WINAPI GetCaretPos(LPPOINT lpPoint);", "ClientToScreen": "WINUSERAPI WINBOOL WINAPI ClientToScreen(HWND hWnd,LPPOINT lpPoint);", "ScreenToClient": "WINUSERAPI WINBOOL WINAPI ScreenToClient(HWND hWnd,LPPOINT lpPoint);", "MapWindowPoints": "WINUSERAPI int WINAPI MapWindowPoints(HWND hWndFrom,HWND hWndTo,LPPOINT lpPoints,UINT cPoints);", "WindowFromPoint": "WINUSERAPI HWND WINAPI WindowFromPoint(POINT Point);", "ChildWindowFromPoint": "WINUSERAPI HWND WINAPI ChildWindowFromPoint(HWND hWndParent,POINT Point);", "ChildWindowFromPointEx": "WINUSERAPI HWND WINAPI ChildWindowFromPointEx(HWND hwnd,POINT pt,UINT flags);", "SetPhysicalCursorPos": "WINUSERAPI WINBOOL WINAPI SetPhysicalCursorPos (int X, int Y);", "GetPhysicalCursorPos": "WINUSERAPI WINBOOL WINAPI GetPhysicalCursorPos (LPPOINT lpPoint);", "LogicalToPhysicalPoint": "WINUSERAPI WINBOOL WINAPI LogicalToPhysicalPoint (HWND hWnd, LPPOINT lpPoint);", "PhysicalToLogicalPoint": "WINUSERAPI WINBOOL WINAPI PhysicalToLogicalPoint (HWND hWnd, LPPOINT lpPoint);", "WindowFromPhysicalPoint": "WINUSERAPI HWND WINAPI WindowFromPhysicalPoint (POINT Point);", "LogicalToPhysicalPointForPerMonitorDPI": "WINUSERAPI WINBOOL WINAPI LogicalToPhysicalPointForPerMonitorDPI (HWND hwnd, LPPOINT lpPoint);", "PhysicalToLogicalPointForPerMonitorDPI": "WINUSERAPI WINBOOL WINAPI PhysicalToLogicalPointForPerMonitorDPI (HWND hwnd, LPPOINT lpPoint);", "GetSysColor": "WINUSERAPI DWORD WINAPI GetSysColor(int nIndex);", "GetSysColorBrush": "WINUSERAPI HBRUSH WINAPI GetSysColorBrush(int nIndex);", "SetSysColors": "WINUSERAPI WINBOOL WINAPI SetSysColors(int cElements,CONST INT *lpaElements,CONST COLORREF *lpaRgbValues);", "DrawFocusRect": "WINUSERAPI WINBOOL WINAPI DrawFocusRect(HDC hDC,CONST RECT *lprc);", "FillRect": "WINUSERAPI int WINAPI FillRect(HDC hDC,CONST RECT *lprc,HBRUSH hbr);", "FrameRect": "WINUSERAPI int WINAPI FrameRect(HDC hDC,CONST RECT *lprc,HBRUSH hbr);", "InvertRect": "WINUSERAPI WINBOOL WINAPI InvertRect(HDC hDC,CONST RECT *lprc);", "SetRect": "WINUSERAPI WINBOOL WINAPI SetRect(LPRECT lprc,int xLeft,int yTop,int xRight,int yBottom);", "SetRectEmpty": "WINUSERAPI WINBOOL WINAPI SetRectEmpty(LPRECT lprc);", "CopyRect": "WINUSERAPI WINBOOL WINAPI CopyRect(LPRECT lprcDst,CONST RECT *lprcSrc);", "InflateRect": "WINUSERAPI WINBOOL WINAPI InflateRect(LPRECT lprc,int dx,int dy);", "IntersectRect": "WINUSERAPI WINBOOL WINAPI IntersectRect(LPRECT lprcDst,CONST RECT *lprcSrc1,CONST RECT *lprcSrc2);", "UnionRect": "WINUSERAPI WINBOOL WINAPI UnionRect(LPRECT lprcDst,CONST RECT *lprcSrc1,CONST RECT *lprcSrc2);", "SubtractRect": "WINUSERAPI WINBOOL WINAPI SubtractRect(LPRECT lprcDst,CONST RECT *lprcSrc1,CONST RECT *lprcSrc2);", "OffsetRect": "WINUSERAPI WINBOOL WINAPI OffsetRect(LPRECT lprc,int dx,int dy);", "IsRectEmpty": "WINUSERAPI WINBOOL WINAPI IsRectEmpty(CONST RECT *lprc);", "EqualRect": "WINUSERAPI WINBOOL WINAPI EqualRect(CONST RECT *lprc1,CONST RECT *lprc2);", "PtInRect": "WINUSERAPI WINBOOL WINAPI PtInRect(CONST RECT *lprc,POINT pt);", "GetWindowWord": "WINUSERAPI WORD WINAPI GetWindowWord(HWND hWnd,int nIndex);", "SetWindowWord": "WINUSERAPI WORD WINAPI SetWindowWord(HWND hWnd,int nIndex,WORD wNewWord);", "GetWindowLongA": "WINUSERAPI LONG WINAPI GetWindowLongA(HWND hWnd,int nIndex);", "GetWindowLongW": "WINUSERAPI LONG WINAPI GetWindowLongW(HWND hWnd,int nIndex);", "SetWindowLongA": "WINUSERAPI LONG WINAPI SetWindowLongA(HWND hWnd,int nIndex,LONG dwNewLong);", "SetWindowLongW": "WINUSERAPI LONG WINAPI SetWindowLongW(HWND hWnd,int nIndex,LONG dwNewLong);", "GetWindowLongPtrA": "WINUSERAPI LONG_PTR WINAPI GetWindowLongPtrA(HWND hWnd,int nIndex);", "GetWindowLongPtrW": "WINUSERAPI LONG_PTR WINAPI GetWindowLongPtrW(HWND hWnd,int nIndex);", "SetWindowLongPtrA": "WINUSERAPI LONG_PTR WINAPI SetWindowLongPtrA(HWND hWnd,int nIndex,LONG_PTR dwNewLong);", "SetWindowLongPtrW": "WINUSERAPI LONG_PTR WINAPI SetWindowLongPtrW(HWND hWnd,int nIndex,LONG_PTR dwNewLong);", "GetClassWord": "WINUSERAPI WORD WINAPI GetClassWord(HWND hWnd,int nIndex);", "SetClassWord": "WINUSERAPI WORD WINAPI SetClassWord(HWND hWnd,int nIndex,WORD wNewWord);", "GetClassLongA": "WINUSERAPI DWORD WINAPI GetClassLongA(HWND hWnd,int nIndex);", "GetClassLongW": "WINUSERAPI DWORD WINAPI GetClassLongW(HWND hWnd,int nIndex);", "SetClassLongA": "WINUSERAPI DWORD WINAPI SetClassLongA(HWND hWnd,int nIndex,LONG dwNewLong);", "SetClassLongW": "WINUSERAPI DWORD WINAPI SetClassLongW(HWND hWnd,int nIndex,LONG dwNewLong);", "GetClassLongPtrA": "WINUSERAPI ULONG_PTR WINAPI GetClassLongPtrA(HWND hWnd,int nIndex);", "GetClassLongPtrW": "WINUSERAPI ULONG_PTR WINAPI GetClassLongPtrW(HWND hWnd,int nIndex);", "SetClassLongPtrA": "WINUSERAPI ULONG_PTR WINAPI SetClassLongPtrA(HWND hWnd,int nIndex,LONG_PTR dwNewLong);", "SetClassLongPtrW": "WINUSERAPI ULONG_PTR WINAPI SetClassLongPtrW(HWND hWnd,int nIndex,LONG_PTR dwNewLong);", "GetProcessDefaultLayout": "WINUSERAPI WINBOOL WINAPI GetProcessDefaultLayout(DWORD *pdwDefaultLayout);", "SetProcessDefaultLayout": "WINUSERAPI WINBOOL WINAPI SetProcessDefaultLayout(DWORD dwDefaultLayout);", "GetDesktopWindow": "WINUSERAPI HWND WINAPI GetDesktopWindow(VOID);", "GetParent": "WINUSERAPI HWND WINAPI GetParent(HWND hWnd);", "SetParent": "WINUSERAPI HWND WINAPI SetParent(HWND hWndChild,HWND hWndNewParent);", "EnumChildWindows": "WINUSERAPI WINBOOL WINAPI EnumChildWindows(HWND hWndParent,WNDENUMPROC lpEnumFunc,LPARAM lParam);", "FindWindowA": "WINUSERAPI HWND WINAPI FindWindowA(LPCSTR lpClassName,LPCSTR lpWindowName);", "FindWindowW": "WINUSERAPI HWND WINAPI FindWindowW(LPCWSTR lpClassName,LPCWSTR lpWindowName);", "FindWindowExA": "WINUSERAPI HWND WINAPI FindWindowExA(HWND hWndParent,HWND hWndChildAfter,LPCSTR lpszClass,LPCSTR lpszWindow);", "FindWindowExW": "WINUSERAPI HWND WINAPI FindWindowExW(HWND hWndParent,HWND hWndChildAfter,LPCWSTR lpszClass,LPCWSTR lpszWindow);", "GetShellWindow": "WINUSERAPI HWND WINAPI GetShellWindow(VOID);", "RegisterShellHookWindow": "WINUSERAPI WINBOOL WINAPI RegisterShellHookWindow(HWND hwnd);", "DeregisterShellHookWindow": "WINUSERAPI WINBOOL WINAPI DeregisterShellHookWindow(HWND hwnd);", "EnumWindows": "WINUSERAPI WINBOOL WINAPI EnumWindows(WNDENUMPROC lpEnumFunc,LPARAM lParam);", "EnumThreadWindows": "WINUSERAPI WINBOOL WINAPI EnumThreadWindows(DWORD dwThreadId,WNDENUMPROC lpfn,LPARAM lParam);", "GetClassNameA": "WINUSERAPI int WINAPI GetClassNameA(HWND hWnd,LPSTR lpClassName,int nMaxCount);", "GetClassNameW": "WINUSERAPI int WINAPI GetClassNameW(HWND hWnd,LPWSTR lpClassName,int nMaxCount);", "GetTopWindow": "WINUSERAPI HWND WINAPI GetTopWindow(HWND hWnd);", "GetWindowThreadProcessId": "WINUSERAPI DWORD WINAPI GetWindowThreadProcessId(HWND hWnd,LPDWORD lpdwProcessId);", "IsGUIThread": "WINUSERAPI WINBOOL WINAPI IsGUIThread(WINBOOL bConvert);", "GetLastActivePopup": "WINUSERAPI HWND WINAPI GetLastActivePopup(HWND hWnd);", "GetWindow": "WINUSERAPI HWND WINAPI GetWindow(HWND hWnd,UINT uCmd);", "SetWindowsHookA": "WINUSERAPI HOOKPROC WINAPI SetWindowsHookA (int nFilterType, HOOKPROC pfnFilterProc);", "SetWindowsHookW": "WINUSERAPI HOOKPROC WINAPI SetWindowsHookW (int nFilterType, HOOKPROC pfnFilterProc);", "UnhookWindowsHook": "WINUSERAPI WINBOOL WINAPI UnhookWindowsHook (int nCode, HOOKPROC pfnFilterProc);", "SetWindowsHookExA": "WINUSERAPI HHOOK WINAPI SetWindowsHookExA (int idHook, HOOKPROC lpfn, HINSTANCE hmod, DWORD dwThreadId);", "SetWindowsHookExW": "WINUSERAPI HHOOK WINAPI SetWindowsHookExW (int idHook, HOOKPROC lpfn, HINSTANCE hmod, DWORD dwThreadId);", "UnhookWindowsHookEx": "WINUSERAPI WINBOOL WINAPI UnhookWindowsHookEx (HHOOK hhk);", "CallNextHookEx": "WINUSERAPI LRESULT WINAPI CallNextHookEx (HHOOK hhk, int nCode, WPARAM wParam, LPARAM lParam);", "CheckMenuRadioItem": "WINUSERAPI WINBOOL WINAPI CheckMenuRadioItem(HMENU hmenu,UINT first,UINT last,UINT check,UINT flags);", "LoadBitmapA": "WINUSERAPI HBITMAP WINAPI LoadBitmapA(HINSTANCE hInstance,LPCSTR lpBitmapName);", "LoadBitmapW": "WINUSERAPI HBITMAP WINAPI LoadBitmapW(HINSTANCE hInstance,LPCWSTR lpBitmapName);", "LoadCursorA": "WINUSERAPI HCURSOR WINAPI LoadCursorA(HINSTANCE hInstance,LPCSTR lpCursorName);", "LoadCursorW": "WINUSERAPI HCURSOR WINAPI LoadCursorW(HINSTANCE hInstance,LPCWSTR lpCursorName);", "LoadCursorFromFileA": "WINUSERAPI HCURSOR WINAPI LoadCursorFromFileA(LPCSTR lpFileName);", "LoadCursorFromFileW": "WINUSERAPI HCURSOR WINAPI LoadCursorFromFileW(LPCWSTR lpFileName);", "CreateCursor": "WINUSERAPI HCURSOR WINAPI CreateCursor(HINSTANCE hInst,int xHotSpot,int yHotSpot,int nWidth,int nHeight,CONST VOID *pvANDPlane,CONST VOID *pvXORPlane);", "DestroyCursor": "WINUSERAPI WINBOOL WINAPI DestroyCursor(HCURSOR hCursor);", "SetSystemCursor": "WINUSERAPI WINBOOL WINAPI SetSystemCursor(HCURSOR hcur,DWORD id);", "LoadIconA": "WINUSERAPI HICON WINAPI LoadIconA(HINSTANCE hInstance,LPCSTR lpIconName);", "LoadIconW": "WINUSERAPI HICON WINAPI LoadIconW(HINSTANCE hInstance,LPCWSTR lpIconName);", "PrivateExtractIconsA": "WINUSERAPI UINT WINAPI PrivateExtractIconsA(LPCSTR szFileName,int nIconIndex,int cxIcon,int cyIcon,HICON *phicon,UINT *piconid,UINT nIcons,UINT flags);", "PrivateExtractIconsW": "WINUSERAPI UINT WINAPI PrivateExtractIconsW(LPCWSTR szFileName,int nIconIndex,int cxIcon,int cyIcon,HICON *phicon,UINT *piconid,UINT nIcons,UINT flags);", "CreateIcon": "WINUSERAPI HICON WINAPI CreateIcon(HINSTANCE hInstance,int nWidth,int nHeight,BYTE cPlanes,BYTE cBitsPixel,CONST BYTE *lpbANDbits,CONST BYTE *lpbXORbits);", "DestroyIcon": "WINUSERAPI WINBOOL WINAPI DestroyIcon(HICON hIcon);", "LookupIconIdFromDirectory": "WINUSERAPI int WINAPI LookupIconIdFromDirectory(PBYTE presbits,WINBOOL fIcon);", "LookupIconIdFromDirectoryEx": "WINUSERAPI int WINAPI LookupIconIdFromDirectoryEx(PBYTE presbits,WINBOOL fIcon,int cxDesired,int cyDesired,UINT Flags);", "CreateIconFromResource": "WINUSERAPI HICON WINAPI CreateIconFromResource(PBYTE presbits,DWORD dwResSize,WINBOOL fIcon,DWORD dwVer);", "CreateIconFromResourceEx": "WINUSERAPI HICON WINAPI CreateIconFromResourceEx(PBYTE presbits,DWORD dwResSize,WINBOOL fIcon,DWORD dwVer,int cxDesired,int cyDesired,UINT Flags);", "LoadImageA": "WINUSERAPI HANDLE WINAPI LoadImageA(HINSTANCE hInst,LPCSTR name,UINT type,int cx,int cy,UINT fuLoad);", "LoadImageW": "WINUSERAPI HANDLE WINAPI LoadImageW(HINSTANCE hInst,LPCWSTR name,UINT type,int cx,int cy,UINT fuLoad);", "CopyImage": "WINUSERAPI HANDLE WINAPI CopyImage(HANDLE h,UINT type,int cx,int cy,UINT flags);", "DrawIconEx": "WINUSERAPI WINBOOL WINAPI DrawIconEx(HDC hdc,int xLeft,int yTop,HICON hIcon,int cxWidth,int cyWidth,UINT istepIfAniCur,HBRUSH hbrFlickerFreeDraw,UINT diFlags);", "CreateIconIndirect": "WINUSERAPI HICON WINAPI CreateIconIndirect(PICONINFO piconinfo);", "CopyIcon": "WINUSERAPI HICON WINAPI CopyIcon(HICON hIcon);", "GetIconInfo": "WINUSERAPI WINBOOL WINAPI GetIconInfo(HICON hIcon,PICONINFO piconinfo);", "GetIconInfoExA": "WINUSERAPI WINBOOL WINAPI GetIconInfoExA (HICON hicon, PICONINFOEXA piconinfo);", "GetIconInfoExW": "WINUSERAPI WINBOOL WINAPI GetIconInfoExW (HICON hicon, PICONINFOEXW piconinfo);", "LoadStringA": "WINUSERAPI int WINAPI LoadStringA (HINSTANCE hInstance, UINT uID, LPSTR lpBuffer, int cchBufferMax);", "LoadStringW": "WINUSERAPI int WINAPI LoadStringW (HINSTANCE hInstance, UINT uID, LPWSTR lpBuffer, int cchBufferMax);", "IsDialogMessageA": "WINUSERAPI WINBOOL WINAPI IsDialogMessageA(HWND hDlg,LPMSG lpMsg);", "IsDialogMessageW": "WINUSERAPI WINBOOL WINAPI IsDialogMessageW(HWND hDlg,LPMSG lpMsg);", "MapDialogRect": "WINUSERAPI WINBOOL WINAPI MapDialogRect(HWND hDlg,LPRECT lpRect);", "DlgDirListA": "WINUSERAPI int WINAPI DlgDirListA(HWND hDlg,LPSTR lpPathSpec,int nIDListBox,int nIDStaticPath,UINT uFileType);", "DlgDirListW": "WINUSERAPI int WINAPI DlgDirListW(HWND hDlg,LPWSTR lpPathSpec,int nIDListBox,int nIDStaticPath,UINT uFileType);", "DlgDirSelectExA": "WINUSERAPI WINBOOL WINAPI DlgDirSelectExA(HWND hwndDlg,LPSTR lpString,int chCount,int idListBox);", "DlgDirSelectExW": "WINUSERAPI WINBOOL WINAPI DlgDirSelectExW(HWND hwndDlg,LPWSTR lpString,int chCount,int idListBox);", "DlgDirListComboBoxA": "WINUSERAPI int WINAPI DlgDirListComboBoxA(HWND hDlg,LPSTR lpPathSpec,int nIDComboBox,int nIDStaticPath,UINT uFiletype);", "DlgDirListComboBoxW": "WINUSERAPI int WINAPI DlgDirListComboBoxW(HWND hDlg,LPWSTR lpPathSpec,int nIDComboBox,int nIDStaticPath,UINT uFiletype);", "DlgDirSelectComboBoxExA": "WINUSERAPI WINBOOL WINAPI DlgDirSelectComboBoxExA(HWND hwndDlg,LPSTR lpString,int cchOut,int idComboBox);", "DlgDirSelectComboBoxExW": "WINUSERAPI WINBOOL WINAPI DlgDirSelectComboBoxExW(HWND hwndDlg,LPWSTR lpString,int cchOut,int idComboBox);", "SetScrollInfo": "WINUSERAPI int WINAPI SetScrollInfo(HWND hwnd,int nBar,LPCSCROLLINFO lpsi,WINBOOL redraw);", "GetScrollInfo": "WINUSERAPI WINBOOL WINAPI GetScrollInfo(HWND hwnd,int nBar,LPSCROLLINFO lpsi);", "DefFrameProcA": "WINUSERAPI LRESULT WINAPI DefFrameProcA(HWND hWnd,HWND hWndMDIClient,UINT uMsg,WPARAM wParam,LPARAM lParam);", "DefFrameProcW": "WINUSERAPI LRESULT WINAPI DefFrameProcW(HWND hWnd,HWND hWndMDIClient,UINT uMsg,WPARAM wParam,LPARAM lParam);", "DefMDIChildProcA": "WINUSERAPI LRESULT WINAPI DefMDIChildProcA(HWND hWnd,UINT uMsg,WPARAM wParam,LPARAM lParam);", "DefMDIChildProcW": "WINUSERAPI LRESULT WINAPI DefMDIChildProcW(HWND hWnd,UINT uMsg,WPARAM wParam,LPARAM lParam);", "TranslateMDISysAccel": "WINUSERAPI WINBOOL WINAPI TranslateMDISysAccel(HWND hWndClient,LPMSG lpMsg);", "ArrangeIconicWindows": "WINUSERAPI UINT WINAPI ArrangeIconicWindows(HWND hWnd);", "CreateMDIWindowA": "WINUSERAPI HWND WINAPI CreateMDIWindowA(LPCSTR lpClassName,LPCSTR lpWindowName,DWORD dwStyle,int X,int Y,int nWidth,int nHeight,HWND hWndParent,HINSTANCE hInstance,LPARAM lParam);", "CreateMDIWindowW": "WINUSERAPI HWND WINAPI CreateMDIWindowW(LPCWSTR lpClassName,LPCWSTR lpWindowName,DWORD dwStyle,int X,int Y,int nWidth,int nHeight,HWND hWndParent,HINSTANCE hInstance,LPARAM lParam);", "TileWindows": "WINUSERAPI WORD WINAPI TileWindows(HWND hwndParent,UINT wHow,CONST RECT *lpRect,UINT cKids,const HWND *lpKids);", "CascadeWindows": "WINUSERAPI WORD WINAPI CascadeWindows(HWND hwndParent,UINT wHow,CONST RECT *lpRect,UINT cKids,const HWND *lpKids);", "WinHelpA": "WINUSERAPI WINBOOL WINAPI WinHelpA(HWND hWndMain,LPCSTR lpszHelp,UINT uCommand,ULONG_PTR dwData);", "WinHelpW": "WINUSERAPI WINBOOL WINAPI WinHelpW(HWND hWndMain,LPCWSTR lpszHelp,UINT uCommand,ULONG_PTR dwData);", "GetGuiResources": "WINUSERAPI DWORD WINAPI GetGuiResources(HANDLE hProcess,DWORD uiFlags);", "ChangeDisplaySettingsA": "WINUSERAPI LONG WINAPI ChangeDisplaySettingsA(LPDEVMODEA lpDevMode,DWORD dwFlags);", "ChangeDisplaySettingsW": "WINUSERAPI LONG WINAPI ChangeDisplaySettingsW(LPDEVMODEW lpDevMode,DWORD dwFlags);", "ChangeDisplaySettingsExA": "WINUSERAPI LONG WINAPI ChangeDisplaySettingsExA(LPCSTR lpszDeviceName,LPDEVMODEA lpDevMode,HWND hwnd,DWORD dwflags,LPVOID lParam);", "ChangeDisplaySettingsExW": "WINUSERAPI LONG WINAPI ChangeDisplaySettingsExW(LPCWSTR lpszDeviceName,LPDEVMODEW lpDevMode,HWND hwnd,DWORD dwflags,LPVOID lParam);", "EnumDisplaySettingsA": "WINUSERAPI WINBOOL WINAPI EnumDisplaySettingsA(LPCSTR lpszDeviceName,DWORD iModeNum,LPDEVMODEA lpDevMode);", "EnumDisplaySettingsW": "WINUSERAPI WINBOOL WINAPI EnumDisplaySettingsW(LPCWSTR lpszDeviceName,DWORD iModeNum,LPDEVMODEW lpDevMode);", "EnumDisplaySettingsExA": "WINUSERAPI WINBOOL WINAPI EnumDisplaySettingsExA(LPCSTR lpszDeviceName,DWORD iModeNum,LPDEVMODEA lpDevMode,DWORD dwFlags);", "EnumDisplaySettingsExW": "WINUSERAPI WINBOOL WINAPI EnumDisplaySettingsExW(LPCWSTR lpszDeviceName,DWORD iModeNum,LPDEVMODEW lpDevMode,DWORD dwFlags);", "EnumDisplayDevicesA": "WINUSERAPI WINBOOL WINAPI EnumDisplayDevicesA(LPCSTR lpDevice,DWORD iDevNum,PDISPLAY_DEVICEA lpDisplayDevice,DWORD dwFlags);", "EnumDisplayDevicesW": "WINUSERAPI WINBOOL WINAPI EnumDisplayDevicesW(LPCWSTR lpDevice,DWORD iDevNum,PDISPLAY_DEVICEW lpDisplayDevice,DWORD dwFlags);", "GetDisplayConfigBufferSizes": "WINUSERAPI LONG WINAPI GetDisplayConfigBufferSizes (UINT32 flags, UINT32 *numPathArrayElements, UINT32 *numModeInfoArrayElements);", "SetDisplayConfig": "WINUSERAPI LONG WINAPI SetDisplayConfig (UINT32 numPathArrayElements, DISPLAYCONFIG_PATH_INFO *pathArray, UINT32 numModeInfoArrayElements, DISPLAYCONFIG_MODE_INFO *modeInfoArray, UINT32 flags);", "QueryDisplayConfig": "WINUSERAPI LONG WINAPI QueryDisplayConfig (UINT32 flags, UINT32 *numPathArrayElements, DISPLAYCONFIG_PATH_INFO *pathArray, UINT32 *numModeInfoArrayElements, DISPLAYCONFIG_MODE_INFO *modeInfoArray, DISPLAYCONFIG_TOPOLOGY_ID *currentTopologyId);", "DisplayConfigGetDeviceInfo": "WINUSERAPI LONG WINAPI DisplayConfigGetDeviceInfo (DISPLAYCONFIG_DEVICE_INFO_HEADER *requestPacket);", "DisplayConfigSetDeviceInfo": "WINUSERAPI LONG WINAPI DisplayConfigSetDeviceInfo (DISPLAYCONFIG_DEVICE_INFO_HEADER *setPacket);", "SystemParametersInfoA": "WINUSERAPI WINBOOL WINAPI SystemParametersInfoA(UINT uiAction,UINT uiParam,PVOID pvParam,UINT fWinIni);", "SystemParametersInfoW": "WINUSERAPI WINBOOL WINAPI SystemParametersInfoW(UINT uiAction,UINT uiParam,PVOID pvParam,UINT fWinIni);", "SystemParametersInfoForDpi": "WINUSERAPI WINBOOL WINAPI SystemParametersInfoForDpi(UINT uiAction, UINT uiParam, PVOID pvParam, UINT fWinIni, UINT dpi);", "SetDebugErrorLevel": "WINUSERAPI VOID WINAPI SetDebugErrorLevel (DWORD dwLevel);", "SetLastErrorEx": "WINUSERAPI VOID WINAPI SetLastErrorEx (DWORD dwErrCode, DWORD dwType);", "InternalGetWindowText": "WINUSERAPI int WINAPI InternalGetWindowText (HWND hWnd, LPWSTR pString, int cchMaxCount);", "CancelShutdown": "WINUSERAPI WINBOOL WINAPI CancelShutdown (VOID);", "MonitorFromPoint": "WINUSERAPI HMONITOR WINAPI MonitorFromPoint(POINT pt,DWORD dwFlags);", "MonitorFromRect": "WINUSERAPI HMONITOR WINAPI MonitorFromRect(LPCRECT lprc,DWORD dwFlags);", "MonitorFromWindow": "WINUSERAPI HMONITOR WINAPI MonitorFromWindow(HWND hwnd,DWORD dwFlags);", "EndTask": "WINUSERAPI WINBOOL WINAPI EndTask (HWND hWnd, WINBOOL fShutDown, WINBOOL fForce);", "SoundSentry": "WINUSERAPI WINBOOL WINAPI SoundSentry (VOID);", "GetMonitorInfoA": "WINUSERAPI WINBOOL WINAPI GetMonitorInfoA(HMONITOR hMonitor,LPMONITORINFO lpmi);", "GetMonitorInfoW": "WINUSERAPI WINBOOL WINAPI GetMonitorInfoW(HMONITOR hMonitor,LPMONITORINFO lpmi);", "EnumDisplayMonitors": "WINUSERAPI WINBOOL WINAPI EnumDisplayMonitors(HDC hdc,LPCRECT lprcClip,MONITORENUMPROC lpfnEnum,LPARAM dwData);", "NotifyWinEvent": "WINUSERAPI VOID WINAPI NotifyWinEvent(DWORD event,HWND hwnd,LONG idObject,LONG idChild);", "SetWinEventHook": "WINUSERAPI HWINEVENTHOOK WINAPI SetWinEventHook(DWORD eventMin,DWORD eventMax,HMODULE hmodWinEventProc,WINEVENTPROC pfnWinEventProc,DWORD idProcess,DWORD idThread,DWORD dwFlags);", "IsWinEventHookInstalled": "WINUSERAPI WINBOOL WINAPI IsWinEventHookInstalled(DWORD event);", "UnhookWinEvent": "WINUSERAPI WINBOOL WINAPI UnhookWinEvent(HWINEVENTHOOK hWinEventHook);", "GetGUIThreadInfo": "WINUSERAPI WINBOOL WINAPI GetGUIThreadInfo(DWORD idThread,PGUITHREADINFO pgui);", "BlockInput": "WINBOOL WINAPI BlockInput(WINBOOL fBlockIt);", "GetWindowModuleFileNameA": "WINUSERAPI UINT WINAPI GetWindowModuleFileNameA(HWND hwnd,LPSTR pszFileName,UINT cchFileNameMax);", "GetWindowModuleFileNameW": "WINUSERAPI UINT WINAPI GetWindowModuleFileNameW(HWND hwnd,LPWSTR pszFileName,UINT cchFileNameMax);", "SetProcessDPIAware": "WINUSERAPI WINBOOL WINAPI SetProcessDPIAware (VOID);", "IsProcessDPIAware": "WINUSERAPI WINBOOL WINAPI IsProcessDPIAware (VOID);", "SetThreadDpiAwarenessContext": "WINUSERAPI DPI_AWARENESS_CONTEXT WINAPI SetThreadDpiAwarenessContext(DPI_AWARENESS_CONTEXT dpiContext);", "GetThreadDpiAwarenessContext": "WINUSERAPI DPI_AWARENESS_CONTEXT WINAPI GetThreadDpiAwarenessContext(VOID);", "GetWindowDpiAwarenessContext": "WINUSERAPI DPI_AWARENESS_CONTEXT WINAPI GetWindowDpiAwarenessContext(HWND hwnd);", "GetAwarenessFromDpiAwarenessContext": "WINUSERAPI DPI_AWARENESS WINAPI GetAwarenessFromDpiAwarenessContext(DPI_AWARENESS_CONTEXT value);", "GetDpiFromDpiAwarenessContext": "WINUSERAPI UINT WINAPI GetDpiFromDpiAwarenessContext(DPI_AWARENESS_CONTEXT value);", "AreDpiAwarenessContextsEqual": "WINUSERAPI WINBOOL WINAPI AreDpiAwarenessContextsEqual(DPI_AWARENESS_CONTEXT dpiContextA, DPI_AWARENESS_CONTEXT dpiContextB);", "IsValidDpiAwarenessContext": "WINUSERAPI WINBOOL WINAPI IsValidDpiAwarenessContext(DPI_AWARENESS_CONTEXT value);", "GetDpiForWindow": "WINUSERAPI UINT WINAPI GetDpiForWindow(HWND hwnd);", "GetDpiForSystem": "WINUSERAPI UINT WINAPI GetDpiForSystem(VOID);", "GetSystemDpiForProcess": "WINUSERAPI UINT WINAPI GetSystemDpiForProcess(HANDLE hProcess);", "EnableNonClientDpiScaling": "WINUSERAPI WINBOOL WINAPI EnableNonClientDpiScaling(HWND hwnd);", "InheritWindowMonitor": "WINUSERAPI WINBOOL WINAPI InheritWindowMonitor(HWND hwnd, HWND hwndInherit);", "SetProcessDpiAwarenessContext": "WINUSERAPI WINBOOL WINAPI SetProcessDpiAwarenessContext(DPI_AWARENESS_CONTEXT value);", "SetThreadDpiHostingBehavior": "WINUSERAPI DPI_HOSTING_BEHAVIOR WINAPI SetThreadDpiHostingBehavior(DPI_HOSTING_BEHAVIOR value);", "GetThreadDpiHostingBehavior": "WINUSERAPI DPI_HOSTING_BEHAVIOR WINAPI GetThreadDpiHostingBehavior(VOID);", "GetWindowDpiHostingBehavior": "WINUSERAPI DPI_HOSTING_BEHAVIOR WINAPI GetWindowDpiHostingBehavior(HWND hwnd);", "GetDpiAwarenessContextForProcess": "WINUSERAPI DPI_AWARENESS_CONTEXT WINAPI GetDpiAwarenessContextForProcess(HANDLE hProcess);", "GetCursorInfo": "WINUSERAPI WINBOOL WINAPI GetCursorInfo(PCURSORINFO pci);", "GetWindowInfo": "WINUSERAPI WINBOOL WINAPI GetWindowInfo(HWND hwnd,PWINDOWINFO pwi);", "GetTitleBarInfo": "WINUSERAPI WINBOOL WINAPI GetTitleBarInfo(HWND hwnd,PTITLEBARINFO pti);", "GetMenuBarInfo": "WINUSERAPI WINBOOL WINAPI GetMenuBarInfo(HWND hwnd,LONG idObject,LONG idItem,PMENUBARINFO pmbi);", "GetScrollBarInfo": "WINUSERAPI WINBOOL WINAPI GetScrollBarInfo(HWND hwnd,LONG idObject,PSCROLLBARINFO psbi);", "GetComboBoxInfo": "WINUSERAPI WINBOOL WINAPI GetComboBoxInfo(HWND hwndCombo,PCOMBOBOXINFO pcbi);", "GetAncestor": "WINUSERAPI HWND WINAPI GetAncestor(HWND hwnd,UINT gaFlags);", "RealChildWindowFromPoint": "WINUSERAPI HWND WINAPI RealChildWindowFromPoint(HWND hwndParent,POINT ptParentClientCoords);", "RealGetWindowClassA": "WINUSERAPI UINT WINAPI RealGetWindowClassA(HWND hwnd,LPSTR ptszClassName,UINT cchClassNameMax);", "RealGetWindowClassW": "WINUSERAPI UINT WINAPI RealGetWindowClassW(HWND hwnd,LPWSTR ptszClassName,UINT cchClassNameMax);", "GetAltTabInfoA": "WINUSERAPI WINBOOL WINAPI GetAltTabInfoA(HWND hwnd,int iItem,PALTTABINFO pati,LPSTR pszItemText,UINT cchItemText);", "GetAltTabInfoW": "WINUSERAPI WINBOOL WINAPI GetAltTabInfoW(HWND hwnd,int iItem,PALTTABINFO pati,LPWSTR pszItemText,UINT cchItemText);", "GetListBoxInfo": "WINUSERAPI DWORD WINAPI GetListBoxInfo(HWND hwnd);", "LockWorkStation": "WINUSERAPI WINBOOL WINAPI LockWorkStation(VOID);", "UserHandleGrantAccess": "WINUSERAPI WINBOOL WINAPI UserHandleGrantAccess(HANDLE hUserHandle,HANDLE hJob,WINBOOL bGrant);", "GetRawInputData": "WINUSERAPI UINT WINAPI GetRawInputData(HRAWINPUT hRawInput,UINT uiCommand,LPVOID pData,PUINT pcbSize,UINT cbSizeHeader);", "GetRawInputDeviceInfoA": "WINUSERAPI UINT WINAPI GetRawInputDeviceInfoA(HANDLE hDevice,UINT uiCommand,LPVOID pData,PUINT pcbSize);", "GetRawInputDeviceInfoW": "WINUSERAPI UINT WINAPI GetRawInputDeviceInfoW(HANDLE hDevice,UINT uiCommand,LPVOID pData,PUINT pcbSize);", "GetRawInputBuffer": "WINUSERAPI UINT WINAPI GetRawInputBuffer(PRAWINPUT pData,PUINT pcbSize,UINT cbSizeHeader);", "RegisterRawInputDevices": "WINUSERAPI WINBOOL WINAPI RegisterRawInputDevices (PCRAWINPUTDEVICE pRawInputDevices, UINT uiNumDevices, UINT cbSize);", "GetRegisteredRawInputDevices": "WINUSERAPI UINT WINAPI GetRegisteredRawInputDevices (PRAWINPUTDEVICE pRawInputDevices, PUINT puiNumDevices, UINT cbSize);", "GetRawInputDeviceList": "WINUSERAPI UINT WINAPI GetRawInputDeviceList (PRAWINPUTDEVICELIST pRawInputDeviceList, PUINT puiNumDevices, UINT cbSize);", "DefRawInputProc": "WINUSERAPI LRESULT WINAPI DefRawInputProc (PRAWINPUT *paRawInput, INT nInput, UINT cbSizeHeader);", "GetPointerDevices": "WINUSERAPI WINBOOL WINAPI GetPointerDevices (UINT32 *deviceCount, POINTER_DEVICE_INFO *pointerDevices);", "GetPointerDevice": "WINUSERAPI WINBOOL WINAPI GetPointerDevice (HANDLE device, POINTER_DEVICE_INFO *pointerDevice);", "GetPointerDeviceProperties": "WINUSERAPI WINBOOL WINAPI GetPointerDeviceProperties (HANDLE device, UINT32 *propertyCount, POINTER_DEVICE_PROPERTY *pointerProperties);", "RegisterPointerDeviceNotifications": "WINUSERAPI WINBOOL WINAPI RegisterPointerDeviceNotifications (HWND window, WINBOOL notifyRange);", "GetPointerDeviceRects": "WINUSERAPI WINBOOL WINAPI GetPointerDeviceRects (HANDLE device, RECT *pointerDeviceRect, RECT *displayRect);", "GetPointerDeviceCursors": "WINUSERAPI WINBOOL WINAPI GetPointerDeviceCursors (HANDLE device, UINT32 *cursorCount, POINTER_DEVICE_CURSOR_INFO *deviceCursors);", "GetRawPointerDeviceData": "WINUSERAPI WINBOOL WINAPI GetRawPointerDeviceData (UINT32 pointerId, UINT32 historyCount, UINT32 propertiesCount, POINTER_DEVICE_PROPERTY *pProperties, LONG *pValues);", "ChangeWindowMessageFilter": "WINUSERAPI WINBOOL WINAPI ChangeWindowMessageFilter (UINT message, DWORD dwFlag);", "ChangeWindowMessageFilterEx": "WINUSERAPI WINBOOL WINAPI ChangeWindowMessageFilterEx (HWND hwnd, UINT message, DWORD action, PCHANGEFILTERSTRUCT pChangeFilterStruct);", "GetGestureInfo": "WINUSERAPI WINBOOL WINAPI GetGestureInfo (HGESTUREINFO hGestureInfo, PGESTUREINFO pGestureInfo);", "GetGestureExtraArgs": "WINUSERAPI WINBOOL WINAPI GetGestureExtraArgs (HGESTUREINFO hGestureInfo, UINT cbExtraArgs, PBYTE pExtraArgs);", "CloseGestureInfoHandle": "WINUSERAPI WINBOOL WINAPI CloseGestureInfoHandle (HGESTUREINFO hGestureInfo);", "SetGestureConfig": "WINUSERAPI WINBOOL WINAPI SetGestureConfig (HWND hwnd, DWORD dwReserved, UINT cIDs, PGESTURECONFIG pGestureConfig, UINT cbSize);", "GetGestureConfig": "WINUSERAPI WINBOOL WINAPI GetGestureConfig (HWND hwnd, DWORD dwReserved, DWORD dwFlags, PUINT pcIDs, PGESTURECONFIG pGestureConfig, UINT cbSize);", "ShutdownBlockReasonCreate": "WINUSERAPI WINBOOL WINAPI ShutdownBlockReasonCreate (HWND hWnd, LPCWSTR pwszReason);", "ShutdownBlockReasonQuery": "WINUSERAPI WINBOOL WINAPI ShutdownBlockReasonQuery (HWND hWnd, LPWSTR pwszBuff, DWORD *pcchBuff);", "ShutdownBlockReasonDestroy": "WINUSERAPI WINBOOL WINAPI ShutdownBlockReasonDestroy (HWND hWnd);", "GetCurrentInputMessageSource": "WINUSERAPI WINBOOL WINAPI GetCurrentInputMessageSource (INPUT_MESSAGE_SOURCE *inputMessageSource);", "GetCIMSSM": "WINUSERAPI WINBOOL WINAPI GetCIMSSM (INPUT_MESSAGE_SOURCE *inputMessageSource);", "GetAutoRotationState": "WINUSERAPI WINBOOL WINAPI GetAutoRotationState (PAR_STATE pState);", "GetDisplayAutoRotationPreferences": "WINUSERAPI WINBOOL WINAPI GetDisplayAutoRotationPreferences (ORIENTATION_PREFERENCE *pOrientation);", "GetDisplayAutoRotationPreferencesByProcessId": "WINUSERAPI WINBOOL WINAPI GetDisplayAutoRotationPreferencesByProcessId (DWORD dwProcessId, ORIENTATION_PREFERENCE *pOrientation, WINBOOL *fRotateScreen);", "SetDisplayAutoRotationPreferences": "WINUSERAPI WINBOOL WINAPI SetDisplayAutoRotationPreferences (ORIENTATION_PREFERENCE orientation);", "IsImmersiveProcess": "WINUSERAPI WINBOOL WINAPI IsImmersiveProcess (HANDLE hProcess);", "SetProcessRestrictionExemption": "WINUSERAPI WINBOOL WINAPI SetProcessRestrictionExemption (WINBOOL fEnableExemption);", "GetPointerInputTransform": "WINUSERAPI WINBOOL WINAPI GetPointerInputTransform(UINT32 pointerId, UINT32 historyCount, UINT32 *inputTransform);", "IsMousePointerEnabled": "WINUSERAPI WINBOOL WINAPI IsMousePointerEnabled(void);", "UiCreatePatchPackageA": "UINT WINAPI UiCreatePatchPackageA (LPCSTR szPcpPath, LPCSTR szPatchPath, LPCSTR szLogPath, HWND hwndStatus, LPCSTR szTempFolder, WINBOOL fRemoveTempFolderIfPresent);", "UiCreatePatchPackageW": "UINT WINAPI UiCreatePatchPackageW (LPCWSTR szPcpPath, LPCWSTR szPatchPath, LPCWSTR szLogPath, HWND hwndStatus, LPCWSTR szTempFolder, WINBOOL fRemoveTempFolderIfPresent);", "UiCreatePatchPackageExA": "UINT WINAPI UiCreatePatchPackageExA (LPCSTR szPcpPath, LPCSTR szPatchPath, LPCSTR szLogPath, HWND hwndStatus, LPCSTR szTempFolder, WINBOOL fRemoveTempFolderIfPresent, DWORD dwFlags, DWORD dwReserved);", "UiCreatePatchPackageExW": "UINT WINAPI UiCreatePatchPackageExW (LPCWSTR szPcpPath, LPCWSTR szPatchPath, LPCWSTR szLogPath, HWND hwndStatus, LPCWSTR szTempFolder, WINBOOL fRemoveTempFolderIfPresent, DWORD dwFlags, DWORD dwReserved);", "SetInputScope": "HRESULT WINAPI SetInputScope(HWND hwnd,InputScope inputscope);", "SetInputScopes": "HRESULT WINAPI SetInputScopes(HWND hwnd,const InputScope *pInputScopes,UINT cInputScopes,WCHAR **ppszPhraseList,UINT cPhrases,WCHAR *pszRegExp,WCHAR *pszSRGS);", "SetInputScopes2": "HRESULT WINAPI SetInputScopes2(HWND hwnd,const InputScope *pInputScopes,UINT cInputScopes,IEnumString *pEnumString,PWSTR pszRegExp,PWSTR pszSRGS);", "SetInputScopeXML": "HRESULT WINAPI SetInputScopeXML(HWND hwnd,WCHAR *pszXML);", "DavRegisterAuthCallback": "OPAQUE_HANDLE WINAPI DavRegisterAuthCallback(", "DavUnregisterAuthCallback": "VOID WINAPI DavUnregisterAuthCallback(", "DavAddConnection": "DWORD WINAPI DavAddConnection(", "DavCancelConnectionsToServer": "DWORD WINAPI DavCancelConnectionsToServer(", "DavDeleteConnection": "DWORD WINAPI DavDeleteConnection(", "DavFlushFile": "DWORD WINAPI DavFlushFile(", "DavGetExtendedError": "DWORD WINAPI DavGetExtendedError(", "DavGetHTTPFromUNCPath": "DWORD WINAPI DavGetHTTPFromUNCPath(", "DavGetTheLockOwnerOfTheFile": "DWORD WINAPI DavGetTheLockOwnerOfTheFile(", "DavGetUNCFromHTTPPath": "DWORD WINAPI DavGetUNCFromHTTPPath(", "DavInvalidateCache": "DWORD WINAPI DavInvalidateCache(", "XAudio2Create": "HRESULT WINAPI XAudio2Create(IXAudio2** pxaudio2, UINT32 flags, XAUDIO2_PROCESSOR processor);", "PxeTrace": "DWORD WINAPIV PxeTrace(HANDLE hProvider,PXE_SEVERITY Severity,LPCWSTR pszFormat,...);", "FilterAttach": "HRESULT WINAPI FilterAttach(LPCWSTR lpFilterName, LPCWSTR lpVolumeName, LPCWSTR lpInstanceName, DWORD dwCreatedInstanceNameLength, LPWSTR lpCreatedInstanceName);", "FilterAttachAtAltitude": "HRESULT WINAPI FilterAttachAtAltitude(LPCWSTR lpFilterName, LPCWSTR lpVolumeName, LPCWSTR lpAltitude, LPCWSTR lpInstanceName, DWORD dwCreatedInstanceNameLength, LPWSTR lpCreatedInstanceName);", "FilterClose": "HRESULT WINAPI FilterClose(HFILTER hFilter);", "FilterConnectCommunicationPort": "HRESULT WINAPI FilterConnectCommunicationPort(LPCWSTR lpPortName, DWORD dwOptions, LPCVOID lpContext, WORD wSizeOfContext, LPSECURITY_ATTRIBUTES lpSecurityAttributes, HANDLE *hPort);", "FilterCreate": "HRESULT WINAPI FilterCreate(LPCWSTR lpFilterName, HFILTER *hFilter);", "FilterDetach": "HRESULT WINAPI FilterDetach(LPCWSTR lpFilterName, LPCWSTR lpVolumeName, LPCWSTR lpInstanceName);", "FilterFindClose": "HRESULT WINAPI FilterFindClose(HANDLE hFilterFind);", "FilterFindFirst": "HRESULT WINAPI FilterFindFirst(FILTER_INFORMATION_CLASS dwInformationClass, LPVOID lpBuffer, DWORD dwBufferSize, LPDWORD lpBytesReturned, LPHANDLE lpFilterFind);", "FilterFindNext": "HRESULT WINAPI FilterFindNext(HANDLE hFilterFind, FILTER_INFORMATION_CLASS dwInformationClass, LPVOID lpBuffer, DWORD dwBufferSize, LPDWORD lpBytesReturned);", "FilterGetDosName": "HRESULT WINAPI FilterGetDosName(LPCWSTR lpVolumeName, LPWSTR lpDosName, DWORD dwDosNameBufferSize);", "FilterGetInformation": "HRESULT WINAPI FilterGetInformation(HFILTER hFilter, FILTER_INFORMATION_CLASS dwInformationClass, LPVOID lpBuffer, DWORD dwBufferSize, LPDWORD lpBytesReturned);", "FilterGetMessage": "HRESULT WINAPI FilterGetMessage(HANDLE hPort, PFILTER_MESSAGE_HEADER lpMessageBuffer, DWORD dwMessageBufferSize, LPOVERLAPPED lpOverlapped);", "FilterInstanceClose": "HRESULT WINAPI FilterInstanceClose(HFILTER_INSTANCE hInstance);", "FilterInstanceCreate": "HRESULT WINAPI FilterInstanceCreate(LPCWSTR lpFilterName, LPCWSTR lpVolumeName, LPCWSTR lpInstanceName, HFILTER_INSTANCE *hInstance);", "FilterInstanceFindClose": "HRESULT WINAPI FilterInstanceFindClose(HANDLE hFilterInstanceFind);", "FilterInstanceFindFirst": "HRESULT WINAPI FilterInstanceFindFirst(LPCWSTR lpFilterName, INSTANCE_INFORMATION_CLASS dwInformationClass, LPVOID lpBuffer, DWORD dwBufferSize, LPDWORD lpBytesReturned, LPHANDLE lpFilterInstanceFind);", "FilterInstanceFindNext": "HRESULT WINAPI FilterInstanceFindNext(HANDLE hFilterInstanceFind, INSTANCE_INFORMATION_CLASS dwInformationClass, LPVOID lpBuffer, DWORD dwBufferSize, LPDWORD lpBytesReturned);", "FilterInstanceGetInformation": "HRESULT WINAPI FilterInstanceGetInformation(HFILTER_INSTANCE hInstance, INSTANCE_INFORMATION_CLASS dwInformationClass, LPVOID lpBuffer, DWORD dwBufferSize, LPDWORD lpBytesReturned);", "FilterLoad": "HRESULT WINAPI FilterLoad(LPCWSTR lpFilterName);", "FilterReplyMessage": "HRESULT WINAPI FilterReplyMessage(HANDLE hPort,PFILTER_REPLY_HEADER lpReplyBuffer,DWORD dwReplyBufferSize);", "FilterSendMessage": "HRESULT WINAPI FilterSendMessage(HANDLE hPort, LPVOID lpInBuffer, DWORD dwInBufferSize, LPVOID lpOutBuffer, DWORD dwOutBufferSize, LPDWORD lpBytesReturned);", "FilterUnload": "HRESULT WINAPI FilterUnload(LPCWSTR lpFilterName);", "FilterVolumeFindClose": "HRESULT WINAPI FilterVolumeFindClose(HANDLE hVolumeFind);", "FilterVolumeFindFirst": "HRESULT WINAPI FilterVolumeFindFirst(FILTER_VOLUME_INFORMATION_CLASS dwInformationClass, LPVOID lpBuffer, DWORD dwBufferSize, LPDWORD lpBytesReturned, PHANDLE lpVolumeFind);", "FilterVolumeFindNext": "HRESULT WINAPI FilterVolumeFindNext(HANDLE hVolumeFind, FILTER_VOLUME_INFORMATION_CLASS dwInformationClass, LPVOID lpBuffer, DWORD dwBufferSize, LPDWORD lpBytesReturned);", "FilterVolumeInstanceFindClose": "HRESULT WINAPI FilterVolumeInstanceFindClose(HANDLE hVolumeInstanceFind);", "FilterVolumeInstanceFindFirst": "HRESULT WINAPI FilterVolumeInstanceFindFirst(LPCWSTR lpVolumeName, INSTANCE_INFORMATION_CLASS dwInformationClass, LPVOID lpBuffer, DWORD dwBufferSize, LPDWORD lpBytesReturned, LPHANDLE lpVolumeInstanceFind);", "FilterVolumeInstanceFindNext": "HRESULT WINAPI FilterVolumeInstanceFindNext(HANDLE hVolumeInstanceFind, INSTANCE_INFORMATION_CLASS dwInformationClass, LPVOID lpBuffer, DWORD dwBufferSize, LPDWORD lpBytesReturned);", "OPMGetVideoOutputsFromHMONITOR": "HRESULT WINAPI OPMGetVideoOutputsFromHMONITOR(", "OPMGetVideoOutputsFromIDirect3DDevice9Object": "HRESULT WINAPI OPMGetVideoOutputsFromIDirect3DDevice9Object(", "D3DXCreateBox": "HRESULT WINAPI D3DXCreateBox(struct IDirect3DDevice9 *device, float width, float height,", "D3DXCreateCylinder": "HRESULT WINAPI D3DXCreateCylinder(struct IDirect3DDevice9 *device, float radius1, float radius2,", "D3DXCreatePolygon": "HRESULT WINAPI D3DXCreatePolygon(struct IDirect3DDevice9 *device, float length, UINT sides, struct ID3DXMesh **mesh,", "D3DXCreateSphere": "HRESULT WINAPI D3DXCreateSphere(struct IDirect3DDevice9 *device, float radius, UINT slices,", "D3DXCreateTeapot": "HRESULT WINAPI D3DXCreateTeapot(struct IDirect3DDevice9 *device,", "D3DXCreateTextA": "HRESULT WINAPI D3DXCreateTextA(struct IDirect3DDevice9 *device, HDC hdc, const char *text, float deviation,", "D3DXCreateTextW": "HRESULT WINAPI D3DXCreateTextW(struct IDirect3DDevice9 *device, HDC hdc, const WCHAR *text, float deviation,", "D3DXCreateTorus": "HRESULT WINAPI D3DXCreateTorus(struct IDirect3DDevice9 *device,", "WTSEnumerateServersW": "WINBOOL WINAPI WTSEnumerateServersW(LPWSTR pDomainName,DWORD Reserved,DWORD Version,PWTS_SERVER_INFOW *ppServerInfo,DWORD *pCount);", "WTSEnumerateServersA": "WINBOOL WINAPI WTSEnumerateServersA(LPSTR pDomainName,DWORD Reserved,DWORD Version,PWTS_SERVER_INFOA *ppServerInfo,DWORD *pCount);", "WTSOpenServerW": "HANDLE WINAPI WTSOpenServerW(LPWSTR pServerName);", "WTSOpenServerA": "HANDLE WINAPI WTSOpenServerA(LPSTR pServerName);", "WTSOpenServerExW": "HANDLE WINAPI WTSOpenServerExW(LPWSTR pServerName);", "WTSOpenServerExA": "HANDLE WINAPI WTSOpenServerExA(LPSTR pServerName);", "WTSCloseServer": "VOID WINAPI WTSCloseServer(HANDLE hServer);", "WTSEnumerateSessionsW": "WINBOOL WINAPI WTSEnumerateSessionsW(HANDLE hServer,DWORD Reserved,DWORD Version,PWTS_SESSION_INFOW *ppSessionInfo,DWORD *pCount);", "WTSEnumerateSessionsA": "WINBOOL WINAPI WTSEnumerateSessionsA(HANDLE hServer,DWORD Reserved,DWORD Version,PWTS_SESSION_INFOA *ppSessionInfo,DWORD *pCount);", "WTSEnumerateProcessesW": "WINBOOL WINAPI WTSEnumerateProcessesW(HANDLE hServer,DWORD Reserved,DWORD Version,PWTS_PROCESS_INFOW *ppProcessInfo,DWORD *pCount);", "WTSEnumerateProcessesA": "WINBOOL WINAPI WTSEnumerateProcessesA(HANDLE hServer,DWORD Reserved,DWORD Version,PWTS_PROCESS_INFOA *ppProcessInfo,DWORD *pCount);", "WTSTerminateProcess": "WINBOOL WINAPI WTSTerminateProcess(HANDLE hServer,DWORD ProcessId,DWORD ExitCode);", "WTSQuerySessionInformationW": "WINBOOL WINAPI WTSQuerySessionInformationW(HANDLE hServer,DWORD SessionId,WTS_INFO_CLASS WTSInfoClass,LPWSTR *ppBuffer,DWORD *pBytesReturned);", "WTSQuerySessionInformationA": "WINBOOL WINAPI WTSQuerySessionInformationA(HANDLE hServer,DWORD SessionId,WTS_INFO_CLASS WTSInfoClass,LPSTR *ppBuffer,DWORD *pBytesReturned);", "WTSQueryUserConfigW": "WINBOOL WINAPI WTSQueryUserConfigW(LPWSTR pServerName,LPWSTR pUserName,WTS_CONFIG_CLASS WTSConfigClass,LPWSTR *ppBuffer,DWORD *pBytesReturned);", "WTSQueryUserConfigA": "WINBOOL WINAPI WTSQueryUserConfigA(LPSTR pServerName,LPSTR pUserName,WTS_CONFIG_CLASS WTSConfigClass,LPSTR *ppBuffer,DWORD *pBytesReturned);", "WTSSetUserConfigW": "WINBOOL WINAPI WTSSetUserConfigW(LPWSTR pServerName,LPWSTR pUserName,WTS_CONFIG_CLASS WTSConfigClass,LPWSTR pBuffer,DWORD DataLength);", "WTSSetUserConfigA": "WINBOOL WINAPI WTSSetUserConfigA(LPSTR pServerName,LPSTR pUserName,WTS_CONFIG_CLASS WTSConfigClass,LPSTR pBuffer,DWORD DataLength);", "WTSSendMessageW": "WINBOOL WINAPI WTSSendMessageW(HANDLE hServer,DWORD SessionId,LPWSTR pTitle,DWORD TitleLength,LPWSTR pMessage,DWORD MessageLength,DWORD Style,DWORD Timeout,DWORD *pResponse,WINBOOL bWait);", "WTSSendMessageA": "WINBOOL WINAPI WTSSendMessageA(HANDLE hServer,DWORD SessionId,LPSTR pTitle,DWORD TitleLength,LPSTR pMessage,DWORD MessageLength,DWORD Style,DWORD Timeout,DWORD *pResponse,WINBOOL bWait);", "WTSDisconnectSession": "WINBOOL WINAPI WTSDisconnectSession(HANDLE hServer,DWORD SessionId,WINBOOL bWait);", "WTSLogoffSession": "WINBOOL WINAPI WTSLogoffSession(HANDLE hServer,DWORD SessionId,WINBOOL bWait);", "WTSShutdownSystem": "WINBOOL WINAPI WTSShutdownSystem(HANDLE hServer,DWORD ShutdownFlag);", "WTSWaitSystemEvent": "WINBOOL WINAPI WTSWaitSystemEvent(HANDLE hServer,DWORD EventMask,DWORD *pEventFlags);", "WTSVirtualChannelOpen": "HANDLE WINAPI WTSVirtualChannelOpen(HANDLE hServer,DWORD SessionId,LPSTR pVirtualName);", "WTSVirtualChannelClose": "WINBOOL WINAPI WTSVirtualChannelClose(HANDLE hChannelHandle);", "WTSVirtualChannelRead": "WINBOOL WINAPI WTSVirtualChannelRead(HANDLE hChannelHandle,ULONG TimeOut,PCHAR Buffer,ULONG BufferSize,PULONG pBytesRead);", "WTSVirtualChannelWrite": "WINBOOL WINAPI WTSVirtualChannelWrite(HANDLE hChannelHandle,PCHAR Buffer,ULONG Length,PULONG pBytesWritten);", "WTSVirtualChannelPurgeInput": "WINBOOL WINAPI WTSVirtualChannelPurgeInput(HANDLE hChannelHandle);", "WTSVirtualChannelPurgeOutput": "WINBOOL WINAPI WTSVirtualChannelPurgeOutput(HANDLE hChannelHandle);", "WTSVirtualChannelQuery": "WINBOOL WINAPI WTSVirtualChannelQuery(HANDLE hChannelHandle,WTS_VIRTUAL_CLASS,PVOID *ppBuffer,DWORD *pBytesReturned);", "WTSFreeMemory": "VOID WINAPI WTSFreeMemory(PVOID pMemory);", "WTSRegisterSessionNotification": "WINBOOL WINAPI WTSRegisterSessionNotification(HWND hWnd,DWORD dwFlags);", "WTSUnRegisterSessionNotification": "WINBOOL WINAPI WTSUnRegisterSessionNotification(HWND hWnd);", "WTSQueryUserToken": "WINBOOL WINAPI WTSQueryUserToken(ULONG SessionId,PHANDLE phToken);", "WTSConnectSessionA": "WINBOOL WINAPI WTSConnectSessionA(", "WTSConnectSessionW": "WINBOOL WINAPI WTSConnectSessionW(", "WTSStartRemoteControlSessionA": "WINBOOL WINAPI WTSStartRemoteControlSessionA(", "WTSStartRemoteControlSessionW": "WINBOOL WINAPI WTSStartRemoteControlSessionW(", "WTSStopRemoteControlSession": "WINBOOL WINAPI WTSStopRemoteControlSession(", "WTSUnRegisterSessionNotificationEx": "WINBOOL WINAPI WTSUnRegisterSessionNotificationEx(", "WTSVirtualChannelOpenEx": "HANDLE WINAPI WTSVirtualChannelOpenEx(", "WTSEnumerateSessionsExA": "WINBOOL WINAPI WTSEnumerateSessionsExA(HANDLE hServer,DWORD* pLevel,DWORD Filter,PWTS_SESSION_INFO_1A* ppSessionInfo,DWORD* pCount);", "WTSEnumerateSessionsExW": "WINBOOL WINAPI WTSEnumerateSessionsExW(HANDLE hServer,DWORD* pLevel,DWORD Filter,PWTS_SESSION_INFO_1W* ppSessionInfo,DWORD* pCount);", "WTSFreeMemoryExA": "WINBOOL WINAPI WTSFreeMemoryExA(WTS_TYPE_CLASS WTSTypeClass,PVOID pMemory,ULONG NumberOfEntries);", "WTSFreeMemoryExW": "WINBOOL WINAPI WTSFreeMemoryExW(WTS_TYPE_CLASS WTSTypeClass,PVOID pMemory,ULONG NumberOfEntries);", "DdeInitializeA": "UINT WINAPI DdeInitializeA(LPDWORD pidInst,PFNCALLBACK pfnCallback,DWORD afCmd,DWORD ulRes);", "DdeInitializeW": "UINT WINAPI DdeInitializeW(LPDWORD pidInst,PFNCALLBACK pfnCallback,DWORD afCmd,DWORD ulRes);", "DdeUninitialize": "WINBOOL WINAPI DdeUninitialize(DWORD idInst);", "DdeConnectList": "HCONVLIST WINAPI DdeConnectList(DWORD idInst,HSZ hszService,HSZ hszTopic,HCONVLIST hConvList,PCONVCONTEXT pCC);", "DdeQueryNextServer": "HCONV WINAPI DdeQueryNextServer(HCONVLIST hConvList,HCONV hConvPrev);", "DdeDisconnectList": "WINBOOL WINAPI DdeDisconnectList(HCONVLIST hConvList);", "DdeConnect": "HCONV WINAPI DdeConnect(DWORD idInst,HSZ hszService,HSZ hszTopic,PCONVCONTEXT pCC);", "DdeDisconnect": "WINBOOL WINAPI DdeDisconnect(HCONV hConv);", "DdeReconnect": "HCONV WINAPI DdeReconnect(HCONV hConv);", "DdeQueryConvInfo": "UINT WINAPI DdeQueryConvInfo(HCONV hConv,DWORD idTransaction,PCONVINFO pConvInfo);", "DdeSetUserHandle": "WINBOOL WINAPI DdeSetUserHandle(HCONV hConv,DWORD id,DWORD_PTR hUser);", "DdeAbandonTransaction": "WINBOOL WINAPI DdeAbandonTransaction(DWORD idInst,HCONV hConv,DWORD idTransaction);", "DdePostAdvise": "WINBOOL WINAPI DdePostAdvise(DWORD idInst,HSZ hszTopic,HSZ hszItem);", "DdeEnableCallback": "WINBOOL WINAPI DdeEnableCallback(DWORD idInst,HCONV hConv,UINT wCmd);", "DdeImpersonateClient": "WINBOOL WINAPI DdeImpersonateClient(HCONV hConv);", "DdeNameService": "HDDEDATA WINAPI DdeNameService(DWORD idInst,HSZ hsz1,HSZ hsz2,UINT afCmd);", "DdeClientTransaction": "HDDEDATA WINAPI DdeClientTransaction(LPBYTE pData,DWORD cbData,HCONV hConv,HSZ hszItem,UINT wFmt,UINT wType,DWORD dwTimeout,LPDWORD pdwResult);", "DdeCreateDataHandle": "HDDEDATA WINAPI DdeCreateDataHandle(DWORD idInst,LPBYTE pSrc,DWORD cb,DWORD cbOff,HSZ hszItem,UINT wFmt,UINT afCmd);", "DdeAddData": "HDDEDATA WINAPI DdeAddData(HDDEDATA hData,LPBYTE pSrc,DWORD cb,DWORD cbOff);", "DdeGetData": "DWORD WINAPI DdeGetData(HDDEDATA hData,LPBYTE pDst,DWORD cbMax,DWORD cbOff);", "DdeAccessData": "LPBYTE WINAPI DdeAccessData(HDDEDATA hData,LPDWORD pcbDataSize);", "DdeUnaccessData": "WINBOOL WINAPI DdeUnaccessData(HDDEDATA hData);", "DdeFreeDataHandle": "WINBOOL WINAPI DdeFreeDataHandle(HDDEDATA hData);", "DdeGetLastError": "UINT WINAPI DdeGetLastError(DWORD idInst);", "DdeCreateStringHandleA": "HSZ WINAPI DdeCreateStringHandleA(DWORD idInst,LPCSTR psz,int iCodePage);", "DdeCreateStringHandleW": "HSZ WINAPI DdeCreateStringHandleW(DWORD idInst,LPCWSTR psz,int iCodePage);", "DdeQueryStringA": "DWORD WINAPI DdeQueryStringA(DWORD idInst,HSZ hsz,LPSTR psz,DWORD cchMax,int iCodePage);", "DdeQueryStringW": "DWORD WINAPI DdeQueryStringW(DWORD idInst,HSZ hsz,LPWSTR psz,DWORD cchMax,int iCodePage);", "DdeFreeStringHandle": "WINBOOL WINAPI DdeFreeStringHandle(DWORD idInst,HSZ hsz);", "DdeKeepStringHandle": "WINBOOL WINAPI DdeKeepStringHandle(DWORD idInst,HSZ hsz);", "DdeCmpStringHandles": "int WINAPI DdeCmpStringHandles(HSZ hsz1,HSZ hsz2);", "MNLS_GetUserDefaultLCID": "LCID WINAPI MNLS_GetUserDefaultLCID(void);", "MNLS_GetACP": "UINT WINAPI MNLS_GetACP(void);", "MNLS_CompareStringA": "int WINAPI MNLS_CompareStringA(LCID Locale,DWORD dwCmpFlags,LPCSTR lpString1,int cchCount1,LPCSTR lpString2,int cchCount2);", "MNLS_CompareStringW": "int WINAPI MNLS_CompareStringW(LCID Locale,DWORD dwCmpFlags,LPCWSTR lpString1,int cchCount1,LPCWSTR lpString2,int cchCount2);", "MNLS_MultiByteToWideChar": "int WINAPI MNLS_MultiByteToWideChar(UINT uCodePage,DWORD dwFlags,LPCSTR lpMultiByteStr,int cchMultiByte,LPWSTR lpWideCharStr,int cchWideChar);", "MNLS_WideCharToMultiByte": "int WINAPI MNLS_WideCharToMultiByte(UINT uCodePage,DWORD dwFlags,LPCWSTR lpWideCharStr,int cchWideChar,LPSTR lpMultiByteStr,int cchMultiByte,LPCSTR lpDefaultChar,WINBOOL *lpfUsedDefaultChar);", "MNLS_lstrlenW": "int WINAPI MNLS_lstrlenW(LPCWSTR lpString);", "MNLS_lstrcmpW": "int WINAPI MNLS_lstrcmpW(LPCWSTR lpString1,LPCWSTR lpString2);", "MNLS_lstrcpyW": "LPWSTR WINAPI MNLS_lstrcpyW(LPWSTR lpString1,LPCWSTR lpString2);", "MNLS_IsBadStringPtrW": "WINBOOL WINAPI MNLS_IsBadStringPtrW(LPCWSTR lpsz,UINT ucchMax);", "IsLoggingEnabledA": "WINBOOL WINAPI IsLoggingEnabledA(LPCSTR pszUrl);", "IsLoggingEnabledW": "WINBOOL WINAPI IsLoggingEnabledW(LPCWSTR pwszUrl);", "WriteHitLogging": "WINBOOL WINAPI WriteHitLogging(LPHIT_LOGGING_INFO lpLogginginfo);", "WlxNegotiate": "WINBOOL WINAPI WlxNegotiate(DWORD dwWinlogonVersion,PDWORD pdwDllVersion);", "WlxInitialize": "WINBOOL WINAPI WlxInitialize(LPWSTR lpWinsta,HANDLE hWlx,PVOID pvReserved,PVOID pWinlogonFunctions,PVOID *pWlxContext);", "WlxDisplaySASNotice": "VOID WINAPI WlxDisplaySASNotice(PVOID pWlxContext);", "WlxLoggedOutSAS": "int WINAPI WlxLoggedOutSAS(PVOID pWlxContext,DWORD dwSasType,PLUID pAuthenticationId,PSID pLogonSid,PDWORD pdwOptions,PHANDLE phToken,PWLX_MPR_NOTIFY_INFO pNprNotifyInfo,PVOID *pProfile);", "WlxActivateUserShell": "WINBOOL WINAPI WlxActivateUserShell(PVOID pWlxContext,PWSTR pszDesktopName,PWSTR pszMprLogonScript,PVOID pEnvironment);", "WlxLoggedOnSAS": "int WINAPI WlxLoggedOnSAS(PVOID pWlxContext,DWORD dwSasType,PVOID pReserved);", "WlxDisplayLockedNotice": "VOID WINAPI WlxDisplayLockedNotice(PVOID pWlxContext);", "WlxWkstaLockedSAS": "int WINAPI WlxWkstaLockedSAS(PVOID pWlxContext,DWORD dwSasType);", "WlxIsLockOk": "WINBOOL WINAPI WlxIsLockOk(PVOID pWlxContext);", "WlxIsLogoffOk": "WINBOOL WINAPI WlxIsLogoffOk(PVOID pWlxContext);", "WlxLogoff": "VOID WINAPI WlxLogoff(PVOID pWlxContext);", "WlxShutdown": "VOID WINAPI WlxShutdown(PVOID pWlxContext,DWORD ShutdownType);", "WlxScreenSaverNotify": "WINBOOL WINAPI WlxScreenSaverNotify(PVOID pWlxContext,WINBOOL *pSecure);", "WlxStartApplication": "WINBOOL WINAPI WlxStartApplication(PVOID pWlxContext,PWSTR pszDesktopName,PVOID pEnvironment,PWSTR pszCmdLine);", "WlxNetworkProviderLoad": "WINBOOL WINAPI WlxNetworkProviderLoad(PVOID pWlxContext,PWLX_MPR_NOTIFY_INFO pNprNotifyInfo);", "WlxDisplayStatusMessage": "WINBOOL WINAPI WlxDisplayStatusMessage(PVOID pWlxContext,HDESK hDesktop,DWORD dwOptions,PWSTR pTitle,PWSTR pMessage);", "WlxGetStatusMessage": "WINBOOL WINAPI WlxGetStatusMessage(PVOID pWlxContext,DWORD *pdwOptions,PWSTR pMessage,DWORD dwBufferSize);", "WlxRemoveStatusMessage": "WINBOOL WINAPI WlxRemoveStatusMessage(PVOID pWlxContext);", "WlxGetConsoleSwitchCredentials": "WINBOOL WINAPI WlxGetConsoleSwitchCredentials (PVOID pWlxContext,PVOID pCredInfo);", "WlxReconnectNotify": "VOID WINAPI WlxReconnectNotify (PVOID pWlxContext);", "WlxDisconnectNotify": "VOID WINAPI WlxDisconnectNotify (PVOID pWlxContext);", "MsiDatabaseOpenViewA": "UINT WINAPI MsiDatabaseOpenViewA(MSIHANDLE hDatabase,LPCSTR szQuery,MSIHANDLE *phView);", "MsiDatabaseOpenViewW": "UINT WINAPI MsiDatabaseOpenViewW(MSIHANDLE hDatabase,LPCWSTR szQuery,MSIHANDLE *phView);", "MsiViewGetErrorA": "MSIDBERROR WINAPI MsiViewGetErrorA(MSIHANDLE hView,LPSTR szColumnNameBuffer,DWORD *pcchBuf);", "MsiViewGetErrorW": "MSIDBERROR WINAPI MsiViewGetErrorW(MSIHANDLE hView,LPWSTR szColumnNameBuffer,DWORD *pcchBuf);", "MsiViewExecute": "UINT WINAPI MsiViewExecute(MSIHANDLE hView,MSIHANDLE hRecord);", "MsiViewFetch": "UINT WINAPI MsiViewFetch(MSIHANDLE hView,MSIHANDLE *phRecord);", "MsiViewModify": "UINT WINAPI MsiViewModify(MSIHANDLE hView,MSIMODIFY eModifyMode,MSIHANDLE hRecord);", "MsiViewGetColumnInfo": "UINT WINAPI MsiViewGetColumnInfo(MSIHANDLE hView,MSICOLINFO eColumnInfo,MSIHANDLE *phRecord);", "MsiViewClose": "UINT WINAPI MsiViewClose(MSIHANDLE hView);", "MsiDatabaseGetPrimaryKeysA": "UINT WINAPI MsiDatabaseGetPrimaryKeysA(MSIHANDLE hDatabase,LPCSTR szTableName,MSIHANDLE *phRecord);", "MsiDatabaseGetPrimaryKeysW": "UINT WINAPI MsiDatabaseGetPrimaryKeysW(MSIHANDLE hDatabase,LPCWSTR szTableName,MSIHANDLE *phRecord);", "MsiDatabaseIsTablePersistentA": "MSICONDITION WINAPI MsiDatabaseIsTablePersistentA(MSIHANDLE hDatabase,LPCSTR szTableName);", "MsiDatabaseIsTablePersistentW": "MSICONDITION WINAPI MsiDatabaseIsTablePersistentW(MSIHANDLE hDatabase,LPCWSTR szTableName);", "MsiGetSummaryInformationA": "UINT WINAPI MsiGetSummaryInformationA(MSIHANDLE hDatabase,LPCSTR szDatabasePath,UINT uiUpdateCount,MSIHANDLE *phSummaryInfo);", "MsiGetSummaryInformationW": "UINT WINAPI MsiGetSummaryInformationW(MSIHANDLE hDatabase,LPCWSTR szDatabasePath,UINT uiUpdateCount,MSIHANDLE *phSummaryInfo);", "MsiSummaryInfoGetPropertyCount": "UINT WINAPI MsiSummaryInfoGetPropertyCount(MSIHANDLE hSummaryInfo,UINT *puiPropertyCount);", "MsiSummaryInfoSetPropertyA": "UINT WINAPI MsiSummaryInfoSetPropertyA(MSIHANDLE hSummaryInfo,UINT uiProperty,UINT uiDataType,INT iValue,FILETIME *pftValue,LPCSTR szValue);", "MsiSummaryInfoSetPropertyW": "UINT WINAPI MsiSummaryInfoSetPropertyW(MSIHANDLE hSummaryInfo,UINT uiProperty,UINT uiDataType,INT iValue,FILETIME *pftValue,LPCWSTR szValue);", "MsiSummaryInfoGetPropertyA": "UINT WINAPI MsiSummaryInfoGetPropertyA(MSIHANDLE hSummaryInfo,UINT uiProperty,UINT *puiDataType,INT *piValue,FILETIME *pftValue,LPSTR szValueBuf,DWORD *pcchValueBuf);", "MsiSummaryInfoGetPropertyW": "UINT WINAPI MsiSummaryInfoGetPropertyW(MSIHANDLE hSummaryInfo,UINT uiProperty,UINT *puiDataType,INT *piValue,FILETIME *pftValue,LPWSTR szValueBuf,DWORD *pcchValueBuf);", "MsiSummaryInfoPersist": "UINT WINAPI MsiSummaryInfoPersist(MSIHANDLE hSummaryInfo);", "MsiOpenDatabaseA": "UINT WINAPI MsiOpenDatabaseA(LPCSTR szDatabasePath,LPCSTR szPersist,MSIHANDLE *phDatabase);", "MsiOpenDatabaseW": "UINT WINAPI MsiOpenDatabaseW(LPCWSTR szDatabasePath,LPCWSTR szPersist,MSIHANDLE *phDatabase);", "MsiDatabaseImportA": "UINT WINAPI MsiDatabaseImportA(MSIHANDLE hDatabase,LPCSTR szFolderPath,LPCSTR szFileName);", "MsiDatabaseImportW": "UINT WINAPI MsiDatabaseImportW(MSIHANDLE hDatabase,LPCWSTR szFolderPath,LPCWSTR szFileName);", "MsiDatabaseExportA": "UINT WINAPI MsiDatabaseExportA(MSIHANDLE hDatabase,LPCSTR szTableName,LPCSTR szFolderPath,LPCSTR szFileName);", "MsiDatabaseExportW": "UINT WINAPI MsiDatabaseExportW(MSIHANDLE hDatabase,LPCWSTR szTableName,LPCWSTR szFolderPath,LPCWSTR szFileName);", "MsiDatabaseMergeA": "UINT WINAPI MsiDatabaseMergeA(MSIHANDLE hDatabase,MSIHANDLE hDatabaseMerge,LPCSTR szTableName);", "MsiDatabaseMergeW": "UINT WINAPI MsiDatabaseMergeW(MSIHANDLE hDatabase,MSIHANDLE hDatabaseMerge,LPCWSTR szTableName);", "MsiDatabaseGenerateTransformA": "UINT WINAPI MsiDatabaseGenerateTransformA(MSIHANDLE hDatabase,MSIHANDLE hDatabaseReference,LPCSTR szTransformFile,int iReserved1,int iReserved2);", "MsiDatabaseGenerateTransformW": "UINT WINAPI MsiDatabaseGenerateTransformW(MSIHANDLE hDatabase,MSIHANDLE hDatabaseReference,LPCWSTR szTransformFile,int iReserved1,int iReserved2);", "MsiDatabaseApplyTransformA": "UINT WINAPI MsiDatabaseApplyTransformA(MSIHANDLE hDatabase,LPCSTR szTransformFile,int iErrorConditions);", "MsiDatabaseApplyTransformW": "UINT WINAPI MsiDatabaseApplyTransformW(MSIHANDLE hDatabase,LPCWSTR szTransformFile,int iErrorConditions);", "MsiCreateTransformSummaryInfoA": "UINT WINAPI MsiCreateTransformSummaryInfoA(MSIHANDLE hDatabase,MSIHANDLE hDatabaseReference,LPCSTR szTransformFile,int iErrorConditions,int iValidation);", "MsiCreateTransformSummaryInfoW": "UINT WINAPI MsiCreateTransformSummaryInfoW(MSIHANDLE hDatabase,MSIHANDLE hDatabaseReference,LPCWSTR szTransformFile,int iErrorConditions,int iValidation);", "MsiDatabaseCommit": "UINT WINAPI MsiDatabaseCommit(MSIHANDLE hDatabase);", "MsiGetDatabaseState": "MSIDBSTATE WINAPI MsiGetDatabaseState(MSIHANDLE hDatabase);", "MsiCreateRecord": "MSIHANDLE WINAPI MsiCreateRecord(UINT cParams);", "MsiRecordIsNull": "WINBOOL WINAPI MsiRecordIsNull(MSIHANDLE hRecord,UINT iField);", "MsiRecordDataSize": "UINT WINAPI MsiRecordDataSize(MSIHANDLE hRecord,UINT iField);", "MsiRecordSetInteger": "UINT WINAPI MsiRecordSetInteger(MSIHANDLE hRecord,UINT iField,int iValue);", "MsiRecordGetInteger": "int WINAPI MsiRecordGetInteger(MSIHANDLE hRecord,UINT iField);", "MsiRecordGetFieldCount": "UINT WINAPI MsiRecordGetFieldCount(MSIHANDLE hRecord);", "MsiRecordReadStream": "UINT WINAPI MsiRecordReadStream(MSIHANDLE hRecord,UINT iField,char *szDataBuf,DWORD *pcbDataBuf);", "MsiRecordClearData": "UINT WINAPI MsiRecordClearData(MSIHANDLE hRecord);", "MsiGetActiveDatabase": "MSIHANDLE WINAPI MsiGetActiveDatabase(MSIHANDLE hInstall);", "MsiGetLanguage": "LANGID WINAPI MsiGetLanguage(MSIHANDLE hInstall);", "MsiGetMode": "WINBOOL WINAPI MsiGetMode(MSIHANDLE hInstall,MSIRUNMODE eRunMode);", "MsiSetMode": "UINT WINAPI MsiSetMode(MSIHANDLE hInstall,MSIRUNMODE eRunMode,WINBOOL fState);", "MsiProcessMessage": "int WINAPI MsiProcessMessage(MSIHANDLE hInstall,INSTALLMESSAGE eMessageType,MSIHANDLE hRecord);", "MsiRecordSetStringA": "UINT WINAPI MsiRecordSetStringA(MSIHANDLE hRecord,UINT iField,LPCSTR szValue);", "MsiRecordSetStringW": "UINT WINAPI MsiRecordSetStringW(MSIHANDLE hRecord,UINT iField,LPCWSTR szValue);", "MsiRecordGetStringA": "UINT WINAPI MsiRecordGetStringA(MSIHANDLE hRecord,UINT iField,LPSTR szValueBuf,DWORD *pcchValueBuf);", "MsiRecordGetStringW": "UINT WINAPI MsiRecordGetStringW(MSIHANDLE hRecord,UINT iField,LPWSTR szValueBuf,DWORD *pcchValueBuf);", "MsiRecordSetStreamA": "UINT WINAPI MsiRecordSetStreamA(MSIHANDLE hRecord,UINT iField,LPCSTR szFilePath);", "MsiRecordSetStreamW": "UINT WINAPI MsiRecordSetStreamW(MSIHANDLE hRecord,UINT iField,LPCWSTR szFilePath);", "MsiSetPropertyA": "UINT WINAPI MsiSetPropertyA(MSIHANDLE hInstall,LPCSTR szName,LPCSTR szValue);", "MsiSetPropertyW": "UINT WINAPI MsiSetPropertyW(MSIHANDLE hInstall,LPCWSTR szName,LPCWSTR szValue);", "MsiGetPropertyA": "UINT WINAPI MsiGetPropertyA(MSIHANDLE hInstall,LPCSTR szName,LPSTR szValueBuf,DWORD *pcchValueBuf);", "MsiGetPropertyW": "UINT WINAPI MsiGetPropertyW(MSIHANDLE hInstall,LPCWSTR szName,LPWSTR szValueBuf,DWORD *pcchValueBuf);", "MsiFormatRecordA": "UINT WINAPI MsiFormatRecordA(MSIHANDLE hInstall,MSIHANDLE hRecord,LPSTR szResultBuf,DWORD *pcchResultBuf);", "MsiFormatRecordW": "UINT WINAPI MsiFormatRecordW(MSIHANDLE hInstall,MSIHANDLE hRecord,LPWSTR szResultBuf,DWORD *pcchResultBuf);", "MsiDoActionA": "UINT WINAPI MsiDoActionA(MSIHANDLE hInstall,LPCSTR szAction);", "MsiDoActionW": "UINT WINAPI MsiDoActionW(MSIHANDLE hInstall,LPCWSTR szAction);", "MsiSequenceA": "UINT WINAPI MsiSequenceA(MSIHANDLE hInstall,LPCSTR szTable,INT iSequenceMode);", "MsiSequenceW": "UINT WINAPI MsiSequenceW(MSIHANDLE hInstall,LPCWSTR szTable,INT iSequenceMode);", "MsiEvaluateConditionA": "MSICONDITION WINAPI MsiEvaluateConditionA(MSIHANDLE hInstall,LPCSTR szCondition);", "MsiEvaluateConditionW": "MSICONDITION WINAPI MsiEvaluateConditionW(MSIHANDLE hInstall,LPCWSTR szCondition);", "MsiGetFeatureStateA": "UINT WINAPI MsiGetFeatureStateA(MSIHANDLE hInstall,LPCSTR szFeature,INSTALLSTATE *piInstalled,INSTALLSTATE *piAction);", "MsiGetFeatureStateW": "UINT WINAPI MsiGetFeatureStateW(MSIHANDLE hInstall,LPCWSTR szFeature,INSTALLSTATE *piInstalled,INSTALLSTATE *piAction);", "MsiSetFeatureStateA": "UINT WINAPI MsiSetFeatureStateA(MSIHANDLE hInstall,LPCSTR szFeature,INSTALLSTATE iState);", "MsiSetFeatureStateW": "UINT WINAPI MsiSetFeatureStateW(MSIHANDLE hInstall,LPCWSTR szFeature,INSTALLSTATE iState);", "MsiSetFeatureAttributesA": "UINT WINAPI MsiSetFeatureAttributesA(MSIHANDLE hInstall,LPCSTR szFeature,DWORD dwAttributes);", "MsiSetFeatureAttributesW": "UINT WINAPI MsiSetFeatureAttributesW(MSIHANDLE hInstall,LPCWSTR szFeature,DWORD dwAttributes);", "MsiGetComponentStateA": "UINT WINAPI MsiGetComponentStateA(MSIHANDLE hInstall,LPCSTR szComponent,INSTALLSTATE *piInstalled,INSTALLSTATE *piAction);", "MsiGetComponentStateW": "UINT WINAPI MsiGetComponentStateW(MSIHANDLE hInstall,LPCWSTR szComponent,INSTALLSTATE *piInstalled,INSTALLSTATE *piAction);", "MsiSetComponentStateA": "UINT WINAPI MsiSetComponentStateA(MSIHANDLE hInstall,LPCSTR szComponent,INSTALLSTATE iState);", "MsiSetComponentStateW": "UINT WINAPI MsiSetComponentStateW(MSIHANDLE hInstall,LPCWSTR szComponent,INSTALLSTATE iState);", "MsiGetFeatureCostA": "UINT WINAPI MsiGetFeatureCostA(MSIHANDLE hInstall,LPCSTR szFeature,MSICOSTTREE iCostTree,INSTALLSTATE iState,INT *piCost);", "MsiGetFeatureCostW": "UINT WINAPI MsiGetFeatureCostW(MSIHANDLE hInstall,LPCWSTR szFeature,MSICOSTTREE iCostTree,INSTALLSTATE iState,INT *piCost);", "MsiEnumComponentCostsA": "UINT WINAPI MsiEnumComponentCostsA(MSIHANDLE hInstall,LPCSTR szComponent,DWORD dwIndex,INSTALLSTATE iState,LPSTR szDriveBuf,DWORD *pcchDriveBuf,INT *piCost,INT *piTempCost);", "MsiEnumComponentCostsW": "UINT WINAPI MsiEnumComponentCostsW(MSIHANDLE hInstall,LPCWSTR szComponent,DWORD dwIndex,INSTALLSTATE iState,LPWSTR szDriveBuf,DWORD *pcchDriveBuf,INT *piCost,INT *piTempCost);", "MsiSetInstallLevel": "UINT WINAPI MsiSetInstallLevel(MSIHANDLE hInstall,int iInstallLevel);", "MsiVerifyDiskSpace": "UINT WINAPI MsiVerifyDiskSpace(MSIHANDLE hInstall);", "MsiEnableUIPreview": "UINT WINAPI MsiEnableUIPreview(MSIHANDLE hDatabase,MSIHANDLE *phPreview);", "MsiGetLastErrorRecord": "MSIHANDLE WINAPI MsiGetLastErrorRecord();", "MsiGetFeatureValidStatesA": "UINT WINAPI MsiGetFeatureValidStatesA(MSIHANDLE hInstall,LPCSTR szFeature,DWORD *dwInstallStates);", "MsiGetFeatureValidStatesW": "UINT WINAPI MsiGetFeatureValidStatesW(MSIHANDLE hInstall,LPCWSTR szFeature,DWORD *dwInstallStates);", "MsiGetSourcePathA": "UINT WINAPI MsiGetSourcePathA(MSIHANDLE hInstall,LPCSTR szFolder,LPSTR szPathBuf,DWORD *pcchPathBuf);", "MsiGetSourcePathW": "UINT WINAPI MsiGetSourcePathW(MSIHANDLE hInstall,LPCWSTR szFolder,LPWSTR szPathBuf,DWORD *pcchPathBuf);", "MsiGetTargetPathA": "UINT WINAPI MsiGetTargetPathA(MSIHANDLE hInstall,LPCSTR szFolder,LPSTR szPathBuf,DWORD *pcchPathBuf);", "MsiGetTargetPathW": "UINT WINAPI MsiGetTargetPathW(MSIHANDLE hInstall,LPCWSTR szFolder,LPWSTR szPathBuf,DWORD *pcchPathBuf);", "MsiSetTargetPathA": "UINT WINAPI MsiSetTargetPathA(MSIHANDLE hInstall,LPCSTR szFolder,LPCSTR szFolderPath);", "MsiSetTargetPathW": "UINT WINAPI MsiSetTargetPathW(MSIHANDLE hInstall,LPCWSTR szFolder,LPCWSTR szFolderPath);", "MsiPreviewDialogA": "UINT WINAPI MsiPreviewDialogA(MSIHANDLE hPreview,LPCSTR szDialogName);", "MsiPreviewDialogW": "UINT WINAPI MsiPreviewDialogW(MSIHANDLE hPreview,LPCWSTR szDialogName);", "MsiPreviewBillboardA": "UINT WINAPI MsiPreviewBillboardA(MSIHANDLE hPreview,LPCSTR szControlName,LPCSTR szBillboard);", "MsiPreviewBillboardW": "UINT WINAPI MsiPreviewBillboardW(MSIHANDLE hPreview,LPCWSTR szControlName,LPCWSTR szBillboard);", "WOWGetVDMPointer": "LPVOID WINAPI WOWGetVDMPointer(DWORD vp,DWORD dwBytes,WINBOOL fProtectedMode);", "WOWGetVDMPointerFix": "LPVOID WINAPI WOWGetVDMPointerFix(DWORD vp,DWORD dwBytes,WINBOOL fProtectedMode);", "WOWGetVDMPointerUnfix": "VOID WINAPI WOWGetVDMPointerUnfix(DWORD vp);", "WOWGlobalAlloc16": "WORD WINAPI WOWGlobalAlloc16(WORD wFlags,DWORD cb);", "WOWGlobalFree16": "WORD WINAPI WOWGlobalFree16(WORD hMem);", "WOWGlobalLock16": "DWORD WINAPI WOWGlobalLock16(WORD hMem);", "WOWGlobalUnlock16": "WINBOOL WINAPI WOWGlobalUnlock16(WORD hMem);", "WOWGlobalAllocLock16": "DWORD WINAPI WOWGlobalAllocLock16(WORD wFlags,DWORD cb,WORD *phMem);", "WOWGlobalUnlockFree16": "WORD WINAPI WOWGlobalUnlockFree16(DWORD vpMem);", "WOWGlobalLockSize16": "DWORD WINAPI WOWGlobalLockSize16(WORD hMem,PDWORD pcb);", "WOWYield16": "VOID WINAPI WOWYield16(VOID);", "WOWDirectedYield16": "VOID WINAPI WOWDirectedYield16(WORD htask16);", "WOWHandle32": "HANDLE WINAPI WOWHandle32 (WORD,WOW_HANDLE_TYPE);", "WOWHandle16": "WORD WINAPI WOWHandle16 (HANDLE,WOW_HANDLE_TYPE);", "WOWCallback16": "DWORD WINAPI WOWCallback16(DWORD vpfn16,DWORD dwParam);", "WOWCallback16Ex": "WINBOOL WINAPI WOWCallback16Ex(DWORD vpfn16,DWORD dwFlags,DWORD cbArgs,PVOID pArgs,PDWORD pdwRetCode);", "IAgentUserInput_GetCount_Proxy": "HRESULT WINAPI IAgentUserInput_GetCount_Proxy(IAgentUserInput *This,__LONG32 *pdwCount);", "IAgentUserInput_GetItemID_Proxy": "HRESULT WINAPI IAgentUserInput_GetItemID_Proxy(IAgentUserInput *This,__LONG32 dwItemIndex,__LONG32 *pdwCommandID);", "IAgentUserInput_GetItemConfidence_Proxy": "HRESULT WINAPI IAgentUserInput_GetItemConfidence_Proxy(IAgentUserInput *This,__LONG32 dwItemIndex,__LONG32 *plConfidence);", "IAgentUserInput_GetItemText_Proxy": "HRESULT WINAPI IAgentUserInput_GetItemText_Proxy(IAgentUserInput *This,__LONG32 dwItemIndex,BSTR *pbszText);", "IAgentUserInput_GetAllItemData_Proxy": "HRESULT WINAPI IAgentUserInput_GetAllItemData_Proxy(IAgentUserInput *This,VARIANT *pdwItemIndices,VARIANT *plConfidences,VARIANT *pbszText);", "IAgentCommand_SetCaption_Proxy": "HRESULT WINAPI IAgentCommand_SetCaption_Proxy(IAgentCommand *This,BSTR bszCaption);", "IAgentCommand_GetCaption_Proxy": "HRESULT WINAPI IAgentCommand_GetCaption_Proxy(IAgentCommand *This,BSTR *pbszCaption);", "IAgentCommand_SetVoice_Proxy": "HRESULT WINAPI IAgentCommand_SetVoice_Proxy(IAgentCommand *This,BSTR bszVoice);", "IAgentCommand_GetVoice_Proxy": "HRESULT WINAPI IAgentCommand_GetVoice_Proxy(IAgentCommand *This,BSTR *pbszVoice);", "IAgentCommand_SetEnabled_Proxy": "HRESULT WINAPI IAgentCommand_SetEnabled_Proxy(IAgentCommand *This,__LONG32 bEnabled);", "IAgentCommand_GetEnabled_Proxy": "HRESULT WINAPI IAgentCommand_GetEnabled_Proxy(IAgentCommand *This,__LONG32 *pbEnabled);", "IAgentCommand_SetVisible_Proxy": "HRESULT WINAPI IAgentCommand_SetVisible_Proxy(IAgentCommand *This,__LONG32 bVisible);", "IAgentCommand_GetVisible_Proxy": "HRESULT WINAPI IAgentCommand_GetVisible_Proxy(IAgentCommand *This,__LONG32 *pbVisible);", "IAgentCommand_SetConfidenceThreshold_Proxy": "HRESULT WINAPI IAgentCommand_SetConfidenceThreshold_Proxy(IAgentCommand *This,__LONG32 lThreshold);", "IAgentCommand_GetConfidenceThreshold_Proxy": "HRESULT WINAPI IAgentCommand_GetConfidenceThreshold_Proxy(IAgentCommand *This,__LONG32 *plThreshold);", "IAgentCommand_SetConfidenceText_Proxy": "HRESULT WINAPI IAgentCommand_SetConfidenceText_Proxy(IAgentCommand *This,BSTR bszTipText);", "IAgentCommand_GetConfidenceText_Proxy": "HRESULT WINAPI IAgentCommand_GetConfidenceText_Proxy(IAgentCommand *This,BSTR *pbszTipText);", "IAgentCommand_GetID_Proxy": "HRESULT WINAPI IAgentCommand_GetID_Proxy(IAgentCommand *This,__LONG32 *pdwID);", "IAgentCommandEx_SetHelpContextID_Proxy": "HRESULT WINAPI IAgentCommandEx_SetHelpContextID_Proxy(IAgentCommandEx *This,__LONG32 ulID);", "IAgentCommandEx_GetHelpContextID_Proxy": "HRESULT WINAPI IAgentCommandEx_GetHelpContextID_Proxy(IAgentCommandEx *This,__LONG32 *pulID);", "IAgentCommandEx_SetVoiceCaption_Proxy": "HRESULT WINAPI IAgentCommandEx_SetVoiceCaption_Proxy(IAgentCommandEx *This,BSTR bszVoiceCaption);", "IAgentCommandEx_GetVoiceCaption_Proxy": "HRESULT WINAPI IAgentCommandEx_GetVoiceCaption_Proxy(IAgentCommandEx *This,BSTR *pbszVoiceCaption);", "IAgentCommands_GetCommand_Proxy": "HRESULT WINAPI IAgentCommands_GetCommand_Proxy(IAgentCommands *This,__LONG32 dwCommandID,IUnknown **ppunkCommand);", "IAgentCommands_GetCount_Proxy": "HRESULT WINAPI IAgentCommands_GetCount_Proxy(IAgentCommands *This,__LONG32 *pdwCount);", "IAgentCommands_SetCaption_Proxy": "HRESULT WINAPI IAgentCommands_SetCaption_Proxy(IAgentCommands *This,BSTR bszCaption);", "IAgentCommands_GetCaption_Proxy": "HRESULT WINAPI IAgentCommands_GetCaption_Proxy(IAgentCommands *This,BSTR *pbszCaption);", "IAgentCommands_SetVoice_Proxy": "HRESULT WINAPI IAgentCommands_SetVoice_Proxy(IAgentCommands *This,BSTR bszVoice);", "IAgentCommands_GetVoice_Proxy": "HRESULT WINAPI IAgentCommands_GetVoice_Proxy(IAgentCommands *This,BSTR *pbszVoice);", "IAgentCommands_SetVisible_Proxy": "HRESULT WINAPI IAgentCommands_SetVisible_Proxy(IAgentCommands *This,__LONG32 bVisible);", "IAgentCommands_GetVisible_Proxy": "HRESULT WINAPI IAgentCommands_GetVisible_Proxy(IAgentCommands *This,__LONG32 *pbVisible);", "IAgentCommands_Add_Proxy": "HRESULT WINAPI IAgentCommands_Add_Proxy(IAgentCommands *This,BSTR bszCaption,BSTR bszVoice,__LONG32 bEnabled,__LONG32 bVisible,__LONG32 *pdwID);", "IAgentCommands_Insert_Proxy": "HRESULT WINAPI IAgentCommands_Insert_Proxy(IAgentCommands *This,BSTR bszCaption,BSTR bszVoice,__LONG32 bEnabled,__LONG32 bVisible,__LONG32 dwRefID,__LONG32 bBefore,__LONG32 *pdwID);", "IAgentCommands_Remove_Proxy": "HRESULT WINAPI IAgentCommands_Remove_Proxy(IAgentCommands *This,__LONG32 dwID);", "IAgentCommands_RemoveAll_Proxy": "HRESULT WINAPI IAgentCommands_RemoveAll_Proxy(IAgentCommands *This);", "IAgentCommandsEx_GetCommandEx_Proxy": "HRESULT WINAPI IAgentCommandsEx_GetCommandEx_Proxy(IAgentCommandsEx *This,__LONG32 dwCommandID,IAgentCommandEx **ppCommandEx);", "IAgentCommandsEx_SetDefaultID_Proxy": "HRESULT WINAPI IAgentCommandsEx_SetDefaultID_Proxy(IAgentCommandsEx *This,__LONG32 dwID);", "IAgentCommandsEx_GetDefaultID_Proxy": "HRESULT WINAPI IAgentCommandsEx_GetDefaultID_Proxy(IAgentCommandsEx *This,__LONG32 *pdwID);", "IAgentCommandsEx_SetHelpContextID_Proxy": "HRESULT WINAPI IAgentCommandsEx_SetHelpContextID_Proxy(IAgentCommandsEx *This,__LONG32 ulHelpID);", "IAgentCommandsEx_GetHelpContextID_Proxy": "HRESULT WINAPI IAgentCommandsEx_GetHelpContextID_Proxy(IAgentCommandsEx *This,__LONG32 *pulHelpID);", "IAgentCommandsEx_SetFontName_Proxy": "HRESULT WINAPI IAgentCommandsEx_SetFontName_Proxy(IAgentCommandsEx *This,BSTR bszFontName);", "IAgentCommandsEx_GetFontName_Proxy": "HRESULT WINAPI IAgentCommandsEx_GetFontName_Proxy(IAgentCommandsEx *This,BSTR *pbszFontName);", "IAgentCommandsEx_SetFontSize_Proxy": "HRESULT WINAPI IAgentCommandsEx_SetFontSize_Proxy(IAgentCommandsEx *This,__LONG32 lFontSize);", "IAgentCommandsEx_GetFontSize_Proxy": "HRESULT WINAPI IAgentCommandsEx_GetFontSize_Proxy(IAgentCommandsEx *This,__LONG32 *lFontSize);", "IAgentCommandsEx_SetVoiceCaption_Proxy": "HRESULT WINAPI IAgentCommandsEx_SetVoiceCaption_Proxy(IAgentCommandsEx *This,BSTR bszVoiceCaption);", "IAgentCommandsEx_GetVoiceCaption_Proxy": "HRESULT WINAPI IAgentCommandsEx_GetVoiceCaption_Proxy(IAgentCommandsEx *This,BSTR *bszVoiceCaption);", "IAgentCommandsEx_AddEx_Proxy": "HRESULT WINAPI IAgentCommandsEx_AddEx_Proxy(IAgentCommandsEx *This,BSTR bszCaption,BSTR bszVoice,BSTR bszVoiceCaption,__LONG32 bEnabled,__LONG32 bVisible,__LONG32 ulHelpId,__LONG32 *pdwID);", "IAgentCommandsEx_InsertEx_Proxy": "HRESULT WINAPI IAgentCommandsEx_InsertEx_Proxy(IAgentCommandsEx *This,BSTR bszCaption,BSTR bszVoice,BSTR bszVoiceCaption,__LONG32 bEnabled,__LONG32 bVisible,__LONG32 ulHelpId,__LONG32 dwRefID,__LONG32 bBefore,__LONG32 *pdwID);", "IAgentCommandsEx_SetGlobalVoiceCommandsEnabled_Proxy": "HRESULT WINAPI IAgentCommandsEx_SetGlobalVoiceCommandsEnabled_Proxy(IAgentCommandsEx *This,__LONG32 bEnable);", "IAgentCommandsEx_GetGlobalVoiceCommandsEnabled_Proxy": "HRESULT WINAPI IAgentCommandsEx_GetGlobalVoiceCommandsEnabled_Proxy(IAgentCommandsEx *This,__LONG32 *pbEnabled);", "IAgentCommandWindow_SetVisible_Proxy": "HRESULT WINAPI IAgentCommandWindow_SetVisible_Proxy(IAgentCommandWindow *This,__LONG32 bVisible);", "IAgentCommandWindow_GetVisible_Proxy": "HRESULT WINAPI IAgentCommandWindow_GetVisible_Proxy(IAgentCommandWindow *This,__LONG32 *pbVisible);", "IAgentCommandWindow_GetPosition_Proxy": "HRESULT WINAPI IAgentCommandWindow_GetPosition_Proxy(IAgentCommandWindow *This,__LONG32 *plLeft,__LONG32 *plTop);", "IAgentCommandWindow_GetSize_Proxy": "HRESULT WINAPI IAgentCommandWindow_GetSize_Proxy(IAgentCommandWindow *This,__LONG32 *plWidth,__LONG32 *plHeight);", "IAgentSpeechInputProperties_GetInstalled_Proxy": "HRESULT WINAPI IAgentSpeechInputProperties_GetInstalled_Proxy(IAgentSpeechInputProperties *This,__LONG32 *pbInstalled);", "IAgentSpeechInputProperties_GetEnabled_Proxy": "HRESULT WINAPI IAgentSpeechInputProperties_GetEnabled_Proxy(IAgentSpeechInputProperties *This,__LONG32 *pbEnabled);", "IAgentSpeechInputProperties_GetHotKey_Proxy": "HRESULT WINAPI IAgentSpeechInputProperties_GetHotKey_Proxy(IAgentSpeechInputProperties *This,BSTR *pbszHotCharKey);", "IAgentSpeechInputProperties_GetLCID_Proxy": "HRESULT WINAPI IAgentSpeechInputProperties_GetLCID_Proxy(IAgentSpeechInputProperties *This,LCID *plcidCurrent);", "IAgentSpeechInputProperties_GetEngine_Proxy": "HRESULT WINAPI IAgentSpeechInputProperties_GetEngine_Proxy(IAgentSpeechInputProperties *This,BSTR *pbszEngine);", "IAgentSpeechInputProperties_SetEngine_Proxy": "HRESULT WINAPI IAgentSpeechInputProperties_SetEngine_Proxy(IAgentSpeechInputProperties *This,BSTR bszEngine);", "IAgentSpeechInputProperties_GetListeningTip_Proxy": "HRESULT WINAPI IAgentSpeechInputProperties_GetListeningTip_Proxy(IAgentSpeechInputProperties *This,__LONG32 *pbListeningTip);", "IAgentAudioOutputProperties_GetEnabled_Proxy": "HRESULT WINAPI IAgentAudioOutputProperties_GetEnabled_Proxy(IAgentAudioOutputProperties *This,__LONG32 *pbEnabled);", "IAgentAudioOutputProperties_GetUsingSoundEffects_Proxy": "HRESULT WINAPI IAgentAudioOutputProperties_GetUsingSoundEffects_Proxy(IAgentAudioOutputProperties *This,__LONG32 *pbUsingSoundEffects);", "IAgentAudioOutputPropertiesEx_GetStatus_Proxy": "HRESULT WINAPI IAgentAudioOutputPropertiesEx_GetStatus_Proxy(IAgentAudioOutputPropertiesEx *This,__LONG32 *plStatus);", "IAgentPropertySheet_GetVisible_Proxy": "HRESULT WINAPI IAgentPropertySheet_GetVisible_Proxy(IAgentPropertySheet *This,__LONG32 *pbVisible);", "IAgentPropertySheet_SetVisible_Proxy": "HRESULT WINAPI IAgentPropertySheet_SetVisible_Proxy(IAgentPropertySheet *This,__LONG32 bVisible);", "IAgentPropertySheet_GetPosition_Proxy": "HRESULT WINAPI IAgentPropertySheet_GetPosition_Proxy(IAgentPropertySheet *This,__LONG32 *plLeft,__LONG32 *plTop);", "IAgentPropertySheet_GetSize_Proxy": "HRESULT WINAPI IAgentPropertySheet_GetSize_Proxy(IAgentPropertySheet *This,__LONG32 *plWidth,__LONG32 *plHeight);", "IAgentPropertySheet_GetPage_Proxy": "HRESULT WINAPI IAgentPropertySheet_GetPage_Proxy(IAgentPropertySheet *This,BSTR *pbszPage);", "IAgentPropertySheet_SetPage_Proxy": "HRESULT WINAPI IAgentPropertySheet_SetPage_Proxy(IAgentPropertySheet *This,BSTR bszPage);", "IAgentBalloon_GetEnabled_Proxy": "HRESULT WINAPI IAgentBalloon_GetEnabled_Proxy(IAgentBalloon *This,__LONG32 *pbEnabled);", "IAgentBalloon_GetNumLines_Proxy": "HRESULT WINAPI IAgentBalloon_GetNumLines_Proxy(IAgentBalloon *This,__LONG32 *plLines);", "IAgentBalloon_GetNumCharsPerLine_Proxy": "HRESULT WINAPI IAgentBalloon_GetNumCharsPerLine_Proxy(IAgentBalloon *This,__LONG32 *plCharsPerLine);", "IAgentBalloon_GetFontName_Proxy": "HRESULT WINAPI IAgentBalloon_GetFontName_Proxy(IAgentBalloon *This,BSTR *pbszFontName);", "IAgentBalloon_GetFontSize_Proxy": "HRESULT WINAPI IAgentBalloon_GetFontSize_Proxy(IAgentBalloon *This,__LONG32 *plFontSize);", "IAgentBalloon_GetFontBold_Proxy": "HRESULT WINAPI IAgentBalloon_GetFontBold_Proxy(IAgentBalloon *This,__LONG32 *pbFontBold);", "IAgentBalloon_GetFontItalic_Proxy": "HRESULT WINAPI IAgentBalloon_GetFontItalic_Proxy(IAgentBalloon *This,__LONG32 *pbFontItalic);", "IAgentBalloon_GetFontStrikethru_Proxy": "HRESULT WINAPI IAgentBalloon_GetFontStrikethru_Proxy(IAgentBalloon *This,__LONG32 *pbFontStrikethru);", "IAgentBalloon_GetFontUnderline_Proxy": "HRESULT WINAPI IAgentBalloon_GetFontUnderline_Proxy(IAgentBalloon *This,__LONG32 *pbFontUnderline);", "IAgentBalloon_GetForeColor_Proxy": "HRESULT WINAPI IAgentBalloon_GetForeColor_Proxy(IAgentBalloon *This,__LONG32 *plFGColor);", "IAgentBalloon_GetBackColor_Proxy": "HRESULT WINAPI IAgentBalloon_GetBackColor_Proxy(IAgentBalloon *This,__LONG32 *plBGColor);", "IAgentBalloon_GetBorderColor_Proxy": "HRESULT WINAPI IAgentBalloon_GetBorderColor_Proxy(IAgentBalloon *This,__LONG32 *plBorderColor);", "IAgentBalloon_SetVisible_Proxy": "HRESULT WINAPI IAgentBalloon_SetVisible_Proxy(IAgentBalloon *This,__LONG32 bVisible);", "IAgentBalloon_GetVisible_Proxy": "HRESULT WINAPI IAgentBalloon_GetVisible_Proxy(IAgentBalloon *This,__LONG32 *pbVisible);", "IAgentBalloon_SetFontName_Proxy": "HRESULT WINAPI IAgentBalloon_SetFontName_Proxy(IAgentBalloon *This,BSTR bszFontName);", "IAgentBalloon_SetFontSize_Proxy": "HRESULT WINAPI IAgentBalloon_SetFontSize_Proxy(IAgentBalloon *This,__LONG32 lFontSize);", "IAgentBalloon_SetFontCharSet_Proxy": "HRESULT WINAPI IAgentBalloon_SetFontCharSet_Proxy(IAgentBalloon *This,short sFontCharSet);", "IAgentBalloon_GetFontCharSet_Proxy": "HRESULT WINAPI IAgentBalloon_GetFontCharSet_Proxy(IAgentBalloon *This,short *psFontCharSet);", "IAgentBalloonEx_SetStyle_Proxy": "HRESULT WINAPI IAgentBalloonEx_SetStyle_Proxy(IAgentBalloonEx *This,__LONG32 lStyle);", "IAgentBalloonEx_GetStyle_Proxy": "HRESULT WINAPI IAgentBalloonEx_GetStyle_Proxy(IAgentBalloonEx *This,__LONG32 *plStyle);", "IAgentBalloonEx_SetNumLines_Proxy": "HRESULT WINAPI IAgentBalloonEx_SetNumLines_Proxy(IAgentBalloonEx *This,__LONG32 lLines);", "IAgentBalloonEx_SetNumCharsPerLine_Proxy": "HRESULT WINAPI IAgentBalloonEx_SetNumCharsPerLine_Proxy(IAgentBalloonEx *This,__LONG32 lCharsPerLine);", "IAgentCharacter_GetVisible_Proxy": "HRESULT WINAPI IAgentCharacter_GetVisible_Proxy(IAgentCharacter *This,__LONG32 *pbVisible);", "IAgentCharacter_SetPosition_Proxy": "HRESULT WINAPI IAgentCharacter_SetPosition_Proxy(IAgentCharacter *This,__LONG32 lLeft,__LONG32 lTop);", "IAgentCharacter_GetPosition_Proxy": "HRESULT WINAPI IAgentCharacter_GetPosition_Proxy(IAgentCharacter *This,__LONG32 *plLeft,__LONG32 *plTop);", "IAgentCharacter_SetSize_Proxy": "HRESULT WINAPI IAgentCharacter_SetSize_Proxy(IAgentCharacter *This,__LONG32 lWidth,__LONG32 lHeight);", "IAgentCharacter_GetSize_Proxy": "HRESULT WINAPI IAgentCharacter_GetSize_Proxy(IAgentCharacter *This,__LONG32 *plWidth,__LONG32 *plHeight);", "IAgentCharacter_GetName_Proxy": "HRESULT WINAPI IAgentCharacter_GetName_Proxy(IAgentCharacter *This,BSTR *pbszName);", "IAgentCharacter_GetDescription_Proxy": "HRESULT WINAPI IAgentCharacter_GetDescription_Proxy(IAgentCharacter *This,BSTR *pbszDescription);", "IAgentCharacter_GetTTSSpeed_Proxy": "HRESULT WINAPI IAgentCharacter_GetTTSSpeed_Proxy(IAgentCharacter *This,__LONG32 *pdwSpeed);", "IAgentCharacter_GetTTSPitch_Proxy": "HRESULT WINAPI IAgentCharacter_GetTTSPitch_Proxy(IAgentCharacter *This,short *pwPitch);", "IAgentCharacter_Activate_Proxy": "HRESULT WINAPI IAgentCharacter_Activate_Proxy(IAgentCharacter *This,short sState);", "IAgentCharacter_SetIdleOn_Proxy": "HRESULT WINAPI IAgentCharacter_SetIdleOn_Proxy(IAgentCharacter *This,__LONG32 bOn);", "IAgentCharacter_GetIdleOn_Proxy": "HRESULT WINAPI IAgentCharacter_GetIdleOn_Proxy(IAgentCharacter *This,__LONG32 *pbOn);", "IAgentCharacter_Prepare_Proxy": "HRESULT WINAPI IAgentCharacter_Prepare_Proxy(IAgentCharacter *This,__LONG32 dwType,BSTR bszName,__LONG32 bQueue,__LONG32 *pdwReqID);", "IAgentCharacter_Play_Proxy": "HRESULT WINAPI IAgentCharacter_Play_Proxy(IAgentCharacter *This,BSTR bszAnimation,__LONG32 *pdwReqID);", "IAgentCharacter_Stop_Proxy": "HRESULT WINAPI IAgentCharacter_Stop_Proxy(IAgentCharacter *This,__LONG32 dwReqID);", "IAgentCharacter_StopAll_Proxy": "HRESULT WINAPI IAgentCharacter_StopAll_Proxy(IAgentCharacter *This,__LONG32 lTypes);", "IAgentCharacter_Wait_Proxy": "HRESULT WINAPI IAgentCharacter_Wait_Proxy(IAgentCharacter *This,__LONG32 dwReqID,__LONG32 *pdwReqID);", "IAgentCharacter_Interrupt_Proxy": "HRESULT WINAPI IAgentCharacter_Interrupt_Proxy(IAgentCharacter *This,__LONG32 dwReqID,__LONG32 *pdwReqID);", "IAgentCharacter_Show_Proxy": "HRESULT WINAPI IAgentCharacter_Show_Proxy(IAgentCharacter *This,__LONG32 bFast,__LONG32 *pdwReqID);", "IAgentCharacter_Hide_Proxy": "HRESULT WINAPI IAgentCharacter_Hide_Proxy(IAgentCharacter *This,__LONG32 bFast,__LONG32 *pdwReqID);", "IAgentCharacter_Speak_Proxy": "HRESULT WINAPI IAgentCharacter_Speak_Proxy(IAgentCharacter *This,BSTR bszText,BSTR bszUrl,__LONG32 *pdwReqID);", "IAgentCharacter_MoveTo_Proxy": "HRESULT WINAPI IAgentCharacter_MoveTo_Proxy(IAgentCharacter *This,short x,short y,__LONG32 lSpeed,__LONG32 *pdwReqID);", "IAgentCharacter_GestureAt_Proxy": "HRESULT WINAPI IAgentCharacter_GestureAt_Proxy(IAgentCharacter *This,short x,short y,__LONG32 *pdwReqID);", "IAgentCharacter_GetMoveCause_Proxy": "HRESULT WINAPI IAgentCharacter_GetMoveCause_Proxy(IAgentCharacter *This,__LONG32 *pdwCause);", "IAgentCharacter_GetVisibilityCause_Proxy": "HRESULT WINAPI IAgentCharacter_GetVisibilityCause_Proxy(IAgentCharacter *This,__LONG32 *pdwCause);", "IAgentCharacter_HasOtherClients_Proxy": "HRESULT WINAPI IAgentCharacter_HasOtherClients_Proxy(IAgentCharacter *This,__LONG32 *plNumOtherClients);", "IAgentCharacter_SetSoundEffectsOn_Proxy": "HRESULT WINAPI IAgentCharacter_SetSoundEffectsOn_Proxy(IAgentCharacter *This,__LONG32 bOn);", "IAgentCharacter_GetSoundEffectsOn_Proxy": "HRESULT WINAPI IAgentCharacter_GetSoundEffectsOn_Proxy(IAgentCharacter *This,__LONG32 *pbOn);", "IAgentCharacter_SetName_Proxy": "HRESULT WINAPI IAgentCharacter_SetName_Proxy(IAgentCharacter *This,BSTR bszName);", "IAgentCharacter_SetDescription_Proxy": "HRESULT WINAPI IAgentCharacter_SetDescription_Proxy(IAgentCharacter *This,BSTR bszDescription);", "IAgentCharacter_GetExtraData_Proxy": "HRESULT WINAPI IAgentCharacter_GetExtraData_Proxy(IAgentCharacter *This,BSTR *pbszExtraData);", "IAgentCharacterEx_ShowPopupMenu_Proxy": "HRESULT WINAPI IAgentCharacterEx_ShowPopupMenu_Proxy(IAgentCharacterEx *This,short x,short y);", "IAgentCharacterEx_SetAutoPopupMenu_Proxy": "HRESULT WINAPI IAgentCharacterEx_SetAutoPopupMenu_Proxy(IAgentCharacterEx *This,__LONG32 bAutoPopupMenu);", "IAgentCharacterEx_GetAutoPopupMenu_Proxy": "HRESULT WINAPI IAgentCharacterEx_GetAutoPopupMenu_Proxy(IAgentCharacterEx *This,__LONG32 *pbAutoPopupMenu);", "IAgentCharacterEx_GetHelpFileName_Proxy": "HRESULT WINAPI IAgentCharacterEx_GetHelpFileName_Proxy(IAgentCharacterEx *This,BSTR *pbszName);", "IAgentCharacterEx_SetHelpFileName_Proxy": "HRESULT WINAPI IAgentCharacterEx_SetHelpFileName_Proxy(IAgentCharacterEx *This,BSTR bszName);", "IAgentCharacterEx_SetHelpModeOn_Proxy": "HRESULT WINAPI IAgentCharacterEx_SetHelpModeOn_Proxy(IAgentCharacterEx *This,__LONG32 bHelpModeOn);", "IAgentCharacterEx_GetHelpModeOn_Proxy": "HRESULT WINAPI IAgentCharacterEx_GetHelpModeOn_Proxy(IAgentCharacterEx *This,__LONG32 *pbHelpModeOn);", "IAgentCharacterEx_SetHelpContextID_Proxy": "HRESULT WINAPI IAgentCharacterEx_SetHelpContextID_Proxy(IAgentCharacterEx *This,__LONG32 ulID);", "IAgentCharacterEx_GetHelpContextID_Proxy": "HRESULT WINAPI IAgentCharacterEx_GetHelpContextID_Proxy(IAgentCharacterEx *This,__LONG32 *pulID);", "IAgentCharacterEx_GetActive_Proxy": "HRESULT WINAPI IAgentCharacterEx_GetActive_Proxy(IAgentCharacterEx *This,short *psState);", "IAgentCharacterEx_Listen_Proxy": "HRESULT WINAPI IAgentCharacterEx_Listen_Proxy(IAgentCharacterEx *This,__LONG32 bListen);", "IAgentCharacterEx_SetLanguageID_Proxy": "HRESULT WINAPI IAgentCharacterEx_SetLanguageID_Proxy(IAgentCharacterEx *This,__LONG32 langid);", "IAgentCharacterEx_GetLanguageID_Proxy": "HRESULT WINAPI IAgentCharacterEx_GetLanguageID_Proxy(IAgentCharacterEx *This,__LONG32 *plangid);", "IAgentCharacterEx_GetTTSModeID_Proxy": "HRESULT WINAPI IAgentCharacterEx_GetTTSModeID_Proxy(IAgentCharacterEx *This,BSTR *pbszModeID);", "IAgentCharacterEx_SetTTSModeID_Proxy": "HRESULT WINAPI IAgentCharacterEx_SetTTSModeID_Proxy(IAgentCharacterEx *This,BSTR bszModeID);", "IAgentCharacterEx_GetSRModeID_Proxy": "HRESULT WINAPI IAgentCharacterEx_GetSRModeID_Proxy(IAgentCharacterEx *This,BSTR *pbszModeID);", "IAgentCharacterEx_SetSRModeID_Proxy": "HRESULT WINAPI IAgentCharacterEx_SetSRModeID_Proxy(IAgentCharacterEx *This,BSTR bszModeID);", "IAgentCharacterEx_GetGUID_Proxy": "HRESULT WINAPI IAgentCharacterEx_GetGUID_Proxy(IAgentCharacterEx *This,BSTR *pbszID);", "IAgentCharacterEx_GetOriginalSize_Proxy": "HRESULT WINAPI IAgentCharacterEx_GetOriginalSize_Proxy(IAgentCharacterEx *This,__LONG32 *plWidth,__LONG32 *plHeight);", "IAgentCharacterEx_Think_Proxy": "HRESULT WINAPI IAgentCharacterEx_Think_Proxy(IAgentCharacterEx *This,BSTR bszText,__LONG32 *pdwReqID);", "IAgentCharacterEx_GetVersion_Proxy": "HRESULT WINAPI IAgentCharacterEx_GetVersion_Proxy(IAgentCharacterEx *This,short *psMajor,short *psMinor);", "IAgentCharacterEx_GetAnimationNames_Proxy": "HRESULT WINAPI IAgentCharacterEx_GetAnimationNames_Proxy(IAgentCharacterEx *This,IUnknown **punkEnum);", "IAgentCharacterEx_GetSRStatus_Proxy": "HRESULT WINAPI IAgentCharacterEx_GetSRStatus_Proxy(IAgentCharacterEx *This,__LONG32 *plStatus);", "IAgent_Load_Proxy": "HRESULT WINAPI IAgent_Load_Proxy(IAgent *This,VARIANT vLoadKey,__LONG32 *pdwCharID,__LONG32 *pdwReqID);", "IAgent_Unload_Proxy": "HRESULT WINAPI IAgent_Unload_Proxy(IAgent *This,__LONG32 dwCharID);", "IAgent_Register_Proxy": "HRESULT WINAPI IAgent_Register_Proxy(IAgent *This,IUnknown *punkNotifySink,__LONG32 *pdwSinkID);", "IAgent_Unregister_Proxy": "HRESULT WINAPI IAgent_Unregister_Proxy(IAgent *This,__LONG32 dwSinkID);", "IAgent_GetCharacter_Proxy": "HRESULT WINAPI IAgent_GetCharacter_Proxy(IAgent *This,__LONG32 dwCharID,IDispatch **ppunkCharacter);", "IAgent_GetSuspended_Proxy": "HRESULT WINAPI IAgent_GetSuspended_Proxy(IAgent *This,__LONG32 *pbSuspended);", "IAgentEx_GetCharacterEx_Proxy": "HRESULT WINAPI IAgentEx_GetCharacterEx_Proxy(IAgentEx *This,__LONG32 dwCharID,IAgentCharacterEx **ppCharacterEx);", "IAgentEx_GetVersion_Proxy": "HRESULT WINAPI IAgentEx_GetVersion_Proxy(IAgentEx *This,short *psMajor,short *psMinor);", "IAgentEx_ShowDefaultCharacterProperties_Proxy": "HRESULT WINAPI IAgentEx_ShowDefaultCharacterProperties_Proxy(IAgentEx *This,short x,short y,__LONG32 bUseDefaultPosition);", "IAgentNotifySink_Command_Proxy": "HRESULT WINAPI IAgentNotifySink_Command_Proxy(IAgentNotifySink *This,__LONG32 dwCommandID,IUnknown *punkUserInput);", "IAgentNotifySink_ActivateInputState_Proxy": "HRESULT WINAPI IAgentNotifySink_ActivateInputState_Proxy(IAgentNotifySink *This,__LONG32 dwCharID,__LONG32 bActivated);", "IAgentNotifySink_Restart_Proxy": "HRESULT WINAPI IAgentNotifySink_Restart_Proxy(IAgentNotifySink *This);", "IAgentNotifySink_Shutdown_Proxy": "HRESULT WINAPI IAgentNotifySink_Shutdown_Proxy(IAgentNotifySink *This);", "IAgentNotifySink_VisibleState_Proxy": "HRESULT WINAPI IAgentNotifySink_VisibleState_Proxy(IAgentNotifySink *This,__LONG32 dwCharID,__LONG32 bVisible,__LONG32 dwCause);", "IAgentNotifySink_Click_Proxy": "HRESULT WINAPI IAgentNotifySink_Click_Proxy(IAgentNotifySink *This,__LONG32 dwCharID,short fwKeys,__LONG32 x,__LONG32 y);", "IAgentNotifySink_DblClick_Proxy": "HRESULT WINAPI IAgentNotifySink_DblClick_Proxy(IAgentNotifySink *This,__LONG32 dwCharID,short fwKeys,__LONG32 x,__LONG32 y);", "IAgentNotifySink_DragStart_Proxy": "HRESULT WINAPI IAgentNotifySink_DragStart_Proxy(IAgentNotifySink *This,__LONG32 dwCharID,short fwKeys,__LONG32 x,__LONG32 y);", "IAgentNotifySink_DragComplete_Proxy": "HRESULT WINAPI IAgentNotifySink_DragComplete_Proxy(IAgentNotifySink *This,__LONG32 dwCharID,short fwKeys,__LONG32 x,__LONG32 y);", "IAgentNotifySink_RequestStart_Proxy": "HRESULT WINAPI IAgentNotifySink_RequestStart_Proxy(IAgentNotifySink *This,__LONG32 dwRequestID);", "IAgentNotifySink_RequestComplete_Proxy": "HRESULT WINAPI IAgentNotifySink_RequestComplete_Proxy(IAgentNotifySink *This,__LONG32 dwRequestID,__LONG32 hrStatus);", "IAgentNotifySink_BookMark_Proxy": "HRESULT WINAPI IAgentNotifySink_BookMark_Proxy(IAgentNotifySink *This,__LONG32 dwBookMarkID);", "IAgentNotifySink_Idle_Proxy": "HRESULT WINAPI IAgentNotifySink_Idle_Proxy(IAgentNotifySink *This,__LONG32 dwCharID,__LONG32 bStart);", "IAgentNotifySink_Move_Proxy": "HRESULT WINAPI IAgentNotifySink_Move_Proxy(IAgentNotifySink *This,__LONG32 dwCharID,__LONG32 x,__LONG32 y,__LONG32 dwCause);", "IAgentNotifySink_Size_Proxy": "HRESULT WINAPI IAgentNotifySink_Size_Proxy(IAgentNotifySink *This,__LONG32 dwCharID,__LONG32 lWidth,__LONG32 lHeight);", "IAgentNotifySink_BalloonVisibleState_Proxy": "HRESULT WINAPI IAgentNotifySink_BalloonVisibleState_Proxy(IAgentNotifySink *This,__LONG32 dwCharID,__LONG32 bVisible);", "IAgentNotifySinkEx_HelpComplete_Proxy": "HRESULT WINAPI IAgentNotifySinkEx_HelpComplete_Proxy(IAgentNotifySinkEx *This,__LONG32 dwCharID,__LONG32 dwCommandID,__LONG32 dwCause);", "IAgentNotifySinkEx_ListeningState_Proxy": "HRESULT WINAPI IAgentNotifySinkEx_ListeningState_Proxy(IAgentNotifySinkEx *This,__LONG32 dwCharID,__LONG32 bListening,__LONG32 dwCause);", "IAgentNotifySinkEx_DefaultCharacterChange_Proxy": "HRESULT WINAPI IAgentNotifySinkEx_DefaultCharacterChange_Proxy(IAgentNotifySinkEx *This,BSTR bszGUID);", "IAgentNotifySinkEx_AgentPropertyChange_Proxy": "HRESULT WINAPI IAgentNotifySinkEx_AgentPropertyChange_Proxy(IAgentNotifySinkEx *This);", "IAgentNotifySinkEx_ActiveClientChange_Proxy": "HRESULT WINAPI IAgentNotifySinkEx_ActiveClientChange_Proxy(IAgentNotifySinkEx *This,__LONG32 dwCharID,__LONG32 lStatus);", "IAgentPrivateNotifySink_ReleaseAll_Proxy": "HRESULT WINAPI IAgentPrivateNotifySink_ReleaseAll_Proxy(IAgentPrivateNotifySink *This);", "IAgentPrivateNotifySink_ReleaseOne_Proxy": "HRESULT WINAPI IAgentPrivateNotifySink_ReleaseOne_Proxy(IAgentPrivateNotifySink *This,void *pnNotify);", "IAgentPrivateNotifySink_GetClientID_Proxy": "HRESULT WINAPI IAgentPrivateNotifySink_GetClientID_Proxy(IAgentPrivateNotifySink *This,DWORD *pdwClientID);", "IAgentCustomMarshalMaker_Create_Proxy": "HRESULT WINAPI IAgentCustomMarshalMaker_Create_Proxy(IAgentCustomMarshalMaker *This,IUnknown *pSink,REFIID riidSink,IUnknown **pMarshaledSink);", "IAgentClientStatus_Ping_Proxy": "HRESULT WINAPI IAgentClientStatus_Ping_Proxy(IAgentClientStatus *This);", "IRTCClient_Initialize_Proxy": "HRESULT WINAPI IRTCClient_Initialize_Proxy(IRTCClient *This);", "IRTCClient_Shutdown_Proxy": "HRESULT WINAPI IRTCClient_Shutdown_Proxy(IRTCClient *This);", "IRTCClient_PrepareForShutdown_Proxy": "HRESULT WINAPI IRTCClient_PrepareForShutdown_Proxy(IRTCClient *This);", "IRTCClient_put_EventFilter_Proxy": "HRESULT WINAPI IRTCClient_put_EventFilter_Proxy(IRTCClient *This,__LONG32 lFilter);", "IRTCClient_get_EventFilter_Proxy": "HRESULT WINAPI IRTCClient_get_EventFilter_Proxy(IRTCClient *This,__LONG32 *plFilter);", "IRTCClient_SetPreferredMediaTypes_Proxy": "HRESULT WINAPI IRTCClient_SetPreferredMediaTypes_Proxy(IRTCClient *This,__LONG32 lMediaTypes,VARIANT_BOOL fPersistent);", "IRTCClient_get_PreferredMediaTypes_Proxy": "HRESULT WINAPI IRTCClient_get_PreferredMediaTypes_Proxy(IRTCClient *This,__LONG32 *plMediaTypes);", "IRTCClient_get_MediaCapabilities_Proxy": "HRESULT WINAPI IRTCClient_get_MediaCapabilities_Proxy(IRTCClient *This,__LONG32 *plMediaTypes);", "IRTCClient_CreateSession_Proxy": "HRESULT WINAPI IRTCClient_CreateSession_Proxy(IRTCClient *This,RTC_SESSION_TYPE enType,BSTR bstrLocalPhoneURI,IRTCProfile *pProfile,__LONG32 lFlags,IRTCSession **ppSession);", "IRTCClient_put_ListenForIncomingSessions_Proxy": "HRESULT WINAPI IRTCClient_put_ListenForIncomingSessions_Proxy(IRTCClient *This,RTC_LISTEN_MODE enListen);", "IRTCClient_get_ListenForIncomingSessions_Proxy": "HRESULT WINAPI IRTCClient_get_ListenForIncomingSessions_Proxy(IRTCClient *This,RTC_LISTEN_MODE *penListen);", "IRTCClient_get_NetworkAddresses_Proxy": "HRESULT WINAPI IRTCClient_get_NetworkAddresses_Proxy(IRTCClient *This,VARIANT_BOOL fTCP,VARIANT_BOOL fExternal,VARIANT *pvAddresses);", "IRTCClient_put_Volume_Proxy": "HRESULT WINAPI IRTCClient_put_Volume_Proxy(IRTCClient *This,RTC_AUDIO_DEVICE enDevice,__LONG32 lVolume);", "IRTCClient_get_Volume_Proxy": "HRESULT WINAPI IRTCClient_get_Volume_Proxy(IRTCClient *This,RTC_AUDIO_DEVICE enDevice,__LONG32 *plVolume);", "IRTCClient_put_AudioMuted_Proxy": "HRESULT WINAPI IRTCClient_put_AudioMuted_Proxy(IRTCClient *This,RTC_AUDIO_DEVICE enDevice,VARIANT_BOOL fMuted);", "IRTCClient_get_AudioMuted_Proxy": "HRESULT WINAPI IRTCClient_get_AudioMuted_Proxy(IRTCClient *This,RTC_AUDIO_DEVICE enDevice,VARIANT_BOOL *pfMuted);", "IRTCClient_get_IVideoWindow_Proxy": "HRESULT WINAPI IRTCClient_get_IVideoWindow_Proxy(IRTCClient *This,RTC_VIDEO_DEVICE enDevice,IVideoWindow **ppIVideoWindow);", "IRTCClient_put_PreferredAudioDevice_Proxy": "HRESULT WINAPI IRTCClient_put_PreferredAudioDevice_Proxy(IRTCClient *This,RTC_AUDIO_DEVICE enDevice,BSTR bstrDeviceName);", "IRTCClient_get_PreferredAudioDevice_Proxy": "HRESULT WINAPI IRTCClient_get_PreferredAudioDevice_Proxy(IRTCClient *This,RTC_AUDIO_DEVICE enDevice,BSTR *pbstrDeviceName);", "IRTCClient_put_PreferredVolume_Proxy": "HRESULT WINAPI IRTCClient_put_PreferredVolume_Proxy(IRTCClient *This,RTC_AUDIO_DEVICE enDevice,__LONG32 lVolume);", "IRTCClient_get_PreferredVolume_Proxy": "HRESULT WINAPI IRTCClient_get_PreferredVolume_Proxy(IRTCClient *This,RTC_AUDIO_DEVICE enDevice,__LONG32 *plVolume);", "IRTCClient_put_PreferredAEC_Proxy": "HRESULT WINAPI IRTCClient_put_PreferredAEC_Proxy(IRTCClient *This,VARIANT_BOOL bEnable);", "IRTCClient_get_PreferredAEC_Proxy": "HRESULT WINAPI IRTCClient_get_PreferredAEC_Proxy(IRTCClient *This,VARIANT_BOOL *pbEnabled);", "IRTCClient_put_PreferredVideoDevice_Proxy": "HRESULT WINAPI IRTCClient_put_PreferredVideoDevice_Proxy(IRTCClient *This,BSTR bstrDeviceName);", "IRTCClient_get_PreferredVideoDevice_Proxy": "HRESULT WINAPI IRTCClient_get_PreferredVideoDevice_Proxy(IRTCClient *This,BSTR *pbstrDeviceName);", "IRTCClient_get_ActiveMedia_Proxy": "HRESULT WINAPI IRTCClient_get_ActiveMedia_Proxy(IRTCClient *This,__LONG32 *plMediaType);", "IRTCClient_put_MaxBitrate_Proxy": "HRESULT WINAPI IRTCClient_put_MaxBitrate_Proxy(IRTCClient *This,__LONG32 lMaxBitrate);", "IRTCClient_get_MaxBitrate_Proxy": "HRESULT WINAPI IRTCClient_get_MaxBitrate_Proxy(IRTCClient *This,__LONG32 *plMaxBitrate);", "IRTCClient_put_TemporalSpatialTradeOff_Proxy": "HRESULT WINAPI IRTCClient_put_TemporalSpatialTradeOff_Proxy(IRTCClient *This,__LONG32 lValue);", "IRTCClient_get_TemporalSpatialTradeOff_Proxy": "HRESULT WINAPI IRTCClient_get_TemporalSpatialTradeOff_Proxy(IRTCClient *This,__LONG32 *plValue);", "IRTCClient_get_NetworkQuality_Proxy": "HRESULT WINAPI IRTCClient_get_NetworkQuality_Proxy(IRTCClient *This,__LONG32 *plNetworkQuality);", "IRTCClient_StartT120Applet_Proxy": "HRESULT WINAPI IRTCClient_StartT120Applet_Proxy(IRTCClient *This,RTC_T120_APPLET enApplet);", "IRTCClient_StopT120Applets_Proxy": "HRESULT WINAPI IRTCClient_StopT120Applets_Proxy(IRTCClient *This);", "IRTCClient_get_IsT120AppletRunning_Proxy": "HRESULT WINAPI IRTCClient_get_IsT120AppletRunning_Proxy(IRTCClient *This,RTC_T120_APPLET enApplet,VARIANT_BOOL *pfRunning);", "IRTCClient_get_LocalUserURI_Proxy": "HRESULT WINAPI IRTCClient_get_LocalUserURI_Proxy(IRTCClient *This,BSTR *pbstrUserURI);", "IRTCClient_put_LocalUserURI_Proxy": "HRESULT WINAPI IRTCClient_put_LocalUserURI_Proxy(IRTCClient *This,BSTR bstrUserURI);", "IRTCClient_get_LocalUserName_Proxy": "HRESULT WINAPI IRTCClient_get_LocalUserName_Proxy(IRTCClient *This,BSTR *pbstrUserName);", "IRTCClient_put_LocalUserName_Proxy": "HRESULT WINAPI IRTCClient_put_LocalUserName_Proxy(IRTCClient *This,BSTR bstrUserName);", "IRTCClient_PlayRing_Proxy": "HRESULT WINAPI IRTCClient_PlayRing_Proxy(IRTCClient *This,RTC_RING_TYPE enType,VARIANT_BOOL bPlay);", "IRTCClient_SendDTMF_Proxy": "HRESULT WINAPI IRTCClient_SendDTMF_Proxy(IRTCClient *This,RTC_DTMF enDTMF);", "IRTCClient_InvokeTuningWizard_Proxy": "HRESULT WINAPI IRTCClient_InvokeTuningWizard_Proxy(IRTCClient *This,OAHWND hwndParent);", "IRTCClient_get_IsTuned_Proxy": "HRESULT WINAPI IRTCClient_get_IsTuned_Proxy(IRTCClient *This,VARIANT_BOOL *pfTuned);", "IRTCClient2_put_AnswerMode_Proxy": "HRESULT WINAPI IRTCClient2_put_AnswerMode_Proxy(IRTCClient2 *This,RTC_SESSION_TYPE enType,RTC_ANSWER_MODE enMode);", "IRTCClient2_get_AnswerMode_Proxy": "HRESULT WINAPI IRTCClient2_get_AnswerMode_Proxy(IRTCClient2 *This,RTC_SESSION_TYPE enType,RTC_ANSWER_MODE *penMode);", "IRTCClient2_InvokeTuningWizardEx_Proxy": "HRESULT WINAPI IRTCClient2_InvokeTuningWizardEx_Proxy(IRTCClient2 *This,OAHWND hwndParent,VARIANT_BOOL fAllowAudio,VARIANT_BOOL fAllowVideo);", "IRTCClient2_get_Version_Proxy": "HRESULT WINAPI IRTCClient2_get_Version_Proxy(IRTCClient2 *This,__LONG32 *plVersion);", "IRTCClient2_put_ClientName_Proxy": "HRESULT WINAPI IRTCClient2_put_ClientName_Proxy(IRTCClient2 *This,BSTR bstrClientName);", "IRTCClient2_put_ClientCurVer_Proxy": "HRESULT WINAPI IRTCClient2_put_ClientCurVer_Proxy(IRTCClient2 *This,BSTR bstrClientCurVer);", "IRTCClient2_InitializeEx_Proxy": "HRESULT WINAPI IRTCClient2_InitializeEx_Proxy(IRTCClient2 *This,__LONG32 lFlags);", "IRTCClient2_CreateSessionWithDescription_Proxy": "HRESULT WINAPI IRTCClient2_CreateSessionWithDescription_Proxy(IRTCClient2 *This,BSTR bstrContentType,BSTR bstrSessionDescription,IRTCProfile *pProfile,__LONG32 lFlags,IRTCSession2 **ppSession2);", "IRTCClient2_SetSessionDescriptionManager_Proxy": "HRESULT WINAPI IRTCClient2_SetSessionDescriptionManager_Proxy(IRTCClient2 *This,IRTCSessionDescriptionManager *pSessionDescriptionManager);", "IRTCClient2_put_PreferredSecurityLevel_Proxy": "HRESULT WINAPI IRTCClient2_put_PreferredSecurityLevel_Proxy(IRTCClient2 *This,RTC_SECURITY_TYPE enSecurityType,RTC_SECURITY_LEVEL enSecurityLevel);", "IRTCClient2_get_PreferredSecurityLevel_Proxy": "HRESULT WINAPI IRTCClient2_get_PreferredSecurityLevel_Proxy(IRTCClient2 *This,RTC_SECURITY_TYPE enSecurityType,RTC_SECURITY_LEVEL *penSecurityLevel);", "IRTCClient2_put_AllowedPorts_Proxy": "HRESULT WINAPI IRTCClient2_put_AllowedPorts_Proxy(IRTCClient2 *This,__LONG32 lTransport,RTC_LISTEN_MODE enListenMode);", "IRTCClient2_get_AllowedPorts_Proxy": "HRESULT WINAPI IRTCClient2_get_AllowedPorts_Proxy(IRTCClient2 *This,__LONG32 lTransport,RTC_LISTEN_MODE *penListenMode);", "IRTCClientPresence_EnablePresence_Proxy": "HRESULT WINAPI IRTCClientPresence_EnablePresence_Proxy(IRTCClientPresence *This,VARIANT_BOOL fUseStorage,VARIANT varStorage);", "IRTCClientPresence_Export_Proxy": "HRESULT WINAPI IRTCClientPresence_Export_Proxy(IRTCClientPresence *This,VARIANT varStorage);", "IRTCClientPresence_Import_Proxy": "HRESULT WINAPI IRTCClientPresence_Import_Proxy(IRTCClientPresence *This,VARIANT varStorage,VARIANT_BOOL fReplaceAll);", "IRTCClientPresence_EnumerateBuddies_Proxy": "HRESULT WINAPI IRTCClientPresence_EnumerateBuddies_Proxy(IRTCClientPresence *This,IRTCEnumBuddies **ppEnum);", "IRTCClientPresence_get_Buddies_Proxy": "HRESULT WINAPI IRTCClientPresence_get_Buddies_Proxy(IRTCClientPresence *This,IRTCCollection **ppCollection);", "IRTCClientPresence_get_Buddy_Proxy": "HRESULT WINAPI IRTCClientPresence_get_Buddy_Proxy(IRTCClientPresence *This,BSTR bstrPresentityURI,IRTCBuddy **ppBuddy);", "IRTCClientPresence_AddBuddy_Proxy": "HRESULT WINAPI IRTCClientPresence_AddBuddy_Proxy(IRTCClientPresence *This,BSTR bstrPresentityURI,BSTR bstrUserName,BSTR bstrData,VARIANT_BOOL fPersistent,IRTCProfile *pProfile,__LONG32 lFlags,IRTCBuddy **ppBuddy);", "IRTCClientPresence_RemoveBuddy_Proxy": "HRESULT WINAPI IRTCClientPresence_RemoveBuddy_Proxy(IRTCClientPresence *This,IRTCBuddy *pBuddy);", "IRTCClientPresence_EnumerateWatchers_Proxy": "HRESULT WINAPI IRTCClientPresence_EnumerateWatchers_Proxy(IRTCClientPresence *This,IRTCEnumWatchers **ppEnum);", "IRTCClientPresence_get_Watchers_Proxy": "HRESULT WINAPI IRTCClientPresence_get_Watchers_Proxy(IRTCClientPresence *This,IRTCCollection **ppCollection);", "IRTCClientPresence_get_Watcher_Proxy": "HRESULT WINAPI IRTCClientPresence_get_Watcher_Proxy(IRTCClientPresence *This,BSTR bstrPresentityURI,IRTCWatcher **ppWatcher);", "IRTCClientPresence_AddWatcher_Proxy": "HRESULT WINAPI IRTCClientPresence_AddWatcher_Proxy(IRTCClientPresence *This,BSTR bstrPresentityURI,BSTR bstrUserName,BSTR bstrData,VARIANT_BOOL fBlocked,VARIANT_BOOL fPersistent,IRTCWatcher **ppWatcher);", "IRTCClientPresence_RemoveWatcher_Proxy": "HRESULT WINAPI IRTCClientPresence_RemoveWatcher_Proxy(IRTCClientPresence *This,IRTCWatcher *pWatcher);", "IRTCClientPresence_SetLocalPresenceInfo_Proxy": "HRESULT WINAPI IRTCClientPresence_SetLocalPresenceInfo_Proxy(IRTCClientPresence *This,RTC_PRESENCE_STATUS enStatus,BSTR bstrNotes);", "IRTCClientPresence_get_OfferWatcherMode_Proxy": "HRESULT WINAPI IRTCClientPresence_get_OfferWatcherMode_Proxy(IRTCClientPresence *This,RTC_OFFER_WATCHER_MODE *penMode);", "IRTCClientPresence_put_OfferWatcherMode_Proxy": "HRESULT WINAPI IRTCClientPresence_put_OfferWatcherMode_Proxy(IRTCClientPresence *This,RTC_OFFER_WATCHER_MODE enMode);", "IRTCClientPresence_get_PrivacyMode_Proxy": "HRESULT WINAPI IRTCClientPresence_get_PrivacyMode_Proxy(IRTCClientPresence *This,RTC_PRIVACY_MODE *penMode);", "IRTCClientPresence_put_PrivacyMode_Proxy": "HRESULT WINAPI IRTCClientPresence_put_PrivacyMode_Proxy(IRTCClientPresence *This,RTC_PRIVACY_MODE enMode);", "IRTCClientPresence2_EnablePresenceEx_Proxy": "HRESULT WINAPI IRTCClientPresence2_EnablePresenceEx_Proxy(IRTCClientPresence2 *This,IRTCProfile *pProfile,VARIANT varStorage,__LONG32 lFlags);", "IRTCClientPresence2_DisablePresence_Proxy": "HRESULT WINAPI IRTCClientPresence2_DisablePresence_Proxy(IRTCClientPresence2 *This);", "IRTCClientPresence2_AddGroup_Proxy": "HRESULT WINAPI IRTCClientPresence2_AddGroup_Proxy(IRTCClientPresence2 *This,BSTR bstrGroupName,BSTR bstrData,IRTCProfile *pProfile,__LONG32 lFlags,IRTCBuddyGroup **ppGroup);", "IRTCClientPresence2_RemoveGroup_Proxy": "HRESULT WINAPI IRTCClientPresence2_RemoveGroup_Proxy(IRTCClientPresence2 *This,IRTCBuddyGroup *pGroup);", "IRTCClientPresence2_EnumerateGroups_Proxy": "HRESULT WINAPI IRTCClientPresence2_EnumerateGroups_Proxy(IRTCClientPresence2 *This,IRTCEnumGroups **ppEnum);", "IRTCClientPresence2_get_Groups_Proxy": "HRESULT WINAPI IRTCClientPresence2_get_Groups_Proxy(IRTCClientPresence2 *This,IRTCCollection **ppCollection);", "IRTCClientPresence2_get_Group_Proxy": "HRESULT WINAPI IRTCClientPresence2_get_Group_Proxy(IRTCClientPresence2 *This,BSTR bstrGroupName,IRTCBuddyGroup **ppGroup);", "IRTCClientPresence2_AddWatcherEx_Proxy": "HRESULT WINAPI IRTCClientPresence2_AddWatcherEx_Proxy(IRTCClientPresence2 *This,BSTR bstrPresentityURI,BSTR bstrUserName,BSTR bstrData,RTC_WATCHER_STATE enState,VARIANT_BOOL fPersistent,RTC_ACE_SCOPE enScope,IRTCProfile *pProfile,__LONG32 lFlags,IRTCWatcher2 **ppWatcher);", "IRTCClientPresence2_get_WatcherEx_Proxy": "HRESULT WINAPI IRTCClientPresence2_get_WatcherEx_Proxy(IRTCClientPresence2 *This,RTC_WATCHER_MATCH_MODE enMode,BSTR bstrPresentityURI,IRTCWatcher2 **ppWatcher);", "IRTCClientPresence2_put_PresenceProperty_Proxy": "HRESULT WINAPI IRTCClientPresence2_put_PresenceProperty_Proxy(IRTCClientPresence2 *This,RTC_PRESENCE_PROPERTY enProperty,BSTR bstrProperty);", "IRTCClientPresence2_get_PresenceProperty_Proxy": "HRESULT WINAPI IRTCClientPresence2_get_PresenceProperty_Proxy(IRTCClientPresence2 *This,RTC_PRESENCE_PROPERTY enProperty,BSTR *pbstrProperty);", "IRTCClientPresence2_SetPresenceData_Proxy": "HRESULT WINAPI IRTCClientPresence2_SetPresenceData_Proxy(IRTCClientPresence2 *This,BSTR bstrNamespace,BSTR bstrData);", "IRTCClientPresence2_GetPresenceData_Proxy": "HRESULT WINAPI IRTCClientPresence2_GetPresenceData_Proxy(IRTCClientPresence2 *This,BSTR *pbstrNamespace,BSTR *pbstrData);", "IRTCClientPresence2_GetLocalPresenceInfo_Proxy": "HRESULT WINAPI IRTCClientPresence2_GetLocalPresenceInfo_Proxy(IRTCClientPresence2 *This,RTC_PRESENCE_STATUS *penStatus,BSTR *pbstrNotes);", "IRTCClientPresence2_AddBuddyEx_Proxy": "HRESULT WINAPI IRTCClientPresence2_AddBuddyEx_Proxy(IRTCClientPresence2 *This,BSTR bstrPresentityURI,BSTR bstrUserName,BSTR bstrData,VARIANT_BOOL fPersistent,RTC_BUDDY_SUBSCRIPTION_TYPE enSubscriptionType,IRTCProfile *pProfile,__LONG32 lFlags,IRTCBuddy2 **ppBuddy);", "IRTCClientProvisioning_CreateProfile_Proxy": "HRESULT WINAPI IRTCClientProvisioning_CreateProfile_Proxy(IRTCClientProvisioning *This,BSTR bstrProfileXML,IRTCProfile **ppProfile);", "IRTCClientProvisioning_EnableProfile_Proxy": "HRESULT WINAPI IRTCClientProvisioning_EnableProfile_Proxy(IRTCClientProvisioning *This,IRTCProfile *pProfile,__LONG32 lRegisterFlags);", "IRTCClientProvisioning_DisableProfile_Proxy": "HRESULT WINAPI IRTCClientProvisioning_DisableProfile_Proxy(IRTCClientProvisioning *This,IRTCProfile *pProfile);", "IRTCClientProvisioning_EnumerateProfiles_Proxy": "HRESULT WINAPI IRTCClientProvisioning_EnumerateProfiles_Proxy(IRTCClientProvisioning *This,IRTCEnumProfiles **ppEnum);", "IRTCClientProvisioning_get_Profiles_Proxy": "HRESULT WINAPI IRTCClientProvisioning_get_Profiles_Proxy(IRTCClientProvisioning *This,IRTCCollection **ppCollection);", "IRTCClientProvisioning_GetProfile_Proxy": "HRESULT WINAPI IRTCClientProvisioning_GetProfile_Proxy(IRTCClientProvisioning *This,BSTR bstrUserAccount,BSTR bstrUserPassword,BSTR bstrUserURI,BSTR bstrServer,__LONG32 lTransport,LONG_PTR lCookie);", "IRTCClientProvisioning_get_SessionCapabilities_Proxy": "HRESULT WINAPI IRTCClientProvisioning_get_SessionCapabilities_Proxy(IRTCClientProvisioning *This,__LONG32 *plSupportedSessions);", "IRTCClientProvisioning2_EnableProfileEx_Proxy": "HRESULT WINAPI IRTCClientProvisioning2_EnableProfileEx_Proxy(IRTCClientProvisioning2 *This,IRTCProfile *pProfile,__LONG32 lRegisterFlags,__LONG32 lRoamingFlags);", "IRTCProfile_get_Key_Proxy": "HRESULT WINAPI IRTCProfile_get_Key_Proxy(IRTCProfile *This,BSTR *pbstrKey);", "IRTCProfile_get_Name_Proxy": "HRESULT WINAPI IRTCProfile_get_Name_Proxy(IRTCProfile *This,BSTR *pbstrName);", "IRTCProfile_get_XML_Proxy": "HRESULT WINAPI IRTCProfile_get_XML_Proxy(IRTCProfile *This,BSTR *pbstrXML);", "IRTCProfile_get_ProviderName_Proxy": "HRESULT WINAPI IRTCProfile_get_ProviderName_Proxy(IRTCProfile *This,BSTR *pbstrName);", "IRTCProfile_get_ProviderURI_Proxy": "HRESULT WINAPI IRTCProfile_get_ProviderURI_Proxy(IRTCProfile *This,RTC_PROVIDER_URI enURI,BSTR *pbstrURI);", "IRTCProfile_get_ProviderData_Proxy": "HRESULT WINAPI IRTCProfile_get_ProviderData_Proxy(IRTCProfile *This,BSTR *pbstrData);", "IRTCProfile_get_ClientName_Proxy": "HRESULT WINAPI IRTCProfile_get_ClientName_Proxy(IRTCProfile *This,BSTR *pbstrName);", "IRTCProfile_get_ClientBanner_Proxy": "HRESULT WINAPI IRTCProfile_get_ClientBanner_Proxy(IRTCProfile *This,VARIANT_BOOL *pfBanner);", "IRTCProfile_get_ClientMinVer_Proxy": "HRESULT WINAPI IRTCProfile_get_ClientMinVer_Proxy(IRTCProfile *This,BSTR *pbstrMinVer);", "IRTCProfile_get_ClientCurVer_Proxy": "HRESULT WINAPI IRTCProfile_get_ClientCurVer_Proxy(IRTCProfile *This,BSTR *pbstrCurVer);", "IRTCProfile_get_ClientUpdateURI_Proxy": "HRESULT WINAPI IRTCProfile_get_ClientUpdateURI_Proxy(IRTCProfile *This,BSTR *pbstrUpdateURI);", "IRTCProfile_get_ClientData_Proxy": "HRESULT WINAPI IRTCProfile_get_ClientData_Proxy(IRTCProfile *This,BSTR *pbstrData);", "IRTCProfile_get_UserURI_Proxy": "HRESULT WINAPI IRTCProfile_get_UserURI_Proxy(IRTCProfile *This,BSTR *pbstrUserURI);", "IRTCProfile_get_UserName_Proxy": "HRESULT WINAPI IRTCProfile_get_UserName_Proxy(IRTCProfile *This,BSTR *pbstrUserName);", "IRTCProfile_get_UserAccount_Proxy": "HRESULT WINAPI IRTCProfile_get_UserAccount_Proxy(IRTCProfile *This,BSTR *pbstrUserAccount);", "IRTCProfile_SetCredentials_Proxy": "HRESULT WINAPI IRTCProfile_SetCredentials_Proxy(IRTCProfile *This,BSTR bstrUserURI,BSTR bstrUserAccount,BSTR bstrPassword);", "IRTCProfile_get_SessionCapabilities_Proxy": "HRESULT WINAPI IRTCProfile_get_SessionCapabilities_Proxy(IRTCProfile *This,__LONG32 *plSupportedSessions);", "IRTCProfile_get_State_Proxy": "HRESULT WINAPI IRTCProfile_get_State_Proxy(IRTCProfile *This,RTC_REGISTRATION_STATE *penState);", "IRTCProfile2_get_Realm_Proxy": "HRESULT WINAPI IRTCProfile2_get_Realm_Proxy(IRTCProfile2 *This,BSTR *pbstrRealm);", "IRTCProfile2_put_Realm_Proxy": "HRESULT WINAPI IRTCProfile2_put_Realm_Proxy(IRTCProfile2 *This,BSTR bstrRealm);", "IRTCProfile2_get_AllowedAuth_Proxy": "HRESULT WINAPI IRTCProfile2_get_AllowedAuth_Proxy(IRTCProfile2 *This,__LONG32 *plAllowedAuth);", "IRTCProfile2_put_AllowedAuth_Proxy": "HRESULT WINAPI IRTCProfile2_put_AllowedAuth_Proxy(IRTCProfile2 *This,__LONG32 lAllowedAuth);", "IRTCSession_get_Client_Proxy": "HRESULT WINAPI IRTCSession_get_Client_Proxy(IRTCSession *This,IRTCClient **ppClient);", "IRTCSession_get_State_Proxy": "HRESULT WINAPI IRTCSession_get_State_Proxy(IRTCSession *This,RTC_SESSION_STATE *penState);", "IRTCSession_get_Type_Proxy": "HRESULT WINAPI IRTCSession_get_Type_Proxy(IRTCSession *This,RTC_SESSION_TYPE *penType);", "IRTCSession_get_Profile_Proxy": "HRESULT WINAPI IRTCSession_get_Profile_Proxy(IRTCSession *This,IRTCProfile **ppProfile);", "IRTCSession_get_Participants_Proxy": "HRESULT WINAPI IRTCSession_get_Participants_Proxy(IRTCSession *This,IRTCCollection **ppCollection);", "IRTCSession_Answer_Proxy": "HRESULT WINAPI IRTCSession_Answer_Proxy(IRTCSession *This);", "IRTCSession_Terminate_Proxy": "HRESULT WINAPI IRTCSession_Terminate_Proxy(IRTCSession *This,RTC_TERMINATE_REASON enReason);", "IRTCSession_Redirect_Proxy": "HRESULT WINAPI IRTCSession_Redirect_Proxy(IRTCSession *This,RTC_SESSION_TYPE enType,BSTR bstrLocalPhoneURI,IRTCProfile *pProfile,__LONG32 lFlags);", "IRTCSession_AddParticipant_Proxy": "HRESULT WINAPI IRTCSession_AddParticipant_Proxy(IRTCSession *This,BSTR bstrAddress,BSTR bstrName,IRTCParticipant **ppParticipant);", "IRTCSession_RemoveParticipant_Proxy": "HRESULT WINAPI IRTCSession_RemoveParticipant_Proxy(IRTCSession *This,IRTCParticipant *pParticipant);", "IRTCSession_EnumerateParticipants_Proxy": "HRESULT WINAPI IRTCSession_EnumerateParticipants_Proxy(IRTCSession *This,IRTCEnumParticipants **ppEnum);", "IRTCSession_get_CanAddParticipants_Proxy": "HRESULT WINAPI IRTCSession_get_CanAddParticipants_Proxy(IRTCSession *This,VARIANT_BOOL *pfCanAdd);", "IRTCSession_get_RedirectedUserURI_Proxy": "HRESULT WINAPI IRTCSession_get_RedirectedUserURI_Proxy(IRTCSession *This,BSTR *pbstrUserURI);", "IRTCSession_get_RedirectedUserName_Proxy": "HRESULT WINAPI IRTCSession_get_RedirectedUserName_Proxy(IRTCSession *This,BSTR *pbstrUserName);", "IRTCSession_NextRedirectedUser_Proxy": "HRESULT WINAPI IRTCSession_NextRedirectedUser_Proxy(IRTCSession *This);", "IRTCSession_SendMessage_Proxy": "HRESULT WINAPI IRTCSession_SendMessage_Proxy(IRTCSession *This,BSTR bstrMessageHeader,BSTR bstrMessage,LONG_PTR lCookie);", "IRTCSession_SendMessageStatus_Proxy": "HRESULT WINAPI IRTCSession_SendMessageStatus_Proxy(IRTCSession *This,RTC_MESSAGING_USER_STATUS enUserStatus,LONG_PTR lCookie);", "IRTCSession_AddStream_Proxy": "HRESULT WINAPI IRTCSession_AddStream_Proxy(IRTCSession *This,__LONG32 lMediaType,LONG_PTR lCookie);", "IRTCSession_RemoveStream_Proxy": "HRESULT WINAPI IRTCSession_RemoveStream_Proxy(IRTCSession *This,__LONG32 lMediaType,LONG_PTR lCookie);", "IRTCSession_put_EncryptionKey_Proxy": "HRESULT WINAPI IRTCSession_put_EncryptionKey_Proxy(IRTCSession *This,__LONG32 lMediaType,BSTR EncryptionKey);", "IRTCSession2_SendInfo_Proxy": "HRESULT WINAPI IRTCSession2_SendInfo_Proxy(IRTCSession2 *This,BSTR bstrInfoHeader,BSTR bstrInfo,LONG_PTR lCookie);", "IRTCSession2_put_PreferredSecurityLevel_Proxy": "HRESULT WINAPI IRTCSession2_put_PreferredSecurityLevel_Proxy(IRTCSession2 *This,RTC_SECURITY_TYPE enSecurityType,RTC_SECURITY_LEVEL enSecurityLevel);", "IRTCSession2_get_PreferredSecurityLevel_Proxy": "HRESULT WINAPI IRTCSession2_get_PreferredSecurityLevel_Proxy(IRTCSession2 *This,RTC_SECURITY_TYPE enSecurityType,RTC_SECURITY_LEVEL *penSecurityLevel);", "IRTCSession2_IsSecurityEnabled_Proxy": "HRESULT WINAPI IRTCSession2_IsSecurityEnabled_Proxy(IRTCSession2 *This,RTC_SECURITY_TYPE enSecurityType,VARIANT_BOOL *pfSecurityEnabled);", "IRTCSession2_AnswerWithSessionDescription_Proxy": "HRESULT WINAPI IRTCSession2_AnswerWithSessionDescription_Proxy(IRTCSession2 *This,BSTR bstrContentType,BSTR bstrSessionDescription);", "IRTCSession2_ReInviteWithSessionDescription_Proxy": "HRESULT WINAPI IRTCSession2_ReInviteWithSessionDescription_Proxy(IRTCSession2 *This,BSTR bstrContentType,BSTR bstrSessionDescription,LONG_PTR lCookie);", "IRTCSessionCallControl_Hold_Proxy": "HRESULT WINAPI IRTCSessionCallControl_Hold_Proxy(IRTCSessionCallControl *This,LONG_PTR lCookie);", "IRTCSessionCallControl_UnHold_Proxy": "HRESULT WINAPI IRTCSessionCallControl_UnHold_Proxy(IRTCSessionCallControl *This,LONG_PTR lCookie);", "IRTCSessionCallControl_Forward_Proxy": "HRESULT WINAPI IRTCSessionCallControl_Forward_Proxy(IRTCSessionCallControl *This,BSTR bstrForwardToURI);", "IRTCSessionCallControl_Refer_Proxy": "HRESULT WINAPI IRTCSessionCallControl_Refer_Proxy(IRTCSessionCallControl *This,BSTR bstrReferToURI,BSTR bstrReferCookie);", "IRTCSessionCallControl_put_ReferredByURI_Proxy": "HRESULT WINAPI IRTCSessionCallControl_put_ReferredByURI_Proxy(IRTCSessionCallControl *This,BSTR bstrReferredByURI);", "IRTCSessionCallControl_get_ReferredByURI_Proxy": "HRESULT WINAPI IRTCSessionCallControl_get_ReferredByURI_Proxy(IRTCSessionCallControl *This,BSTR *pbstrReferredByURI);", "IRTCSessionCallControl_put_ReferCookie_Proxy": "HRESULT WINAPI IRTCSessionCallControl_put_ReferCookie_Proxy(IRTCSessionCallControl *This,BSTR bstrReferCookie);", "IRTCSessionCallControl_get_ReferCookie_Proxy": "HRESULT WINAPI IRTCSessionCallControl_get_ReferCookie_Proxy(IRTCSessionCallControl *This,BSTR *pbstrReferCookie);", "IRTCSessionCallControl_get_IsReferred_Proxy": "HRESULT WINAPI IRTCSessionCallControl_get_IsReferred_Proxy(IRTCSessionCallControl *This,VARIANT_BOOL *pfIsReferred);", "IRTCParticipant_get_UserURI_Proxy": "HRESULT WINAPI IRTCParticipant_get_UserURI_Proxy(IRTCParticipant *This,BSTR *pbstrUserURI);", "IRTCParticipant_get_Name_Proxy": "HRESULT WINAPI IRTCParticipant_get_Name_Proxy(IRTCParticipant *This,BSTR *pbstrName);", "IRTCParticipant_get_Removable_Proxy": "HRESULT WINAPI IRTCParticipant_get_Removable_Proxy(IRTCParticipant *This,VARIANT_BOOL *pfRemovable);", "IRTCParticipant_get_State_Proxy": "HRESULT WINAPI IRTCParticipant_get_State_Proxy(IRTCParticipant *This,RTC_PARTICIPANT_STATE *penState);", "IRTCParticipant_get_Session_Proxy": "HRESULT WINAPI IRTCParticipant_get_Session_Proxy(IRTCParticipant *This,IRTCSession **ppSession);", "IRTCRoamingEvent_get_EventType_Proxy": "HRESULT WINAPI IRTCRoamingEvent_get_EventType_Proxy(IRTCRoamingEvent *This,RTC_ROAMING_EVENT_TYPE *pEventType);", "IRTCRoamingEvent_get_Profile_Proxy": "HRESULT WINAPI IRTCRoamingEvent_get_Profile_Proxy(IRTCRoamingEvent *This,IRTCProfile2 **ppProfile);", "IRTCRoamingEvent_get_StatusCode_Proxy": "HRESULT WINAPI IRTCRoamingEvent_get_StatusCode_Proxy(IRTCRoamingEvent *This,__LONG32 *plStatusCode);", "IRTCRoamingEvent_get_StatusText_Proxy": "HRESULT WINAPI IRTCRoamingEvent_get_StatusText_Proxy(IRTCRoamingEvent *This,BSTR *pbstrStatusText);", "IRTCProfileEvent_get_Profile_Proxy": "HRESULT WINAPI IRTCProfileEvent_get_Profile_Proxy(IRTCProfileEvent *This,IRTCProfile **ppProfile);", "IRTCProfileEvent_get_Cookie_Proxy": "HRESULT WINAPI IRTCProfileEvent_get_Cookie_Proxy(IRTCProfileEvent *This,LONG_PTR *plCookie);", "IRTCProfileEvent_get_StatusCode_Proxy": "HRESULT WINAPI IRTCProfileEvent_get_StatusCode_Proxy(IRTCProfileEvent *This,__LONG32 *plStatusCode);", "IRTCProfileEvent2_get_EventType_Proxy": "HRESULT WINAPI IRTCProfileEvent2_get_EventType_Proxy(IRTCProfileEvent2 *This,RTC_PROFILE_EVENT_TYPE *pEventType);", "IRTCClientEvent_get_EventType_Proxy": "HRESULT WINAPI IRTCClientEvent_get_EventType_Proxy(IRTCClientEvent *This,RTC_CLIENT_EVENT_TYPE *penEventType);", "IRTCClientEvent_get_Client_Proxy": "HRESULT WINAPI IRTCClientEvent_get_Client_Proxy(IRTCClientEvent *This,IRTCClient **ppClient);", "IRTCRegistrationStateChangeEvent_get_Profile_Proxy": "HRESULT WINAPI IRTCRegistrationStateChangeEvent_get_Profile_Proxy(IRTCRegistrationStateChangeEvent *This,IRTCProfile **ppProfile);", "IRTCRegistrationStateChangeEvent_get_State_Proxy": "HRESULT WINAPI IRTCRegistrationStateChangeEvent_get_State_Proxy(IRTCRegistrationStateChangeEvent *This,RTC_REGISTRATION_STATE *penState);", "IRTCRegistrationStateChangeEvent_get_StatusCode_Proxy": "HRESULT WINAPI IRTCRegistrationStateChangeEvent_get_StatusCode_Proxy(IRTCRegistrationStateChangeEvent *This,__LONG32 *plStatusCode);", "IRTCRegistrationStateChangeEvent_get_StatusText_Proxy": "HRESULT WINAPI IRTCRegistrationStateChangeEvent_get_StatusText_Proxy(IRTCRegistrationStateChangeEvent *This,BSTR *pbstrStatusText);", "IRTCSessionStateChangeEvent_get_Session_Proxy": "HRESULT WINAPI IRTCSessionStateChangeEvent_get_Session_Proxy(IRTCSessionStateChangeEvent *This,IRTCSession **ppSession);", "IRTCSessionStateChangeEvent_get_State_Proxy": "HRESULT WINAPI IRTCSessionStateChangeEvent_get_State_Proxy(IRTCSessionStateChangeEvent *This,RTC_SESSION_STATE *penState);", "IRTCSessionStateChangeEvent_get_StatusCode_Proxy": "HRESULT WINAPI IRTCSessionStateChangeEvent_get_StatusCode_Proxy(IRTCSessionStateChangeEvent *This,__LONG32 *plStatusCode);", "IRTCSessionStateChangeEvent_get_StatusText_Proxy": "HRESULT WINAPI IRTCSessionStateChangeEvent_get_StatusText_Proxy(IRTCSessionStateChangeEvent *This,BSTR *pbstrStatusText);", "IRTCSessionStateChangeEvent2_get_MediaTypes_Proxy": "HRESULT WINAPI IRTCSessionStateChangeEvent2_get_MediaTypes_Proxy(IRTCSessionStateChangeEvent2 *This,__LONG32 *pMediaTypes);", "IRTCSessionStateChangeEvent2_get_RemotePreferredSecurityLevel_Proxy": "HRESULT WINAPI IRTCSessionStateChangeEvent2_get_RemotePreferredSecurityLevel_Proxy(IRTCSessionStateChangeEvent2 *This,RTC_SECURITY_TYPE enSecurityType,RTC_SECURITY_LEVEL *penSecurityLevel);", "IRTCSessionStateChangeEvent2_get_IsForked_Proxy": "HRESULT WINAPI IRTCSessionStateChangeEvent2_get_IsForked_Proxy(IRTCSessionStateChangeEvent2 *This,VARIANT_BOOL *pfIsForked);", "IRTCSessionStateChangeEvent2_GetRemoteSessionDescription_Proxy": "HRESULT WINAPI IRTCSessionStateChangeEvent2_GetRemoteSessionDescription_Proxy(IRTCSessionStateChangeEvent2 *This,BSTR *pbstrContentType,BSTR *pbstrSessionDescription);", "IRTCSessionOperationCompleteEvent_get_Session_Proxy": "HRESULT WINAPI IRTCSessionOperationCompleteEvent_get_Session_Proxy(IRTCSessionOperationCompleteEvent *This,IRTCSession **ppSession);", "IRTCSessionOperationCompleteEvent_get_Cookie_Proxy": "HRESULT WINAPI IRTCSessionOperationCompleteEvent_get_Cookie_Proxy(IRTCSessionOperationCompleteEvent *This,LONG_PTR *plCookie);", "IRTCSessionOperationCompleteEvent_get_StatusCode_Proxy": "HRESULT WINAPI IRTCSessionOperationCompleteEvent_get_StatusCode_Proxy(IRTCSessionOperationCompleteEvent *This,__LONG32 *plStatusCode);", "IRTCSessionOperationCompleteEvent_get_StatusText_Proxy": "HRESULT WINAPI IRTCSessionOperationCompleteEvent_get_StatusText_Proxy(IRTCSessionOperationCompleteEvent *This,BSTR *pbstrStatusText);", "IRTCSessionOperationCompleteEvent2_get_Participant_Proxy": "HRESULT WINAPI IRTCSessionOperationCompleteEvent2_get_Participant_Proxy(IRTCSessionOperationCompleteEvent2 *This,IRTCParticipant **ppParticipant);", "IRTCSessionOperationCompleteEvent2_GetRemoteSessionDescription_Proxy": "HRESULT WINAPI IRTCSessionOperationCompleteEvent2_GetRemoteSessionDescription_Proxy(IRTCSessionOperationCompleteEvent2 *This,BSTR *pbstrContentType,BSTR *pbstrSessionDescription);", "IRTCParticipantStateChangeEvent_get_Participant_Proxy": "HRESULT WINAPI IRTCParticipantStateChangeEvent_get_Participant_Proxy(IRTCParticipantStateChangeEvent *This,IRTCParticipant **ppParticipant);", "IRTCParticipantStateChangeEvent_get_State_Proxy": "HRESULT WINAPI IRTCParticipantStateChangeEvent_get_State_Proxy(IRTCParticipantStateChangeEvent *This,RTC_PARTICIPANT_STATE *penState);", "IRTCParticipantStateChangeEvent_get_StatusCode_Proxy": "HRESULT WINAPI IRTCParticipantStateChangeEvent_get_StatusCode_Proxy(IRTCParticipantStateChangeEvent *This,__LONG32 *plStatusCode);", "IRTCMediaEvent_get_MediaType_Proxy": "HRESULT WINAPI IRTCMediaEvent_get_MediaType_Proxy(IRTCMediaEvent *This,__LONG32 *pMediaType);", "IRTCMediaEvent_get_EventType_Proxy": "HRESULT WINAPI IRTCMediaEvent_get_EventType_Proxy(IRTCMediaEvent *This,RTC_MEDIA_EVENT_TYPE *penEventType);", "IRTCMediaEvent_get_EventReason_Proxy": "HRESULT WINAPI IRTCMediaEvent_get_EventReason_Proxy(IRTCMediaEvent *This,RTC_MEDIA_EVENT_REASON *penEventReason);", "IRTCIntensityEvent_get_Level_Proxy": "HRESULT WINAPI IRTCIntensityEvent_get_Level_Proxy(IRTCIntensityEvent *This,__LONG32 *plLevel);", "IRTCIntensityEvent_get_Min_Proxy": "HRESULT WINAPI IRTCIntensityEvent_get_Min_Proxy(IRTCIntensityEvent *This,__LONG32 *plMin);", "IRTCIntensityEvent_get_Max_Proxy": "HRESULT WINAPI IRTCIntensityEvent_get_Max_Proxy(IRTCIntensityEvent *This,__LONG32 *plMax);", "IRTCIntensityEvent_get_Direction_Proxy": "HRESULT WINAPI IRTCIntensityEvent_get_Direction_Proxy(IRTCIntensityEvent *This,RTC_AUDIO_DEVICE *penDirection);", "IRTCMessagingEvent_get_Session_Proxy": "HRESULT WINAPI IRTCMessagingEvent_get_Session_Proxy(IRTCMessagingEvent *This,IRTCSession **ppSession);", "IRTCMessagingEvent_get_Participant_Proxy": "HRESULT WINAPI IRTCMessagingEvent_get_Participant_Proxy(IRTCMessagingEvent *This,IRTCParticipant **ppParticipant);", "IRTCMessagingEvent_get_EventType_Proxy": "HRESULT WINAPI IRTCMessagingEvent_get_EventType_Proxy(IRTCMessagingEvent *This,RTC_MESSAGING_EVENT_TYPE *penEventType);", "IRTCMessagingEvent_get_Message_Proxy": "HRESULT WINAPI IRTCMessagingEvent_get_Message_Proxy(IRTCMessagingEvent *This,BSTR *pbstrMessage);", "IRTCMessagingEvent_get_MessageHeader_Proxy": "HRESULT WINAPI IRTCMessagingEvent_get_MessageHeader_Proxy(IRTCMessagingEvent *This,BSTR *pbstrMessageHeader);", "IRTCMessagingEvent_get_UserStatus_Proxy": "HRESULT WINAPI IRTCMessagingEvent_get_UserStatus_Proxy(IRTCMessagingEvent *This,RTC_MESSAGING_USER_STATUS *penUserStatus);", "IRTCBuddyEvent_get_Buddy_Proxy": "HRESULT WINAPI IRTCBuddyEvent_get_Buddy_Proxy(IRTCBuddyEvent *This,IRTCBuddy **ppBuddy);", "IRTCBuddyEvent2_get_EventType_Proxy": "HRESULT WINAPI IRTCBuddyEvent2_get_EventType_Proxy(IRTCBuddyEvent2 *This,RTC_BUDDY_EVENT_TYPE *pEventType);", "IRTCBuddyEvent2_get_StatusCode_Proxy": "HRESULT WINAPI IRTCBuddyEvent2_get_StatusCode_Proxy(IRTCBuddyEvent2 *This,__LONG32 *plStatusCode);", "IRTCBuddyEvent2_get_StatusText_Proxy": "HRESULT WINAPI IRTCBuddyEvent2_get_StatusText_Proxy(IRTCBuddyEvent2 *This,BSTR *pbstrStatusText);", "IRTCWatcherEvent_get_Watcher_Proxy": "HRESULT WINAPI IRTCWatcherEvent_get_Watcher_Proxy(IRTCWatcherEvent *This,IRTCWatcher **ppWatcher);", "IRTCWatcherEvent2_get_EventType_Proxy": "HRESULT WINAPI IRTCWatcherEvent2_get_EventType_Proxy(IRTCWatcherEvent2 *This,RTC_WATCHER_EVENT_TYPE *pEventType);", "IRTCWatcherEvent2_get_StatusCode_Proxy": "HRESULT WINAPI IRTCWatcherEvent2_get_StatusCode_Proxy(IRTCWatcherEvent2 *This,__LONG32 *plStatusCode);", "IRTCBuddyGroupEvent_get_EventType_Proxy": "HRESULT WINAPI IRTCBuddyGroupEvent_get_EventType_Proxy(IRTCBuddyGroupEvent *This,RTC_GROUP_EVENT_TYPE *pEventType);", "IRTCBuddyGroupEvent_get_Group_Proxy": "HRESULT WINAPI IRTCBuddyGroupEvent_get_Group_Proxy(IRTCBuddyGroupEvent *This,IRTCBuddyGroup **ppGroup);", "IRTCBuddyGroupEvent_get_Buddy_Proxy": "HRESULT WINAPI IRTCBuddyGroupEvent_get_Buddy_Proxy(IRTCBuddyGroupEvent *This,IRTCBuddy2 **ppBuddy);", "IRTCBuddyGroupEvent_get_StatusCode_Proxy": "HRESULT WINAPI IRTCBuddyGroupEvent_get_StatusCode_Proxy(IRTCBuddyGroupEvent *This,__LONG32 *plStatusCode);", "IRTCInfoEvent_get_Session_Proxy": "HRESULT WINAPI IRTCInfoEvent_get_Session_Proxy(IRTCInfoEvent *This,IRTCSession2 **ppSession);", "IRTCInfoEvent_get_Participant_Proxy": "HRESULT WINAPI IRTCInfoEvent_get_Participant_Proxy(IRTCInfoEvent *This,IRTCParticipant **ppParticipant);", "IRTCInfoEvent_get_Info_Proxy": "HRESULT WINAPI IRTCInfoEvent_get_Info_Proxy(IRTCInfoEvent *This,BSTR *pbstrInfo);", "IRTCInfoEvent_get_InfoHeader_Proxy": "HRESULT WINAPI IRTCInfoEvent_get_InfoHeader_Proxy(IRTCInfoEvent *This,BSTR *pbstrInfoHeader);", "IRTCMediaRequestEvent_get_Session_Proxy": "HRESULT WINAPI IRTCMediaRequestEvent_get_Session_Proxy(IRTCMediaRequestEvent *This,IRTCSession2 **ppSession);", "IRTCMediaRequestEvent_get_ProposedMedia_Proxy": "HRESULT WINAPI IRTCMediaRequestEvent_get_ProposedMedia_Proxy(IRTCMediaRequestEvent *This,__LONG32 *plMediaTypes);", "IRTCMediaRequestEvent_get_CurrentMedia_Proxy": "HRESULT WINAPI IRTCMediaRequestEvent_get_CurrentMedia_Proxy(IRTCMediaRequestEvent *This,__LONG32 *plMediaTypes);", "IRTCMediaRequestEvent_Accept_Proxy": "HRESULT WINAPI IRTCMediaRequestEvent_Accept_Proxy(IRTCMediaRequestEvent *This,__LONG32 lMediaTypes);", "IRTCMediaRequestEvent_get_RemotePreferredSecurityLevel_Proxy": "HRESULT WINAPI IRTCMediaRequestEvent_get_RemotePreferredSecurityLevel_Proxy(IRTCMediaRequestEvent *This,RTC_SECURITY_TYPE enSecurityType,RTC_SECURITY_LEVEL *penSecurityLevel);", "IRTCMediaRequestEvent_Reject_Proxy": "HRESULT WINAPI IRTCMediaRequestEvent_Reject_Proxy(IRTCMediaRequestEvent *This);", "IRTCMediaRequestEvent_get_State_Proxy": "HRESULT WINAPI IRTCMediaRequestEvent_get_State_Proxy(IRTCMediaRequestEvent *This,RTC_REINVITE_STATE *pState);", "IRTCReInviteEvent_get_Session_Proxy": "HRESULT WINAPI IRTCReInviteEvent_get_Session_Proxy(IRTCReInviteEvent *This,IRTCSession2 **ppSession2);", "IRTCReInviteEvent_Accept_Proxy": "HRESULT WINAPI IRTCReInviteEvent_Accept_Proxy(IRTCReInviteEvent *This,BSTR bstrContentType,BSTR bstrSessionDescription);", "IRTCReInviteEvent_Reject_Proxy": "HRESULT WINAPI IRTCReInviteEvent_Reject_Proxy(IRTCReInviteEvent *This);", "IRTCReInviteEvent_get_State_Proxy": "HRESULT WINAPI IRTCReInviteEvent_get_State_Proxy(IRTCReInviteEvent *This,RTC_REINVITE_STATE *pState);", "IRTCReInviteEvent_GetRemoteSessionDescription_Proxy": "HRESULT WINAPI IRTCReInviteEvent_GetRemoteSessionDescription_Proxy(IRTCReInviteEvent *This,BSTR *pbstrContentType,BSTR *pbstrSessionDescription);", "IRTCPresencePropertyEvent_get_StatusCode_Proxy": "HRESULT WINAPI IRTCPresencePropertyEvent_get_StatusCode_Proxy(IRTCPresencePropertyEvent *This,__LONG32 *plStatusCode);", "IRTCPresencePropertyEvent_get_StatusText_Proxy": "HRESULT WINAPI IRTCPresencePropertyEvent_get_StatusText_Proxy(IRTCPresencePropertyEvent *This,BSTR *pbstrStatusText);", "IRTCPresencePropertyEvent_get_PresenceProperty_Proxy": "HRESULT WINAPI IRTCPresencePropertyEvent_get_PresenceProperty_Proxy(IRTCPresencePropertyEvent *This,RTC_PRESENCE_PROPERTY *penPresProp);", "IRTCPresencePropertyEvent_get_Value_Proxy": "HRESULT WINAPI IRTCPresencePropertyEvent_get_Value_Proxy(IRTCPresencePropertyEvent *This,BSTR *pbstrValue);", "IRTCPresenceDataEvent_get_StatusCode_Proxy": "HRESULT WINAPI IRTCPresenceDataEvent_get_StatusCode_Proxy(IRTCPresenceDataEvent *This,__LONG32 *plStatusCode);", "IRTCPresenceDataEvent_get_StatusText_Proxy": "HRESULT WINAPI IRTCPresenceDataEvent_get_StatusText_Proxy(IRTCPresenceDataEvent *This,BSTR *pbstrStatusText);", "IRTCPresenceDataEvent_GetPresenceData_Proxy": "HRESULT WINAPI IRTCPresenceDataEvent_GetPresenceData_Proxy(IRTCPresenceDataEvent *This,BSTR *pbstrNamespace,BSTR *pbstrData);", "IRTCPresenceStatusEvent_get_StatusCode_Proxy": "HRESULT WINAPI IRTCPresenceStatusEvent_get_StatusCode_Proxy(IRTCPresenceStatusEvent *This,__LONG32 *plStatusCode);", "IRTCPresenceStatusEvent_get_StatusText_Proxy": "HRESULT WINAPI IRTCPresenceStatusEvent_get_StatusText_Proxy(IRTCPresenceStatusEvent *This,BSTR *pbstrStatusText);", "IRTCPresenceStatusEvent_GetLocalPresenceInfo_Proxy": "HRESULT WINAPI IRTCPresenceStatusEvent_GetLocalPresenceInfo_Proxy(IRTCPresenceStatusEvent *This,RTC_PRESENCE_STATUS *penStatus,BSTR *pbstrNotes);", "IRTCCollection_get_Count_Proxy": "HRESULT WINAPI IRTCCollection_get_Count_Proxy(IRTCCollection *This,__LONG32 *lCount);", "IRTCCollection_get_Item_Proxy": "HRESULT WINAPI IRTCCollection_get_Item_Proxy(IRTCCollection *This,__LONG32 Index,VARIANT *pVariant);", "IRTCCollection_get__NewEnum_Proxy": "HRESULT WINAPI IRTCCollection_get__NewEnum_Proxy(IRTCCollection *This,IUnknown **ppNewEnum);", "IRTCEnumParticipants_Next_Proxy": "HRESULT WINAPI IRTCEnumParticipants_Next_Proxy(IRTCEnumParticipants *This,ULONG celt,IRTCParticipant **ppElements,ULONG *pceltFetched);", "IRTCEnumParticipants_Reset_Proxy": "HRESULT WINAPI IRTCEnumParticipants_Reset_Proxy(IRTCEnumParticipants *This);", "IRTCEnumParticipants_Skip_Proxy": "HRESULT WINAPI IRTCEnumParticipants_Skip_Proxy(IRTCEnumParticipants *This,ULONG celt);", "IRTCEnumParticipants_Clone_Proxy": "HRESULT WINAPI IRTCEnumParticipants_Clone_Proxy(IRTCEnumParticipants *This,IRTCEnumParticipants **ppEnum);", "IRTCEnumProfiles_Next_Proxy": "HRESULT WINAPI IRTCEnumProfiles_Next_Proxy(IRTCEnumProfiles *This,ULONG celt,IRTCProfile **ppElements,ULONG *pceltFetched);", "IRTCEnumProfiles_Reset_Proxy": "HRESULT WINAPI IRTCEnumProfiles_Reset_Proxy(IRTCEnumProfiles *This);", "IRTCEnumProfiles_Skip_Proxy": "HRESULT WINAPI IRTCEnumProfiles_Skip_Proxy(IRTCEnumProfiles *This,ULONG celt);", "IRTCEnumProfiles_Clone_Proxy": "HRESULT WINAPI IRTCEnumProfiles_Clone_Proxy(IRTCEnumProfiles *This,IRTCEnumProfiles **ppEnum);", "IRTCEnumBuddies_Next_Proxy": "HRESULT WINAPI IRTCEnumBuddies_Next_Proxy(IRTCEnumBuddies *This,ULONG celt,IRTCBuddy **ppElements,ULONG *pceltFetched);", "IRTCEnumBuddies_Reset_Proxy": "HRESULT WINAPI IRTCEnumBuddies_Reset_Proxy(IRTCEnumBuddies *This);", "IRTCEnumBuddies_Skip_Proxy": "HRESULT WINAPI IRTCEnumBuddies_Skip_Proxy(IRTCEnumBuddies *This,ULONG celt);", "IRTCEnumBuddies_Clone_Proxy": "HRESULT WINAPI IRTCEnumBuddies_Clone_Proxy(IRTCEnumBuddies *This,IRTCEnumBuddies **ppEnum);", "IRTCEnumWatchers_Next_Proxy": "HRESULT WINAPI IRTCEnumWatchers_Next_Proxy(IRTCEnumWatchers *This,ULONG celt,IRTCWatcher **ppElements,ULONG *pceltFetched);", "IRTCEnumWatchers_Reset_Proxy": "HRESULT WINAPI IRTCEnumWatchers_Reset_Proxy(IRTCEnumWatchers *This);", "IRTCEnumWatchers_Skip_Proxy": "HRESULT WINAPI IRTCEnumWatchers_Skip_Proxy(IRTCEnumWatchers *This,ULONG celt);", "IRTCEnumWatchers_Clone_Proxy": "HRESULT WINAPI IRTCEnumWatchers_Clone_Proxy(IRTCEnumWatchers *This,IRTCEnumWatchers **ppEnum);", "IRTCEnumGroups_Next_Proxy": "HRESULT WINAPI IRTCEnumGroups_Next_Proxy(IRTCEnumGroups *This,ULONG celt,IRTCBuddyGroup **ppElements,ULONG *pceltFetched);", "IRTCEnumGroups_Reset_Proxy": "HRESULT WINAPI IRTCEnumGroups_Reset_Proxy(IRTCEnumGroups *This);", "IRTCEnumGroups_Skip_Proxy": "HRESULT WINAPI IRTCEnumGroups_Skip_Proxy(IRTCEnumGroups *This,ULONG celt);", "IRTCEnumGroups_Clone_Proxy": "HRESULT WINAPI IRTCEnumGroups_Clone_Proxy(IRTCEnumGroups *This,IRTCEnumGroups **ppEnum);", "IRTCPresenceContact_get_PresentityURI_Proxy": "HRESULT WINAPI IRTCPresenceContact_get_PresentityURI_Proxy(IRTCPresenceContact *This,BSTR *pbstrPresentityURI);", "IRTCPresenceContact_put_PresentityURI_Proxy": "HRESULT WINAPI IRTCPresenceContact_put_PresentityURI_Proxy(IRTCPresenceContact *This,BSTR bstrPresentityURI);", "IRTCPresenceContact_get_Name_Proxy": "HRESULT WINAPI IRTCPresenceContact_get_Name_Proxy(IRTCPresenceContact *This,BSTR *pbstrName);", "IRTCPresenceContact_put_Name_Proxy": "HRESULT WINAPI IRTCPresenceContact_put_Name_Proxy(IRTCPresenceContact *This,BSTR bstrName);", "IRTCPresenceContact_get_Data_Proxy": "HRESULT WINAPI IRTCPresenceContact_get_Data_Proxy(IRTCPresenceContact *This,BSTR *pbstrData);", "IRTCPresenceContact_put_Data_Proxy": "HRESULT WINAPI IRTCPresenceContact_put_Data_Proxy(IRTCPresenceContact *This,BSTR bstrData);", "IRTCPresenceContact_get_Persistent_Proxy": "HRESULT WINAPI IRTCPresenceContact_get_Persistent_Proxy(IRTCPresenceContact *This,VARIANT_BOOL *pfPersistent);", "IRTCPresenceContact_put_Persistent_Proxy": "HRESULT WINAPI IRTCPresenceContact_put_Persistent_Proxy(IRTCPresenceContact *This,VARIANT_BOOL fPersistent);", "IRTCBuddy_get_Status_Proxy": "HRESULT WINAPI IRTCBuddy_get_Status_Proxy(IRTCBuddy *This,RTC_PRESENCE_STATUS *penStatus);", "IRTCBuddy_get_Notes_Proxy": "HRESULT WINAPI IRTCBuddy_get_Notes_Proxy(IRTCBuddy *This,BSTR *pbstrNotes);", "IRTCBuddy2_get_Profile_Proxy": "HRESULT WINAPI IRTCBuddy2_get_Profile_Proxy(IRTCBuddy2 *This,IRTCProfile2 **ppProfile);", "IRTCBuddy2_Refresh_Proxy": "HRESULT WINAPI IRTCBuddy2_Refresh_Proxy(IRTCBuddy2 *This);", "IRTCBuddy2_EnumerateGroups_Proxy": "HRESULT WINAPI IRTCBuddy2_EnumerateGroups_Proxy(IRTCBuddy2 *This,IRTCEnumGroups **ppEnum);", "IRTCBuddy2_get_Groups_Proxy": "HRESULT WINAPI IRTCBuddy2_get_Groups_Proxy(IRTCBuddy2 *This,IRTCCollection **ppCollection);", "IRTCBuddy2_get_PresenceProperty_Proxy": "HRESULT WINAPI IRTCBuddy2_get_PresenceProperty_Proxy(IRTCBuddy2 *This,RTC_PRESENCE_PROPERTY enProperty,BSTR *pbstrProperty);", "IRTCBuddy2_EnumeratePresenceDevices_Proxy": "HRESULT WINAPI IRTCBuddy2_EnumeratePresenceDevices_Proxy(IRTCBuddy2 *This,IRTCEnumPresenceDevices **ppEnumDevices);", "IRTCBuddy2_get_PresenceDevices_Proxy": "HRESULT WINAPI IRTCBuddy2_get_PresenceDevices_Proxy(IRTCBuddy2 *This,IRTCCollection **ppDevicesCollection);", "IRTCBuddy2_get_SubscriptionType_Proxy": "HRESULT WINAPI IRTCBuddy2_get_SubscriptionType_Proxy(IRTCBuddy2 *This,RTC_BUDDY_SUBSCRIPTION_TYPE *penSubscriptionType);", "IRTCWatcher_get_State_Proxy": "HRESULT WINAPI IRTCWatcher_get_State_Proxy(IRTCWatcher *This,RTC_WATCHER_STATE *penState);", "IRTCWatcher_put_State_Proxy": "HRESULT WINAPI IRTCWatcher_put_State_Proxy(IRTCWatcher *This,RTC_WATCHER_STATE enState);", "IRTCWatcher2_get_Profile_Proxy": "HRESULT WINAPI IRTCWatcher2_get_Profile_Proxy(IRTCWatcher2 *This,IRTCProfile2 **ppProfile);", "IRTCWatcher2_get_Scope_Proxy": "HRESULT WINAPI IRTCWatcher2_get_Scope_Proxy(IRTCWatcher2 *This,RTC_ACE_SCOPE *penScope);", "IRTCBuddyGroup_get_Name_Proxy": "HRESULT WINAPI IRTCBuddyGroup_get_Name_Proxy(IRTCBuddyGroup *This,BSTR *pbstrGroupName);", "IRTCBuddyGroup_put_Name_Proxy": "HRESULT WINAPI IRTCBuddyGroup_put_Name_Proxy(IRTCBuddyGroup *This,BSTR bstrGroupName);", "IRTCBuddyGroup_AddBuddy_Proxy": "HRESULT WINAPI IRTCBuddyGroup_AddBuddy_Proxy(IRTCBuddyGroup *This,IRTCBuddy *pBuddy);", "IRTCBuddyGroup_RemoveBuddy_Proxy": "HRESULT WINAPI IRTCBuddyGroup_RemoveBuddy_Proxy(IRTCBuddyGroup *This,IRTCBuddy *pBuddy);", "IRTCBuddyGroup_EnumerateBuddies_Proxy": "HRESULT WINAPI IRTCBuddyGroup_EnumerateBuddies_Proxy(IRTCBuddyGroup *This,IRTCEnumBuddies **ppEnum);", "IRTCBuddyGroup_get_Buddies_Proxy": "HRESULT WINAPI IRTCBuddyGroup_get_Buddies_Proxy(IRTCBuddyGroup *This,IRTCCollection **ppCollection);", "IRTCBuddyGroup_get_Data_Proxy": "HRESULT WINAPI IRTCBuddyGroup_get_Data_Proxy(IRTCBuddyGroup *This,BSTR *pbstrData);", "IRTCBuddyGroup_put_Data_Proxy": "HRESULT WINAPI IRTCBuddyGroup_put_Data_Proxy(IRTCBuddyGroup *This,BSTR bstrData);", "IRTCBuddyGroup_get_Profile_Proxy": "HRESULT WINAPI IRTCBuddyGroup_get_Profile_Proxy(IRTCBuddyGroup *This,IRTCProfile2 **ppProfile);", "IRTCEventNotification_Event_Proxy": "HRESULT WINAPI IRTCEventNotification_Event_Proxy(IRTCEventNotification *This,RTC_EVENT RTCEvent,IDispatch *pEvent);", "IRTCPortManager_GetMapping_Proxy": "HRESULT WINAPI IRTCPortManager_GetMapping_Proxy(IRTCPortManager *This,BSTR bstrRemoteAddress,RTC_PORT_TYPE enPortType,BSTR *pbstrInternalLocalAddress,__LONG32 *plInternalLocalPort,BSTR *pbstrExternalLocalAddress,__LONG32 *plExternalLocalPort);", "IRTCPortManager_UpdateRemoteAddress_Proxy": "HRESULT WINAPI IRTCPortManager_UpdateRemoteAddress_Proxy(IRTCPortManager *This,BSTR bstrRemoteAddress,BSTR bstrInternalLocalAddress,__LONG32 lInternalLocalPort,BSTR bstrExternalLocalAddress,__LONG32 lExternalLocalPort);", "IRTCPortManager_ReleaseMapping_Proxy": "HRESULT WINAPI IRTCPortManager_ReleaseMapping_Proxy(IRTCPortManager *This,BSTR bstrInternalLocalAddress,__LONG32 lInternalLocalPort,BSTR bstrExternalLocalAddress,__LONG32 lExternalLocalAddress);", "IRTCSessionPortManagement_SetPortManager_Proxy": "HRESULT WINAPI IRTCSessionPortManagement_SetPortManager_Proxy(IRTCSessionPortManagement *This,IRTCPortManager *pPortManager);", "IRTCClientPortManagement_StartListenAddressAndPort_Proxy": "HRESULT WINAPI IRTCClientPortManagement_StartListenAddressAndPort_Proxy(IRTCClientPortManagement *This,BSTR bstrInternalLocalAddress,__LONG32 lInternalLocalPort);", "IRTCClientPortManagement_StopListenAddressAndPort_Proxy": "HRESULT WINAPI IRTCClientPortManagement_StopListenAddressAndPort_Proxy(IRTCClientPortManagement *This,BSTR bstrInternalLocalAddress,__LONG32 lInternalLocalPort);", "IRTCClientPortManagement_GetPortRange_Proxy": "HRESULT WINAPI IRTCClientPortManagement_GetPortRange_Proxy(IRTCClientPortManagement *This,RTC_PORT_TYPE enPortType,__LONG32 *plMinValue,__LONG32 *plMaxValue);", "IRTCUserSearch_CreateQuery_Proxy": "HRESULT WINAPI IRTCUserSearch_CreateQuery_Proxy(IRTCUserSearch *This,IRTCUserSearchQuery **ppQuery);", "IRTCUserSearch_ExecuteSearch_Proxy": "HRESULT WINAPI IRTCUserSearch_ExecuteSearch_Proxy(IRTCUserSearch *This,IRTCUserSearchQuery *pQuery,IRTCProfile *pProfile,LONG_PTR lCookie);", "IRTCUserSearchQuery_put_SearchTerm_Proxy": "HRESULT WINAPI IRTCUserSearchQuery_put_SearchTerm_Proxy(IRTCUserSearchQuery *This,BSTR bstrName,BSTR bstrValue);", "IRTCUserSearchQuery_get_SearchTerm_Proxy": "HRESULT WINAPI IRTCUserSearchQuery_get_SearchTerm_Proxy(IRTCUserSearchQuery *This,BSTR bstrName,BSTR *pbstrValue);", "IRTCUserSearchQuery_get_SearchTerms_Proxy": "HRESULT WINAPI IRTCUserSearchQuery_get_SearchTerms_Proxy(IRTCUserSearchQuery *This,BSTR *pbstrNames);", "IRTCUserSearchQuery_put_SearchPreference_Proxy": "HRESULT WINAPI IRTCUserSearchQuery_put_SearchPreference_Proxy(IRTCUserSearchQuery *This,RTC_USER_SEARCH_PREFERENCE enPreference,__LONG32 lValue);", "IRTCUserSearchQuery_get_SearchPreference_Proxy": "HRESULT WINAPI IRTCUserSearchQuery_get_SearchPreference_Proxy(IRTCUserSearchQuery *This,RTC_USER_SEARCH_PREFERENCE enPreference,__LONG32 *plValue);", "IRTCUserSearchQuery_put_SearchDomain_Proxy": "HRESULT WINAPI IRTCUserSearchQuery_put_SearchDomain_Proxy(IRTCUserSearchQuery *This,BSTR bstrDomain);", "IRTCUserSearchQuery_get_SearchDomain_Proxy": "HRESULT WINAPI IRTCUserSearchQuery_get_SearchDomain_Proxy(IRTCUserSearchQuery *This,BSTR *pbstrDomain);", "IRTCUserSearchResult_get_Value_Proxy": "HRESULT WINAPI IRTCUserSearchResult_get_Value_Proxy(IRTCUserSearchResult *This,RTC_USER_SEARCH_COLUMN enColumn,BSTR *pbstrValue);", "IRTCEnumUserSearchResults_Next_Proxy": "HRESULT WINAPI IRTCEnumUserSearchResults_Next_Proxy(IRTCEnumUserSearchResults *This,ULONG celt,IRTCUserSearchResult **ppElements,ULONG *pceltFetched);", "IRTCEnumUserSearchResults_Reset_Proxy": "HRESULT WINAPI IRTCEnumUserSearchResults_Reset_Proxy(IRTCEnumUserSearchResults *This);", "IRTCEnumUserSearchResults_Skip_Proxy": "HRESULT WINAPI IRTCEnumUserSearchResults_Skip_Proxy(IRTCEnumUserSearchResults *This,ULONG celt);", "IRTCEnumUserSearchResults_Clone_Proxy": "HRESULT WINAPI IRTCEnumUserSearchResults_Clone_Proxy(IRTCEnumUserSearchResults *This,IRTCEnumUserSearchResults **ppEnum);", "IRTCUserSearchResultsEvent_EnumerateResults_Proxy": "HRESULT WINAPI IRTCUserSearchResultsEvent_EnumerateResults_Proxy(IRTCUserSearchResultsEvent *This,IRTCEnumUserSearchResults **ppEnum);", "IRTCUserSearchResultsEvent_get_Results_Proxy": "HRESULT WINAPI IRTCUserSearchResultsEvent_get_Results_Proxy(IRTCUserSearchResultsEvent *This,IRTCCollection **ppCollection);", "IRTCUserSearchResultsEvent_get_Profile_Proxy": "HRESULT WINAPI IRTCUserSearchResultsEvent_get_Profile_Proxy(IRTCUserSearchResultsEvent *This,IRTCProfile2 **ppProfile);", "IRTCUserSearchResultsEvent_get_Query_Proxy": "HRESULT WINAPI IRTCUserSearchResultsEvent_get_Query_Proxy(IRTCUserSearchResultsEvent *This,IRTCUserSearchQuery **ppQuery);", "IRTCUserSearchResultsEvent_get_Cookie_Proxy": "HRESULT WINAPI IRTCUserSearchResultsEvent_get_Cookie_Proxy(IRTCUserSearchResultsEvent *This,LONG_PTR *plCookie);", "IRTCUserSearchResultsEvent_get_StatusCode_Proxy": "HRESULT WINAPI IRTCUserSearchResultsEvent_get_StatusCode_Proxy(IRTCUserSearchResultsEvent *This,__LONG32 *plStatusCode);", "IRTCUserSearchResultsEvent_get_MoreAvailable_Proxy": "HRESULT WINAPI IRTCUserSearchResultsEvent_get_MoreAvailable_Proxy(IRTCUserSearchResultsEvent *This,VARIANT_BOOL *pfMoreAvailable);", "IRTCSessionReferStatusEvent_get_Session_Proxy": "HRESULT WINAPI IRTCSessionReferStatusEvent_get_Session_Proxy(IRTCSessionReferStatusEvent *This,IRTCSession2 **ppSession);", "IRTCSessionReferStatusEvent_get_ReferStatus_Proxy": "HRESULT WINAPI IRTCSessionReferStatusEvent_get_ReferStatus_Proxy(IRTCSessionReferStatusEvent *This,RTC_SESSION_REFER_STATUS *penReferStatus);", "IRTCSessionReferStatusEvent_get_StatusCode_Proxy": "HRESULT WINAPI IRTCSessionReferStatusEvent_get_StatusCode_Proxy(IRTCSessionReferStatusEvent *This,__LONG32 *plStatusCode);", "IRTCSessionReferStatusEvent_get_StatusText_Proxy": "HRESULT WINAPI IRTCSessionReferStatusEvent_get_StatusText_Proxy(IRTCSessionReferStatusEvent *This,BSTR *pbstrStatusText);", "IRTCSessionReferredEvent_get_Session_Proxy": "HRESULT WINAPI IRTCSessionReferredEvent_get_Session_Proxy(IRTCSessionReferredEvent *This,IRTCSession2 **ppSession);", "IRTCSessionReferredEvent_get_ReferredByURI_Proxy": "HRESULT WINAPI IRTCSessionReferredEvent_get_ReferredByURI_Proxy(IRTCSessionReferredEvent *This,BSTR *pbstrReferredByURI);", "IRTCSessionReferredEvent_get_ReferToURI_Proxy": "HRESULT WINAPI IRTCSessionReferredEvent_get_ReferToURI_Proxy(IRTCSessionReferredEvent *This,BSTR *pbstrReferoURI);", "IRTCSessionReferredEvent_get_ReferCookie_Proxy": "HRESULT WINAPI IRTCSessionReferredEvent_get_ReferCookie_Proxy(IRTCSessionReferredEvent *This,BSTR *pbstrReferCookie);", "IRTCSessionReferredEvent_Accept_Proxy": "HRESULT WINAPI IRTCSessionReferredEvent_Accept_Proxy(IRTCSessionReferredEvent *This);", "IRTCSessionReferredEvent_Reject_Proxy": "HRESULT WINAPI IRTCSessionReferredEvent_Reject_Proxy(IRTCSessionReferredEvent *This);", "IRTCSessionReferredEvent_SetReferredSessionState_Proxy": "HRESULT WINAPI IRTCSessionReferredEvent_SetReferredSessionState_Proxy(IRTCSessionReferredEvent *This,RTC_SESSION_STATE enState);", "IRTCSessionDescriptionManager_EvaluateSessionDescription_Proxy": "HRESULT WINAPI IRTCSessionDescriptionManager_EvaluateSessionDescription_Proxy(IRTCSessionDescriptionManager *This,BSTR bstrContentType,BSTR bstrSessionDescription,VARIANT_BOOL *pfApplicationSession);", "IRTCEnumPresenceDevices_Next_Proxy": "HRESULT WINAPI IRTCEnumPresenceDevices_Next_Proxy(IRTCEnumPresenceDevices *This,ULONG celt,IRTCPresenceDevice **ppElements,ULONG *pceltFetched);", "IRTCEnumPresenceDevices_Reset_Proxy": "HRESULT WINAPI IRTCEnumPresenceDevices_Reset_Proxy(IRTCEnumPresenceDevices *This);", "IRTCEnumPresenceDevices_Skip_Proxy": "HRESULT WINAPI IRTCEnumPresenceDevices_Skip_Proxy(IRTCEnumPresenceDevices *This,ULONG celt);", "IRTCEnumPresenceDevices_Clone_Proxy": "HRESULT WINAPI IRTCEnumPresenceDevices_Clone_Proxy(IRTCEnumPresenceDevices *This,IRTCEnumPresenceDevices **ppEnum);", "IRTCPresenceDevice_get_Status_Proxy": "HRESULT WINAPI IRTCPresenceDevice_get_Status_Proxy(IRTCPresenceDevice *This,RTC_PRESENCE_STATUS *penStatus);", "IRTCPresenceDevice_get_Notes_Proxy": "HRESULT WINAPI IRTCPresenceDevice_get_Notes_Proxy(IRTCPresenceDevice *This,BSTR *pbstrNotes);", "IRTCPresenceDevice_get_PresenceProperty_Proxy": "HRESULT WINAPI IRTCPresenceDevice_get_PresenceProperty_Proxy(IRTCPresenceDevice *This,RTC_PRESENCE_PROPERTY enProperty,BSTR *pbstrProperty);", "IRTCPresenceDevice_GetPresenceData_Proxy": "HRESULT WINAPI IRTCPresenceDevice_GetPresenceData_Proxy(IRTCPresenceDevice *This,BSTR *pbstrNamespace,BSTR *pbstrData);", "DirectPlayEnumerateA": "extern HRESULT WINAPI DirectPlayEnumerateA( LPDPENUMDPCALLBACKA, LPVOID );", "DirectPlayEnumerateW": "extern HRESULT WINAPI DirectPlayEnumerateW( LPDPENUMDPCALLBACKW, LPVOID );", "DirectPlayCreate": "extern HRESULT WINAPI DirectPlayCreate( LPGUID lpGUID, LPDIRECTPLAY *lplpDP, IUnknown *pUnk );", "IcmpCreateFile": "HANDLE WINAPI IcmpCreateFile(VOID);", "Icmp6CreateFile": "HANDLE WINAPI Icmp6CreateFile(VOID);", "IcmpCloseHandle": "WINBOOL WINAPI IcmpCloseHandle(HANDLE IcmpHandle);", "IcmpSendEcho": "DWORD WINAPI IcmpSendEcho(HANDLE IcmpHandle,IPAddr DestinationAddress,LPVOID RequestData,WORD RequestSize,PIP_OPTION_INFORMATION RequestOptions,LPVOID ReplyBuffer,DWORD ReplySize,DWORD Timeout);", "IcmpSendEcho2": "DWORD WINAPI IcmpSendEcho2(HANDLE IcmpHandle,HANDLE Event,FARPROC ApcRoutine,PVOID ApcContext,IPAddr DestinationAddress,LPVOID RequestData,WORD RequestSize,PIP_OPTION_INFORMATION RequestOptions,LPVOID ReplyBuffer,DWORD ReplySize,DWORD Timeout);", "IcmpSendEcho2Ex": "DWORD WINAPI IcmpSendEcho2Ex(HANDLE IcmpHandle,HANDLE Event,FARPROC ApcRoutine,PVOID ApcContext,IPAddr SourceAddress,IPAddr DestinationAddress,LPVOID RequestData,WORD RequestSize,PIP_OPTION_INFORMATION RequestOptions,LPVOID ReplyBuffer,DWORD ReplySize,DWORD Timeout);", "Icmp6SendEcho2": "DWORD WINAPI Icmp6SendEcho2(HANDLE IcmpHandle,HANDLE Event,FARPROC ApcRoutine,PVOID ApcContext,struct sockaddr_in6 *SourceAddress,struct sockaddr_in6 *DestinationAddress,LPVOID RequestData,WORD RequestSize,PIP_OPTION_INFORMATION RequestOptions,LPVOID ReplyBuffer,DWORD ReplySize,DWORD Timeout);", "IcmpParseReplies": "DWORD WINAPI IcmpParseReplies(LPVOID ReplyBuffer,DWORD ReplySize);", "Icmp6ParseReplies": "DWORD WINAPI Icmp6ParseReplies(LPVOID ReplyBuffer,DWORD ReplySize);", "GetNodeClusterState": "DWORD WINAPI GetNodeClusterState(LPCWSTR lpszNodeName,DWORD *pdwClusterState);", "OpenCluster": "HCLUSTER WINAPI OpenCluster(LPCWSTR lpszClusterName);", "CloseCluster": "WINBOOL WINAPI CloseCluster(HCLUSTER hCluster);", "SetClusterName": "DWORD WINAPI SetClusterName(HCLUSTER hCluster,LPCWSTR lpszNewClusterName);", "GetClusterInformation": "DWORD WINAPI GetClusterInformation(HCLUSTER hCluster,LPWSTR lpszClusterName,LPDWORD lpcchClusterName,LPCLUSTERVERSIONINFO lpClusterInfo);", "GetClusterQuorumResource": "DWORD WINAPI GetClusterQuorumResource(HCLUSTER hCluster,LPWSTR lpszResourceName,LPDWORD lpcchResourceName,LPWSTR lpszDeviceName,LPDWORD lpcchDeviceName,LPDWORD lpdwMaxQuorumLogSize);", "SetClusterQuorumResource": "DWORD WINAPI SetClusterQuorumResource(HRESOURCE hResource,LPCWSTR lpszDeviceName,DWORD dwMaxQuoLogSize);", "BackupClusterDatabase": "DWORD WINAPI BackupClusterDatabase(HCLUSTER hCluster,LPCWSTR lpszPathName);", "RestoreClusterDatabase": "DWORD WINAPI RestoreClusterDatabase(LPCWSTR lpszPathName,WINBOOL bForce,LPCWSTR lpszQuorumDriveLetter);", "SetClusterNetworkPriorityOrder": "DWORD WINAPI SetClusterNetworkPriorityOrder(HCLUSTER hCluster,DWORD NetworkCount,HNETWORK NetworkList[]);", "SetClusterServiceAccountPassword": "DWORD WINAPI SetClusterServiceAccountPassword(LPCWSTR lpszClusterName,LPCWSTR lpszNewPassword,DWORD dwFlags,PCLUSTER_SET_PASSWORD_STATUS lpReturnStatusBuffer,LPDWORD lpcbReturnStatusBufferSize);", "ClusterControl": "DWORD WINAPI ClusterControl(HCLUSTER hCluster,HNODE hHostNode,DWORD dwControlCode,LPVOID lpInBuffer,DWORD nInBufferSize,LPVOID lpOutBuffer,DWORD nOutBufferSize,LPDWORD lpBytesReturned);", "CreateClusterNotifyPort": "HCHANGE WINAPI CreateClusterNotifyPort(HCHANGE hChange,HCLUSTER hCluster,DWORD dwFilter,DWORD_PTR dwNotifyKey);", "RegisterClusterNotify": "DWORD WINAPI RegisterClusterNotify(HCHANGE hChange,DWORD dwFilterType,HANDLE hObject,DWORD_PTR dwNotifyKey);", "GetClusterNotify": "DWORD WINAPI GetClusterNotify(HCHANGE hChange,DWORD_PTR *lpdwNotifyKey,LPDWORD lpdwFilterType,LPWSTR lpszName,LPDWORD lpcchName,DWORD dwMilliseconds);", "CloseClusterNotifyPort": "WINBOOL WINAPI CloseClusterNotifyPort(HCHANGE hChange);", "ClusterOpenEnum": "HCLUSENUM WINAPI ClusterOpenEnum(HCLUSTER hCluster,DWORD dwType);", "ClusterGetEnumCount": "DWORD WINAPI ClusterGetEnumCount(HCLUSENUM hEnum);", "ClusterEnum": "DWORD WINAPI ClusterEnum(HCLUSENUM hEnum,DWORD dwIndex,LPDWORD lpdwType,LPWSTR lpszName,LPDWORD lpcchName);", "ClusterCloseEnum": "DWORD WINAPI ClusterCloseEnum(HCLUSENUM hEnum);", "OpenClusterNode": "HNODE WINAPI OpenClusterNode(HCLUSTER hCluster,LPCWSTR lpszNodeName);", "CloseClusterNode": "WINBOOL WINAPI CloseClusterNode(HNODE hNode);", "GetClusterNodeState": "CLUSTER_NODE_STATE WINAPI GetClusterNodeState(HNODE hNode);", "GetClusterNodeId": "DWORD WINAPI GetClusterNodeId(HNODE hNode,LPWSTR lpszNodeId,LPDWORD lpcchName);", "GetClusterFromNode": "HCLUSTER WINAPI GetClusterFromNode(HNODE hNode);", "PauseClusterNode": "DWORD WINAPI PauseClusterNode(HNODE hNode);", "ResumeClusterNode": "DWORD WINAPI ResumeClusterNode(HNODE hNode);", "EvictClusterNode": "DWORD WINAPI EvictClusterNode(HNODE hNode);", "ClusterNodeOpenEnum": "HNODEENUM WINAPI ClusterNodeOpenEnum(HNODE hNode,DWORD dwType);", "ClusterNodeGetEnumCount": "DWORD WINAPI ClusterNodeGetEnumCount(HNODEENUM hNodeEnum);", "ClusterNodeCloseEnum": "DWORD WINAPI ClusterNodeCloseEnum(HNODEENUM hNodeEnum);", "ClusterNodeEnum": "DWORD WINAPI ClusterNodeEnum(HNODEENUM hNodeEnum,DWORD dwIndex,LPDWORD lpdwType,LPWSTR lpszName,LPDWORD lpcchName);", "EvictClusterNodeEx": "DWORD WINAPI EvictClusterNodeEx(HNODE hNode,DWORD dwTimeOut,HRESULT *phrCleanupStatus);", "GetClusterResourceTypeKey": "HKEY WINAPI GetClusterResourceTypeKey(HCLUSTER hCluster,LPCWSTR lpszTypeName,REGSAM samDesired);", "CreateClusterGroup": "HGROUP WINAPI CreateClusterGroup(HCLUSTER hCluster,LPCWSTR lpszGroupName);", "OpenClusterGroup": "HGROUP WINAPI OpenClusterGroup(HCLUSTER hCluster,LPCWSTR lpszGroupName);", "CloseClusterGroup": "WINBOOL WINAPI CloseClusterGroup(HGROUP hGroup);", "GetClusterFromGroup": "HCLUSTER WINAPI GetClusterFromGroup(HGROUP hGroup);", "GetClusterGroupState": "CLUSTER_GROUP_STATE WINAPI GetClusterGroupState(HGROUP hGroup,LPWSTR lpszNodeName,LPDWORD lpcchNodeName);", "SetClusterGroupName": "DWORD WINAPI SetClusterGroupName(HGROUP hGroup,LPCWSTR lpszGroupName);", "SetClusterGroupNodeList": "DWORD WINAPI SetClusterGroupNodeList(HGROUP hGroup,DWORD NodeCount,HNODE NodeList[]);", "OnlineClusterGroup": "DWORD WINAPI OnlineClusterGroup(HGROUP hGroup,HNODE hDestinationNode);", "MoveClusterGroup": "DWORD WINAPI MoveClusterGroup(HGROUP hGroup,HNODE hDestinationNode);", "OfflineClusterGroup": "DWORD WINAPI OfflineClusterGroup(HGROUP hGroup);", "DeleteClusterGroup": "DWORD WINAPI DeleteClusterGroup(HGROUP hGroup);", "ClusterGroupOpenEnum": "HGROUPENUM WINAPI ClusterGroupOpenEnum(HGROUP hGroup,DWORD dwType);", "ClusterGroupGetEnumCount": "DWORD WINAPI ClusterGroupGetEnumCount(HGROUPENUM hGroupEnum);", "ClusterGroupEnum": "DWORD WINAPI ClusterGroupEnum(HGROUPENUM hGroupEnum,DWORD dwIndex,LPDWORD lpdwType,LPWSTR lpszResourceName,LPDWORD lpcchName);", "ClusterGroupCloseEnum": "DWORD WINAPI ClusterGroupCloseEnum(HGROUPENUM hGroupEnum);", "CreateClusterResource": "HRESOURCE WINAPI CreateClusterResource(HGROUP hGroup,LPCWSTR lpszResourceName,LPCWSTR lpszResourceType,DWORD dwFlags);", "OpenClusterResource": "HRESOURCE WINAPI OpenClusterResource(HCLUSTER hCluster,LPCWSTR lpszResourceName);", "CloseClusterResource": "WINBOOL WINAPI CloseClusterResource(HRESOURCE hResource);", "GetClusterFromResource": "HCLUSTER WINAPI GetClusterFromResource(HRESOURCE hResource);", "DeleteClusterResource": "DWORD WINAPI DeleteClusterResource(HRESOURCE hResource);", "GetClusterResourceState": "CLUSTER_RESOURCE_STATE WINAPI GetClusterResourceState(HRESOURCE hResource,LPWSTR lpszNodeName,LPDWORD lpcchNodeName,LPWSTR lpszGroupName,LPDWORD lpcchGroupName);", "SetClusterResourceName": "DWORD WINAPI SetClusterResourceName(HRESOURCE hResource,LPCWSTR lpszResourceName);", "FailClusterResource": "DWORD WINAPI FailClusterResource(HRESOURCE hResource);", "OnlineClusterResource": "DWORD WINAPI OnlineClusterResource(HRESOURCE hResource);", "OfflineClusterResource": "DWORD WINAPI OfflineClusterResource(HRESOURCE hResource);", "ChangeClusterResourceGroup": "DWORD WINAPI ChangeClusterResourceGroup(HRESOURCE hResource,HGROUP hGroup);", "AddClusterResourceNode": "DWORD WINAPI AddClusterResourceNode(HRESOURCE hResource,HNODE hNode);", "RemoveClusterResourceNode": "DWORD WINAPI RemoveClusterResourceNode(HRESOURCE hResource,HNODE hNode);", "AddClusterResourceDependency": "DWORD WINAPI AddClusterResourceDependency(HRESOURCE hResource,HRESOURCE hDependsOn);", "RemoveClusterResourceDependency": "DWORD WINAPI RemoveClusterResourceDependency(HRESOURCE hResource,HRESOURCE hDependsOn);", "CanResourceBeDependent": "WINBOOL WINAPI CanResourceBeDependent(HRESOURCE hResource,HRESOURCE hResourceDependent);", "ClusterResourceControl": "DWORD WINAPI ClusterResourceControl(HRESOURCE hResource,HNODE hHostNode,DWORD dwControlCode,LPVOID lpInBuffer,DWORD cbInBufferSize,LPVOID lpOutBuffer,DWORD cbOutBufferSize,LPDWORD lpBytesReturned);", "ClusterResourceTypeControl": "DWORD WINAPI ClusterResourceTypeControl(HCLUSTER hCluster,LPCWSTR lpszResourceTypeName,HNODE hHostNode,DWORD dwControlCode,LPVOID lpInBuffer,DWORD nInBufferSize,LPVOID lpOutBuffer,DWORD nOutBufferSize,LPDWORD lpBytesReturned);", "ClusterGroupControl": "DWORD WINAPI ClusterGroupControl(HGROUP hGroup,HNODE hHostNode,DWORD dwControlCode,LPVOID lpInBuffer,DWORD nInBufferSize,LPVOID lpOutBuffer,DWORD nOutBufferSize,LPDWORD lpBytesReturned);", "ClusterNodeControl": "DWORD WINAPI ClusterNodeControl(HNODE hNode,HNODE hHostNode,DWORD dwControlCode,LPVOID lpInBuffer,DWORD nInBufferSize,LPVOID lpOutBuffer,DWORD nOutBufferSize,LPDWORD lpBytesReturned);", "GetClusterResourceNetworkName": "WINBOOL WINAPI GetClusterResourceNetworkName(HRESOURCE hResource,LPWSTR lpBuffer,LPDWORD nSize);", "ClusterResourceOpenEnum": "HRESENUM WINAPI ClusterResourceOpenEnum(HRESOURCE hResource,DWORD dwType);", "ClusterResourceGetEnumCount": "DWORD WINAPI ClusterResourceGetEnumCount(HRESENUM hResEnum);", "ClusterResourceEnum": "DWORD WINAPI ClusterResourceEnum(HRESENUM hResEnum,DWORD dwIndex,LPDWORD lpdwType,LPWSTR lpszName,LPDWORD lpcchName);", "ClusterResourceCloseEnum": "DWORD WINAPI ClusterResourceCloseEnum(HRESENUM hResEnum);", "CreateClusterResourceType": "DWORD WINAPI CreateClusterResourceType(HCLUSTER hCluster,LPCWSTR lpszResourceTypeName,LPCWSTR lpszDisplayName,LPCWSTR lpszResourceTypeDll,DWORD dwLooksAlivePollInterval,DWORD dwIsAlivePollInterval);", "DeleteClusterResourceType": "DWORD WINAPI DeleteClusterResourceType(HCLUSTER hCluster,LPCWSTR lpszResourceTypeName);", "ClusterResourceTypeOpenEnum": "HRESTYPEENUM WINAPI ClusterResourceTypeOpenEnum(HCLUSTER hCluster,LPCWSTR lpszResourceTypeName,DWORD dwType);", "ClusterResourceTypeGetEnumCount": "DWORD WINAPI ClusterResourceTypeGetEnumCount(HRESTYPEENUM hResTypeEnum);", "ClusterResourceTypeEnum": "DWORD WINAPI ClusterResourceTypeEnum(HRESTYPEENUM hResTypeEnum,DWORD dwIndex,LPDWORD lpdwType,LPWSTR lpszName,LPDWORD lpcchName);", "ClusterResourceTypeCloseEnum": "DWORD WINAPI ClusterResourceTypeCloseEnum(HRESTYPEENUM hResTypeEnum);", "OpenClusterNetwork": "HNETWORK WINAPI OpenClusterNetwork(HCLUSTER hCluster,LPCWSTR lpszNetworkName);", "CloseClusterNetwork": "WINBOOL WINAPI CloseClusterNetwork(HNETWORK hNetwork);", "GetClusterFromNetwork": "HCLUSTER WINAPI GetClusterFromNetwork(HNETWORK hNetwork);", "ClusterNetworkOpenEnum": "HNETWORKENUM WINAPI ClusterNetworkOpenEnum(HNETWORK hNetwork,DWORD dwType);", "ClusterNetworkGetEnumCount": "DWORD WINAPI ClusterNetworkGetEnumCount(HNETWORKENUM hNetworkEnum);", "ClusterNetworkEnum": "DWORD WINAPI ClusterNetworkEnum(HNETWORKENUM hNetworkEnum,DWORD dwIndex,LPDWORD lpdwType,LPWSTR lpszName,LPDWORD lpcchName);", "ClusterNetworkCloseEnum": "DWORD WINAPI ClusterNetworkCloseEnum(HNETWORKENUM hNetworkEnum);", "GetClusterNetworkState": "CLUSTER_NETWORK_STATE WINAPI GetClusterNetworkState(HNETWORK hNetwork);", "SetClusterNetworkName": "DWORD WINAPI SetClusterNetworkName(HNETWORK hNetwork,LPCWSTR lpszName);", "GetClusterNetworkId": "DWORD WINAPI GetClusterNetworkId(HNETWORK hNetwork,LPWSTR lpszNetworkId,LPDWORD lpcchName);", "ClusterNetworkControl": "DWORD WINAPI ClusterNetworkControl(HNETWORK hNetwork,HNODE hHostNode,DWORD dwControlCode,LPVOID lpInBuffer,DWORD nInBufferSize,LPVOID lpOutBuffer,DWORD nOutBufferSize,LPDWORD lpBytesReturned);", "OpenClusterNetInterface": "HNETINTERFACE WINAPI OpenClusterNetInterface(HCLUSTER hCluster,LPCWSTR lpszInterfaceName);", "GetClusterNetInterface": "DWORD WINAPI GetClusterNetInterface(HCLUSTER hCluster,LPCWSTR lpszNodeName,LPCWSTR lpszNetworkName,LPWSTR lpszInterfaceName,LPDWORD lpcchInterfaceName);", "CloseClusterNetInterface": "WINBOOL WINAPI CloseClusterNetInterface(HNETINTERFACE hNetInterface);", "GetClusterFromNetInterface": "HCLUSTER WINAPI GetClusterFromNetInterface(HNETINTERFACE hNetInterface);", "GetClusterNetInterfaceState": "CLUSTER_NETINTERFACE_STATE WINAPI GetClusterNetInterfaceState(HNETINTERFACE hNetInterface);", "ClusterNetInterfaceControl": "DWORD WINAPI ClusterNetInterfaceControl(HNETINTERFACE hNetInterface,HNODE hHostNode,DWORD dwControlCode,LPVOID lpInBuffer,DWORD nInBufferSize,LPVOID lpOutBuffer,DWORD nOutBufferSize,LPDWORD lpBytesReturned);", "GetClusterKey": "HKEY WINAPI GetClusterKey(HCLUSTER hCluster,REGSAM samDesired);", "GetClusterGroupKey": "HKEY WINAPI GetClusterGroupKey(HGROUP hGroup,REGSAM samDesired);", "GetClusterResourceKey": "HKEY WINAPI GetClusterResourceKey(HRESOURCE hResource,REGSAM samDesired);", "GetClusterNodeKey": "HKEY WINAPI GetClusterNodeKey(HNODE hNode,REGSAM samDesired);", "GetClusterNetworkKey": "HKEY WINAPI GetClusterNetworkKey(HNETWORK hNetwork,REGSAM samDesired);", "GetClusterNetInterfaceKey": "HKEY WINAPI GetClusterNetInterfaceKey(HNETINTERFACE hNetInterface,REGSAM samDesired);", "ClusterRegCreateKey": "LONG WINAPI ClusterRegCreateKey(HKEY hKey,LPCWSTR lpszSubKey,DWORD dwOptions,REGSAM samDesired,LPSECURITY_ATTRIBUTES lpSecurityAttributes,PHKEY phkResult,LPDWORD lpdwDisposition);", "ClusterRegOpenKey": "LONG WINAPI ClusterRegOpenKey(HKEY hKey,LPCWSTR lpszSubKey,REGSAM samDesired,PHKEY phkResult);", "ClusterRegDeleteKey": "LONG WINAPI ClusterRegDeleteKey(HKEY hKey,LPCWSTR lpszSubKey);", "ClusterRegCloseKey": "LONG WINAPI ClusterRegCloseKey(HKEY hKey);", "ClusterRegEnumKey": "LONG WINAPI ClusterRegEnumKey(HKEY hKey,DWORD dwIndex,LPWSTR lpszName,LPDWORD lpcchName,PFILETIME lpftLastWriteTime);", "ClusterRegSetValue": "DWORD WINAPI ClusterRegSetValue(HKEY hKey,LPCWSTR lpszValueName,DWORD dwType,CONST BYTE *lpData,DWORD cbData);", "ClusterRegDeleteValue": "DWORD WINAPI ClusterRegDeleteValue(HKEY hKey,LPCWSTR lpszValueName);", "ClusterRegQueryValue": "LONG WINAPI ClusterRegQueryValue(HKEY hKey,LPCWSTR lpszValueName,LPDWORD lpdwValueType,LPBYTE lpData,LPDWORD lpcbData);", "ClusterRegEnumValue": "DWORD WINAPI ClusterRegEnumValue(HKEY hKey,DWORD dwIndex,LPWSTR lpszValueName,LPDWORD lpcchValueName,LPDWORD lpdwType,LPBYTE lpData,LPDWORD lpcbData);", "ClusterRegQueryInfoKey": "LONG WINAPI ClusterRegQueryInfoKey(HKEY hKey,LPDWORD lpcSubKeys,LPDWORD lpcchMaxSubKeyLen,LPDWORD lpcValues,LPDWORD lpcchMaxValueNameLen,LPDWORD lpcbMaxValueLen,LPDWORD lpcbSecurityDescriptor,PFILETIME lpftLastWriteTime);", "ClusterRegGetKeySecurity": "LONG WINAPI ClusterRegGetKeySecurity (HKEY hKey,SECURITY_INFORMATION RequestedInformation,PSECURITY_DESCRIPTOR pSecurityDescriptor,LPDWORD lpcbSecurityDescriptor);", "ClusterRegSetKeySecurity": "LONG WINAPI ClusterRegSetKeySecurity(HKEY hKey,SECURITY_INFORMATION SecurityInformation,PSECURITY_DESCRIPTOR pSecurityDescriptor);", "ClusterRegBatchCloseNotification": "LONG WINAPI ClusterRegBatchCloseNotification(", "ClusterRegBatchReadCommand": "LONG WINAPI ClusterRegBatchReadCommand(", "ClusterRegCloseBatch": "LONG WINAPI ClusterRegCloseBatch(", "ClusterRegCloseBatchNotifyPort": "LONG WINAPI ClusterRegCloseBatchNotifyPort(", "ClusterRegCreateBatch": "LONG WINAPI ClusterRegCreateBatch(", "ClusterRegCreateBatchNotifyPort": "LONG WINAPI ClusterRegCreateBatchNotifyPort(", "ClusterRegGetBatchNotification": "LONG WINAPI ClusterRegGetBatchNotification(", "AddClusterNode": "HNODE WINAPI AddClusterNode(", "DestroyCluster": "DWORD WINAPI DestroyCluster(", "CreateCluster": "HCLUSTER WINAPI CreateCluster(", "GetClusterResourceDependencyExpression": "DWORD WINAPI GetClusterResourceDependencyExpression(", "SetClusterResourceDependencyExpression": "DWORD WINAPI SetClusterResourceDependencyExpression(", "IWbemPathKeyList_GetCount_Proxy": "HRESULT WINAPI IWbemPathKeyList_GetCount_Proxy(IWbemPathKeyList *This,ULONG *puKeyCount);", "IWbemPathKeyList_SetKey_Proxy": "HRESULT WINAPI IWbemPathKeyList_SetKey_Proxy(IWbemPathKeyList *This,LPCWSTR wszName,ULONG uFlags,ULONG uCimType,LPVOID pKeyVal);", "IWbemPathKeyList_SetKey2_Proxy": "HRESULT WINAPI IWbemPathKeyList_SetKey2_Proxy(IWbemPathKeyList *This,LPCWSTR wszName,ULONG uFlags,ULONG uCimType,VARIANT *pKeyVal);", "IWbemPathKeyList_GetKey_Proxy": "HRESULT WINAPI IWbemPathKeyList_GetKey_Proxy(IWbemPathKeyList *This,ULONG uKeyIx,ULONG uFlags,ULONG *puNameBufSize,LPWSTR pszKeyName,ULONG *puKeyValBufSize,LPVOID pKeyVal,ULONG *puApparentCimType);", "IWbemPathKeyList_GetKey2_Proxy": "HRESULT WINAPI IWbemPathKeyList_GetKey2_Proxy(IWbemPathKeyList *This,ULONG uKeyIx,ULONG uFlags,ULONG *puNameBufSize,LPWSTR pszKeyName,VARIANT *pKeyValue,ULONG *puApparentCimType);", "IWbemPathKeyList_RemoveKey_Proxy": "HRESULT WINAPI IWbemPathKeyList_RemoveKey_Proxy(IWbemPathKeyList *This,LPCWSTR wszName,ULONG uFlags);", "IWbemPathKeyList_RemoveAllKeys_Proxy": "HRESULT WINAPI IWbemPathKeyList_RemoveAllKeys_Proxy(IWbemPathKeyList *This,ULONG uFlags);", "IWbemPathKeyList_MakeSingleton_Proxy": "HRESULT WINAPI IWbemPathKeyList_MakeSingleton_Proxy(IWbemPathKeyList *This,boolean bSet);", "IWbemPathKeyList_GetInfo_Proxy": "HRESULT WINAPI IWbemPathKeyList_GetInfo_Proxy(IWbemPathKeyList *This,ULONG uRequestedInfo,ULONGLONG *puResponse);", "IWbemPathKeyList_GetText_Proxy": "HRESULT WINAPI IWbemPathKeyList_GetText_Proxy(IWbemPathKeyList *This,__LONG32 lFlags,ULONG *puBuffLength,LPWSTR pszText);", "IWbemPath_SetText_Proxy": "HRESULT WINAPI IWbemPath_SetText_Proxy(IWbemPath *This,ULONG uMode,LPCWSTR pszPath);", "IWbemPath_GetText_Proxy": "HRESULT WINAPI IWbemPath_GetText_Proxy(IWbemPath *This,__LONG32 lFlags,ULONG *puBuffLength,LPWSTR pszText);", "IWbemPath_GetInfo_Proxy": "HRESULT WINAPI IWbemPath_GetInfo_Proxy(IWbemPath *This,ULONG uRequestedInfo,ULONGLONG *puResponse);", "IWbemPath_SetServer_Proxy": "HRESULT WINAPI IWbemPath_SetServer_Proxy(IWbemPath *This,LPCWSTR Name);", "IWbemPath_GetServer_Proxy": "HRESULT WINAPI IWbemPath_GetServer_Proxy(IWbemPath *This,ULONG *puNameBufLength,LPWSTR pName);", "IWbemPath_GetNamespaceCount_Proxy": "HRESULT WINAPI IWbemPath_GetNamespaceCount_Proxy(IWbemPath *This,ULONG *puCount);", "IWbemPath_SetNamespaceAt_Proxy": "HRESULT WINAPI IWbemPath_SetNamespaceAt_Proxy(IWbemPath *This,ULONG uIndex,LPCWSTR pszName);", "IWbemPath_GetNamespaceAt_Proxy": "HRESULT WINAPI IWbemPath_GetNamespaceAt_Proxy(IWbemPath *This,ULONG uIndex,ULONG *puNameBufLength,LPWSTR pName);", "IWbemPath_RemoveNamespaceAt_Proxy": "HRESULT WINAPI IWbemPath_RemoveNamespaceAt_Proxy(IWbemPath *This,ULONG uIndex);", "IWbemPath_RemoveAllNamespaces_Proxy": "HRESULT WINAPI IWbemPath_RemoveAllNamespaces_Proxy(IWbemPath *This);", "IWbemPath_GetScopeCount_Proxy": "HRESULT WINAPI IWbemPath_GetScopeCount_Proxy(IWbemPath *This,ULONG *puCount);", "IWbemPath_SetScope_Proxy": "HRESULT WINAPI IWbemPath_SetScope_Proxy(IWbemPath *This,ULONG uIndex,LPWSTR pszClass);", "IWbemPath_SetScopeFromText_Proxy": "HRESULT WINAPI IWbemPath_SetScopeFromText_Proxy(IWbemPath *This,ULONG uIndex,LPWSTR pszText);", "IWbemPath_GetScope_Proxy": "HRESULT WINAPI IWbemPath_GetScope_Proxy(IWbemPath *This,ULONG uIndex,ULONG *puClassNameBufSize,LPWSTR pszClass,IWbemPathKeyList **pKeyList);", "IWbemPath_GetScopeAsText_Proxy": "HRESULT WINAPI IWbemPath_GetScopeAsText_Proxy(IWbemPath *This,ULONG uIndex,ULONG *puTextBufSize,LPWSTR pszText);", "IWbemPath_RemoveScope_Proxy": "HRESULT WINAPI IWbemPath_RemoveScope_Proxy(IWbemPath *This,ULONG uIndex);", "IWbemPath_RemoveAllScopes_Proxy": "HRESULT WINAPI IWbemPath_RemoveAllScopes_Proxy(IWbemPath *This);", "IWbemPath_SetClassName_Proxy": "HRESULT WINAPI IWbemPath_SetClassName_Proxy(IWbemPath *This,LPCWSTR Name);", "IWbemPath_GetClassName_Proxy": "HRESULT WINAPI IWbemPath_GetClassName_Proxy(IWbemPath *This,ULONG *puBuffLength,LPWSTR pszName);", "IWbemPath_GetKeyList_Proxy": "HRESULT WINAPI IWbemPath_GetKeyList_Proxy(IWbemPath *This,IWbemPathKeyList **pOut);", "IWbemPath_CreateClassPart_Proxy": "HRESULT WINAPI IWbemPath_CreateClassPart_Proxy(IWbemPath *This,__LONG32 lFlags,LPCWSTR Name);", "IWbemPath_DeleteClassPart_Proxy": "HRESULT WINAPI IWbemPath_DeleteClassPart_Proxy(IWbemPath *This,__LONG32 lFlags);", "IWbemPath_IsRelative_Proxy": "WINBOOL WINAPI IWbemPath_IsRelative_Proxy(IWbemPath *This,LPWSTR wszMachine,LPWSTR wszNamespace);", "IWbemPath_IsRelativeOrChild_Proxy": "WINBOOL WINAPI IWbemPath_IsRelativeOrChild_Proxy(IWbemPath *This,LPWSTR wszMachine,LPWSTR wszNamespace,__LONG32 lFlags);", "IWbemPath_IsLocal_Proxy": "WINBOOL WINAPI IWbemPath_IsLocal_Proxy(IWbemPath *This,LPCWSTR wszMachine);", "IWbemPath_IsSameClassName_Proxy": "WINBOOL WINAPI IWbemPath_IsSameClassName_Proxy(IWbemPath *This,LPCWSTR wszClass);", "IWbemQuery_Empty_Proxy": "HRESULT WINAPI IWbemQuery_Empty_Proxy(IWbemQuery *This);", "IWbemQuery_SetLanguageFeatures_Proxy": "HRESULT WINAPI IWbemQuery_SetLanguageFeatures_Proxy(IWbemQuery *This,ULONG uFlags,ULONG uArraySize,ULONG *puFeatures);", "IWbemQuery_TestLanguageFeatures_Proxy": "HRESULT WINAPI IWbemQuery_TestLanguageFeatures_Proxy(IWbemQuery *This,ULONG uFlags,ULONG *uArraySize,ULONG *puFeatures);", "IWbemQuery_Parse_Proxy": "HRESULT WINAPI IWbemQuery_Parse_Proxy(IWbemQuery *This,LPCWSTR pszLang,LPCWSTR pszQuery,ULONG uFlags);", "IWbemQuery_GetAnalysis_Proxy": "HRESULT WINAPI IWbemQuery_GetAnalysis_Proxy(IWbemQuery *This,ULONG uAnalysisType,ULONG uFlags,LPVOID *pAnalysis);", "IWbemQuery_FreeMemory_Proxy": "HRESULT WINAPI IWbemQuery_FreeMemory_Proxy(IWbemQuery *This,LPVOID pMem);", "IWbemQuery_GetQueryInfo_Proxy": "HRESULT WINAPI IWbemQuery_GetQueryInfo_Proxy(IWbemQuery *This,ULONG uAnalysisType,ULONG uInfoId,ULONG uBufSize,LPVOID pDestBuf);", "ICatalog_GetCollection_Proxy": "HRESULT WINAPI ICatalog_GetCollection_Proxy(ICatalog *This,BSTR bstrCollName,IDispatch **ppCatalogCollection);", "ICatalog_Connect_Proxy": "HRESULT WINAPI ICatalog_Connect_Proxy(ICatalog *This,BSTR bstrConnectString,IDispatch **ppCatalogCollection);", "ICatalog_get_MajorVersion_Proxy": "HRESULT WINAPI ICatalog_get_MajorVersion_Proxy(ICatalog *This,__LONG32 *retval);", "ICatalog_get_MinorVersion_Proxy": "HRESULT WINAPI ICatalog_get_MinorVersion_Proxy(ICatalog *This,__LONG32 *retval);", "ICatalogObject_get_Value_Proxy": "HRESULT WINAPI ICatalogObject_get_Value_Proxy(ICatalogObject *This,BSTR bstrPropName,VARIANT *retval);", "ICatalogObject_put_Value_Proxy": "HRESULT WINAPI ICatalogObject_put_Value_Proxy(ICatalogObject *This,BSTR bstrPropName,VARIANT val);", "ICatalogObject_get_Key_Proxy": "HRESULT WINAPI ICatalogObject_get_Key_Proxy(ICatalogObject *This,VARIANT *retval);", "ICatalogObject_get_Name_Proxy": "HRESULT WINAPI ICatalogObject_get_Name_Proxy(ICatalogObject *This,VARIANT *retval);", "ICatalogObject_IsPropertyReadOnly_Proxy": "HRESULT WINAPI ICatalogObject_IsPropertyReadOnly_Proxy(ICatalogObject *This,BSTR bstrPropName,VARIANT_BOOL *retval);", "ICatalogObject_get_Valid_Proxy": "HRESULT WINAPI ICatalogObject_get_Valid_Proxy(ICatalogObject *This,VARIANT_BOOL *retval);", "ICatalogObject_IsPropertyWriteOnly_Proxy": "HRESULT WINAPI ICatalogObject_IsPropertyWriteOnly_Proxy(ICatalogObject *This,BSTR bstrPropName,VARIANT_BOOL *retval);", "ICatalogCollection_get__NewEnum_Proxy": "HRESULT WINAPI ICatalogCollection_get__NewEnum_Proxy(ICatalogCollection *This,IUnknown **ppEnumVariant);", "ICatalogCollection_get_Item_Proxy": "HRESULT WINAPI ICatalogCollection_get_Item_Proxy(ICatalogCollection *This,__LONG32 lIndex,IDispatch **ppCatalogObject);", "ICatalogCollection_get_Count_Proxy": "HRESULT WINAPI ICatalogCollection_get_Count_Proxy(ICatalogCollection *This,__LONG32 *retval);", "ICatalogCollection_Remove_Proxy": "HRESULT WINAPI ICatalogCollection_Remove_Proxy(ICatalogCollection *This,__LONG32 lIndex);", "ICatalogCollection_Add_Proxy": "HRESULT WINAPI ICatalogCollection_Add_Proxy(ICatalogCollection *This,IDispatch **ppCatalogObject);", "ICatalogCollection_Populate_Proxy": "HRESULT WINAPI ICatalogCollection_Populate_Proxy(ICatalogCollection *This);", "ICatalogCollection_SaveChanges_Proxy": "HRESULT WINAPI ICatalogCollection_SaveChanges_Proxy(ICatalogCollection *This,__LONG32 *retval);", "ICatalogCollection_GetCollection_Proxy": "HRESULT WINAPI ICatalogCollection_GetCollection_Proxy(ICatalogCollection *This,BSTR bstrCollName,VARIANT varObjectKey,IDispatch **ppCatalogCollection);", "ICatalogCollection_get_Name_Proxy": "HRESULT WINAPI ICatalogCollection_get_Name_Proxy(ICatalogCollection *This,VARIANT *retval);", "ICatalogCollection_get_AddEnabled_Proxy": "HRESULT WINAPI ICatalogCollection_get_AddEnabled_Proxy(ICatalogCollection *This,VARIANT_BOOL *retval);", "ICatalogCollection_get_RemoveEnabled_Proxy": "HRESULT WINAPI ICatalogCollection_get_RemoveEnabled_Proxy(ICatalogCollection *This,VARIANT_BOOL *retval);", "ICatalogCollection_GetUtilInterface_Proxy": "HRESULT WINAPI ICatalogCollection_GetUtilInterface_Proxy(ICatalogCollection *This,IDispatch **ppUtil);", "ICatalogCollection_get_DataStoreMajorVersion_Proxy": "HRESULT WINAPI ICatalogCollection_get_DataStoreMajorVersion_Proxy(ICatalogCollection *This,__LONG32 *retval);", "ICatalogCollection_get_DataStoreMinorVersion_Proxy": "HRESULT WINAPI ICatalogCollection_get_DataStoreMinorVersion_Proxy(ICatalogCollection *This,__LONG32 *retval);", "ICatalogCollection_PopulateByKey_Proxy": "HRESULT WINAPI ICatalogCollection_PopulateByKey_Proxy(ICatalogCollection *This,SAFEARRAY *aKeys);", "ICatalogCollection_PopulateByQuery_Proxy": "HRESULT WINAPI ICatalogCollection_PopulateByQuery_Proxy(ICatalogCollection *This,BSTR bstrQueryString,__LONG32 lQueryType);", "IComponentUtil_InstallComponent_Proxy": "HRESULT WINAPI IComponentUtil_InstallComponent_Proxy(IComponentUtil *This,BSTR bstrDLLFile,BSTR bstrTypelibFile,BSTR bstrProxyStubDLLFile);", "IComponentUtil_ImportComponent_Proxy": "HRESULT WINAPI IComponentUtil_ImportComponent_Proxy(IComponentUtil *This,BSTR bstrCLSID);", "IComponentUtil_ImportComponentByName_Proxy": "HRESULT WINAPI IComponentUtil_ImportComponentByName_Proxy(IComponentUtil *This,BSTR bstrProgID);", "IComponentUtil_GetCLSIDs_Proxy": "HRESULT WINAPI IComponentUtil_GetCLSIDs_Proxy(IComponentUtil *This,BSTR bstrDLLFile,BSTR bstrTypelibFile,SAFEARRAY **aCLSIDs);", "IPackageUtil_InstallPackage_Proxy": "HRESULT WINAPI IPackageUtil_InstallPackage_Proxy(IPackageUtil *This,BSTR bstrPackageFile,BSTR bstrInstallPath,__LONG32 lOptions);", "IPackageUtil_ExportPackage_Proxy": "HRESULT WINAPI IPackageUtil_ExportPackage_Proxy(IPackageUtil *This,BSTR bstrPackageID,BSTR bstrPackageFile,__LONG32 lOptions);", "IPackageUtil_ShutdownPackage_Proxy": "HRESULT WINAPI IPackageUtil_ShutdownPackage_Proxy(IPackageUtil *This,BSTR bstrPackageID);", "IRemoteComponentUtil_InstallRemoteComponent_Proxy": "HRESULT WINAPI IRemoteComponentUtil_InstallRemoteComponent_Proxy(IRemoteComponentUtil *This,BSTR bstrServer,BSTR bstrPackageID,BSTR bstrCLSID);", "IRemoteComponentUtil_InstallRemoteComponentByName_Proxy": "HRESULT WINAPI IRemoteComponentUtil_InstallRemoteComponentByName_Proxy(IRemoteComponentUtil *This,BSTR bstrServer,BSTR bstrPackageName,BSTR bstrProgID);", "IRoleAssociationUtil_AssociateRole_Proxy": "HRESULT WINAPI IRoleAssociationUtil_AssociateRole_Proxy(IRoleAssociationUtil *This,BSTR bstrRoleID);", "IRoleAssociationUtil_AssociateRoleByName_Proxy": "HRESULT WINAPI IRoleAssociationUtil_AssociateRoleByName_Proxy(IRoleAssociationUtil *This,BSTR bstrRoleName);", "ICertPolicy_Initialize_Proxy": "HRESULT WINAPI ICertPolicy_Initialize_Proxy(ICertPolicy *This,const BSTR strConfig);", "ICertPolicy_VerifyRequest_Proxy": "HRESULT WINAPI ICertPolicy_VerifyRequest_Proxy(ICertPolicy *This,const BSTR strConfig,LONG Context,LONG bNewRequest,LONG Flags,LONG *pDisposition);", "ICertPolicy_GetDescription_Proxy": "HRESULT WINAPI ICertPolicy_GetDescription_Proxy(ICertPolicy *This,BSTR *pstrDescription);", "ICertPolicy_ShutDown_Proxy": "HRESULT WINAPI ICertPolicy_ShutDown_Proxy(ICertPolicy *This);", "ICertPolicy2_GetManageModule_Proxy": "HRESULT WINAPI ICertPolicy2_GetManageModule_Proxy(ICertPolicy2 *This,ICertManageModule **ppManageModule);", "GetPwrDiskSpindownRange": "BOOLEAN WINAPI GetPwrDiskSpindownRange(PUINT,PUINT);", "EnumPwrSchemes": "BOOLEAN WINAPI EnumPwrSchemes(PWRSCHEMESENUMPROC,LPARAM);", "ReadGlobalPwrPolicy": "BOOLEAN WINAPI ReadGlobalPwrPolicy(PGLOBAL_POWER_POLICY);", "ReadPwrScheme": "BOOLEAN WINAPI ReadPwrScheme(UINT,PPOWER_POLICY);", "WritePwrScheme": "BOOLEAN WINAPI WritePwrScheme(PUINT,LPTSTR,LPTSTR,PPOWER_POLICY);", "WriteGlobalPwrPolicy": "BOOLEAN WINAPI WriteGlobalPwrPolicy(PGLOBAL_POWER_POLICY);", "DeletePwrScheme": "BOOLEAN WINAPI DeletePwrScheme(UINT);", "GetActivePwrScheme": "BOOLEAN WINAPI GetActivePwrScheme(PUINT);", "SetActivePwrScheme": "BOOLEAN WINAPI SetActivePwrScheme(UINT,PGLOBAL_POWER_POLICY,PPOWER_POLICY);", "IsPwrSuspendAllowed": "BOOLEAN WINAPI IsPwrSuspendAllowed(VOID);", "IsPwrHibernateAllowed": "BOOLEAN WINAPI IsPwrHibernateAllowed(VOID);", "IsPwrShutdownAllowed": "BOOLEAN WINAPI IsPwrShutdownAllowed(VOID);", "IsAdminOverrideActive": "BOOLEAN WINAPI IsAdminOverrideActive(PADMINISTRATOR_POWER_POLICY);", "SetSuspendState": "BOOLEAN WINAPI SetSuspendState(BOOLEAN,BOOLEAN,BOOLEAN);", "GetCurrentPowerPolicies": "BOOLEAN WINAPI GetCurrentPowerPolicies(PGLOBAL_POWER_POLICY,PPOWER_POLICY);", "CanUserWritePwrScheme": "BOOLEAN WINAPI CanUserWritePwrScheme(VOID);", "ReadProcessorPwrScheme": "BOOLEAN WINAPI ReadProcessorPwrScheme(UINT,PMACHINE_PROCESSOR_POWER_POLICY);", "WriteProcessorPwrScheme": "BOOLEAN WINAPI WriteProcessorPwrScheme(UINT,PMACHINE_PROCESSOR_POWER_POLICY);", "ValidatePowerPolicies": "BOOLEAN WINAPI ValidatePowerPolicies(PGLOBAL_POWER_POLICY,PPOWER_POLICY);", "DevicePowerClose": "BOOLEAN WINAPI DevicePowerClose(void);", "DevicePowerEnumDevices": "BOOLEAN WINAPI DevicePowerEnumDevices(", "DevicePowerOpen": "BOOLEAN WINAPI DevicePowerOpen(", "DevicePowerSetDeviceState": "DWORD WINAPI DevicePowerSetDeviceState(", "PowerCanRestoreIndividualDefaultPowerScheme": "DWORD WINAPI PowerCanRestoreIndividualDefaultPowerScheme(", "PowerCreatePossibleSetting": "DWORD WINAPI PowerCreatePossibleSetting(", "PowerCreateSetting": "DWORD WINAPI PowerCreateSetting(", "PowerDeleteScheme": "DWORD WINAPI PowerDeleteScheme(", "PowerDeterminePlatformRole": "POWER_PLATFORM_ROLE WINAPI PowerDeterminePlatformRole(void);", "PowerDuplicateScheme": "DWORD WINAPI PowerDuplicateScheme(", "PowerEnumerate": "DWORD WINAPI PowerEnumerate(", "PowerImportPowerScheme": "DWORD WINAPI PowerImportPowerScheme(", "PowerReadACDefaultIndex": "DWORD WINAPI PowerReadACDefaultIndex(", "PowerReadACValueIndex": "DWORD WINAPI PowerReadACValueIndex(", "PowerReadDCDefaultIndex": "DWORD WINAPI PowerReadDCDefaultIndex(", "PowerReadDCValueIndex": "DWORD WINAPI PowerReadDCValueIndex(", "PowerReadDescription": "DWORD WINAPI PowerReadDescription(", "PowerReadFriendlyName": "DWORD WINAPI PowerReadFriendlyName(", "PowerReadIconResourceSpecifier": "DWORD WINAPI PowerReadIconResourceSpecifier(", "PowerReadPossibleDescription": "DWORD WINAPI PowerReadPossibleDescription(", "PowerReadPossibleFriendlyName": "DWORD WINAPI PowerReadPossibleFriendlyName(", "PowerReadPossibleValue": "DWORD WINAPI PowerReadPossibleValue(", "PowerReadSettingAttributes": "DWORD WINAPI PowerReadSettingAttributes(", "PowerReadValueIncrement": "DWORD WINAPI PowerReadValueIncrement(", "PowerReadValueMax": "DWORD WINAPI PowerReadValueMax(", "PowerReadValueMin": "DWORD WINAPI PowerReadValueMin(", "PowerReadValueUnitsSpecifier": "DWORD WINAPI PowerReadValueUnitsSpecifier(", "PowerRemovePowerSetting": "DWORD WINAPI PowerRemovePowerSetting(", "PowerReplaceDefaultPowerSchemes": "DWORD WINAPI PowerReplaceDefaultPowerSchemes(void);", "PowerRestoreDefaultPowerSchemes": "DWORD WINAPI PowerRestoreDefaultPowerSchemes(void);", "PowerRestoreIndividualDefaultPowerScheme": "DWORD WINAPI PowerRestoreIndividualDefaultPowerScheme(", "PowerSettingAccessCheck": "DWORD WINAPI PowerSettingAccessCheck(", "PowerWriteACDefaultIndex": "DWORD WINAPI PowerWriteACDefaultIndex(", "PowerWriteDCDefaultIndex": "DWORD WINAPI PowerWriteDCDefaultIndex(", "PowerWriteDescription": "DWORD WINAPI PowerWriteDescription(", "PowerWriteFriendlyName": "DWORD WINAPI PowerWriteFriendlyName(", "PowerWriteIconResourceSpecifier": "DWORD WINAPI PowerWriteIconResourceSpecifier(", "PowerWritePossibleDescription": "DWORD WINAPI PowerWritePossibleDescription(", "PowerWritePossibleFriendlyName": "DWORD WINAPI PowerWritePossibleFriendlyName(", "PowerWritePossibleValue": "DWORD WINAPI PowerWritePossibleValue(", "PowerWriteSettingAttributes": "DWORD WINAPI PowerWriteSettingAttributes(", "PowerWriteValueIncrement": "DWORD WINAPI PowerWriteValueIncrement(", "PowerWriteValueMax": "DWORD WINAPI PowerWriteValueMax(", "PowerWriteValueMin": "DWORD WINAPI PowerWriteValueMin(", "PowerWriteValueUnitsSpecifier": "DWORD WINAPI PowerWriteValueUnitsSpecifier(", "FMExtensionProcW": "LONG WINAPI FMExtensionProcW(HWND hwnd,WORD wEvent,LONG lParam);", "FMExtensionProc": "LONG WINAPI FMExtensionProc(HWND hwnd,WORD wEvent,LONG lParam);", "PowerReadACValue": "DWORD WINAPI PowerReadACValue(HKEY RootPowerKey, CONST GUID *SchemeGuid, CONST GUID *SubGroupOfPowerSettingsGuid, CONST GUID *PowerSettingGuid, PULONG Type, LPBYTE Buffer, LPDWORD BufferSize);", "PowerReadDCValue": "DWORD WINAPI PowerReadDCValue(HKEY RootPowerKey, CONST GUID *SchemeGuid, CONST GUID *SubGroupOfPowerSettingsGuid, CONST GUID *PowerSettingGuid, PULONG Type, PUCHAR Buffer, LPDWORD BufferSize);", "PowerWriteACValueIndex": "DWORD WINAPI PowerWriteACValueIndex(HKEY RootPowerKey, CONST GUID *SchemeGuid, CONST GUID *SubGroupOfPowerSettingsGuid, CONST GUID *PowerSettingGuid, DWORD AcValueIndex);", "PowerWriteDCValueIndex": "DWORD WINAPI PowerWriteDCValueIndex(HKEY RootPowerKey, CONST GUID *SchemeGuid, CONST GUID *SubGroupOfPowerSettingsGuid, CONST GUID *PowerSettingGuid, DWORD DcValueIndex);", "PowerGetActiveScheme": "DWORD WINAPI PowerGetActiveScheme(HKEY UserRootPowerKey, GUID **ActivePolicyGuid);", "PowerSetActiveScheme": "DWORD WINAPI PowerSetActiveScheme(HKEY UserRootPowerKey, CONST GUID *SchemeGuid);", "PowerSettingRegisterNotification": "DWORD WINAPI PowerSettingRegisterNotification(LPCGUID SettingGuid, DWORD Flags, HANDLE Recipient, PHPOWERNOTIFY RegistrationHandle);", "PowerSettingUnregisterNotification": "DWORD WINAPI PowerSettingUnregisterNotification(HPOWERNOTIFY RegistrationHandle);", "EFFECTIVE_POWER_MODE_CALLBACK": "typedef VOID WINAPI EFFECTIVE_POWER_MODE_CALLBACK(EFFECTIVE_POWER_MODE Mode, VOID *Context);", "PowerRegisterForEffectivePowerModeNotifications": "HRESULT WINAPI PowerRegisterForEffectivePowerModeNotifications(ULONG Version, EFFECTIVE_POWER_MODE_CALLBACK *Callback, VOID *Context, VOID **RegistrationHandle);", "PowerUnregisterFromEffectivePowerModeNotifications": "HRESULT WINAPI PowerUnregisterFromEffectivePowerModeNotifications(VOID *RegistrationHandle);", "NetAlertRaise": "NET_API_STATUS WINAPI NetAlertRaise(LPCWSTR AlertEventName,LPVOID Buffer,DWORD BufferSize);", "NetAlertRaiseEx": "NET_API_STATUS WINAPI NetAlertRaiseEx(LPCWSTR AlertEventName,LPVOID VariableInfo,DWORD VariableInfoSize,LPCWSTR ServiceName);", "IObjectSafety_GetInterfaceSafetyOptions_Proxy": "HRESULT WINAPI IObjectSafety_GetInterfaceSafetyOptions_Proxy(IObjectSafety *This,REFIID riid,DWORD *pdwSupportedOptions,DWORD *pdwEnabledOptions);", "IObjectSafety_SetInterfaceSafetyOptions_Proxy": "HRESULT WINAPI IObjectSafety_SetInterfaceSafetyOptions_Proxy(IObjectSafety *This,REFIID riid,DWORD dwOptionSetMask,DWORD dwEnabledOptions);", "WMCreateProfileManager": "HRESULT WINAPI WMCreateProfileManager(IWMProfileManager**);", "WMCheckURLExtension": "HRESULT WINAPI WMCheckURLExtension(LPCWSTR);", "WMCheckURLScheme": "HRESULT WINAPI WMCheckURLScheme(LPCWSTR);", "WMCreateWriter": "HRESULT WINAPI WMCreateWriter(IUnknown*,IWMWriter**);", "WMCreateReader": "HRESULT WINAPI WMCreateReader(IUnknown*,DWORD,IWMReader**);", "WMCreateSyncReader": "HRESULT WINAPI WMCreateSyncReader(IUnknown*,DWORD,IWMSyncReader**);", "WMCreateEditor": "HRESULT WINAPI WMCreateEditor(IWMMetadataEditor**);", "WMCreateBackupRestorer": "HRESULT WINAPI WMCreateBackupRestorer(IUnknown*,IWMLicenseBackup**);", "WMIsContentProtected": "HRESULT WINAPI WMIsContentProtected(const WCHAR*, WINBOOL*);", "ITargetFrame_SetFrameName_Proxy": "HRESULT WINAPI ITargetFrame_SetFrameName_Proxy(ITargetFrame *This,LPCWSTR pszFrameName);", "ITargetFrame_GetFrameName_Proxy": "HRESULT WINAPI ITargetFrame_GetFrameName_Proxy(ITargetFrame *This,LPWSTR *ppszFrameName);", "ITargetFrame_GetParentFrame_Proxy": "HRESULT WINAPI ITargetFrame_GetParentFrame_Proxy(ITargetFrame *This,IUnknown **ppunkParent);", "ITargetFrame_FindFrame_Proxy": "HRESULT WINAPI ITargetFrame_FindFrame_Proxy(ITargetFrame *This,LPCWSTR pszTargetName,IUnknown *ppunkContextFrame,DWORD dwFlags,IUnknown **ppunkTargetFrame);", "ITargetFrame_SetFrameSrc_Proxy": "HRESULT WINAPI ITargetFrame_SetFrameSrc_Proxy(ITargetFrame *This,LPCWSTR pszFrameSrc);", "ITargetFrame_GetFrameSrc_Proxy": "HRESULT WINAPI ITargetFrame_GetFrameSrc_Proxy(ITargetFrame *This,LPWSTR *ppszFrameSrc);", "ITargetFrame_GetFramesContainer_Proxy": "HRESULT WINAPI ITargetFrame_GetFramesContainer_Proxy(ITargetFrame *This,IOleContainer **ppContainer);", "ITargetFrame_SetFrameOptions_Proxy": "HRESULT WINAPI ITargetFrame_SetFrameOptions_Proxy(ITargetFrame *This,DWORD dwFlags);", "ITargetFrame_GetFrameOptions_Proxy": "HRESULT WINAPI ITargetFrame_GetFrameOptions_Proxy(ITargetFrame *This,DWORD *pdwFlags);", "ITargetFrame_SetFrameMargins_Proxy": "HRESULT WINAPI ITargetFrame_SetFrameMargins_Proxy(ITargetFrame *This,DWORD dwWidth,DWORD dwHeight);", "ITargetFrame_GetFrameMargins_Proxy": "HRESULT WINAPI ITargetFrame_GetFrameMargins_Proxy(ITargetFrame *This,DWORD *pdwWidth,DWORD *pdwHeight);", "ITargetFrame_RemoteNavigate_Proxy": "HRESULT WINAPI ITargetFrame_RemoteNavigate_Proxy(ITargetFrame *This,ULONG cLength,ULONG *pulData);", "ITargetFrame_OnChildFrameActivate_Proxy": "HRESULT WINAPI ITargetFrame_OnChildFrameActivate_Proxy(ITargetFrame *This,IUnknown *pUnkChildFrame);", "ITargetFrame_OnChildFrameDeactivate_Proxy": "HRESULT WINAPI ITargetFrame_OnChildFrameDeactivate_Proxy(ITargetFrame *This,IUnknown *pUnkChildFrame);", "ITargetEmbedding_GetTargetFrame_Proxy": "HRESULT WINAPI ITargetEmbedding_GetTargetFrame_Proxy(ITargetEmbedding *This,ITargetFrame **ppTargetFrame);", "ITargetFramePriv_FindFrameDownwards_Proxy": "HRESULT WINAPI ITargetFramePriv_FindFrameDownwards_Proxy(ITargetFramePriv *This,LPCWSTR pszTargetName,DWORD dwFlags,IUnknown **ppunkTargetFrame);", "ITargetFramePriv_FindFrameInContext_Proxy": "HRESULT WINAPI ITargetFramePriv_FindFrameInContext_Proxy(ITargetFramePriv *This,LPCWSTR pszTargetName,IUnknown *punkContextFrame,DWORD dwFlags,IUnknown **ppunkTargetFrame);", "ITargetFramePriv_OnChildFrameActivate_Proxy": "HRESULT WINAPI ITargetFramePriv_OnChildFrameActivate_Proxy(ITargetFramePriv *This,IUnknown *pUnkChildFrame);", "ITargetFramePriv_OnChildFrameDeactivate_Proxy": "HRESULT WINAPI ITargetFramePriv_OnChildFrameDeactivate_Proxy(ITargetFramePriv *This,IUnknown *pUnkChildFrame);", "ITargetFramePriv_NavigateHack_Proxy": "HRESULT WINAPI ITargetFramePriv_NavigateHack_Proxy(ITargetFramePriv *This,DWORD grfHLNF,LPBC pbc,IBindStatusCallback *pibsc,LPCWSTR pszTargetName,LPCWSTR pszUrl,LPCWSTR pszLocation);", "ITargetFramePriv_FindBrowserByIndex_Proxy": "HRESULT WINAPI ITargetFramePriv_FindBrowserByIndex_Proxy(ITargetFramePriv *This,DWORD dwID,IUnknown **ppunkBrowser);", "CreatePrinterIC": "HANDLE WINAPI CreatePrinterIC(HANDLE hPrinter, LPDEVMODEW pDevMode);", "PlayGdiScriptOnPrinterIC": "WINBOOL WINAPI PlayGdiScriptOnPrinterIC(HANDLE hPrinterIC, LPBYTE pIn,", "DeletePrinterIC": "WINBOOL WINAPI DeletePrinterIC(HANDLE hPrinterIC);", "DevQueryPrint": "WINBOOL WINAPI DevQueryPrint(HANDLE hPrinter, LPDEVMODEW pDevMode, DWORD *pResID);", "RevertToPrinterSelf": "HANDLE WINAPI RevertToPrinterSelf(VOID);", "ImpersonatePrinterClient": "WINBOOL WINAPI ImpersonatePrinterClient(HANDLE hToken);", "ReplyPrinterChangeNotification": "WINBOOL WINAPI ReplyPrinterChangeNotification(HANDLE hNotify, DWORD fdwFlags,", "ReplyPrinterChangeNotificationEx": "WINBOOL WINAPI ReplyPrinterChangeNotificationEx(HANDLE hNotify, DWORD dwColor,", "PartialReplyPrinterChangeNotification": "WINBOOL WINAPI PartialReplyPrinterChangeNotification(HANDLE hNotify,", "RouterAllocPrinterNotifyInfo": "PPRINTER_NOTIFY_INFO WINAPI RouterAllocPrinterNotifyInfo(DWORD cPrinterNotifyInfoData);", "RouterFreePrinterNotifyInfo": "WINBOOL WINAPI RouterFreePrinterNotifyInfo(PPRINTER_NOTIFY_INFO pInfo);", "AppendPrinterNotifyInfoData": "WINBOOL WINAPI AppendPrinterNotifyInfoData(PPRINTER_NOTIFY_INFO pInfoDest,", "CallRouterFindFirstPrinterChangeNotification": "DWORD WINAPI CallRouterFindFirstPrinterChangeNotification(HANDLE hPrinter,", "ProvidorFindFirstPrinterChangeNotification": "WINBOOL WINAPI ProvidorFindFirstPrinterChangeNotification(HANDLE hPrinter,", "ProvidorFindClosePrinterChangeNotification": "WINBOOL WINAPI ProvidorFindClosePrinterChangeNotification(HANDLE hPrinter);", "SpoolerFindFirstPrinterChangeNotification": "WINBOOL WINAPI SpoolerFindFirstPrinterChangeNotification(HANDLE hPrinter,", "SpoolerFindNextPrinterChangeNotification": "WINBOOL WINAPI SpoolerFindNextPrinterChangeNotification(HANDLE hPrinter,", "SpoolerFreePrinterNotifyInfo": "VOID WINAPI SpoolerFreePrinterNotifyInfo(PPRINTER_NOTIFY_INFO pInfo);", "SpoolerFindClosePrinterChangeNotification": "WINBOOL WINAPI SpoolerFindClosePrinterChangeNotification(HANDLE hPrinter);", "InitializePrintMonitor2": "LPMONITOR2 WINAPI InitializePrintMonitor2(PMONITORINIT pMonitorInit,", "InitializePrintMonitorUI": "PMONITORUI WINAPI InitializePrintMonitorUI(VOID);", "InitializePrintMonitor": "LPMONITOREX WINAPI InitializePrintMonitor(LPWSTR pRegistryRoot);", "InitializeMonitorEx": "WINBOOL WINAPI InitializeMonitorEx(LPWSTR pRegistryRoot, LPMONITOR pMonitor);", "RouterAllocBidiResponseContainer": "PBIDI_RESPONSE_CONTAINER WINAPI RouterAllocBidiResponseContainer(DWORD Count);", "RouterAllocBidiMem": "PVOID WINAPI RouterAllocBidiMem(size_t NumBytes);", "RouterFreeBidiResponseContainer": "DWORD WINAPI RouterFreeBidiResponseContainer(PBIDI_RESPONSE_CONTAINER pData);", "RouterFreeBidiMem": "VOID WINAPI RouterFreeBidiMem(PVOID pMemPointer);", "SpoolerRefreshPrinterChangeNotification": "WINBOOL WINAPI SpoolerRefreshPrinterChangeNotification(HANDLE hPrinter,", "OpenPrinterToken": "WINBOOL WINAPI OpenPrinterToken(PHANDLE phToken);", "SetPrinterToken": "WINBOOL WINAPI SetPrinterToken(HANDLE hToken);", "ClosePrinterToken": "WINBOOL WINAPI ClosePrinterToken(HANDLE hToken);", "InstallPrintProcessor": "WINBOOL WINAPI InstallPrintProcessor(HWND hWnd);", "DllMain": "WINBOOL WINAPI DllMain(HANDLE _HDllHandle,DWORD _Reason,LPVOID _Reserved);", "_CRT_INIT": "WINBOOL WINAPI _CRT_INIT(HANDLE _HDllHandle,DWORD _Reason,LPVOID _Reserved);", "_wCRT_INIT": "WINBOOL WINAPI _wCRT_INIT(HANDLE _HDllHandle,DWORD _Reason,LPVOID _Reserved);", "OpenNamespace": "HRESULT WINAPI OpenNamespace(const BSTR Namespace,__LONG32 lFlags,IWbemContext *pCtx,IWbemServices **ppWorkingNamespace,IWbemCallResult **ppResult) {return WBEM_E_NOT_SUPPORTED;};", "CancelAsyncCall": "HRESULT WINAPI CancelAsyncCall(IWbemObjectSink *pSink) {return WBEM_E_NOT_SUPPORTED;};", "QueryObjectSink": "HRESULT WINAPI QueryObjectSink(__LONG32 lFlags,IWbemObjectSink **ppResponseHandler) {return WBEM_E_NOT_SUPPORTED;};", "GetObject": "HRESULT WINAPI GetObject(const BSTR ObjectPath,__LONG32 lFlags,IWbemContext *pCtx,IWbemClassObject **ppObject,IWbemCallResult **ppCallResult) {return WBEM_E_NOT_SUPPORTED;};", "PutClass": "HRESULT WINAPI PutClass(IWbemClassObject *pObject,__LONG32 lFlags,IWbemContext *pCtx,IWbemCallResult **ppCallResult) {return WBEM_E_NOT_SUPPORTED;};", "PutClassAsync": "HRESULT WINAPI PutClassAsync(IWbemClassObject *pObject,__LONG32 lFlags,IWbemContext *pCtx,IWbemObjectSink *pResponseHandler) {return WBEM_E_NOT_SUPPORTED;};", "DeleteClass": "HRESULT WINAPI DeleteClass(const BSTR Class,__LONG32 lFlags,IWbemContext *pCtx,IWbemCallResult **ppCallResult) {return WBEM_E_NOT_SUPPORTED;};", "DeleteClassAsync": "HRESULT WINAPI DeleteClassAsync(const BSTR Class,__LONG32 lFlags,IWbemContext *pCtx,IWbemObjectSink *pResponseHandler) {return WBEM_E_NOT_SUPPORTED;};", "CreateClassEnum": "HRESULT WINAPI CreateClassEnum(const BSTR Superclass,__LONG32 lFlags,IWbemContext *pCtx,IEnumWbemClassObject **ppEnum) {return WBEM_E_NOT_SUPPORTED;};", "CreateClassEnumAsync": "HRESULT WINAPI CreateClassEnumAsync(const BSTR Superclass,__LONG32 lFlags,IWbemContext *pCtx,IWbemObjectSink *pResponseHandler) {return WBEM_E_NOT_SUPPORTED;};", "PutInstance": "HRESULT WINAPI PutInstance(IWbemClassObject *pInst,__LONG32 lFlags,IWbemContext *pCtx,IWbemCallResult **ppCallResult) {return WBEM_E_NOT_SUPPORTED;};", "DeleteInstance": "HRESULT WINAPI DeleteInstance(const BSTR ObjectPath,__LONG32 lFlags,IWbemContext *pCtx,IWbemCallResult **ppCallResult) {return WBEM_E_NOT_SUPPORTED;};", "CreateInstanceEnum": "HRESULT WINAPI CreateInstanceEnum(const BSTR Class,__LONG32 lFlags,IWbemContext *pCtx,IEnumWbemClassObject **ppEnum) {return WBEM_E_NOT_SUPPORTED;};", "ExecQuery": "HRESULT WINAPI ExecQuery(const BSTR QueryLanguage,const BSTR Query,__LONG32 lFlags,IWbemContext *pCtx,IEnumWbemClassObject **ppEnum) {return WBEM_E_NOT_SUPPORTED;};", "ExecNotificationQuery": "HRESULT WINAPI ExecNotificationQuery(const BSTR QueryLanguage,const BSTR Query,__LONG32 lFlags,IWbemContext *pCtx,IEnumWbemClassObject **ppEnum) {return WBEM_E_NOT_SUPPORTED;};", "ExecNotificationQueryAsync": "HRESULT WINAPI ExecNotificationQueryAsync(const BSTR QueryLanguage,const BSTR Query,__LONG32 lFlags,IWbemContext *pCtx,IWbemObjectSink *pResponseHandler) {return WBEM_E_NOT_SUPPORTED;};", "ExecMethod": "HRESULT WINAPI ExecMethod(const BSTR strObjectPath,const BSTR strMethodName,__LONG32 lFlags,IWbemContext *pCtx,IWbemClassObject *pInParams,IWbemClassObject **ppOutParams,IWbemCallResult **ppCallResult) {return WBEM_E_NOT_SUPPORTED;};", "ExecMethodAsync": "HRESULT WINAPI ExecMethodAsync(const BSTR strObjectPath,const BSTR strMethodName,__LONG32 lFlags,IWbemContext *pCtx,IWbemClassObject *pInParams,IWbemObjectSink *pResponseHandler) {return WBEM_E_NOT_SUPPORTED;};", "ConstructErrorObject": "HRESULT WINAPI ConstructErrorObject (const ULONG ulStatusCode,const BSTR bstrDescription,const BSTR bstrOperation,const BSTR bstrParameter,const BSTR bstrProviderName,IWbemClassObject **ppErrorObject) {", "FireCreationEvent": "HRESULT WINAPI FireCreationEvent(IWbemClassObject *pNewInstance,IWbemObjectSink *pSink) {", "FireDeletionEvent": "HRESULT WINAPI FireDeletionEvent(IWbemClassObject *pInstanceToDelete,IWbemObjectSink *pSink) {", "FireModificationEvent": "HRESULT WINAPI FireModificationEvent(IWbemClassObject *pOldInstance,IWbemClassObject *pNewInstance,IWbemObjectSink *pSink) {", "CheckInstancePath": "HRESULT WINAPI CheckInstancePath(IClassFactory *pParserFactory,const BSTR ObjectPath,const BSTR ClassName,ULONGLONG ullTest) {", "DdeSetQualityOfService": "WINBOOL WINAPI DdeSetQualityOfService(HWND hwndClient,CONST SECURITY_QUALITY_OF_SERVICE *pqosNew,PSECURITY_QUALITY_OF_SERVICE pqosPrev);", "ImpersonateDdeClientWindow": "WINBOOL WINAPI ImpersonateDdeClientWindow(HWND hWndClient,HWND hWndServer);", "PackDDElParam": "LPARAM WINAPI PackDDElParam(UINT msg,UINT_PTR uiLo,UINT_PTR uiHi);", "UnpackDDElParam": "WINBOOL WINAPI UnpackDDElParam(UINT msg,LPARAM lParam,PUINT_PTR puiLo,PUINT_PTR puiHi);", "FreeDDElParam": "WINBOOL WINAPI FreeDDElParam(UINT msg,LPARAM lParam);", "ReuseDDElParam": "LPARAM WINAPI ReuseDDElParam(LPARAM lParam,UINT msgIn,UINT msgOut,UINT_PTR uiLo,UINT_PTR uiHi);", "DataSourceListener_dataMemberChanged_Proxy": "HRESULT WINAPI DataSourceListener_dataMemberChanged_Proxy(DataSourceListener *This,DataMember bstrDM);", "DataSourceListener_dataMemberAdded_Proxy": "HRESULT WINAPI DataSourceListener_dataMemberAdded_Proxy(DataSourceListener *This,DataMember bstrDM);", "DataSourceListener_dataMemberRemoved_Proxy": "HRESULT WINAPI DataSourceListener_dataMemberRemoved_Proxy(DataSourceListener *This,DataMember bstrDM);", "DataSource_getDataMember_Proxy": "HRESULT WINAPI DataSource_getDataMember_Proxy(DataSource *This,DataMember bstrDM,REFIID riid,IUnknown **ppunk);", "DataSource_getDataMemberName_Proxy": "HRESULT WINAPI DataSource_getDataMemberName_Proxy(DataSource *This,__LONG32 lIndex,DataMember *pbstrDM);", "DataSource_getDataMemberCount_Proxy": "HRESULT WINAPI DataSource_getDataMemberCount_Proxy(DataSource *This,__LONG32 *plCount);", "DataSource_addDataSourceListener_Proxy": "HRESULT WINAPI DataSource_addDataSourceListener_Proxy(DataSource *This,DataSourceListener *pDSL);", "DataSource_removeDataSourceListener_Proxy": "HRESULT WINAPI DataSource_removeDataSourceListener_Proxy(DataSource *This,DataSourceListener *pDSL);", "GetTimeFormatEx": "WINBASEAPI int WINAPI GetTimeFormatEx (LPCWSTR lpLocaleName, DWORD dwFlags, CONST SYSTEMTIME *lpTime, LPCWSTR lpFormat, LPWSTR lpTimeStr, int cchTime);", "GetDateFormatEx": "WINBASEAPI int WINAPI GetDateFormatEx (LPCWSTR lpLocaleName, DWORD dwFlags, CONST SYSTEMTIME *lpDate, LPCWSTR lpFormat, LPWSTR lpDateStr, int cchDate, LPCWSTR lpCalendar);", "GetDateFormatA": "WINBASEAPI int WINAPI GetDateFormatA (LCID Locale, DWORD dwFlags, CONST SYSTEMTIME *lpDate, LPCSTR lpFormat, LPSTR lpDateStr, int cchDate);", "GetDateFormatW": "WINBASEAPI int WINAPI GetDateFormatW (LCID Locale, DWORD dwFlags, CONST SYSTEMTIME *lpDate, LPCWSTR lpFormat, LPWSTR lpDateStr, int cchDate);", "GetTimeFormatA": "WINBASEAPI int WINAPI GetTimeFormatA (LCID Locale, DWORD dwFlags, CONST SYSTEMTIME *lpTime, LPCSTR lpFormat, LPSTR lpTimeStr, int cchTime);", "GetTimeFormatW": "WINBASEAPI int WINAPI GetTimeFormatW (LCID Locale, DWORD dwFlags, CONST SYSTEMTIME *lpTime, LPCWSTR lpFormat, LPWSTR lpTimeStr, int cchTime);", "TTLoadEmbeddedFont": "LONG WINAPI TTLoadEmbeddedFont(HANDLE*,ULONG,ULONG*,ULONG,ULONG*,READEMBEDPROC,", "TTDeleteEmbeddedFont": "LONG WINAPI TTDeleteEmbeddedFont(HANDLE,ULONG,ULONG*);", "TTGetEmbeddingType": "LONG WINAPI TTGetEmbeddingType(HDC, ULONG*);", "TTIsEmbeddingEnabledForFacename": "LONG WINAPI TTIsEmbeddingEnabledForFacename(LPCSTR facename, WINBOOL *enabled);", "TTIsEmbeddingEnabled": "LONG WINAPI TTIsEmbeddingEnabled(HDC hdc, WINBOOL *enabled);", "D3DRMMatrixFromQuaternion": "void WINAPI D3DRMMatrixFromQuaternion(D3DRMMATRIX4D m, D3DRMQUATERNION *q);", "D3DRMQuaternionFromRotation": "D3DRMQUATERNION * WINAPI D3DRMQuaternionFromRotation(D3DRMQUATERNION *x, D3DVECTOR *axis, D3DVALUE theta);", "D3DRMQuaternionMultiply": "D3DRMQUATERNION * WINAPI D3DRMQuaternionMultiply(D3DRMQUATERNION *ret, D3DRMQUATERNION *x, D3DRMQUATERNION *y);", "D3DRMQuaternionSlerp": "D3DRMQUATERNION * WINAPI D3DRMQuaternionSlerp(D3DRMQUATERNION *ret,", "D3DRMVectorAdd": "D3DVECTOR * WINAPI D3DRMVectorAdd(D3DVECTOR *ret, D3DVECTOR *x, D3DVECTOR *y);", "D3DRMVectorCrossProduct": "D3DVECTOR * WINAPI D3DRMVectorCrossProduct(D3DVECTOR *ret, D3DVECTOR *x, D3DVECTOR *y);", "D3DRMVectorDotProduct": "D3DVALUE WINAPI D3DRMVectorDotProduct(D3DVECTOR *x, D3DVECTOR *y);", "D3DRMVectorNormalize": "D3DVECTOR * WINAPI D3DRMVectorNormalize(D3DVECTOR *x);", "D3DRMVectorModulus": "D3DVALUE WINAPI D3DRMVectorModulus(D3DVECTOR *x);", "D3DRMVectorRandom": "D3DVECTOR * WINAPI D3DRMVectorRandom(D3DVECTOR *ret);", "D3DRMVectorRotate": "D3DVECTOR * WINAPI D3DRMVectorRotate(D3DVECTOR *ret, D3DVECTOR *x, D3DVECTOR *axis, D3DVALUE theta);", "D3DRMVectorReflect": "D3DVECTOR * WINAPI D3DRMVectorReflect(D3DVECTOR *ret, D3DVECTOR *ray, D3DVECTOR *normal);", "D3DRMVectorScale": "D3DVECTOR * WINAPI D3DRMVectorScale(D3DVECTOR *ret, D3DVECTOR *x, D3DVALUE scale);", "D3DRMVectorSubtract": "D3DVECTOR * WINAPI D3DRMVectorSubtract(D3DVECTOR *ret, D3DVECTOR *x, D3DVECTOR *y);", "D3DRMCreateColorRGB": "D3DCOLOR WINAPI D3DRMCreateColorRGB(D3DVALUE, D3DVALUE, D3DVALUE);", "D3DRMCreateColorRGBA": "D3DCOLOR WINAPI D3DRMCreateColorRGBA(D3DVALUE, D3DVALUE, D3DVALUE, D3DVALUE);", "D3DRMColorGetAlpha": "D3DVALUE WINAPI D3DRMColorGetAlpha(D3DCOLOR);", "D3DRMColorGetBlue": "D3DVALUE WINAPI D3DRMColorGetBlue(D3DCOLOR);", "D3DRMColorGetGreen": "D3DVALUE WINAPI D3DRMColorGetGreen(D3DCOLOR);", "D3DRMColorGetRed": "D3DVALUE WINAPI D3DRMColorGetRed(D3DCOLOR);", "DwmDefWindowProc": "WINBOOL WINAPI DwmDefWindowProc (HWND hWnd, UINT msg, WPARAM wParam, LPARAM lParam, LRESULT *plResult);", "DwmEnableBlurBehindWindow": "HRESULT WINAPI DwmEnableBlurBehindWindow (HWND hWnd, const DWM_BLURBEHIND *pBlurBehind);", "DwmEnableComposition": "HRESULT WINAPI DwmEnableComposition (UINT uCompositionAction);", "DwmEnableMMCSS": "HRESULT WINAPI DwmEnableMMCSS (WINBOOL fEnableMMCSS);", "DwmExtendFrameIntoClientArea": "HRESULT WINAPI DwmExtendFrameIntoClientArea (HWND hWnd, const MARGINS *pMarInset);", "DwmGetColorizationColor": "HRESULT WINAPI DwmGetColorizationColor (DWORD *pcrColorization, WINBOOL *pfOpaqueBlend);", "DwmGetCompositionTimingInfo": "HRESULT WINAPI DwmGetCompositionTimingInfo (HWND hwnd, DWM_TIMING_INFO *pTimingInfo);", "DwmGetWindowAttribute": "HRESULT WINAPI DwmGetWindowAttribute (HWND hwnd, DWORD dwAttribute, PVOID pvAttribute, DWORD cbAttribute);", "DwmIsCompositionEnabled": "HRESULT WINAPI DwmIsCompositionEnabled (WINBOOL *pfEnabled);", "DwmModifyPreviousDxFrameDuration": "HRESULT WINAPI DwmModifyPreviousDxFrameDuration (HWND hwnd, INT cRefreshes, WINBOOL fRelative);", "DwmQueryThumbnailSourceSize": "HRESULT WINAPI DwmQueryThumbnailSourceSize (HTHUMBNAIL hThumbnail, PSIZE pSize);", "DwmRegisterThumbnail": "HRESULT WINAPI DwmRegisterThumbnail (HWND hwndDestination, HWND hwndSource, PHTHUMBNAIL phThumbnailId);", "DwmSetDxFrameDuration": "HRESULT WINAPI DwmSetDxFrameDuration (HWND hwnd, INT cRefreshes);", "DwmSetPresentParameters": "HRESULT WINAPI DwmSetPresentParameters (HWND hwnd, DWM_PRESENT_PARAMETERS *pPresentParams);", "DwmSetWindowAttribute": "HRESULT WINAPI DwmSetWindowAttribute (HWND hwnd, DWORD dwAttribute, LPCVOID pvAttribute, DWORD cbAttribute);", "DwmUnregisterThumbnail": "HRESULT WINAPI DwmUnregisterThumbnail (HTHUMBNAIL hThumbnailId);", "DwmUpdateThumbnailProperties": "HRESULT WINAPI DwmUpdateThumbnailProperties (HTHUMBNAIL hThumbnailId, const DWM_THUMBNAIL_PROPERTIES *ptnProperties);", "DwmAttachMilContent": "HRESULT WINAPI DwmAttachMilContent (HWND hwnd);", "DwmDetachMilContent": "HRESULT WINAPI DwmDetachMilContent (HWND hwnd);", "DwmFlush": "HRESULT WINAPI DwmFlush ();", "DwmGetGraphicsStreamTransformHint": "HRESULT WINAPI DwmGetGraphicsStreamTransformHint (UINT uIndex, MilMatrix3x2D *pTransform);", "DwmGetGraphicsStreamClient": "HRESULT WINAPI DwmGetGraphicsStreamClient (UINT uIndex, UUID *pClientUuid);", "DwmGetTransportAttributes": "HRESULT WINAPI DwmGetTransportAttributes (WINBOOL *pfIsRemoting, WINBOOL *pfIsConnected, DWORD *pDwGeneration);", "DwmTransitionOwnedWindow": "HRESULT WINAPI DwmTransitionOwnedWindow (HWND hwnd, enum DWMTRANSITION_OWNEDWINDOW_TARGET target);", "DwmSetIconicThumbnail": "HRESULT WINAPI DwmSetIconicThumbnail (HWND hwnd, HBITMAP hbmp, DWORD dwSITFlags);", "DwmSetIconicLivePreviewBitmap": "HRESULT WINAPI DwmSetIconicLivePreviewBitmap (HWND hwnd, HBITMAP hbmp, POINT *pptClient, DWORD dwSITFlags);", "DwmInvalidateIconicBitmaps": "HRESULT WINAPI DwmInvalidateIconicBitmaps (HWND hwnd);", "DwmRenderGesture": "HRESULT WINAPI DwmRenderGesture (enum GESTURE_TYPE gt, UINT cContacts, const DWORD *pdwPointerID, const POINT *pPoints);", "DwmTetherContact": "HRESULT WINAPI DwmTetherContact (DWORD dwPointerID, WINBOOL fEnable, POINT ptTether);", "DwmShowContact": "HRESULT WINAPI DwmShowContact (DWORD dwPointerID, enum DWM_SHOWCONTACT eShowContact);", "DwmGetUnmetTabRequirements": "HRESULT WINAPI DwmGetUnmetTabRequirements (HWND appWindow, enum DWM_TAB_WINDOW_REQUIREMENTS *value);", "QueryThreadCycleTime": "WINBASEAPI WINBOOL WINAPI QueryThreadCycleTime (HANDLE ThreadHandle, PULONG64 CycleTime);", "QueryProcessCycleTime": "WINBASEAPI WINBOOL WINAPI QueryProcessCycleTime (HANDLE ProcessHandle, PULONG64 CycleTime);", "QueryIdleProcessorCycleTime": "WINBASEAPI WINBOOL WINAPI QueryIdleProcessorCycleTime (PULONG BufferLength, PULONG64 ProcessorIdleCycleTime);", "QueryIdleProcessorCycleTimeEx": "WINBASEAPI WINBOOL WINAPI QueryIdleProcessorCycleTimeEx (USHORT Group, PULONG BufferLength, PULONG64 ProcessorIdleCycleTime);", "QueryInterruptTimePrecise": "WINBASEAPI VOID WINAPI QueryInterruptTimePrecise (PULONGLONG lpInterruptTimePrecise);", "QueryUnbiasedInterruptTimePrecise": "WINBASEAPI VOID WINAPI QueryUnbiasedInterruptTimePrecise (PULONGLONG lpUnbiasedInterruptTimePrecise);", "QueryInterruptTime": "WINBASEAPI VOID WINAPI QueryInterruptTime (PULONGLONG lpInterruptTime);", "QueryUnbiasedInterruptTime": "WINBASEAPI WINBOOL WINAPI QueryUnbiasedInterruptTime (PULONGLONG UnbiasedTime);", "QueryAuxiliaryCounterFrequency": "WINBASEAPI HRESULT WINAPI QueryAuxiliaryCounterFrequency (PULONGLONG lpAuxiliaryCounterFrequency);", "ConvertAuxiliaryCounterToPerformanceCounter": "WINBASEAPI HRESULT WINAPI ConvertAuxiliaryCounterToPerformanceCounter (ULONGLONG ullAuxiliaryCounterValue, PULONGLONG lpPerformanceCounterValue, PULONGLONG lpConversionError);", "ConvertPerformanceCounterToAuxiliaryCounter": "WINBASEAPI HRESULT WINAPI ConvertPerformanceCounterToAuxiliaryCounter (ULONGLONG ullPerformanceCounterValue, PULONGLONG lpAuxiliaryCounterValue, PULONGLONG lpConversionError);", "BhSetTimer": "extern HTIMER WINAPI BhSetTimer(BHTIMERPROC TimerProc,LPVOID InstData,DWORD TimeOut);", "BhKillTimer": "extern VOID WINAPI BhKillTimer(HTIMER hTimer);", "BhGetLastError": "extern DWORD WINAPI BhGetLastError(VOID);", "BhSetLastError": "extern DWORD WINAPI BhSetLastError(DWORD Error);", "CreateObjectHeap": "extern HOBJECTHEAP WINAPI CreateObjectHeap(DWORD ObjectSize,OBJECTPROC ObjectProc);", "DestroyObjectHeap": "extern HOBJECTHEAP WINAPI DestroyObjectHeap(HOBJECTHEAP hObjectHeap);", "AllocObject": "extern LPVOID WINAPI AllocObject(HOBJECTHEAP hObjectHeap);", "FreeObject": "extern LPVOID WINAPI FreeObject(HOBJECTHEAP hObjectHeap,LPVOID ObjectMemory);", "GrowObjectHeap": "extern DWORD WINAPI GrowObjectHeap(HOBJECTHEAP hObjectHeap,DWORD nObjects);", "GetObjectHeapSize": "extern DWORD WINAPI GetObjectHeapSize(HOBJECTHEAP hObjectHeap);", "PurgeObjectHeap": "extern VOID WINAPI PurgeObjectHeap(HOBJECTHEAP hObjectHeap);", "AllocMemory": "extern LPVOID WINAPI AllocMemory(SIZE_T size);", "ReallocMemory": "extern LPVOID WINAPI ReallocMemory(LPVOID ptr,SIZE_T NewSize);", "FreeMemory": "extern VOID WINAPI FreeMemory(LPVOID ptr);", "TestMemory": "extern VOID WINAPI TestMemory(LPVOID ptr);", "MemorySize": "extern SIZE_T WINAPI MemorySize(LPVOID ptr);", "MemoryHandle": "extern HANDLE WINAPI MemoryHandle(LPBYTE ptr);", "InitializeExpression": "extern LPEXPRESSION WINAPI InitializeExpression(LPEXPRESSION Expression);", "InitializePattern": "extern LPPATTERNMATCH WINAPI InitializePattern(LPPATTERNMATCH Pattern,LPVOID ptr,DWORD offset,DWORD length);", "AndExpression": "extern LPEXPRESSION WINAPI AndExpression(LPEXPRESSION Expression,LPPATTERNMATCH Pattern);", "OrExpression": "extern LPEXPRESSION WINAPI OrExpression(LPEXPRESSION Expression,LPPATTERNMATCH Pattern);", "NegatePattern": "extern LPPATTERNMATCH WINAPI NegatePattern(LPPATTERNMATCH Pattern);", "AdjustOperatorPrecedence": "extern LPADDRESSTABLE WINAPI AdjustOperatorPrecedence(LPADDRESSTABLE AddressTable);", "NormalizeAddress": "extern LPADDRESS WINAPI NormalizeAddress(LPADDRESS Address);", "NormalizeAddressTable": "extern LPADDRESSTABLE WINAPI NormalizeAddressTable(LPADDRESSTABLE AddressTable);", "BhGetWindowsVersion": "extern DWORD WINAPI BhGetWindowsVersion(VOID);", "IsDaytona": "extern WINBOOL WINAPI IsDaytona(VOID);", "CreateFilter": "HFILTER WINAPI CreateFilter(VOID);", "DestroyFilter": "DWORD WINAPI DestroyFilter(HFILTER hFilter);", "FilterDuplicate": "HFILTER WINAPI FilterDuplicate(HFILTER hFilter);", "DisableParserFilter": "DWORD WINAPI DisableParserFilter(HFILTER hFilter,HPARSER hParser);", "EnableParserFilter": "DWORD WINAPI EnableParserFilter(HFILTER hFilter,HPARSER hParser);", "FilterAddObject": "DWORD WINAPI FilterAddObject(HFILTER hFilter,LPFILTEROBJECT2 lpFilterObject);", "FilterFlushBits": "VOID WINAPI FilterFlushBits(HFILTER hFilter);", "FilterFrame": "DWORD WINAPI FilterFrame(HFRAME hFrame,HFILTER hFilter,HCAPTURE hCapture);", "FilterAttachesProperties": "WINBOOL WINAPI FilterAttachesProperties(HFILTER hFilter);", "FilterFindFrame": "DWORD WINAPI FilterFindFrame (HFILTER hFilter,HCAPTURE hCapture,DWORD nFrame,STATUSPROC StatusProc,LPVOID UIInstance,DWORD TimeDelta,WINBOOL FilterDirection);", "SetCurrentFilter": "VOID WINAPI SetCurrentFilter(HFILTER);", "GetCurrentFilter": "HFILTER WINAPI GetCurrentFilter(VOID);", "GetProtocolDescriptionTable": "LPLABELED_WORD WINAPI GetProtocolDescriptionTable(LPDWORD TableSize);", "GetProtocolDescription": "LPLABELED_WORD WINAPI GetProtocolDescription(DWORD ProtocolID);", "GetMacHeaderLength": "DWORD WINAPI GetMacHeaderLength(LPVOID MacHeader,DWORD MacType);", "GetLLCHeaderLength": "DWORD WINAPI GetLLCHeaderLength(LPLLC Frame);", "GetEtype": "DWORD WINAPI GetEtype(LPVOID MacHeader,DWORD MacType);", "GetSaps": "DWORD WINAPI GetSaps(LPVOID MacHeader,DWORD MacType);", "IsLLCPresent": "WINBOOL WINAPI IsLLCPresent(LPVOID MacHeader,DWORD MacType);", "CanonicalizeHexString": "VOID WINAPI CanonicalizeHexString(LPSTR hex,LPSTR dest,DWORD len);", "CanonHex": "void WINAPI CanonHex(UCHAR *pDest,UCHAR *pSource,int iLen,WINBOOL fOx);", "ByteToBinary": "DWORD WINAPI ByteToBinary(LPSTR string,DWORD ByteValue);", "WordToBinary": "DWORD WINAPI WordToBinary(LPSTR string,DWORD WordValue);", "DwordToBinary": "DWORD WINAPI DwordToBinary(LPSTR string,DWORD DwordValue);", "AddressToString": "LPSTR WINAPI AddressToString(LPSTR string,BYTE *lpAddress);", "StringToAddress": "LPBYTE WINAPI StringToAddress(BYTE *lpAddress,LPSTR string);", "VarLenSmallIntToDword": "LPDWORD WINAPI VarLenSmallIntToDword(LPBYTE pValue,WORD ValueLen,WINBOOL fIsByteswapped,LPDWORD lpDword);", "LookupByteSetString": "LPBYTE WINAPI LookupByteSetString (LPSET lpSet,BYTE Value);", "LookupWordSetString": "LPBYTE WINAPI LookupWordSetString (LPSET lpSet,WORD Value);", "LookupDwordSetString": "LPBYTE WINAPI LookupDwordSetString (LPSET lpSet,DWORD Value);", "FormatByteFlags": "DWORD WINAPIV FormatByteFlags(LPSTR string,DWORD ByteValue,DWORD BitMask);", "FormatWordFlags": "DWORD WINAPIV FormatWordFlags(LPSTR string,DWORD WordValue,DWORD BitMask);", "FormatDwordFlags": "DWORD WINAPIV FormatDwordFlags(LPSTR string,DWORD DwordValue,DWORD BitMask);", "FormatTimeAsString": "LPSTR WINAPIV FormatTimeAsString(SYSTEMTIME *time,LPSTR string);", "FormatLabeledByteSetAsFlags": "VOID WINAPIV FormatLabeledByteSetAsFlags(LPPROPERTYINST lpPropertyInst);", "FormatLabeledWordSetAsFlags": "VOID WINAPIV FormatLabeledWordSetAsFlags(LPPROPERTYINST lpPropertyInst);", "FormatLabeledDwordSetAsFlags": "VOID WINAPIV FormatLabeledDwordSetAsFlags(LPPROPERTYINST lpPropertyInst);", "FormatPropertyDataAsByte": "VOID WINAPIV FormatPropertyDataAsByte(LPPROPERTYINST lpPropertyInst,DWORD Base);", "FormatPropertyDataAsWord": "VOID WINAPIV FormatPropertyDataAsWord(LPPROPERTYINST lpPropertyInst,DWORD Base);", "FormatPropertyDataAsDword": "VOID WINAPIV FormatPropertyDataAsDword(LPPROPERTYINST lpPropertyInst,DWORD Base);", "FormatLabeledByteSet": "VOID WINAPIV FormatLabeledByteSet(LPPROPERTYINST lpPropertyInst);", "FormatLabeledWordSet": "VOID WINAPIV FormatLabeledWordSet(LPPROPERTYINST lpPropertyInst);", "FormatLabeledDwordSet": "VOID WINAPIV FormatLabeledDwordSet(LPPROPERTYINST lpPropertyInst);", "FormatPropertyDataAsInt64": "VOID WINAPIV FormatPropertyDataAsInt64(LPPROPERTYINST lpPropertyInst,DWORD Base);", "FormatPropertyDataAsTime": "VOID WINAPIV FormatPropertyDataAsTime(LPPROPERTYINST lpPropertyInst);", "FormatPropertyDataAsString": "VOID WINAPIV FormatPropertyDataAsString(LPPROPERTYINST lpPropertyInst);", "FormatPropertyDataAsHexString": "VOID WINAPIV FormatPropertyDataAsHexString(LPPROPERTYINST lpPropertyInst);", "ParserTemporaryLockFrame": "ULPBYTE WINAPI ParserTemporaryLockFrame(HFRAME hFrame);", "GetCCInstPtr": "LPVOID WINAPI GetCCInstPtr(VOID);", "SetCCInstPtr": "VOID WINAPI SetCCInstPtr(LPVOID lpCurCaptureInst);", "CCHeapAlloc": "LPVOID WINAPI CCHeapAlloc(DWORD dwBytes,WINBOOL bZeroInit);", "CCHeapReAlloc": "LPVOID WINAPI CCHeapReAlloc(LPVOID lpMem,DWORD dwBytes,WINBOOL bZeroInit);", "CCHeapFree": "WINBOOL WINAPI CCHeapFree(LPVOID lpMem);", "CCHeapSize": "SIZE_T WINAPI CCHeapSize(LPVOID lpMem);", "CreateHandoffTable": "DWORD WINAPI CreateHandoffTable(LPSTR secName,LPSTR iniFile,LPHANDOFFTABLE *hTable,DWORD nMaxProtocolEntries,DWORD base);", "GetProtocolFromTable": "HPROTOCOL WINAPI GetProtocolFromTable(LPHANDOFFTABLE hTable,DWORD ItemToFind,PDWORD_PTR lpInstData);", "DestroyHandoffTable": "VOID WINAPI DestroyHandoffTable(LPHANDOFFTABLE hTable);", "IsRawIPXEnabled": "BOOLEAN WINAPI IsRawIPXEnabled(LPSTR secName,LPSTR iniFile,LPSTR CurProtocol);", "GetCaptureTimeStamp": "LPSYSTEMTIME WINAPI GetCaptureTimeStamp(HCAPTURE hCapture);", "GetCaptureMacType": "DWORD WINAPI GetCaptureMacType(HCAPTURE hCapture);", "GetCaptureTotalFrames": "DWORD WINAPI GetCaptureTotalFrames(HCAPTURE hCapture);", "GetCaptureComment": "LPSTR WINAPI GetCaptureComment(HCAPTURE hCapture);", "MacTypeToAddressType": "DWORD WINAPI MacTypeToAddressType(DWORD MacType);", "AddressTypeToMacType": "DWORD WINAPI AddressTypeToMacType(DWORD AddressType);", "GetFrameDstAddressOffset": "DWORD WINAPI GetFrameDstAddressOffset(HFRAME hFrame,DWORD AddressType,LPDWORD AddressLength);", "GetFrameSrcAddressOffset": "DWORD WINAPI GetFrameSrcAddressOffset(HFRAME hFrame,DWORD AddressType,LPDWORD AddressLength);", "GetFrameCaptureHandle": "HCAPTURE WINAPI GetFrameCaptureHandle(HFRAME);", "GetFrameDestAddress": "DWORD WINAPI GetFrameDestAddress(HFRAME hFrame,LPADDRESS2 lpAddress,DWORD AddressType,DWORD Flags);", "GetFrameSourceAddress": "DWORD WINAPI GetFrameSourceAddress(HFRAME hFrame,LPADDRESS2 lpAddress,DWORD AddressType,DWORD Flags);", "GetFrameMacHeaderLength": "DWORD WINAPI GetFrameMacHeaderLength(HFRAME hFrame);", "CompareFrameDestAddress": "WINBOOL WINAPI CompareFrameDestAddress(HFRAME hFrame,LPADDRESS2 lpAddress);", "CompareFrameSourceAddress": "WINBOOL WINAPI CompareFrameSourceAddress(HFRAME hFrame,LPADDRESS2 lpAddress);", "GetFrameLength": "DWORD WINAPI GetFrameLength(HFRAME hFrame);", "GetFrameStoredLength": "DWORD WINAPI GetFrameStoredLength(HFRAME hFrame);", "GetFrameMacType": "DWORD WINAPI GetFrameMacType(HFRAME hFrame);", "GetFrameNumber": "DWORD WINAPI GetFrameNumber(HFRAME hFrame);", "GetFrameTimeStamp": "__MINGW_EXTENSION __int64 WINAPI GetFrameTimeStamp(HFRAME hFrame);", "GetFrameFromFrameHandle": "ULPFRAME WINAPI GetFrameFromFrameHandle(HFRAME hFrame);", "ModifyFrame": "__MINGW_EXTENSION HFRAME WINAPI ModifyFrame(HCAPTURE hCapture,DWORD FrameNumber,LPBYTE FrameData,DWORD FrameLength,__int64 TimeStamp);", "FindNextFrame": "HFRAME WINAPI FindNextFrame(HFRAME hCurrentFrame,LPSTR ProtocolName,LPADDRESS2 lpDestAddress,LPADDRESS2 lpSrcAddress,LPWORD ProtocolOffset,DWORD OriginalFrameNumber,DWORD nHighestFrame);", "FindPreviousFrame": "HFRAME WINAPI FindPreviousFrame(HFRAME hCurrentFrame,LPSTR ProtocolName,LPADDRESS2 lpDstAddress,LPADDRESS2 lpSrcAddress,LPWORD ProtocolOffset,DWORD OriginalFrameNumber,DWORD nLowestFrame);", "GetFrame": "HFRAME WINAPI GetFrame(HCAPTURE hCapture,DWORD FrameNumber);", "GetFrameRecognizeData": "LPRECOGNIZEDATATABLE WINAPI GetFrameRecognizeData(HFRAME hFrame);", "CreateProtocol": "HPROTOCOL WINAPI CreateProtocol(LPSTR ProtocolName,LPENTRYPOINTS lpEntryPoints,DWORD cbEntryPoints);", "DestroyProtocol": "VOID WINAPI DestroyProtocol(HPROTOCOL hProtocol);", "GetProtocolInfo": "LPPROTOCOLINFO WINAPI GetProtocolInfo(HPROTOCOL hProtocol);", "GetProperty": "HPROPERTY WINAPI GetProperty(HPROTOCOL hProtocol,LPSTR PropertyName);", "GetProtocolFromName": "HPROTOCOL WINAPI GetProtocolFromName(LPSTR ProtocolName);", "GetProtocolStartOffset": "DWORD WINAPI GetProtocolStartOffset(HFRAME hFrame,LPSTR ProtocolName);", "GetProtocolStartOffsetHandle": "DWORD WINAPI GetProtocolStartOffsetHandle(HFRAME hFrame,HPROTOCOL hProtocol);", "GetPreviousProtocolOffsetByName": "DWORD WINAPI GetPreviousProtocolOffsetByName(HFRAME hFrame,DWORD dwStartOffset,LPSTR szProtocolName,DWORD *pdwPreviousOffset);", "GetEnabledProtocols": "LPPROTOCOLTABLE WINAPI GetEnabledProtocols(HCAPTURE hCapture);", "CreatePropertyDatabase": "DWORD WINAPI CreatePropertyDatabase(HPROTOCOL hProtocol,DWORD nProperties);", "DestroyPropertyDatabase": "DWORD WINAPI DestroyPropertyDatabase(HPROTOCOL hProtocol);", "AddProperty": "HPROPERTY WINAPI AddProperty(HPROTOCOL hProtocol,LPPROPERTYINFO PropertyInfo);", "AttachPropertyInstance": "WINBOOL WINAPI AttachPropertyInstance(HFRAME hFrame,HPROPERTY hProperty,DWORD Length,ULPVOID lpData,DWORD HelpID,DWORD Level,DWORD IFlags);", "AttachPropertyInstanceEx": "WINBOOL WINAPI AttachPropertyInstanceEx(HFRAME hFrame,HPROPERTY hProperty,DWORD Length,ULPVOID lpData,DWORD ExLength,ULPVOID lpExData,DWORD HelpID,DWORD Level,DWORD IFlags);", "FindPropertyInstance": "LPPROPERTYINST WINAPI FindPropertyInstance(HFRAME hFrame,HPROPERTY hProperty);", "FindPropertyInstanceRestart": "LPPROPERTYINST WINAPI FindPropertyInstanceRestart (HFRAME hFrame,HPROPERTY hProperty,LPPROPERTYINST *lpRestartKey,WINBOOL DirForward);", "GetPropertyInfo": "LPPROPERTYINFO WINAPI GetPropertyInfo(HPROPERTY hProperty);", "GetPropertyText": "LPSTR WINAPI GetPropertyText(HFRAME hFrame,LPPROPERTYINST lpPI,LPSTR szBuffer,DWORD BufferSize);", "ResetPropertyInstanceLength": "DWORD WINAPI ResetPropertyInstanceLength(LPPROPERTYINST lpProp,WORD nOrgLen,WORD nNewLen);", "GetCaptureCommentFromFilename": "DWORD WINAPI GetCaptureCommentFromFilename(LPSTR lpFilename,LPSTR lpComment,DWORD BufferSize);", "CompareAddresses": "int WINAPI CompareAddresses(LPADDRESS2 lpAddress1,LPADDRESS2 lpAddress2);", "FormatPropertyInstance": "DWORD WINAPIV FormatPropertyInstance(LPPROPERTYINST lpPropertyInst,...);", "AdjustSystemTime": "__MINGW_EXTENSION SYSTEMTIME *WINAPI AdjustSystemTime(SYSTEMTIME *SystemTime,__int64 TimeDelta);", "NMRtlIpv6AddressToStringA": "LPSTR WINAPI NMRtlIpv6AddressToStringA(const BYTE IP6Addr[],LPSTR S);", "NMRtlIpv6AddressToStringW": "LPWSTR WINAPI NMRtlIpv6AddressToStringW(const BYTE IP6Addr[],LPWSTR S);", "NMRtlIpv6StringToAddressA": "ULONG WINAPI NMRtlIpv6StringToAddressA(LPCSTR S,LPCSTR *Terminator,BYTE IP6Addr[]);", "NMRtlIpv6StringToAddressW": "ULONG WINAPI NMRtlIpv6StringToAddressW(LPCWSTR S,LPCWSTR *Terminator,BYTE IP6Addr[]);", "ExpertGetFrame": "DWORD WINAPI ExpertGetFrame(HEXPERTKEY hExpertKey,DWORD Direction,DWORD RequestFlags,DWORD RequestedFrameNumber,HFILTER hFilter,LPEXPERTFRAMEDESCRIPTOR pEFrameDescriptor);", "ExpertAllocMemory": "LPVOID WINAPI ExpertAllocMemory(HEXPERTKEY hExpertKey,SIZE_T nBytes,DWORD *pError);", "ExpertReallocMemory": "LPVOID WINAPI ExpertReallocMemory(HEXPERTKEY hExpertKey,LPVOID pOriginalMemory,SIZE_T nBytes,DWORD *pError);", "ExpertFreeMemory": "DWORD WINAPI ExpertFreeMemory(HEXPERTKEY hExpertKey,LPVOID pOriginalMemory);", "ExpertMemorySize": "SIZE_T WINAPI ExpertMemorySize(HEXPERTKEY hExpertKey,LPVOID pOriginalMemory);", "ExpertIndicateStatus": "DWORD WINAPI ExpertIndicateStatus(HEXPERTKEY hExpertKey,EXPERTSTATUSENUMERATION Status,DWORD SubStatus,const char *szText,LONG PercentDone);", "ExpertSubmitEvent": "DWORD WINAPI ExpertSubmitEvent(HEXPERTKEY hExpertKey,PNMEVENTDATA pExpertEvent);", "ExpertGetStartupInfo": "DWORD WINAPI ExpertGetStartupInfo(HEXPERTKEY hExpertKey,PEXPERTSTARTUPINFO pExpertStartupInfo);", "IDelaydC_Connect_Proxy": "HRESULT WINAPI IDelaydC_Connect_Proxy(IDelaydC *This,HBLOB hInputBlob,LPVOID StatusCallbackProc,LPVOID UserContext,HBLOB hErrorBlob);", "IDelaydC_Disconnect_Proxy": "HRESULT WINAPI IDelaydC_Disconnect_Proxy(IDelaydC *This);", "IDelaydC_QueryStatus_Proxy": "HRESULT WINAPI IDelaydC_QueryStatus_Proxy(IDelaydC *This,NETWORKSTATUS *pNetworkStatus);", "IDelaydC_Configure_Proxy": "HRESULT WINAPI IDelaydC_Configure_Proxy(IDelaydC *This,HBLOB hConfigurationBlob,HBLOB hErrorBlob);", "IDelaydC_Start_Proxy": "HRESULT WINAPI IDelaydC_Start_Proxy(IDelaydC *This,char *pFileName);", "IDelaydC_Pause_Proxy": "HRESULT WINAPI IDelaydC_Pause_Proxy(IDelaydC *This);", "IDelaydC_Resume_Proxy": "HRESULT WINAPI IDelaydC_Resume_Proxy(IDelaydC *This);", "IDelaydC_Stop_Proxy": "HRESULT WINAPI IDelaydC_Stop_Proxy(IDelaydC *This,LPSTATISTICS lpStats);", "IDelaydC_GetControlState_Proxy": "HRESULT WINAPI IDelaydC_GetControlState_Proxy(IDelaydC *This,WINBOOL *IsRunnning,WINBOOL *IsPaused);", "IDelaydC_GetTotalStatistics_Proxy": "HRESULT WINAPI IDelaydC_GetTotalStatistics_Proxy(IDelaydC *This,LPSTATISTICS lpStats,WINBOOL fClearAfterReading);", "IDelaydC_GetConversationStatistics_Proxy": "HRESULT WINAPI IDelaydC_GetConversationStatistics_Proxy(IDelaydC *This,DWORD *nSessions,LPSESSIONSTATS lpSessionStats,DWORD *nStations,LPSTATIONSTATS lpStationStats,WINBOOL fClearAfterReading);", "IDelaydC_InsertSpecialFrame_Proxy": "HRESULT WINAPI IDelaydC_InsertSpecialFrame_Proxy(IDelaydC *This,DWORD FrameType,DWORD Flags,BYTE *pUserData,DWORD UserDataLength);", "IDelaydC_QueryStations_Proxy": "HRESULT WINAPI IDelaydC_QueryStations_Proxy(IDelaydC *This,QUERYTABLE *lpQueryTable);", "IRTC_Connect_Proxy": "HRESULT WINAPI IRTC_Connect_Proxy(IRTC *This,HBLOB hInputBlob,LPVOID StatusCallbackProc,LPVOID FramesCallbackProc,LPVOID UserContext,HBLOB hErrorBlob);", "IRTC_Disconnect_Proxy": "HRESULT WINAPI IRTC_Disconnect_Proxy(IRTC *This);", "IRTC_QueryStatus_Proxy": "HRESULT WINAPI IRTC_QueryStatus_Proxy(IRTC *This,NETWORKSTATUS *pNetworkStatus);", "IRTC_Configure_Proxy": "HRESULT WINAPI IRTC_Configure_Proxy(IRTC *This,HBLOB hConfigurationBlob,HBLOB hErrorBlob);", "IRTC_Start_Proxy": "HRESULT WINAPI IRTC_Start_Proxy(IRTC *This);", "IRTC_Pause_Proxy": "HRESULT WINAPI IRTC_Pause_Proxy(IRTC *This);", "IRTC_Resume_Proxy": "HRESULT WINAPI IRTC_Resume_Proxy(IRTC *This);", "IRTC_Stop_Proxy": "HRESULT WINAPI IRTC_Stop_Proxy(IRTC *This);", "IRTC_GetControlState_Proxy": "HRESULT WINAPI IRTC_GetControlState_Proxy(IRTC *This,WINBOOL *IsRunnning,WINBOOL *IsPaused);", "IRTC_GetTotalStatistics_Proxy": "HRESULT WINAPI IRTC_GetTotalStatistics_Proxy(IRTC *This,LPSTATISTICS lpStats,WINBOOL fClearAfterReading);", "IRTC_GetConversationStatistics_Proxy": "HRESULT WINAPI IRTC_GetConversationStatistics_Proxy(IRTC *This,DWORD *nSessions,LPSESSIONSTATS lpSessionStats,DWORD *nStations,LPSTATIONSTATS lpStationStats,WINBOOL fClearAfterReading);", "IRTC_InsertSpecialFrame_Proxy": "HRESULT WINAPI IRTC_InsertSpecialFrame_Proxy(IRTC *This,DWORD FrameType,DWORD Flags,BYTE *pUserData,DWORD UserDataLength);", "IRTC_QueryStations_Proxy": "HRESULT WINAPI IRTC_QueryStations_Proxy(IRTC *This,QUERYTABLE *lpQueryTable);", "IStats_Connect_Proxy": "HRESULT WINAPI IStats_Connect_Proxy(IStats *This,HBLOB hInputBlob,LPVOID StatusCallbackProc,LPVOID UserContext,HBLOB hErrorBlob);", "IStats_Disconnect_Proxy": "HRESULT WINAPI IStats_Disconnect_Proxy(IStats *This);", "IStats_QueryStatus_Proxy": "HRESULT WINAPI IStats_QueryStatus_Proxy(IStats *This,NETWORKSTATUS *pNetworkStatus);", "IStats_Configure_Proxy": "HRESULT WINAPI IStats_Configure_Proxy(IStats *This,HBLOB hConfigurationBlob,HBLOB hErrorBlob);", "IStats_Start_Proxy": "HRESULT WINAPI IStats_Start_Proxy(IStats *This);", "IStats_Pause_Proxy": "HRESULT WINAPI IStats_Pause_Proxy(IStats *This);", "IStats_Resume_Proxy": "HRESULT WINAPI IStats_Resume_Proxy(IStats *This);", "IStats_Stop_Proxy": "HRESULT WINAPI IStats_Stop_Proxy(IStats *This);", "IStats_GetControlState_Proxy": "HRESULT WINAPI IStats_GetControlState_Proxy(IStats *This,WINBOOL *IsRunnning,WINBOOL *IsPaused);", "IStats_GetTotalStatistics_Proxy": "HRESULT WINAPI IStats_GetTotalStatistics_Proxy(IStats *This,LPSTATISTICS lpStats,WINBOOL fClearAfterReading);", "IStats_GetConversationStatistics_Proxy": "HRESULT WINAPI IStats_GetConversationStatistics_Proxy(IStats *This,DWORD *nSessions,LPSESSIONSTATS lpSessionStats,DWORD *nStations,LPSTATIONSTATS lpStationStats,WINBOOL fClearAfterReading);", "IStats_InsertSpecialFrame_Proxy": "HRESULT WINAPI IStats_InsertSpecialFrame_Proxy(IStats *This,DWORD FrameType,DWORD Flags,BYTE *pUserData,DWORD UserDataLength);", "IStats_QueryStations_Proxy": "HRESULT WINAPI IStats_QueryStations_Proxy(IStats *This,QUERYTABLE *lpQueryTable);", "MsiCloseHandle": "UINT WINAPI MsiCloseHandle(MSIHANDLE hAny);", "MsiCloseAllHandles": "UINT WINAPI MsiCloseAllHandles();", "MsiSetInternalUI": "INSTALLUILEVEL WINAPI MsiSetInternalUI(INSTALLUILEVEL dwUILevel,HWND *phWnd);", "MsiSetExternalUIA": "INSTALLUI_HANDLERA WINAPI MsiSetExternalUIA(INSTALLUI_HANDLERA puiHandler,DWORD dwMessageFilter,LPVOID pvContext);", "MsiSetExternalUIW": "INSTALLUI_HANDLERW WINAPI MsiSetExternalUIW(INSTALLUI_HANDLERW puiHandler,DWORD dwMessageFilter,LPVOID pvContext);", "MsiSetExternalUIRecord": "UINT WINAPI MsiSetExternalUIRecord(INSTALLUI_HANDLER_RECORD puiHandler,DWORD dwMessageFilter,LPVOID pvContext,PINSTALLUI_HANDLER_RECORD ppuiPrevHandler);", "MsiEnableLogA": "UINT WINAPI MsiEnableLogA(DWORD dwLogMode,LPCSTR szLogFile,DWORD dwLogAttributes);", "MsiEnableLogW": "UINT WINAPI MsiEnableLogW(DWORD dwLogMode,LPCWSTR szLogFile,DWORD dwLogAttributes);", "MsiQueryProductStateA": "INSTALLSTATE WINAPI MsiQueryProductStateA(LPCSTR szProduct);", "MsiQueryProductStateW": "INSTALLSTATE WINAPI MsiQueryProductStateW(LPCWSTR szProduct);", "MsiGetProductInfoA": "UINT WINAPI MsiGetProductInfoA(LPCSTR szProduct,LPCSTR szAttribute,LPSTR lpValueBuf,DWORD *pcchValueBuf);", "MsiGetProductInfoW": "UINT WINAPI MsiGetProductInfoW(LPCWSTR szProduct,LPCWSTR szAttribute,LPWSTR lpValueBuf,DWORD *pcchValueBuf);", "MsiGetProductInfoExA": "UINT WINAPI MsiGetProductInfoExA(LPCSTR szProductCode,LPCSTR szUserSid,MSIINSTALLCONTEXT dwContext,LPCSTR szProperty,LPSTR szValue,LPDWORD pcchValue);", "MsiGetProductInfoExW": "UINT WINAPI MsiGetProductInfoExW(LPCWSTR szProductCode,LPCWSTR szUserSid,MSIINSTALLCONTEXT dwContext,LPCWSTR szProperty,LPWSTR szValue,LPDWORD pcchValue);", "MsiInstallProductA": "UINT WINAPI MsiInstallProductA(LPCSTR szPackagePath,LPCSTR szCommandLine);", "MsiInstallProductW": "UINT WINAPI MsiInstallProductW(LPCWSTR szPackagePath,LPCWSTR szCommandLine);", "MsiConfigureProductA": "UINT WINAPI MsiConfigureProductA(LPCSTR szProduct,int iInstallLevel,INSTALLSTATE eInstallState);", "MsiConfigureProductW": "UINT WINAPI MsiConfigureProductW(LPCWSTR szProduct,int iInstallLevel,INSTALLSTATE eInstallState);", "MsiConfigureProductExA": "UINT WINAPI MsiConfigureProductExA(LPCSTR szProduct,int iInstallLevel,INSTALLSTATE eInstallState,LPCSTR szCommandLine);", "MsiConfigureProductExW": "UINT WINAPI MsiConfigureProductExW(LPCWSTR szProduct,int iInstallLevel,INSTALLSTATE eInstallState,LPCWSTR szCommandLine);", "MsiReinstallProductA": "UINT WINAPI MsiReinstallProductA(LPCSTR szProduct,DWORD szReinstallMode);", "MsiReinstallProductW": "UINT WINAPI MsiReinstallProductW(LPCWSTR szProduct,DWORD szReinstallMode);", "MsiAdvertiseProductExA": "UINT WINAPI MsiAdvertiseProductExA(LPCSTR szPackagePath,LPCSTR szScriptfilePath,LPCSTR szTransforms,LANGID lgidLanguage,DWORD dwPlatform,DWORD dwOptions);", "MsiAdvertiseProductExW": "UINT WINAPI MsiAdvertiseProductExW(LPCWSTR szPackagePath,LPCWSTR szScriptfilePath,LPCWSTR szTransforms,LANGID lgidLanguage,DWORD dwPlatform,DWORD dwOptions);", "MsiAdvertiseProductA": "UINT WINAPI MsiAdvertiseProductA(LPCSTR szPackagePath,LPCSTR szScriptfilePath,LPCSTR szTransforms,LANGID lgidLanguage);", "MsiAdvertiseProductW": "UINT WINAPI MsiAdvertiseProductW(LPCWSTR szPackagePath,LPCWSTR szScriptfilePath,LPCWSTR szTransforms,LANGID lgidLanguage);", "MsiProcessAdvertiseScriptA": "UINT WINAPI MsiProcessAdvertiseScriptA(LPCSTR szScriptFile,LPCSTR szIconFolder,HKEY hRegData,WINBOOL fShortcuts,WINBOOL fRemoveItems);", "MsiProcessAdvertiseScriptW": "UINT WINAPI MsiProcessAdvertiseScriptW(LPCWSTR szScriptFile,LPCWSTR szIconFolder,HKEY hRegData,WINBOOL fShortcuts,WINBOOL fRemoveItems);", "MsiAdvertiseScriptA": "UINT WINAPI MsiAdvertiseScriptA(LPCSTR szScriptFile,DWORD dwFlags,PHKEY phRegData,WINBOOL fRemoveItems);", "MsiAdvertiseScriptW": "UINT WINAPI MsiAdvertiseScriptW(LPCWSTR szScriptFile,DWORD dwFlags,PHKEY phRegData,WINBOOL fRemoveItems);", "MsiGetProductInfoFromScriptA": "UINT WINAPI MsiGetProductInfoFromScriptA(LPCSTR szScriptFile,LPSTR lpProductBuf39,LANGID *plgidLanguage,DWORD *pdwVersion,LPSTR lpNameBuf,DWORD *pcchNameBuf,LPSTR lpPackageBuf,DWORD *pcchPackageBuf);", "MsiGetProductInfoFromScriptW": "UINT WINAPI MsiGetProductInfoFromScriptW(LPCWSTR szScriptFile,LPWSTR lpProductBuf39,LANGID *plgidLanguage,DWORD *pdwVersion,LPWSTR lpNameBuf,DWORD *pcchNameBuf,LPWSTR lpPackageBuf,DWORD *pcchPackageBuf);", "MsiGetProductCodeA": "UINT WINAPI MsiGetProductCodeA(LPCSTR szComponent,LPSTR lpBuf39);", "MsiGetProductCodeW": "UINT WINAPI MsiGetProductCodeW(LPCWSTR szComponent,LPWSTR lpBuf39);", "MsiGetUserInfoA": "USERINFOSTATE WINAPI MsiGetUserInfoA(LPCSTR szProduct,LPSTR lpUserNameBuf,DWORD *pcchUserNameBuf,LPSTR lpOrgNameBuf,DWORD *pcchOrgNameBuf,LPSTR lpSerialBuf,DWORD *pcchSerialBuf);", "MsiGetUserInfoW": "USERINFOSTATE WINAPI MsiGetUserInfoW(LPCWSTR szProduct,LPWSTR lpUserNameBuf,DWORD *pcchUserNameBuf,LPWSTR lpOrgNameBuf,DWORD *pcchOrgNameBuf,LPWSTR lpSerialBuf,DWORD *pcchSerialBuf);", "MsiCollectUserInfoA": "UINT WINAPI MsiCollectUserInfoA(LPCSTR szProduct);", "MsiCollectUserInfoW": "UINT WINAPI MsiCollectUserInfoW(LPCWSTR szProduct);", "MsiApplyPatchA": "UINT WINAPI MsiApplyPatchA(LPCSTR szPatchPackage,LPCSTR szInstallPackage,INSTALLTYPE eInstallType,LPCSTR szCommandLine);", "MsiApplyPatchW": "UINT WINAPI MsiApplyPatchW(LPCWSTR szPatchPackage,LPCWSTR szInstallPackage,INSTALLTYPE eInstallType,LPCWSTR szCommandLine);", "MsiGetPatchInfoA": "UINT WINAPI MsiGetPatchInfoA(LPCSTR szPatch,LPCSTR szAttribute,LPSTR lpValueBuf,DWORD *pcchValueBuf);", "MsiGetPatchInfoW": "UINT WINAPI MsiGetPatchInfoW(LPCWSTR szPatch,LPCWSTR szAttribute,LPWSTR lpValueBuf,DWORD *pcchValueBuf);", "MsiEnumPatchesA": "UINT WINAPI MsiEnumPatchesA(LPCSTR szProduct,DWORD iPatchIndex,LPSTR lpPatchBuf,LPSTR lpTransformsBuf,DWORD *pcchTransformsBuf);", "MsiEnumPatchesW": "UINT WINAPI MsiEnumPatchesW(LPCWSTR szProduct,DWORD iPatchIndex,LPWSTR lpPatchBuf,LPWSTR lpTransformsBuf,DWORD *pcchTransformsBuf);", "MsiRemovePatchesA": "UINT WINAPI MsiRemovePatchesA(LPCSTR szPatchList,LPCSTR szProductCode,INSTALLTYPE eUninstallType,LPCSTR szPropertyList);", "MsiRemovePatchesW": "UINT WINAPI MsiRemovePatchesW(LPCWSTR szPatchList,LPCWSTR szProductCode,INSTALLTYPE eUninstallType,LPCWSTR szPropertyList);", "MsiExtractPatchXMLDataA": "UINT WINAPI MsiExtractPatchXMLDataA(LPCSTR szPatchPath,DWORD dwReserved,LPSTR szXMLData,DWORD *pcchXMLData);", "MsiExtractPatchXMLDataW": "UINT WINAPI MsiExtractPatchXMLDataW(LPCWSTR szPatchPath,DWORD dwReserved,LPWSTR szXMLData,DWORD *pcchXMLData);", "MsiGetPatchInfoExA": "UINT WINAPI MsiGetPatchInfoExA(LPCSTR szPatchCode,LPCSTR szProductCode,LPCSTR szUserSid,MSIINSTALLCONTEXT dwContext,LPCSTR szProperty,LPSTR lpValue,DWORD *pcchValue);", "MsiGetPatchInfoExW": "UINT WINAPI MsiGetPatchInfoExW(LPCWSTR szPatchCode,LPCWSTR szProductCode,LPCWSTR szUserSid,MSIINSTALLCONTEXT dwContext,LPCWSTR szProperty,LPWSTR lpValue,DWORD *pcchValue);", "MsiApplyMultiplePatchesA": "UINT WINAPI MsiApplyMultiplePatchesA(LPCSTR szPatchPackages,LPCSTR szProductCode,LPCSTR szPropertiesList);", "MsiApplyMultiplePatchesW": "UINT WINAPI MsiApplyMultiplePatchesW(LPCWSTR szPatchPackages,LPCWSTR szProductCode,LPCWSTR szPropertiesList);", "MsiDeterminePatchSequenceA": "UINT WINAPI MsiDeterminePatchSequenceA(LPCSTR szProductCode,LPCSTR szUserSid,MSIINSTALLCONTEXT dwContext,DWORD cPatchInfo,PMSIPATCHSEQUENCEINFOA pPatchInfo);", "MsiDeterminePatchSequenceW": "UINT WINAPI MsiDeterminePatchSequenceW(LPCWSTR szProductCode,LPCWSTR szUserSid,MSIINSTALLCONTEXT dwContext,DWORD cPatchInfo,PMSIPATCHSEQUENCEINFOW pPatchInfo);", "MsiDetermineApplicablePatchesA": "UINT WINAPI MsiDetermineApplicablePatchesA(LPCSTR szProductPackagePath,DWORD cPatchInfo,PMSIPATCHSEQUENCEINFOA pPatchInfo);", "MsiDetermineApplicablePatchesW": "UINT WINAPI MsiDetermineApplicablePatchesW(LPCWSTR szProductPackagePath,DWORD cPatchInfo,PMSIPATCHSEQUENCEINFOW pPatchInfo);", "MsiEnumPatchesExA": "UINT WINAPI MsiEnumPatchesExA(LPCSTR szProductCode,LPCSTR szUserSid,DWORD dwContext,DWORD dwFilter,DWORD dwIndex,CHAR szPatchCode[39],CHAR szTargetProductCode[39],MSIINSTALLCONTEXT *pdwTargetProductContext,LPSTR szTargetUserSid,LPDWORD pcchTargetUserSid);", "MsiEnumPatchesExW": "UINT WINAPI MsiEnumPatchesExW(LPCWSTR szProductCode,LPCWSTR szUserSid,DWORD dwContext,DWORD dwFilter,DWORD dwIndex,WCHAR szPatchCode[39],WCHAR szTargetProductCode[39],MSIINSTALLCONTEXT *pdwTargetProductContext,LPWSTR szTargetUserSid,LPDWORD pcchTargetUserSid);", "MsiQueryFeatureStateA": "INSTALLSTATE WINAPI MsiQueryFeatureStateA(LPCSTR szProduct,LPCSTR szFeature);", "MsiQueryFeatureStateW": "INSTALLSTATE WINAPI MsiQueryFeatureStateW(LPCWSTR szProduct,LPCWSTR szFeature);", "MsiQueryFeatureStateExA": "UINT WINAPI MsiQueryFeatureStateExA(LPCSTR szProductCode,LPCSTR szUserSid,MSIINSTALLCONTEXT dwContext,LPCSTR szFeature,INSTALLSTATE *pdwState);", "MsiQueryFeatureStateExW": "UINT WINAPI MsiQueryFeatureStateExW(LPCWSTR szProductCode,LPCWSTR szUserSid,MSIINSTALLCONTEXT dwContext,LPCWSTR szFeature,INSTALLSTATE *pdwState);", "MsiUseFeatureA": "INSTALLSTATE WINAPI MsiUseFeatureA(LPCSTR szProduct,LPCSTR szFeature);", "MsiUseFeatureW": "INSTALLSTATE WINAPI MsiUseFeatureW(LPCWSTR szProduct,LPCWSTR szFeature);", "MsiUseFeatureExA": "INSTALLSTATE WINAPI MsiUseFeatureExA(LPCSTR szProduct,LPCSTR szFeature,DWORD dwInstallMode,DWORD dwReserved);", "MsiUseFeatureExW": "INSTALLSTATE WINAPI MsiUseFeatureExW(LPCWSTR szProduct,LPCWSTR szFeature,DWORD dwInstallMode,DWORD dwReserved);", "MsiGetFeatureUsageA": "UINT WINAPI MsiGetFeatureUsageA(LPCSTR szProduct,LPCSTR szFeature,DWORD *pdwUseCount,WORD *pwDateUsed);", "MsiGetFeatureUsageW": "UINT WINAPI MsiGetFeatureUsageW(LPCWSTR szProduct,LPCWSTR szFeature,DWORD *pdwUseCount,WORD *pwDateUsed);", "MsiConfigureFeatureA": "UINT WINAPI MsiConfigureFeatureA(LPCSTR szProduct,LPCSTR szFeature,INSTALLSTATE eInstallState);", "MsiConfigureFeatureW": "UINT WINAPI MsiConfigureFeatureW(LPCWSTR szProduct,LPCWSTR szFeature,INSTALLSTATE eInstallState);", "MsiReinstallFeatureA": "UINT WINAPI MsiReinstallFeatureA(LPCSTR szProduct,LPCSTR szFeature,DWORD dwReinstallMode);", "MsiReinstallFeatureW": "UINT WINAPI MsiReinstallFeatureW(LPCWSTR szProduct,LPCWSTR szFeature,DWORD dwReinstallMode);", "MsiProvideComponentA": "UINT WINAPI MsiProvideComponentA(LPCSTR szProduct,LPCSTR szFeature,LPCSTR szComponent,DWORD dwInstallMode,LPSTR lpPathBuf,DWORD *pcchPathBuf);", "MsiProvideComponentW": "UINT WINAPI MsiProvideComponentW(LPCWSTR szProduct,LPCWSTR szFeature,LPCWSTR szComponent,DWORD dwInstallMode,LPWSTR lpPathBuf,DWORD *pcchPathBuf);", "MsiProvideQualifiedComponentA": "UINT WINAPI MsiProvideQualifiedComponentA(LPCSTR szCategory,LPCSTR szQualifier,DWORD dwInstallMode,LPSTR lpPathBuf,DWORD *pcchPathBuf);", "MsiProvideQualifiedComponentW": "UINT WINAPI MsiProvideQualifiedComponentW(LPCWSTR szCategory,LPCWSTR szQualifier,DWORD dwInstallMode,LPWSTR lpPathBuf,DWORD *pcchPathBuf);", "MsiProvideQualifiedComponentExA": "UINT WINAPI MsiProvideQualifiedComponentExA(LPCSTR szCategory,LPCSTR szQualifier,DWORD dwInstallMode,LPCSTR szProduct,DWORD dwUnused1,DWORD dwUnused2,LPSTR lpPathBuf,DWORD *pcchPathBuf);", "MsiProvideQualifiedComponentExW": "UINT WINAPI MsiProvideQualifiedComponentExW(LPCWSTR szCategory,LPCWSTR szQualifier,DWORD dwInstallMode,LPCWSTR szProduct,DWORD dwUnused1,DWORD dwUnused2,LPWSTR lpPathBuf,DWORD *pcchPathBuf);", "MsiGetComponentPathA": "INSTALLSTATE WINAPI MsiGetComponentPathA(LPCSTR szProduct,LPCSTR szComponent,LPSTR lpPathBuf,DWORD *pcchBuf);", "MsiGetComponentPathW": "INSTALLSTATE WINAPI MsiGetComponentPathW(LPCWSTR szProduct,LPCWSTR szComponent,LPWSTR lpPathBuf,DWORD *pcchBuf);", "MsiProvideAssemblyA": "UINT WINAPI MsiProvideAssemblyA(LPCSTR szAssemblyName,LPCSTR szAppContext,DWORD dwInstallMode,DWORD dwAssemblyInfo,LPSTR lpPathBuf,DWORD *pcchPathBuf);", "MsiProvideAssemblyW": "UINT WINAPI MsiProvideAssemblyW(LPCWSTR szAssemblyName,LPCWSTR szAppContext,DWORD dwInstallMode,DWORD dwAssemblyInfo,LPWSTR lpPathBuf,DWORD *pcchPathBuf);", "MsiQueryComponentStateA": "UINT WINAPI MsiQueryComponentStateA(LPCSTR szProductCode,LPCSTR szUserSid,MSIINSTALLCONTEXT dwContext,LPCSTR szComponentCode,INSTALLSTATE *pdwState);", "MsiQueryComponentStateW": "UINT WINAPI MsiQueryComponentStateW(LPCWSTR szProductCode,LPCWSTR szUserSid,MSIINSTALLCONTEXT dwContext,LPCWSTR szComponentCode,INSTALLSTATE *pdwState);", "MsiEnumProductsA": "UINT WINAPI MsiEnumProductsA(DWORD iProductIndex,LPSTR lpProductBuf);", "MsiEnumProductsW": "UINT WINAPI MsiEnumProductsW(DWORD iProductIndex,LPWSTR lpProductBuf);", "MsiEnumProductsExA": "UINT WINAPI MsiEnumProductsExA(LPCSTR szProductCode,LPCSTR szUserSid,DWORD dwContext,DWORD dwIndex,CHAR szInstalledProductCode[39],MSIINSTALLCONTEXT *pdwInstalledContext,LPSTR szSid,LPDWORD pcchSid);", "MsiEnumProductsExW": "UINT WINAPI MsiEnumProductsExW(LPCWSTR szProductCode,LPCWSTR szUserSid,DWORD dwContext,DWORD dwIndex,WCHAR szInstalledProductCode[39],MSIINSTALLCONTEXT *pdwInstalledContext,LPWSTR szSid,LPDWORD pcchSid);", "MsiEnumRelatedProductsA": "UINT WINAPI MsiEnumRelatedProductsA(LPCSTR lpUpgradeCode,DWORD dwReserved,DWORD iProductIndex,LPSTR lpProductBuf);", "MsiEnumRelatedProductsW": "UINT WINAPI MsiEnumRelatedProductsW(LPCWSTR lpUpgradeCode,DWORD dwReserved,DWORD iProductIndex,LPWSTR lpProductBuf);", "MsiEnumFeaturesA": "UINT WINAPI MsiEnumFeaturesA(LPCSTR szProduct,DWORD iFeatureIndex,LPSTR lpFeatureBuf,LPSTR lpParentBuf);", "MsiEnumFeaturesW": "UINT WINAPI MsiEnumFeaturesW(LPCWSTR szProduct,DWORD iFeatureIndex,LPWSTR lpFeatureBuf,LPWSTR lpParentBuf);", "MsiEnumComponentsA": "UINT WINAPI MsiEnumComponentsA(DWORD iComponentIndex,LPSTR lpComponentBuf);", "MsiEnumComponentsW": "UINT WINAPI MsiEnumComponentsW(DWORD iComponentIndex,LPWSTR lpComponentBuf);", "MsiEnumClientsA": "UINT WINAPI MsiEnumClientsA(LPCSTR szComponent,DWORD iProductIndex,LPSTR lpProductBuf);", "MsiEnumClientsW": "UINT WINAPI MsiEnumClientsW(LPCWSTR szComponent,DWORD iProductIndex,LPWSTR lpProductBuf);", "MsiEnumComponentQualifiersA": "UINT WINAPI MsiEnumComponentQualifiersA(LPCSTR szComponent,DWORD iIndex,LPSTR lpQualifierBuf,DWORD *pcchQualifierBuf,LPSTR lpApplicationDataBuf,DWORD *pcchApplicationDataBuf);", "MsiEnumComponentQualifiersW": "UINT WINAPI MsiEnumComponentQualifiersW(LPCWSTR szComponent,DWORD iIndex,LPWSTR lpQualifierBuf,DWORD *pcchQualifierBuf,LPWSTR lpApplicationDataBuf,DWORD *pcchApplicationDataBuf);", "MsiOpenProductA": "UINT WINAPI MsiOpenProductA(LPCSTR szProduct,MSIHANDLE *hProduct);", "MsiOpenProductW": "UINT WINAPI MsiOpenProductW(LPCWSTR szProduct,MSIHANDLE *hProduct);", "MsiOpenPackageA": "UINT WINAPI MsiOpenPackageA(LPCSTR szPackagePath,MSIHANDLE *hProduct);", "MsiOpenPackageW": "UINT WINAPI MsiOpenPackageW(LPCWSTR szPackagePath,MSIHANDLE *hProduct);", "MsiOpenPackageExA": "UINT WINAPI MsiOpenPackageExA(LPCSTR szPackagePath,DWORD dwOptions,MSIHANDLE *hProduct);", "MsiOpenPackageExW": "UINT WINAPI MsiOpenPackageExW(LPCWSTR szPackagePath,DWORD dwOptions,MSIHANDLE *hProduct);", "MsiGetPatchFileListA": "UINT WINAPI MsiGetPatchFileListA(LPCSTR szProductCode, LPCSTR szPatchPackages, LPDWORD pcFiles, MSIHANDLE **pphFileRecords);", "MsiGetPatchFileListW": "UINT WINAPI MsiGetPatchFileListW(LPCWSTR szProductCode, LPCWSTR szPatchPackages, LPDWORD pcFiles, MSIHANDLE **pphFileRecords);", "MsiGetProductPropertyA": "UINT WINAPI MsiGetProductPropertyA(MSIHANDLE hProduct,LPCSTR szProperty,LPSTR lpValueBuf,DWORD *pcchValueBuf);", "MsiGetProductPropertyW": "UINT WINAPI MsiGetProductPropertyW(MSIHANDLE hProduct,LPCWSTR szProperty,LPWSTR lpValueBuf,DWORD *pcchValueBuf);", "MsiVerifyPackageA": "UINT WINAPI MsiVerifyPackageA(LPCSTR szPackagePath);", "MsiVerifyPackageW": "UINT WINAPI MsiVerifyPackageW(LPCWSTR szPackagePath);", "MsiGetFeatureInfoA": "UINT WINAPI MsiGetFeatureInfoA(MSIHANDLE hProduct,LPCSTR szFeature,DWORD *lpAttributes,LPSTR lpTitleBuf,DWORD *pcchTitleBuf,LPSTR lpHelpBuf,DWORD *pcchHelpBuf);", "MsiGetFeatureInfoW": "UINT WINAPI MsiGetFeatureInfoW(MSIHANDLE hProduct,LPCWSTR szFeature,DWORD *lpAttributes,LPWSTR lpTitleBuf,DWORD *pcchTitleBuf,LPWSTR lpHelpBuf,DWORD *pcchHelpBuf);", "MsiInstallMissingComponentA": "UINT WINAPI MsiInstallMissingComponentA(LPCSTR szProduct,LPCSTR szComponent,INSTALLSTATE eInstallState);", "MsiInstallMissingComponentW": "UINT WINAPI MsiInstallMissingComponentW(LPCWSTR szProduct,LPCWSTR szComponent,INSTALLSTATE eInstallState);", "MsiInstallMissingFileA": "UINT WINAPI MsiInstallMissingFileA(LPCSTR szProduct,LPCSTR szFile);", "MsiInstallMissingFileW": "UINT WINAPI MsiInstallMissingFileW(LPCWSTR szProduct,LPCWSTR szFile);", "MsiLocateComponentA": "INSTALLSTATE WINAPI MsiLocateComponentA(LPCSTR szComponent,LPSTR lpPathBuf,DWORD *pcchBuf);", "MsiLocateComponentW": "INSTALLSTATE WINAPI MsiLocateComponentW(LPCWSTR szComponent,LPWSTR lpPathBuf,DWORD *pcchBuf);", "MsiSourceListClearAllA": "UINT WINAPI MsiSourceListClearAllA(LPCSTR szProduct,LPCSTR szUserName,DWORD dwReserved);", "MsiSourceListClearAllW": "UINT WINAPI MsiSourceListClearAllW(LPCWSTR szProduct,LPCWSTR szUserName,DWORD dwReserved);", "MsiSourceListAddSourceA": "UINT WINAPI MsiSourceListAddSourceA(LPCSTR szProduct,LPCSTR szUserName,DWORD dwReserved,LPCSTR szSource);", "MsiSourceListAddSourceW": "UINT WINAPI MsiSourceListAddSourceW(LPCWSTR szProduct,LPCWSTR szUserName,DWORD dwReserved,LPCWSTR szSource);", "MsiSourceListForceResolutionA": "UINT WINAPI MsiSourceListForceResolutionA(LPCSTR szProduct,LPCSTR szUserName,DWORD dwReserved);", "MsiSourceListForceResolutionW": "UINT WINAPI MsiSourceListForceResolutionW(LPCWSTR szProduct,LPCWSTR szUserName,DWORD dwReserved);", "MsiSourceListAddSourceExA": "UINT WINAPI MsiSourceListAddSourceExA(LPCSTR szProductCodeOrPatchCode,LPCSTR szUserSid,MSIINSTALLCONTEXT dwContext,DWORD dwOptions,LPCSTR szSource,DWORD dwIndex);", "MsiSourceListAddSourceExW": "UINT WINAPI MsiSourceListAddSourceExW(LPCWSTR szProductCodeOrPatchCode,LPCWSTR szUserSid,MSIINSTALLCONTEXT dwContext,DWORD dwOptions,LPCWSTR szSource,DWORD dwIndex);", "MsiSourceListAddMediaDiskA": "UINT WINAPI MsiSourceListAddMediaDiskA(LPCSTR szProductCodeOrPatchCode,LPCSTR szUserSid,MSIINSTALLCONTEXT dwContext,DWORD dwOptions,DWORD dwDiskId,LPCSTR szVolumeLabel,LPCSTR szDiskPrompt);", "MsiSourceListAddMediaDiskW": "UINT WINAPI MsiSourceListAddMediaDiskW(LPCWSTR szProductCodeOrPatchCode,LPCWSTR szUserSid,MSIINSTALLCONTEXT dwContext,DWORD dwOptions,DWORD dwDiskId,LPCWSTR szVolumeLabel,LPCWSTR szDiskPrompt);", "MsiSourceListClearSourceA": "UINT WINAPI MsiSourceListClearSourceA(LPCSTR szProductCodeOrPatchCode,LPCSTR szUserSid,MSIINSTALLCONTEXT dwContext,DWORD dwOptions,LPCSTR szSource);", "MsiSourceListClearSourceW": "UINT WINAPI MsiSourceListClearSourceW(LPCWSTR szProductCodeOrPatchCode,LPCWSTR szUserSid,MSIINSTALLCONTEXT dwContext,DWORD dwOptions,LPCWSTR szSource);", "MsiSourceListClearMediaDiskA": "UINT WINAPI MsiSourceListClearMediaDiskA(LPCSTR szProductCodeOrPatchCode,LPCSTR szUserSid,MSIINSTALLCONTEXT dwContext,DWORD dwOptions,DWORD dwDiskId);", "MsiSourceListClearMediaDiskW": "UINT WINAPI MsiSourceListClearMediaDiskW(LPCWSTR szProductCodeOrPatchCode,LPCWSTR szUserSid,MSIINSTALLCONTEXT dwContext,DWORD dwOptions,DWORD dwDiskId);", "MsiSourceListClearAllExA": "UINT WINAPI MsiSourceListClearAllExA(LPCSTR szProductCodeOrPatchCode,LPCSTR szUserSid,MSIINSTALLCONTEXT dwContext,DWORD dwOptions);", "MsiSourceListClearAllExW": "UINT WINAPI MsiSourceListClearAllExW(LPCWSTR szProductCodeOrPatchCode,LPCWSTR szUserSid,MSIINSTALLCONTEXT dwContext,DWORD dwOptions);", "MsiSourceListForceResolutionExA": "UINT WINAPI MsiSourceListForceResolutionExA(LPCSTR szProductCodeOrPatchCode,LPCSTR szUserSid,MSIINSTALLCONTEXT dwContext,DWORD dwOptions);", "MsiSourceListForceResolutionExW": "UINT WINAPI MsiSourceListForceResolutionExW(LPCWSTR szProductCodeOrPatchCode,LPCWSTR szUserSid,MSIINSTALLCONTEXT dwContext,DWORD dwOptions);", "MsiSourceListSetInfoA": "UINT WINAPI MsiSourceListSetInfoA(LPCSTR szProductCodeOrPatchCode,LPCSTR szUserSid,MSIINSTALLCONTEXT dwContext,DWORD dwOptions,LPCSTR szProperty,LPCSTR szValue);", "MsiSourceListSetInfoW": "UINT WINAPI MsiSourceListSetInfoW(LPCWSTR szProductCodeOrPatchCode,LPCWSTR szUserSid,MSIINSTALLCONTEXT dwContext,DWORD dwOptions,LPCWSTR szProperty,LPCWSTR szValue);", "MsiSourceListGetInfoA": "UINT WINAPI MsiSourceListGetInfoA(LPCSTR szProductCodeOrPatchCode,LPCSTR szUserSid,MSIINSTALLCONTEXT dwContext,DWORD dwOptions,LPCSTR szProperty,LPSTR szValue,LPDWORD pcchValue);", "MsiSourceListGetInfoW": "UINT WINAPI MsiSourceListGetInfoW(LPCWSTR szProductCodeOrPatchCode,LPCWSTR szUserSid,MSIINSTALLCONTEXT dwContext,DWORD dwOptions,LPCWSTR szProperty,LPWSTR szValue,LPDWORD pcchValue);", "MsiSourceListEnumSourcesA": "UINT WINAPI MsiSourceListEnumSourcesA(LPCSTR szProductCodeOrPatchCode,LPCSTR szUserSid,MSIINSTALLCONTEXT dwContext,DWORD dwOptions,DWORD dwIndex,LPSTR szSource,LPDWORD pcchSource);", "MsiSourceListEnumSourcesW": "UINT WINAPI MsiSourceListEnumSourcesW(LPCWSTR szProductCodeOrPatchCode,LPCWSTR szUserSid,MSIINSTALLCONTEXT dwContext,DWORD dwOptions,DWORD dwIndex,LPWSTR szSource,LPDWORD pcchSource);", "MsiSourceListEnumMediaDisksA": "UINT WINAPI MsiSourceListEnumMediaDisksA(LPCSTR szProductCodeOrPatchCode,LPCSTR szUserSid,MSIINSTALLCONTEXT dwContext,DWORD dwOptions,DWORD dwIndex,LPDWORD pdwDiskId,LPSTR szVolumeLabel,LPDWORD pcchVolumeLabel,LPSTR szDiskPrompt,LPDWORD pcchDiskPrompt);", "MsiSourceListEnumMediaDisksW": "UINT WINAPI MsiSourceListEnumMediaDisksW(LPCWSTR szProductCodeOrPatchCode,LPCWSTR szUserSid,MSIINSTALLCONTEXT dwContext,DWORD dwOptions,DWORD dwIndex,LPDWORD pdwDiskId,LPWSTR szVolumeLabel,LPDWORD pcchVolumeLabel,LPWSTR szDiskPrompt,LPDWORD pcchDiskPrompt);", "MsiGetFileVersionA": "UINT WINAPI MsiGetFileVersionA(LPCSTR szFilePath,LPSTR lpVersionBuf,DWORD *pcchVersionBuf,LPSTR lpLangBuf,DWORD *pcchLangBuf);", "MsiGetFileVersionW": "UINT WINAPI MsiGetFileVersionW(LPCWSTR szFilePath,LPWSTR lpVersionBuf,DWORD *pcchVersionBuf,LPWSTR lpLangBuf,DWORD *pcchLangBuf);", "MsiGetFileHashA": "UINT WINAPI MsiGetFileHashA(LPCSTR szFilePath,DWORD dwOptions,PMSIFILEHASHINFO pHash);", "MsiGetFileHashW": "UINT WINAPI MsiGetFileHashW(LPCWSTR szFilePath,DWORD dwOptions,PMSIFILEHASHINFO pHash);", "MsiGetFileSignatureInformationA": "HRESULT WINAPI MsiGetFileSignatureInformationA(LPCSTR szSignedObjectPath,DWORD dwFlags,PCCERT_CONTEXT *ppcCertContext,BYTE *pbHashData,DWORD *pcbHashData);", "MsiGetFileSignatureInformationW": "HRESULT WINAPI MsiGetFileSignatureInformationW(LPCWSTR szSignedObjectPath,DWORD dwFlags,PCCERT_CONTEXT *ppcCertContext,BYTE *pbHashData,DWORD *pcbHashData);", "MsiGetShortcutTargetA": "UINT WINAPI MsiGetShortcutTargetA(LPCSTR szShortcutPath,LPSTR szProductCode,LPSTR szFeatureId,LPSTR szComponentCode);", "MsiGetShortcutTargetW": "UINT WINAPI MsiGetShortcutTargetW(LPCWSTR szShortcutPath,LPWSTR szProductCode,LPWSTR szFeatureId,LPWSTR szComponentCode);", "MsiIsProductElevatedA": "UINT WINAPI MsiIsProductElevatedA(LPCSTR szProduct,WINBOOL *pfElevated);", "MsiIsProductElevatedW": "UINT WINAPI MsiIsProductElevatedW(LPCWSTR szProduct,WINBOOL *pfElevated);", "MsiNotifySidChangeA": "UINT WINAPI MsiNotifySidChangeA(LPCSTR pOldSid,LPCSTR pNewSid);", "MsiNotifySidChangeW": "UINT WINAPI MsiNotifySidChangeW(LPCWSTR pOldSid,LPCWSTR pNewSid);", "MsiBeginTransactionA": "UINT WINAPI MsiBeginTransactionA(LPCSTR szName, DWORD dwTransactionAttributes, MSIHANDLE *phTransactionHandle, HANDLE *phChangeOfOwnerEvent);", "MsiBeginTransactionW": "UINT WINAPI MsiBeginTransactionW(LPCWSTR szName, DWORD dwTransactionAttributes, MSIHANDLE *phTransactionHandle, HANDLE *phChangeOfOwnerEvent);", "MsiEndTransaction": "UINT WINAPI MsiEndTransaction(DWORD dwTransactionState);", "MsiJoinTransaction": "UINT WINAPI MsiJoinTransaction(MSIHANDLE hTransactionHandle, DWORD dwTransactionAttributes, HANDLE *phChangeOfOwnerEvent);", "IDtcToXaMapper_RequestNewResourceManager_Proxy": "HRESULT WINAPI IDtcToXaMapper_RequestNewResourceManager_Proxy(IDtcToXaMapper *This,char *pszDSN,char *pszClientDllName,DWORD *pdwRMCookie);", "IDtcToXaMapper_TranslateTridToXid_Proxy": "HRESULT WINAPI IDtcToXaMapper_TranslateTridToXid_Proxy(IDtcToXaMapper *This,DWORD *pdwITransaction,DWORD dwRMCookie,XID *pXid);", "IDtcToXaMapper_EnlistResourceManager_Proxy": "HRESULT WINAPI IDtcToXaMapper_EnlistResourceManager_Proxy(IDtcToXaMapper *This,DWORD dwRMCookie,DWORD *pdwITransaction);", "IDtcToXaMapper_ReleaseResourceManager_Proxy": "HRESULT WINAPI IDtcToXaMapper_ReleaseResourceManager_Proxy(IDtcToXaMapper *This,DWORD dwRMCookie);", "IDtcToXaHelperFactory_Create_Proxy": "HRESULT WINAPI IDtcToXaHelperFactory_Create_Proxy(IDtcToXaHelperFactory *This,char *pszDSN,char *pszClientDllName,GUID *pguidRm,IDtcToXaHelper **ppXaHelper);", "IDtcToXaHelper_Close_Proxy": "HRESULT WINAPI IDtcToXaHelper_Close_Proxy(IDtcToXaHelper *This,WINBOOL i_fDoRecovery);", "IDtcToXaHelper_TranslateTridToXid_Proxy": "HRESULT WINAPI IDtcToXaHelper_TranslateTridToXid_Proxy(IDtcToXaHelper *This,ITransaction *pITransaction,GUID *pguidBqual,XID *pXid);", "IDtcToXaHelperSinglePipe_XARMCreate_Proxy": "HRESULT WINAPI IDtcToXaHelperSinglePipe_XARMCreate_Proxy(IDtcToXaHelperSinglePipe *This,char *pszDSN,char *pszClientDll,DWORD *pdwRMCookie);", "IDtcToXaHelperSinglePipe_ConvertTridToXID_Proxy": "HRESULT WINAPI IDtcToXaHelperSinglePipe_ConvertTridToXID_Proxy(IDtcToXaHelperSinglePipe *This,DWORD *pdwITrans,DWORD dwRMCookie,XID *pxid);", "IDtcToXaHelperSinglePipe_EnlistWithRM_Proxy": "HRESULT WINAPI IDtcToXaHelperSinglePipe_EnlistWithRM_Proxy(IDtcToXaHelperSinglePipe *This,DWORD dwRMCookie,ITransaction *i_pITransaction,ITransactionResourceAsync *i_pITransRes,ITransactionEnlistmentAsync **o_ppITransEnslitment);", "IDtcToXaHelperSinglePipe_ReleaseRMCookie_Proxy": "void WINAPI IDtcToXaHelperSinglePipe_ReleaseRMCookie_Proxy(IDtcToXaHelperSinglePipe *This,DWORD i_dwRMCookie,WINBOOL i_fNormal);", "ITTAPI_Initialize_Proxy": "HRESULT WINAPI ITTAPI_Initialize_Proxy(ITTAPI *This);", "ITTAPI_Shutdown_Proxy": "HRESULT WINAPI ITTAPI_Shutdown_Proxy(ITTAPI *This);", "ITTAPI_get_Addresses_Proxy": "HRESULT WINAPI ITTAPI_get_Addresses_Proxy(ITTAPI *This,VARIANT *pVariant);", "ITTAPI_EnumerateAddresses_Proxy": "HRESULT WINAPI ITTAPI_EnumerateAddresses_Proxy(ITTAPI *This,IEnumAddress **ppEnumAddress);", "ITTAPI_RegisterCallNotifications_Proxy": "HRESULT WINAPI ITTAPI_RegisterCallNotifications_Proxy(ITTAPI *This,ITAddress *pAddress,VARIANT_BOOL fMonitor,VARIANT_BOOL fOwner,__LONG32 lMediaTypes,__LONG32 lCallbackInstance,__LONG32 *plRegister);", "ITTAPI_UnregisterNotifications_Proxy": "HRESULT WINAPI ITTAPI_UnregisterNotifications_Proxy(ITTAPI *This,__LONG32 lRegister);", "ITTAPI_get_CallHubs_Proxy": "HRESULT WINAPI ITTAPI_get_CallHubs_Proxy(ITTAPI *This,VARIANT *pVariant);", "ITTAPI_EnumerateCallHubs_Proxy": "HRESULT WINAPI ITTAPI_EnumerateCallHubs_Proxy(ITTAPI *This,IEnumCallHub **ppEnumCallHub);", "ITTAPI_SetCallHubTracking_Proxy": "HRESULT WINAPI ITTAPI_SetCallHubTracking_Proxy(ITTAPI *This,VARIANT pAddresses,VARIANT_BOOL bTracking);", "ITTAPI_EnumeratePrivateTAPIObjects_Proxy": "HRESULT WINAPI ITTAPI_EnumeratePrivateTAPIObjects_Proxy(ITTAPI *This,IEnumUnknown **ppEnumUnknown);", "ITTAPI_get_PrivateTAPIObjects_Proxy": "HRESULT WINAPI ITTAPI_get_PrivateTAPIObjects_Proxy(ITTAPI *This,VARIANT *pVariant);", "ITTAPI_RegisterRequestRecipient_Proxy": "HRESULT WINAPI ITTAPI_RegisterRequestRecipient_Proxy(ITTAPI *This,__LONG32 lRegistrationInstance,__LONG32 lRequestMode,VARIANT_BOOL fEnable);", "ITTAPI_SetAssistedTelephonyPriority_Proxy": "HRESULT WINAPI ITTAPI_SetAssistedTelephonyPriority_Proxy(ITTAPI *This,BSTR pAppFilename,VARIANT_BOOL fPriority);", "ITTAPI_SetApplicationPriority_Proxy": "HRESULT WINAPI ITTAPI_SetApplicationPriority_Proxy(ITTAPI *This,BSTR pAppFilename,__LONG32 lMediaType,VARIANT_BOOL fPriority);", "ITTAPI_put_EventFilter_Proxy": "HRESULT WINAPI ITTAPI_put_EventFilter_Proxy(ITTAPI *This,__LONG32 lFilterMask);", "ITTAPI_get_EventFilter_Proxy": "HRESULT WINAPI ITTAPI_get_EventFilter_Proxy(ITTAPI *This,__LONG32 *plFilterMask);", "ITTAPI2_get_Phones_Proxy": "HRESULT WINAPI ITTAPI2_get_Phones_Proxy(ITTAPI2 *This,VARIANT *pPhones);", "ITTAPI2_EnumeratePhones_Proxy": "HRESULT WINAPI ITTAPI2_EnumeratePhones_Proxy(ITTAPI2 *This,IEnumPhone **ppEnumPhone);", "ITTAPI2_CreateEmptyCollectionObject_Proxy": "HRESULT WINAPI ITTAPI2_CreateEmptyCollectionObject_Proxy(ITTAPI2 *This,ITCollection2 **ppCollection);", "ITMediaSupport_get_MediaTypes_Proxy": "HRESULT WINAPI ITMediaSupport_get_MediaTypes_Proxy(ITMediaSupport *This,__LONG32 *plMediaTypes);", "ITMediaSupport_QueryMediaType_Proxy": "HRESULT WINAPI ITMediaSupport_QueryMediaType_Proxy(ITMediaSupport *This,__LONG32 lMediaType,VARIANT_BOOL *pfSupport);", "ITPluggableTerminalClassInfo_get_Name_Proxy": "HRESULT WINAPI ITPluggableTerminalClassInfo_get_Name_Proxy(ITPluggableTerminalClassInfo *This,BSTR *pName);", "ITPluggableTerminalClassInfo_get_Company_Proxy": "HRESULT WINAPI ITPluggableTerminalClassInfo_get_Company_Proxy(ITPluggableTerminalClassInfo *This,BSTR *pCompany);", "ITPluggableTerminalClassInfo_get_Version_Proxy": "HRESULT WINAPI ITPluggableTerminalClassInfo_get_Version_Proxy(ITPluggableTerminalClassInfo *This,BSTR *pVersion);", "ITPluggableTerminalClassInfo_get_TerminalClass_Proxy": "HRESULT WINAPI ITPluggableTerminalClassInfo_get_TerminalClass_Proxy(ITPluggableTerminalClassInfo *This,BSTR *pTerminalClass);", "ITPluggableTerminalClassInfo_get_CLSID_Proxy": "HRESULT WINAPI ITPluggableTerminalClassInfo_get_CLSID_Proxy(ITPluggableTerminalClassInfo *This,BSTR *pCLSID);", "ITPluggableTerminalClassInfo_get_Direction_Proxy": "HRESULT WINAPI ITPluggableTerminalClassInfo_get_Direction_Proxy(ITPluggableTerminalClassInfo *This,TERMINAL_DIRECTION *pDirection);", "ITPluggableTerminalClassInfo_get_MediaTypes_Proxy": "HRESULT WINAPI ITPluggableTerminalClassInfo_get_MediaTypes_Proxy(ITPluggableTerminalClassInfo *This,__LONG32 *pMediaTypes);", "ITPluggableTerminalSuperclassInfo_get_Name_Proxy": "HRESULT WINAPI ITPluggableTerminalSuperclassInfo_get_Name_Proxy(ITPluggableTerminalSuperclassInfo *This,BSTR *pName);", "ITPluggableTerminalSuperclassInfo_get_CLSID_Proxy": "HRESULT WINAPI ITPluggableTerminalSuperclassInfo_get_CLSID_Proxy(ITPluggableTerminalSuperclassInfo *This,BSTR *pCLSID);", "ITTerminalSupport_get_StaticTerminals_Proxy": "HRESULT WINAPI ITTerminalSupport_get_StaticTerminals_Proxy(ITTerminalSupport *This,VARIANT *pVariant);", "ITTerminalSupport_EnumerateStaticTerminals_Proxy": "HRESULT WINAPI ITTerminalSupport_EnumerateStaticTerminals_Proxy(ITTerminalSupport *This,IEnumTerminal **ppTerminalEnumerator);", "ITTerminalSupport_get_DynamicTerminalClasses_Proxy": "HRESULT WINAPI ITTerminalSupport_get_DynamicTerminalClasses_Proxy(ITTerminalSupport *This,VARIANT *pVariant);", "ITTerminalSupport_EnumerateDynamicTerminalClasses_Proxy": "HRESULT WINAPI ITTerminalSupport_EnumerateDynamicTerminalClasses_Proxy(ITTerminalSupport *This,IEnumTerminalClass **ppTerminalClassEnumerator);", "ITTerminalSupport_CreateTerminal_Proxy": "HRESULT WINAPI ITTerminalSupport_CreateTerminal_Proxy(ITTerminalSupport *This,BSTR pTerminalClass,__LONG32 lMediaType,TERMINAL_DIRECTION Direction,ITTerminal **ppTerminal);", "ITTerminalSupport_GetDefaultStaticTerminal_Proxy": "HRESULT WINAPI ITTerminalSupport_GetDefaultStaticTerminal_Proxy(ITTerminalSupport *This,__LONG32 lMediaType,TERMINAL_DIRECTION Direction,ITTerminal **ppTerminal);", "ITTerminalSupport2_get_PluggableSuperclasses_Proxy": "HRESULT WINAPI ITTerminalSupport2_get_PluggableSuperclasses_Proxy(ITTerminalSupport2 *This,VARIANT *pVariant);", "ITTerminalSupport2_EnumeratePluggableSuperclasses_Proxy": "HRESULT WINAPI ITTerminalSupport2_EnumeratePluggableSuperclasses_Proxy(ITTerminalSupport2 *This,IEnumPluggableSuperclassInfo **ppSuperclassEnumerator);", "ITTerminalSupport2_get_PluggableTerminalClasses_Proxy": "HRESULT WINAPI ITTerminalSupport2_get_PluggableTerminalClasses_Proxy(ITTerminalSupport2 *This,BSTR bstrTerminalSuperclass,__LONG32 lMediaType,VARIANT *pVariant);", "ITTerminalSupport2_EnumeratePluggableTerminalClasses_Proxy": "HRESULT WINAPI ITTerminalSupport2_EnumeratePluggableTerminalClasses_Proxy(ITTerminalSupport2 *This,CLSID iidTerminalSuperclass,__LONG32 lMediaType,IEnumPluggableTerminalClassInfo **ppClassEnumerator);", "ITAddress_get_State_Proxy": "HRESULT WINAPI ITAddress_get_State_Proxy(ITAddress *This,ADDRESS_STATE *pAddressState);", "ITAddress_get_AddressName_Proxy": "HRESULT WINAPI ITAddress_get_AddressName_Proxy(ITAddress *This,BSTR *ppName);", "ITAddress_get_ServiceProviderName_Proxy": "HRESULT WINAPI ITAddress_get_ServiceProviderName_Proxy(ITAddress *This,BSTR *ppName);", "ITAddress_get_TAPIObject_Proxy": "HRESULT WINAPI ITAddress_get_TAPIObject_Proxy(ITAddress *This,ITTAPI **ppTapiObject);", "ITAddress_CreateCall_Proxy": "HRESULT WINAPI ITAddress_CreateCall_Proxy(ITAddress *This,BSTR pDestAddress,__LONG32 lAddressType,__LONG32 lMediaTypes,ITBasicCallControl **ppCall);", "ITAddress_get_Calls_Proxy": "HRESULT WINAPI ITAddress_get_Calls_Proxy(ITAddress *This,VARIANT *pVariant);", "ITAddress_EnumerateCalls_Proxy": "HRESULT WINAPI ITAddress_EnumerateCalls_Proxy(ITAddress *This,IEnumCall **ppCallEnum);", "ITAddress_get_DialableAddress_Proxy": "HRESULT WINAPI ITAddress_get_DialableAddress_Proxy(ITAddress *This,BSTR *pDialableAddress);", "ITAddress_CreateForwardInfoObject_Proxy": "HRESULT WINAPI ITAddress_CreateForwardInfoObject_Proxy(ITAddress *This,ITForwardInformation **ppForwardInfo);", "ITAddress_Forward_Proxy": "HRESULT WINAPI ITAddress_Forward_Proxy(ITAddress *This,ITForwardInformation *pForwardInfo,ITBasicCallControl *pCall);", "ITAddress_get_CurrentForwardInfo_Proxy": "HRESULT WINAPI ITAddress_get_CurrentForwardInfo_Proxy(ITAddress *This,ITForwardInformation **ppForwardInfo);", "ITAddress_put_MessageWaiting_Proxy": "HRESULT WINAPI ITAddress_put_MessageWaiting_Proxy(ITAddress *This,VARIANT_BOOL fMessageWaiting);", "ITAddress_get_MessageWaiting_Proxy": "HRESULT WINAPI ITAddress_get_MessageWaiting_Proxy(ITAddress *This,VARIANT_BOOL *pfMessageWaiting);", "ITAddress_put_DoNotDisturb_Proxy": "HRESULT WINAPI ITAddress_put_DoNotDisturb_Proxy(ITAddress *This,VARIANT_BOOL fDoNotDisturb);", "ITAddress_get_DoNotDisturb_Proxy": "HRESULT WINAPI ITAddress_get_DoNotDisturb_Proxy(ITAddress *This,VARIANT_BOOL *pfDoNotDisturb);", "ITAddress2_get_Phones_Proxy": "HRESULT WINAPI ITAddress2_get_Phones_Proxy(ITAddress2 *This,VARIANT *pPhones);", "ITAddress2_EnumeratePhones_Proxy": "HRESULT WINAPI ITAddress2_EnumeratePhones_Proxy(ITAddress2 *This,IEnumPhone **ppEnumPhone);", "ITAddress2_GetPhoneFromTerminal_Proxy": "HRESULT WINAPI ITAddress2_GetPhoneFromTerminal_Proxy(ITAddress2 *This,ITTerminal *pTerminal,ITPhone **ppPhone);", "ITAddress2_get_PreferredPhones_Proxy": "HRESULT WINAPI ITAddress2_get_PreferredPhones_Proxy(ITAddress2 *This,VARIANT *pPhones);", "ITAddress2_EnumeratePreferredPhones_Proxy": "HRESULT WINAPI ITAddress2_EnumeratePreferredPhones_Proxy(ITAddress2 *This,IEnumPhone **ppEnumPhone);", "ITAddress2_get_EventFilter_Proxy": "HRESULT WINAPI ITAddress2_get_EventFilter_Proxy(ITAddress2 *This,TAPI_EVENT TapiEvent,__LONG32 lSubEvent,VARIANT_BOOL *pEnable);", "ITAddress2_put_EventFilter_Proxy": "HRESULT WINAPI ITAddress2_put_EventFilter_Proxy(ITAddress2 *This,TAPI_EVENT TapiEvent,__LONG32 lSubEvent,VARIANT_BOOL bEnable);", "ITAddress2_DeviceSpecific_Proxy": "HRESULT WINAPI ITAddress2_DeviceSpecific_Proxy(ITAddress2 *This,ITCallInfo *pCall,BYTE *pParams,DWORD dwSize);", "ITAddress2_DeviceSpecificVariant_Proxy": "HRESULT WINAPI ITAddress2_DeviceSpecificVariant_Proxy(ITAddress2 *This,ITCallInfo *pCall,VARIANT varDevSpecificByteArray);", "ITAddress2_NegotiateExtVersion_Proxy": "HRESULT WINAPI ITAddress2_NegotiateExtVersion_Proxy(ITAddress2 *This,__LONG32 lLowVersion,__LONG32 lHighVersion,__LONG32 *plExtVersion);", "ITAddressCapabilities_get_AddressCapability_Proxy": "HRESULT WINAPI ITAddressCapabilities_get_AddressCapability_Proxy(ITAddressCapabilities *This,ADDRESS_CAPABILITY AddressCap,__LONG32 *plCapability);", "ITAddressCapabilities_get_AddressCapabilityString_Proxy": "HRESULT WINAPI ITAddressCapabilities_get_AddressCapabilityString_Proxy(ITAddressCapabilities *This,ADDRESS_CAPABILITY_STRING AddressCapString,BSTR *ppCapabilityString);", "ITAddressCapabilities_get_CallTreatments_Proxy": "HRESULT WINAPI ITAddressCapabilities_get_CallTreatments_Proxy(ITAddressCapabilities *This,VARIANT *pVariant);", "ITAddressCapabilities_EnumerateCallTreatments_Proxy": "HRESULT WINAPI ITAddressCapabilities_EnumerateCallTreatments_Proxy(ITAddressCapabilities *This,IEnumBstr **ppEnumCallTreatment);", "ITAddressCapabilities_get_CompletionMessages_Proxy": "HRESULT WINAPI ITAddressCapabilities_get_CompletionMessages_Proxy(ITAddressCapabilities *This,VARIANT *pVariant);", "ITAddressCapabilities_EnumerateCompletionMessages_Proxy": "HRESULT WINAPI ITAddressCapabilities_EnumerateCompletionMessages_Proxy(ITAddressCapabilities *This,IEnumBstr **ppEnumCompletionMessage);", "ITAddressCapabilities_get_DeviceClasses_Proxy": "HRESULT WINAPI ITAddressCapabilities_get_DeviceClasses_Proxy(ITAddressCapabilities *This,VARIANT *pVariant);", "ITAddressCapabilities_EnumerateDeviceClasses_Proxy": "HRESULT WINAPI ITAddressCapabilities_EnumerateDeviceClasses_Proxy(ITAddressCapabilities *This,IEnumBstr **ppEnumDeviceClass);", "ITPhone_Open_Proxy": "HRESULT WINAPI ITPhone_Open_Proxy(ITPhone *This,PHONE_PRIVILEGE Privilege);", "ITPhone_Close_Proxy": "HRESULT WINAPI ITPhone_Close_Proxy(ITPhone *This);", "ITPhone_get_Addresses_Proxy": "HRESULT WINAPI ITPhone_get_Addresses_Proxy(ITPhone *This,VARIANT *pAddresses);", "ITPhone_EnumerateAddresses_Proxy": "HRESULT WINAPI ITPhone_EnumerateAddresses_Proxy(ITPhone *This,IEnumAddress **ppEnumAddress);", "ITPhone_get_PhoneCapsLong_Proxy": "HRESULT WINAPI ITPhone_get_PhoneCapsLong_Proxy(ITPhone *This,PHONECAPS_LONG pclCap,__LONG32 *plCapability);", "ITPhone_get_PhoneCapsString_Proxy": "HRESULT WINAPI ITPhone_get_PhoneCapsString_Proxy(ITPhone *This,PHONECAPS_STRING pcsCap,BSTR *ppCapability);", "ITPhone_get_Terminals_Proxy": "HRESULT WINAPI ITPhone_get_Terminals_Proxy(ITPhone *This,ITAddress *pAddress,VARIANT *pTerminals);", "ITPhone_EnumerateTerminals_Proxy": "HRESULT WINAPI ITPhone_EnumerateTerminals_Proxy(ITPhone *This,ITAddress *pAddress,IEnumTerminal **ppEnumTerminal);", "ITPhone_get_ButtonMode_Proxy": "HRESULT WINAPI ITPhone_get_ButtonMode_Proxy(ITPhone *This,__LONG32 lButtonID,PHONE_BUTTON_MODE *pButtonMode);", "ITPhone_put_ButtonMode_Proxy": "HRESULT WINAPI ITPhone_put_ButtonMode_Proxy(ITPhone *This,__LONG32 lButtonID,PHONE_BUTTON_MODE ButtonMode);", "ITPhone_get_ButtonFunction_Proxy": "HRESULT WINAPI ITPhone_get_ButtonFunction_Proxy(ITPhone *This,__LONG32 lButtonID,PHONE_BUTTON_FUNCTION *pButtonFunction);", "ITPhone_put_ButtonFunction_Proxy": "HRESULT WINAPI ITPhone_put_ButtonFunction_Proxy(ITPhone *This,__LONG32 lButtonID,PHONE_BUTTON_FUNCTION ButtonFunction);", "ITPhone_get_ButtonText_Proxy": "HRESULT WINAPI ITPhone_get_ButtonText_Proxy(ITPhone *This,__LONG32 lButtonID,BSTR *ppButtonText);", "ITPhone_put_ButtonText_Proxy": "HRESULT WINAPI ITPhone_put_ButtonText_Proxy(ITPhone *This,__LONG32 lButtonID,BSTR bstrButtonText);", "ITPhone_get_ButtonState_Proxy": "HRESULT WINAPI ITPhone_get_ButtonState_Proxy(ITPhone *This,__LONG32 lButtonID,PHONE_BUTTON_STATE *pButtonState);", "ITPhone_get_HookSwitchState_Proxy": "HRESULT WINAPI ITPhone_get_HookSwitchState_Proxy(ITPhone *This,PHONE_HOOK_SWITCH_DEVICE HookSwitchDevice,PHONE_HOOK_SWITCH_STATE *pHookSwitchState);", "ITPhone_put_HookSwitchState_Proxy": "HRESULT WINAPI ITPhone_put_HookSwitchState_Proxy(ITPhone *This,PHONE_HOOK_SWITCH_DEVICE HookSwitchDevice,PHONE_HOOK_SWITCH_STATE HookSwitchState);", "ITPhone_put_RingMode_Proxy": "HRESULT WINAPI ITPhone_put_RingMode_Proxy(ITPhone *This,__LONG32 lRingMode);", "ITPhone_get_RingMode_Proxy": "HRESULT WINAPI ITPhone_get_RingMode_Proxy(ITPhone *This,__LONG32 *plRingMode);", "ITPhone_put_RingVolume_Proxy": "HRESULT WINAPI ITPhone_put_RingVolume_Proxy(ITPhone *This,__LONG32 lRingVolume);", "ITPhone_get_RingVolume_Proxy": "HRESULT WINAPI ITPhone_get_RingVolume_Proxy(ITPhone *This,__LONG32 *plRingVolume);", "ITPhone_get_Privilege_Proxy": "HRESULT WINAPI ITPhone_get_Privilege_Proxy(ITPhone *This,PHONE_PRIVILEGE *pPrivilege);", "ITPhone_GetPhoneCapsBuffer_Proxy": "HRESULT WINAPI ITPhone_GetPhoneCapsBuffer_Proxy(ITPhone *This,PHONECAPS_BUFFER pcbCaps,DWORD *pdwSize,BYTE **ppPhoneCapsBuffer);", "ITPhone_get_PhoneCapsBuffer_Proxy": "HRESULT WINAPI ITPhone_get_PhoneCapsBuffer_Proxy(ITPhone *This,PHONECAPS_BUFFER pcbCaps,VARIANT *pVarBuffer);", "ITPhone_get_LampMode_Proxy": "HRESULT WINAPI ITPhone_get_LampMode_Proxy(ITPhone *This,__LONG32 lLampID,PHONE_LAMP_MODE *pLampMode);", "ITPhone_put_LampMode_Proxy": "HRESULT WINAPI ITPhone_put_LampMode_Proxy(ITPhone *This,__LONG32 lLampID,PHONE_LAMP_MODE LampMode);", "ITPhone_get_Display_Proxy": "HRESULT WINAPI ITPhone_get_Display_Proxy(ITPhone *This,BSTR *pbstrDisplay);", "ITPhone_SetDisplay_Proxy": "HRESULT WINAPI ITPhone_SetDisplay_Proxy(ITPhone *This,__LONG32 lRow,__LONG32 lColumn,BSTR bstrDisplay);", "ITPhone_get_PreferredAddresses_Proxy": "HRESULT WINAPI ITPhone_get_PreferredAddresses_Proxy(ITPhone *This,VARIANT *pAddresses);", "ITPhone_EnumeratePreferredAddresses_Proxy": "HRESULT WINAPI ITPhone_EnumeratePreferredAddresses_Proxy(ITPhone *This,IEnumAddress **ppEnumAddress);", "ITPhone_DeviceSpecific_Proxy": "HRESULT WINAPI ITPhone_DeviceSpecific_Proxy(ITPhone *This,BYTE *pParams,DWORD dwSize);", "ITPhone_DeviceSpecificVariant_Proxy": "HRESULT WINAPI ITPhone_DeviceSpecificVariant_Proxy(ITPhone *This,VARIANT varDevSpecificByteArray);", "ITPhone_NegotiateExtVersion_Proxy": "HRESULT WINAPI ITPhone_NegotiateExtVersion_Proxy(ITPhone *This,__LONG32 lLowVersion,__LONG32 lHighVersion,__LONG32 *plExtVersion);", "ITAutomatedPhoneControl_StartTone_Proxy": "HRESULT WINAPI ITAutomatedPhoneControl_StartTone_Proxy(ITAutomatedPhoneControl *This,PHONE_TONE Tone,__LONG32 lDuration);", "ITAutomatedPhoneControl_StopTone_Proxy": "HRESULT WINAPI ITAutomatedPhoneControl_StopTone_Proxy(ITAutomatedPhoneControl *This);", "ITAutomatedPhoneControl_get_Tone_Proxy": "HRESULT WINAPI ITAutomatedPhoneControl_get_Tone_Proxy(ITAutomatedPhoneControl *This,PHONE_TONE *pTone);", "ITAutomatedPhoneControl_StartRinger_Proxy": "HRESULT WINAPI ITAutomatedPhoneControl_StartRinger_Proxy(ITAutomatedPhoneControl *This,__LONG32 lRingMode,__LONG32 lDuration);", "ITAutomatedPhoneControl_StopRinger_Proxy": "HRESULT WINAPI ITAutomatedPhoneControl_StopRinger_Proxy(ITAutomatedPhoneControl *This);", "ITAutomatedPhoneControl_get_Ringer_Proxy": "HRESULT WINAPI ITAutomatedPhoneControl_get_Ringer_Proxy(ITAutomatedPhoneControl *This,VARIANT_BOOL *pfRinging);", "ITAutomatedPhoneControl_put_PhoneHandlingEnabled_Proxy": "HRESULT WINAPI ITAutomatedPhoneControl_put_PhoneHandlingEnabled_Proxy(ITAutomatedPhoneControl *This,VARIANT_BOOL fEnabled);", "ITAutomatedPhoneControl_get_PhoneHandlingEnabled_Proxy": "HRESULT WINAPI ITAutomatedPhoneControl_get_PhoneHandlingEnabled_Proxy(ITAutomatedPhoneControl *This,VARIANT_BOOL *pfEnabled);", "ITAutomatedPhoneControl_put_AutoEndOfNumberTimeout_Proxy": "HRESULT WINAPI ITAutomatedPhoneControl_put_AutoEndOfNumberTimeout_Proxy(ITAutomatedPhoneControl *This,__LONG32 lTimeout);", "ITAutomatedPhoneControl_get_AutoEndOfNumberTimeout_Proxy": "HRESULT WINAPI ITAutomatedPhoneControl_get_AutoEndOfNumberTimeout_Proxy(ITAutomatedPhoneControl *This,__LONG32 *plTimeout);", "ITAutomatedPhoneControl_put_AutoDialtone_Proxy": "HRESULT WINAPI ITAutomatedPhoneControl_put_AutoDialtone_Proxy(ITAutomatedPhoneControl *This,VARIANT_BOOL fEnabled);", "ITAutomatedPhoneControl_get_AutoDialtone_Proxy": "HRESULT WINAPI ITAutomatedPhoneControl_get_AutoDialtone_Proxy(ITAutomatedPhoneControl *This,VARIANT_BOOL *pfEnabled);", "ITAutomatedPhoneControl_put_AutoStopTonesOnOnHook_Proxy": "HRESULT WINAPI ITAutomatedPhoneControl_put_AutoStopTonesOnOnHook_Proxy(ITAutomatedPhoneControl *This,VARIANT_BOOL fEnabled);", "ITAutomatedPhoneControl_get_AutoStopTonesOnOnHook_Proxy": "HRESULT WINAPI ITAutomatedPhoneControl_get_AutoStopTonesOnOnHook_Proxy(ITAutomatedPhoneControl *This,VARIANT_BOOL *pfEnabled);", "ITAutomatedPhoneControl_put_AutoStopRingOnOffHook_Proxy": "HRESULT WINAPI ITAutomatedPhoneControl_put_AutoStopRingOnOffHook_Proxy(ITAutomatedPhoneControl *This,VARIANT_BOOL fEnabled);", "ITAutomatedPhoneControl_get_AutoStopRingOnOffHook_Proxy": "HRESULT WINAPI ITAutomatedPhoneControl_get_AutoStopRingOnOffHook_Proxy(ITAutomatedPhoneControl *This,VARIANT_BOOL *pfEnabled);", "ITAutomatedPhoneControl_put_AutoKeypadTones_Proxy": "HRESULT WINAPI ITAutomatedPhoneControl_put_AutoKeypadTones_Proxy(ITAutomatedPhoneControl *This,VARIANT_BOOL fEnabled);", "ITAutomatedPhoneControl_get_AutoKeypadTones_Proxy": "HRESULT WINAPI ITAutomatedPhoneControl_get_AutoKeypadTones_Proxy(ITAutomatedPhoneControl *This,VARIANT_BOOL *pfEnabled);", "ITAutomatedPhoneControl_put_AutoKeypadTonesMinimumDuration_Proxy": "HRESULT WINAPI ITAutomatedPhoneControl_put_AutoKeypadTonesMinimumDuration_Proxy(ITAutomatedPhoneControl *This,__LONG32 lDuration);", "ITAutomatedPhoneControl_get_AutoKeypadTonesMinimumDuration_Proxy": "HRESULT WINAPI ITAutomatedPhoneControl_get_AutoKeypadTonesMinimumDuration_Proxy(ITAutomatedPhoneControl *This,__LONG32 *plDuration);", "ITAutomatedPhoneControl_put_AutoVolumeControl_Proxy": "HRESULT WINAPI ITAutomatedPhoneControl_put_AutoVolumeControl_Proxy(ITAutomatedPhoneControl *This,VARIANT_BOOL fEnabled);", "ITAutomatedPhoneControl_get_AutoVolumeControl_Proxy": "HRESULT WINAPI ITAutomatedPhoneControl_get_AutoVolumeControl_Proxy(ITAutomatedPhoneControl *This,VARIANT_BOOL *fEnabled);", "ITAutomatedPhoneControl_put_AutoVolumeControlStep_Proxy": "HRESULT WINAPI ITAutomatedPhoneControl_put_AutoVolumeControlStep_Proxy(ITAutomatedPhoneControl *This,__LONG32 lStepSize);", "ITAutomatedPhoneControl_get_AutoVolumeControlStep_Proxy": "HRESULT WINAPI ITAutomatedPhoneControl_get_AutoVolumeControlStep_Proxy(ITAutomatedPhoneControl *This,__LONG32 *plStepSize);", "ITAutomatedPhoneControl_put_AutoVolumeControlRepeatDelay_Proxy": "HRESULT WINAPI ITAutomatedPhoneControl_put_AutoVolumeControlRepeatDelay_Proxy(ITAutomatedPhoneControl *This,__LONG32 lDelay);", "ITAutomatedPhoneControl_get_AutoVolumeControlRepeatDelay_Proxy": "HRESULT WINAPI ITAutomatedPhoneControl_get_AutoVolumeControlRepeatDelay_Proxy(ITAutomatedPhoneControl *This,__LONG32 *plDelay);", "ITAutomatedPhoneControl_put_AutoVolumeControlRepeatPeriod_Proxy": "HRESULT WINAPI ITAutomatedPhoneControl_put_AutoVolumeControlRepeatPeriod_Proxy(ITAutomatedPhoneControl *This,__LONG32 lPeriod);", "ITAutomatedPhoneControl_get_AutoVolumeControlRepeatPeriod_Proxy": "HRESULT WINAPI ITAutomatedPhoneControl_get_AutoVolumeControlRepeatPeriod_Proxy(ITAutomatedPhoneControl *This,__LONG32 *plPeriod);", "ITAutomatedPhoneControl_SelectCall_Proxy": "HRESULT WINAPI ITAutomatedPhoneControl_SelectCall_Proxy(ITAutomatedPhoneControl *This,ITCallInfo *pCall,VARIANT_BOOL fSelectDefaultTerminals);", "ITAutomatedPhoneControl_UnselectCall_Proxy": "HRESULT WINAPI ITAutomatedPhoneControl_UnselectCall_Proxy(ITAutomatedPhoneControl *This,ITCallInfo *pCall);", "ITAutomatedPhoneControl_EnumerateSelectedCalls_Proxy": "HRESULT WINAPI ITAutomatedPhoneControl_EnumerateSelectedCalls_Proxy(ITAutomatedPhoneControl *This,IEnumCall **ppCallEnum);", "ITAutomatedPhoneControl_get_SelectedCalls_Proxy": "HRESULT WINAPI ITAutomatedPhoneControl_get_SelectedCalls_Proxy(ITAutomatedPhoneControl *This,VARIANT *pVariant);", "ITBasicCallControl_Connect_Proxy": "HRESULT WINAPI ITBasicCallControl_Connect_Proxy(ITBasicCallControl *This,VARIANT_BOOL fSync);", "ITBasicCallControl_Answer_Proxy": "HRESULT WINAPI ITBasicCallControl_Answer_Proxy(ITBasicCallControl *This);", "ITBasicCallControl_Disconnect_Proxy": "HRESULT WINAPI ITBasicCallControl_Disconnect_Proxy(ITBasicCallControl *This,DISCONNECT_CODE code);", "ITBasicCallControl_Hold_Proxy": "HRESULT WINAPI ITBasicCallControl_Hold_Proxy(ITBasicCallControl *This,VARIANT_BOOL fHold);", "ITBasicCallControl_HandoffDirect_Proxy": "HRESULT WINAPI ITBasicCallControl_HandoffDirect_Proxy(ITBasicCallControl *This,BSTR pApplicationName);", "ITBasicCallControl_HandoffIndirect_Proxy": "HRESULT WINAPI ITBasicCallControl_HandoffIndirect_Proxy(ITBasicCallControl *This,__LONG32 lMediaType);", "ITBasicCallControl_Conference_Proxy": "HRESULT WINAPI ITBasicCallControl_Conference_Proxy(ITBasicCallControl *This,ITBasicCallControl *pCall,VARIANT_BOOL fSync);", "ITBasicCallControl_Transfer_Proxy": "HRESULT WINAPI ITBasicCallControl_Transfer_Proxy(ITBasicCallControl *This,ITBasicCallControl *pCall,VARIANT_BOOL fSync);", "ITBasicCallControl_BlindTransfer_Proxy": "HRESULT WINAPI ITBasicCallControl_BlindTransfer_Proxy(ITBasicCallControl *This,BSTR pDestAddress);", "ITBasicCallControl_SwapHold_Proxy": "HRESULT WINAPI ITBasicCallControl_SwapHold_Proxy(ITBasicCallControl *This,ITBasicCallControl *pCall);", "ITBasicCallControl_ParkDirect_Proxy": "HRESULT WINAPI ITBasicCallControl_ParkDirect_Proxy(ITBasicCallControl *This,BSTR pParkAddress);", "ITBasicCallControl_ParkIndirect_Proxy": "HRESULT WINAPI ITBasicCallControl_ParkIndirect_Proxy(ITBasicCallControl *This,BSTR *ppNonDirAddress);", "ITBasicCallControl_Unpark_Proxy": "HRESULT WINAPI ITBasicCallControl_Unpark_Proxy(ITBasicCallControl *This);", "ITBasicCallControl_SetQOS_Proxy": "HRESULT WINAPI ITBasicCallControl_SetQOS_Proxy(ITBasicCallControl *This,__LONG32 lMediaType,QOS_SERVICE_LEVEL ServiceLevel);", "ITBasicCallControl_Pickup_Proxy": "HRESULT WINAPI ITBasicCallControl_Pickup_Proxy(ITBasicCallControl *This,BSTR pGroupID);", "ITBasicCallControl_Dial_Proxy": "HRESULT WINAPI ITBasicCallControl_Dial_Proxy(ITBasicCallControl *This,BSTR pDestAddress);", "ITBasicCallControl_Finish_Proxy": "HRESULT WINAPI ITBasicCallControl_Finish_Proxy(ITBasicCallControl *This,FINISH_MODE finishMode);", "ITBasicCallControl_RemoveFromConference_Proxy": "HRESULT WINAPI ITBasicCallControl_RemoveFromConference_Proxy(ITBasicCallControl *This);", "ITCallInfo_get_Address_Proxy": "HRESULT WINAPI ITCallInfo_get_Address_Proxy(ITCallInfo *This,ITAddress **ppAddress);", "ITCallInfo_get_CallState_Proxy": "HRESULT WINAPI ITCallInfo_get_CallState_Proxy(ITCallInfo *This,CALL_STATE *pCallState);", "ITCallInfo_get_Privilege_Proxy": "HRESULT WINAPI ITCallInfo_get_Privilege_Proxy(ITCallInfo *This,CALL_PRIVILEGE *pPrivilege);", "ITCallInfo_get_CallHub_Proxy": "HRESULT WINAPI ITCallInfo_get_CallHub_Proxy(ITCallInfo *This,ITCallHub **ppCallHub);", "ITCallInfo_get_CallInfoLong_Proxy": "HRESULT WINAPI ITCallInfo_get_CallInfoLong_Proxy(ITCallInfo *This,CALLINFO_LONG CallInfoLong,__LONG32 *plCallInfoLongVal);", "ITCallInfo_put_CallInfoLong_Proxy": "HRESULT WINAPI ITCallInfo_put_CallInfoLong_Proxy(ITCallInfo *This,CALLINFO_LONG CallInfoLong,__LONG32 lCallInfoLongVal);", "ITCallInfo_get_CallInfoString_Proxy": "HRESULT WINAPI ITCallInfo_get_CallInfoString_Proxy(ITCallInfo *This,CALLINFO_STRING CallInfoString,BSTR *ppCallInfoString);", "ITCallInfo_put_CallInfoString_Proxy": "HRESULT WINAPI ITCallInfo_put_CallInfoString_Proxy(ITCallInfo *This,CALLINFO_STRING CallInfoString,BSTR pCallInfoString);", "ITCallInfo_get_CallInfoBuffer_Proxy": "HRESULT WINAPI ITCallInfo_get_CallInfoBuffer_Proxy(ITCallInfo *This,CALLINFO_BUFFER CallInfoBuffer,VARIANT *ppCallInfoBuffer);", "ITCallInfo_put_CallInfoBuffer_Proxy": "HRESULT WINAPI ITCallInfo_put_CallInfoBuffer_Proxy(ITCallInfo *This,CALLINFO_BUFFER CallInfoBuffer,VARIANT pCallInfoBuffer);", "ITCallInfo_GetCallInfoBuffer_Proxy": "HRESULT WINAPI ITCallInfo_GetCallInfoBuffer_Proxy(ITCallInfo *This,CALLINFO_BUFFER CallInfoBuffer,DWORD *pdwSize,BYTE **ppCallInfoBuffer);", "ITCallInfo_SetCallInfoBuffer_Proxy": "HRESULT WINAPI ITCallInfo_SetCallInfoBuffer_Proxy(ITCallInfo *This,CALLINFO_BUFFER CallInfoBuffer,DWORD dwSize,BYTE *pCallInfoBuffer);", "ITCallInfo_ReleaseUserUserInfo_Proxy": "HRESULT WINAPI ITCallInfo_ReleaseUserUserInfo_Proxy(ITCallInfo *This);", "ITCallInfo2_get_EventFilter_Proxy": "HRESULT WINAPI ITCallInfo2_get_EventFilter_Proxy(ITCallInfo2 *This,TAPI_EVENT TapiEvent,__LONG32 lSubEvent,VARIANT_BOOL *pEnable);", "ITCallInfo2_put_EventFilter_Proxy": "HRESULT WINAPI ITCallInfo2_put_EventFilter_Proxy(ITCallInfo2 *This,TAPI_EVENT TapiEvent,__LONG32 lSubEvent,VARIANT_BOOL bEnable);", "ITTerminal_get_Name_Proxy": "HRESULT WINAPI ITTerminal_get_Name_Proxy(ITTerminal *This,BSTR *ppName);", "ITTerminal_get_State_Proxy": "HRESULT WINAPI ITTerminal_get_State_Proxy(ITTerminal *This,TERMINAL_STATE *pTerminalState);", "ITTerminal_get_TerminalType_Proxy": "HRESULT WINAPI ITTerminal_get_TerminalType_Proxy(ITTerminal *This,TERMINAL_TYPE *pType);", "ITTerminal_get_TerminalClass_Proxy": "HRESULT WINAPI ITTerminal_get_TerminalClass_Proxy(ITTerminal *This,BSTR *ppTerminalClass);", "ITTerminal_get_MediaType_Proxy": "HRESULT WINAPI ITTerminal_get_MediaType_Proxy(ITTerminal *This,__LONG32 *plMediaType);", "ITTerminal_get_Direction_Proxy": "HRESULT WINAPI ITTerminal_get_Direction_Proxy(ITTerminal *This,TERMINAL_DIRECTION *pDirection);", "ITMultiTrackTerminal_get_TrackTerminals_Proxy": "HRESULT WINAPI ITMultiTrackTerminal_get_TrackTerminals_Proxy(ITMultiTrackTerminal *This,VARIANT *pVariant);", "ITMultiTrackTerminal_EnumerateTrackTerminals_Proxy": "HRESULT WINAPI ITMultiTrackTerminal_EnumerateTrackTerminals_Proxy(ITMultiTrackTerminal *This,IEnumTerminal **ppEnumTerminal);", "ITMultiTrackTerminal_CreateTrackTerminal_Proxy": "HRESULT WINAPI ITMultiTrackTerminal_CreateTrackTerminal_Proxy(ITMultiTrackTerminal *This,__LONG32 MediaType,TERMINAL_DIRECTION TerminalDirection,ITTerminal **ppTerminal);", "ITMultiTrackTerminal_get_MediaTypesInUse_Proxy": "HRESULT WINAPI ITMultiTrackTerminal_get_MediaTypesInUse_Proxy(ITMultiTrackTerminal *This,__LONG32 *plMediaTypesInUse);", "ITMultiTrackTerminal_get_DirectionsInUse_Proxy": "HRESULT WINAPI ITMultiTrackTerminal_get_DirectionsInUse_Proxy(ITMultiTrackTerminal *This,TERMINAL_DIRECTION *plDirectionsInUsed);", "ITMultiTrackTerminal_RemoveTrackTerminal_Proxy": "HRESULT WINAPI ITMultiTrackTerminal_RemoveTrackTerminal_Proxy(ITMultiTrackTerminal *This,ITTerminal *pTrackTerminalToRemove);", "ITFileTrack_get_Format_Proxy": "HRESULT WINAPI ITFileTrack_get_Format_Proxy(ITFileTrack *This,AM_MEDIA_TYPE **ppmt);", "ITFileTrack_put_Format_Proxy": "HRESULT WINAPI ITFileTrack_put_Format_Proxy(ITFileTrack *This,const AM_MEDIA_TYPE *pmt);", "ITFileTrack_get_ControllingTerminal_Proxy": "HRESULT WINAPI ITFileTrack_get_ControllingTerminal_Proxy(ITFileTrack *This,ITTerminal **ppControllingTerminal);", "ITFileTrack_get_AudioFormatForScripting_Proxy": "HRESULT WINAPI ITFileTrack_get_AudioFormatForScripting_Proxy(ITFileTrack *This,ITScriptableAudioFormat **ppAudioFormat);", "ITFileTrack_put_AudioFormatForScripting_Proxy": "HRESULT WINAPI ITFileTrack_put_AudioFormatForScripting_Proxy(ITFileTrack *This,ITScriptableAudioFormat *pAudioFormat);", "ITFileTrack_get_EmptyAudioFormatForScripting_Proxy": "HRESULT WINAPI ITFileTrack_get_EmptyAudioFormatForScripting_Proxy(ITFileTrack *This,ITScriptableAudioFormat **ppAudioFormat);", "ITMediaPlayback_put_PlayList_Proxy": "HRESULT WINAPI ITMediaPlayback_put_PlayList_Proxy(ITMediaPlayback *This,VARIANTARG PlayListVariant);", "ITMediaPlayback_get_PlayList_Proxy": "HRESULT WINAPI ITMediaPlayback_get_PlayList_Proxy(ITMediaPlayback *This,VARIANTARG *pPlayListVariant);", "ITMediaRecord_put_FileName_Proxy": "HRESULT WINAPI ITMediaRecord_put_FileName_Proxy(ITMediaRecord *This,BSTR bstrFileName);", "ITMediaRecord_get_FileName_Proxy": "HRESULT WINAPI ITMediaRecord_get_FileName_Proxy(ITMediaRecord *This,BSTR *pbstrFileName);", "ITMediaControl_Start_Proxy": "HRESULT WINAPI ITMediaControl_Start_Proxy(ITMediaControl *This);", "ITMediaControl_Stop_Proxy": "HRESULT WINAPI ITMediaControl_Stop_Proxy(ITMediaControl *This);", "ITMediaControl_Pause_Proxy": "HRESULT WINAPI ITMediaControl_Pause_Proxy(ITMediaControl *This);", "ITMediaControl_get_MediaState_Proxy": "HRESULT WINAPI ITMediaControl_get_MediaState_Proxy(ITMediaControl *This,TERMINAL_MEDIA_STATE *pTerminalMediaState);", "ITBasicAudioTerminal_put_Volume_Proxy": "HRESULT WINAPI ITBasicAudioTerminal_put_Volume_Proxy(ITBasicAudioTerminal *This,__LONG32 lVolume);", "ITBasicAudioTerminal_get_Volume_Proxy": "HRESULT WINAPI ITBasicAudioTerminal_get_Volume_Proxy(ITBasicAudioTerminal *This,__LONG32 *plVolume);", "ITBasicAudioTerminal_put_Balance_Proxy": "HRESULT WINAPI ITBasicAudioTerminal_put_Balance_Proxy(ITBasicAudioTerminal *This,__LONG32 lBalance);", "ITBasicAudioTerminal_get_Balance_Proxy": "HRESULT WINAPI ITBasicAudioTerminal_get_Balance_Proxy(ITBasicAudioTerminal *This,__LONG32 *plBalance);", "ITStaticAudioTerminal_get_WaveId_Proxy": "HRESULT WINAPI ITStaticAudioTerminal_get_WaveId_Proxy(ITStaticAudioTerminal *This,__LONG32 *plWaveId);", "ITCallHub_Clear_Proxy": "HRESULT WINAPI ITCallHub_Clear_Proxy(ITCallHub *This);", "ITCallHub_EnumerateCalls_Proxy": "HRESULT WINAPI ITCallHub_EnumerateCalls_Proxy(ITCallHub *This,IEnumCall **ppEnumCall);", "ITCallHub_get_Calls_Proxy": "HRESULT WINAPI ITCallHub_get_Calls_Proxy(ITCallHub *This,VARIANT *pCalls);", "ITCallHub_get_NumCalls_Proxy": "HRESULT WINAPI ITCallHub_get_NumCalls_Proxy(ITCallHub *This,__LONG32 *plCalls);", "ITCallHub_get_State_Proxy": "HRESULT WINAPI ITCallHub_get_State_Proxy(ITCallHub *This,CALLHUB_STATE *pState);", "ITLegacyAddressMediaControl_GetID_Proxy": "HRESULT WINAPI ITLegacyAddressMediaControl_GetID_Proxy(ITLegacyAddressMediaControl *This,BSTR pDeviceClass,DWORD *pdwSize,BYTE **ppDeviceID);", "ITLegacyAddressMediaControl_GetDevConfig_Proxy": "HRESULT WINAPI ITLegacyAddressMediaControl_GetDevConfig_Proxy(ITLegacyAddressMediaControl *This,BSTR pDeviceClass,DWORD *pdwSize,BYTE **ppDeviceConfig);", "ITLegacyAddressMediaControl_SetDevConfig_Proxy": "HRESULT WINAPI ITLegacyAddressMediaControl_SetDevConfig_Proxy(ITLegacyAddressMediaControl *This,BSTR pDeviceClass,DWORD dwSize,BYTE *pDeviceConfig);", "ITPrivateEvent_get_Address_Proxy": "HRESULT WINAPI ITPrivateEvent_get_Address_Proxy(ITPrivateEvent *This,ITAddress **ppAddress);", "ITPrivateEvent_get_Call_Proxy": "HRESULT WINAPI ITPrivateEvent_get_Call_Proxy(ITPrivateEvent *This,ITCallInfo **ppCallInfo);", "ITPrivateEvent_get_CallHub_Proxy": "HRESULT WINAPI ITPrivateEvent_get_CallHub_Proxy(ITPrivateEvent *This,ITCallHub **ppCallHub);", "ITPrivateEvent_get_EventCode_Proxy": "HRESULT WINAPI ITPrivateEvent_get_EventCode_Proxy(ITPrivateEvent *This,__LONG32 *plEventCode);", "ITPrivateEvent_get_EventInterface_Proxy": "HRESULT WINAPI ITPrivateEvent_get_EventInterface_Proxy(ITPrivateEvent *This,IDispatch **pEventInterface);", "ITLegacyAddressMediaControl2_ConfigDialog_Proxy": "HRESULT WINAPI ITLegacyAddressMediaControl2_ConfigDialog_Proxy(ITLegacyAddressMediaControl2 *This,HWND hwndOwner,BSTR pDeviceClass);", "ITLegacyAddressMediaControl2_ConfigDialogEdit_Proxy": "HRESULT WINAPI ITLegacyAddressMediaControl2_ConfigDialogEdit_Proxy(ITLegacyAddressMediaControl2 *This,HWND hwndOwner,BSTR pDeviceClass,DWORD dwSizeIn,BYTE *pDeviceConfigIn,DWORD *pdwSizeOut,BYTE **ppDeviceConfigOut);", "ITLegacyCallMediaControl_DetectDigits_Proxy": "HRESULT WINAPI ITLegacyCallMediaControl_DetectDigits_Proxy(ITLegacyCallMediaControl *This,TAPI_DIGITMODE DigitMode);", "ITLegacyCallMediaControl_GenerateDigits_Proxy": "HRESULT WINAPI ITLegacyCallMediaControl_GenerateDigits_Proxy(ITLegacyCallMediaControl *This,BSTR pDigits,TAPI_DIGITMODE DigitMode);", "ITLegacyCallMediaControl_GetID_Proxy": "HRESULT WINAPI ITLegacyCallMediaControl_GetID_Proxy(ITLegacyCallMediaControl *This,BSTR pDeviceClass,DWORD *pdwSize,BYTE **ppDeviceID);", "ITLegacyCallMediaControl_SetMediaType_Proxy": "HRESULT WINAPI ITLegacyCallMediaControl_SetMediaType_Proxy(ITLegacyCallMediaControl *This,__LONG32 lMediaType);", "ITLegacyCallMediaControl_MonitorMedia_Proxy": "HRESULT WINAPI ITLegacyCallMediaControl_MonitorMedia_Proxy(ITLegacyCallMediaControl *This,__LONG32 lMediaType);", "ITLegacyCallMediaControl2_GenerateDigits2_Proxy": "HRESULT WINAPI ITLegacyCallMediaControl2_GenerateDigits2_Proxy(ITLegacyCallMediaControl2 *This,BSTR pDigits,TAPI_DIGITMODE DigitMode,__LONG32 lDuration);", "ITLegacyCallMediaControl2_GatherDigits_Proxy": "HRESULT WINAPI ITLegacyCallMediaControl2_GatherDigits_Proxy(ITLegacyCallMediaControl2 *This,TAPI_DIGITMODE DigitMode,__LONG32 lNumDigits,BSTR pTerminationDigits,__LONG32 lFirstDigitTimeout,__LONG32 lInterDigitTimeout);", "ITLegacyCallMediaControl2_DetectTones_Proxy": "HRESULT WINAPI ITLegacyCallMediaControl2_DetectTones_Proxy(ITLegacyCallMediaControl2 *This,TAPI_DETECTTONE *pToneList,__LONG32 lNumTones);", "ITLegacyCallMediaControl2_DetectTonesByCollection_Proxy": "HRESULT WINAPI ITLegacyCallMediaControl2_DetectTonesByCollection_Proxy(ITLegacyCallMediaControl2 *This,ITCollection2 *pDetectToneCollection);", "ITLegacyCallMediaControl2_GenerateTone_Proxy": "HRESULT WINAPI ITLegacyCallMediaControl2_GenerateTone_Proxy(ITLegacyCallMediaControl2 *This,TAPI_TONEMODE ToneMode,__LONG32 lDuration);", "ITLegacyCallMediaControl2_GenerateCustomTones_Proxy": "HRESULT WINAPI ITLegacyCallMediaControl2_GenerateCustomTones_Proxy(ITLegacyCallMediaControl2 *This,TAPI_CUSTOMTONE *pToneList,__LONG32 lNumTones,__LONG32 lDuration);", "ITLegacyCallMediaControl2_GenerateCustomTonesByCollection_Proxy": "HRESULT WINAPI ITLegacyCallMediaControl2_GenerateCustomTonesByCollection_Proxy(ITLegacyCallMediaControl2 *This,ITCollection2 *pCustomToneCollection,__LONG32 lDuration);", "ITLegacyCallMediaControl2_CreateDetectToneObject_Proxy": "HRESULT WINAPI ITLegacyCallMediaControl2_CreateDetectToneObject_Proxy(ITLegacyCallMediaControl2 *This,ITDetectTone **ppDetectTone);", "ITLegacyCallMediaControl2_CreateCustomToneObject_Proxy": "HRESULT WINAPI ITLegacyCallMediaControl2_CreateCustomToneObject_Proxy(ITLegacyCallMediaControl2 *This,ITCustomTone **ppCustomTone);", "ITLegacyCallMediaControl2_GetIDAsVariant_Proxy": "HRESULT WINAPI ITLegacyCallMediaControl2_GetIDAsVariant_Proxy(ITLegacyCallMediaControl2 *This,BSTR bstrDeviceClass,VARIANT *pVarDeviceID);", "ITDetectTone_get_AppSpecific_Proxy": "HRESULT WINAPI ITDetectTone_get_AppSpecific_Proxy(ITDetectTone *This,__LONG32 *plAppSpecific);", "ITDetectTone_put_AppSpecific_Proxy": "HRESULT WINAPI ITDetectTone_put_AppSpecific_Proxy(ITDetectTone *This,__LONG32 lAppSpecific);", "ITDetectTone_get_Duration_Proxy": "HRESULT WINAPI ITDetectTone_get_Duration_Proxy(ITDetectTone *This,__LONG32 *plDuration);", "ITDetectTone_put_Duration_Proxy": "HRESULT WINAPI ITDetectTone_put_Duration_Proxy(ITDetectTone *This,__LONG32 lDuration);", "ITDetectTone_get_Frequency_Proxy": "HRESULT WINAPI ITDetectTone_get_Frequency_Proxy(ITDetectTone *This,__LONG32 Index,__LONG32 *plFrequency);", "ITDetectTone_put_Frequency_Proxy": "HRESULT WINAPI ITDetectTone_put_Frequency_Proxy(ITDetectTone *This,__LONG32 Index,__LONG32 lFrequency);", "ITCustomTone_get_Frequency_Proxy": "HRESULT WINAPI ITCustomTone_get_Frequency_Proxy(ITCustomTone *This,__LONG32 *plFrequency);", "ITCustomTone_put_Frequency_Proxy": "HRESULT WINAPI ITCustomTone_put_Frequency_Proxy(ITCustomTone *This,__LONG32 lFrequency);", "ITCustomTone_get_CadenceOn_Proxy": "HRESULT WINAPI ITCustomTone_get_CadenceOn_Proxy(ITCustomTone *This,__LONG32 *plCadenceOn);", "ITCustomTone_put_CadenceOn_Proxy": "HRESULT WINAPI ITCustomTone_put_CadenceOn_Proxy(ITCustomTone *This,__LONG32 CadenceOn);", "ITCustomTone_get_CadenceOff_Proxy": "HRESULT WINAPI ITCustomTone_get_CadenceOff_Proxy(ITCustomTone *This,__LONG32 *plCadenceOff);", "ITCustomTone_put_CadenceOff_Proxy": "HRESULT WINAPI ITCustomTone_put_CadenceOff_Proxy(ITCustomTone *This,__LONG32 lCadenceOff);", "ITCustomTone_get_Volume_Proxy": "HRESULT WINAPI ITCustomTone_get_Volume_Proxy(ITCustomTone *This,__LONG32 *plVolume);", "ITCustomTone_put_Volume_Proxy": "HRESULT WINAPI ITCustomTone_put_Volume_Proxy(ITCustomTone *This,__LONG32 lVolume);", "IEnumPhone_Next_Proxy": "HRESULT WINAPI IEnumPhone_Next_Proxy(IEnumPhone *This,ULONG celt,ITPhone **ppElements,ULONG *pceltFetched);", "IEnumPhone_Reset_Proxy": "HRESULT WINAPI IEnumPhone_Reset_Proxy(IEnumPhone *This);", "IEnumPhone_Skip_Proxy": "HRESULT WINAPI IEnumPhone_Skip_Proxy(IEnumPhone *This,ULONG celt);", "IEnumPhone_Clone_Proxy": "HRESULT WINAPI IEnumPhone_Clone_Proxy(IEnumPhone *This,IEnumPhone **ppEnum);", "IEnumTerminal_Next_Proxy": "HRESULT WINAPI IEnumTerminal_Next_Proxy(IEnumTerminal *This,ULONG celt,ITTerminal **ppElements,ULONG *pceltFetched);", "IEnumTerminal_Reset_Proxy": "HRESULT WINAPI IEnumTerminal_Reset_Proxy(IEnumTerminal *This);", "IEnumTerminal_Skip_Proxy": "HRESULT WINAPI IEnumTerminal_Skip_Proxy(IEnumTerminal *This,ULONG celt);", "IEnumTerminal_Clone_Proxy": "HRESULT WINAPI IEnumTerminal_Clone_Proxy(IEnumTerminal *This,IEnumTerminal **ppEnum);", "IEnumTerminalClass_Next_Proxy": "HRESULT WINAPI IEnumTerminalClass_Next_Proxy(IEnumTerminalClass *This,ULONG celt,GUID *pElements,ULONG *pceltFetched);", "IEnumTerminalClass_Reset_Proxy": "HRESULT WINAPI IEnumTerminalClass_Reset_Proxy(IEnumTerminalClass *This);", "IEnumTerminalClass_Skip_Proxy": "HRESULT WINAPI IEnumTerminalClass_Skip_Proxy(IEnumTerminalClass *This,ULONG celt);", "IEnumTerminalClass_Clone_Proxy": "HRESULT WINAPI IEnumTerminalClass_Clone_Proxy(IEnumTerminalClass *This,IEnumTerminalClass **ppEnum);", "IEnumCall_Next_Proxy": "HRESULT WINAPI IEnumCall_Next_Proxy(IEnumCall *This,ULONG celt,ITCallInfo **ppElements,ULONG *pceltFetched);", "IEnumCall_Reset_Proxy": "HRESULT WINAPI IEnumCall_Reset_Proxy(IEnumCall *This);", "IEnumCall_Skip_Proxy": "HRESULT WINAPI IEnumCall_Skip_Proxy(IEnumCall *This,ULONG celt);", "IEnumCall_Clone_Proxy": "HRESULT WINAPI IEnumCall_Clone_Proxy(IEnumCall *This,IEnumCall **ppEnum);", "IEnumAddress_Next_Proxy": "HRESULT WINAPI IEnumAddress_Next_Proxy(IEnumAddress *This,ULONG celt,ITAddress **ppElements,ULONG *pceltFetched);", "IEnumAddress_Reset_Proxy": "HRESULT WINAPI IEnumAddress_Reset_Proxy(IEnumAddress *This);", "IEnumAddress_Skip_Proxy": "HRESULT WINAPI IEnumAddress_Skip_Proxy(IEnumAddress *This,ULONG celt);", "IEnumAddress_Clone_Proxy": "HRESULT WINAPI IEnumAddress_Clone_Proxy(IEnumAddress *This,IEnumAddress **ppEnum);", "IEnumCallHub_Next_Proxy": "HRESULT WINAPI IEnumCallHub_Next_Proxy(IEnumCallHub *This,ULONG celt,ITCallHub **ppElements,ULONG *pceltFetched);", "IEnumCallHub_Reset_Proxy": "HRESULT WINAPI IEnumCallHub_Reset_Proxy(IEnumCallHub *This);", "IEnumCallHub_Skip_Proxy": "HRESULT WINAPI IEnumCallHub_Skip_Proxy(IEnumCallHub *This,ULONG celt);", "IEnumCallHub_Clone_Proxy": "HRESULT WINAPI IEnumCallHub_Clone_Proxy(IEnumCallHub *This,IEnumCallHub **ppEnum);", "IEnumBstr_Next_Proxy": "HRESULT WINAPI IEnumBstr_Next_Proxy(IEnumBstr *This,ULONG celt,BSTR *ppStrings,ULONG *pceltFetched);", "IEnumBstr_Reset_Proxy": "HRESULT WINAPI IEnumBstr_Reset_Proxy(IEnumBstr *This);", "IEnumBstr_Skip_Proxy": "HRESULT WINAPI IEnumBstr_Skip_Proxy(IEnumBstr *This,ULONG celt);", "IEnumBstr_Clone_Proxy": "HRESULT WINAPI IEnumBstr_Clone_Proxy(IEnumBstr *This,IEnumBstr **ppEnum);", "IEnumPluggableTerminalClassInfo_Next_Proxy": "HRESULT WINAPI IEnumPluggableTerminalClassInfo_Next_Proxy(IEnumPluggableTerminalClassInfo *This,ULONG celt,ITPluggableTerminalClassInfo **ppElements,ULONG *pceltFetched);", "IEnumPluggableTerminalClassInfo_Reset_Proxy": "HRESULT WINAPI IEnumPluggableTerminalClassInfo_Reset_Proxy(IEnumPluggableTerminalClassInfo *This);", "IEnumPluggableTerminalClassInfo_Skip_Proxy": "HRESULT WINAPI IEnumPluggableTerminalClassInfo_Skip_Proxy(IEnumPluggableTerminalClassInfo *This,ULONG celt);", "IEnumPluggableTerminalClassInfo_Clone_Proxy": "HRESULT WINAPI IEnumPluggableTerminalClassInfo_Clone_Proxy(IEnumPluggableTerminalClassInfo *This,IEnumPluggableTerminalClassInfo **ppEnum);", "IEnumPluggableSuperclassInfo_Next_Proxy": "HRESULT WINAPI IEnumPluggableSuperclassInfo_Next_Proxy(IEnumPluggableSuperclassInfo *This,ULONG celt,ITPluggableTerminalSuperclassInfo **ppElements,ULONG *pceltFetched);", "IEnumPluggableSuperclassInfo_Reset_Proxy": "HRESULT WINAPI IEnumPluggableSuperclassInfo_Reset_Proxy(IEnumPluggableSuperclassInfo *This);", "IEnumPluggableSuperclassInfo_Skip_Proxy": "HRESULT WINAPI IEnumPluggableSuperclassInfo_Skip_Proxy(IEnumPluggableSuperclassInfo *This,ULONG celt);", "IEnumPluggableSuperclassInfo_Clone_Proxy": "HRESULT WINAPI IEnumPluggableSuperclassInfo_Clone_Proxy(IEnumPluggableSuperclassInfo *This,IEnumPluggableSuperclassInfo **ppEnum);", "ITPhoneEvent_get_Phone_Proxy": "HRESULT WINAPI ITPhoneEvent_get_Phone_Proxy(ITPhoneEvent *This,ITPhone **ppPhone);", "ITPhoneEvent_get_Event_Proxy": "HRESULT WINAPI ITPhoneEvent_get_Event_Proxy(ITPhoneEvent *This,PHONE_EVENT *pEvent);", "ITPhoneEvent_get_ButtonState_Proxy": "HRESULT WINAPI ITPhoneEvent_get_ButtonState_Proxy(ITPhoneEvent *This,PHONE_BUTTON_STATE *pState);", "ITPhoneEvent_get_HookSwitchState_Proxy": "HRESULT WINAPI ITPhoneEvent_get_HookSwitchState_Proxy(ITPhoneEvent *This,PHONE_HOOK_SWITCH_STATE *pState);", "ITPhoneEvent_get_HookSwitchDevice_Proxy": "HRESULT WINAPI ITPhoneEvent_get_HookSwitchDevice_Proxy(ITPhoneEvent *This,PHONE_HOOK_SWITCH_DEVICE *pDevice);", "ITPhoneEvent_get_RingMode_Proxy": "HRESULT WINAPI ITPhoneEvent_get_RingMode_Proxy(ITPhoneEvent *This,__LONG32 *plRingMode);", "ITPhoneEvent_get_ButtonLampId_Proxy": "HRESULT WINAPI ITPhoneEvent_get_ButtonLampId_Proxy(ITPhoneEvent *This,__LONG32 *plButtonLampId);", "ITPhoneEvent_get_NumberGathered_Proxy": "HRESULT WINAPI ITPhoneEvent_get_NumberGathered_Proxy(ITPhoneEvent *This,BSTR *ppNumber);", "ITPhoneEvent_get_Call_Proxy": "HRESULT WINAPI ITPhoneEvent_get_Call_Proxy(ITPhoneEvent *This,ITCallInfo **ppCallInfo);", "ITCallStateEvent_get_Call_Proxy": "HRESULT WINAPI ITCallStateEvent_get_Call_Proxy(ITCallStateEvent *This,ITCallInfo **ppCallInfo);", "ITCallStateEvent_get_State_Proxy": "HRESULT WINAPI ITCallStateEvent_get_State_Proxy(ITCallStateEvent *This,CALL_STATE *pCallState);", "ITCallStateEvent_get_Cause_Proxy": "HRESULT WINAPI ITCallStateEvent_get_Cause_Proxy(ITCallStateEvent *This,CALL_STATE_EVENT_CAUSE *pCEC);", "ITCallStateEvent_get_CallbackInstance_Proxy": "HRESULT WINAPI ITCallStateEvent_get_CallbackInstance_Proxy(ITCallStateEvent *This,__LONG32 *plCallbackInstance);", "ITPhoneDeviceSpecificEvent_get_Phone_Proxy": "HRESULT WINAPI ITPhoneDeviceSpecificEvent_get_Phone_Proxy(ITPhoneDeviceSpecificEvent *This,ITPhone **ppPhone);", "ITPhoneDeviceSpecificEvent_get_lParam1_Proxy": "HRESULT WINAPI ITPhoneDeviceSpecificEvent_get_lParam1_Proxy(ITPhoneDeviceSpecificEvent *This,__LONG32 *pParam1);", "ITPhoneDeviceSpecificEvent_get_lParam2_Proxy": "HRESULT WINAPI ITPhoneDeviceSpecificEvent_get_lParam2_Proxy(ITPhoneDeviceSpecificEvent *This,__LONG32 *pParam2);", "ITPhoneDeviceSpecificEvent_get_lParam3_Proxy": "HRESULT WINAPI ITPhoneDeviceSpecificEvent_get_lParam3_Proxy(ITPhoneDeviceSpecificEvent *This,__LONG32 *pParam3);", "ITCallMediaEvent_get_Call_Proxy": "HRESULT WINAPI ITCallMediaEvent_get_Call_Proxy(ITCallMediaEvent *This,ITCallInfo **ppCallInfo);", "ITCallMediaEvent_get_Event_Proxy": "HRESULT WINAPI ITCallMediaEvent_get_Event_Proxy(ITCallMediaEvent *This,CALL_MEDIA_EVENT *pCallMediaEvent);", "ITCallMediaEvent_get_Error_Proxy": "HRESULT WINAPI ITCallMediaEvent_get_Error_Proxy(ITCallMediaEvent *This,HRESULT *phrError);", "ITCallMediaEvent_get_Terminal_Proxy": "HRESULT WINAPI ITCallMediaEvent_get_Terminal_Proxy(ITCallMediaEvent *This,ITTerminal **ppTerminal);", "ITCallMediaEvent_get_Stream_Proxy": "HRESULT WINAPI ITCallMediaEvent_get_Stream_Proxy(ITCallMediaEvent *This,ITStream **ppStream);", "ITCallMediaEvent_get_Cause_Proxy": "HRESULT WINAPI ITCallMediaEvent_get_Cause_Proxy(ITCallMediaEvent *This,CALL_MEDIA_EVENT_CAUSE *pCause);", "ITDigitDetectionEvent_get_Call_Proxy": "HRESULT WINAPI ITDigitDetectionEvent_get_Call_Proxy(ITDigitDetectionEvent *This,ITCallInfo **ppCallInfo);", "ITDigitDetectionEvent_get_Digit_Proxy": "HRESULT WINAPI ITDigitDetectionEvent_get_Digit_Proxy(ITDigitDetectionEvent *This,unsigned char *pucDigit);", "ITDigitDetectionEvent_get_DigitMode_Proxy": "HRESULT WINAPI ITDigitDetectionEvent_get_DigitMode_Proxy(ITDigitDetectionEvent *This,TAPI_DIGITMODE *pDigitMode);", "ITDigitDetectionEvent_get_TickCount_Proxy": "HRESULT WINAPI ITDigitDetectionEvent_get_TickCount_Proxy(ITDigitDetectionEvent *This,__LONG32 *plTickCount);", "ITDigitDetectionEvent_get_CallbackInstance_Proxy": "HRESULT WINAPI ITDigitDetectionEvent_get_CallbackInstance_Proxy(ITDigitDetectionEvent *This,__LONG32 *plCallbackInstance);", "ITDigitGenerationEvent_get_Call_Proxy": "HRESULT WINAPI ITDigitGenerationEvent_get_Call_Proxy(ITDigitGenerationEvent *This,ITCallInfo **ppCallInfo);", "ITDigitGenerationEvent_get_GenerationTermination_Proxy": "HRESULT WINAPI ITDigitGenerationEvent_get_GenerationTermination_Proxy(ITDigitGenerationEvent *This,__LONG32 *plGenerationTermination);", "ITDigitGenerationEvent_get_TickCount_Proxy": "HRESULT WINAPI ITDigitGenerationEvent_get_TickCount_Proxy(ITDigitGenerationEvent *This,__LONG32 *plTickCount);", "ITDigitGenerationEvent_get_CallbackInstance_Proxy": "HRESULT WINAPI ITDigitGenerationEvent_get_CallbackInstance_Proxy(ITDigitGenerationEvent *This,__LONG32 *plCallbackInstance);", "ITDigitsGatheredEvent_get_Call_Proxy": "HRESULT WINAPI ITDigitsGatheredEvent_get_Call_Proxy(ITDigitsGatheredEvent *This,ITCallInfo **ppCallInfo);", "ITDigitsGatheredEvent_get_Digits_Proxy": "HRESULT WINAPI ITDigitsGatheredEvent_get_Digits_Proxy(ITDigitsGatheredEvent *This,BSTR *ppDigits);", "ITDigitsGatheredEvent_get_GatherTermination_Proxy": "HRESULT WINAPI ITDigitsGatheredEvent_get_GatherTermination_Proxy(ITDigitsGatheredEvent *This,TAPI_GATHERTERM *pGatherTermination);", "ITDigitsGatheredEvent_get_TickCount_Proxy": "HRESULT WINAPI ITDigitsGatheredEvent_get_TickCount_Proxy(ITDigitsGatheredEvent *This,__LONG32 *plTickCount);", "ITDigitsGatheredEvent_get_CallbackInstance_Proxy": "HRESULT WINAPI ITDigitsGatheredEvent_get_CallbackInstance_Proxy(ITDigitsGatheredEvent *This,__LONG32 *plCallbackInstance);", "ITToneDetectionEvent_get_Call_Proxy": "HRESULT WINAPI ITToneDetectionEvent_get_Call_Proxy(ITToneDetectionEvent *This,ITCallInfo **ppCallInfo);", "ITToneDetectionEvent_get_AppSpecific_Proxy": "HRESULT WINAPI ITToneDetectionEvent_get_AppSpecific_Proxy(ITToneDetectionEvent *This,__LONG32 *plAppSpecific);", "ITToneDetectionEvent_get_TickCount_Proxy": "HRESULT WINAPI ITToneDetectionEvent_get_TickCount_Proxy(ITToneDetectionEvent *This,__LONG32 *plTickCount);", "ITToneDetectionEvent_get_CallbackInstance_Proxy": "HRESULT WINAPI ITToneDetectionEvent_get_CallbackInstance_Proxy(ITToneDetectionEvent *This,__LONG32 *plCallbackInstance);", "ITTAPIObjectEvent_get_TAPIObject_Proxy": "HRESULT WINAPI ITTAPIObjectEvent_get_TAPIObject_Proxy(ITTAPIObjectEvent *This,ITTAPI **ppTAPIObject);", "ITTAPIObjectEvent_get_Event_Proxy": "HRESULT WINAPI ITTAPIObjectEvent_get_Event_Proxy(ITTAPIObjectEvent *This,TAPIOBJECT_EVENT *pEvent);", "ITTAPIObjectEvent_get_Address_Proxy": "HRESULT WINAPI ITTAPIObjectEvent_get_Address_Proxy(ITTAPIObjectEvent *This,ITAddress **ppAddress);", "ITTAPIObjectEvent_get_CallbackInstance_Proxy": "HRESULT WINAPI ITTAPIObjectEvent_get_CallbackInstance_Proxy(ITTAPIObjectEvent *This,__LONG32 *plCallbackInstance);", "ITTAPIObjectEvent2_get_Phone_Proxy": "HRESULT WINAPI ITTAPIObjectEvent2_get_Phone_Proxy(ITTAPIObjectEvent2 *This,ITPhone **ppPhone);", "ITTAPIEventNotification_Event_Proxy": "HRESULT WINAPI ITTAPIEventNotification_Event_Proxy(ITTAPIEventNotification *This,TAPI_EVENT TapiEvent,IDispatch *pEvent);", "ITCallHubEvent_get_Event_Proxy": "HRESULT WINAPI ITCallHubEvent_get_Event_Proxy(ITCallHubEvent *This,CALLHUB_EVENT *pEvent);", "ITCallHubEvent_get_CallHub_Proxy": "HRESULT WINAPI ITCallHubEvent_get_CallHub_Proxy(ITCallHubEvent *This,ITCallHub **ppCallHub);", "ITCallHubEvent_get_Call_Proxy": "HRESULT WINAPI ITCallHubEvent_get_Call_Proxy(ITCallHubEvent *This,ITCallInfo **ppCall);", "ITAddressEvent_get_Address_Proxy": "HRESULT WINAPI ITAddressEvent_get_Address_Proxy(ITAddressEvent *This,ITAddress **ppAddress);", "ITAddressEvent_get_Event_Proxy": "HRESULT WINAPI ITAddressEvent_get_Event_Proxy(ITAddressEvent *This,ADDRESS_EVENT *pEvent);", "ITAddressEvent_get_Terminal_Proxy": "HRESULT WINAPI ITAddressEvent_get_Terminal_Proxy(ITAddressEvent *This,ITTerminal **ppTerminal);", "ITAddressDeviceSpecificEvent_get_Address_Proxy": "HRESULT WINAPI ITAddressDeviceSpecificEvent_get_Address_Proxy(ITAddressDeviceSpecificEvent *This,ITAddress **ppAddress);", "ITAddressDeviceSpecificEvent_get_Call_Proxy": "HRESULT WINAPI ITAddressDeviceSpecificEvent_get_Call_Proxy(ITAddressDeviceSpecificEvent *This,ITCallInfo **ppCall);", "ITAddressDeviceSpecificEvent_get_lParam1_Proxy": "HRESULT WINAPI ITAddressDeviceSpecificEvent_get_lParam1_Proxy(ITAddressDeviceSpecificEvent *This,__LONG32 *pParam1);", "ITAddressDeviceSpecificEvent_get_lParam2_Proxy": "HRESULT WINAPI ITAddressDeviceSpecificEvent_get_lParam2_Proxy(ITAddressDeviceSpecificEvent *This,__LONG32 *pParam2);", "ITAddressDeviceSpecificEvent_get_lParam3_Proxy": "HRESULT WINAPI ITAddressDeviceSpecificEvent_get_lParam3_Proxy(ITAddressDeviceSpecificEvent *This,__LONG32 *pParam3);", "ITFileTerminalEvent_get_Terminal_Proxy": "HRESULT WINAPI ITFileTerminalEvent_get_Terminal_Proxy(ITFileTerminalEvent *This,ITTerminal **ppTerminal);", "ITFileTerminalEvent_get_Track_Proxy": "HRESULT WINAPI ITFileTerminalEvent_get_Track_Proxy(ITFileTerminalEvent *This,ITFileTrack **ppTrackTerminal);", "ITFileTerminalEvent_get_Call_Proxy": "HRESULT WINAPI ITFileTerminalEvent_get_Call_Proxy(ITFileTerminalEvent *This,ITCallInfo **ppCall);", "ITFileTerminalEvent_get_State_Proxy": "HRESULT WINAPI ITFileTerminalEvent_get_State_Proxy(ITFileTerminalEvent *This,TERMINAL_MEDIA_STATE *pState);", "ITFileTerminalEvent_get_Cause_Proxy": "HRESULT WINAPI ITFileTerminalEvent_get_Cause_Proxy(ITFileTerminalEvent *This,FT_STATE_EVENT_CAUSE *pCause);", "ITFileTerminalEvent_get_Error_Proxy": "HRESULT WINAPI ITFileTerminalEvent_get_Error_Proxy(ITFileTerminalEvent *This,HRESULT *phrErrorCode);", "ITTTSTerminalEvent_get_Terminal_Proxy": "HRESULT WINAPI ITTTSTerminalEvent_get_Terminal_Proxy(ITTTSTerminalEvent *This,ITTerminal **ppTerminal);", "ITTTSTerminalEvent_get_Call_Proxy": "HRESULT WINAPI ITTTSTerminalEvent_get_Call_Proxy(ITTTSTerminalEvent *This,ITCallInfo **ppCall);", "ITTTSTerminalEvent_get_Error_Proxy": "HRESULT WINAPI ITTTSTerminalEvent_get_Error_Proxy(ITTTSTerminalEvent *This,HRESULT *phrErrorCode);", "ITASRTerminalEvent_get_Terminal_Proxy": "HRESULT WINAPI ITASRTerminalEvent_get_Terminal_Proxy(ITASRTerminalEvent *This,ITTerminal **ppTerminal);", "ITASRTerminalEvent_get_Call_Proxy": "HRESULT WINAPI ITASRTerminalEvent_get_Call_Proxy(ITASRTerminalEvent *This,ITCallInfo **ppCall);", "ITASRTerminalEvent_get_Error_Proxy": "HRESULT WINAPI ITASRTerminalEvent_get_Error_Proxy(ITASRTerminalEvent *This,HRESULT *phrErrorCode);", "ITToneTerminalEvent_get_Terminal_Proxy": "HRESULT WINAPI ITToneTerminalEvent_get_Terminal_Proxy(ITToneTerminalEvent *This,ITTerminal **ppTerminal);", "ITToneTerminalEvent_get_Call_Proxy": "HRESULT WINAPI ITToneTerminalEvent_get_Call_Proxy(ITToneTerminalEvent *This,ITCallInfo **ppCall);", "ITToneTerminalEvent_get_Error_Proxy": "HRESULT WINAPI ITToneTerminalEvent_get_Error_Proxy(ITToneTerminalEvent *This,HRESULT *phrErrorCode);", "ITQOSEvent_get_Call_Proxy": "HRESULT WINAPI ITQOSEvent_get_Call_Proxy(ITQOSEvent *This,ITCallInfo **ppCall);", "ITQOSEvent_get_Event_Proxy": "HRESULT WINAPI ITQOSEvent_get_Event_Proxy(ITQOSEvent *This,QOS_EVENT *pQosEvent);", "ITQOSEvent_get_MediaType_Proxy": "HRESULT WINAPI ITQOSEvent_get_MediaType_Proxy(ITQOSEvent *This,__LONG32 *plMediaType);", "ITCallInfoChangeEvent_get_Call_Proxy": "HRESULT WINAPI ITCallInfoChangeEvent_get_Call_Proxy(ITCallInfoChangeEvent *This,ITCallInfo **ppCall);", "ITCallInfoChangeEvent_get_Cause_Proxy": "HRESULT WINAPI ITCallInfoChangeEvent_get_Cause_Proxy(ITCallInfoChangeEvent *This,CALLINFOCHANGE_CAUSE *pCIC);", "ITCallInfoChangeEvent_get_CallbackInstance_Proxy": "HRESULT WINAPI ITCallInfoChangeEvent_get_CallbackInstance_Proxy(ITCallInfoChangeEvent *This,__LONG32 *plCallbackInstance);", "ITRequest_MakeCall_Proxy": "HRESULT WINAPI ITRequest_MakeCall_Proxy(ITRequest *This,BSTR pDestAddress,BSTR pAppName,BSTR pCalledParty,BSTR pComment);", "ITRequestEvent_get_RegistrationInstance_Proxy": "HRESULT WINAPI ITRequestEvent_get_RegistrationInstance_Proxy(ITRequestEvent *This,__LONG32 *plRegistrationInstance);", "ITRequestEvent_get_RequestMode_Proxy": "HRESULT WINAPI ITRequestEvent_get_RequestMode_Proxy(ITRequestEvent *This,__LONG32 *plRequestMode);", "ITRequestEvent_get_DestAddress_Proxy": "HRESULT WINAPI ITRequestEvent_get_DestAddress_Proxy(ITRequestEvent *This,BSTR *ppDestAddress);", "ITRequestEvent_get_AppName_Proxy": "HRESULT WINAPI ITRequestEvent_get_AppName_Proxy(ITRequestEvent *This,BSTR *ppAppName);", "ITRequestEvent_get_CalledParty_Proxy": "HRESULT WINAPI ITRequestEvent_get_CalledParty_Proxy(ITRequestEvent *This,BSTR *ppCalledParty);", "ITRequestEvent_get_Comment_Proxy": "HRESULT WINAPI ITRequestEvent_get_Comment_Proxy(ITRequestEvent *This,BSTR *ppComment);", "ITCollection_get_Count_Proxy": "HRESULT WINAPI ITCollection_get_Count_Proxy(ITCollection *This,__LONG32 *lCount);", "ITCollection_get_Item_Proxy": "HRESULT WINAPI ITCollection_get_Item_Proxy(ITCollection *This,__LONG32 Index,VARIANT *pVariant);", "ITCollection_get__NewEnum_Proxy": "HRESULT WINAPI ITCollection_get__NewEnum_Proxy(ITCollection *This,IUnknown **ppNewEnum);", "ITCollection2_Add_Proxy": "HRESULT WINAPI ITCollection2_Add_Proxy(ITCollection2 *This,__LONG32 Index,VARIANT *pVariant);", "ITCollection2_Remove_Proxy": "HRESULT WINAPI ITCollection2_Remove_Proxy(ITCollection2 *This,__LONG32 Index);", "ITForwardInformation_put_NumRingsNoAnswer_Proxy": "HRESULT WINAPI ITForwardInformation_put_NumRingsNoAnswer_Proxy(ITForwardInformation *This,__LONG32 lNumRings);", "ITForwardInformation_get_NumRingsNoAnswer_Proxy": "HRESULT WINAPI ITForwardInformation_get_NumRingsNoAnswer_Proxy(ITForwardInformation *This,__LONG32 *plNumRings);", "ITForwardInformation_SetForwardType_Proxy": "HRESULT WINAPI ITForwardInformation_SetForwardType_Proxy(ITForwardInformation *This,__LONG32 ForwardType,BSTR pDestAddress,BSTR pCallerAddress);", "ITForwardInformation_get_ForwardTypeDestination_Proxy": "HRESULT WINAPI ITForwardInformation_get_ForwardTypeDestination_Proxy(ITForwardInformation *This,__LONG32 ForwardType,BSTR *ppDestAddress);", "ITForwardInformation_get_ForwardTypeCaller_Proxy": "HRESULT WINAPI ITForwardInformation_get_ForwardTypeCaller_Proxy(ITForwardInformation *This,__LONG32 Forwardtype,BSTR *ppCallerAddress);", "ITForwardInformation_GetForwardType_Proxy": "HRESULT WINAPI ITForwardInformation_GetForwardType_Proxy(ITForwardInformation *This,__LONG32 ForwardType,BSTR *ppDestinationAddress,BSTR *ppCallerAddress);", "ITForwardInformation_Clear_Proxy": "HRESULT WINAPI ITForwardInformation_Clear_Proxy(ITForwardInformation *This);", "ITForwardInformation2_SetForwardType2_Proxy": "HRESULT WINAPI ITForwardInformation2_SetForwardType2_Proxy(ITForwardInformation2 *This,__LONG32 ForwardType,BSTR pDestAddress,__LONG32 DestAddressType,BSTR pCallerAddress,__LONG32 CallerAddressType);", "ITForwardInformation2_GetForwardType2_Proxy": "HRESULT WINAPI ITForwardInformation2_GetForwardType2_Proxy(ITForwardInformation2 *This,__LONG32 ForwardType,BSTR *ppDestinationAddress,__LONG32 *pDestAddressType,BSTR *ppCallerAddress,__LONG32 *pCallerAddressType);", "ITForwardInformation2_get_ForwardTypeDestinationAddressType_Proxy": "HRESULT WINAPI ITForwardInformation2_get_ForwardTypeDestinationAddressType_Proxy(ITForwardInformation2 *This,__LONG32 ForwardType,__LONG32 *pDestAddressType);", "ITForwardInformation2_get_ForwardTypeCallerAddressType_Proxy": "HRESULT WINAPI ITForwardInformation2_get_ForwardTypeCallerAddressType_Proxy(ITForwardInformation2 *This,__LONG32 Forwardtype,__LONG32 *pCallerAddressType);", "ITAddressTranslation_TranslateAddress_Proxy": "HRESULT WINAPI ITAddressTranslation_TranslateAddress_Proxy(ITAddressTranslation *This,BSTR pAddressToTranslate,__LONG32 lCard,__LONG32 lTranslateOptions,ITAddressTranslationInfo **ppTranslated);", "ITAddressTranslation_TranslateDialog_Proxy": "HRESULT WINAPI ITAddressTranslation_TranslateDialog_Proxy(ITAddressTranslation *This,TAPIHWND hwndOwner,BSTR pAddressIn);", "ITAddressTranslation_EnumerateLocations_Proxy": "HRESULT WINAPI ITAddressTranslation_EnumerateLocations_Proxy(ITAddressTranslation *This,IEnumLocation **ppEnumLocation);", "ITAddressTranslation_get_Locations_Proxy": "HRESULT WINAPI ITAddressTranslation_get_Locations_Proxy(ITAddressTranslation *This,VARIANT *pVariant);", "ITAddressTranslation_EnumerateCallingCards_Proxy": "HRESULT WINAPI ITAddressTranslation_EnumerateCallingCards_Proxy(ITAddressTranslation *This,IEnumCallingCard **ppEnumCallingCard);", "ITAddressTranslation_get_CallingCards_Proxy": "HRESULT WINAPI ITAddressTranslation_get_CallingCards_Proxy(ITAddressTranslation *This,VARIANT *pVariant);", "ITAddressTranslationInfo_get_DialableString_Proxy": "HRESULT WINAPI ITAddressTranslationInfo_get_DialableString_Proxy(ITAddressTranslationInfo *This,BSTR *ppDialableString);", "ITAddressTranslationInfo_get_DisplayableString_Proxy": "HRESULT WINAPI ITAddressTranslationInfo_get_DisplayableString_Proxy(ITAddressTranslationInfo *This,BSTR *ppDisplayableString);", "ITAddressTranslationInfo_get_CurrentCountryCode_Proxy": "HRESULT WINAPI ITAddressTranslationInfo_get_CurrentCountryCode_Proxy(ITAddressTranslationInfo *This,__LONG32 *CountryCode);", "ITAddressTranslationInfo_get_DestinationCountryCode_Proxy": "HRESULT WINAPI ITAddressTranslationInfo_get_DestinationCountryCode_Proxy(ITAddressTranslationInfo *This,__LONG32 *CountryCode);", "ITAddressTranslationInfo_get_TranslationResults_Proxy": "HRESULT WINAPI ITAddressTranslationInfo_get_TranslationResults_Proxy(ITAddressTranslationInfo *This,__LONG32 *plResults);", "ITLocationInfo_get_PermanentLocationID_Proxy": "HRESULT WINAPI ITLocationInfo_get_PermanentLocationID_Proxy(ITLocationInfo *This,__LONG32 *plLocationID);", "ITLocationInfo_get_CountryCode_Proxy": "HRESULT WINAPI ITLocationInfo_get_CountryCode_Proxy(ITLocationInfo *This,__LONG32 *plCountryCode);", "ITLocationInfo_get_CountryID_Proxy": "HRESULT WINAPI ITLocationInfo_get_CountryID_Proxy(ITLocationInfo *This,__LONG32 *plCountryID);", "ITLocationInfo_get_Options_Proxy": "HRESULT WINAPI ITLocationInfo_get_Options_Proxy(ITLocationInfo *This,__LONG32 *plOptions);", "ITLocationInfo_get_PreferredCardID_Proxy": "HRESULT WINAPI ITLocationInfo_get_PreferredCardID_Proxy(ITLocationInfo *This,__LONG32 *plCardID);", "ITLocationInfo_get_LocationName_Proxy": "HRESULT WINAPI ITLocationInfo_get_LocationName_Proxy(ITLocationInfo *This,BSTR *ppLocationName);", "ITLocationInfo_get_CityCode_Proxy": "HRESULT WINAPI ITLocationInfo_get_CityCode_Proxy(ITLocationInfo *This,BSTR *ppCode);", "ITLocationInfo_get_LocalAccessCode_Proxy": "HRESULT WINAPI ITLocationInfo_get_LocalAccessCode_Proxy(ITLocationInfo *This,BSTR *ppCode);", "ITLocationInfo_get_LongDistanceAccessCode_Proxy": "HRESULT WINAPI ITLocationInfo_get_LongDistanceAccessCode_Proxy(ITLocationInfo *This,BSTR *ppCode);", "ITLocationInfo_get_TollPrefixList_Proxy": "HRESULT WINAPI ITLocationInfo_get_TollPrefixList_Proxy(ITLocationInfo *This,BSTR *ppTollList);", "ITLocationInfo_get_CancelCallWaitingCode_Proxy": "HRESULT WINAPI ITLocationInfo_get_CancelCallWaitingCode_Proxy(ITLocationInfo *This,BSTR *ppCode);", "IEnumLocation_Next_Proxy": "HRESULT WINAPI IEnumLocation_Next_Proxy(IEnumLocation *This,ULONG celt,ITLocationInfo **ppElements,ULONG *pceltFetched);", "IEnumLocation_Reset_Proxy": "HRESULT WINAPI IEnumLocation_Reset_Proxy(IEnumLocation *This);", "IEnumLocation_Skip_Proxy": "HRESULT WINAPI IEnumLocation_Skip_Proxy(IEnumLocation *This,ULONG celt);", "IEnumLocation_Clone_Proxy": "HRESULT WINAPI IEnumLocation_Clone_Proxy(IEnumLocation *This,IEnumLocation **ppEnum);", "ITCallingCard_get_PermanentCardID_Proxy": "HRESULT WINAPI ITCallingCard_get_PermanentCardID_Proxy(ITCallingCard *This,__LONG32 *plCardID);", "ITCallingCard_get_NumberOfDigits_Proxy": "HRESULT WINAPI ITCallingCard_get_NumberOfDigits_Proxy(ITCallingCard *This,__LONG32 *plDigits);", "ITCallingCard_get_Options_Proxy": "HRESULT WINAPI ITCallingCard_get_Options_Proxy(ITCallingCard *This,__LONG32 *plOptions);", "ITCallingCard_get_CardName_Proxy": "HRESULT WINAPI ITCallingCard_get_CardName_Proxy(ITCallingCard *This,BSTR *ppCardName);", "ITCallingCard_get_SameAreaDialingRule_Proxy": "HRESULT WINAPI ITCallingCard_get_SameAreaDialingRule_Proxy(ITCallingCard *This,BSTR *ppRule);", "ITCallingCard_get_LongDistanceDialingRule_Proxy": "HRESULT WINAPI ITCallingCard_get_LongDistanceDialingRule_Proxy(ITCallingCard *This,BSTR *ppRule);", "ITCallingCard_get_InternationalDialingRule_Proxy": "HRESULT WINAPI ITCallingCard_get_InternationalDialingRule_Proxy(ITCallingCard *This,BSTR *ppRule);", "IEnumCallingCard_Next_Proxy": "HRESULT WINAPI IEnumCallingCard_Next_Proxy(IEnumCallingCard *This,ULONG celt,ITCallingCard **ppElements,ULONG *pceltFetched);", "IEnumCallingCard_Reset_Proxy": "HRESULT WINAPI IEnumCallingCard_Reset_Proxy(IEnumCallingCard *This);", "IEnumCallingCard_Skip_Proxy": "HRESULT WINAPI IEnumCallingCard_Skip_Proxy(IEnumCallingCard *This,ULONG celt);", "IEnumCallingCard_Clone_Proxy": "HRESULT WINAPI IEnumCallingCard_Clone_Proxy(IEnumCallingCard *This,IEnumCallingCard **ppEnum);", "ITCallNotificationEvent_get_Call_Proxy": "HRESULT WINAPI ITCallNotificationEvent_get_Call_Proxy(ITCallNotificationEvent *This,ITCallInfo **ppCall);", "ITCallNotificationEvent_get_Event_Proxy": "HRESULT WINAPI ITCallNotificationEvent_get_Event_Proxy(ITCallNotificationEvent *This,CALL_NOTIFICATION_EVENT *pCallNotificationEvent);", "ITCallNotificationEvent_get_CallbackInstance_Proxy": "HRESULT WINAPI ITCallNotificationEvent_get_CallbackInstance_Proxy(ITCallNotificationEvent *This,__LONG32 *plCallbackInstance);", "ITDispatchMapper_QueryDispatchInterface_Proxy": "HRESULT WINAPI ITDispatchMapper_QueryDispatchInterface_Proxy(ITDispatchMapper *This,BSTR pIID,IDispatch *pInterfaceToMap,IDispatch **ppReturnedInterface);", "ITStreamControl_CreateStream_Proxy": "HRESULT WINAPI ITStreamControl_CreateStream_Proxy(ITStreamControl *This,__LONG32 lMediaType,TERMINAL_DIRECTION td,ITStream **ppStream);", "ITStreamControl_RemoveStream_Proxy": "HRESULT WINAPI ITStreamControl_RemoveStream_Proxy(ITStreamControl *This,ITStream *pStream);", "ITStreamControl_EnumerateStreams_Proxy": "HRESULT WINAPI ITStreamControl_EnumerateStreams_Proxy(ITStreamControl *This,IEnumStream **ppEnumStream);", "ITStreamControl_get_Streams_Proxy": "HRESULT WINAPI ITStreamControl_get_Streams_Proxy(ITStreamControl *This,VARIANT *pVariant);", "ITStream_get_MediaType_Proxy": "HRESULT WINAPI ITStream_get_MediaType_Proxy(ITStream *This,__LONG32 *plMediaType);", "ITStream_get_Direction_Proxy": "HRESULT WINAPI ITStream_get_Direction_Proxy(ITStream *This,TERMINAL_DIRECTION *pTD);", "ITStream_get_Name_Proxy": "HRESULT WINAPI ITStream_get_Name_Proxy(ITStream *This,BSTR *ppName);", "ITStream_StartStream_Proxy": "HRESULT WINAPI ITStream_StartStream_Proxy(ITStream *This);", "ITStream_PauseStream_Proxy": "HRESULT WINAPI ITStream_PauseStream_Proxy(ITStream *This);", "ITStream_StopStream_Proxy": "HRESULT WINAPI ITStream_StopStream_Proxy(ITStream *This);", "ITStream_SelectTerminal_Proxy": "HRESULT WINAPI ITStream_SelectTerminal_Proxy(ITStream *This,ITTerminal *pTerminal);", "ITStream_UnselectTerminal_Proxy": "HRESULT WINAPI ITStream_UnselectTerminal_Proxy(ITStream *This,ITTerminal *pTerminal);", "ITStream_EnumerateTerminals_Proxy": "HRESULT WINAPI ITStream_EnumerateTerminals_Proxy(ITStream *This,IEnumTerminal **ppEnumTerminal);", "ITStream_get_Terminals_Proxy": "HRESULT WINAPI ITStream_get_Terminals_Proxy(ITStream *This,VARIANT *pTerminals);", "IEnumStream_Next_Proxy": "HRESULT WINAPI IEnumStream_Next_Proxy(IEnumStream *This,ULONG celt,ITStream **ppElements,ULONG *pceltFetched);", "IEnumStream_Reset_Proxy": "HRESULT WINAPI IEnumStream_Reset_Proxy(IEnumStream *This);", "IEnumStream_Skip_Proxy": "HRESULT WINAPI IEnumStream_Skip_Proxy(IEnumStream *This,ULONG celt);", "IEnumStream_Clone_Proxy": "HRESULT WINAPI IEnumStream_Clone_Proxy(IEnumStream *This,IEnumStream **ppEnum);", "ITSubStreamControl_CreateSubStream_Proxy": "HRESULT WINAPI ITSubStreamControl_CreateSubStream_Proxy(ITSubStreamControl *This,ITSubStream **ppSubStream);", "ITSubStreamControl_RemoveSubStream_Proxy": "HRESULT WINAPI ITSubStreamControl_RemoveSubStream_Proxy(ITSubStreamControl *This,ITSubStream *pSubStream);", "ITSubStreamControl_EnumerateSubStreams_Proxy": "HRESULT WINAPI ITSubStreamControl_EnumerateSubStreams_Proxy(ITSubStreamControl *This,IEnumSubStream **ppEnumSubStream);", "ITSubStreamControl_get_SubStreams_Proxy": "HRESULT WINAPI ITSubStreamControl_get_SubStreams_Proxy(ITSubStreamControl *This,VARIANT *pVariant);", "ITSubStream_StartSubStream_Proxy": "HRESULT WINAPI ITSubStream_StartSubStream_Proxy(ITSubStream *This);", "ITSubStream_PauseSubStream_Proxy": "HRESULT WINAPI ITSubStream_PauseSubStream_Proxy(ITSubStream *This);", "ITSubStream_StopSubStream_Proxy": "HRESULT WINAPI ITSubStream_StopSubStream_Proxy(ITSubStream *This);", "ITSubStream_SelectTerminal_Proxy": "HRESULT WINAPI ITSubStream_SelectTerminal_Proxy(ITSubStream *This,ITTerminal *pTerminal);", "ITSubStream_UnselectTerminal_Proxy": "HRESULT WINAPI ITSubStream_UnselectTerminal_Proxy(ITSubStream *This,ITTerminal *pTerminal);", "ITSubStream_EnumerateTerminals_Proxy": "HRESULT WINAPI ITSubStream_EnumerateTerminals_Proxy(ITSubStream *This,IEnumTerminal **ppEnumTerminal);", "ITSubStream_get_Terminals_Proxy": "HRESULT WINAPI ITSubStream_get_Terminals_Proxy(ITSubStream *This,VARIANT *pTerminals);", "ITSubStream_get_Stream_Proxy": "HRESULT WINAPI ITSubStream_get_Stream_Proxy(ITSubStream *This,ITStream **ppITStream);", "IEnumSubStream_Next_Proxy": "HRESULT WINAPI IEnumSubStream_Next_Proxy(IEnumSubStream *This,ULONG celt,ITSubStream **ppElements,ULONG *pceltFetched);", "IEnumSubStream_Reset_Proxy": "HRESULT WINAPI IEnumSubStream_Reset_Proxy(IEnumSubStream *This);", "IEnumSubStream_Skip_Proxy": "HRESULT WINAPI IEnumSubStream_Skip_Proxy(IEnumSubStream *This,ULONG celt);", "IEnumSubStream_Clone_Proxy": "HRESULT WINAPI IEnumSubStream_Clone_Proxy(IEnumSubStream *This,IEnumSubStream **ppEnum);", "ITLegacyWaveSupport_IsFullDuplex_Proxy": "HRESULT WINAPI ITLegacyWaveSupport_IsFullDuplex_Proxy(ITLegacyWaveSupport *This,FULLDUPLEX_SUPPORT *pSupport);", "ITBasicCallControl2_RequestTerminal_Proxy": "HRESULT WINAPI ITBasicCallControl2_RequestTerminal_Proxy(ITBasicCallControl2 *This,BSTR bstrTerminalClassGUID,__LONG32 lMediaType,TERMINAL_DIRECTION Direction,ITTerminal **ppTerminal);", "ITBasicCallControl2_SelectTerminalOnCall_Proxy": "HRESULT WINAPI ITBasicCallControl2_SelectTerminalOnCall_Proxy(ITBasicCallControl2 *This,ITTerminal *pTerminal);", "ITBasicCallControl2_UnselectTerminalOnCall_Proxy": "HRESULT WINAPI ITBasicCallControl2_UnselectTerminalOnCall_Proxy(ITBasicCallControl2 *This,ITTerminal *pTerminal);", "ITScriptableAudioFormat_get_Channels_Proxy": "HRESULT WINAPI ITScriptableAudioFormat_get_Channels_Proxy(ITScriptableAudioFormat *This,__LONG32 *pVal);", "ITScriptableAudioFormat_put_Channels_Proxy": "HRESULT WINAPI ITScriptableAudioFormat_put_Channels_Proxy(ITScriptableAudioFormat *This,const __LONG32 nNewVal);", "ITScriptableAudioFormat_get_SamplesPerSec_Proxy": "HRESULT WINAPI ITScriptableAudioFormat_get_SamplesPerSec_Proxy(ITScriptableAudioFormat *This,__LONG32 *pVal);", "ITScriptableAudioFormat_put_SamplesPerSec_Proxy": "HRESULT WINAPI ITScriptableAudioFormat_put_SamplesPerSec_Proxy(ITScriptableAudioFormat *This,const __LONG32 nNewVal);", "ITScriptableAudioFormat_get_AvgBytesPerSec_Proxy": "HRESULT WINAPI ITScriptableAudioFormat_get_AvgBytesPerSec_Proxy(ITScriptableAudioFormat *This,__LONG32 *pVal);", "ITScriptableAudioFormat_put_AvgBytesPerSec_Proxy": "HRESULT WINAPI ITScriptableAudioFormat_put_AvgBytesPerSec_Proxy(ITScriptableAudioFormat *This,const __LONG32 nNewVal);", "ITScriptableAudioFormat_get_BlockAlign_Proxy": "HRESULT WINAPI ITScriptableAudioFormat_get_BlockAlign_Proxy(ITScriptableAudioFormat *This,__LONG32 *pVal);", "ITScriptableAudioFormat_put_BlockAlign_Proxy": "HRESULT WINAPI ITScriptableAudioFormat_put_BlockAlign_Proxy(ITScriptableAudioFormat *This,const __LONG32 nNewVal);", "ITScriptableAudioFormat_get_BitsPerSample_Proxy": "HRESULT WINAPI ITScriptableAudioFormat_get_BitsPerSample_Proxy(ITScriptableAudioFormat *This,__LONG32 *pVal);", "ITScriptableAudioFormat_put_BitsPerSample_Proxy": "HRESULT WINAPI ITScriptableAudioFormat_put_BitsPerSample_Proxy(ITScriptableAudioFormat *This,const __LONG32 nNewVal);", "ITScriptableAudioFormat_get_FormatTag_Proxy": "HRESULT WINAPI ITScriptableAudioFormat_get_FormatTag_Proxy(ITScriptableAudioFormat *This,__LONG32 *pVal);", "ITScriptableAudioFormat_put_FormatTag_Proxy": "HRESULT WINAPI ITScriptableAudioFormat_put_FormatTag_Proxy(ITScriptableAudioFormat *This,const __LONG32 nNewVal);", "ICEnroll_createFilePKCS10_Proxy": "HRESULT WINAPI ICEnroll_createFilePKCS10_Proxy(ICEnroll *This,BSTR DNName,BSTR Usage,BSTR wszPKCS10FileName);", "ICEnroll_acceptFilePKCS7_Proxy": "HRESULT WINAPI ICEnroll_acceptFilePKCS7_Proxy(ICEnroll *This,BSTR wszPKCS7FileName);", "ICEnroll_createPKCS10_Proxy": "HRESULT WINAPI ICEnroll_createPKCS10_Proxy(ICEnroll *This,BSTR DNName,BSTR Usage,BSTR *pPKCS10);", "ICEnroll_acceptPKCS7_Proxy": "HRESULT WINAPI ICEnroll_acceptPKCS7_Proxy(ICEnroll *This,BSTR PKCS7);", "ICEnroll_getCertFromPKCS7_Proxy": "HRESULT WINAPI ICEnroll_getCertFromPKCS7_Proxy(ICEnroll *This,BSTR wszPKCS7,BSTR *pbstrCert);", "ICEnroll_enumProviders_Proxy": "HRESULT WINAPI ICEnroll_enumProviders_Proxy(ICEnroll *This,LONG dwIndex,LONG dwFlags,BSTR *pbstrProvName);", "ICEnroll_enumContainers_Proxy": "HRESULT WINAPI ICEnroll_enumContainers_Proxy(ICEnroll *This,LONG dwIndex,BSTR *pbstr);", "ICEnroll_freeRequestInfo_Proxy": "HRESULT WINAPI ICEnroll_freeRequestInfo_Proxy(ICEnroll *This,BSTR PKCS7OrPKCS10);", "ICEnroll_get_MyStoreName_Proxy": "HRESULT WINAPI ICEnroll_get_MyStoreName_Proxy(ICEnroll *This,BSTR *pbstrName);", "ICEnroll_put_MyStoreName_Proxy": "HRESULT WINAPI ICEnroll_put_MyStoreName_Proxy(ICEnroll *This,BSTR bstrName);", "ICEnroll_get_MyStoreType_Proxy": "HRESULT WINAPI ICEnroll_get_MyStoreType_Proxy(ICEnroll *This,BSTR *pbstrType);", "ICEnroll_put_MyStoreType_Proxy": "HRESULT WINAPI ICEnroll_put_MyStoreType_Proxy(ICEnroll *This,BSTR bstrType);", "ICEnroll_get_MyStoreFlags_Proxy": "HRESULT WINAPI ICEnroll_get_MyStoreFlags_Proxy(ICEnroll *This,LONG *pdwFlags);", "ICEnroll_put_MyStoreFlags_Proxy": "HRESULT WINAPI ICEnroll_put_MyStoreFlags_Proxy(ICEnroll *This,LONG dwFlags);", "ICEnroll_get_CAStoreName_Proxy": "HRESULT WINAPI ICEnroll_get_CAStoreName_Proxy(ICEnroll *This,BSTR *pbstrName);", "ICEnroll_put_CAStoreName_Proxy": "HRESULT WINAPI ICEnroll_put_CAStoreName_Proxy(ICEnroll *This,BSTR bstrName);", "ICEnroll_get_CAStoreType_Proxy": "HRESULT WINAPI ICEnroll_get_CAStoreType_Proxy(ICEnroll *This,BSTR *pbstrType);", "ICEnroll_put_CAStoreType_Proxy": "HRESULT WINAPI ICEnroll_put_CAStoreType_Proxy(ICEnroll *This,BSTR bstrType);", "ICEnroll_get_CAStoreFlags_Proxy": "HRESULT WINAPI ICEnroll_get_CAStoreFlags_Proxy(ICEnroll *This,LONG *pdwFlags);", "ICEnroll_put_CAStoreFlags_Proxy": "HRESULT WINAPI ICEnroll_put_CAStoreFlags_Proxy(ICEnroll *This,LONG dwFlags);", "ICEnroll_get_RootStoreName_Proxy": "HRESULT WINAPI ICEnroll_get_RootStoreName_Proxy(ICEnroll *This,BSTR *pbstrName);", "ICEnroll_put_RootStoreName_Proxy": "HRESULT WINAPI ICEnroll_put_RootStoreName_Proxy(ICEnroll *This,BSTR bstrName);", "ICEnroll_get_RootStoreType_Proxy": "HRESULT WINAPI ICEnroll_get_RootStoreType_Proxy(ICEnroll *This,BSTR *pbstrType);", "ICEnroll_put_RootStoreType_Proxy": "HRESULT WINAPI ICEnroll_put_RootStoreType_Proxy(ICEnroll *This,BSTR bstrType);", "ICEnroll_get_RootStoreFlags_Proxy": "HRESULT WINAPI ICEnroll_get_RootStoreFlags_Proxy(ICEnroll *This,LONG *pdwFlags);", "ICEnroll_put_RootStoreFlags_Proxy": "HRESULT WINAPI ICEnroll_put_RootStoreFlags_Proxy(ICEnroll *This,LONG dwFlags);", "ICEnroll_get_RequestStoreName_Proxy": "HRESULT WINAPI ICEnroll_get_RequestStoreName_Proxy(ICEnroll *This,BSTR *pbstrName);", "ICEnroll_put_RequestStoreName_Proxy": "HRESULT WINAPI ICEnroll_put_RequestStoreName_Proxy(ICEnroll *This,BSTR bstrName);", "ICEnroll_get_RequestStoreType_Proxy": "HRESULT WINAPI ICEnroll_get_RequestStoreType_Proxy(ICEnroll *This,BSTR *pbstrType);", "ICEnroll_put_RequestStoreType_Proxy": "HRESULT WINAPI ICEnroll_put_RequestStoreType_Proxy(ICEnroll *This,BSTR bstrType);", "ICEnroll_get_RequestStoreFlags_Proxy": "HRESULT WINAPI ICEnroll_get_RequestStoreFlags_Proxy(ICEnroll *This,LONG *pdwFlags);", "ICEnroll_put_RequestStoreFlags_Proxy": "HRESULT WINAPI ICEnroll_put_RequestStoreFlags_Proxy(ICEnroll *This,LONG dwFlags);", "ICEnroll_get_ContainerName_Proxy": "HRESULT WINAPI ICEnroll_get_ContainerName_Proxy(ICEnroll *This,BSTR *pbstrContainer);", "ICEnroll_put_ContainerName_Proxy": "HRESULT WINAPI ICEnroll_put_ContainerName_Proxy(ICEnroll *This,BSTR bstrContainer);", "ICEnroll_get_ProviderName_Proxy": "HRESULT WINAPI ICEnroll_get_ProviderName_Proxy(ICEnroll *This,BSTR *pbstrProvider);", "ICEnroll_put_ProviderName_Proxy": "HRESULT WINAPI ICEnroll_put_ProviderName_Proxy(ICEnroll *This,BSTR bstrProvider);", "ICEnroll_get_ProviderType_Proxy": "HRESULT WINAPI ICEnroll_get_ProviderType_Proxy(ICEnroll *This,LONG *pdwType);", "ICEnroll_put_ProviderType_Proxy": "HRESULT WINAPI ICEnroll_put_ProviderType_Proxy(ICEnroll *This,LONG dwType);", "ICEnroll_get_KeySpec_Proxy": "HRESULT WINAPI ICEnroll_get_KeySpec_Proxy(ICEnroll *This,LONG *pdw);", "ICEnroll_put_KeySpec_Proxy": "HRESULT WINAPI ICEnroll_put_KeySpec_Proxy(ICEnroll *This,LONG dw);", "ICEnroll_get_ProviderFlags_Proxy": "HRESULT WINAPI ICEnroll_get_ProviderFlags_Proxy(ICEnroll *This,LONG *pdwFlags);", "ICEnroll_put_ProviderFlags_Proxy": "HRESULT WINAPI ICEnroll_put_ProviderFlags_Proxy(ICEnroll *This,LONG dwFlags);", "ICEnroll_get_UseExistingKeySet_Proxy": "HRESULT WINAPI ICEnroll_get_UseExistingKeySet_Proxy(ICEnroll *This,WINBOOL *fUseExistingKeys);", "ICEnroll_put_UseExistingKeySet_Proxy": "HRESULT WINAPI ICEnroll_put_UseExistingKeySet_Proxy(ICEnroll *This,WINBOOL fUseExistingKeys);", "ICEnroll_get_GenKeyFlags_Proxy": "HRESULT WINAPI ICEnroll_get_GenKeyFlags_Proxy(ICEnroll *This,LONG *pdwFlags);", "ICEnroll_put_GenKeyFlags_Proxy": "HRESULT WINAPI ICEnroll_put_GenKeyFlags_Proxy(ICEnroll *This,LONG dwFlags);", "ICEnroll_get_DeleteRequestCert_Proxy": "HRESULT WINAPI ICEnroll_get_DeleteRequestCert_Proxy(ICEnroll *This,WINBOOL *fDelete);", "ICEnroll_put_DeleteRequestCert_Proxy": "HRESULT WINAPI ICEnroll_put_DeleteRequestCert_Proxy(ICEnroll *This,WINBOOL fDelete);", "ICEnroll_get_WriteCertToCSP_Proxy": "HRESULT WINAPI ICEnroll_get_WriteCertToCSP_Proxy(ICEnroll *This,WINBOOL *fBool);", "ICEnroll_put_WriteCertToCSP_Proxy": "HRESULT WINAPI ICEnroll_put_WriteCertToCSP_Proxy(ICEnroll *This,WINBOOL fBool);", "ICEnroll_get_SPCFileName_Proxy": "HRESULT WINAPI ICEnroll_get_SPCFileName_Proxy(ICEnroll *This,BSTR *pbstr);", "ICEnroll_put_SPCFileName_Proxy": "HRESULT WINAPI ICEnroll_put_SPCFileName_Proxy(ICEnroll *This,BSTR bstr);", "ICEnroll_get_PVKFileName_Proxy": "HRESULT WINAPI ICEnroll_get_PVKFileName_Proxy(ICEnroll *This,BSTR *pbstr);", "ICEnroll_put_PVKFileName_Proxy": "HRESULT WINAPI ICEnroll_put_PVKFileName_Proxy(ICEnroll *This,BSTR bstr);", "ICEnroll_get_HashAlgorithm_Proxy": "HRESULT WINAPI ICEnroll_get_HashAlgorithm_Proxy(ICEnroll *This,BSTR *pbstr);", "ICEnroll_put_HashAlgorithm_Proxy": "HRESULT WINAPI ICEnroll_put_HashAlgorithm_Proxy(ICEnroll *This,BSTR bstr);", "ICEnroll2_addCertTypeToRequest_Proxy": "HRESULT WINAPI ICEnroll2_addCertTypeToRequest_Proxy(ICEnroll2 *This,BSTR CertType);", "ICEnroll2_addNameValuePairToSignature_Proxy": "HRESULT WINAPI ICEnroll2_addNameValuePairToSignature_Proxy(ICEnroll2 *This,BSTR Name,BSTR Value);", "ICEnroll2_get_WriteCertToUserDS_Proxy": "HRESULT WINAPI ICEnroll2_get_WriteCertToUserDS_Proxy(ICEnroll2 *This,WINBOOL *fBool);", "ICEnroll2_put_WriteCertToUserDS_Proxy": "HRESULT WINAPI ICEnroll2_put_WriteCertToUserDS_Proxy(ICEnroll2 *This,WINBOOL fBool);", "ICEnroll2_get_EnableT61DNEncoding_Proxy": "HRESULT WINAPI ICEnroll2_get_EnableT61DNEncoding_Proxy(ICEnroll2 *This,WINBOOL *fBool);", "ICEnroll2_put_EnableT61DNEncoding_Proxy": "HRESULT WINAPI ICEnroll2_put_EnableT61DNEncoding_Proxy(ICEnroll2 *This,WINBOOL fBool);", "ICEnroll3_InstallPKCS7_Proxy": "HRESULT WINAPI ICEnroll3_InstallPKCS7_Proxy(ICEnroll3 *This,BSTR PKCS7);", "ICEnroll3_Reset_Proxy": "HRESULT WINAPI ICEnroll3_Reset_Proxy(ICEnroll3 *This);", "ICEnroll3_GetSupportedKeySpec_Proxy": "HRESULT WINAPI ICEnroll3_GetSupportedKeySpec_Proxy(ICEnroll3 *This,LONG *pdwKeySpec);", "ICEnroll3_GetKeyLen_Proxy": "HRESULT WINAPI ICEnroll3_GetKeyLen_Proxy(ICEnroll3 *This,WINBOOL fMin,WINBOOL fExchange,LONG *pdwKeySize);", "ICEnroll3_EnumAlgs_Proxy": "HRESULT WINAPI ICEnroll3_EnumAlgs_Proxy(ICEnroll3 *This,LONG dwIndex,LONG algClass,LONG *pdwAlgID);", "ICEnroll3_GetAlgName_Proxy": "HRESULT WINAPI ICEnroll3_GetAlgName_Proxy(ICEnroll3 *This,LONG algID,BSTR *pbstr);", "ICEnroll3_put_ReuseHardwareKeyIfUnableToGenNew_Proxy": "HRESULT WINAPI ICEnroll3_put_ReuseHardwareKeyIfUnableToGenNew_Proxy(ICEnroll3 *This,WINBOOL fReuseHardwareKeyIfUnableToGenNew);", "ICEnroll3_get_ReuseHardwareKeyIfUnableToGenNew_Proxy": "HRESULT WINAPI ICEnroll3_get_ReuseHardwareKeyIfUnableToGenNew_Proxy(ICEnroll3 *This,WINBOOL *fReuseHardwareKeyIfUnableToGenNew);", "ICEnroll3_put_HashAlgID_Proxy": "HRESULT WINAPI ICEnroll3_put_HashAlgID_Proxy(ICEnroll3 *This,LONG hashAlgID);", "ICEnroll3_get_HashAlgID_Proxy": "HRESULT WINAPI ICEnroll3_get_HashAlgID_Proxy(ICEnroll3 *This,LONG *hashAlgID);", "ICEnroll3_put_LimitExchangeKeyToEncipherment_Proxy": "HRESULT WINAPI ICEnroll3_put_LimitExchangeKeyToEncipherment_Proxy(ICEnroll3 *This,WINBOOL fLimitExchangeKeyToEncipherment);", "ICEnroll3_get_LimitExchangeKeyToEncipherment_Proxy": "HRESULT WINAPI ICEnroll3_get_LimitExchangeKeyToEncipherment_Proxy(ICEnroll3 *This,WINBOOL *fLimitExchangeKeyToEncipherment);", "ICEnroll3_put_EnableSMIMECapabilities_Proxy": "HRESULT WINAPI ICEnroll3_put_EnableSMIMECapabilities_Proxy(ICEnroll3 *This,WINBOOL fEnableSMIMECapabilities);", "ICEnroll3_get_EnableSMIMECapabilities_Proxy": "HRESULT WINAPI ICEnroll3_get_EnableSMIMECapabilities_Proxy(ICEnroll3 *This,WINBOOL *fEnableSMIMECapabilities);", "ICEnroll4_put_PrivateKeyArchiveCertificate_Proxy": "HRESULT WINAPI ICEnroll4_put_PrivateKeyArchiveCertificate_Proxy(ICEnroll4 *This,BSTR bstrCert);", "ICEnroll4_get_PrivateKeyArchiveCertificate_Proxy": "HRESULT WINAPI ICEnroll4_get_PrivateKeyArchiveCertificate_Proxy(ICEnroll4 *This,BSTR *pbstrCert);", "ICEnroll4_put_ThumbPrint_Proxy": "HRESULT WINAPI ICEnroll4_put_ThumbPrint_Proxy(ICEnroll4 *This,BSTR bstrThumbPrint);", "ICEnroll4_get_ThumbPrint_Proxy": "HRESULT WINAPI ICEnroll4_get_ThumbPrint_Proxy(ICEnroll4 *This,BSTR *pbstrThumbPrint);", "ICEnroll4_binaryToString_Proxy": "HRESULT WINAPI ICEnroll4_binaryToString_Proxy(ICEnroll4 *This,LONG Flags,BSTR strBinary,BSTR *pstrEncoded);", "ICEnroll4_stringToBinary_Proxy": "HRESULT WINAPI ICEnroll4_stringToBinary_Proxy(ICEnroll4 *This,LONG Flags,BSTR strEncoded,BSTR *pstrBinary);", "ICEnroll4_addExtensionToRequest_Proxy": "HRESULT WINAPI ICEnroll4_addExtensionToRequest_Proxy(ICEnroll4 *This,LONG Flags,BSTR strName,BSTR strValue);", "ICEnroll4_addAttributeToRequest_Proxy": "HRESULT WINAPI ICEnroll4_addAttributeToRequest_Proxy(ICEnroll4 *This,LONG Flags,BSTR strName,BSTR strValue);", "ICEnroll4_addNameValuePairToRequest_Proxy": "HRESULT WINAPI ICEnroll4_addNameValuePairToRequest_Proxy(ICEnroll4 *This,LONG Flags,BSTR strName,BSTR strValue);", "ICEnroll4_resetExtensions_Proxy": "HRESULT WINAPI ICEnroll4_resetExtensions_Proxy(ICEnroll4 *This);", "ICEnroll4_resetAttributes_Proxy": "HRESULT WINAPI ICEnroll4_resetAttributes_Proxy(ICEnroll4 *This);", "ICEnroll4_createRequest_Proxy": "HRESULT WINAPI ICEnroll4_createRequest_Proxy(ICEnroll4 *This,LONG Flags,BSTR strDNName,BSTR Usage,BSTR *pstrRequest);", "ICEnroll4_createFileRequest_Proxy": "HRESULT WINAPI ICEnroll4_createFileRequest_Proxy(ICEnroll4 *This,LONG Flags,BSTR strDNName,BSTR strUsage,BSTR strRequestFileName);", "ICEnroll4_acceptResponse_Proxy": "HRESULT WINAPI ICEnroll4_acceptResponse_Proxy(ICEnroll4 *This,BSTR strResponse);", "ICEnroll4_acceptFileResponse_Proxy": "HRESULT WINAPI ICEnroll4_acceptFileResponse_Proxy(ICEnroll4 *This,BSTR strResponseFileName);", "ICEnroll4_getCertFromResponse_Proxy": "HRESULT WINAPI ICEnroll4_getCertFromResponse_Proxy(ICEnroll4 *This,BSTR strResponse,BSTR *pstrCert);", "ICEnroll4_getCertFromFileResponse_Proxy": "HRESULT WINAPI ICEnroll4_getCertFromFileResponse_Proxy(ICEnroll4 *This,BSTR strResponseFileName,BSTR *pstrCert);", "ICEnroll4_createPFX_Proxy": "HRESULT WINAPI ICEnroll4_createPFX_Proxy(ICEnroll4 *This,BSTR strPassword,BSTR *pstrPFX);", "ICEnroll4_createFilePFX_Proxy": "HRESULT WINAPI ICEnroll4_createFilePFX_Proxy(ICEnroll4 *This,BSTR strPassword,BSTR strPFXFileName);", "ICEnroll4_setPendingRequestInfo_Proxy": "HRESULT WINAPI ICEnroll4_setPendingRequestInfo_Proxy(ICEnroll4 *This,LONG lRequestID,BSTR strCADNS,BSTR strCAName,BSTR strFriendlyName);", "ICEnroll4_enumPendingRequest_Proxy": "HRESULT WINAPI ICEnroll4_enumPendingRequest_Proxy(ICEnroll4 *This,LONG lIndex,LONG lDesiredProperty,VARIANT *pvarProperty);", "ICEnroll4_removePendingRequest_Proxy": "HRESULT WINAPI ICEnroll4_removePendingRequest_Proxy(ICEnroll4 *This,BSTR strThumbprint);", "ICEnroll4_GetKeyLenEx_Proxy": "HRESULT WINAPI ICEnroll4_GetKeyLenEx_Proxy(ICEnroll4 *This,LONG lSizeSpec,LONG lKeySpec,LONG *pdwKeySize);", "ICEnroll4_InstallPKCS7Ex_Proxy": "HRESULT WINAPI ICEnroll4_InstallPKCS7Ex_Proxy(ICEnroll4 *This,BSTR PKCS7,LONG *plCertInstalled);", "ICEnroll4_addCertTypeToRequestEx_Proxy": "HRESULT WINAPI ICEnroll4_addCertTypeToRequestEx_Proxy(ICEnroll4 *This,LONG lType,BSTR bstrOIDOrName,LONG lMajorVersion,WINBOOL fMinorVersion,LONG lMinorVersion);", "ICEnroll4_getProviderType_Proxy": "HRESULT WINAPI ICEnroll4_getProviderType_Proxy(ICEnroll4 *This,BSTR strProvName,LONG *plProvType);", "ICEnroll4_put_SignerCertificate_Proxy": "HRESULT WINAPI ICEnroll4_put_SignerCertificate_Proxy(ICEnroll4 *This,BSTR bstrCert);", "ICEnroll4_put_ClientId_Proxy": "HRESULT WINAPI ICEnroll4_put_ClientId_Proxy(ICEnroll4 *This,LONG lClientId);", "ICEnroll4_get_ClientId_Proxy": "HRESULT WINAPI ICEnroll4_get_ClientId_Proxy(ICEnroll4 *This,LONG *plClientId);", "ICEnroll4_addBlobPropertyToCertificate_Proxy": "HRESULT WINAPI ICEnroll4_addBlobPropertyToCertificate_Proxy(ICEnroll4 *This,LONG lPropertyId,LONG lReserved,BSTR bstrProperty);", "ICEnroll4_resetBlobProperties_Proxy": "HRESULT WINAPI ICEnroll4_resetBlobProperties_Proxy(ICEnroll4 *This);", "ICEnroll4_put_IncludeSubjectKeyID_Proxy": "HRESULT WINAPI ICEnroll4_put_IncludeSubjectKeyID_Proxy(ICEnroll4 *This,WINBOOL fInclude);", "ICEnroll4_get_IncludeSubjectKeyID_Proxy": "HRESULT WINAPI ICEnroll4_get_IncludeSubjectKeyID_Proxy(ICEnroll4 *This,WINBOOL *pfInclude);", "IEnroll_createFilePKCS10WStr_Proxy": "HRESULT WINAPI IEnroll_createFilePKCS10WStr_Proxy(IEnroll *This,LPCWSTR DNName,LPCWSTR Usage,LPCWSTR wszPKCS10FileName);", "IEnroll_acceptFilePKCS7WStr_Proxy": "HRESULT WINAPI IEnroll_acceptFilePKCS7WStr_Proxy(IEnroll *This,LPCWSTR wszPKCS7FileName);", "IEnroll_createPKCS10WStr_Proxy": "HRESULT WINAPI IEnroll_createPKCS10WStr_Proxy(IEnroll *This,LPCWSTR DNName,LPCWSTR Usage,PCRYPT_DATA_BLOB pPkcs10Blob);", "IEnroll_acceptPKCS7Blob_Proxy": "HRESULT WINAPI IEnroll_acceptPKCS7Blob_Proxy(IEnroll *This,PCRYPT_DATA_BLOB pBlobPKCS7);", "IEnroll_getCertContextFromPKCS7_Proxy": "PCCERT_CONTEXT WINAPI IEnroll_getCertContextFromPKCS7_Proxy(IEnroll *This,PCRYPT_DATA_BLOB pBlobPKCS7);", "IEnroll_getMyStore_Proxy": "HCERTSTORE WINAPI IEnroll_getMyStore_Proxy(IEnroll *This);", "IEnroll_getCAStore_Proxy": "HCERTSTORE WINAPI IEnroll_getCAStore_Proxy(IEnroll *This);", "IEnroll_getROOTHStore_Proxy": "HCERTSTORE WINAPI IEnroll_getROOTHStore_Proxy(IEnroll *This);", "IEnroll_enumProvidersWStr_Proxy": "HRESULT WINAPI IEnroll_enumProvidersWStr_Proxy(IEnroll *This,LONG dwIndex,LONG dwFlags,LPWSTR *pbstrProvName);", "IEnroll_enumContainersWStr_Proxy": "HRESULT WINAPI IEnroll_enumContainersWStr_Proxy(IEnroll *This,LONG dwIndex,LPWSTR *pbstr);", "IEnroll_freeRequestInfoBlob_Proxy": "HRESULT WINAPI IEnroll_freeRequestInfoBlob_Proxy(IEnroll *This,CRYPT_DATA_BLOB pkcs7OrPkcs10);", "IEnroll_get_MyStoreNameWStr_Proxy": "HRESULT WINAPI IEnroll_get_MyStoreNameWStr_Proxy(IEnroll *This,LPWSTR *szwName);", "IEnroll_put_MyStoreNameWStr_Proxy": "HRESULT WINAPI IEnroll_put_MyStoreNameWStr_Proxy(IEnroll *This,LPWSTR szwName);", "IEnroll_get_MyStoreTypeWStr_Proxy": "HRESULT WINAPI IEnroll_get_MyStoreTypeWStr_Proxy(IEnroll *This,LPWSTR *szwType);", "IEnroll_put_MyStoreTypeWStr_Proxy": "HRESULT WINAPI IEnroll_put_MyStoreTypeWStr_Proxy(IEnroll *This,LPWSTR szwType);", "IEnroll_get_MyStoreFlags_Proxy": "HRESULT WINAPI IEnroll_get_MyStoreFlags_Proxy(IEnroll *This,LONG *pdwFlags);", "IEnroll_put_MyStoreFlags_Proxy": "HRESULT WINAPI IEnroll_put_MyStoreFlags_Proxy(IEnroll *This,LONG dwFlags);", "IEnroll_get_CAStoreNameWStr_Proxy": "HRESULT WINAPI IEnroll_get_CAStoreNameWStr_Proxy(IEnroll *This,LPWSTR *szwName);", "IEnroll_put_CAStoreNameWStr_Proxy": "HRESULT WINAPI IEnroll_put_CAStoreNameWStr_Proxy(IEnroll *This,LPWSTR szwName);", "IEnroll_get_CAStoreTypeWStr_Proxy": "HRESULT WINAPI IEnroll_get_CAStoreTypeWStr_Proxy(IEnroll *This,LPWSTR *szwType);", "IEnroll_put_CAStoreTypeWStr_Proxy": "HRESULT WINAPI IEnroll_put_CAStoreTypeWStr_Proxy(IEnroll *This,LPWSTR szwType);", "IEnroll_get_CAStoreFlags_Proxy": "HRESULT WINAPI IEnroll_get_CAStoreFlags_Proxy(IEnroll *This,LONG *pdwFlags);", "IEnroll_put_CAStoreFlags_Proxy": "HRESULT WINAPI IEnroll_put_CAStoreFlags_Proxy(IEnroll *This,LONG dwFlags);", "IEnroll_get_RootStoreNameWStr_Proxy": "HRESULT WINAPI IEnroll_get_RootStoreNameWStr_Proxy(IEnroll *This,LPWSTR *szwName);", "IEnroll_put_RootStoreNameWStr_Proxy": "HRESULT WINAPI IEnroll_put_RootStoreNameWStr_Proxy(IEnroll *This,LPWSTR szwName);", "IEnroll_get_RootStoreTypeWStr_Proxy": "HRESULT WINAPI IEnroll_get_RootStoreTypeWStr_Proxy(IEnroll *This,LPWSTR *szwType);", "IEnroll_put_RootStoreTypeWStr_Proxy": "HRESULT WINAPI IEnroll_put_RootStoreTypeWStr_Proxy(IEnroll *This,LPWSTR szwType);", "IEnroll_get_RootStoreFlags_Proxy": "HRESULT WINAPI IEnroll_get_RootStoreFlags_Proxy(IEnroll *This,LONG *pdwFlags);", "IEnroll_put_RootStoreFlags_Proxy": "HRESULT WINAPI IEnroll_put_RootStoreFlags_Proxy(IEnroll *This,LONG dwFlags);", "IEnroll_get_RequestStoreNameWStr_Proxy": "HRESULT WINAPI IEnroll_get_RequestStoreNameWStr_Proxy(IEnroll *This,LPWSTR *szwName);", "IEnroll_put_RequestStoreNameWStr_Proxy": "HRESULT WINAPI IEnroll_put_RequestStoreNameWStr_Proxy(IEnroll *This,LPWSTR szwName);", "IEnroll_get_RequestStoreTypeWStr_Proxy": "HRESULT WINAPI IEnroll_get_RequestStoreTypeWStr_Proxy(IEnroll *This,LPWSTR *szwType);", "IEnroll_put_RequestStoreTypeWStr_Proxy": "HRESULT WINAPI IEnroll_put_RequestStoreTypeWStr_Proxy(IEnroll *This,LPWSTR szwType);", "IEnroll_get_RequestStoreFlags_Proxy": "HRESULT WINAPI IEnroll_get_RequestStoreFlags_Proxy(IEnroll *This,LONG *pdwFlags);", "IEnroll_put_RequestStoreFlags_Proxy": "HRESULT WINAPI IEnroll_put_RequestStoreFlags_Proxy(IEnroll *This,LONG dwFlags);", "IEnroll_get_ContainerNameWStr_Proxy": "HRESULT WINAPI IEnroll_get_ContainerNameWStr_Proxy(IEnroll *This,LPWSTR *szwContainer);", "IEnroll_put_ContainerNameWStr_Proxy": "HRESULT WINAPI IEnroll_put_ContainerNameWStr_Proxy(IEnroll *This,LPWSTR szwContainer);", "IEnroll_get_ProviderNameWStr_Proxy": "HRESULT WINAPI IEnroll_get_ProviderNameWStr_Proxy(IEnroll *This,LPWSTR *szwProvider);", "IEnroll_put_ProviderNameWStr_Proxy": "HRESULT WINAPI IEnroll_put_ProviderNameWStr_Proxy(IEnroll *This,LPWSTR szwProvider);", "IEnroll_get_ProviderType_Proxy": "HRESULT WINAPI IEnroll_get_ProviderType_Proxy(IEnroll *This,LONG *pdwType);", "IEnroll_put_ProviderType_Proxy": "HRESULT WINAPI IEnroll_put_ProviderType_Proxy(IEnroll *This,LONG dwType);", "IEnroll_get_KeySpec_Proxy": "HRESULT WINAPI IEnroll_get_KeySpec_Proxy(IEnroll *This,LONG *pdw);", "IEnroll_put_KeySpec_Proxy": "HRESULT WINAPI IEnroll_put_KeySpec_Proxy(IEnroll *This,LONG dw);", "IEnroll_get_ProviderFlags_Proxy": "HRESULT WINAPI IEnroll_get_ProviderFlags_Proxy(IEnroll *This,LONG *pdwFlags);", "IEnroll_put_ProviderFlags_Proxy": "HRESULT WINAPI IEnroll_put_ProviderFlags_Proxy(IEnroll *This,LONG dwFlags);", "IEnroll_get_UseExistingKeySet_Proxy": "HRESULT WINAPI IEnroll_get_UseExistingKeySet_Proxy(IEnroll *This,WINBOOL *fUseExistingKeys);", "IEnroll_put_UseExistingKeySet_Proxy": "HRESULT WINAPI IEnroll_put_UseExistingKeySet_Proxy(IEnroll *This,WINBOOL fUseExistingKeys);", "IEnroll_get_GenKeyFlags_Proxy": "HRESULT WINAPI IEnroll_get_GenKeyFlags_Proxy(IEnroll *This,LONG *pdwFlags);", "IEnroll_put_GenKeyFlags_Proxy": "HRESULT WINAPI IEnroll_put_GenKeyFlags_Proxy(IEnroll *This,LONG dwFlags);", "IEnroll_get_DeleteRequestCert_Proxy": "HRESULT WINAPI IEnroll_get_DeleteRequestCert_Proxy(IEnroll *This,WINBOOL *fDelete);", "IEnroll_put_DeleteRequestCert_Proxy": "HRESULT WINAPI IEnroll_put_DeleteRequestCert_Proxy(IEnroll *This,WINBOOL fDelete);", "IEnroll_get_WriteCertToUserDS_Proxy": "HRESULT WINAPI IEnroll_get_WriteCertToUserDS_Proxy(IEnroll *This,WINBOOL *fBool);", "IEnroll_put_WriteCertToUserDS_Proxy": "HRESULT WINAPI IEnroll_put_WriteCertToUserDS_Proxy(IEnroll *This,WINBOOL fBool);", "IEnroll_get_EnableT61DNEncoding_Proxy": "HRESULT WINAPI IEnroll_get_EnableT61DNEncoding_Proxy(IEnroll *This,WINBOOL *fBool);", "IEnroll_put_EnableT61DNEncoding_Proxy": "HRESULT WINAPI IEnroll_put_EnableT61DNEncoding_Proxy(IEnroll *This,WINBOOL fBool);", "IEnroll_get_WriteCertToCSP_Proxy": "HRESULT WINAPI IEnroll_get_WriteCertToCSP_Proxy(IEnroll *This,WINBOOL *fBool);", "IEnroll_put_WriteCertToCSP_Proxy": "HRESULT WINAPI IEnroll_put_WriteCertToCSP_Proxy(IEnroll *This,WINBOOL fBool);", "IEnroll_get_SPCFileNameWStr_Proxy": "HRESULT WINAPI IEnroll_get_SPCFileNameWStr_Proxy(IEnroll *This,LPWSTR *szw);", "IEnroll_put_SPCFileNameWStr_Proxy": "HRESULT WINAPI IEnroll_put_SPCFileNameWStr_Proxy(IEnroll *This,LPWSTR szw);", "IEnroll_get_PVKFileNameWStr_Proxy": "HRESULT WINAPI IEnroll_get_PVKFileNameWStr_Proxy(IEnroll *This,LPWSTR *szw);", "IEnroll_put_PVKFileNameWStr_Proxy": "HRESULT WINAPI IEnroll_put_PVKFileNameWStr_Proxy(IEnroll *This,LPWSTR szw);", "IEnroll_get_HashAlgorithmWStr_Proxy": "HRESULT WINAPI IEnroll_get_HashAlgorithmWStr_Proxy(IEnroll *This,LPWSTR *szw);", "IEnroll_put_HashAlgorithmWStr_Proxy": "HRESULT WINAPI IEnroll_put_HashAlgorithmWStr_Proxy(IEnroll *This,LPWSTR szw);", "IEnroll_get_RenewalCertificate_Proxy": "HRESULT WINAPI IEnroll_get_RenewalCertificate_Proxy(IEnroll *This,PCCERT_CONTEXT *ppCertContext);", "IEnroll_put_RenewalCertificate_Proxy": "HRESULT WINAPI IEnroll_put_RenewalCertificate_Proxy(IEnroll *This,PCCERT_CONTEXT pCertContext);", "IEnroll_AddCertTypeToRequestWStr_Proxy": "HRESULT WINAPI IEnroll_AddCertTypeToRequestWStr_Proxy(IEnroll *This,LPWSTR szw);", "IEnroll_AddNameValuePairToSignatureWStr_Proxy": "HRESULT WINAPI IEnroll_AddNameValuePairToSignatureWStr_Proxy(IEnroll *This,LPWSTR Name,LPWSTR Value);", "IEnroll_AddExtensionsToRequest_Proxy": "HRESULT WINAPI IEnroll_AddExtensionsToRequest_Proxy(IEnroll *This,PCERT_EXTENSIONS pCertExtensions);", "IEnroll_AddAuthenticatedAttributesToPKCS7Request_Proxy": "HRESULT WINAPI IEnroll_AddAuthenticatedAttributesToPKCS7Request_Proxy(IEnroll *This,PCRYPT_ATTRIBUTES pAttributes);", "IEnroll_CreatePKCS7RequestFromRequest_Proxy": "HRESULT WINAPI IEnroll_CreatePKCS7RequestFromRequest_Proxy(IEnroll *This,PCRYPT_DATA_BLOB pRequest,PCCERT_CONTEXT pSigningCertContext,PCRYPT_DATA_BLOB pPkcs7Blob);", "IEnroll2_InstallPKCS7Blob_Proxy": "HRESULT WINAPI IEnroll2_InstallPKCS7Blob_Proxy(IEnroll2 *This,PCRYPT_DATA_BLOB pBlobPKCS7);", "IEnroll2_Reset_Proxy": "HRESULT WINAPI IEnroll2_Reset_Proxy(IEnroll2 *This);", "IEnroll2_GetSupportedKeySpec_Proxy": "HRESULT WINAPI IEnroll2_GetSupportedKeySpec_Proxy(IEnroll2 *This,LONG *pdwKeySpec);", "IEnroll2_GetKeyLen_Proxy": "HRESULT WINAPI IEnroll2_GetKeyLen_Proxy(IEnroll2 *This,WINBOOL fMin,WINBOOL fExchange,LONG *pdwKeySize);", "IEnroll2_EnumAlgs_Proxy": "HRESULT WINAPI IEnroll2_EnumAlgs_Proxy(IEnroll2 *This,LONG dwIndex,LONG algClass,LONG *pdwAlgID);", "IEnroll2_GetAlgNameWStr_Proxy": "HRESULT WINAPI IEnroll2_GetAlgNameWStr_Proxy(IEnroll2 *This,LONG algID,LPWSTR *ppwsz);", "IEnroll2_put_ReuseHardwareKeyIfUnableToGenNew_Proxy": "HRESULT WINAPI IEnroll2_put_ReuseHardwareKeyIfUnableToGenNew_Proxy(IEnroll2 *This,WINBOOL fReuseHardwareKeyIfUnableToGenNew);", "IEnroll2_get_ReuseHardwareKeyIfUnableToGenNew_Proxy": "HRESULT WINAPI IEnroll2_get_ReuseHardwareKeyIfUnableToGenNew_Proxy(IEnroll2 *This,WINBOOL *fReuseHardwareKeyIfUnableToGenNew);", "IEnroll2_put_HashAlgID_Proxy": "HRESULT WINAPI IEnroll2_put_HashAlgID_Proxy(IEnroll2 *This,LONG hashAlgID);", "IEnroll2_get_HashAlgID_Proxy": "HRESULT WINAPI IEnroll2_get_HashAlgID_Proxy(IEnroll2 *This,LONG *hashAlgID);", "IEnroll2_SetHStoreMy_Proxy": "HRESULT WINAPI IEnroll2_SetHStoreMy_Proxy(IEnroll2 *This,HCERTSTORE hStore);", "IEnroll2_SetHStoreCA_Proxy": "HRESULT WINAPI IEnroll2_SetHStoreCA_Proxy(IEnroll2 *This,HCERTSTORE hStore);", "IEnroll2_SetHStoreROOT_Proxy": "HRESULT WINAPI IEnroll2_SetHStoreROOT_Proxy(IEnroll2 *This,HCERTSTORE hStore);", "IEnroll2_SetHStoreRequest_Proxy": "HRESULT WINAPI IEnroll2_SetHStoreRequest_Proxy(IEnroll2 *This,HCERTSTORE hStore);", "IEnroll2_put_LimitExchangeKeyToEncipherment_Proxy": "HRESULT WINAPI IEnroll2_put_LimitExchangeKeyToEncipherment_Proxy(IEnroll2 *This,WINBOOL fLimitExchangeKeyToEncipherment);", "IEnroll2_get_LimitExchangeKeyToEncipherment_Proxy": "HRESULT WINAPI IEnroll2_get_LimitExchangeKeyToEncipherment_Proxy(IEnroll2 *This,WINBOOL *fLimitExchangeKeyToEncipherment);", "IEnroll2_put_EnableSMIMECapabilities_Proxy": "HRESULT WINAPI IEnroll2_put_EnableSMIMECapabilities_Proxy(IEnroll2 *This,WINBOOL fEnableSMIMECapabilities);", "IEnroll2_get_EnableSMIMECapabilities_Proxy": "HRESULT WINAPI IEnroll2_get_EnableSMIMECapabilities_Proxy(IEnroll2 *This,WINBOOL *fEnableSMIMECapabilities);", "IEnroll4_put_ThumbPrintWStr_Proxy": "HRESULT WINAPI IEnroll4_put_ThumbPrintWStr_Proxy(IEnroll4 *This,CRYPT_DATA_BLOB thumbPrintBlob);", "IEnroll4_get_ThumbPrintWStr_Proxy": "HRESULT WINAPI IEnroll4_get_ThumbPrintWStr_Proxy(IEnroll4 *This,PCRYPT_DATA_BLOB thumbPrintBlob);", "IEnroll4_SetPrivateKeyArchiveCertificate_Proxy": "HRESULT WINAPI IEnroll4_SetPrivateKeyArchiveCertificate_Proxy(IEnroll4 *This,PCCERT_CONTEXT pPrivateKeyArchiveCert);", "IEnroll4_GetPrivateKeyArchiveCertificate_Proxy": "PCCERT_CONTEXT WINAPI IEnroll4_GetPrivateKeyArchiveCertificate_Proxy(IEnroll4 *This);", "IEnroll4_binaryBlobToString_Proxy": "HRESULT WINAPI IEnroll4_binaryBlobToString_Proxy(IEnroll4 *This,LONG Flags,PCRYPT_DATA_BLOB pblobBinary,LPWSTR *ppwszString);", "IEnroll4_stringToBinaryBlob_Proxy": "HRESULT WINAPI IEnroll4_stringToBinaryBlob_Proxy(IEnroll4 *This,LONG Flags,LPCWSTR pwszString,PCRYPT_DATA_BLOB pblobBinary,LONG *pdwSkip,LONG *pdwFlags);", "IEnroll4_addExtensionToRequestWStr_Proxy": "HRESULT WINAPI IEnroll4_addExtensionToRequestWStr_Proxy(IEnroll4 *This,LONG Flags,LPCWSTR pwszName,PCRYPT_DATA_BLOB pblobValue);", "IEnroll4_addAttributeToRequestWStr_Proxy": "HRESULT WINAPI IEnroll4_addAttributeToRequestWStr_Proxy(IEnroll4 *This,LONG Flags,LPCWSTR pwszName,PCRYPT_DATA_BLOB pblobValue);", "IEnroll4_addNameValuePairToRequestWStr_Proxy": "HRESULT WINAPI IEnroll4_addNameValuePairToRequestWStr_Proxy(IEnroll4 *This,LONG Flags,LPCWSTR pwszName,LPCWSTR pwszValue);", "IEnroll4_resetExtensions_Proxy": "HRESULT WINAPI IEnroll4_resetExtensions_Proxy(IEnroll4 *This);", "IEnroll4_resetAttributes_Proxy": "HRESULT WINAPI IEnroll4_resetAttributes_Proxy(IEnroll4 *This);", "IEnroll4_createRequestWStr_Proxy": "HRESULT WINAPI IEnroll4_createRequestWStr_Proxy(IEnroll4 *This,LONG Flags,LPCWSTR pwszDNName,LPCWSTR pwszUsage,PCRYPT_DATA_BLOB pblobRequest);", "IEnroll4_createFileRequestWStr_Proxy": "HRESULT WINAPI IEnroll4_createFileRequestWStr_Proxy(IEnroll4 *This,LONG Flags,LPCWSTR pwszDNName,LPCWSTR pwszUsage,LPCWSTR pwszRequestFileName);", "IEnroll4_acceptResponseBlob_Proxy": "HRESULT WINAPI IEnroll4_acceptResponseBlob_Proxy(IEnroll4 *This,PCRYPT_DATA_BLOB pblobResponse);", "IEnroll4_acceptFileResponseWStr_Proxy": "HRESULT WINAPI IEnroll4_acceptFileResponseWStr_Proxy(IEnroll4 *This,LPCWSTR pwszResponseFileName);", "IEnroll4_getCertContextFromResponseBlob_Proxy": "HRESULT WINAPI IEnroll4_getCertContextFromResponseBlob_Proxy(IEnroll4 *This,PCRYPT_DATA_BLOB pblobResponse,PCCERT_CONTEXT *ppCertContext);", "IEnroll4_getCertContextFromFileResponseWStr_Proxy": "HRESULT WINAPI IEnroll4_getCertContextFromFileResponseWStr_Proxy(IEnroll4 *This,LPCWSTR pwszResponseFileName,PCCERT_CONTEXT *ppCertContext);", "IEnroll4_createPFXWStr_Proxy": "HRESULT WINAPI IEnroll4_createPFXWStr_Proxy(IEnroll4 *This,LPCWSTR pwszPassword,PCRYPT_DATA_BLOB pblobPFX);", "IEnroll4_createFilePFXWStr_Proxy": "HRESULT WINAPI IEnroll4_createFilePFXWStr_Proxy(IEnroll4 *This,LPCWSTR pwszPassword,LPCWSTR pwszPFXFileName);", "IEnroll4_setPendingRequestInfoWStr_Proxy": "HRESULT WINAPI IEnroll4_setPendingRequestInfoWStr_Proxy(IEnroll4 *This,LONG lRequestID,LPCWSTR pwszCADNS,LPCWSTR pwszCAName,LPCWSTR pwszFriendlyName);", "IEnroll4_enumPendingRequestWStr_Proxy": "HRESULT WINAPI IEnroll4_enumPendingRequestWStr_Proxy(IEnroll4 *This,LONG lIndex,LONG lDesiredProperty,LPVOID ppProperty);", "IEnroll4_removePendingRequestWStr_Proxy": "HRESULT WINAPI IEnroll4_removePendingRequestWStr_Proxy(IEnroll4 *This,CRYPT_DATA_BLOB thumbPrintBlob);", "IEnroll4_GetKeyLenEx_Proxy": "HRESULT WINAPI IEnroll4_GetKeyLenEx_Proxy(IEnroll4 *This,LONG lSizeSpec,LONG lKeySpec,LONG *pdwKeySize);", "IEnroll4_InstallPKCS7BlobEx_Proxy": "HRESULT WINAPI IEnroll4_InstallPKCS7BlobEx_Proxy(IEnroll4 *This,PCRYPT_DATA_BLOB pBlobPKCS7,LONG *plCertInstalled);", "IEnroll4_AddCertTypeToRequestWStrEx_Proxy": "HRESULT WINAPI IEnroll4_AddCertTypeToRequestWStrEx_Proxy(IEnroll4 *This,LONG lType,LPCWSTR pwszOIDOrName,LONG lMajorVersion,WINBOOL fMinorVersion,LONG lMinorVersion);", "IEnroll4_getProviderTypeWStr_Proxy": "HRESULT WINAPI IEnroll4_getProviderTypeWStr_Proxy(IEnroll4 *This,LPCWSTR pwszProvName,LONG *plProvType);", "IEnroll4_addBlobPropertyToCertificateWStr_Proxy": "HRESULT WINAPI IEnroll4_addBlobPropertyToCertificateWStr_Proxy(IEnroll4 *This,LONG lPropertyId,LONG lReserved,PCRYPT_DATA_BLOB pBlobProperty);", "IEnroll4_SetSignerCertificate_Proxy": "HRESULT WINAPI IEnroll4_SetSignerCertificate_Proxy(IEnroll4 *This,PCCERT_CONTEXT pSignerCert);", "IEnroll4_put_ClientId_Proxy": "HRESULT WINAPI IEnroll4_put_ClientId_Proxy(IEnroll4 *This,LONG lClientId);", "IEnroll4_get_ClientId_Proxy": "HRESULT WINAPI IEnroll4_get_ClientId_Proxy(IEnroll4 *This,LONG *plClientId);", "IEnroll4_put_IncludeSubjectKeyID_Proxy": "HRESULT WINAPI IEnroll4_put_IncludeSubjectKeyID_Proxy(IEnroll4 *This,WINBOOL fInclude);", "IEnroll4_get_IncludeSubjectKeyID_Proxy": "HRESULT WINAPI IEnroll4_get_IncludeSubjectKeyID_Proxy(IEnroll4 *This,WINBOOL *pfInclude);", "PIEnrollGetNoCOM": "IEnroll *WINAPI PIEnrollGetNoCOM(void);", "PIEnroll2GetNoCOM": "IEnroll2 *WINAPI PIEnroll2GetNoCOM(void);", "PIEnroll4GetNoCOM": "IEnroll4 *WINAPI PIEnroll4GetNoCOM(void);", "SnmpGetTranslateMode": "SNMPAPI_STATUS WINAPI SnmpGetTranslateMode (smiLPUINT32 nTranslateMode);", "SnmpSetTranslateMode": "SNMPAPI_STATUS WINAPI SnmpSetTranslateMode (smiUINT32 nTranslateMode);", "SnmpGetRetransmitMode": "SNMPAPI_STATUS WINAPI SnmpGetRetransmitMode (smiLPUINT32 nRetransmitMode);", "SnmpSetRetransmitMode": "SNMPAPI_STATUS WINAPI SnmpSetRetransmitMode (smiUINT32 nRetransmitMode);", "SnmpGetTimeout": "SNMPAPI_STATUS WINAPI SnmpGetTimeout (HSNMP_ENTITY hEntity, smiLPTIMETICKS nPolicyTimeout, smiLPTIMETICKS nActualTimeout);", "SnmpSetTimeout": "SNMPAPI_STATUS WINAPI SnmpSetTimeout (HSNMP_ENTITY hEntity, smiTIMETICKS nPolicyTimeout);", "SnmpGetRetry": "SNMPAPI_STATUS WINAPI SnmpGetRetry (HSNMP_ENTITY hEntity, smiLPUINT32 nPolicyRetry, smiLPUINT32 nActualRetry);", "SnmpSetRetry": "SNMPAPI_STATUS WINAPI SnmpSetRetry (HSNMP_ENTITY hEntity, smiUINT32 nPolicyRetry);", "SnmpGetVendorInfo": "SNMPAPI_STATUS WINAPI SnmpGetVendorInfo (smiLPVENDORINFO vendorInfo);", "SnmpStartup": "SNMPAPI_STATUS WINAPI SnmpStartup (smiLPUINT32 nMajorVersion, smiLPUINT32 nMinorVersion, smiLPUINT32 nLevel, smiLPUINT32 nTranslateMode, smiLPUINT32 nRetransmitMode);", "SnmpCleanup": "SNMPAPI_STATUS WINAPI SnmpCleanup (void);", "SnmpOpen": "HSNMP_SESSION WINAPI SnmpOpen (HWND hWnd, UINT wMsg);", "SnmpClose": "SNMPAPI_STATUS WINAPI SnmpClose (HSNMP_SESSION session);", "SnmpSendMsg": "SNMPAPI_STATUS WINAPI SnmpSendMsg (HSNMP_SESSION session, HSNMP_ENTITY srcEntity, HSNMP_ENTITY dstEntity, HSNMP_CONTEXT context, HSNMP_PDU PDU);", "SnmpRecvMsg": "SNMPAPI_STATUS WINAPI SnmpRecvMsg (HSNMP_SESSION session, LPHSNMP_ENTITY srcEntity, LPHSNMP_ENTITY dstEntity, LPHSNMP_CONTEXT context, LPHSNMP_PDU PDU);", "SnmpRegister": "SNMPAPI_STATUS WINAPI SnmpRegister (HSNMP_SESSION session, HSNMP_ENTITY srcEntity, HSNMP_ENTITY dstEntity, HSNMP_CONTEXT context, smiLPCOID notification, smiUINT32 state);", "SnmpCreateSession": "HSNMP_SESSION WINAPI SnmpCreateSession (HWND hWnd, UINT wMsg, SNMPAPI_CALLBACK fCallBack, LPVOID lpClientData);", "SnmpListen": "SNMPAPI_STATUS WINAPI SnmpListen (HSNMP_ENTITY hEntity, SNMPAPI_STATUS lStatus);", "SnmpListenEx": "SNMPAPI_STATUS WINAPI SnmpListenEx (HSNMP_ENTITY hEntity, SNMPAPI_STATUS lStatus, smiUINT32 nUseEntityAddr);", "SnmpCancelMsg": "SNMPAPI_STATUS WINAPI SnmpCancelMsg (HSNMP_SESSION session, smiINT32 reqId);", "SnmpStartupEx": "SNMPAPI_STATUS WINAPI SnmpStartupEx (smiLPUINT32 nMajorVersion, smiLPUINT32 nMinorVersion, smiLPUINT32 nLevel, smiLPUINT32 nTranslateMode, smiLPUINT32 nRetransmitMode);", "SnmpCleanupEx": "SNMPAPI_STATUS WINAPI SnmpCleanupEx (void);", "SnmpStrToEntity": "HSNMP_ENTITY WINAPI SnmpStrToEntity (HSNMP_SESSION session, LPCSTR string);", "SnmpEntityToStr": "SNMPAPI_STATUS WINAPI SnmpEntityToStr (HSNMP_ENTITY entity, smiUINT32 size, LPSTR string);", "SnmpFreeEntity": "SNMPAPI_STATUS WINAPI SnmpFreeEntity (HSNMP_ENTITY entity);", "SnmpStrToContext": "HSNMP_CONTEXT WINAPI SnmpStrToContext (HSNMP_SESSION session, smiLPCOCTETS string);", "SnmpContextToStr": "SNMPAPI_STATUS WINAPI SnmpContextToStr (HSNMP_CONTEXT context, smiLPOCTETS string);", "SnmpFreeContext": "SNMPAPI_STATUS WINAPI SnmpFreeContext (HSNMP_CONTEXT context);", "SnmpSetPort": "SNMPAPI_STATUS WINAPI SnmpSetPort (HSNMP_ENTITY hEntity, UINT nPort);", "SnmpCreatePdu": "HSNMP_PDU WINAPI SnmpCreatePdu (HSNMP_SESSION session, smiINT PDU_type, smiINT32 request_id, smiINT error_status, smiINT error_index, HSNMP_VBL varbindlist);", "SnmpGetPduData": "SNMPAPI_STATUS WINAPI SnmpGetPduData (HSNMP_PDU PDU, smiLPINT PDU_type, smiLPINT32 request_id, smiLPINT error_status, smiLPINT error_index, LPHSNMP_VBL varbindlist);", "SnmpSetPduData": "SNMPAPI_STATUS WINAPI SnmpSetPduData (HSNMP_PDU PDU, const smiINT *PDU_type, const smiINT32 *request_id, const smiINT *non_repeaters, const smiINT *max_repetitions, const HSNMP_VBL *varbindlist);", "SnmpDuplicatePdu": "HSNMP_PDU WINAPI SnmpDuplicatePdu (HSNMP_SESSION session, HSNMP_PDU PDU);", "SnmpFreePdu": "SNMPAPI_STATUS WINAPI SnmpFreePdu (HSNMP_PDU PDU);", "SnmpCreateVbl": "HSNMP_VBL WINAPI SnmpCreateVbl (HSNMP_SESSION session, smiLPCOID name, smiLPCVALUE value);", "SnmpDuplicateVbl": "HSNMP_VBL WINAPI SnmpDuplicateVbl (HSNMP_SESSION session, HSNMP_VBL vbl);", "SnmpFreeVbl": "SNMPAPI_STATUS WINAPI SnmpFreeVbl (HSNMP_VBL vbl);", "SnmpCountVbl": "SNMPAPI_STATUS WINAPI SnmpCountVbl (HSNMP_VBL vbl);", "SnmpGetVb": "SNMPAPI_STATUS WINAPI SnmpGetVb (HSNMP_VBL vbl, smiUINT32 index, smiLPOID name, smiLPVALUE value);", "SnmpSetVb": "SNMPAPI_STATUS WINAPI SnmpSetVb (HSNMP_VBL vbl, smiUINT32 index, smiLPCOID name, smiLPCVALUE value);", "SnmpDeleteVb": "SNMPAPI_STATUS WINAPI SnmpDeleteVb (HSNMP_VBL vbl, smiUINT32 index);", "SnmpGetLastError": "SNMPAPI_STATUS WINAPI SnmpGetLastError (HSNMP_SESSION session);", "SnmpStrToOid": "SNMPAPI_STATUS WINAPI SnmpStrToOid (LPCSTR string, smiLPOID dstOID);", "SnmpOidToStr": "SNMPAPI_STATUS WINAPI SnmpOidToStr (smiLPCOID srcOID, smiUINT32 size, LPSTR string);", "SnmpOidCopy": "SNMPAPI_STATUS WINAPI SnmpOidCopy (smiLPCOID srcOID, smiLPOID dstOID);", "SnmpOidCompare": "SNMPAPI_STATUS WINAPI SnmpOidCompare (smiLPCOID xOID, smiLPCOID yOID, smiUINT32 maxlen, smiLPINT result);", "SnmpEncodeMsg": "SNMPAPI_STATUS WINAPI SnmpEncodeMsg (HSNMP_SESSION session, HSNMP_ENTITY srcEntity, HSNMP_ENTITY dstEntity, HSNMP_CONTEXT context, HSNMP_PDU pdu, smiLPOCTETS msgBufDesc);", "SnmpDecodeMsg": "SNMPAPI_STATUS WINAPI SnmpDecodeMsg (HSNMP_SESSION session, LPHSNMP_ENTITY srcEntity, LPHSNMP_ENTITY dstEntity, LPHSNMP_CONTEXT context, LPHSNMP_PDU pdu, smiLPCOCTETS msgBufDesc);", "SnmpFreeDescriptor": "SNMPAPI_STATUS WINAPI SnmpFreeDescriptor (smiUINT32 syntax, smiLPOPAQUE descriptor);", "ITPluggableTerminalEventSink_FireEvent_Proxy": "HRESULT WINAPI ITPluggableTerminalEventSink_FireEvent_Proxy(ITPluggableTerminalEventSink *This,const MSP_EVENT_INFO *pMspEventInfo);", "ITPluggableTerminalEventSinkRegistration_RegisterSink_Proxy": "HRESULT WINAPI ITPluggableTerminalEventSinkRegistration_RegisterSink_Proxy(ITPluggableTerminalEventSinkRegistration *This,ITPluggableTerminalEventSink *pEventSink);", "ITPluggableTerminalEventSinkRegistration_UnregisterSink_Proxy": "HRESULT WINAPI ITPluggableTerminalEventSinkRegistration_UnregisterSink_Proxy(ITPluggableTerminalEventSinkRegistration *This);", "ITMSPAddress_Initialize_Proxy": "HRESULT WINAPI ITMSPAddress_Initialize_Proxy(ITMSPAddress *This,MSP_HANDLE hEvent);", "ITMSPAddress_Shutdown_Proxy": "HRESULT WINAPI ITMSPAddress_Shutdown_Proxy(ITMSPAddress *This);", "ITMSPAddress_CreateMSPCall_Proxy": "HRESULT WINAPI ITMSPAddress_CreateMSPCall_Proxy(ITMSPAddress *This,MSP_HANDLE hCall,DWORD dwReserved,DWORD dwMediaType,IUnknown *pOuterUnknown,IUnknown **ppStreamControl);", "ITMSPAddress_ShutdownMSPCall_Proxy": "HRESULT WINAPI ITMSPAddress_ShutdownMSPCall_Proxy(ITMSPAddress *This,IUnknown *pStreamControl);", "ITMSPAddress_ReceiveTSPData_Proxy": "HRESULT WINAPI ITMSPAddress_ReceiveTSPData_Proxy(ITMSPAddress *This,IUnknown *pMSPCall,BYTE *pBuffer,DWORD dwSize);", "ITMSPAddress_GetEvent_Proxy": "HRESULT WINAPI ITMSPAddress_GetEvent_Proxy(ITMSPAddress *This,DWORD *pdwSize,byte *pEventBuffer);", "OpenNtmsSessionW": "HANDLE WINAPI OpenNtmsSessionW(LPCWSTR lpServer,LPCWSTR lpApplication,DWORD dwOptions);", "OpenNtmsSessionA": "HANDLE WINAPI OpenNtmsSessionA(LPCSTR lpServer,LPCSTR lpApplication,DWORD dwOptions);", "CloseNtmsSession": "DWORD WINAPI CloseNtmsSession(HANDLE hSession);", "MountNtmsMedia": "DWORD WINAPI MountNtmsMedia(HANDLE hSession,LPNTMS_GUID lpMediaId,LPNTMS_GUID lpDriveId,DWORD dwCount,DWORD dwOptions,int dwPriority,DWORD dwTimeout,LPNTMS_MOUNT_INFORMATION lpMountInformation);", "DismountNtmsMedia": "DWORD WINAPI DismountNtmsMedia(HANDLE hSession,LPNTMS_GUID lpMediaId,DWORD dwCount,DWORD dwOptions);", "AllocateNtmsMedia": "DWORD WINAPI AllocateNtmsMedia(HANDLE hSession,LPNTMS_GUID lpMediaPool,LPNTMS_GUID lpPartition,LPNTMS_GUID lpMediaId,DWORD dwOptions,DWORD dwTimeout,LPNTMS_ALLOCATION_INFORMATION lpAllocateInformation);", "DeallocateNtmsMedia": "DWORD WINAPI DeallocateNtmsMedia(HANDLE hSession,LPNTMS_GUID lpMediaId,DWORD dwOptions);", "SwapNtmsMedia": "DWORD WINAPI SwapNtmsMedia(HANDLE hSession,LPNTMS_GUID lpMediaId1,LPNTMS_GUID lpMediaId2);", "AddNtmsMediaType": "DWORD WINAPI AddNtmsMediaType(HANDLE hSession,LPNTMS_GUID lpMediaTypeId,LPNTMS_GUID lpLibId);", "DeleteNtmsMediaType": "DWORD WINAPI DeleteNtmsMediaType(HANDLE hSession,LPNTMS_GUID lpMediaTypeId,LPNTMS_GUID lpLibId);", "ChangeNtmsMediaType": "DWORD WINAPI ChangeNtmsMediaType(HANDLE hSession,LPNTMS_GUID lpMediaId,LPNTMS_GUID lpPoolId);", "DecommissionNtmsMedia": "DWORD WINAPI DecommissionNtmsMedia(HANDLE hSession,LPNTMS_GUID lpMediaId);", "SetNtmsMediaComplete": "DWORD WINAPI SetNtmsMediaComplete(HANDLE hSession,LPNTMS_GUID lpMediaId);", "DeleteNtmsMedia": "DWORD WINAPI DeleteNtmsMedia(HANDLE hSession,LPNTMS_GUID lpMediaId);", "CreateNtmsMediaPool": "DWORD WINAPI CreateNtmsMediaPool(HANDLE hSession,LPCTSTR lpPoolName,LPNTMS_GUID lpMediaType,DWORD dwAction,LPSECURITY_ATTRIBUTES lpSecurityAttributes,LPNTMS_GUID lpPoolId);", "CreateNtmsMediaPoolA": "DWORD WINAPI CreateNtmsMediaPoolA(HANDLE hSession,LPCSTR lpPoolName,LPNTMS_GUID lpMediaType,DWORD dwAction,LPSECURITY_ATTRIBUTES lpSecurityAttributes,LPNTMS_GUID lpPoolId);", "CreateNtmsMediaPoolW": "DWORD WINAPI CreateNtmsMediaPoolW(HANDLE hSession,LPCWSTR lpPoolName,LPNTMS_GUID lpMediaType,DWORD dwAction,LPSECURITY_ATTRIBUTES lpSecurityAttributes,LPNTMS_GUID lpPoolId);", "GetNtmsMediaPoolNameA": "DWORD WINAPI GetNtmsMediaPoolNameA(HANDLE hSession,LPNTMS_GUID lpPoolId,LPSTR lpNameBuf,LPDWORD lpdwBufSize);", "GetNtmsMediaPoolNameW": "DWORD WINAPI GetNtmsMediaPoolNameW(HANDLE hSession,LPNTMS_GUID lpPoolId,LPWSTR lpNameBuf,LPDWORD lpdwBufSize);", "MoveToNtmsMediaPool": "DWORD WINAPI MoveToNtmsMediaPool(HANDLE hSession,LPNTMS_GUID lpMediaId,LPNTMS_GUID lpPoolId);", "DeleteNtmsMediaPool": "DWORD WINAPI DeleteNtmsMediaPool(HANDLE hSession,LPNTMS_GUID lpPoolId);", "DeleteNtmsLibrary": "DWORD WINAPI DeleteNtmsLibrary(HANDLE hSession,LPNTMS_GUID lpLibraryId);", "DeleteNtmsDrive": "DWORD WINAPI DeleteNtmsDrive(HANDLE hSession,LPNTMS_GUID lpDriveId);", "GetNtmsObjectInformation": "DWORD WINAPI GetNtmsObjectInformation(HANDLE hSession,LPNTMS_GUID lpObjectId,LPNTMS_OBJECTINFORMATION lpInfo);", "SetNtmsObjectInformation": "DWORD WINAPI SetNtmsObjectInformation(HANDLE hSession,LPNTMS_GUID lpObjectId,LPNTMS_OBJECTINFORMATION lpInfo);", "GetNtmsObjectInformationA": "DWORD WINAPI GetNtmsObjectInformationA(HANDLE hSession,LPNTMS_GUID lpObjectId,LPNTMS_OBJECTINFORMATIONA lpInfo);", "GetNtmsObjectInformationW": "DWORD WINAPI GetNtmsObjectInformationW(HANDLE hSession,LPNTMS_GUID lpObjectId,LPNTMS_OBJECTINFORMATIONW lpInfo);", "SetNtmsObjectInformationA": "DWORD WINAPI SetNtmsObjectInformationA(HANDLE hSession,LPNTMS_GUID lpObjectId,LPNTMS_OBJECTINFORMATIONA lpInfo);", "SetNtmsObjectInformationW": "DWORD WINAPI SetNtmsObjectInformationW(HANDLE hSession,LPNTMS_GUID lpObjectId,LPNTMS_OBJECTINFORMATIONW lpInfo);", "CreateNtmsMediaA": "DWORD WINAPI CreateNtmsMediaA(HANDLE hSession,LPNTMS_OBJECTINFORMATIONA lpMedia,LPNTMS_OBJECTINFORMATIONA lpList,DWORD dwOptions);", "CreateNtmsMediaW": "DWORD WINAPI CreateNtmsMediaW(HANDLE hSession,LPNTMS_OBJECTINFORMATIONW lpMedia,LPNTMS_OBJECTINFORMATIONW lpList,DWORD dwOptions);", "EnumerateNtmsObject": "DWORD WINAPI EnumerateNtmsObject(HANDLE hSession,const LPNTMS_GUID lpContainerId,LPNTMS_GUID lpList,LPDWORD lpdwListSize,DWORD dwType,DWORD dwOptions);", "DisableNtmsObject": "DWORD WINAPI DisableNtmsObject(HANDLE hSession,DWORD dwType,LPNTMS_GUID lpObjectId);", "EnableNtmsObject": "DWORD WINAPI EnableNtmsObject(HANDLE hSession,DWORD dwType,LPNTMS_GUID lpObjectId);", "EjectNtmsMedia": "DWORD WINAPI EjectNtmsMedia(HANDLE hSession,LPNTMS_GUID lpMediaId,LPNTMS_GUID lpEjectOperation,DWORD dwAction);", "InjectNtmsMedia": "DWORD WINAPI InjectNtmsMedia(HANDLE hSession,LPNTMS_GUID lpLibraryId,LPNTMS_GUID lpInjectOperation,DWORD dwAction);", "AccessNtmsLibraryDoor": "DWORD WINAPI AccessNtmsLibraryDoor(HANDLE hSession,LPNTMS_GUID lpLibraryId,DWORD dwAction);", "CleanNtmsDrive": "DWORD WINAPI CleanNtmsDrive(HANDLE hSession,LPNTMS_GUID lpDriveId);", "DismountNtmsDrive": "DWORD WINAPI DismountNtmsDrive(HANDLE hSession,LPNTMS_GUID lpDriveId);", "InventoryNtmsLibrary": "DWORD WINAPI InventoryNtmsLibrary(HANDLE hSession,LPNTMS_GUID lpLibraryId,DWORD dwAction);", "IdentifyNtmsSlot": "DWORD WINAPI IdentifyNtmsSlot(HANDLE hSession,LPNTMS_GUID lpSlotId,DWORD dwOption);", "UpdateNtmsOmidInfo": "DWORD WINAPI UpdateNtmsOmidInfo(HANDLE hSession,LPNTMS_GUID lpMediaId,DWORD labelType,DWORD numberOfBytes,LPVOID lpBuffer);", "CancelNtmsLibraryRequest": "DWORD WINAPI CancelNtmsLibraryRequest(HANDLE hSession,LPNTMS_GUID lpRequestId);", "GetNtmsRequestOrder": "DWORD WINAPI GetNtmsRequestOrder(HANDLE hSession,LPNTMS_GUID lpRequestId,LPDWORD lpdwOrderNumber);", "SetNtmsRequestOrder": "DWORD WINAPI SetNtmsRequestOrder(HANDLE hSession,LPNTMS_GUID lpRequestId,DWORD dwOrderNumber);", "DeleteNtmsRequests": "DWORD WINAPI DeleteNtmsRequests(HANDLE hSession,LPNTMS_GUID lpRequestId,DWORD dwType,DWORD dwCount);", "ReserveNtmsCleanerSlot": "DWORD WINAPI ReserveNtmsCleanerSlot (HANDLE hSession,LPNTMS_GUID lpLibrary,LPNTMS_GUID lpSlot);", "ReleaseNtmsCleanerSlot": "DWORD WINAPI ReleaseNtmsCleanerSlot (HANDLE hSession,LPNTMS_GUID lpLibrary);", "InjectNtmsCleaner": "DWORD WINAPI InjectNtmsCleaner (HANDLE hSession,LPNTMS_GUID lpLibrary,LPNTMS_GUID lpInjectOperation,DWORD dwNumberOfCleansLeft,DWORD dwAction);", "EjectNtmsCleaner": "DWORD WINAPI EjectNtmsCleaner (HANDLE hSession,LPNTMS_GUID lpLibrary,LPNTMS_GUID lpEjectOperation,DWORD dwAction);", "BeginNtmsDeviceChangeDetection": "DWORD WINAPI BeginNtmsDeviceChangeDetection(HANDLE hSession,LPHANDLE lpDetectHandle);", "SetNtmsDeviceChangeDetection": "DWORD WINAPI SetNtmsDeviceChangeDetection(HANDLE hSession,HANDLE DetectHandle,LPNTMS_GUID lpRequestId,DWORD dwType,DWORD dwCount);", "EndNtmsDeviceChangeDetection": "DWORD WINAPI EndNtmsDeviceChangeDetection(HANDLE hSession,HANDLE DetectHandle);", "GetNtmsObjectSecurity": "DWORD WINAPI GetNtmsObjectSecurity(HANDLE hSession,LPNTMS_GUID lpObjectId,DWORD dwType,SECURITY_INFORMATION RequestedInformation,PSECURITY_DESCRIPTOR lpSecurityDescriptor,DWORD nLength,LPDWORD lpnLengthNeeded);", "SetNtmsObjectSecurity": "DWORD WINAPI SetNtmsObjectSecurity(HANDLE hSession,LPNTMS_GUID lpObjectId,DWORD dwType,SECURITY_INFORMATION SecurityInformation,PSECURITY_DESCRIPTOR lpSecurityDescriptor);", "GetNtmsObjectAttributeA": "DWORD WINAPI GetNtmsObjectAttributeA(HANDLE hSession,LPNTMS_GUID lpObjectId,DWORD dwType,LPCSTR lpAttributeName,LPVOID lpAttributeData,LPDWORD lpAttributeSize);", "GetNtmsObjectAttributeW": "DWORD WINAPI GetNtmsObjectAttributeW(HANDLE hSession,LPNTMS_GUID lpObjectId,DWORD dwType,LPCWSTR lpAttributeName,LPVOID lpAttributeData,LPDWORD lpAttributeSize);", "SetNtmsObjectAttributeA": "DWORD WINAPI SetNtmsObjectAttributeA(HANDLE hSession,LPNTMS_GUID lpObjectId,DWORD dwType,LPCSTR lpAttributeName,LPVOID lpAttributeData,DWORD dwAttributeSize);", "SetNtmsObjectAttributeW": "DWORD WINAPI SetNtmsObjectAttributeW(HANDLE hSession,LPNTMS_GUID lpObjectId,DWORD dwType,LPCWSTR lpAttributeName,LPVOID lpAttributeData,DWORD AttributeSize);", "GetNtmsUIOptionsA": "DWORD WINAPI GetNtmsUIOptionsA(HANDLE hSession,const LPNTMS_GUID lpObjectId,DWORD dwType,LPSTR lpszDestination,LPDWORD lpdwBufSize);", "GetNtmsUIOptionsW": "DWORD WINAPI GetNtmsUIOptionsW(HANDLE hSession,const LPNTMS_GUID lpObjectId,DWORD dwType,LPWSTR lpszDestination,LPDWORD lpdwBufSize);", "SetNtmsUIOptionsA": "DWORD WINAPI SetNtmsUIOptionsA(HANDLE hSession,const LPNTMS_GUID lpObjectId,DWORD dwType,DWORD dwOperation,LPCSTR lpszDestination);", "SetNtmsUIOptionsW": "DWORD WINAPI SetNtmsUIOptionsW(HANDLE hSession,const LPNTMS_GUID lpObjectId,DWORD dwType,DWORD dwOperation,LPCWSTR lpszDestination);", "SubmitNtmsOperatorRequestW": "DWORD WINAPI SubmitNtmsOperatorRequestW(HANDLE hSession,DWORD dwRequest,LPCWSTR lpMessage,LPNTMS_GUID lpArg1Id,LPNTMS_GUID lpArg2Id,LPNTMS_GUID lpRequestId);", "SubmitNtmsOperatorRequestA": "DWORD WINAPI SubmitNtmsOperatorRequestA(HANDLE hSession,DWORD dwRequest,LPCSTR lpMessage,LPNTMS_GUID lpArg1Id,LPNTMS_GUID lpArg2Id,LPNTMS_GUID lpRequestId);", "WaitForNtmsOperatorRequest": "DWORD WINAPI WaitForNtmsOperatorRequest(HANDLE hSession,LPNTMS_GUID lpRequestId,DWORD dwTimeout);", "CancelNtmsOperatorRequest": "DWORD WINAPI CancelNtmsOperatorRequest(HANDLE hSession,LPNTMS_GUID lpRequestId);", "SatisfyNtmsOperatorRequest": "DWORD WINAPI SatisfyNtmsOperatorRequest(HANDLE hSession,LPNTMS_GUID lpRequestId);", "ImportNtmsDatabase": "DWORD WINAPI ImportNtmsDatabase(HANDLE hSession);", "ExportNtmsDatabase": "DWORD WINAPI ExportNtmsDatabase(HANDLE hSession);", "OpenNtmsNotification": "HANDLE WINAPI OpenNtmsNotification(HANDLE hSession,DWORD dwType);", "WaitForNtmsNotification": "DWORD WINAPI WaitForNtmsNotification(HANDLE hNotification,LPNTMS_NOTIFICATIONINFORMATION lpNotificationInformation,DWORD dwTimeout);", "CloseNtmsNotification": "DWORD WINAPI CloseNtmsNotification(HANDLE hNotification);", "EjectDiskFromSADriveW": "DWORD WINAPI EjectDiskFromSADriveW(LPCWSTR lpComputerName,LPCWSTR lpAppName,LPCWSTR lpDeviceName,HWND hWnd,LPCWSTR lpTitle,LPCWSTR lpMessage,DWORD dwOptions);", "EjectDiskFromSADriveA": "DWORD WINAPI EjectDiskFromSADriveA(LPCSTR lpComputerName,LPCSTR lpAppName,LPCSTR lpDeviceName,HWND hWnd,LPCSTR lpTitle,LPCSTR lpMessage,DWORD dwOptions);", "GetVolumesFromDriveW": "DWORD WINAPI GetVolumesFromDriveW(LPWSTR pszDriveName,LPWSTR *VolumeNameBufferPtr,LPWSTR *DriveLetterBufferPtr);", "GetVolumesFromDriveA": "DWORD WINAPI GetVolumesFromDriveA(LPSTR pszDriveName,LPSTR *VolumeNameBufferPtr,LPSTR *DriveLetterBufferPtr);", "NdfCreateConnectivityIncident": "HRESULT WINAPI NdfCreateConnectivityIncident(", "NdfCreateDNSIncident": "HRESULT WINAPI NdfCreateDNSIncident(", "NdfCreateSharingIncident": "HRESULT WINAPI NdfCreateSharingIncident(", "NdfCreateWebIncident": "HRESULT WINAPI NdfCreateWebIncident(", "NdfCreateWebIncidentEx": "HRESULT WINAPI NdfCreateWebIncidentEx(", "DhcpCApiInitialize": "DWORD WINAPI DhcpCApiInitialize(LPDWORD Version);", "DhcpCApiCleanup": "VOID WINAPI DhcpCApiCleanup(VOID);", "DhcpRequestParams": "DWORD WINAPI DhcpRequestParams(DWORD Flags,LPVOID Reserved,LPWSTR AdapterName,LPDHCPCAPI_CLASSID ClassId,DHCPCAPI_PARAMS_ARRAY SendParams,DHCPCAPI_PARAMS_ARRAY RecdParams,LPBYTE Buffer,LPDWORD pSize,LPWSTR RequestIdStr);", "DhcpUndoRequestParams": "DWORD WINAPI DhcpUndoRequestParams(DWORD Flags,LPVOID Reserved,LPWSTR AdapterName,LPWSTR RequestIdStr);", "DhcpRegisterParamChange": "DWORD WINAPI DhcpRegisterParamChange(DWORD Flags,LPVOID Reserved,LPWSTR AdapterName,LPDHCPCAPI_CLASSID ClassId,DHCPCAPI_PARAMS_ARRAY Params,LPVOID Handle);", "DhcpDeRegisterParamChange": "DWORD WINAPI DhcpDeRegisterParamChange(DWORD Flags,LPVOID Reserved,LPVOID Event);", "DhcpRemoveDNSRegistrations": "DWORD WINAPI DhcpRemoveDNSRegistrations(VOID);", "InitializeXamlDiagnostic": "HRESULT WINAPI InitializeXamlDiagnostic(PCWSTR, DWORD, PCWSTR, PCWSTR, CLSID);", "InitializeXamlDiagnosticsEx": "HRESULT WINAPI InitializeXamlDiagnosticsEx(PCWSTR, DWORD, PCWSTR, PCWSTR, CLSID, PCWSTR);", "IPersistHistory_LoadHistory_Proxy": "HRESULT WINAPI IPersistHistory_LoadHistory_Proxy(IPersistHistory *This,IStream *pStream,IBindCtx *pbc);", "IPersistHistory_SaveHistory_Proxy": "HRESULT WINAPI IPersistHistory_SaveHistory_Proxy(IPersistHistory *This,IStream *pStream);", "IPersistHistory_SetPositionCookie_Proxy": "HRESULT WINAPI IPersistHistory_SetPositionCookie_Proxy(IPersistHistory *This,DWORD dwPositioncookie);", "IPersistHistory_GetPositionCookie_Proxy": "HRESULT WINAPI IPersistHistory_GetPositionCookie_Proxy(IPersistHistory *This,DWORD *pdwPositioncookie);", "HcnEnumerateNetworks": "HRESULT WINAPI HcnEnumerateNetworks (PCWSTR Query, PWSTR *Networks, PWSTR *ErrorRecord);", "HcnCreateNetwork": "HRESULT WINAPI HcnCreateNetwork (REFGUID Id, PCWSTR Settings, PHCN_NETWORK Network, PWSTR *ErrorRecord);", "HcnOpenNetwork": "HRESULT WINAPI HcnOpenNetwork (REFGUID Id, PHCN_NETWORK Network, PWSTR *ErrorRecord);", "HcnModifyNetwork": "HRESULT WINAPI HcnModifyNetwork (HCN_NETWORK Network, PCWSTR Settings, PWSTR *ErrorRecord);", "HcnQueryNetworkProperties": "HRESULT WINAPI HcnQueryNetworkProperties (HCN_NETWORK Network, PCWSTR Query, PWSTR *Properties, PWSTR *ErrorRecord);", "HcnDeleteNetwork": "HRESULT WINAPI HcnDeleteNetwork (REFGUID Id, PWSTR *ErrorRecord);", "HcnCloseNetwork": "HRESULT WINAPI HcnCloseNetwork (HCN_NETWORK Network);", "HcnEnumerateNamespaces": "HRESULT WINAPI HcnEnumerateNamespaces (PCWSTR Query, PWSTR *Namespaces, PWSTR *ErrorRecord);", "HcnCreateNamespace": "HRESULT WINAPI HcnCreateNamespace (REFGUID Id, PCWSTR Settings, PHCN_NAMESPACE Namespace, PWSTR *ErrorRecord);", "HcnOpenNamespace": "HRESULT WINAPI HcnOpenNamespace (REFGUID Id, PHCN_NAMESPACE Namespace, PWSTR *ErrorRecord);", "HcnModifyNamespace": "HRESULT WINAPI HcnModifyNamespace (HCN_NAMESPACE Namespace, PCWSTR Settings, PWSTR *ErrorRecord);", "HcnQueryNamespaceProperties": "HRESULT WINAPI HcnQueryNamespaceProperties (HCN_NAMESPACE Namespace, PCWSTR Query, PWSTR *Properties, PWSTR *ErrorRecord);", "HcnDeleteNamespace": "HRESULT WINAPI HcnDeleteNamespace (REFGUID Id, PWSTR *ErrorRecord);", "HcnCloseNamespace": "HRESULT WINAPI HcnCloseNamespace (HCN_NAMESPACE Namespace);", "HcnEnumerateEndpoints": "HRESULT WINAPI HcnEnumerateEndpoints (PCWSTR Query, PWSTR *Endpoints, PWSTR *ErrorRecord);", "HcnCreateEndpoint": "HRESULT WINAPI HcnCreateEndpoint (HCN_NETWORK Network, REFGUID Id, PCWSTR Settings, PHCN_ENDPOINT Endpoint, PWSTR *ErrorRecord);", "HcnOpenEndpoint": "HRESULT WINAPI HcnOpenEndpoint (REFGUID Id, PHCN_ENDPOINT Endpoint, PWSTR *ErrorRecord);", "HcnModifyEndpoint": "HRESULT WINAPI HcnModifyEndpoint (HCN_ENDPOINT Endpoint, PCWSTR Settings, PWSTR *ErrorRecord);", "HcnQueryEndpointProperties": "HRESULT WINAPI HcnQueryEndpointProperties (HCN_ENDPOINT Endpoint, PCWSTR Query, PWSTR *Properties, PWSTR *ErrorRecord);", "HcnDeleteEndpoint": "HRESULT WINAPI HcnDeleteEndpoint (REFGUID Id, PWSTR *ErrorRecord);", "HcnCloseEndpoint": "HRESULT WINAPI HcnCloseEndpoint (HCN_ENDPOINT Endpoint);", "HcnEnumerateLoadBalancers": "HRESULT WINAPI HcnEnumerateLoadBalancers (PCWSTR Query, PWSTR *LoadBalancer, PWSTR *ErrorRecord);", "HcnCreateLoadBalancer": "HRESULT WINAPI HcnCreateLoadBalancer (REFGUID Id, PCWSTR Settings, PHCN_LOADBALANCER LoadBalancer, PWSTR *ErrorRecord);", "HcnOpenLoadBalancer": "HRESULT WINAPI HcnOpenLoadBalancer (REFGUID Id, PHCN_LOADBALANCER LoadBalancer, PWSTR *ErrorRecord);", "HcnModifyLoadBalancer": "HRESULT WINAPI HcnModifyLoadBalancer (HCN_LOADBALANCER LoadBalancer, PCWSTR Settings, PWSTR *ErrorRecord);", "HcnQueryLoadBalancerProperties": "HRESULT WINAPI HcnQueryLoadBalancerProperties (HCN_LOADBALANCER LoadBalancer, PCWSTR Query, PWSTR *Properties, PWSTR *ErrorRecord);", "HcnDeleteLoadBalancer": "HRESULT WINAPI HcnDeleteLoadBalancer (REFGUID Id, PWSTR *ErrorRecord);", "HcnCloseLoadBalancer": "HRESULT WINAPI HcnCloseLoadBalancer (HCN_LOADBALANCER LoadBalancer);", "HcnRegisterServiceCallback": "HRESULT WINAPI HcnRegisterServiceCallback (HCN_NOTIFICATION_CALLBACK Callback, void *Context, HCN_CALLBACK *CallbackHandle);", "HcnUnregisterServiceCallback": "HRESULT WINAPI HcnUnregisterServiceCallback (HCN_CALLBACK CallbackHandle);", "HcnRegisterGuestNetworkServiceCallback": "HRESULT WINAPI HcnRegisterGuestNetworkServiceCallback (HCN_GUESTNETWORKSERVICE GuestNetworkService, HCN_NOTIFICATION_CALLBACK Callback, void* Context, HCN_CALLBACK* CallbackHandle);", "HcnUnregisterGuestNetworkServiceCallback": "HRESULT WINAPI HcnUnregisterGuestNetworkServiceCallback (HCN_CALLBACK CallbackHandle);", "HcnCreateGuestNetworkService": "HRESULT WINAPI HcnCreateGuestNetworkService (REFGUID Id, PCWSTR Settings, PHCN_GUESTNETWORKSERVICE GuestNetworkService, PWSTR* ErrorRecord);", "HcnCloseGuestNetworkService": "HRESULT WINAPI HcnCloseGuestNetworkService (HCN_GUESTNETWORKSERVICE GuestNetworkService);", "HcnModifyGuestNetworkService": "HRESULT WINAPI HcnModifyGuestNetworkService (HCN_GUESTNETWORKSERVICE GuestNetworkService, PCWSTR Settings, PWSTR* ErrorRecord);", "HcnDeleteGuestNetworkService": "HRESULT WINAPI HcnDeleteGuestNetworkService (REFGUID Id, PWSTR* ErrorRecord);", "HcnReserveGuestNetworkServicePort": "HRESULT WINAPI HcnReserveGuestNetworkServicePort (HCN_GUESTNETWORKSERVICE GuestNetworkService, HCN_PORT_PROTOCOL Protocol, HCN_PORT_ACCESS Access, USHORT Port, HANDLE* PortReservationHandle);", "HcnReserveGuestNetworkServicePortRange": "HRESULT WINAPI HcnReserveGuestNetworkServicePortRange (HCN_GUESTNETWORKSERVICE GuestNetworkService, USHORT PortCount, HCN_PORT_RANGE_RESERVATION* PortRangeReservation, HANDLE* PortReservationHandle);", "HcnReleaseGuestNetworkServicePortReservationHandle": "HRESULT WINAPI HcnReleaseGuestNetworkServicePortReservationHandle (HANDLE PortReservationHandle);", "HcnEnumerateGuestNetworkPortReservations": "HRESULT WINAPI HcnEnumerateGuestNetworkPortReservations (ULONG* ReturnCount, HCN_PORT_RANGE_ENTRY** PortEntries);", "HcnFreeGuestNetworkPortReservations": "VOID WINAPI HcnFreeGuestNetworkPortReservations (HCN_PORT_RANGE_ENTRY* PortEntries);", "HcnQueryEndpointStats": "HRESULT WINAPI HcnQueryEndpointStats (HCN_ENDPOINT Endpoint, PCWSTR Query, PWSTR *Stats, PWSTR *ErrorRecord);", "HcnQueryEndpointAddresses": "HRESULT WINAPI HcnQueryEndpointAddresses (HCN_ENDPOINT Endpoint, PCWSTR Query, PWSTR *Addresses, PWSTR *ErrorRecord);", "ImpersonateNamedPipeClient": "WINADVAPI WINBOOL WINAPI ImpersonateNamedPipeClient (HANDLE hNamedPipe);", "CreatePipe": "WINBASEAPI WINBOOL WINAPI CreatePipe (PHANDLE hReadPipe, PHANDLE hWritePipe, LPSECURITY_ATTRIBUTES lpPipeAttributes, DWORD nSize);", "ConnectNamedPipe": "WINBASEAPI WINBOOL WINAPI ConnectNamedPipe (HANDLE hNamedPipe, LPOVERLAPPED lpOverlapped);", "DisconnectNamedPipe": "WINBASEAPI WINBOOL WINAPI DisconnectNamedPipe (HANDLE hNamedPipe);", "SetNamedPipeHandleState": "WINBASEAPI WINBOOL WINAPI SetNamedPipeHandleState (HANDLE hNamedPipe, LPDWORD lpMode, LPDWORD lpMaxCollectionCount, LPDWORD lpCollectDataTimeout);", "PeekNamedPipe": "WINBASEAPI WINBOOL WINAPI PeekNamedPipe (HANDLE hNamedPipe, LPVOID lpBuffer, DWORD nBufferSize, LPDWORD lpBytesRead, LPDWORD lpTotalBytesAvail, LPDWORD lpBytesLeftThisMessage);", "TransactNamedPipe": "WINBASEAPI WINBOOL WINAPI TransactNamedPipe (HANDLE hNamedPipe, LPVOID lpInBuffer, DWORD nInBufferSize, LPVOID lpOutBuffer, DWORD nOutBufferSize, LPDWORD lpBytesRead, LPOVERLAPPED lpOverlapped);", "CreateNamedPipeW": "WINBASEAPI HANDLE WINAPI CreateNamedPipeW (LPCWSTR lpName, DWORD dwOpenMode, DWORD dwPipeMode, DWORD nMaxInstances, DWORD nOutBufferSize, DWORD nInBufferSize, DWORD nDefaultTimeOut, LPSECURITY_ATTRIBUTES lpSecurityAttributes);", "WaitNamedPipeW": "WINBASEAPI WINBOOL WINAPI WaitNamedPipeW (LPCWSTR lpNamedPipeName, DWORD nTimeOut);", "GetNamedPipeClientComputerNameW": "WINBASEAPI WINBOOL WINAPI GetNamedPipeClientComputerNameW (HANDLE Pipe, LPWSTR ClientComputerName, ULONG ClientComputerNameLength);", "INewMail_put_Value_Proxy": "HRESULT WINAPI INewMail_put_Value_Proxy(INewMail *This,BSTR bstrHeader,BSTR newVal);", "INewMail_put_To_Proxy": "HRESULT WINAPI INewMail_put_To_Proxy(INewMail *This,BSTR newVal);", "INewMail_put_Cc_Proxy": "HRESULT WINAPI INewMail_put_Cc_Proxy(INewMail *This,BSTR newVal);", "INewMail_put_Bcc_Proxy": "HRESULT WINAPI INewMail_put_Bcc_Proxy(INewMail *This,BSTR newVal);", "INewMail_put_Body_Proxy": "HRESULT WINAPI INewMail_put_Body_Proxy(INewMail *This,VARIANT newVal);", "INewMail_put_Importance_Proxy": "HRESULT WINAPI INewMail_put_Importance_Proxy(INewMail *This,__LONG32 newVal);", "INewMail_put_BodyFormat_Proxy": "HRESULT WINAPI INewMail_put_BodyFormat_Proxy(INewMail *This,__LONG32 newVal);", "INewMail_put_MailFormat_Proxy": "HRESULT WINAPI INewMail_put_MailFormat_Proxy(INewMail *This,__LONG32 newVal);", "INewMail_put_Subject_Proxy": "HRESULT WINAPI INewMail_put_Subject_Proxy(INewMail *This,BSTR newVal);", "INewMail_put_From_Proxy": "HRESULT WINAPI INewMail_put_From_Proxy(INewMail *This,BSTR newVal);", "INewMail_Send_Proxy": "HRESULT WINAPI INewMail_Send_Proxy(INewMail *This,VARIANT From,VARIANT To,VARIANT Subject,VARIANT Body,VARIANT Importance);", "INewMail_AttachFile_Proxy": "HRESULT WINAPI INewMail_AttachFile_Proxy(INewMail *This,VARIANT Source,VARIANT FileName,VARIANT EncodingMethod);", "INewMail_AttachURL_Proxy": "HRESULT WINAPI INewMail_AttachURL_Proxy(INewMail *This,VARIANT Source,VARIANT ContentLocation,VARIANT ContentBase,VARIANT EncodingMethod);", "INewMail_SetLocaleIDs_Proxy": "HRESULT WINAPI INewMail_SetLocaleIDs_Proxy(INewMail *This,__LONG32 CodePageID);", "INewMail_put_ContentLocation_Proxy": "HRESULT WINAPI INewMail_put_ContentLocation_Proxy(INewMail *This,BSTR newVal);", "INewMail_put_ContentBase_Proxy": "HRESULT WINAPI INewMail_put_ContentBase_Proxy(INewMail *This,BSTR newVal);", "INewMail_get_Version_Proxy": "HRESULT WINAPI INewMail_get_Version_Proxy(INewMail *This,BSTR *Version);", "ISession_get_Application_Proxy": "HRESULT WINAPI ISession_get_Application_Proxy(ISession *This,VARIANT *varApplication);", "ISession_get_Parent_Proxy": "HRESULT WINAPI ISession_get_Parent_Proxy(ISession *This,VARIANT *varParent);", "ISession_get_Session_Proxy": "HRESULT WINAPI ISession_get_Session_Proxy(ISession *This,VARIANT *varSession);", "ISession_get_Class_Proxy": "HRESULT WINAPI ISession_get_Class_Proxy(ISession *This,__LONG32 *varClass);", "ISession_get_Version_Proxy": "HRESULT WINAPI ISession_get_Version_Proxy(ISession *This,BSTR *varVersion);", "ISession_get_Name_Proxy": "HRESULT WINAPI ISession_get_Name_Proxy(ISession *This,BSTR *varName);", "ISession_get_Inbox_Proxy": "HRESULT WINAPI ISession_get_Inbox_Proxy(ISession *This,VARIANT *varInbox);", "ISession_get_Outbox_Proxy": "HRESULT WINAPI ISession_get_Outbox_Proxy(ISession *This,VARIANT *varOutbox);", "ISession_get_MessageFormat_Proxy": "HRESULT WINAPI ISession_get_MessageFormat_Proxy(ISession *This,__LONG32 *pMessageFormat);", "ISession_put_MessageFormat_Proxy": "HRESULT WINAPI ISession_put_MessageFormat_Proxy(ISession *This,__LONG32 varMessageFormat);", "ISession_LogonSMTP_Proxy": "HRESULT WINAPI ISession_LogonSMTP_Proxy(ISession *This,VARIANT DisplayName,VARIANT Address);", "ISession_Logoff_Proxy": "HRESULT WINAPI ISession_Logoff_Proxy(ISession *This);", "ISession_GetDefaultFolder_Proxy": "HRESULT WINAPI ISession_GetDefaultFolder_Proxy(ISession *This,VARIANT Type,VARIANT *pvarResult);", "ISession_GetMessage_Proxy": "HRESULT WINAPI ISession_GetMessage_Proxy(ISession *This,VARIANT MessageID,VARIANT StoreID,VARIANT *pvarResult);", "ISession_SetLocaleIDs_Proxy": "HRESULT WINAPI ISession_SetLocaleIDs_Proxy(ISession *This,__LONG32 CodePageID);", "ISession_SetReserved_Proxy": "HRESULT WINAPI ISession_SetReserved_Proxy(ISession *This,VARIANT var1,VARIANT var2);", "Folder_get_Application_Proxy": "HRESULT WINAPI Folder_get_Application_Proxy(Folder *This,VARIANT *varApplication);", "Folder_get_Parent_Proxy": "HRESULT WINAPI Folder_get_Parent_Proxy(Folder *This,VARIANT *varParent);", "Folder_get_Session_Proxy": "HRESULT WINAPI Folder_get_Session_Proxy(Folder *This,VARIANT *varSession);", "Folder_get_Class_Proxy": "HRESULT WINAPI Folder_get_Class_Proxy(Folder *This,__LONG32 *varClass);", "Folder_get_Name_Proxy": "HRESULT WINAPI Folder_get_Name_Proxy(Folder *This,BSTR *varName);", "Folder_get_Messages_Proxy": "HRESULT WINAPI Folder_get_Messages_Proxy(Folder *This,VARIANT *varMessages);", "Messages_get_Application_Proxy": "HRESULT WINAPI Messages_get_Application_Proxy(Messages *This,VARIANT *varApplication);", "Messages_get_Parent_Proxy": "HRESULT WINAPI Messages_get_Parent_Proxy(Messages *This,VARIANT *varParent);", "Messages_get_Session_Proxy": "HRESULT WINAPI Messages_get_Session_Proxy(Messages *This,VARIANT *varSession);", "Messages_get_Class_Proxy": "HRESULT WINAPI Messages_get_Class_Proxy(Messages *This,__LONG32 *varClass);", "Messages_get_Count_Proxy": "HRESULT WINAPI Messages_get_Count_Proxy(Messages *This,__LONG32 *varCount);", "Messages_get_Item_Proxy": "HRESULT WINAPI Messages_get_Item_Proxy(Messages *This,VARIANT *var,VARIANT *pvarResult);", "Messages_get__NewEnum_Proxy": "HRESULT WINAPI Messages_get__NewEnum_Proxy(Messages *This,IUnknown **ppunkResult);", "Messages_Add_Proxy": "HRESULT WINAPI Messages_Add_Proxy(Messages *This,VARIANT Subject,VARIANT Text,VARIANT Importance,VARIANT *pvarResult);", "Messages_Delete_Proxy": "HRESULT WINAPI Messages_Delete_Proxy(Messages *This);", "Messages_GetFirst_Proxy": "HRESULT WINAPI Messages_GetFirst_Proxy(Messages *This,VARIANT *pvarResult);", "Messages_GetNext_Proxy": "HRESULT WINAPI Messages_GetNext_Proxy(Messages *This,VARIANT *pvarResult);", "Messages_GetLast_Proxy": "HRESULT WINAPI Messages_GetLast_Proxy(Messages *This,VARIANT *pvarResult);", "Messages_GetPrevious_Proxy": "HRESULT WINAPI Messages_GetPrevious_Proxy(Messages *This,VARIANT *pvarResult);", "Message_get_Application_Proxy": "HRESULT WINAPI Message_get_Application_Proxy(Message *This,VARIANT *varApplication);", "Message_get_Parent_Proxy": "HRESULT WINAPI Message_get_Parent_Proxy(Message *This,VARIANT *varParent);", "Message_get_Session_Proxy": "HRESULT WINAPI Message_get_Session_Proxy(Message *This,VARIANT *varSession);", "Message_get_Class_Proxy": "HRESULT WINAPI Message_get_Class_Proxy(Message *This,__LONG32 *varClass);", "Message_get_Size_Proxy": "HRESULT WINAPI Message_get_Size_Proxy(Message *This,__LONG32 *varSize);", "Message_get_Importance_Proxy": "HRESULT WINAPI Message_get_Importance_Proxy(Message *This,__LONG32 *pImportance);", "Message_put_Importance_Proxy": "HRESULT WINAPI Message_put_Importance_Proxy(Message *This,__LONG32 varImportance);", "Message_get_Subject_Proxy": "HRESULT WINAPI Message_get_Subject_Proxy(Message *This,BSTR *pSubject);", "Message_put_Subject_Proxy": "HRESULT WINAPI Message_put_Subject_Proxy(Message *This,BSTR varSubject);", "Message_get_Sender_Proxy": "HRESULT WINAPI Message_get_Sender_Proxy(Message *This,VARIANT *varSender);", "Message_get_TimeSent_Proxy": "HRESULT WINAPI Message_get_TimeSent_Proxy(Message *This,VARIANT *varTimeSent);", "Message_put_TimeSent_Proxy": "HRESULT WINAPI Message_put_TimeSent_Proxy(Message *This,VARIANT varTimeSent);", "Message_get_TimeReceived_Proxy": "HRESULT WINAPI Message_get_TimeReceived_Proxy(Message *This,VARIANT *varTimeReceived);", "Message_put_TimeReceived_Proxy": "HRESULT WINAPI Message_put_TimeReceived_Proxy(Message *This,VARIANT varTimeReceived);", "Message_get_Text_Proxy": "HRESULT WINAPI Message_get_Text_Proxy(Message *This,VARIANT *varText);", "Message_put_Text_Proxy": "HRESULT WINAPI Message_put_Text_Proxy(Message *This,VARIANT varText);", "Message_get_HTMLText_Proxy": "HRESULT WINAPI Message_get_HTMLText_Proxy(Message *This,VARIANT *varHTMLText);", "Message_put_HTMLText_Proxy": "HRESULT WINAPI Message_put_HTMLText_Proxy(Message *This,VARIANT varHTMLText);", "Message_get_Recipients_Proxy": "HRESULT WINAPI Message_get_Recipients_Proxy(Message *This,VARIANT *varRecipients);", "Message_put_Recipients_Proxy": "HRESULT WINAPI Message_put_Recipients_Proxy(Message *This,VARIANT varRecipients);", "Message_get_Attachments_Proxy": "HRESULT WINAPI Message_get_Attachments_Proxy(Message *This,VARIANT *varAttachments);", "Message_put_MessageFormat_Proxy": "HRESULT WINAPI Message_put_MessageFormat_Proxy(Message *This,__LONG32 __MIDL_0011);", "Message_get_ContentLocation_Proxy": "HRESULT WINAPI Message_get_ContentLocation_Proxy(Message *This,VARIANT *varContentLocation);", "Message_put_ContentLocation_Proxy": "HRESULT WINAPI Message_put_ContentLocation_Proxy(Message *This,VARIANT varContentLocation);", "Message_get_ContentBase_Proxy": "HRESULT WINAPI Message_get_ContentBase_Proxy(Message *This,VARIANT *varContentBase);", "Message_put_ContentBase_Proxy": "HRESULT WINAPI Message_put_ContentBase_Proxy(Message *This,VARIANT varContentBase);", "Message_get_ContentID_Proxy": "HRESULT WINAPI Message_get_ContentID_Proxy(Message *This,VARIANT *varContentID);", "Message_put_ContentID_Proxy": "HRESULT WINAPI Message_put_ContentID_Proxy(Message *This,VARIANT varContentID);", "Message_Delete_Proxy": "HRESULT WINAPI Message_Delete_Proxy(Message *This);", "Message_Send_Proxy": "HRESULT WINAPI Message_Send_Proxy(Message *This);", "Recipients_get_Application_Proxy": "HRESULT WINAPI Recipients_get_Application_Proxy(Recipients *This,VARIANT *varApplication);", "Recipients_get_Parent_Proxy": "HRESULT WINAPI Recipients_get_Parent_Proxy(Recipients *This,VARIANT *varParent);", "Recipients_get_Session_Proxy": "HRESULT WINAPI Recipients_get_Session_Proxy(Recipients *This,VARIANT *varSession);", "Recipients_get_Class_Proxy": "HRESULT WINAPI Recipients_get_Class_Proxy(Recipients *This,__LONG32 *varClass);", "Recipients_get_Item_Proxy": "HRESULT WINAPI Recipients_get_Item_Proxy(Recipients *This,VARIANT *var,VARIANT *pvarResult);", "Recipients_get_Count_Proxy": "HRESULT WINAPI Recipients_get_Count_Proxy(Recipients *This,__LONG32 *varCount);", "Recipients_get__NewEnum_Proxy": "HRESULT WINAPI Recipients_get__NewEnum_Proxy(Recipients *This,IUnknown **ppunkResult);", "Recipients_Add_Proxy": "HRESULT WINAPI Recipients_Add_Proxy(Recipients *This,VARIANT Name,VARIANT Address,VARIANT Type,VARIANT *pvarResult);", "Recipients_Delete_Proxy": "HRESULT WINAPI Recipients_Delete_Proxy(Recipients *This);", "Recipient_get_Application_Proxy": "HRESULT WINAPI Recipient_get_Application_Proxy(Recipient *This,VARIANT *varApplication);", "Recipient_get_Parent_Proxy": "HRESULT WINAPI Recipient_get_Parent_Proxy(Recipient *This,VARIANT *varParent);", "Recipient_get_Session_Proxy": "HRESULT WINAPI Recipient_get_Session_Proxy(Recipient *This,VARIANT *varSession);", "Recipient_get_Class_Proxy": "HRESULT WINAPI Recipient_get_Class_Proxy(Recipient *This,__LONG32 *varClass);", "Recipient_get_Name_Proxy": "HRESULT WINAPI Recipient_get_Name_Proxy(Recipient *This,BSTR *pbstrName);", "Recipient_put_Name_Proxy": "HRESULT WINAPI Recipient_put_Name_Proxy(Recipient *This,BSTR bstrName);", "Recipient_get_Type_Proxy": "HRESULT WINAPI Recipient_get_Type_Proxy(Recipient *This,__LONG32 *pType);", "Recipient_put_Type_Proxy": "HRESULT WINAPI Recipient_put_Type_Proxy(Recipient *This,__LONG32 varType);", "Recipient_get_Address_Proxy": "HRESULT WINAPI Recipient_get_Address_Proxy(Recipient *This,BSTR *pAddress);", "Recipient_put_Address_Proxy": "HRESULT WINAPI Recipient_put_Address_Proxy(Recipient *This,BSTR varAddress);", "Recipient_Delete_Proxy": "HRESULT WINAPI Recipient_Delete_Proxy(Recipient *This);", "Attachments_get_Application_Proxy": "HRESULT WINAPI Attachments_get_Application_Proxy(Attachments *This,VARIANT *varApplication);", "Attachments_get_Parent_Proxy": "HRESULT WINAPI Attachments_get_Parent_Proxy(Attachments *This,VARIANT *varParent);", "Attachments_get_Session_Proxy": "HRESULT WINAPI Attachments_get_Session_Proxy(Attachments *This,VARIANT *varSession);", "Attachments_get_Class_Proxy": "HRESULT WINAPI Attachments_get_Class_Proxy(Attachments *This,__LONG32 *varClass);", "Attachments_get_Item_Proxy": "HRESULT WINAPI Attachments_get_Item_Proxy(Attachments *This,VARIANT *var,VARIANT *pvarResult);", "Attachments_get_Count_Proxy": "HRESULT WINAPI Attachments_get_Count_Proxy(Attachments *This,__LONG32 *varCount);", "Attachments_get__NewEnum_Proxy": "HRESULT WINAPI Attachments_get__NewEnum_Proxy(Attachments *This,IUnknown **ppunkResult);", "Attachments_Add_Proxy": "HRESULT WINAPI Attachments_Add_Proxy(Attachments *This,VARIANT Name,VARIANT Type,VARIANT Source,VARIANT ContentLocation,VARIANT ContentBase,VARIANT *pvarResult);", "Attachments_Delete_Proxy": "HRESULT WINAPI Attachments_Delete_Proxy(Attachments *This);", "Attachment_get_Application_Proxy": "HRESULT WINAPI Attachment_get_Application_Proxy(Attachment *This,VARIANT *varApplication);", "Attachment_get_Parent_Proxy": "HRESULT WINAPI Attachment_get_Parent_Proxy(Attachment *This,VARIANT *varParent);", "Attachment_get_Session_Proxy": "HRESULT WINAPI Attachment_get_Session_Proxy(Attachment *This,VARIANT *varSession);", "Attachment_get_Class_Proxy": "HRESULT WINAPI Attachment_get_Class_Proxy(Attachment *This,__LONG32 *varClass);", "Attachment_get_Name_Proxy": "HRESULT WINAPI Attachment_get_Name_Proxy(Attachment *This,BSTR *pbstrName);", "Attachment_put_Name_Proxy": "HRESULT WINAPI Attachment_put_Name_Proxy(Attachment *This,BSTR bstrName);", "Attachment_get_Type_Proxy": "HRESULT WINAPI Attachment_get_Type_Proxy(Attachment *This,__LONG32 *pType);", "Attachment_put_Type_Proxy": "HRESULT WINAPI Attachment_put_Type_Proxy(Attachment *This,__LONG32 varType);", "Attachment_get_Source_Proxy": "HRESULT WINAPI Attachment_get_Source_Proxy(Attachment *This,VARIANT *varSource);", "Attachment_put_Source_Proxy": "HRESULT WINAPI Attachment_put_Source_Proxy(Attachment *This,VARIANT varSource);", "Attachment_get_ContentLocation_Proxy": "HRESULT WINAPI Attachment_get_ContentLocation_Proxy(Attachment *This,VARIANT *varContentLocation);", "Attachment_get_ContentBase_Proxy": "HRESULT WINAPI Attachment_get_ContentBase_Proxy(Attachment *This,VARIANT *varContentBase);", "Attachment_get_ContentID_Proxy": "HRESULT WINAPI Attachment_get_ContentID_Proxy(Attachment *This,VARIANT *varContentID);", "Attachment_Delete_Proxy": "HRESULT WINAPI Attachment_Delete_Proxy(Attachment *This);", "Attachment_ReadFromFile_Proxy": "HRESULT WINAPI Attachment_ReadFromFile_Proxy(Attachment *This,BSTR FileName);", "Attachment_WriteToFile_Proxy": "HRESULT WINAPI Attachment_WriteToFile_Proxy(Attachment *This,BSTR FileName);", "AddressEntry_get_Application_Proxy": "HRESULT WINAPI AddressEntry_get_Application_Proxy(AddressEntry *This,VARIANT *varApplication);", "AddressEntry_get_Parent_Proxy": "HRESULT WINAPI AddressEntry_get_Parent_Proxy(AddressEntry *This,VARIANT *varParent);", "AddressEntry_get_Session_Proxy": "HRESULT WINAPI AddressEntry_get_Session_Proxy(AddressEntry *This,VARIANT *varSession);", "AddressEntry_get_Class_Proxy": "HRESULT WINAPI AddressEntry_get_Class_Proxy(AddressEntry *This,__LONG32 *varClass);", "AddressEntry_get_Name_Proxy": "HRESULT WINAPI AddressEntry_get_Name_Proxy(AddressEntry *This,BSTR *pbstrName);", "AddressEntry_get_Address_Proxy": "HRESULT WINAPI AddressEntry_get_Address_Proxy(AddressEntry *This,BSTR *varAddress);", "AddressEntry_get_Type_Proxy": "HRESULT WINAPI AddressEntry_get_Type_Proxy(AddressEntry *This,BSTR *varType);", "D3DXLoadMeshHierarchyFromXA": "HRESULT WINAPI D3DXLoadMeshHierarchyFromXA(const char *filename, DWORD flags, struct IDirect3DDevice9 *device,", "D3DXLoadMeshHierarchyFromXW": "HRESULT WINAPI D3DXLoadMeshHierarchyFromXW(const WCHAR *filename, DWORD flags, struct IDirect3DDevice9 *device,", "D3DXLoadMeshHierarchyFromXInMemory": "HRESULT WINAPI D3DXLoadMeshHierarchyFromXInMemory(const void *data, DWORD data_size, DWORD flags,", "D3DXSaveMeshHierarchyToFileA": "HRESULT WINAPI D3DXSaveMeshHierarchyToFileA(const char *filename, DWORD format,", "D3DXSaveMeshHierarchyToFileW": "HRESULT WINAPI D3DXSaveMeshHierarchyToFileW(const WCHAR *filename, DWORD format,", "D3DXFrameDestroy": "HRESULT WINAPI D3DXFrameDestroy(D3DXFRAME *frame_root, ID3DXAllocateHierarchy *alloc);", "D3DXFrameAppendChild": "HRESULT WINAPI D3DXFrameAppendChild(D3DXFRAME *parent, const D3DXFRAME *child);", "D3DXFrameFind": "D3DXFRAME * WINAPI D3DXFrameFind(const D3DXFRAME *root, const char *name);", "D3DXFrameRegisterNamedMatrices": "HRESULT WINAPI D3DXFrameRegisterNamedMatrices(D3DXFRAME *frame_root, ID3DXAnimationController *animation_controller);", "D3DXFrameNumNamedMatrices": "UINT WINAPI D3DXFrameNumNamedMatrices(const D3DXFRAME *frame_root);", "D3DXFrameCalculateBoundingSphere": "HRESULT WINAPI D3DXFrameCalculateBoundingSphere(const D3DXFRAME *frame_root, D3DXVECTOR3 *center,", "D3DXCreateKeyframedAnimationSet": "HRESULT WINAPI D3DXCreateKeyframedAnimationSet(const char *name, double ticks_per_second,", "D3DXCreateCompressedAnimationSet": "HRESULT WINAPI D3DXCreateCompressedAnimationSet(const char *name, double ticks_per_second,", "D3DXCreateAnimationController": "HRESULT WINAPI D3DXCreateAnimationController(UINT max_animation_output_count, UINT max_animation_set_count,", "IProvideMultipleClassInfo_GetMultiTypeInfoCount_Proxy": "HRESULT WINAPI IProvideMultipleClassInfo_GetMultiTypeInfoCount_Proxy(IProvideMultipleClassInfo *This,ULONG *pcti);", "IProvideMultipleClassInfo_GetInfoOfIndex_Proxy": "HRESULT WINAPI IProvideMultipleClassInfo_GetInfoOfIndex_Proxy(IProvideMultipleClassInfo *This,ULONG iti,DWORD dwFlags,ITypeInfo **pptiCoClass,DWORD *pdwTIFlags,ULONG *pcdispidReserved,IID *piidPrimary,IID *piidSource);", "StopWatchMode": "DWORD WINAPI StopWatchMode(void);", "StopWatchFlush": "DWORD WINAPI StopWatchFlush(void);", "ITAgent_EnumerateAgentSessions_Proxy": "HRESULT WINAPI ITAgent_EnumerateAgentSessions_Proxy(ITAgent *This,IEnumAgentSession **ppEnumAgentSession);", "ITAgent_CreateSession_Proxy": "HRESULT WINAPI ITAgent_CreateSession_Proxy(ITAgent *This,ITACDGroup *pACDGroup,ITAddress *pAddress,ITAgentSession **ppAgentSession);", "ITAgent_CreateSessionWithPIN_Proxy": "HRESULT WINAPI ITAgent_CreateSessionWithPIN_Proxy(ITAgent *This,ITACDGroup *pACDGroup,ITAddress *pAddress,BSTR pPIN,ITAgentSession **ppAgentSession);", "ITAgent_get_ID_Proxy": "HRESULT WINAPI ITAgent_get_ID_Proxy(ITAgent *This,BSTR *ppID);", "ITAgent_get_User_Proxy": "HRESULT WINAPI ITAgent_get_User_Proxy(ITAgent *This,BSTR *ppUser);", "ITAgent_put_State_Proxy": "HRESULT WINAPI ITAgent_put_State_Proxy(ITAgent *This,AGENT_STATE AgentState);", "ITAgent_get_State_Proxy": "HRESULT WINAPI ITAgent_get_State_Proxy(ITAgent *This,AGENT_STATE *pAgentState);", "ITAgent_put_MeasurementPeriod_Proxy": "HRESULT WINAPI ITAgent_put_MeasurementPeriod_Proxy(ITAgent *This,__LONG32 lPeriod);", "ITAgent_get_MeasurementPeriod_Proxy": "HRESULT WINAPI ITAgent_get_MeasurementPeriod_Proxy(ITAgent *This,__LONG32 *plPeriod);", "ITAgent_get_OverallCallRate_Proxy": "HRESULT WINAPI ITAgent_get_OverallCallRate_Proxy(ITAgent *This,CURRENCY *pcyCallrate);", "ITAgent_get_NumberOfACDCalls_Proxy": "HRESULT WINAPI ITAgent_get_NumberOfACDCalls_Proxy(ITAgent *This,__LONG32 *plCalls);", "ITAgent_get_NumberOfIncomingCalls_Proxy": "HRESULT WINAPI ITAgent_get_NumberOfIncomingCalls_Proxy(ITAgent *This,__LONG32 *plCalls);", "ITAgent_get_NumberOfOutgoingCalls_Proxy": "HRESULT WINAPI ITAgent_get_NumberOfOutgoingCalls_Proxy(ITAgent *This,__LONG32 *plCalls);", "ITAgent_get_TotalACDTalkTime_Proxy": "HRESULT WINAPI ITAgent_get_TotalACDTalkTime_Proxy(ITAgent *This,__LONG32 *plTalkTime);", "ITAgent_get_TotalACDCallTime_Proxy": "HRESULT WINAPI ITAgent_get_TotalACDCallTime_Proxy(ITAgent *This,__LONG32 *plCallTime);", "ITAgent_get_TotalWrapUpTime_Proxy": "HRESULT WINAPI ITAgent_get_TotalWrapUpTime_Proxy(ITAgent *This,__LONG32 *plWrapUpTime);", "ITAgent_get_AgentSessions_Proxy": "HRESULT WINAPI ITAgent_get_AgentSessions_Proxy(ITAgent *This,VARIANT *pVariant);", "ITAgentSession_get_Agent_Proxy": "HRESULT WINAPI ITAgentSession_get_Agent_Proxy(ITAgentSession *This,ITAgent **ppAgent);", "ITAgentSession_get_Address_Proxy": "HRESULT WINAPI ITAgentSession_get_Address_Proxy(ITAgentSession *This,ITAddress **ppAddress);", "ITAgentSession_get_ACDGroup_Proxy": "HRESULT WINAPI ITAgentSession_get_ACDGroup_Proxy(ITAgentSession *This,ITACDGroup **ppACDGroup);", "ITAgentSession_put_State_Proxy": "HRESULT WINAPI ITAgentSession_put_State_Proxy(ITAgentSession *This,AGENT_SESSION_STATE SessionState);", "ITAgentSession_get_State_Proxy": "HRESULT WINAPI ITAgentSession_get_State_Proxy(ITAgentSession *This,AGENT_SESSION_STATE *pSessionState);", "ITAgentSession_get_SessionStartTime_Proxy": "HRESULT WINAPI ITAgentSession_get_SessionStartTime_Proxy(ITAgentSession *This,DATE *pdateSessionStart);", "ITAgentSession_get_SessionDuration_Proxy": "HRESULT WINAPI ITAgentSession_get_SessionDuration_Proxy(ITAgentSession *This,__LONG32 *plDuration);", "ITAgentSession_get_NumberOfCalls_Proxy": "HRESULT WINAPI ITAgentSession_get_NumberOfCalls_Proxy(ITAgentSession *This,__LONG32 *plCalls);", "ITAgentSession_get_TotalTalkTime_Proxy": "HRESULT WINAPI ITAgentSession_get_TotalTalkTime_Proxy(ITAgentSession *This,__LONG32 *plTalkTime);", "ITAgentSession_get_AverageTalkTime_Proxy": "HRESULT WINAPI ITAgentSession_get_AverageTalkTime_Proxy(ITAgentSession *This,__LONG32 *plTalkTime);", "ITAgentSession_get_TotalCallTime_Proxy": "HRESULT WINAPI ITAgentSession_get_TotalCallTime_Proxy(ITAgentSession *This,__LONG32 *plCallTime);", "ITAgentSession_get_AverageCallTime_Proxy": "HRESULT WINAPI ITAgentSession_get_AverageCallTime_Proxy(ITAgentSession *This,__LONG32 *plCallTime);", "ITAgentSession_get_TotalWrapUpTime_Proxy": "HRESULT WINAPI ITAgentSession_get_TotalWrapUpTime_Proxy(ITAgentSession *This,__LONG32 *plWrapUpTime);", "ITAgentSession_get_AverageWrapUpTime_Proxy": "HRESULT WINAPI ITAgentSession_get_AverageWrapUpTime_Proxy(ITAgentSession *This,__LONG32 *plWrapUpTime);", "ITAgentSession_get_ACDCallRate_Proxy": "HRESULT WINAPI ITAgentSession_get_ACDCallRate_Proxy(ITAgentSession *This,CURRENCY *pcyCallrate);", "ITAgentSession_get_LongestTimeToAnswer_Proxy": "HRESULT WINAPI ITAgentSession_get_LongestTimeToAnswer_Proxy(ITAgentSession *This,__LONG32 *plAnswerTime);", "ITAgentSession_get_AverageTimeToAnswer_Proxy": "HRESULT WINAPI ITAgentSession_get_AverageTimeToAnswer_Proxy(ITAgentSession *This,__LONG32 *plAnswerTime);", "ITACDGroup_get_Name_Proxy": "HRESULT WINAPI ITACDGroup_get_Name_Proxy(ITACDGroup *This,BSTR *ppName);", "ITACDGroup_EnumerateQueues_Proxy": "HRESULT WINAPI ITACDGroup_EnumerateQueues_Proxy(ITACDGroup *This,IEnumQueue **ppEnumQueue);", "ITACDGroup_get_Queues_Proxy": "HRESULT WINAPI ITACDGroup_get_Queues_Proxy(ITACDGroup *This,VARIANT *pVariant);", "ITQueue_put_MeasurementPeriod_Proxy": "HRESULT WINAPI ITQueue_put_MeasurementPeriod_Proxy(ITQueue *This,__LONG32 lPeriod);", "ITQueue_get_MeasurementPeriod_Proxy": "HRESULT WINAPI ITQueue_get_MeasurementPeriod_Proxy(ITQueue *This,__LONG32 *plPeriod);", "ITQueue_get_TotalCallsQueued_Proxy": "HRESULT WINAPI ITQueue_get_TotalCallsQueued_Proxy(ITQueue *This,__LONG32 *plCalls);", "ITQueue_get_CurrentCallsQueued_Proxy": "HRESULT WINAPI ITQueue_get_CurrentCallsQueued_Proxy(ITQueue *This,__LONG32 *plCalls);", "ITQueue_get_TotalCallsAbandoned_Proxy": "HRESULT WINAPI ITQueue_get_TotalCallsAbandoned_Proxy(ITQueue *This,__LONG32 *plCalls);", "ITQueue_get_TotalCallsFlowedIn_Proxy": "HRESULT WINAPI ITQueue_get_TotalCallsFlowedIn_Proxy(ITQueue *This,__LONG32 *plCalls);", "ITQueue_get_TotalCallsFlowedOut_Proxy": "HRESULT WINAPI ITQueue_get_TotalCallsFlowedOut_Proxy(ITQueue *This,__LONG32 *plCalls);", "ITQueue_get_LongestEverWaitTime_Proxy": "HRESULT WINAPI ITQueue_get_LongestEverWaitTime_Proxy(ITQueue *This,__LONG32 *plWaitTime);", "ITQueue_get_CurrentLongestWaitTime_Proxy": "HRESULT WINAPI ITQueue_get_CurrentLongestWaitTime_Proxy(ITQueue *This,__LONG32 *plWaitTime);", "ITQueue_get_AverageWaitTime_Proxy": "HRESULT WINAPI ITQueue_get_AverageWaitTime_Proxy(ITQueue *This,__LONG32 *plWaitTime);", "ITQueue_get_FinalDisposition_Proxy": "HRESULT WINAPI ITQueue_get_FinalDisposition_Proxy(ITQueue *This,__LONG32 *plCalls);", "ITQueue_get_Name_Proxy": "HRESULT WINAPI ITQueue_get_Name_Proxy(ITQueue *This,BSTR *ppName);", "ITAgentEvent_get_Agent_Proxy": "HRESULT WINAPI ITAgentEvent_get_Agent_Proxy(ITAgentEvent *This,ITAgent **ppAgent);", "ITAgentEvent_get_Event_Proxy": "HRESULT WINAPI ITAgentEvent_get_Event_Proxy(ITAgentEvent *This,AGENT_EVENT *pEvent);", "ITAgentSessionEvent_get_Session_Proxy": "HRESULT WINAPI ITAgentSessionEvent_get_Session_Proxy(ITAgentSessionEvent *This,ITAgentSession **ppSession);", "ITAgentSessionEvent_get_Event_Proxy": "HRESULT WINAPI ITAgentSessionEvent_get_Event_Proxy(ITAgentSessionEvent *This,AGENT_SESSION_EVENT *pEvent);", "ITACDGroupEvent_get_Group_Proxy": "HRESULT WINAPI ITACDGroupEvent_get_Group_Proxy(ITACDGroupEvent *This,ITACDGroup **ppGroup);", "ITACDGroupEvent_get_Event_Proxy": "HRESULT WINAPI ITACDGroupEvent_get_Event_Proxy(ITACDGroupEvent *This,ACDGROUP_EVENT *pEvent);", "ITQueueEvent_get_Queue_Proxy": "HRESULT WINAPI ITQueueEvent_get_Queue_Proxy(ITQueueEvent *This,ITQueue **ppQueue);", "ITQueueEvent_get_Event_Proxy": "HRESULT WINAPI ITQueueEvent_get_Event_Proxy(ITQueueEvent *This,ACDQUEUE_EVENT *pEvent);", "ITAgentHandlerEvent_get_AgentHandler_Proxy": "HRESULT WINAPI ITAgentHandlerEvent_get_AgentHandler_Proxy(ITAgentHandlerEvent *This,ITAgentHandler **ppAgentHandler);", "ITAgentHandlerEvent_get_Event_Proxy": "HRESULT WINAPI ITAgentHandlerEvent_get_Event_Proxy(ITAgentHandlerEvent *This,AGENTHANDLER_EVENT *pEvent);", "ITTAPICallCenter_EnumerateAgentHandlers_Proxy": "HRESULT WINAPI ITTAPICallCenter_EnumerateAgentHandlers_Proxy(ITTAPICallCenter *This,IEnumAgentHandler **ppEnumHandler);", "ITTAPICallCenter_get_AgentHandlers_Proxy": "HRESULT WINAPI ITTAPICallCenter_get_AgentHandlers_Proxy(ITTAPICallCenter *This,VARIANT *pVariant);", "ITAgentHandler_get_Name_Proxy": "HRESULT WINAPI ITAgentHandler_get_Name_Proxy(ITAgentHandler *This,BSTR *ppName);", "ITAgentHandler_CreateAgent_Proxy": "HRESULT WINAPI ITAgentHandler_CreateAgent_Proxy(ITAgentHandler *This,ITAgent **ppAgent);", "ITAgentHandler_CreateAgentWithID_Proxy": "HRESULT WINAPI ITAgentHandler_CreateAgentWithID_Proxy(ITAgentHandler *This,BSTR pID,BSTR pPIN,ITAgent **ppAgent);", "ITAgentHandler_EnumerateACDGroups_Proxy": "HRESULT WINAPI ITAgentHandler_EnumerateACDGroups_Proxy(ITAgentHandler *This,IEnumACDGroup **ppEnumACDGroup);", "ITAgentHandler_EnumerateUsableAddresses_Proxy": "HRESULT WINAPI ITAgentHandler_EnumerateUsableAddresses_Proxy(ITAgentHandler *This,IEnumAddress **ppEnumAddress);", "ITAgentHandler_get_ACDGroups_Proxy": "HRESULT WINAPI ITAgentHandler_get_ACDGroups_Proxy(ITAgentHandler *This,VARIANT *pVariant);", "ITAgentHandler_get_UsableAddresses_Proxy": "HRESULT WINAPI ITAgentHandler_get_UsableAddresses_Proxy(ITAgentHandler *This,VARIANT *pVariant);", "IEnumAgent_Next_Proxy": "HRESULT WINAPI IEnumAgent_Next_Proxy(IEnumAgent *This,ULONG celt,ITAgent **ppElements,ULONG *pceltFetched);", "IEnumAgent_Reset_Proxy": "HRESULT WINAPI IEnumAgent_Reset_Proxy(IEnumAgent *This);", "IEnumAgent_Skip_Proxy": "HRESULT WINAPI IEnumAgent_Skip_Proxy(IEnumAgent *This,ULONG celt);", "IEnumAgent_Clone_Proxy": "HRESULT WINAPI IEnumAgent_Clone_Proxy(IEnumAgent *This,IEnumAgent **ppEnum);", "IEnumAgentSession_Next_Proxy": "HRESULT WINAPI IEnumAgentSession_Next_Proxy(IEnumAgentSession *This,ULONG celt,ITAgentSession **ppElements,ULONG *pceltFetched);", "IEnumAgentSession_Reset_Proxy": "HRESULT WINAPI IEnumAgentSession_Reset_Proxy(IEnumAgentSession *This);", "IEnumAgentSession_Skip_Proxy": "HRESULT WINAPI IEnumAgentSession_Skip_Proxy(IEnumAgentSession *This,ULONG celt);", "IEnumAgentSession_Clone_Proxy": "HRESULT WINAPI IEnumAgentSession_Clone_Proxy(IEnumAgentSession *This,IEnumAgentSession **ppEnum);", "IEnumQueue_Next_Proxy": "HRESULT WINAPI IEnumQueue_Next_Proxy(IEnumQueue *This,ULONG celt,ITQueue **ppElements,ULONG *pceltFetched);", "IEnumQueue_Reset_Proxy": "HRESULT WINAPI IEnumQueue_Reset_Proxy(IEnumQueue *This);", "IEnumQueue_Skip_Proxy": "HRESULT WINAPI IEnumQueue_Skip_Proxy(IEnumQueue *This,ULONG celt);", "IEnumQueue_Clone_Proxy": "HRESULT WINAPI IEnumQueue_Clone_Proxy(IEnumQueue *This,IEnumQueue **ppEnum);", "IEnumACDGroup_Next_Proxy": "HRESULT WINAPI IEnumACDGroup_Next_Proxy(IEnumACDGroup *This,ULONG celt,ITACDGroup **ppElements,ULONG *pceltFetched);", "IEnumACDGroup_Reset_Proxy": "HRESULT WINAPI IEnumACDGroup_Reset_Proxy(IEnumACDGroup *This);", "IEnumACDGroup_Skip_Proxy": "HRESULT WINAPI IEnumACDGroup_Skip_Proxy(IEnumACDGroup *This,ULONG celt);", "IEnumACDGroup_Clone_Proxy": "HRESULT WINAPI IEnumACDGroup_Clone_Proxy(IEnumACDGroup *This,IEnumACDGroup **ppEnum);", "IEnumAgentHandler_Next_Proxy": "HRESULT WINAPI IEnumAgentHandler_Next_Proxy(IEnumAgentHandler *This,ULONG celt,ITAgentHandler **ppElements,ULONG *pceltFetched);", "IEnumAgentHandler_Reset_Proxy": "HRESULT WINAPI IEnumAgentHandler_Reset_Proxy(IEnumAgentHandler *This);", "IEnumAgentHandler_Skip_Proxy": "HRESULT WINAPI IEnumAgentHandler_Skip_Proxy(IEnumAgentHandler *This,ULONG celt);", "IEnumAgentHandler_Clone_Proxy": "HRESULT WINAPI IEnumAgentHandler_Clone_Proxy(IEnumAgentHandler *This,IEnumAgentHandler **ppEnum);", "IMSMQQuery_LookupQueue_Proxy": "HRESULT WINAPI IMSMQQuery_LookupQueue_Proxy(IMSMQQuery *This,VARIANT *QueueGuid,VARIANT *ServiceTypeGuid,VARIANT *Label,VARIANT *CreateTime,VARIANT *ModifyTime,VARIANT *RelServiceType,VARIANT *RelLabel,VARIANT *RelCreateTime,VARIANT *RelModifyTime,IMSMQQueueInfos **ppqinfos);", "IMSMQQueueInfo_get_QueueGuid_Proxy": "HRESULT WINAPI IMSMQQueueInfo_get_QueueGuid_Proxy(IMSMQQueueInfo *This,BSTR *pbstrGuidQueue);", "IMSMQQueueInfo_get_ServiceTypeGuid_Proxy": "HRESULT WINAPI IMSMQQueueInfo_get_ServiceTypeGuid_Proxy(IMSMQQueueInfo *This,BSTR *pbstrGuidServiceType);", "IMSMQQueueInfo_put_ServiceTypeGuid_Proxy": "HRESULT WINAPI IMSMQQueueInfo_put_ServiceTypeGuid_Proxy(IMSMQQueueInfo *This,BSTR bstrGuidServiceType);", "IMSMQQueueInfo_get_Label_Proxy": "HRESULT WINAPI IMSMQQueueInfo_get_Label_Proxy(IMSMQQueueInfo *This,BSTR *pbstrLabel);", "IMSMQQueueInfo_put_Label_Proxy": "HRESULT WINAPI IMSMQQueueInfo_put_Label_Proxy(IMSMQQueueInfo *This,BSTR bstrLabel);", "IMSMQQueueInfo_get_PathName_Proxy": "HRESULT WINAPI IMSMQQueueInfo_get_PathName_Proxy(IMSMQQueueInfo *This,BSTR *pbstrPathName);", "IMSMQQueueInfo_put_PathName_Proxy": "HRESULT WINAPI IMSMQQueueInfo_put_PathName_Proxy(IMSMQQueueInfo *This,BSTR bstrPathName);", "IMSMQQueueInfo_get_FormatName_Proxy": "HRESULT WINAPI IMSMQQueueInfo_get_FormatName_Proxy(IMSMQQueueInfo *This,BSTR *pbstrFormatName);", "IMSMQQueueInfo_put_FormatName_Proxy": "HRESULT WINAPI IMSMQQueueInfo_put_FormatName_Proxy(IMSMQQueueInfo *This,BSTR bstrFormatName);", "IMSMQQueueInfo_get_IsTransactional_Proxy": "HRESULT WINAPI IMSMQQueueInfo_get_IsTransactional_Proxy(IMSMQQueueInfo *This,Boolean *pisTransactional);", "IMSMQQueueInfo_get_PrivLevel_Proxy": "HRESULT WINAPI IMSMQQueueInfo_get_PrivLevel_Proxy(IMSMQQueueInfo *This,__LONG32 *plPrivLevel);", "IMSMQQueueInfo_put_PrivLevel_Proxy": "HRESULT WINAPI IMSMQQueueInfo_put_PrivLevel_Proxy(IMSMQQueueInfo *This,__LONG32 lPrivLevel);", "IMSMQQueueInfo_get_Journal_Proxy": "HRESULT WINAPI IMSMQQueueInfo_get_Journal_Proxy(IMSMQQueueInfo *This,__LONG32 *plJournal);", "IMSMQQueueInfo_put_Journal_Proxy": "HRESULT WINAPI IMSMQQueueInfo_put_Journal_Proxy(IMSMQQueueInfo *This,__LONG32 lJournal);", "IMSMQQueueInfo_get_Quota_Proxy": "HRESULT WINAPI IMSMQQueueInfo_get_Quota_Proxy(IMSMQQueueInfo *This,__LONG32 *plQuota);", "IMSMQQueueInfo_put_Quota_Proxy": "HRESULT WINAPI IMSMQQueueInfo_put_Quota_Proxy(IMSMQQueueInfo *This,__LONG32 lQuota);", "IMSMQQueueInfo_get_BasePriority_Proxy": "HRESULT WINAPI IMSMQQueueInfo_get_BasePriority_Proxy(IMSMQQueueInfo *This,__LONG32 *plBasePriority);", "IMSMQQueueInfo_put_BasePriority_Proxy": "HRESULT WINAPI IMSMQQueueInfo_put_BasePriority_Proxy(IMSMQQueueInfo *This,__LONG32 lBasePriority);", "IMSMQQueueInfo_get_CreateTime_Proxy": "HRESULT WINAPI IMSMQQueueInfo_get_CreateTime_Proxy(IMSMQQueueInfo *This,VARIANT *pvarCreateTime);", "IMSMQQueueInfo_get_ModifyTime_Proxy": "HRESULT WINAPI IMSMQQueueInfo_get_ModifyTime_Proxy(IMSMQQueueInfo *This,VARIANT *pvarModifyTime);", "IMSMQQueueInfo_get_Authenticate_Proxy": "HRESULT WINAPI IMSMQQueueInfo_get_Authenticate_Proxy(IMSMQQueueInfo *This,__LONG32 *plAuthenticate);", "IMSMQQueueInfo_put_Authenticate_Proxy": "HRESULT WINAPI IMSMQQueueInfo_put_Authenticate_Proxy(IMSMQQueueInfo *This,__LONG32 lAuthenticate);", "IMSMQQueueInfo_get_JournalQuota_Proxy": "HRESULT WINAPI IMSMQQueueInfo_get_JournalQuota_Proxy(IMSMQQueueInfo *This,__LONG32 *plJournalQuota);", "IMSMQQueueInfo_put_JournalQuota_Proxy": "HRESULT WINAPI IMSMQQueueInfo_put_JournalQuota_Proxy(IMSMQQueueInfo *This,__LONG32 lJournalQuota);", "IMSMQQueueInfo_get_IsWorldReadable_Proxy": "HRESULT WINAPI IMSMQQueueInfo_get_IsWorldReadable_Proxy(IMSMQQueueInfo *This,Boolean *pisWorldReadable);", "IMSMQQueueInfo_Create_Proxy": "HRESULT WINAPI IMSMQQueueInfo_Create_Proxy(IMSMQQueueInfo *This,VARIANT *IsTransactional,VARIANT *IsWorldReadable);", "IMSMQQueueInfo_Delete_Proxy": "HRESULT WINAPI IMSMQQueueInfo_Delete_Proxy(IMSMQQueueInfo *This);", "IMSMQQueueInfo_Open_Proxy": "HRESULT WINAPI IMSMQQueueInfo_Open_Proxy(IMSMQQueueInfo *This,__LONG32 Access,__LONG32 ShareMode,IMSMQQueue **ppq);", "IMSMQQueueInfo_Refresh_Proxy": "HRESULT WINAPI IMSMQQueueInfo_Refresh_Proxy(IMSMQQueueInfo *This);", "IMSMQQueueInfo_Update_Proxy": "HRESULT WINAPI IMSMQQueueInfo_Update_Proxy(IMSMQQueueInfo *This);", "IMSMQQueueInfo2_get_QueueGuid_Proxy": "HRESULT WINAPI IMSMQQueueInfo2_get_QueueGuid_Proxy(IMSMQQueueInfo2 *This,BSTR *pbstrGuidQueue);", "IMSMQQueueInfo2_get_ServiceTypeGuid_Proxy": "HRESULT WINAPI IMSMQQueueInfo2_get_ServiceTypeGuid_Proxy(IMSMQQueueInfo2 *This,BSTR *pbstrGuidServiceType);", "IMSMQQueueInfo2_put_ServiceTypeGuid_Proxy": "HRESULT WINAPI IMSMQQueueInfo2_put_ServiceTypeGuid_Proxy(IMSMQQueueInfo2 *This,BSTR bstrGuidServiceType);", "IMSMQQueueInfo2_get_Label_Proxy": "HRESULT WINAPI IMSMQQueueInfo2_get_Label_Proxy(IMSMQQueueInfo2 *This,BSTR *pbstrLabel);", "IMSMQQueueInfo2_put_Label_Proxy": "HRESULT WINAPI IMSMQQueueInfo2_put_Label_Proxy(IMSMQQueueInfo2 *This,BSTR bstrLabel);", "IMSMQQueueInfo2_get_PathName_Proxy": "HRESULT WINAPI IMSMQQueueInfo2_get_PathName_Proxy(IMSMQQueueInfo2 *This,BSTR *pbstrPathName);", "IMSMQQueueInfo2_put_PathName_Proxy": "HRESULT WINAPI IMSMQQueueInfo2_put_PathName_Proxy(IMSMQQueueInfo2 *This,BSTR bstrPathName);", "IMSMQQueueInfo2_get_FormatName_Proxy": "HRESULT WINAPI IMSMQQueueInfo2_get_FormatName_Proxy(IMSMQQueueInfo2 *This,BSTR *pbstrFormatName);", "IMSMQQueueInfo2_put_FormatName_Proxy": "HRESULT WINAPI IMSMQQueueInfo2_put_FormatName_Proxy(IMSMQQueueInfo2 *This,BSTR bstrFormatName);", "IMSMQQueueInfo2_get_IsTransactional_Proxy": "HRESULT WINAPI IMSMQQueueInfo2_get_IsTransactional_Proxy(IMSMQQueueInfo2 *This,Boolean *pisTransactional);", "IMSMQQueueInfo2_get_PrivLevel_Proxy": "HRESULT WINAPI IMSMQQueueInfo2_get_PrivLevel_Proxy(IMSMQQueueInfo2 *This,__LONG32 *plPrivLevel);", "IMSMQQueueInfo2_put_PrivLevel_Proxy": "HRESULT WINAPI IMSMQQueueInfo2_put_PrivLevel_Proxy(IMSMQQueueInfo2 *This,__LONG32 lPrivLevel);", "IMSMQQueueInfo2_get_Journal_Proxy": "HRESULT WINAPI IMSMQQueueInfo2_get_Journal_Proxy(IMSMQQueueInfo2 *This,__LONG32 *plJournal);", "IMSMQQueueInfo2_put_Journal_Proxy": "HRESULT WINAPI IMSMQQueueInfo2_put_Journal_Proxy(IMSMQQueueInfo2 *This,__LONG32 lJournal);", "IMSMQQueueInfo2_get_Quota_Proxy": "HRESULT WINAPI IMSMQQueueInfo2_get_Quota_Proxy(IMSMQQueueInfo2 *This,__LONG32 *plQuota);", "IMSMQQueueInfo2_put_Quota_Proxy": "HRESULT WINAPI IMSMQQueueInfo2_put_Quota_Proxy(IMSMQQueueInfo2 *This,__LONG32 lQuota);", "IMSMQQueueInfo2_get_BasePriority_Proxy": "HRESULT WINAPI IMSMQQueueInfo2_get_BasePriority_Proxy(IMSMQQueueInfo2 *This,__LONG32 *plBasePriority);", "IMSMQQueueInfo2_put_BasePriority_Proxy": "HRESULT WINAPI IMSMQQueueInfo2_put_BasePriority_Proxy(IMSMQQueueInfo2 *This,__LONG32 lBasePriority);", "IMSMQQueueInfo2_get_CreateTime_Proxy": "HRESULT WINAPI IMSMQQueueInfo2_get_CreateTime_Proxy(IMSMQQueueInfo2 *This,VARIANT *pvarCreateTime);", "IMSMQQueueInfo2_get_ModifyTime_Proxy": "HRESULT WINAPI IMSMQQueueInfo2_get_ModifyTime_Proxy(IMSMQQueueInfo2 *This,VARIANT *pvarModifyTime);", "IMSMQQueueInfo2_get_Authenticate_Proxy": "HRESULT WINAPI IMSMQQueueInfo2_get_Authenticate_Proxy(IMSMQQueueInfo2 *This,__LONG32 *plAuthenticate);", "IMSMQQueueInfo2_put_Authenticate_Proxy": "HRESULT WINAPI IMSMQQueueInfo2_put_Authenticate_Proxy(IMSMQQueueInfo2 *This,__LONG32 lAuthenticate);", "IMSMQQueueInfo2_get_JournalQuota_Proxy": "HRESULT WINAPI IMSMQQueueInfo2_get_JournalQuota_Proxy(IMSMQQueueInfo2 *This,__LONG32 *plJournalQuota);", "IMSMQQueueInfo2_put_JournalQuota_Proxy": "HRESULT WINAPI IMSMQQueueInfo2_put_JournalQuota_Proxy(IMSMQQueueInfo2 *This,__LONG32 lJournalQuota);", "IMSMQQueueInfo2_get_IsWorldReadable_Proxy": "HRESULT WINAPI IMSMQQueueInfo2_get_IsWorldReadable_Proxy(IMSMQQueueInfo2 *This,Boolean *pisWorldReadable);", "IMSMQQueueInfo2_Create_Proxy": "HRESULT WINAPI IMSMQQueueInfo2_Create_Proxy(IMSMQQueueInfo2 *This,VARIANT *IsTransactional,VARIANT *IsWorldReadable);", "IMSMQQueueInfo2_Delete_Proxy": "HRESULT WINAPI IMSMQQueueInfo2_Delete_Proxy(IMSMQQueueInfo2 *This);", "IMSMQQueueInfo2_Open_Proxy": "HRESULT WINAPI IMSMQQueueInfo2_Open_Proxy(IMSMQQueueInfo2 *This,__LONG32 Access,__LONG32 ShareMode,IMSMQQueue2 **ppq);", "IMSMQQueueInfo2_Refresh_Proxy": "HRESULT WINAPI IMSMQQueueInfo2_Refresh_Proxy(IMSMQQueueInfo2 *This);", "IMSMQQueueInfo2_Update_Proxy": "HRESULT WINAPI IMSMQQueueInfo2_Update_Proxy(IMSMQQueueInfo2 *This);", "IMSMQQueueInfo2_get_PathNameDNS_Proxy": "HRESULT WINAPI IMSMQQueueInfo2_get_PathNameDNS_Proxy(IMSMQQueueInfo2 *This,BSTR *pbstrPathNameDNS);", "IMSMQQueueInfo2_get_Properties_Proxy": "HRESULT WINAPI IMSMQQueueInfo2_get_Properties_Proxy(IMSMQQueueInfo2 *This,IDispatch **ppcolProperties);", "IMSMQQueueInfo2_get_Security_Proxy": "HRESULT WINAPI IMSMQQueueInfo2_get_Security_Proxy(IMSMQQueueInfo2 *This,VARIANT *pvarSecurity);", "IMSMQQueueInfo2_put_Security_Proxy": "HRESULT WINAPI IMSMQQueueInfo2_put_Security_Proxy(IMSMQQueueInfo2 *This,VARIANT varSecurity);", "IMSMQQueueInfo3_get_QueueGuid_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_get_QueueGuid_Proxy(IMSMQQueueInfo3 *This,BSTR *pbstrGuidQueue);", "IMSMQQueueInfo3_get_ServiceTypeGuid_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_get_ServiceTypeGuid_Proxy(IMSMQQueueInfo3 *This,BSTR *pbstrGuidServiceType);", "IMSMQQueueInfo3_put_ServiceTypeGuid_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_put_ServiceTypeGuid_Proxy(IMSMQQueueInfo3 *This,BSTR bstrGuidServiceType);", "IMSMQQueueInfo3_get_Label_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_get_Label_Proxy(IMSMQQueueInfo3 *This,BSTR *pbstrLabel);", "IMSMQQueueInfo3_put_Label_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_put_Label_Proxy(IMSMQQueueInfo3 *This,BSTR bstrLabel);", "IMSMQQueueInfo3_get_PathName_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_get_PathName_Proxy(IMSMQQueueInfo3 *This,BSTR *pbstrPathName);", "IMSMQQueueInfo3_put_PathName_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_put_PathName_Proxy(IMSMQQueueInfo3 *This,BSTR bstrPathName);", "IMSMQQueueInfo3_get_FormatName_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_get_FormatName_Proxy(IMSMQQueueInfo3 *This,BSTR *pbstrFormatName);", "IMSMQQueueInfo3_put_FormatName_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_put_FormatName_Proxy(IMSMQQueueInfo3 *This,BSTR bstrFormatName);", "IMSMQQueueInfo3_get_IsTransactional_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_get_IsTransactional_Proxy(IMSMQQueueInfo3 *This,Boolean *pisTransactional);", "IMSMQQueueInfo3_get_PrivLevel_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_get_PrivLevel_Proxy(IMSMQQueueInfo3 *This,__LONG32 *plPrivLevel);", "IMSMQQueueInfo3_put_PrivLevel_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_put_PrivLevel_Proxy(IMSMQQueueInfo3 *This,__LONG32 lPrivLevel);", "IMSMQQueueInfo3_get_Journal_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_get_Journal_Proxy(IMSMQQueueInfo3 *This,__LONG32 *plJournal);", "IMSMQQueueInfo3_put_Journal_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_put_Journal_Proxy(IMSMQQueueInfo3 *This,__LONG32 lJournal);", "IMSMQQueueInfo3_get_Quota_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_get_Quota_Proxy(IMSMQQueueInfo3 *This,__LONG32 *plQuota);", "IMSMQQueueInfo3_put_Quota_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_put_Quota_Proxy(IMSMQQueueInfo3 *This,__LONG32 lQuota);", "IMSMQQueueInfo3_get_BasePriority_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_get_BasePriority_Proxy(IMSMQQueueInfo3 *This,__LONG32 *plBasePriority);", "IMSMQQueueInfo3_put_BasePriority_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_put_BasePriority_Proxy(IMSMQQueueInfo3 *This,__LONG32 lBasePriority);", "IMSMQQueueInfo3_get_CreateTime_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_get_CreateTime_Proxy(IMSMQQueueInfo3 *This,VARIANT *pvarCreateTime);", "IMSMQQueueInfo3_get_ModifyTime_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_get_ModifyTime_Proxy(IMSMQQueueInfo3 *This,VARIANT *pvarModifyTime);", "IMSMQQueueInfo3_get_Authenticate_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_get_Authenticate_Proxy(IMSMQQueueInfo3 *This,__LONG32 *plAuthenticate);", "IMSMQQueueInfo3_put_Authenticate_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_put_Authenticate_Proxy(IMSMQQueueInfo3 *This,__LONG32 lAuthenticate);", "IMSMQQueueInfo3_get_JournalQuota_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_get_JournalQuota_Proxy(IMSMQQueueInfo3 *This,__LONG32 *plJournalQuota);", "IMSMQQueueInfo3_put_JournalQuota_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_put_JournalQuota_Proxy(IMSMQQueueInfo3 *This,__LONG32 lJournalQuota);", "IMSMQQueueInfo3_get_IsWorldReadable_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_get_IsWorldReadable_Proxy(IMSMQQueueInfo3 *This,Boolean *pisWorldReadable);", "IMSMQQueueInfo3_Create_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_Create_Proxy(IMSMQQueueInfo3 *This,VARIANT *IsTransactional,VARIANT *IsWorldReadable);", "IMSMQQueueInfo3_Delete_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_Delete_Proxy(IMSMQQueueInfo3 *This);", "IMSMQQueueInfo3_Open_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_Open_Proxy(IMSMQQueueInfo3 *This,__LONG32 Access,__LONG32 ShareMode,IMSMQQueue3 **ppq);", "IMSMQQueueInfo3_Refresh_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_Refresh_Proxy(IMSMQQueueInfo3 *This);", "IMSMQQueueInfo3_Update_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_Update_Proxy(IMSMQQueueInfo3 *This);", "IMSMQQueueInfo3_get_PathNameDNS_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_get_PathNameDNS_Proxy(IMSMQQueueInfo3 *This,BSTR *pbstrPathNameDNS);", "IMSMQQueueInfo3_get_Properties_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_get_Properties_Proxy(IMSMQQueueInfo3 *This,IDispatch **ppcolProperties);", "IMSMQQueueInfo3_get_Security_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_get_Security_Proxy(IMSMQQueueInfo3 *This,VARIANT *pvarSecurity);", "IMSMQQueueInfo3_put_Security_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_put_Security_Proxy(IMSMQQueueInfo3 *This,VARIANT varSecurity);", "IMSMQQueueInfo3_get_IsTransactional2_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_get_IsTransactional2_Proxy(IMSMQQueueInfo3 *This,VARIANT_BOOL *pisTransactional);", "IMSMQQueueInfo3_get_IsWorldReadable2_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_get_IsWorldReadable2_Proxy(IMSMQQueueInfo3 *This,VARIANT_BOOL *pisWorldReadable);", "IMSMQQueueInfo3_get_MulticastAddress_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_get_MulticastAddress_Proxy(IMSMQQueueInfo3 *This,BSTR *pbstrMulticastAddress);", "IMSMQQueueInfo3_put_MulticastAddress_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_put_MulticastAddress_Proxy(IMSMQQueueInfo3 *This,BSTR bstrMulticastAddress);", "IMSMQQueueInfo3_get_ADsPath_Proxy": "HRESULT WINAPI IMSMQQueueInfo3_get_ADsPath_Proxy(IMSMQQueueInfo3 *This,BSTR *pbstrADsPath);", "IMSMQQueue_get_Access_Proxy": "HRESULT WINAPI IMSMQQueue_get_Access_Proxy(IMSMQQueue *This,__LONG32 *plAccess);", "IMSMQQueue_get_ShareMode_Proxy": "HRESULT WINAPI IMSMQQueue_get_ShareMode_Proxy(IMSMQQueue *This,__LONG32 *plShareMode);", "IMSMQQueue_get_QueueInfo_Proxy": "HRESULT WINAPI IMSMQQueue_get_QueueInfo_Proxy(IMSMQQueue *This,IMSMQQueueInfo **ppqinfo);", "IMSMQQueue_get_Handle_Proxy": "HRESULT WINAPI IMSMQQueue_get_Handle_Proxy(IMSMQQueue *This,__LONG32 *plHandle);", "IMSMQQueue_get_IsOpen_Proxy": "HRESULT WINAPI IMSMQQueue_get_IsOpen_Proxy(IMSMQQueue *This,Boolean *pisOpen);", "IMSMQQueue_Close_Proxy": "HRESULT WINAPI IMSMQQueue_Close_Proxy(IMSMQQueue *This);", "IMSMQQueue_Receive_Proxy": "HRESULT WINAPI IMSMQQueue_Receive_Proxy(IMSMQQueue *This,VARIANT *Transaction,VARIANT *WantDestinationQueue,VARIANT *WantBody,VARIANT *ReceiveTimeout,IMSMQMessage **ppmsg);", "IMSMQQueue_Peek_Proxy": "HRESULT WINAPI IMSMQQueue_Peek_Proxy(IMSMQQueue *This,VARIANT *WantDestinationQueue,VARIANT *WantBody,VARIANT *ReceiveTimeout,IMSMQMessage **ppmsg);", "IMSMQQueue_EnableNotification_Proxy": "HRESULT WINAPI IMSMQQueue_EnableNotification_Proxy(IMSMQQueue *This,IMSMQEvent *Event,VARIANT *Cursor,VARIANT *ReceiveTimeout);", "IMSMQQueue_Reset_Proxy": "HRESULT WINAPI IMSMQQueue_Reset_Proxy(IMSMQQueue *This);", "IMSMQQueue_ReceiveCurrent_Proxy": "HRESULT WINAPI IMSMQQueue_ReceiveCurrent_Proxy(IMSMQQueue *This,VARIANT *Transaction,VARIANT *WantDestinationQueue,VARIANT *WantBody,VARIANT *ReceiveTimeout,IMSMQMessage **ppmsg);", "IMSMQQueue_PeekNext_Proxy": "HRESULT WINAPI IMSMQQueue_PeekNext_Proxy(IMSMQQueue *This,VARIANT *WantDestinationQueue,VARIANT *WantBody,VARIANT *ReceiveTimeout,IMSMQMessage **ppmsg);", "IMSMQQueue_PeekCurrent_Proxy": "HRESULT WINAPI IMSMQQueue_PeekCurrent_Proxy(IMSMQQueue *This,VARIANT *WantDestinationQueue,VARIANT *WantBody,VARIANT *ReceiveTimeout,IMSMQMessage **ppmsg);", "IMSMQQueue2_get_Access_Proxy": "HRESULT WINAPI IMSMQQueue2_get_Access_Proxy(IMSMQQueue2 *This,__LONG32 *plAccess);", "IMSMQQueue2_get_ShareMode_Proxy": "HRESULT WINAPI IMSMQQueue2_get_ShareMode_Proxy(IMSMQQueue2 *This,__LONG32 *plShareMode);", "IMSMQQueue2_get_QueueInfo_Proxy": "HRESULT WINAPI IMSMQQueue2_get_QueueInfo_Proxy(IMSMQQueue2 *This,IMSMQQueueInfo2 **ppqinfo);", "IMSMQQueue2_get_Handle_Proxy": "HRESULT WINAPI IMSMQQueue2_get_Handle_Proxy(IMSMQQueue2 *This,__LONG32 *plHandle);", "IMSMQQueue2_get_IsOpen_Proxy": "HRESULT WINAPI IMSMQQueue2_get_IsOpen_Proxy(IMSMQQueue2 *This,Boolean *pisOpen);", "IMSMQQueue2_Close_Proxy": "HRESULT WINAPI IMSMQQueue2_Close_Proxy(IMSMQQueue2 *This);", "IMSMQQueue2_Receive_v1_Proxy": "HRESULT WINAPI IMSMQQueue2_Receive_v1_Proxy(IMSMQQueue2 *This,VARIANT *Transaction,VARIANT *WantDestinationQueue,VARIANT *WantBody,VARIANT *ReceiveTimeout,IMSMQMessage **ppmsg);", "IMSMQQueue2_Peek_v1_Proxy": "HRESULT WINAPI IMSMQQueue2_Peek_v1_Proxy(IMSMQQueue2 *This,VARIANT *WantDestinationQueue,VARIANT *WantBody,VARIANT *ReceiveTimeout,IMSMQMessage **ppmsg);", "IMSMQQueue2_EnableNotification_Proxy": "HRESULT WINAPI IMSMQQueue2_EnableNotification_Proxy(IMSMQQueue2 *This,IMSMQEvent2 *Event,VARIANT *Cursor,VARIANT *ReceiveTimeout);", "IMSMQQueue2_Reset_Proxy": "HRESULT WINAPI IMSMQQueue2_Reset_Proxy(IMSMQQueue2 *This);", "IMSMQQueue2_ReceiveCurrent_v1_Proxy": "HRESULT WINAPI IMSMQQueue2_ReceiveCurrent_v1_Proxy(IMSMQQueue2 *This,VARIANT *Transaction,VARIANT *WantDestinationQueue,VARIANT *WantBody,VARIANT *ReceiveTimeout,IMSMQMessage **ppmsg);", "IMSMQQueue2_PeekNext_v1_Proxy": "HRESULT WINAPI IMSMQQueue2_PeekNext_v1_Proxy(IMSMQQueue2 *This,VARIANT *WantDestinationQueue,VARIANT *WantBody,VARIANT *ReceiveTimeout,IMSMQMessage **ppmsg);", "IMSMQQueue2_PeekCurrent_v1_Proxy": "HRESULT WINAPI IMSMQQueue2_PeekCurrent_v1_Proxy(IMSMQQueue2 *This,VARIANT *WantDestinationQueue,VARIANT *WantBody,VARIANT *ReceiveTimeout,IMSMQMessage **ppmsg);", "IMSMQQueue2_Receive_Proxy": "HRESULT WINAPI IMSMQQueue2_Receive_Proxy(IMSMQQueue2 *This,VARIANT *Transaction,VARIANT *WantDestinationQueue,VARIANT *WantBody,VARIANT *ReceiveTimeout,VARIANT *WantConnectorType,IMSMQMessage2 **ppmsg);", "IMSMQQueue2_Peek_Proxy": "HRESULT WINAPI IMSMQQueue2_Peek_Proxy(IMSMQQueue2 *This,VARIANT *WantDestinationQueue,VARIANT *WantBody,VARIANT *ReceiveTimeout,VARIANT *WantConnectorType,IMSMQMessage2 **ppmsg);", "IMSMQQueue2_ReceiveCurrent_Proxy": "HRESULT WINAPI IMSMQQueue2_ReceiveCurrent_Proxy(IMSMQQueue2 *This,VARIANT *Transaction,VARIANT *WantDestinationQueue,VARIANT *WantBody,VARIANT *ReceiveTimeout,VARIANT *WantConnectorType,IMSMQMessage2 **ppmsg);", "IMSMQQueue2_PeekNext_Proxy": "HRESULT WINAPI IMSMQQueue2_PeekNext_Proxy(IMSMQQueue2 *This,VARIANT *WantDestinationQueue,VARIANT *WantBody,VARIANT *ReceiveTimeout,VARIANT *WantConnectorType,IMSMQMessage2 **ppmsg);", "IMSMQQueue2_PeekCurrent_Proxy": "HRESULT WINAPI IMSMQQueue2_PeekCurrent_Proxy(IMSMQQueue2 *This,VARIANT *WantDestinationQueue,VARIANT *WantBody,VARIANT *ReceiveTimeout,VARIANT *WantConnectorType,IMSMQMessage2 **ppmsg);", "IMSMQQueue2_get_Properties_Proxy": "HRESULT WINAPI IMSMQQueue2_get_Properties_Proxy(IMSMQQueue2 *This,IDispatch **ppcolProperties);", "IMSMQMessage_get_Class_Proxy": "HRESULT WINAPI IMSMQMessage_get_Class_Proxy(IMSMQMessage *This,__LONG32 *plClass);", "IMSMQMessage_get_PrivLevel_Proxy": "HRESULT WINAPI IMSMQMessage_get_PrivLevel_Proxy(IMSMQMessage *This,__LONG32 *plPrivLevel);", "IMSMQMessage_put_PrivLevel_Proxy": "HRESULT WINAPI IMSMQMessage_put_PrivLevel_Proxy(IMSMQMessage *This,__LONG32 lPrivLevel);", "IMSMQMessage_get_AuthLevel_Proxy": "HRESULT WINAPI IMSMQMessage_get_AuthLevel_Proxy(IMSMQMessage *This,__LONG32 *plAuthLevel);", "IMSMQMessage_put_AuthLevel_Proxy": "HRESULT WINAPI IMSMQMessage_put_AuthLevel_Proxy(IMSMQMessage *This,__LONG32 lAuthLevel);", "IMSMQMessage_get_IsAuthenticated_Proxy": "HRESULT WINAPI IMSMQMessage_get_IsAuthenticated_Proxy(IMSMQMessage *This,Boolean *pisAuthenticated);", "IMSMQMessage_get_Delivery_Proxy": "HRESULT WINAPI IMSMQMessage_get_Delivery_Proxy(IMSMQMessage *This,__LONG32 *plDelivery);", "IMSMQMessage_put_Delivery_Proxy": "HRESULT WINAPI IMSMQMessage_put_Delivery_Proxy(IMSMQMessage *This,__LONG32 lDelivery);", "IMSMQMessage_get_Trace_Proxy": "HRESULT WINAPI IMSMQMessage_get_Trace_Proxy(IMSMQMessage *This,__LONG32 *plTrace);", "IMSMQMessage_put_Trace_Proxy": "HRESULT WINAPI IMSMQMessage_put_Trace_Proxy(IMSMQMessage *This,__LONG32 lTrace);", "IMSMQMessage_get_Priority_Proxy": "HRESULT WINAPI IMSMQMessage_get_Priority_Proxy(IMSMQMessage *This,__LONG32 *plPriority);", "IMSMQMessage_put_Priority_Proxy": "HRESULT WINAPI IMSMQMessage_put_Priority_Proxy(IMSMQMessage *This,__LONG32 lPriority);", "IMSMQMessage_get_Journal_Proxy": "HRESULT WINAPI IMSMQMessage_get_Journal_Proxy(IMSMQMessage *This,__LONG32 *plJournal);", "IMSMQMessage_put_Journal_Proxy": "HRESULT WINAPI IMSMQMessage_put_Journal_Proxy(IMSMQMessage *This,__LONG32 lJournal);", "IMSMQMessage_get_ResponseQueueInfo_Proxy": "HRESULT WINAPI IMSMQMessage_get_ResponseQueueInfo_Proxy(IMSMQMessage *This,IMSMQQueueInfo **ppqinfoResponse);", "IMSMQMessage_putref_ResponseQueueInfo_Proxy": "HRESULT WINAPI IMSMQMessage_putref_ResponseQueueInfo_Proxy(IMSMQMessage *This,IMSMQQueueInfo *pqinfoResponse);", "IMSMQMessage_get_AppSpecific_Proxy": "HRESULT WINAPI IMSMQMessage_get_AppSpecific_Proxy(IMSMQMessage *This,__LONG32 *plAppSpecific);", "IMSMQMessage_put_AppSpecific_Proxy": "HRESULT WINAPI IMSMQMessage_put_AppSpecific_Proxy(IMSMQMessage *This,__LONG32 lAppSpecific);", "IMSMQMessage_get_SourceMachineGuid_Proxy": "HRESULT WINAPI IMSMQMessage_get_SourceMachineGuid_Proxy(IMSMQMessage *This,BSTR *pbstrGuidSrcMachine);", "IMSMQMessage_get_BodyLength_Proxy": "HRESULT WINAPI IMSMQMessage_get_BodyLength_Proxy(IMSMQMessage *This,__LONG32 *pcbBody);", "IMSMQMessage_get_Body_Proxy": "HRESULT WINAPI IMSMQMessage_get_Body_Proxy(IMSMQMessage *This,VARIANT *pvarBody);", "IMSMQMessage_put_Body_Proxy": "HRESULT WINAPI IMSMQMessage_put_Body_Proxy(IMSMQMessage *This,VARIANT varBody);", "IMSMQMessage_get_AdminQueueInfo_Proxy": "HRESULT WINAPI IMSMQMessage_get_AdminQueueInfo_Proxy(IMSMQMessage *This,IMSMQQueueInfo **ppqinfoAdmin);", "IMSMQMessage_putref_AdminQueueInfo_Proxy": "HRESULT WINAPI IMSMQMessage_putref_AdminQueueInfo_Proxy(IMSMQMessage *This,IMSMQQueueInfo *pqinfoAdmin);", "IMSMQMessage_get_Id_Proxy": "HRESULT WINAPI IMSMQMessage_get_Id_Proxy(IMSMQMessage *This,VARIANT *pvarMsgId);", "IMSMQMessage_get_CorrelationId_Proxy": "HRESULT WINAPI IMSMQMessage_get_CorrelationId_Proxy(IMSMQMessage *This,VARIANT *pvarMsgId);", "IMSMQMessage_put_CorrelationId_Proxy": "HRESULT WINAPI IMSMQMessage_put_CorrelationId_Proxy(IMSMQMessage *This,VARIANT varMsgId);", "IMSMQMessage_get_Ack_Proxy": "HRESULT WINAPI IMSMQMessage_get_Ack_Proxy(IMSMQMessage *This,__LONG32 *plAck);", "IMSMQMessage_put_Ack_Proxy": "HRESULT WINAPI IMSMQMessage_put_Ack_Proxy(IMSMQMessage *This,__LONG32 lAck);", "IMSMQMessage_get_Label_Proxy": "HRESULT WINAPI IMSMQMessage_get_Label_Proxy(IMSMQMessage *This,BSTR *pbstrLabel);", "IMSMQMessage_put_Label_Proxy": "HRESULT WINAPI IMSMQMessage_put_Label_Proxy(IMSMQMessage *This,BSTR bstrLabel);", "IMSMQMessage_get_MaxTimeToReachQueue_Proxy": "HRESULT WINAPI IMSMQMessage_get_MaxTimeToReachQueue_Proxy(IMSMQMessage *This,__LONG32 *plMaxTimeToReachQueue);", "IMSMQMessage_put_MaxTimeToReachQueue_Proxy": "HRESULT WINAPI IMSMQMessage_put_MaxTimeToReachQueue_Proxy(IMSMQMessage *This,__LONG32 lMaxTimeToReachQueue);", "IMSMQMessage_get_MaxTimeToReceive_Proxy": "HRESULT WINAPI IMSMQMessage_get_MaxTimeToReceive_Proxy(IMSMQMessage *This,__LONG32 *plMaxTimeToReceive);", "IMSMQMessage_put_MaxTimeToReceive_Proxy": "HRESULT WINAPI IMSMQMessage_put_MaxTimeToReceive_Proxy(IMSMQMessage *This,__LONG32 lMaxTimeToReceive);", "IMSMQMessage_get_HashAlgorithm_Proxy": "HRESULT WINAPI IMSMQMessage_get_HashAlgorithm_Proxy(IMSMQMessage *This,__LONG32 *plHashAlg);", "IMSMQMessage_put_HashAlgorithm_Proxy": "HRESULT WINAPI IMSMQMessage_put_HashAlgorithm_Proxy(IMSMQMessage *This,__LONG32 lHashAlg);", "IMSMQMessage_get_EncryptAlgorithm_Proxy": "HRESULT WINAPI IMSMQMessage_get_EncryptAlgorithm_Proxy(IMSMQMessage *This,__LONG32 *plEncryptAlg);", "IMSMQMessage_put_EncryptAlgorithm_Proxy": "HRESULT WINAPI IMSMQMessage_put_EncryptAlgorithm_Proxy(IMSMQMessage *This,__LONG32 lEncryptAlg);", "IMSMQMessage_get_SentTime_Proxy": "HRESULT WINAPI IMSMQMessage_get_SentTime_Proxy(IMSMQMessage *This,VARIANT *pvarSentTime);", "IMSMQMessage_get_ArrivedTime_Proxy": "HRESULT WINAPI IMSMQMessage_get_ArrivedTime_Proxy(IMSMQMessage *This,VARIANT *plArrivedTime);", "IMSMQMessage_get_DestinationQueueInfo_Proxy": "HRESULT WINAPI IMSMQMessage_get_DestinationQueueInfo_Proxy(IMSMQMessage *This,IMSMQQueueInfo **ppqinfoDest);", "IMSMQMessage_get_SenderCertificate_Proxy": "HRESULT WINAPI IMSMQMessage_get_SenderCertificate_Proxy(IMSMQMessage *This,VARIANT *pvarSenderCert);", "IMSMQMessage_put_SenderCertificate_Proxy": "HRESULT WINAPI IMSMQMessage_put_SenderCertificate_Proxy(IMSMQMessage *This,VARIANT varSenderCert);", "IMSMQMessage_get_SenderId_Proxy": "HRESULT WINAPI IMSMQMessage_get_SenderId_Proxy(IMSMQMessage *This,VARIANT *pvarSenderId);", "IMSMQMessage_get_SenderIdType_Proxy": "HRESULT WINAPI IMSMQMessage_get_SenderIdType_Proxy(IMSMQMessage *This,__LONG32 *plSenderIdType);", "IMSMQMessage_put_SenderIdType_Proxy": "HRESULT WINAPI IMSMQMessage_put_SenderIdType_Proxy(IMSMQMessage *This,__LONG32 lSenderIdType);", "IMSMQMessage_Send_Proxy": "HRESULT WINAPI IMSMQMessage_Send_Proxy(IMSMQMessage *This,IMSMQQueue *DestinationQueue,VARIANT *Transaction);", "IMSMQMessage_AttachCurrentSecurityContext_Proxy": "HRESULT WINAPI IMSMQMessage_AttachCurrentSecurityContext_Proxy(IMSMQMessage *This);", "IMSMQQueueInfos_Reset_Proxy": "HRESULT WINAPI IMSMQQueueInfos_Reset_Proxy(IMSMQQueueInfos *This);", "IMSMQQueueInfos_Next_Proxy": "HRESULT WINAPI IMSMQQueueInfos_Next_Proxy(IMSMQQueueInfos *This,IMSMQQueueInfo **ppqinfoNext);", "IMSMQQueueInfos2_Reset_Proxy": "HRESULT WINAPI IMSMQQueueInfos2_Reset_Proxy(IMSMQQueueInfos2 *This);", "IMSMQQueueInfos2_Next_Proxy": "HRESULT WINAPI IMSMQQueueInfos2_Next_Proxy(IMSMQQueueInfos2 *This,IMSMQQueueInfo2 **ppqinfoNext);", "IMSMQQueueInfos2_get_Properties_Proxy": "HRESULT WINAPI IMSMQQueueInfos2_get_Properties_Proxy(IMSMQQueueInfos2 *This,IDispatch **ppcolProperties);", "IMSMQQueueInfos3_Reset_Proxy": "HRESULT WINAPI IMSMQQueueInfos3_Reset_Proxy(IMSMQQueueInfos3 *This);", "IMSMQQueueInfos3_Next_Proxy": "HRESULT WINAPI IMSMQQueueInfos3_Next_Proxy(IMSMQQueueInfos3 *This,IMSMQQueueInfo3 **ppqinfoNext);", "IMSMQQueueInfos3_get_Properties_Proxy": "HRESULT WINAPI IMSMQQueueInfos3_get_Properties_Proxy(IMSMQQueueInfos3 *This,IDispatch **ppcolProperties);", "IMSMQEvent2_get_Properties_Proxy": "HRESULT WINAPI IMSMQEvent2_get_Properties_Proxy(IMSMQEvent2 *This,IDispatch **ppcolProperties);", "IMSMQTransaction_get_Transaction_Proxy": "HRESULT WINAPI IMSMQTransaction_get_Transaction_Proxy(IMSMQTransaction *This,__LONG32 *plTransaction);", "IMSMQTransaction_Commit_Proxy": "HRESULT WINAPI IMSMQTransaction_Commit_Proxy(IMSMQTransaction *This,VARIANT *fRetaining,VARIANT *grfTC,VARIANT *grfRM);", "IMSMQTransaction_Abort_Proxy": "HRESULT WINAPI IMSMQTransaction_Abort_Proxy(IMSMQTransaction *This,VARIANT *fRetaining,VARIANT *fAsync);", "IMSMQCoordinatedTransactionDispenser_BeginTransaction_Proxy": "HRESULT WINAPI IMSMQCoordinatedTransactionDispenser_BeginTransaction_Proxy(IMSMQCoordinatedTransactionDispenser *This,IMSMQTransaction **ptransaction);", "IMSMQTransactionDispenser_BeginTransaction_Proxy": "HRESULT WINAPI IMSMQTransactionDispenser_BeginTransaction_Proxy(IMSMQTransactionDispenser *This,IMSMQTransaction **ptransaction);", "IMSMQQuery2_LookupQueue_Proxy": "HRESULT WINAPI IMSMQQuery2_LookupQueue_Proxy(IMSMQQuery2 *This,VARIANT *QueueGuid,VARIANT *ServiceTypeGuid,VARIANT *Label,VARIANT *CreateTime,VARIANT *ModifyTime,VARIANT *RelServiceType,VARIANT *RelLabel,VARIANT *RelCreateTime,VARIANT *RelModifyTime,IMSMQQueueInfos2 **ppqinfos);", "IMSMQQuery2_get_Properties_Proxy": "HRESULT WINAPI IMSMQQuery2_get_Properties_Proxy(IMSMQQuery2 *This,IDispatch **ppcolProperties);", "IMSMQQuery3_LookupQueue_v2_Proxy": "HRESULT WINAPI IMSMQQuery3_LookupQueue_v2_Proxy(IMSMQQuery3 *This,VARIANT *QueueGuid,VARIANT *ServiceTypeGuid,VARIANT *Label,VARIANT *CreateTime,VARIANT *ModifyTime,VARIANT *RelServiceType,VARIANT *RelLabel,VARIANT *RelCreateTime,VARIANT *RelModifyTime,IMSMQQueueInfos3 **ppqinfos);", "IMSMQQuery3_get_Properties_Proxy": "HRESULT WINAPI IMSMQQuery3_get_Properties_Proxy(IMSMQQuery3 *This,IDispatch **ppcolProperties);", "IMSMQQuery3_LookupQueue_Proxy": "HRESULT WINAPI IMSMQQuery3_LookupQueue_Proxy(IMSMQQuery3 *This,VARIANT *QueueGuid,VARIANT *ServiceTypeGuid,VARIANT *Label,VARIANT *CreateTime,VARIANT *ModifyTime,VARIANT *RelServiceType,VARIANT *RelLabel,VARIANT *RelCreateTime,VARIANT *RelModifyTime,VARIANT *MulticastAddress,VARIANT *RelMulticastAddress,IMSMQQueueInfos3 **ppqinfos);", "IMSMQMessage2_get_Class_Proxy": "HRESULT WINAPI IMSMQMessage2_get_Class_Proxy(IMSMQMessage2 *This,__LONG32 *plClass);", "IMSMQMessage2_get_PrivLevel_Proxy": "HRESULT WINAPI IMSMQMessage2_get_PrivLevel_Proxy(IMSMQMessage2 *This,__LONG32 *plPrivLevel);", "IMSMQMessage2_put_PrivLevel_Proxy": "HRESULT WINAPI IMSMQMessage2_put_PrivLevel_Proxy(IMSMQMessage2 *This,__LONG32 lPrivLevel);", "IMSMQMessage2_get_AuthLevel_Proxy": "HRESULT WINAPI IMSMQMessage2_get_AuthLevel_Proxy(IMSMQMessage2 *This,__LONG32 *plAuthLevel);", "IMSMQMessage2_put_AuthLevel_Proxy": "HRESULT WINAPI IMSMQMessage2_put_AuthLevel_Proxy(IMSMQMessage2 *This,__LONG32 lAuthLevel);", "IMSMQMessage2_get_IsAuthenticated_Proxy": "HRESULT WINAPI IMSMQMessage2_get_IsAuthenticated_Proxy(IMSMQMessage2 *This,Boolean *pisAuthenticated);", "IMSMQMessage2_get_Delivery_Proxy": "HRESULT WINAPI IMSMQMessage2_get_Delivery_Proxy(IMSMQMessage2 *This,__LONG32 *plDelivery);", "IMSMQMessage2_put_Delivery_Proxy": "HRESULT WINAPI IMSMQMessage2_put_Delivery_Proxy(IMSMQMessage2 *This,__LONG32 lDelivery);", "IMSMQMessage2_get_Trace_Proxy": "HRESULT WINAPI IMSMQMessage2_get_Trace_Proxy(IMSMQMessage2 *This,__LONG32 *plTrace);", "IMSMQMessage2_put_Trace_Proxy": "HRESULT WINAPI IMSMQMessage2_put_Trace_Proxy(IMSMQMessage2 *This,__LONG32 lTrace);", "IMSMQMessage2_get_Priority_Proxy": "HRESULT WINAPI IMSMQMessage2_get_Priority_Proxy(IMSMQMessage2 *This,__LONG32 *plPriority);", "IMSMQMessage2_put_Priority_Proxy": "HRESULT WINAPI IMSMQMessage2_put_Priority_Proxy(IMSMQMessage2 *This,__LONG32 lPriority);", "IMSMQMessage2_get_Journal_Proxy": "HRESULT WINAPI IMSMQMessage2_get_Journal_Proxy(IMSMQMessage2 *This,__LONG32 *plJournal);", "IMSMQMessage2_put_Journal_Proxy": "HRESULT WINAPI IMSMQMessage2_put_Journal_Proxy(IMSMQMessage2 *This,__LONG32 lJournal);", "IMSMQMessage2_get_ResponseQueueInfo_v1_Proxy": "HRESULT WINAPI IMSMQMessage2_get_ResponseQueueInfo_v1_Proxy(IMSMQMessage2 *This,IMSMQQueueInfo **ppqinfoResponse);", "IMSMQMessage2_putref_ResponseQueueInfo_v1_Proxy": "HRESULT WINAPI IMSMQMessage2_putref_ResponseQueueInfo_v1_Proxy(IMSMQMessage2 *This,IMSMQQueueInfo *pqinfoResponse);", "IMSMQMessage2_get_AppSpecific_Proxy": "HRESULT WINAPI IMSMQMessage2_get_AppSpecific_Proxy(IMSMQMessage2 *This,__LONG32 *plAppSpecific);", "IMSMQMessage2_put_AppSpecific_Proxy": "HRESULT WINAPI IMSMQMessage2_put_AppSpecific_Proxy(IMSMQMessage2 *This,__LONG32 lAppSpecific);", "IMSMQMessage2_get_SourceMachineGuid_Proxy": "HRESULT WINAPI IMSMQMessage2_get_SourceMachineGuid_Proxy(IMSMQMessage2 *This,BSTR *pbstrGuidSrcMachine);", "IMSMQMessage2_get_BodyLength_Proxy": "HRESULT WINAPI IMSMQMessage2_get_BodyLength_Proxy(IMSMQMessage2 *This,__LONG32 *pcbBody);", "IMSMQMessage2_get_Body_Proxy": "HRESULT WINAPI IMSMQMessage2_get_Body_Proxy(IMSMQMessage2 *This,VARIANT *pvarBody);", "IMSMQMessage2_put_Body_Proxy": "HRESULT WINAPI IMSMQMessage2_put_Body_Proxy(IMSMQMessage2 *This,VARIANT varBody);", "IMSMQMessage2_get_AdminQueueInfo_v1_Proxy": "HRESULT WINAPI IMSMQMessage2_get_AdminQueueInfo_v1_Proxy(IMSMQMessage2 *This,IMSMQQueueInfo **ppqinfoAdmin);", "IMSMQMessage2_putref_AdminQueueInfo_v1_Proxy": "HRESULT WINAPI IMSMQMessage2_putref_AdminQueueInfo_v1_Proxy(IMSMQMessage2 *This,IMSMQQueueInfo *pqinfoAdmin);", "IMSMQMessage2_get_Id_Proxy": "HRESULT WINAPI IMSMQMessage2_get_Id_Proxy(IMSMQMessage2 *This,VARIANT *pvarMsgId);", "IMSMQMessage2_get_CorrelationId_Proxy": "HRESULT WINAPI IMSMQMessage2_get_CorrelationId_Proxy(IMSMQMessage2 *This,VARIANT *pvarMsgId);", "IMSMQMessage2_put_CorrelationId_Proxy": "HRESULT WINAPI IMSMQMessage2_put_CorrelationId_Proxy(IMSMQMessage2 *This,VARIANT varMsgId);", "IMSMQMessage2_get_Ack_Proxy": "HRESULT WINAPI IMSMQMessage2_get_Ack_Proxy(IMSMQMessage2 *This,__LONG32 *plAck);", "IMSMQMessage2_put_Ack_Proxy": "HRESULT WINAPI IMSMQMessage2_put_Ack_Proxy(IMSMQMessage2 *This,__LONG32 lAck);", "IMSMQMessage2_get_Label_Proxy": "HRESULT WINAPI IMSMQMessage2_get_Label_Proxy(IMSMQMessage2 *This,BSTR *pbstrLabel);", "IMSMQMessage2_put_Label_Proxy": "HRESULT WINAPI IMSMQMessage2_put_Label_Proxy(IMSMQMessage2 *This,BSTR bstrLabel);", "IMSMQMessage2_get_MaxTimeToReachQueue_Proxy": "HRESULT WINAPI IMSMQMessage2_get_MaxTimeToReachQueue_Proxy(IMSMQMessage2 *This,__LONG32 *plMaxTimeToReachQueue);", "IMSMQMessage2_put_MaxTimeToReachQueue_Proxy": "HRESULT WINAPI IMSMQMessage2_put_MaxTimeToReachQueue_Proxy(IMSMQMessage2 *This,__LONG32 lMaxTimeToReachQueue);", "IMSMQMessage2_get_MaxTimeToReceive_Proxy": "HRESULT WINAPI IMSMQMessage2_get_MaxTimeToReceive_Proxy(IMSMQMessage2 *This,__LONG32 *plMaxTimeToReceive);", "IMSMQMessage2_put_MaxTimeToReceive_Proxy": "HRESULT WINAPI IMSMQMessage2_put_MaxTimeToReceive_Proxy(IMSMQMessage2 *This,__LONG32 lMaxTimeToReceive);", "IMSMQMessage2_get_HashAlgorithm_Proxy": "HRESULT WINAPI IMSMQMessage2_get_HashAlgorithm_Proxy(IMSMQMessage2 *This,__LONG32 *plHashAlg);", "IMSMQMessage2_put_HashAlgorithm_Proxy": "HRESULT WINAPI IMSMQMessage2_put_HashAlgorithm_Proxy(IMSMQMessage2 *This,__LONG32 lHashAlg);", "IMSMQMessage2_get_EncryptAlgorithm_Proxy": "HRESULT WINAPI IMSMQMessage2_get_EncryptAlgorithm_Proxy(IMSMQMessage2 *This,__LONG32 *plEncryptAlg);", "IMSMQMessage2_put_EncryptAlgorithm_Proxy": "HRESULT WINAPI IMSMQMessage2_put_EncryptAlgorithm_Proxy(IMSMQMessage2 *This,__LONG32 lEncryptAlg);", "IMSMQMessage2_get_SentTime_Proxy": "HRESULT WINAPI IMSMQMessage2_get_SentTime_Proxy(IMSMQMessage2 *This,VARIANT *pvarSentTime);", "IMSMQMessage2_get_ArrivedTime_Proxy": "HRESULT WINAPI IMSMQMessage2_get_ArrivedTime_Proxy(IMSMQMessage2 *This,VARIANT *plArrivedTime);", "IMSMQMessage2_get_DestinationQueueInfo_Proxy": "HRESULT WINAPI IMSMQMessage2_get_DestinationQueueInfo_Proxy(IMSMQMessage2 *This,IMSMQQueueInfo2 **ppqinfoDest);", "IMSMQMessage2_get_SenderCertificate_Proxy": "HRESULT WINAPI IMSMQMessage2_get_SenderCertificate_Proxy(IMSMQMessage2 *This,VARIANT *pvarSenderCert);", "IMSMQMessage2_put_SenderCertificate_Proxy": "HRESULT WINAPI IMSMQMessage2_put_SenderCertificate_Proxy(IMSMQMessage2 *This,VARIANT varSenderCert);", "IMSMQMessage2_get_SenderId_Proxy": "HRESULT WINAPI IMSMQMessage2_get_SenderId_Proxy(IMSMQMessage2 *This,VARIANT *pvarSenderId);", "IMSMQMessage2_get_SenderIdType_Proxy": "HRESULT WINAPI IMSMQMessage2_get_SenderIdType_Proxy(IMSMQMessage2 *This,__LONG32 *plSenderIdType);", "IMSMQMessage2_put_SenderIdType_Proxy": "HRESULT WINAPI IMSMQMessage2_put_SenderIdType_Proxy(IMSMQMessage2 *This,__LONG32 lSenderIdType);", "IMSMQMessage2_Send_Proxy": "HRESULT WINAPI IMSMQMessage2_Send_Proxy(IMSMQMessage2 *This,IMSMQQueue2 *DestinationQueue,VARIANT *Transaction);", "IMSMQMessage2_AttachCurrentSecurityContext_Proxy": "HRESULT WINAPI IMSMQMessage2_AttachCurrentSecurityContext_Proxy(IMSMQMessage2 *This);", "IMSMQMessage2_get_SenderVersion_Proxy": "HRESULT WINAPI IMSMQMessage2_get_SenderVersion_Proxy(IMSMQMessage2 *This,__LONG32 *plSenderVersion);", "IMSMQMessage2_get_Extension_Proxy": "HRESULT WINAPI IMSMQMessage2_get_Extension_Proxy(IMSMQMessage2 *This,VARIANT *pvarExtension);", "IMSMQMessage2_put_Extension_Proxy": "HRESULT WINAPI IMSMQMessage2_put_Extension_Proxy(IMSMQMessage2 *This,VARIANT varExtension);", "IMSMQMessage2_get_ConnectorTypeGuid_Proxy": "HRESULT WINAPI IMSMQMessage2_get_ConnectorTypeGuid_Proxy(IMSMQMessage2 *This,BSTR *pbstrGuidConnectorType);", "IMSMQMessage2_put_ConnectorTypeGuid_Proxy": "HRESULT WINAPI IMSMQMessage2_put_ConnectorTypeGuid_Proxy(IMSMQMessage2 *This,BSTR bstrGuidConnectorType);", "IMSMQMessage2_get_TransactionStatusQueueInfo_Proxy": "HRESULT WINAPI IMSMQMessage2_get_TransactionStatusQueueInfo_Proxy(IMSMQMessage2 *This,IMSMQQueueInfo2 **ppqinfoXactStatus);", "IMSMQMessage2_get_DestinationSymmetricKey_Proxy": "HRESULT WINAPI IMSMQMessage2_get_DestinationSymmetricKey_Proxy(IMSMQMessage2 *This,VARIANT *pvarDestSymmKey);", "IMSMQMessage2_put_DestinationSymmetricKey_Proxy": "HRESULT WINAPI IMSMQMessage2_put_DestinationSymmetricKey_Proxy(IMSMQMessage2 *This,VARIANT varDestSymmKey);", "IMSMQMessage2_get_Signature_Proxy": "HRESULT WINAPI IMSMQMessage2_get_Signature_Proxy(IMSMQMessage2 *This,VARIANT *pvarSignature);", "IMSMQMessage2_put_Signature_Proxy": "HRESULT WINAPI IMSMQMessage2_put_Signature_Proxy(IMSMQMessage2 *This,VARIANT varSignature);", "IMSMQMessage2_get_AuthenticationProviderType_Proxy": "HRESULT WINAPI IMSMQMessage2_get_AuthenticationProviderType_Proxy(IMSMQMessage2 *This,__LONG32 *plAuthProvType);", "IMSMQMessage2_put_AuthenticationProviderType_Proxy": "HRESULT WINAPI IMSMQMessage2_put_AuthenticationProviderType_Proxy(IMSMQMessage2 *This,__LONG32 lAuthProvType);", "IMSMQMessage2_get_AuthenticationProviderName_Proxy": "HRESULT WINAPI IMSMQMessage2_get_AuthenticationProviderName_Proxy(IMSMQMessage2 *This,BSTR *pbstrAuthProvName);", "IMSMQMessage2_put_AuthenticationProviderName_Proxy": "HRESULT WINAPI IMSMQMessage2_put_AuthenticationProviderName_Proxy(IMSMQMessage2 *This,BSTR bstrAuthProvName);", "IMSMQMessage2_put_SenderId_Proxy": "HRESULT WINAPI IMSMQMessage2_put_SenderId_Proxy(IMSMQMessage2 *This,VARIANT varSenderId);", "IMSMQMessage2_get_MsgClass_Proxy": "HRESULT WINAPI IMSMQMessage2_get_MsgClass_Proxy(IMSMQMessage2 *This,__LONG32 *plMsgClass);", "IMSMQMessage2_put_MsgClass_Proxy": "HRESULT WINAPI IMSMQMessage2_put_MsgClass_Proxy(IMSMQMessage2 *This,__LONG32 lMsgClass);", "IMSMQMessage2_get_Properties_Proxy": "HRESULT WINAPI IMSMQMessage2_get_Properties_Proxy(IMSMQMessage2 *This,IDispatch **ppcolProperties);", "IMSMQMessage2_get_TransactionId_Proxy": "HRESULT WINAPI IMSMQMessage2_get_TransactionId_Proxy(IMSMQMessage2 *This,VARIANT *pvarXactId);", "IMSMQMessage2_get_IsFirstInTransaction_Proxy": "HRESULT WINAPI IMSMQMessage2_get_IsFirstInTransaction_Proxy(IMSMQMessage2 *This,Boolean *pisFirstInXact);", "IMSMQMessage2_get_IsLastInTransaction_Proxy": "HRESULT WINAPI IMSMQMessage2_get_IsLastInTransaction_Proxy(IMSMQMessage2 *This,Boolean *pisLastInXact);", "IMSMQMessage2_get_ResponseQueueInfo_Proxy": "HRESULT WINAPI IMSMQMessage2_get_ResponseQueueInfo_Proxy(IMSMQMessage2 *This,IMSMQQueueInfo2 **ppqinfoResponse);", "IMSMQMessage2_putref_ResponseQueueInfo_Proxy": "HRESULT WINAPI IMSMQMessage2_putref_ResponseQueueInfo_Proxy(IMSMQMessage2 *This,IMSMQQueueInfo2 *pqinfoResponse);", "IMSMQMessage2_get_AdminQueueInfo_Proxy": "HRESULT WINAPI IMSMQMessage2_get_AdminQueueInfo_Proxy(IMSMQMessage2 *This,IMSMQQueueInfo2 **ppqinfoAdmin);", "IMSMQMessage2_putref_AdminQueueInfo_Proxy": "HRESULT WINAPI IMSMQMessage2_putref_AdminQueueInfo_Proxy(IMSMQMessage2 *This,IMSMQQueueInfo2 *pqinfoAdmin);", "IMSMQMessage2_get_ReceivedAuthenticationLevel_Proxy": "HRESULT WINAPI IMSMQMessage2_get_ReceivedAuthenticationLevel_Proxy(IMSMQMessage2 *This,short *psReceivedAuthenticationLevel);", "IMSMQMessage3_get_Class_Proxy": "HRESULT WINAPI IMSMQMessage3_get_Class_Proxy(IMSMQMessage3 *This,__LONG32 *plClass);", "IMSMQMessage3_get_PrivLevel_Proxy": "HRESULT WINAPI IMSMQMessage3_get_PrivLevel_Proxy(IMSMQMessage3 *This,__LONG32 *plPrivLevel);", "IMSMQMessage3_put_PrivLevel_Proxy": "HRESULT WINAPI IMSMQMessage3_put_PrivLevel_Proxy(IMSMQMessage3 *This,__LONG32 lPrivLevel);", "IMSMQMessage3_get_AuthLevel_Proxy": "HRESULT WINAPI IMSMQMessage3_get_AuthLevel_Proxy(IMSMQMessage3 *This,__LONG32 *plAuthLevel);", "IMSMQMessage3_put_AuthLevel_Proxy": "HRESULT WINAPI IMSMQMessage3_put_AuthLevel_Proxy(IMSMQMessage3 *This,__LONG32 lAuthLevel);", "IMSMQMessage3_get_IsAuthenticated_Proxy": "HRESULT WINAPI IMSMQMessage3_get_IsAuthenticated_Proxy(IMSMQMessage3 *This,Boolean *pisAuthenticated);", "IMSMQMessage3_get_Delivery_Proxy": "HRESULT WINAPI IMSMQMessage3_get_Delivery_Proxy(IMSMQMessage3 *This,__LONG32 *plDelivery);", "IMSMQMessage3_put_Delivery_Proxy": "HRESULT WINAPI IMSMQMessage3_put_Delivery_Proxy(IMSMQMessage3 *This,__LONG32 lDelivery);", "IMSMQMessage3_get_Trace_Proxy": "HRESULT WINAPI IMSMQMessage3_get_Trace_Proxy(IMSMQMessage3 *This,__LONG32 *plTrace);", "IMSMQMessage3_put_Trace_Proxy": "HRESULT WINAPI IMSMQMessage3_put_Trace_Proxy(IMSMQMessage3 *This,__LONG32 lTrace);", "IMSMQMessage3_get_Priority_Proxy": "HRESULT WINAPI IMSMQMessage3_get_Priority_Proxy(IMSMQMessage3 *This,__LONG32 *plPriority);", "IMSMQMessage3_put_Priority_Proxy": "HRESULT WINAPI IMSMQMessage3_put_Priority_Proxy(IMSMQMessage3 *This,__LONG32 lPriority);", "IMSMQMessage3_get_Journal_Proxy": "HRESULT WINAPI IMSMQMessage3_get_Journal_Proxy(IMSMQMessage3 *This,__LONG32 *plJournal);", "IMSMQMessage3_put_Journal_Proxy": "HRESULT WINAPI IMSMQMessage3_put_Journal_Proxy(IMSMQMessage3 *This,__LONG32 lJournal);", "IMSMQMessage3_get_ResponseQueueInfo_v1_Proxy": "HRESULT WINAPI IMSMQMessage3_get_ResponseQueueInfo_v1_Proxy(IMSMQMessage3 *This,IMSMQQueueInfo **ppqinfoResponse);", "IMSMQMessage3_putref_ResponseQueueInfo_v1_Proxy": "HRESULT WINAPI IMSMQMessage3_putref_ResponseQueueInfo_v1_Proxy(IMSMQMessage3 *This,IMSMQQueueInfo *pqinfoResponse);", "IMSMQMessage3_get_AppSpecific_Proxy": "HRESULT WINAPI IMSMQMessage3_get_AppSpecific_Proxy(IMSMQMessage3 *This,__LONG32 *plAppSpecific);", "IMSMQMessage3_put_AppSpecific_Proxy": "HRESULT WINAPI IMSMQMessage3_put_AppSpecific_Proxy(IMSMQMessage3 *This,__LONG32 lAppSpecific);", "IMSMQMessage3_get_SourceMachineGuid_Proxy": "HRESULT WINAPI IMSMQMessage3_get_SourceMachineGuid_Proxy(IMSMQMessage3 *This,BSTR *pbstrGuidSrcMachine);", "IMSMQMessage3_get_BodyLength_Proxy": "HRESULT WINAPI IMSMQMessage3_get_BodyLength_Proxy(IMSMQMessage3 *This,__LONG32 *pcbBody);", "IMSMQMessage3_get_Body_Proxy": "HRESULT WINAPI IMSMQMessage3_get_Body_Proxy(IMSMQMessage3 *This,VARIANT *pvarBody);", "IMSMQMessage3_put_Body_Proxy": "HRESULT WINAPI IMSMQMessage3_put_Body_Proxy(IMSMQMessage3 *This,VARIANT varBody);", "IMSMQMessage3_get_AdminQueueInfo_v1_Proxy": "HRESULT WINAPI IMSMQMessage3_get_AdminQueueInfo_v1_Proxy(IMSMQMessage3 *This,IMSMQQueueInfo **ppqinfoAdmin);", "IMSMQMessage3_putref_AdminQueueInfo_v1_Proxy": "HRESULT WINAPI IMSMQMessage3_putref_AdminQueueInfo_v1_Proxy(IMSMQMessage3 *This,IMSMQQueueInfo *pqinfoAdmin);", "IMSMQMessage3_get_Id_Proxy": "HRESULT WINAPI IMSMQMessage3_get_Id_Proxy(IMSMQMessage3 *This,VARIANT *pvarMsgId);", "IMSMQMessage3_get_CorrelationId_Proxy": "HRESULT WINAPI IMSMQMessage3_get_CorrelationId_Proxy(IMSMQMessage3 *This,VARIANT *pvarMsgId);", "IMSMQMessage3_put_CorrelationId_Proxy": "HRESULT WINAPI IMSMQMessage3_put_CorrelationId_Proxy(IMSMQMessage3 *This,VARIANT varMsgId);", "IMSMQMessage3_get_Ack_Proxy": "HRESULT WINAPI IMSMQMessage3_get_Ack_Proxy(IMSMQMessage3 *This,__LONG32 *plAck);", "IMSMQMessage3_put_Ack_Proxy": "HRESULT WINAPI IMSMQMessage3_put_Ack_Proxy(IMSMQMessage3 *This,__LONG32 lAck);", "IMSMQMessage3_get_Label_Proxy": "HRESULT WINAPI IMSMQMessage3_get_Label_Proxy(IMSMQMessage3 *This,BSTR *pbstrLabel);", "IMSMQMessage3_put_Label_Proxy": "HRESULT WINAPI IMSMQMessage3_put_Label_Proxy(IMSMQMessage3 *This,BSTR bstrLabel);", "IMSMQMessage3_get_MaxTimeToReachQueue_Proxy": "HRESULT WINAPI IMSMQMessage3_get_MaxTimeToReachQueue_Proxy(IMSMQMessage3 *This,__LONG32 *plMaxTimeToReachQueue);", "IMSMQMessage3_put_MaxTimeToReachQueue_Proxy": "HRESULT WINAPI IMSMQMessage3_put_MaxTimeToReachQueue_Proxy(IMSMQMessage3 *This,__LONG32 lMaxTimeToReachQueue);", "IMSMQMessage3_get_MaxTimeToReceive_Proxy": "HRESULT WINAPI IMSMQMessage3_get_MaxTimeToReceive_Proxy(IMSMQMessage3 *This,__LONG32 *plMaxTimeToReceive);", "IMSMQMessage3_put_MaxTimeToReceive_Proxy": "HRESULT WINAPI IMSMQMessage3_put_MaxTimeToReceive_Proxy(IMSMQMessage3 *This,__LONG32 lMaxTimeToReceive);", "IMSMQMessage3_get_HashAlgorithm_Proxy": "HRESULT WINAPI IMSMQMessage3_get_HashAlgorithm_Proxy(IMSMQMessage3 *This,__LONG32 *plHashAlg);", "IMSMQMessage3_put_HashAlgorithm_Proxy": "HRESULT WINAPI IMSMQMessage3_put_HashAlgorithm_Proxy(IMSMQMessage3 *This,__LONG32 lHashAlg);", "IMSMQMessage3_get_EncryptAlgorithm_Proxy": "HRESULT WINAPI IMSMQMessage3_get_EncryptAlgorithm_Proxy(IMSMQMessage3 *This,__LONG32 *plEncryptAlg);", "IMSMQMessage3_put_EncryptAlgorithm_Proxy": "HRESULT WINAPI IMSMQMessage3_put_EncryptAlgorithm_Proxy(IMSMQMessage3 *This,__LONG32 lEncryptAlg);", "IMSMQMessage3_get_SentTime_Proxy": "HRESULT WINAPI IMSMQMessage3_get_SentTime_Proxy(IMSMQMessage3 *This,VARIANT *pvarSentTime);", "IMSMQMessage3_get_ArrivedTime_Proxy": "HRESULT WINAPI IMSMQMessage3_get_ArrivedTime_Proxy(IMSMQMessage3 *This,VARIANT *plArrivedTime);", "IMSMQMessage3_get_DestinationQueueInfo_Proxy": "HRESULT WINAPI IMSMQMessage3_get_DestinationQueueInfo_Proxy(IMSMQMessage3 *This,IMSMQQueueInfo3 **ppqinfoDest);", "IMSMQMessage3_get_SenderCertificate_Proxy": "HRESULT WINAPI IMSMQMessage3_get_SenderCertificate_Proxy(IMSMQMessage3 *This,VARIANT *pvarSenderCert);", "IMSMQMessage3_put_SenderCertificate_Proxy": "HRESULT WINAPI IMSMQMessage3_put_SenderCertificate_Proxy(IMSMQMessage3 *This,VARIANT varSenderCert);", "IMSMQMessage3_get_SenderId_Proxy": "HRESULT WINAPI IMSMQMessage3_get_SenderId_Proxy(IMSMQMessage3 *This,VARIANT *pvarSenderId);", "IMSMQMessage3_get_SenderIdType_Proxy": "HRESULT WINAPI IMSMQMessage3_get_SenderIdType_Proxy(IMSMQMessage3 *This,__LONG32 *plSenderIdType);", "IMSMQMessage3_put_SenderIdType_Proxy": "HRESULT WINAPI IMSMQMessage3_put_SenderIdType_Proxy(IMSMQMessage3 *This,__LONG32 lSenderIdType);", "IMSMQMessage3_Send_Proxy": "HRESULT WINAPI IMSMQMessage3_Send_Proxy(IMSMQMessage3 *This,IDispatch *DestinationQueue,VARIANT *Transaction);", "IMSMQMessage3_AttachCurrentSecurityContext_Proxy": "HRESULT WINAPI IMSMQMessage3_AttachCurrentSecurityContext_Proxy(IMSMQMessage3 *This);", "IMSMQMessage3_get_SenderVersion_Proxy": "HRESULT WINAPI IMSMQMessage3_get_SenderVersion_Proxy(IMSMQMessage3 *This,__LONG32 *plSenderVersion);", "IMSMQMessage3_get_Extension_Proxy": "HRESULT WINAPI IMSMQMessage3_get_Extension_Proxy(IMSMQMessage3 *This,VARIANT *pvarExtension);", "IMSMQMessage3_put_Extension_Proxy": "HRESULT WINAPI IMSMQMessage3_put_Extension_Proxy(IMSMQMessage3 *This,VARIANT varExtension);", "IMSMQMessage3_get_ConnectorTypeGuid_Proxy": "HRESULT WINAPI IMSMQMessage3_get_ConnectorTypeGuid_Proxy(IMSMQMessage3 *This,BSTR *pbstrGuidConnectorType);", "IMSMQMessage3_put_ConnectorTypeGuid_Proxy": "HRESULT WINAPI IMSMQMessage3_put_ConnectorTypeGuid_Proxy(IMSMQMessage3 *This,BSTR bstrGuidConnectorType);", "IMSMQMessage3_get_TransactionStatusQueueInfo_Proxy": "HRESULT WINAPI IMSMQMessage3_get_TransactionStatusQueueInfo_Proxy(IMSMQMessage3 *This,IMSMQQueueInfo3 **ppqinfoXactStatus);", "IMSMQMessage3_get_DestinationSymmetricKey_Proxy": "HRESULT WINAPI IMSMQMessage3_get_DestinationSymmetricKey_Proxy(IMSMQMessage3 *This,VARIANT *pvarDestSymmKey);", "IMSMQMessage3_put_DestinationSymmetricKey_Proxy": "HRESULT WINAPI IMSMQMessage3_put_DestinationSymmetricKey_Proxy(IMSMQMessage3 *This,VARIANT varDestSymmKey);", "IMSMQMessage3_get_Signature_Proxy": "HRESULT WINAPI IMSMQMessage3_get_Signature_Proxy(IMSMQMessage3 *This,VARIANT *pvarSignature);", "IMSMQMessage3_put_Signature_Proxy": "HRESULT WINAPI IMSMQMessage3_put_Signature_Proxy(IMSMQMessage3 *This,VARIANT varSignature);", "IMSMQMessage3_get_AuthenticationProviderType_Proxy": "HRESULT WINAPI IMSMQMessage3_get_AuthenticationProviderType_Proxy(IMSMQMessage3 *This,__LONG32 *plAuthProvType);", "IMSMQMessage3_put_AuthenticationProviderType_Proxy": "HRESULT WINAPI IMSMQMessage3_put_AuthenticationProviderType_Proxy(IMSMQMessage3 *This,__LONG32 lAuthProvType);", "IMSMQMessage3_get_AuthenticationProviderName_Proxy": "HRESULT WINAPI IMSMQMessage3_get_AuthenticationProviderName_Proxy(IMSMQMessage3 *This,BSTR *pbstrAuthProvName);", "IMSMQMessage3_put_AuthenticationProviderName_Proxy": "HRESULT WINAPI IMSMQMessage3_put_AuthenticationProviderName_Proxy(IMSMQMessage3 *This,BSTR bstrAuthProvName);", "IMSMQMessage3_put_SenderId_Proxy": "HRESULT WINAPI IMSMQMessage3_put_SenderId_Proxy(IMSMQMessage3 *This,VARIANT varSenderId);", "IMSMQMessage3_get_MsgClass_Proxy": "HRESULT WINAPI IMSMQMessage3_get_MsgClass_Proxy(IMSMQMessage3 *This,__LONG32 *plMsgClass);", "IMSMQMessage3_put_MsgClass_Proxy": "HRESULT WINAPI IMSMQMessage3_put_MsgClass_Proxy(IMSMQMessage3 *This,__LONG32 lMsgClass);", "IMSMQMessage3_get_Properties_Proxy": "HRESULT WINAPI IMSMQMessage3_get_Properties_Proxy(IMSMQMessage3 *This,IDispatch **ppcolProperties);", "IMSMQMessage3_get_TransactionId_Proxy": "HRESULT WINAPI IMSMQMessage3_get_TransactionId_Proxy(IMSMQMessage3 *This,VARIANT *pvarXactId);", "IMSMQMessage3_get_IsFirstInTransaction_Proxy": "HRESULT WINAPI IMSMQMessage3_get_IsFirstInTransaction_Proxy(IMSMQMessage3 *This,Boolean *pisFirstInXact);", "IMSMQMessage3_get_IsLastInTransaction_Proxy": "HRESULT WINAPI IMSMQMessage3_get_IsLastInTransaction_Proxy(IMSMQMessage3 *This,Boolean *pisLastInXact);", "IMSMQMessage3_get_ResponseQueueInfo_v2_Proxy": "HRESULT WINAPI IMSMQMessage3_get_ResponseQueueInfo_v2_Proxy(IMSMQMessage3 *This,IMSMQQueueInfo2 **ppqinfoResponse);", "IMSMQMessage3_putref_ResponseQueueInfo_v2_Proxy": "HRESULT WINAPI IMSMQMessage3_putref_ResponseQueueInfo_v2_Proxy(IMSMQMessage3 *This,IMSMQQueueInfo2 *pqinfoResponse);", "IMSMQMessage3_get_AdminQueueInfo_v2_Proxy": "HRESULT WINAPI IMSMQMessage3_get_AdminQueueInfo_v2_Proxy(IMSMQMessage3 *This,IMSMQQueueInfo2 **ppqinfoAdmin);", "IMSMQMessage3_putref_AdminQueueInfo_v2_Proxy": "HRESULT WINAPI IMSMQMessage3_putref_AdminQueueInfo_v2_Proxy(IMSMQMessage3 *This,IMSMQQueueInfo2 *pqinfoAdmin);", "IMSMQMessage3_get_ReceivedAuthenticationLevel_Proxy": "HRESULT WINAPI IMSMQMessage3_get_ReceivedAuthenticationLevel_Proxy(IMSMQMessage3 *This,short *psReceivedAuthenticationLevel);", "IMSMQMessage3_get_ResponseQueueInfo_Proxy": "HRESULT WINAPI IMSMQMessage3_get_ResponseQueueInfo_Proxy(IMSMQMessage3 *This,IMSMQQueueInfo3 **ppqinfoResponse);", "IMSMQMessage3_putref_ResponseQueueInfo_Proxy": "HRESULT WINAPI IMSMQMessage3_putref_ResponseQueueInfo_Proxy(IMSMQMessage3 *This,IMSMQQueueInfo3 *pqinfoResponse);", "IMSMQMessage3_get_AdminQueueInfo_Proxy": "HRESULT WINAPI IMSMQMessage3_get_AdminQueueInfo_Proxy(IMSMQMessage3 *This,IMSMQQueueInfo3 **ppqinfoAdmin);", "IMSMQMessage3_putref_AdminQueueInfo_Proxy": "HRESULT WINAPI IMSMQMessage3_putref_AdminQueueInfo_Proxy(IMSMQMessage3 *This,IMSMQQueueInfo3 *pqinfoAdmin);", "IMSMQMessage3_get_ResponseDestination_Proxy": "HRESULT WINAPI IMSMQMessage3_get_ResponseDestination_Proxy(IMSMQMessage3 *This,IDispatch **ppdestResponse);", "IMSMQMessage3_putref_ResponseDestination_Proxy": "HRESULT WINAPI IMSMQMessage3_putref_ResponseDestination_Proxy(IMSMQMessage3 *This,IDispatch *pdestResponse);", "IMSMQMessage3_get_Destination_Proxy": "HRESULT WINAPI IMSMQMessage3_get_Destination_Proxy(IMSMQMessage3 *This,IDispatch **ppdestDestination);", "IMSMQMessage3_get_LookupId_Proxy": "HRESULT WINAPI IMSMQMessage3_get_LookupId_Proxy(IMSMQMessage3 *This,VARIANT *pvarLookupId);", "IMSMQMessage3_get_IsAuthenticated2_Proxy": "HRESULT WINAPI IMSMQMessage3_get_IsAuthenticated2_Proxy(IMSMQMessage3 *This,VARIANT_BOOL *pisAuthenticated);", "IMSMQMessage3_get_IsFirstInTransaction2_Proxy": "HRESULT WINAPI IMSMQMessage3_get_IsFirstInTransaction2_Proxy(IMSMQMessage3 *This,VARIANT_BOOL *pisFirstInXact);", "IMSMQMessage3_get_IsLastInTransaction2_Proxy": "HRESULT WINAPI IMSMQMessage3_get_IsLastInTransaction2_Proxy(IMSMQMessage3 *This,VARIANT_BOOL *pisLastInXact);", "IMSMQMessage3_AttachCurrentSecurityContext2_Proxy": "HRESULT WINAPI IMSMQMessage3_AttachCurrentSecurityContext2_Proxy(IMSMQMessage3 *This);", "IMSMQMessage3_get_SoapEnvelope_Proxy": "HRESULT WINAPI IMSMQMessage3_get_SoapEnvelope_Proxy(IMSMQMessage3 *This,BSTR *pbstrSoapEnvelope);", "IMSMQMessage3_get_CompoundMessage_Proxy": "HRESULT WINAPI IMSMQMessage3_get_CompoundMessage_Proxy(IMSMQMessage3 *This,VARIANT *pvarCompoundMessage);", "IMSMQMessage3_put_SoapHeader_Proxy": "HRESULT WINAPI IMSMQMessage3_put_SoapHeader_Proxy(IMSMQMessage3 *This,BSTR bstrSoapHeader);", "IMSMQMessage3_put_SoapBody_Proxy": "HRESULT WINAPI IMSMQMessage3_put_SoapBody_Proxy(IMSMQMessage3 *This,BSTR bstrSoapBody);", "IMSMQQueue3_get_Access_Proxy": "HRESULT WINAPI IMSMQQueue3_get_Access_Proxy(IMSMQQueue3 *This,__LONG32 *plAccess);", "IMSMQQueue3_get_ShareMode_Proxy": "HRESULT WINAPI IMSMQQueue3_get_ShareMode_Proxy(IMSMQQueue3 *This,__LONG32 *plShareMode);", "IMSMQQueue3_get_QueueInfo_Proxy": "HRESULT WINAPI IMSMQQueue3_get_QueueInfo_Proxy(IMSMQQueue3 *This,IMSMQQueueInfo3 **ppqinfo);", "IMSMQQueue3_get_Handle_Proxy": "HRESULT WINAPI IMSMQQueue3_get_Handle_Proxy(IMSMQQueue3 *This,__LONG32 *plHandle);", "IMSMQQueue3_get_IsOpen_Proxy": "HRESULT WINAPI IMSMQQueue3_get_IsOpen_Proxy(IMSMQQueue3 *This,Boolean *pisOpen);", "IMSMQQueue3_Close_Proxy": "HRESULT WINAPI IMSMQQueue3_Close_Proxy(IMSMQQueue3 *This);", "IMSMQQueue3_Receive_v1_Proxy": "HRESULT WINAPI IMSMQQueue3_Receive_v1_Proxy(IMSMQQueue3 *This,VARIANT *Transaction,VARIANT *WantDestinationQueue,VARIANT *WantBody,VARIANT *ReceiveTimeout,IMSMQMessage **ppmsg);", "IMSMQQueue3_Peek_v1_Proxy": "HRESULT WINAPI IMSMQQueue3_Peek_v1_Proxy(IMSMQQueue3 *This,VARIANT *WantDestinationQueue,VARIANT *WantBody,VARIANT *ReceiveTimeout,IMSMQMessage **ppmsg);", "IMSMQQueue3_EnableNotification_Proxy": "HRESULT WINAPI IMSMQQueue3_EnableNotification_Proxy(IMSMQQueue3 *This,IMSMQEvent3 *Event,VARIANT *Cursor,VARIANT *ReceiveTimeout);", "IMSMQQueue3_Reset_Proxy": "HRESULT WINAPI IMSMQQueue3_Reset_Proxy(IMSMQQueue3 *This);", "IMSMQQueue3_ReceiveCurrent_v1_Proxy": "HRESULT WINAPI IMSMQQueue3_ReceiveCurrent_v1_Proxy(IMSMQQueue3 *This,VARIANT *Transaction,VARIANT *WantDestinationQueue,VARIANT *WantBody,VARIANT *ReceiveTimeout,IMSMQMessage **ppmsg);", "IMSMQQueue3_PeekNext_v1_Proxy": "HRESULT WINAPI IMSMQQueue3_PeekNext_v1_Proxy(IMSMQQueue3 *This,VARIANT *WantDestinationQueue,VARIANT *WantBody,VARIANT *ReceiveTimeout,IMSMQMessage **ppmsg);", "IMSMQQueue3_PeekCurrent_v1_Proxy": "HRESULT WINAPI IMSMQQueue3_PeekCurrent_v1_Proxy(IMSMQQueue3 *This,VARIANT *WantDestinationQueue,VARIANT *WantBody,VARIANT *ReceiveTimeout,IMSMQMessage **ppmsg);", "IMSMQQueue3_Receive_Proxy": "HRESULT WINAPI IMSMQQueue3_Receive_Proxy(IMSMQQueue3 *This,VARIANT *Transaction,VARIANT *WantDestinationQueue,VARIANT *WantBody,VARIANT *ReceiveTimeout,VARIANT *WantConnectorType,IMSMQMessage3 **ppmsg);", "IMSMQQueue3_Peek_Proxy": "HRESULT WINAPI IMSMQQueue3_Peek_Proxy(IMSMQQueue3 *This,VARIANT *WantDestinationQueue,VARIANT *WantBody,VARIANT *ReceiveTimeout,VARIANT *WantConnectorType,IMSMQMessage3 **ppmsg);", "IMSMQQueue3_ReceiveCurrent_Proxy": "HRESULT WINAPI IMSMQQueue3_ReceiveCurrent_Proxy(IMSMQQueue3 *This,VARIANT *Transaction,VARIANT *WantDestinationQueue,VARIANT *WantBody,VARIANT *ReceiveTimeout,VARIANT *WantConnectorType,IMSMQMessage3 **ppmsg);", "IMSMQQueue3_PeekNext_Proxy": "HRESULT WINAPI IMSMQQueue3_PeekNext_Proxy(IMSMQQueue3 *This,VARIANT *WantDestinationQueue,VARIANT *WantBody,VARIANT *ReceiveTimeout,VARIANT *WantConnectorType,IMSMQMessage3 **ppmsg);", "IMSMQQueue3_PeekCurrent_Proxy": "HRESULT WINAPI IMSMQQueue3_PeekCurrent_Proxy(IMSMQQueue3 *This,VARIANT *WantDestinationQueue,VARIANT *WantBody,VARIANT *ReceiveTimeout,VARIANT *WantConnectorType,IMSMQMessage3 **ppmsg);", "IMSMQQueue3_get_Properties_Proxy": "HRESULT WINAPI IMSMQQueue3_get_Properties_Proxy(IMSMQQueue3 *This,IDispatch **ppcolProperties);", "IMSMQQueue3_get_Handle2_Proxy": "HRESULT WINAPI IMSMQQueue3_get_Handle2_Proxy(IMSMQQueue3 *This,VARIANT *pvarHandle);", "IMSMQQueue3_ReceiveByLookupId_Proxy": "HRESULT WINAPI IMSMQQueue3_ReceiveByLookupId_Proxy(IMSMQQueue3 *This,VARIANT LookupId,VARIANT *Transaction,VARIANT *WantDestinationQueue,VARIANT *WantBody,VARIANT *WantConnectorType,IMSMQMessage3 **ppmsg);", "IMSMQQueue3_ReceiveNextByLookupId_Proxy": "HRESULT WINAPI IMSMQQueue3_ReceiveNextByLookupId_Proxy(IMSMQQueue3 *This,VARIANT LookupId,VARIANT *Transaction,VARIANT *WantDestinationQueue,VARIANT *WantBody,VARIANT *WantConnectorType,IMSMQMessage3 **ppmsg);", "IMSMQQueue3_ReceivePreviousByLookupId_Proxy": "HRESULT WINAPI IMSMQQueue3_ReceivePreviousByLookupId_Proxy(IMSMQQueue3 *This,VARIANT LookupId,VARIANT *Transaction,VARIANT *WantDestinationQueue,VARIANT *WantBody,VARIANT *WantConnectorType,IMSMQMessage3 **ppmsg);", "IMSMQQueue3_ReceiveFirstByLookupId_Proxy": "HRESULT WINAPI IMSMQQueue3_ReceiveFirstByLookupId_Proxy(IMSMQQueue3 *This,VARIANT *Transaction,VARIANT *WantDestinationQueue,VARIANT *WantBody,VARIANT *WantConnectorType,IMSMQMessage3 **ppmsg);", "IMSMQQueue3_ReceiveLastByLookupId_Proxy": "HRESULT WINAPI IMSMQQueue3_ReceiveLastByLookupId_Proxy(IMSMQQueue3 *This,VARIANT *Transaction,VARIANT *WantDestinationQueue,VARIANT *WantBody,VARIANT *WantConnectorType,IMSMQMessage3 **ppmsg);", "IMSMQQueue3_PeekByLookupId_Proxy": "HRESULT WINAPI IMSMQQueue3_PeekByLookupId_Proxy(IMSMQQueue3 *This,VARIANT LookupId,VARIANT *WantDestinationQueue,VARIANT *WantBody,VARIANT *WantConnectorType,IMSMQMessage3 **ppmsg);", "IMSMQQueue3_PeekNextByLookupId_Proxy": "HRESULT WINAPI IMSMQQueue3_PeekNextByLookupId_Proxy(IMSMQQueue3 *This,VARIANT LookupId,VARIANT *WantDestinationQueue,VARIANT *WantBody,VARIANT *WantConnectorType,IMSMQMessage3 **ppmsg);", "IMSMQQueue3_PeekPreviousByLookupId_Proxy": "HRESULT WINAPI IMSMQQueue3_PeekPreviousByLookupId_Proxy(IMSMQQueue3 *This,VARIANT LookupId,VARIANT *WantDestinationQueue,VARIANT *WantBody,VARIANT *WantConnectorType,IMSMQMessage3 **ppmsg);", "IMSMQQueue3_PeekFirstByLookupId_Proxy": "HRESULT WINAPI IMSMQQueue3_PeekFirstByLookupId_Proxy(IMSMQQueue3 *This,VARIANT *WantDestinationQueue,VARIANT *WantBody,VARIANT *WantConnectorType,IMSMQMessage3 **ppmsg);", "IMSMQQueue3_PeekLastByLookupId_Proxy": "HRESULT WINAPI IMSMQQueue3_PeekLastByLookupId_Proxy(IMSMQQueue3 *This,VARIANT *WantDestinationQueue,VARIANT *WantBody,VARIANT *WantConnectorType,IMSMQMessage3 **ppmsg);", "IMSMQQueue3_Purge_Proxy": "HRESULT WINAPI IMSMQQueue3_Purge_Proxy(IMSMQQueue3 *This);", "IMSMQQueue3_get_IsOpen2_Proxy": "HRESULT WINAPI IMSMQQueue3_get_IsOpen2_Proxy(IMSMQQueue3 *This,VARIANT_BOOL *pisOpen);", "IMSMQPrivateEvent_get_Hwnd_Proxy": "HRESULT WINAPI IMSMQPrivateEvent_get_Hwnd_Proxy(IMSMQPrivateEvent *This,__LONG32 *phwnd);", "IMSMQPrivateEvent_FireArrivedEvent_Proxy": "HRESULT WINAPI IMSMQPrivateEvent_FireArrivedEvent_Proxy(IMSMQPrivateEvent *This,IMSMQQueue *pq,__LONG32 msgcursor);", "IMSMQPrivateEvent_FireArrivedErrorEvent_Proxy": "HRESULT WINAPI IMSMQPrivateEvent_FireArrivedErrorEvent_Proxy(IMSMQPrivateEvent *This,IMSMQQueue *pq,HRESULT hrStatus,__LONG32 msgcursor);", "IMSMQTransaction2_InitNew_Proxy": "HRESULT WINAPI IMSMQTransaction2_InitNew_Proxy(IMSMQTransaction2 *This,VARIANT varTransaction);", "IMSMQTransaction2_get_Properties_Proxy": "HRESULT WINAPI IMSMQTransaction2_get_Properties_Proxy(IMSMQTransaction2 *This,IDispatch **ppcolProperties);", "IMSMQTransaction3_get_ITransaction_Proxy": "HRESULT WINAPI IMSMQTransaction3_get_ITransaction_Proxy(IMSMQTransaction3 *This,VARIANT *pvarITransaction);", "IMSMQCoordinatedTransactionDispenser2_BeginTransaction_Proxy": "HRESULT WINAPI IMSMQCoordinatedTransactionDispenser2_BeginTransaction_Proxy(IMSMQCoordinatedTransactionDispenser2 *This,IMSMQTransaction2 **ptransaction);", "IMSMQCoordinatedTransactionDispenser2_get_Properties_Proxy": "HRESULT WINAPI IMSMQCoordinatedTransactionDispenser2_get_Properties_Proxy(IMSMQCoordinatedTransactionDispenser2 *This,IDispatch **ppcolProperties);", "IMSMQCoordinatedTransactionDispenser3_BeginTransaction_Proxy": "HRESULT WINAPI IMSMQCoordinatedTransactionDispenser3_BeginTransaction_Proxy(IMSMQCoordinatedTransactionDispenser3 *This,IMSMQTransaction3 **ptransaction);", "IMSMQCoordinatedTransactionDispenser3_get_Properties_Proxy": "HRESULT WINAPI IMSMQCoordinatedTransactionDispenser3_get_Properties_Proxy(IMSMQCoordinatedTransactionDispenser3 *This,IDispatch **ppcolProperties);", "IMSMQTransactionDispenser2_BeginTransaction_Proxy": "HRESULT WINAPI IMSMQTransactionDispenser2_BeginTransaction_Proxy(IMSMQTransactionDispenser2 *This,IMSMQTransaction2 **ptransaction);", "IMSMQTransactionDispenser2_get_Properties_Proxy": "HRESULT WINAPI IMSMQTransactionDispenser2_get_Properties_Proxy(IMSMQTransactionDispenser2 *This,IDispatch **ppcolProperties);", "IMSMQTransactionDispenser3_BeginTransaction_Proxy": "HRESULT WINAPI IMSMQTransactionDispenser3_BeginTransaction_Proxy(IMSMQTransactionDispenser3 *This,IMSMQTransaction3 **ptransaction);", "IMSMQTransactionDispenser3_get_Properties_Proxy": "HRESULT WINAPI IMSMQTransactionDispenser3_get_Properties_Proxy(IMSMQTransactionDispenser3 *This,IDispatch **ppcolProperties);", "IMSMQApplication_MachineIdOfMachineName_Proxy": "HRESULT WINAPI IMSMQApplication_MachineIdOfMachineName_Proxy(IMSMQApplication *This,BSTR MachineName,BSTR *pbstrGuid);", "IMSMQApplication2_RegisterCertificate_Proxy": "HRESULT WINAPI IMSMQApplication2_RegisterCertificate_Proxy(IMSMQApplication2 *This,VARIANT *Flags,VARIANT *ExternalCertificate);", "IMSMQApplication2_MachineNameOfMachineId_Proxy": "HRESULT WINAPI IMSMQApplication2_MachineNameOfMachineId_Proxy(IMSMQApplication2 *This,BSTR bstrGuid,BSTR *pbstrMachineName);", "IMSMQApplication2_get_MSMQVersionMajor_Proxy": "HRESULT WINAPI IMSMQApplication2_get_MSMQVersionMajor_Proxy(IMSMQApplication2 *This,short *psMSMQVersionMajor);", "IMSMQApplication2_get_MSMQVersionMinor_Proxy": "HRESULT WINAPI IMSMQApplication2_get_MSMQVersionMinor_Proxy(IMSMQApplication2 *This,short *psMSMQVersionMinor);", "IMSMQApplication2_get_MSMQVersionBuild_Proxy": "HRESULT WINAPI IMSMQApplication2_get_MSMQVersionBuild_Proxy(IMSMQApplication2 *This,short *psMSMQVersionBuild);", "IMSMQApplication2_get_IsDsEnabled_Proxy": "HRESULT WINAPI IMSMQApplication2_get_IsDsEnabled_Proxy(IMSMQApplication2 *This,VARIANT_BOOL *pfIsDsEnabled);", "IMSMQApplication2_get_Properties_Proxy": "HRESULT WINAPI IMSMQApplication2_get_Properties_Proxy(IMSMQApplication2 *This,IDispatch **ppcolProperties);", "IMSMQApplication3_get_ActiveQueues_Proxy": "HRESULT WINAPI IMSMQApplication3_get_ActiveQueues_Proxy(IMSMQApplication3 *This,VARIANT *pvActiveQueues);", "IMSMQApplication3_get_PrivateQueues_Proxy": "HRESULT WINAPI IMSMQApplication3_get_PrivateQueues_Proxy(IMSMQApplication3 *This,VARIANT *pvPrivateQueues);", "IMSMQApplication3_get_DirectoryServiceServer_Proxy": "HRESULT WINAPI IMSMQApplication3_get_DirectoryServiceServer_Proxy(IMSMQApplication3 *This,BSTR *pbstrDirectoryServiceServer);", "IMSMQApplication3_get_IsConnected_Proxy": "HRESULT WINAPI IMSMQApplication3_get_IsConnected_Proxy(IMSMQApplication3 *This,VARIANT_BOOL *pfIsConnected);", "IMSMQApplication3_get_BytesInAllQueues_Proxy": "HRESULT WINAPI IMSMQApplication3_get_BytesInAllQueues_Proxy(IMSMQApplication3 *This,VARIANT *pvBytesInAllQueues);", "IMSMQApplication3_put_Machine_Proxy": "HRESULT WINAPI IMSMQApplication3_put_Machine_Proxy(IMSMQApplication3 *This,BSTR bstrMachine);", "IMSMQApplication3_get_Machine_Proxy": "HRESULT WINAPI IMSMQApplication3_get_Machine_Proxy(IMSMQApplication3 *This,BSTR *pbstrMachine);", "IMSMQApplication3_Connect_Proxy": "HRESULT WINAPI IMSMQApplication3_Connect_Proxy(IMSMQApplication3 *This);", "IMSMQApplication3_Disconnect_Proxy": "HRESULT WINAPI IMSMQApplication3_Disconnect_Proxy(IMSMQApplication3 *This);", "IMSMQApplication3_Tidy_Proxy": "HRESULT WINAPI IMSMQApplication3_Tidy_Proxy(IMSMQApplication3 *This);", "IMSMQDestination_Open_Proxy": "HRESULT WINAPI IMSMQDestination_Open_Proxy(IMSMQDestination *This);", "IMSMQDestination_Close_Proxy": "HRESULT WINAPI IMSMQDestination_Close_Proxy(IMSMQDestination *This);", "IMSMQDestination_get_IsOpen_Proxy": "HRESULT WINAPI IMSMQDestination_get_IsOpen_Proxy(IMSMQDestination *This,VARIANT_BOOL *pfIsOpen);", "IMSMQDestination_get_IADs_Proxy": "HRESULT WINAPI IMSMQDestination_get_IADs_Proxy(IMSMQDestination *This,IDispatch **ppIADs);", "IMSMQDestination_putref_IADs_Proxy": "HRESULT WINAPI IMSMQDestination_putref_IADs_Proxy(IMSMQDestination *This,IDispatch *pIADs);", "IMSMQDestination_get_ADsPath_Proxy": "HRESULT WINAPI IMSMQDestination_get_ADsPath_Proxy(IMSMQDestination *This,BSTR *pbstrADsPath);", "IMSMQDestination_put_ADsPath_Proxy": "HRESULT WINAPI IMSMQDestination_put_ADsPath_Proxy(IMSMQDestination *This,BSTR bstrADsPath);", "IMSMQDestination_get_PathName_Proxy": "HRESULT WINAPI IMSMQDestination_get_PathName_Proxy(IMSMQDestination *This,BSTR *pbstrPathName);", "IMSMQDestination_put_PathName_Proxy": "HRESULT WINAPI IMSMQDestination_put_PathName_Proxy(IMSMQDestination *This,BSTR bstrPathName);", "IMSMQDestination_get_FormatName_Proxy": "HRESULT WINAPI IMSMQDestination_get_FormatName_Proxy(IMSMQDestination *This,BSTR *pbstrFormatName);", "IMSMQDestination_put_FormatName_Proxy": "HRESULT WINAPI IMSMQDestination_put_FormatName_Proxy(IMSMQDestination *This,BSTR bstrFormatName);", "IMSMQDestination_get_Destinations_Proxy": "HRESULT WINAPI IMSMQDestination_get_Destinations_Proxy(IMSMQDestination *This,IDispatch **ppDestinations);", "IMSMQDestination_putref_Destinations_Proxy": "HRESULT WINAPI IMSMQDestination_putref_Destinations_Proxy(IMSMQDestination *This,IDispatch *pDestinations);", "IMSMQDestination_get_Properties_Proxy": "HRESULT WINAPI IMSMQDestination_get_Properties_Proxy(IMSMQDestination *This,IDispatch **ppcolProperties);", "IMSMQPrivateDestination_get_Handle_Proxy": "HRESULT WINAPI IMSMQPrivateDestination_get_Handle_Proxy(IMSMQPrivateDestination *This,VARIANT *pvarHandle);", "IMSMQPrivateDestination_put_Handle_Proxy": "HRESULT WINAPI IMSMQPrivateDestination_put_Handle_Proxy(IMSMQPrivateDestination *This,VARIANT varHandle);", "IMSMQCollection_Item_Proxy": "HRESULT WINAPI IMSMQCollection_Item_Proxy(IMSMQCollection *This,VARIANT *Index,VARIANT *pvarRet);", "IMSMQCollection_get_Count_Proxy": "HRESULT WINAPI IMSMQCollection_get_Count_Proxy(IMSMQCollection *This,__LONG32 *pCount);", "IMSMQCollection__NewEnum_Proxy": "HRESULT WINAPI IMSMQCollection__NewEnum_Proxy(IMSMQCollection *This,IUnknown **ppunk);", "IMSMQManagement_Init_Proxy": "HRESULT WINAPI IMSMQManagement_Init_Proxy(IMSMQManagement *This,VARIANT *Machine,VARIANT *Pathname,VARIANT *FormatName);", "IMSMQManagement_get_FormatName_Proxy": "HRESULT WINAPI IMSMQManagement_get_FormatName_Proxy(IMSMQManagement *This,BSTR *pbstrFormatName);", "IMSMQManagement_get_Machine_Proxy": "HRESULT WINAPI IMSMQManagement_get_Machine_Proxy(IMSMQManagement *This,BSTR *pbstrMachine);", "IMSMQManagement_get_MessageCount_Proxy": "HRESULT WINAPI IMSMQManagement_get_MessageCount_Proxy(IMSMQManagement *This,__LONG32 *plMessageCount);", "IMSMQManagement_get_ForeignStatus_Proxy": "HRESULT WINAPI IMSMQManagement_get_ForeignStatus_Proxy(IMSMQManagement *This,__LONG32 *plForeignStatus);", "IMSMQManagement_get_QueueType_Proxy": "HRESULT WINAPI IMSMQManagement_get_QueueType_Proxy(IMSMQManagement *This,__LONG32 *plQueueType);", "IMSMQManagement_get_IsLocal_Proxy": "HRESULT WINAPI IMSMQManagement_get_IsLocal_Proxy(IMSMQManagement *This,VARIANT_BOOL *pfIsLocal);", "IMSMQManagement_get_TransactionalStatus_Proxy": "HRESULT WINAPI IMSMQManagement_get_TransactionalStatus_Proxy(IMSMQManagement *This,__LONG32 *plTransactionalStatus);", "IMSMQManagement_get_BytesInQueue_Proxy": "HRESULT WINAPI IMSMQManagement_get_BytesInQueue_Proxy(IMSMQManagement *This,VARIANT *pvBytesInQueue);", "IMSMQOutgoingQueueManagement_get_State_Proxy": "HRESULT WINAPI IMSMQOutgoingQueueManagement_get_State_Proxy(IMSMQOutgoingQueueManagement *This,__LONG32 *plState);", "IMSMQOutgoingQueueManagement_get_NextHops_Proxy": "HRESULT WINAPI IMSMQOutgoingQueueManagement_get_NextHops_Proxy(IMSMQOutgoingQueueManagement *This,VARIANT *pvNextHops);", "IMSMQOutgoingQueueManagement_EodGetSendInfo_Proxy": "HRESULT WINAPI IMSMQOutgoingQueueManagement_EodGetSendInfo_Proxy(IMSMQOutgoingQueueManagement *This,IMSMQCollection **ppCollection);", "IMSMQOutgoingQueueManagement_Resume_Proxy": "HRESULT WINAPI IMSMQOutgoingQueueManagement_Resume_Proxy(IMSMQOutgoingQueueManagement *This);", "IMSMQOutgoingQueueManagement_Pause_Proxy": "HRESULT WINAPI IMSMQOutgoingQueueManagement_Pause_Proxy(IMSMQOutgoingQueueManagement *This);", "IMSMQOutgoingQueueManagement_EodResend_Proxy": "HRESULT WINAPI IMSMQOutgoingQueueManagement_EodResend_Proxy(IMSMQOutgoingQueueManagement *This);", "IMSMQQueueManagement_get_JournalMessageCount_Proxy": "HRESULT WINAPI IMSMQQueueManagement_get_JournalMessageCount_Proxy(IMSMQQueueManagement *This,__LONG32 *plJournalMessageCount);", "IMSMQQueueManagement_get_BytesInJournal_Proxy": "HRESULT WINAPI IMSMQQueueManagement_get_BytesInJournal_Proxy(IMSMQQueueManagement *This,VARIANT *pvBytesInJournal);", "IMSMQQueueManagement_EodGetReceiveInfo_Proxy": "HRESULT WINAPI IMSMQQueueManagement_EodGetReceiveInfo_Proxy(IMSMQQueueManagement *This,VARIANT *pvCollection);", "DeleteIE3Cache": "DWORD       WINAPI DeleteIE3Cache(HWND,HINSTANCE,LPSTR,int);", "GetDiskInfoA": "WINBOOL     WINAPI GetDiskInfoA(PCSTR,PDWORD,PDWORDLONG,PDWORDLONG);", "GetUrlCacheConfigInfoA": "WINBOOL     WINAPI GetUrlCacheConfigInfoA(LPINTERNET_CACHE_CONFIG_INFOA,LPDWORD,DWORD);", "GetUrlCacheConfigInfoW": "WINBOOL     WINAPI GetUrlCacheConfigInfoW(LPINTERNET_CACHE_CONFIG_INFOW,LPDWORD,DWORD);", "IncrementUrlCacheHeaderData": "WINBOOL     WINAPI IncrementUrlCacheHeaderData(DWORD,LPDWORD);", "InternetQueryFortezzaStatus": "WINBOOL     WINAPI InternetQueryFortezzaStatus(DWORD*,DWORD_PTR);", "IsHostInProxyBypassList": "WINBOOL     WINAPI IsHostInProxyBypassList(INTERNET_SCHEME,LPCSTR,DWORD);", "IsUrlCacheEntryExpiredA": "WINBOOL     WINAPI IsUrlCacheEntryExpiredA(LPCSTR,DWORD,FILETIME*);", "IsUrlCacheEntryExpiredW": "WINBOOL     WINAPI IsUrlCacheEntryExpiredW(LPCWSTR,DWORD,FILETIME*);", "ParseX509EncodedCertificateForListBoxEntry": "DWORD       WINAPI ParseX509EncodedCertificateForListBoxEntry(LPBYTE,DWORD,LPSTR,LPDWORD);", "SetUrlCacheConfigInfoA": "WINBOOL     WINAPI SetUrlCacheConfigInfoA(LPINTERNET_CACHE_CONFIG_INFOA,DWORD);", "SetUrlCacheConfigInfoW": "WINBOOL     WINAPI SetUrlCacheConfigInfoW(LPINTERNET_CACHE_CONFIG_INFOW,DWORD);", "InternetGetSecurityInfoByURLA": "WINBOOL     WINAPI InternetGetSecurityInfoByURLA(LPSTR,PCCERT_CHAIN_CONTEXT*,DWORD*);", "InternetGetSecurityInfoByURLW": "WINBOOL     WINAPI InternetGetSecurityInfoByURLW(LPCWSTR,PCCERT_CHAIN_CONTEXT*,DWORD*);", "IRowsetChangeExtInfo_GetOriginalRow_Proxy": "HRESULT WINAPI IRowsetChangeExtInfo_GetOriginalRow_Proxy(IRowsetChangeExtInfo *This,HCHAPTER hReserved,HROW hRow,HROW *phRowOriginal);", "IRowsetChangeExtInfo_GetPendingColumns_Proxy": "HRESULT WINAPI IRowsetChangeExtInfo_GetPendingColumns_Proxy(IRowsetChangeExtInfo *This,HCHAPTER hReserved,HROW hRow,ULONG cColumnOrdinals,const ULONG rgiOrdinals[],DBPENDINGSTATUS rgColumnStatus[]);", "ISQLRequestDiagFields_RequestDiagFields_Proxy": "HRESULT WINAPI ISQLRequestDiagFields_RequestDiagFields_Proxy(ISQLRequestDiagFields *This,ULONG cDiagFields,KAGREQDIAG rgDiagFields[]);", "ISQLGetDiagField_GetDiagField_Proxy": "HRESULT WINAPI ISQLGetDiagField_GetDiagField_Proxy(ISQLGetDiagField *This,KAGGETDIAG *pDiagInfo);", "PeekConsoleInputA": "WINBASEAPI WINBOOL WINAPI PeekConsoleInputA(HANDLE hConsoleInput,PINPUT_RECORD lpBuffer,DWORD nLength,LPDWORD lpNumberOfEventsRead);", "PeekConsoleInputW": "WINBASEAPI WINBOOL WINAPI PeekConsoleInputW(HANDLE hConsoleInput,PINPUT_RECORD lpBuffer,DWORD nLength,LPDWORD lpNumberOfEventsRead);", "ReadConsoleInputA": "WINBASEAPI WINBOOL WINAPI ReadConsoleInputA(HANDLE hConsoleInput,PINPUT_RECORD lpBuffer,DWORD nLength,LPDWORD lpNumberOfEventsRead);", "ReadConsoleInputW": "WINBASEAPI WINBOOL WINAPI ReadConsoleInputW(HANDLE hConsoleInput,PINPUT_RECORD lpBuffer,DWORD nLength,LPDWORD lpNumberOfEventsRead);", "WriteConsoleInputA": "WINBASEAPI WINBOOL WINAPI WriteConsoleInputA(HANDLE hConsoleInput,CONST INPUT_RECORD *lpBuffer,DWORD nLength,LPDWORD lpNumberOfEventsWritten);", "WriteConsoleInputW": "WINBASEAPI WINBOOL WINAPI WriteConsoleInputW(HANDLE hConsoleInput,CONST INPUT_RECORD *lpBuffer,DWORD nLength,LPDWORD lpNumberOfEventsWritten);", "ReadConsoleOutputA": "WINBASEAPI WINBOOL WINAPI ReadConsoleOutputA(HANDLE hConsoleOutput,PCHAR_INFO lpBuffer,COORD dwBufferSize,COORD dwBufferCoord,PSMALL_RECT lpReadRegion);", "ReadConsoleOutputW": "WINBASEAPI WINBOOL WINAPI ReadConsoleOutputW(HANDLE hConsoleOutput,PCHAR_INFO lpBuffer,COORD dwBufferSize,COORD dwBufferCoord,PSMALL_RECT lpReadRegion);", "WriteConsoleOutputA": "WINBASEAPI WINBOOL WINAPI WriteConsoleOutputA(HANDLE hConsoleOutput,CONST CHAR_INFO *lpBuffer,COORD dwBufferSize,COORD dwBufferCoord,PSMALL_RECT lpWriteRegion);", "WriteConsoleOutputW": "WINBASEAPI WINBOOL WINAPI WriteConsoleOutputW(HANDLE hConsoleOutput,CONST CHAR_INFO *lpBuffer,COORD dwBufferSize,COORD dwBufferCoord,PSMALL_RECT lpWriteRegion);", "ReadConsoleOutputCharacterA": "WINBASEAPI WINBOOL WINAPI ReadConsoleOutputCharacterA(HANDLE hConsoleOutput,LPSTR lpCharacter,DWORD nLength,COORD dwReadCoord,LPDWORD lpNumberOfCharsRead);", "ReadConsoleOutputCharacterW": "WINBASEAPI WINBOOL WINAPI ReadConsoleOutputCharacterW(HANDLE hConsoleOutput,LPWSTR lpCharacter,DWORD nLength,COORD dwReadCoord,LPDWORD lpNumberOfCharsRead);", "ReadConsoleOutputAttribute": "WINBASEAPI WINBOOL WINAPI ReadConsoleOutputAttribute(HANDLE hConsoleOutput,LPWORD lpAttribute,DWORD nLength,COORD dwReadCoord,LPDWORD lpNumberOfAttrsRead);", "WriteConsoleOutputCharacterA": "WINBASEAPI WINBOOL WINAPI WriteConsoleOutputCharacterA(HANDLE hConsoleOutput,LPCSTR lpCharacter,DWORD nLength,COORD dwWriteCoord,LPDWORD lpNumberOfCharsWritten);", "WriteConsoleOutputCharacterW": "WINBASEAPI WINBOOL WINAPI WriteConsoleOutputCharacterW(HANDLE hConsoleOutput,LPCWSTR lpCharacter,DWORD nLength,COORD dwWriteCoord,LPDWORD lpNumberOfCharsWritten);", "WriteConsoleOutputAttribute": "WINBASEAPI WINBOOL WINAPI WriteConsoleOutputAttribute(HANDLE hConsoleOutput,CONST WORD *lpAttribute,DWORD nLength,COORD dwWriteCoord,LPDWORD lpNumberOfAttrsWritten);", "FillConsoleOutputCharacterA": "WINBASEAPI WINBOOL WINAPI FillConsoleOutputCharacterA(HANDLE hConsoleOutput,CHAR cCharacter,DWORD nLength,COORD dwWriteCoord,LPDWORD lpNumberOfCharsWritten);", "FillConsoleOutputCharacterW": "WINBASEAPI WINBOOL WINAPI FillConsoleOutputCharacterW(HANDLE hConsoleOutput,WCHAR cCharacter,DWORD nLength,COORD dwWriteCoord,LPDWORD lpNumberOfCharsWritten);", "FillConsoleOutputAttribute": "WINBASEAPI WINBOOL WINAPI FillConsoleOutputAttribute(HANDLE hConsoleOutput,WORD wAttribute,DWORD nLength,COORD dwWriteCoord,LPDWORD lpNumberOfAttrsWritten);", "GetConsoleMode": "WINBASEAPI WINBOOL WINAPI GetConsoleMode(HANDLE hConsoleHandle,LPDWORD lpMode);", "GetNumberOfConsoleInputEvents": "WINBASEAPI WINBOOL WINAPI GetNumberOfConsoleInputEvents(HANDLE hConsoleInput,LPDWORD lpNumberOfEvents);", "GetConsoleScreenBufferInfo": "WINBASEAPI WINBOOL WINAPI GetConsoleScreenBufferInfo(HANDLE hConsoleOutput,PCONSOLE_SCREEN_BUFFER_INFO lpConsoleScreenBufferInfo);", "GetLargestConsoleWindowSize": "WINBASEAPI COORD WINAPI GetLargestConsoleWindowSize(HANDLE hConsoleOutput);", "GetConsoleCursorInfo": "WINBASEAPI WINBOOL WINAPI GetConsoleCursorInfo(HANDLE hConsoleOutput,PCONSOLE_CURSOR_INFO lpConsoleCursorInfo);", "GetCurrentConsoleFont": "WINBASEAPI WINBOOL WINAPI GetCurrentConsoleFont(HANDLE hConsoleOutput,WINBOOL bMaximumWindow,PCONSOLE_FONT_INFO lpConsoleCurrentFont);", "GetConsoleFontSize": "WINBASEAPI COORD WINAPI GetConsoleFontSize(HANDLE hConsoleOutput,DWORD nFont);", "GetConsoleSelectionInfo": "WINBASEAPI WINBOOL WINAPI GetConsoleSelectionInfo(PCONSOLE_SELECTION_INFO lpConsoleSelectionInfo);", "GetNumberOfConsoleMouseButtons": "WINBASEAPI WINBOOL WINAPI GetNumberOfConsoleMouseButtons(LPDWORD lpNumberOfMouseButtons);", "SetConsoleMode": "WINBASEAPI WINBOOL WINAPI SetConsoleMode(HANDLE hConsoleHandle,DWORD dwMode);", "SetConsoleActiveScreenBuffer": "WINBASEAPI WINBOOL WINAPI SetConsoleActiveScreenBuffer(HANDLE hConsoleOutput);", "FlushConsoleInputBuffer": "WINBASEAPI WINBOOL WINAPI FlushConsoleInputBuffer(HANDLE hConsoleInput);", "SetConsoleScreenBufferSize": "WINBASEAPI WINBOOL WINAPI SetConsoleScreenBufferSize(HANDLE hConsoleOutput,COORD dwSize);", "SetConsoleCursorPosition": "WINBASEAPI WINBOOL WINAPI SetConsoleCursorPosition(HANDLE hConsoleOutput,COORD dwCursorPosition);", "SetConsoleCursorInfo": "WINBASEAPI WINBOOL WINAPI SetConsoleCursorInfo(HANDLE hConsoleOutput,CONST CONSOLE_CURSOR_INFO *lpConsoleCursorInfo);", "ScrollConsoleScreenBufferA": "WINBASEAPI WINBOOL WINAPI ScrollConsoleScreenBufferA(HANDLE hConsoleOutput,CONST SMALL_RECT *lpScrollRectangle,CONST SMALL_RECT *lpClipRectangle,COORD dwDestinationOrigin,CONST CHAR_INFO *lpFill);", "ScrollConsoleScreenBufferW": "WINBASEAPI WINBOOL WINAPI ScrollConsoleScreenBufferW(HANDLE hConsoleOutput,CONST SMALL_RECT *lpScrollRectangle,CONST SMALL_RECT *lpClipRectangle,COORD dwDestinationOrigin,CONST CHAR_INFO *lpFill);", "SetConsoleWindowInfo": "WINBASEAPI WINBOOL WINAPI SetConsoleWindowInfo(HANDLE hConsoleOutput,WINBOOL bAbsolute,CONST SMALL_RECT *lpConsoleWindow);", "SetConsoleTextAttribute": "WINBASEAPI WINBOOL WINAPI SetConsoleTextAttribute(HANDLE hConsoleOutput,WORD wAttributes);", "SetConsoleCtrlHandler": "WINBASEAPI WINBOOL WINAPI SetConsoleCtrlHandler(PHANDLER_ROUTINE HandlerRoutine,WINBOOL Add);", "GenerateConsoleCtrlEvent": "WINBASEAPI WINBOOL WINAPI GenerateConsoleCtrlEvent(DWORD dwCtrlEvent,DWORD dwProcessGroupId);", "AllocConsole": "WINBASEAPI WINBOOL WINAPI AllocConsole(VOID);", "FreeConsole": "WINBASEAPI WINBOOL WINAPI FreeConsole(VOID);", "AttachConsole": "WINBASEAPI WINBOOL WINAPI AttachConsole(DWORD dwProcessId);", "GetConsoleTitleA": "WINBASEAPI DWORD WINAPI GetConsoleTitleA(LPSTR lpConsoleTitle,DWORD nSize);", "GetConsoleTitleW": "WINBASEAPI DWORD WINAPI GetConsoleTitleW(LPWSTR lpConsoleTitle,DWORD nSize);", "SetConsoleTitleA": "WINBASEAPI WINBOOL WINAPI SetConsoleTitleA(LPCSTR lpConsoleTitle);", "SetConsoleTitleW": "WINBASEAPI WINBOOL WINAPI SetConsoleTitleW(LPCWSTR lpConsoleTitle);", "ReadConsoleA": "WINBASEAPI WINBOOL WINAPI ReadConsoleA(HANDLE hConsoleInput,LPVOID lpBuffer,DWORD nNumberOfCharsToRead,LPDWORD lpNumberOfCharsRead,LPVOID lpReserved);", "ReadConsoleW": "WINBASEAPI WINBOOL WINAPI ReadConsoleW(HANDLE hConsoleInput,LPVOID lpBuffer,DWORD nNumberOfCharsToRead,LPDWORD lpNumberOfCharsRead,LPVOID lpReserved);", "WriteConsoleA": "WINBASEAPI WINBOOL WINAPI WriteConsoleA(HANDLE hConsoleOutput,CONST VOID *lpBuffer,DWORD nNumberOfCharsToWrite,LPDWORD lpNumberOfCharsWritten,LPVOID lpReserved);", "WriteConsoleW": "WINBASEAPI WINBOOL WINAPI WriteConsoleW(HANDLE hConsoleOutput,CONST VOID *lpBuffer,DWORD nNumberOfCharsToWrite,LPDWORD lpNumberOfCharsWritten,LPVOID lpReserved);", "CreateConsoleScreenBuffer": "WINBASEAPI HANDLE WINAPI CreateConsoleScreenBuffer(DWORD dwDesiredAccess,DWORD dwShareMode,CONST SECURITY_ATTRIBUTES *lpSecurityAttributes,DWORD dwFlags,LPVOID lpScreenBufferData);", "GetConsoleCP": "WINBASEAPI UINT WINAPI GetConsoleCP(VOID);", "SetConsoleCP": "WINBASEAPI WINBOOL WINAPI SetConsoleCP(UINT wCodePageID);", "GetConsoleOutputCP": "WINBASEAPI UINT WINAPI GetConsoleOutputCP(VOID);", "SetConsoleOutputCP": "WINBASEAPI WINBOOL WINAPI SetConsoleOutputCP(UINT wCodePageID);", "GetConsoleDisplayMode": "WINBASEAPI WINBOOL WINAPI GetConsoleDisplayMode(LPDWORD lpModeFlags);", "SetConsoleDisplayMode": "WINBASEAPI WINBOOL WINAPI SetConsoleDisplayMode(HANDLE hConsoleOutput, DWORD dwFlags, PCOORD lpNewScreenBufferDimensions);", "GetConsoleWindow": "WINBASEAPI HWND WINAPI GetConsoleWindow(VOID);", "GetConsoleProcessList": "WINBASEAPI DWORD WINAPI GetConsoleProcessList(LPDWORD lpdwProcessList,DWORD dwProcessCount);", "AddConsoleAliasA": "WINBASEAPI WINBOOL WINAPI AddConsoleAliasA(LPSTR Source,LPSTR Target,LPSTR ExeName);", "AddConsoleAliasW": "WINBASEAPI WINBOOL WINAPI AddConsoleAliasW(LPWSTR Source,LPWSTR Target,LPWSTR ExeName);", "GetConsoleAliasA": "WINBASEAPI DWORD WINAPI GetConsoleAliasA(LPSTR Source,LPSTR TargetBuffer,DWORD TargetBufferLength,LPSTR ExeName);", "GetConsoleAliasW": "WINBASEAPI DWORD WINAPI GetConsoleAliasW(LPWSTR Source,LPWSTR TargetBuffer,DWORD TargetBufferLength,LPWSTR ExeName);", "GetConsoleAliasesLengthA": "WINBASEAPI DWORD WINAPI GetConsoleAliasesLengthA(LPSTR ExeName);", "GetConsoleAliasesLengthW": "WINBASEAPI DWORD WINAPI GetConsoleAliasesLengthW(LPWSTR ExeName);", "GetConsoleAliasExesLengthA": "WINBASEAPI DWORD WINAPI GetConsoleAliasExesLengthA(VOID);", "GetConsoleAliasExesLengthW": "WINBASEAPI DWORD WINAPI GetConsoleAliasExesLengthW(VOID);", "GetConsoleAliasesA": "WINBASEAPI DWORD WINAPI GetConsoleAliasesA(LPSTR AliasBuffer,DWORD AliasBufferLength,LPSTR ExeName);", "GetConsoleAliasesW": "WINBASEAPI DWORD WINAPI GetConsoleAliasesW(LPWSTR AliasBuffer,DWORD AliasBufferLength,LPWSTR ExeName);", "GetConsoleAliasExesA": "WINBASEAPI DWORD WINAPI GetConsoleAliasExesA(LPSTR ExeNameBuffer,DWORD ExeNameBufferLength);", "GetConsoleAliasExesW": "WINBASEAPI DWORD WINAPI GetConsoleAliasExesW(LPWSTR ExeNameBuffer,DWORD ExeNameBufferLength);", "ExpungeConsoleCommandHistoryA": "WINBASEAPI VOID WINAPI ExpungeConsoleCommandHistoryA(LPSTR ExeName);", "ExpungeConsoleCommandHistoryW": "WINBASEAPI VOID WINAPI ExpungeConsoleCommandHistoryW(LPWSTR ExeName);", "SetConsoleNumberOfCommandsA": "WINBASEAPI WINBOOL WINAPI SetConsoleNumberOfCommandsA(DWORD Number, LPSTR ExeName);", "SetConsoleNumberOfCommandsW": "WINBASEAPI WINBOOL WINAPI SetConsoleNumberOfCommandsW(DWORD Number, LPWSTR ExeName);", "GetConsoleCommandHistoryLengthA": "WINBASEAPI DWORD WINAPI GetConsoleCommandHistoryLengthA(LPSTR ExeName);", "GetConsoleCommandHistoryLengthW": "WINBASEAPI DWORD WINAPI GetConsoleCommandHistoryLengthW(LPWSTR ExeName);", "GetConsoleCommandHistoryA": "WINBASEAPI DWORD WINAPI GetConsoleCommandHistoryA(LPSTR Commands, DWORD CommandBufferLength, LPSTR ExeName);", "GetConsoleCommandHistoryW": "WINBASEAPI DWORD WINAPI GetConsoleCommandHistoryW(LPWSTR Commands, DWORD CommandBufferLength, LPWSTR ExeName);", "GetCurrentConsoleFontEx": "WINBASEAPI WINBOOL WINAPI GetCurrentConsoleFontEx(", "SetCurrentConsoleFontEx": "WINBASEAPI WINBOOL WINAPI SetCurrentConsoleFontEx(", "GetConsoleHistoryInfo": "WINBOOL WINAPI GetConsoleHistoryInfo(", "GetConsoleOriginalTitleA": "WINBASEAPI DWORD WINAPI GetConsoleOriginalTitleA(", "GetConsoleOriginalTitleW": "WINBASEAPI DWORD WINAPI GetConsoleOriginalTitleW(", "GetConsoleScreenBufferInfoEx": "WINBASEAPI WINBOOL WINAPI GetConsoleScreenBufferInfoEx(", "SetConsoleHistoryInfo": "WINBASEAPI WINBOOL WINAPI SetConsoleHistoryInfo(", "SetConsoleScreenBufferInfoEx": "WINBASEAPI WINBOOL WINAPI SetConsoleScreenBufferInfoEx(", "CreatePseudoConsole": "WINBASEAPI HRESULT WINAPI CreatePseudoConsole(COORD size, HANDLE hInput, HANDLE hOutput, DWORD dwFlags, HPCON* phPC);", "ResizePseudoConsole": "WINBASEAPI HRESULT WINAPI ResizePseudoConsole(HPCON hPC, COORD size);", "ClosePseudoConsole": "WINBASEAPI VOID WINAPI ClosePseudoConsole(HPCON hPC);", "HttpInitialize": "HTTPAPI_LINKAGE ULONG WINAPI HttpInitialize(HTTPAPI_VERSION Version,ULONG Flags,PVOID pReserved);", "HttpTerminate": "HTTPAPI_LINKAGE ULONG WINAPI HttpTerminate(ULONG Flags,PVOID pReserved);", "HttpCreateHttpHandle": "HTTPAPI_LINKAGE ULONG WINAPI HttpCreateHttpHandle(PHANDLE pReqQueueHandle,ULONG Options);", "HttpReceiveClientCertificate": "HTTPAPI_LINKAGE ULONG WINAPI HttpReceiveClientCertificate(HANDLE ReqQueueHandle,HTTP_CONNECTION_ID ConnectionId,ULONG Flags,PHTTP_SSL_CLIENT_CERT_INFO pSslClientCertInfo,ULONG SslClientCertInfoSize,PULONG pBytesReceived,LPOVERLAPPED pOverlapped);", "HttpAddUrl": "HTTPAPI_LINKAGE ULONG WINAPI HttpAddUrl(HANDLE ReqQueueHandle,PCWSTR pUrlPrefix,PVOID pReserved);", "HttpRemoveUrl": "HTTPAPI_LINKAGE ULONG WINAPI HttpRemoveUrl(HANDLE ReqQueueHandle,PCWSTR pUrlPrefix);", "HttpReceiveHttpRequest": "HTTPAPI_LINKAGE ULONG WINAPI HttpReceiveHttpRequest(HANDLE ReqQueueHandle,HTTP_REQUEST_ID RequestId,ULONG Flags,PHTTP_REQUEST pRequestBuffer,ULONG RequestBufferLength,PULONG pBytesReceived,LPOVERLAPPED pOverlapped);", "HttpReceiveRequestEntityBody": "HTTPAPI_LINKAGE ULONG WINAPI HttpReceiveRequestEntityBody(HANDLE ReqQueueHandle,HTTP_REQUEST_ID RequestId,ULONG Flags,PVOID pBuffer,ULONG BufferLength,PULONG pBytesReceived,LPOVERLAPPED pOverlapped);", "HttpSendHttpResponse": "HTTPAPI_LINKAGE ULONG WINAPI HttpSendHttpResponse(HANDLE ReqQueueHandle,HTTP_REQUEST_ID RequestId,ULONG Flags,PHTTP_RESPONSE pHttpResponse,PVOID pReserved1,PULONG pBytesSent,PVOID pReserved2,ULONG Reserved3,LPOVERLAPPED pOverlapped,PVOID pReserved4);", "HttpSendResponseEntityBody": "HTTPAPI_LINKAGE ULONG WINAPI HttpSendResponseEntityBody(HANDLE ReqQueueHandle,HTTP_REQUEST_ID RequestId,ULONG Flags,USHORT EntityChunkCount,PHTTP_DATA_CHUNK pEntityChunks,PULONG pBytesSent,PVOID pReserved1,ULONG Reserved2,LPOVERLAPPED pOverlapped,PVOID pReserved3);", "HttpWaitForDisconnect": "HTTPAPI_LINKAGE ULONG WINAPI HttpWaitForDisconnect(HANDLE ReqQueueHandle,HTTP_CONNECTION_ID ConnectionId,LPOVERLAPPED pOverlapped);", "HttpFlushResponseCache": "HTTPAPI_LINKAGE ULONG WINAPI HttpFlushResponseCache(HANDLE ReqQueueHandle,PCWSTR pUrlPrefix,ULONG Flags,LPOVERLAPPED pOverlapped);", "HttpAddFragmentToCache": "HTTPAPI_LINKAGE ULONG WINAPI HttpAddFragmentToCache(HANDLE ReqQueueHandle,PCWSTR pUrlPrefix,PHTTP_DATA_CHUNK pDataChunk,PHTTP_CACHE_POLICY pCachePolicy,LPOVERLAPPED pOverlapped);", "HttpReadFragmentFromCache": "HTTPAPI_LINKAGE ULONG WINAPI HttpReadFragmentFromCache(HANDLE ReqQueueHandle,PCWSTR pUrlPrefix,PHTTP_BYTE_RANGE pByteRange,PVOID pBuffer,ULONG BufferLength,PULONG pBytesRead,LPOVERLAPPED pOverlapped);", "HttpSetServiceConfiguration": "HTTPAPI_LINKAGE ULONG WINAPI HttpSetServiceConfiguration(HANDLE ServiceHandle,HTTP_SERVICE_CONFIG_ID ConfigId,PVOID pConfigInformation,ULONG ConfigInformationLength,LPOVERLAPPED pOverlapped);", "HttpDeleteServiceConfiguration": "HTTPAPI_LINKAGE ULONG WINAPI HttpDeleteServiceConfiguration(HANDLE ServiceHandle,HTTP_SERVICE_CONFIG_ID ConfigId,PVOID pConfigInformation,ULONG ConfigInformationLength,LPOVERLAPPED pOverlapped);", "HttpQueryServiceConfiguration": "HTTPAPI_LINKAGE ULONG WINAPI HttpQueryServiceConfiguration(HANDLE ServiceHandle,HTTP_SERVICE_CONFIG_ID ConfigId,PVOID pInputConfigInformation,ULONG InputConfigInformationLength,PVOID pOutputConfigInformation,ULONG OutputConfigInformationLength,PULONG pReturnLength,LPOVERLAPPED pOverlapped);", "HttpSetRequestQueueProperty": "HTTPAPI_LINKAGE ULONG WINAPI HttpSetRequestQueueProperty(HANDLE Handle,HTTP_SERVER_PROPERTY Property,PVOID pPropertyInformation,ULONG PropertyInformationLength,ULONG Reserved,PVOID pReserved);", "HttpQueryRequestQueueProperty": "HTTPAPI_LINKAGE ULONG WINAPI HttpQueryRequestQueueProperty(HANDLE Handle,HTTP_SERVER_PROPERTY Property,PVOID pPropertyInformation,ULONG PropertyInformationLength,ULONG Reserved,PULONG pReturnLength,PVOID pReserved);", "HttpCreateRequestQueue": "HTTPAPI_LINKAGE ULONG WINAPI HttpCreateRequestQueue(HTTPAPI_VERSION Version,PCWSTR pName,PSECURITY_ATTRIBUTES pSecurityAttributes,ULONG Flags,PHANDLE pReqQueueHandle);", "HttpAddUrlToUrlGroup": "HTTPAPI_LINKAGE ULONG WINAPI HttpAddUrlToUrlGroup(HTTP_URL_GROUP_ID UrlGroupId,PCWSTR pFullyQualifiedUrl,HTTP_URL_CONTEXT UrlContext,ULONG Reserved);", "HttpCancelHttpRequest": "HTTPAPI_LINKAGE ULONG WINAPI HttpCancelHttpRequest(HANDLE ReqQueueHandle,HTTP_REQUEST_ID RequestId,LPOVERLAPPED pOverlapped);", "HttpCloseRequestQueue": "HTTPAPI_LINKAGE ULONG WINAPI HttpCloseRequestQueue(HANDLE ReqQueueHandle);", "HttpCloseServerSession": "HTTPAPI_LINKAGE ULONG WINAPI HttpCloseServerSession(HTTP_SERVER_SESSION_ID ServerSessionId);", "HttpCloseUrlGroup": "HTTPAPI_LINKAGE ULONG WINAPI HttpCloseUrlGroup(HTTP_URL_GROUP_ID UrlGroupId);", "HttpCreateServerSession": "HTTPAPI_LINKAGE ULONG WINAPI HttpCreateServerSession(HTTPAPI_VERSION Version,PHTTP_SERVER_SESSION_ID pServerSessionId,ULONG Reserved);", "HttpCreateUrlGroup": "HTTPAPI_LINKAGE ULONG WINAPI HttpCreateUrlGroup(HTTP_SERVER_SESSION_ID ServerSessionId,PHTTP_URL_GROUP_ID pUrlGroupId,ULONG Reserved);", "HttpQueryServerSessionProperty": "HTTPAPI_LINKAGE ULONG WINAPI HttpQueryServerSessionProperty(HTTP_SERVER_SESSION_ID ServerSessionId,HTTP_SERVER_PROPERTY Property,PVOID pPropertyInformation,ULONG PropertyInformationLength,PULONG pReturnLength);", "HttpQueryUrlGroupProperty": "HTTPAPI_LINKAGE ULONG WINAPI HttpQueryUrlGroupProperty(HTTP_URL_GROUP_ID UrlGroupId,HTTP_SERVER_PROPERTY Property,PVOID pPropertyInformation,ULONG PropertyInformationLength,PULONG pReturnLength);", "HttpRemoveUrlFromUrlGroup": "HTTPAPI_LINKAGE ULONG WINAPI HttpRemoveUrlFromUrlGroup(HTTP_URL_GROUP_ID UrlGroupId,PCWSTR pFullyQualifiedUrl,ULONG Flags);", "HttpSetServerSessionProperty": "HTTPAPI_LINKAGE ULONG WINAPI HttpSetServerSessionProperty(HTTP_SERVER_SESSION_ID ServerSessionId,HTTP_SERVER_PROPERTY Property,PVOID pPropertyInformation,ULONG PropertyInformationLength);", "HttpSetUrlGroupProperty": "HTTPAPI_LINKAGE ULONG WINAPI HttpSetUrlGroupProperty(HTTP_URL_GROUP_ID UrlGroupId,HTTP_SERVER_PROPERTY Property,PVOID pPropertyInformation,ULONG PropertyInformationLength);", "HttpShutdownRequestQueue": "HTTPAPI_LINKAGE ULONG WINAPI HttpShutdownRequestQueue(HANDLE ReqQueueHandle);", "HttpWaitForDemandStart": "HTTPAPI_LINKAGE ULONG WINAPI HttpWaitForDemandStart(HANDLE ReqQueueHandle,LPOVERLAPPED pOverlapped);", "DMORegister": "HRESULT WINAPI DMORegister(LPCWSTR,REFCLSID,REFGUID,DWORD,DWORD,const DMO_PARTIAL_MEDIATYPE*,", "DMOUnregister": "HRESULT WINAPI DMOUnregister(REFCLSID,REFGUID);", "DMOEnum": "HRESULT WINAPI DMOEnum(REFGUID,DWORD,DWORD,const DMO_PARTIAL_MEDIATYPE*,DWORD,", "DMOGetTypes": "HRESULT WINAPI DMOGetTypes(REFCLSID,ULONG,ULONG*,DMO_PARTIAL_MEDIATYPE*,", "DMOGetName": "HRESULT WINAPI DMOGetName(REFCLSID,WCHAR[80]);", "PeerGraphStartup": "HRESULT WINAPI PeerGraphStartup (WORD wVersionRequested, PPEER_VERSION_DATA pVersionData);", "PeerGraphShutdown": "HRESULT WINAPI PeerGraphShutdown ();", "PeerGraphFreeData": "VOID WINAPI PeerGraphFreeData (PVOID pvData);", "PeerGraphGetItemCount": "HRESULT WINAPI PeerGraphGetItemCount (HPEERENUM hPeerEnum, ULONG *pCount);", "PeerGraphGetNextItem": "HRESULT WINAPI PeerGraphGetNextItem (HPEERENUM hPeerEnum, ULONG *pCount, PVOID **pppvItems);", "PeerGraphEndEnumeration": "HRESULT WINAPI PeerGraphEndEnumeration (HPEERENUM hPeerEnum);", "PeerGraphCreate": "HRESULT WINAPI PeerGraphCreate (PPEER_GRAPH_PROPERTIES pGraphProperties, PCWSTR pwzDatabaseName, PPEER_SECURITY_INTERFACE pSecurityInterface, HGRAPH *phGraph);", "PeerGraphOpen": "HRESULT WINAPI PeerGraphOpen (PCWSTR pwzGraphId, PCWSTR pwzPeerId, PCWSTR pwzDatabaseName, PPEER_SECURITY_INTERFACE pSecurityInterface, ULONG cRecordTypeSyncPrecedence, const GUID *pRecordTypeSyncPrecedence, HGRAPH *phGraph);", "PeerGraphListen": "HRESULT WINAPI PeerGraphListen (HGRAPH hGraph, DWORD dwScope, DWORD dwScopeId, WORD wPort);", "PeerGraphConnect": "HRESULT WINAPI PeerGraphConnect (HGRAPH hGraph, PCWSTR pwzPeerId, PPEER_ADDRESS pAddress, ULONGLONG *pullConnectionId);", "PeerGraphClose": "HRESULT WINAPI PeerGraphClose (HGRAPH hGraph);", "PeerGraphDelete": "HRESULT WINAPI PeerGraphDelete (PCWSTR pwzGraphId, PCWSTR pwzPeerId, PCWSTR pwzDatabaseName);", "PeerGraphGetStatus": "HRESULT WINAPI PeerGraphGetStatus (HGRAPH hGraph, DWORD *pdwStatus);", "PeerGraphGetProperties": "HRESULT WINAPI PeerGraphGetProperties (HGRAPH hGraph, PPEER_GRAPH_PROPERTIES *ppGraphProperties);", "PeerGraphSetProperties": "HRESULT WINAPI PeerGraphSetProperties (HGRAPH hGraph, PPEER_GRAPH_PROPERTIES pGraphProperties);", "PeerGraphRegisterEvent": "HRESULT WINAPI PeerGraphRegisterEvent (HGRAPH hGraph, HANDLE hEvent, ULONG cEventRegistrations, PEER_GRAPH_EVENT_REGISTRATION *pEventRegistrations, HPEEREVENT *phPeerEvent);", "PeerGraphUnregisterEvent": "HRESULT WINAPI PeerGraphUnregisterEvent (HPEEREVENT hPeerEvent);", "PeerGraphGetEventData": "HRESULT WINAPI PeerGraphGetEventData (HPEEREVENT hPeerEvent, PPEER_GRAPH_EVENT_DATA *ppEventData);", "PeerGraphGetRecord": "HRESULT WINAPI PeerGraphGetRecord (HGRAPH hGraph, const GUID *pRecordId, PPEER_RECORD *ppRecord);", "PeerGraphAddRecord": "HRESULT WINAPI PeerGraphAddRecord (HGRAPH hGraph, PPEER_RECORD pRecord, GUID *pRecordId);", "PeerGraphUpdateRecord": "HRESULT WINAPI PeerGraphUpdateRecord (HGRAPH hGraph, PPEER_RECORD pRecord);", "PeerGraphDeleteRecord": "HRESULT WINAPI PeerGraphDeleteRecord (HGRAPH hGraph, const GUID *pRecordId, WINBOOL fLocal);", "PeerGraphEnumRecords": "HRESULT WINAPI PeerGraphEnumRecords (HGRAPH hGraph, const GUID *pRecordType, PCWSTR pwzPeerId, HPEERENUM *phPeerEnum);", "PeerGraphSearchRecords": "HRESULT WINAPI PeerGraphSearchRecords (HGRAPH hGraph, PCWSTR pwzCriteria, HPEERENUM *phPeerEnum);", "PeerGraphExportDatabase": "HRESULT WINAPI PeerGraphExportDatabase (HGRAPH hGraph, PCWSTR pwzFilePath);", "PeerGraphImportDatabase": "HRESULT WINAPI PeerGraphImportDatabase (HGRAPH hGraph, PCWSTR pwzFilePath);", "PeerGraphValidateDeferredRecords": "HRESULT WINAPI PeerGraphValidateDeferredRecords (HGRAPH hGraph, ULONG cRecordIds, const GUID *pRecordIds);", "PeerGraphOpenDirectConnection": "HRESULT WINAPI PeerGraphOpenDirectConnection (HGRAPH hGraph, PCWSTR pwzPeerId, PPEER_ADDRESS pAddress, ULONGLONG *pullConnectionId);", "PeerGraphSendData": "HRESULT WINAPI PeerGraphSendData (HGRAPH hGraph, ULONGLONG ullConnectionId, const GUID *pType, ULONG cbData, PVOID pvData);", "PeerGraphCloseDirectConnection": "HRESULT WINAPI PeerGraphCloseDirectConnection (HGRAPH hGraph, ULONGLONG ullConnectionId);", "PeerGraphEnumConnections": "HRESULT WINAPI PeerGraphEnumConnections (HGRAPH hGraph, DWORD dwFlags, HPEERENUM *phPeerEnum);", "PeerGraphEnumNodes": "HRESULT WINAPI PeerGraphEnumNodes (HGRAPH hGraph, PCWSTR pwzPeerId, HPEERENUM *phPeerEnum);", "PeerGraphSetPresence": "HRESULT WINAPI PeerGraphSetPresence (HGRAPH hGraph, WINBOOL fPresent);", "PeerGraphGetNodeInfo": "HRESULT WINAPI PeerGraphGetNodeInfo (HGRAPH hGraph, ULONGLONG ullNodeId, PPEER_NODE_INFO *ppNodeInfo);", "PeerGraphSetNodeAttributes": "HRESULT WINAPI PeerGraphSetNodeAttributes (HGRAPH hGraph, PCWSTR pwzAttributes);", "PeerGraphPeerTimeToUniversalTime": "HRESULT WINAPI PeerGraphPeerTimeToUniversalTime (HGRAPH hGraph, FILETIME *pftPeerTime, FILETIME *pftUniversalTime);", "PeerGraphUniversalTimeToPeerTime": "HRESULT WINAPI PeerGraphUniversalTimeToPeerTime (HGRAPH hGraph, FILETIME *pftUniversalTime, FILETIME *pftPeerTime);", "PeerFreeData": "VOID WINAPI PeerFreeData (LPCVOID pvData);", "PeerGetItemCount": "HRESULT WINAPI PeerGetItemCount (HPEERENUM hPeerEnum, ULONG *pCount);", "PeerGetNextItem": "HRESULT WINAPI PeerGetNextItem (HPEERENUM hPeerEnum, ULONG *pCount, PVOID **pppvItems);", "PeerEndEnumeration": "HRESULT WINAPI PeerEndEnumeration (HPEERENUM hPeerEnum);", "PeerGroupStartup": "HRESULT WINAPI PeerGroupStartup (WORD wVersionRequested, PPEER_VERSION_DATA pVersionData);", "PeerGroupShutdown": "HRESULT WINAPI PeerGroupShutdown ();", "PeerGroupCreate": "HRESULT WINAPI PeerGroupCreate (PPEER_GROUP_PROPERTIES pProperties, HGROUP *phGroup);", "PeerGroupOpen": "HRESULT WINAPI PeerGroupOpen (PCWSTR pwzIdentity, PCWSTR pwzGroupPeerName, PCWSTR pwzCloud, HGROUP *phGroup);", "PeerGroupJoin": "HRESULT WINAPI PeerGroupJoin (PCWSTR pwzIdentity, PCWSTR pwzInvitation, PCWSTR pwzCloud, HGROUP *phGroup);", "PeerGroupConnect": "HRESULT WINAPI PeerGroupConnect (HGROUP hGroup);", "PeerGroupClose": "HRESULT WINAPI PeerGroupClose (HGROUP hGroup);", "PeerGroupDelete": "HRESULT WINAPI PeerGroupDelete (PCWSTR pwzIdentity, PCWSTR pwzGroupPeerName);", "PeerGroupCreateInvitation": "HRESULT WINAPI PeerGroupCreateInvitation (HGROUP hGroup, PCWSTR pwzIdentityInfo, FILETIME *pftExpiration, ULONG cRoles, const GUID *pRoles, PWSTR *ppwzInvitation);", "PeerGroupParseInvitation": "HRESULT WINAPI PeerGroupParseInvitation (PCWSTR pwzInvitation, PPEER_INVITATION_INFO *ppInvitationInfo);", "PeerGroupGetStatus": "HRESULT WINAPI PeerGroupGetStatus (HGROUP hGroup, DWORD *pdwStatus);", "PeerGroupGetProperties": "HRESULT WINAPI PeerGroupGetProperties (HGROUP hGroup, PPEER_GROUP_PROPERTIES *ppProperties);", "PeerGroupSetProperties": "HRESULT WINAPI PeerGroupSetProperties (HGROUP hGroup, PPEER_GROUP_PROPERTIES pProperties);", "PeerGroupEnumMembers": "HRESULT WINAPI PeerGroupEnumMembers (HGROUP hGroup, DWORD dwFlags, PCWSTR pwzIdentity, HPEERENUM *phPeerEnum);", "PeerGroupOpenDirectConnection": "HRESULT WINAPI PeerGroupOpenDirectConnection (HGROUP hGroup, PCWSTR pwzIdentity, PPEER_ADDRESS pAddress, ULONGLONG *pullConnectionId);", "PeerGroupCloseDirectConnection": "HRESULT WINAPI PeerGroupCloseDirectConnection (HGROUP hGroup, ULONGLONG ullConnectionId);", "PeerGroupEnumConnections": "HRESULT WINAPI PeerGroupEnumConnections (HGROUP hGroup, DWORD dwFlags, HPEERENUM *phPeerEnum);", "PeerGroupSendData": "HRESULT WINAPI PeerGroupSendData (HGROUP hGroup, ULONGLONG ullConnectionId, const GUID *pType, ULONG cbData, PVOID pvData);", "PeerGroupRegisterEvent": "HRESULT WINAPI PeerGroupRegisterEvent (HGROUP hGroup, HANDLE hEvent, DWORD cEventRegistration, PEER_GROUP_EVENT_REGISTRATION *pEventRegistrations, HPEEREVENT *phPeerEvent);", "PeerGroupUnregisterEvent": "HRESULT WINAPI PeerGroupUnregisterEvent (HPEEREVENT hPeerEvent);", "PeerGroupGetEventData": "HRESULT WINAPI PeerGroupGetEventData (HPEEREVENT hPeerEvent, PPEER_GROUP_EVENT_DATA *ppEventData);", "PeerGroupGetRecord": "HRESULT WINAPI PeerGroupGetRecord (HGROUP hGroup, const GUID *pRecordId, PPEER_RECORD *ppRecord);", "PeerGroupAddRecord": "HRESULT WINAPI PeerGroupAddRecord (HGROUP hGroup, PPEER_RECORD pRecord, GUID *pRecordId);", "PeerGroupUpdateRecord": "HRESULT WINAPI PeerGroupUpdateRecord (HGROUP hGroup, PPEER_RECORD pRecord);", "PeerGroupDeleteRecord": "HRESULT WINAPI PeerGroupDeleteRecord (HGROUP hGroup, const GUID *pRecordId);", "PeerGroupEnumRecords": "HRESULT WINAPI PeerGroupEnumRecords (HGROUP hGroup, const GUID *pRecordType, HPEERENUM *phPeerEnum);", "PeerGroupSearchRecords": "HRESULT WINAPI PeerGroupSearchRecords (HGROUP hGroup, PCWSTR pwzCriteria, HPEERENUM *phPeerEnum);", "PeerGroupExportDatabase": "HRESULT WINAPI PeerGroupExportDatabase (HGROUP hGroup, PCWSTR pwzFilePath);", "PeerGroupImportDatabase": "HRESULT WINAPI PeerGroupImportDatabase (HGROUP hGroup, PCWSTR pwzFilePath);", "PeerGroupIssueCredentials": "HRESULT WINAPI PeerGroupIssueCredentials (HGROUP hGroup, PCWSTR pwzSubjectIdentity, PEER_CREDENTIAL_INFO *pCredentialInfo, DWORD dwFlags, PWSTR *ppwzInvitation);", "PeerGroupExportConfig": "HRESULT WINAPI PeerGroupExportConfig (HGROUP hGroup, PCWSTR pwzPassword, PWSTR *ppwzXML);", "PeerGroupImportConfig": "HRESULT WINAPI PeerGroupImportConfig (PCWSTR pwzXML, PCWSTR pwzPassword, WINBOOL fOverwrite, PWSTR *ppwzIdentity, PWSTR *ppwzGroup);", "PeerGroupPeerTimeToUniversalTime": "HRESULT WINAPI PeerGroupPeerTimeToUniversalTime (HGROUP hGroup, FILETIME *pftPeerTime, FILETIME *pftUniversalTime);", "PeerGroupUniversalTimeToPeerTime": "HRESULT WINAPI PeerGroupUniversalTimeToPeerTime (HGROUP hGroup, FILETIME *pftUniversalTime, FILETIME *pftPeerTime);", "PeerGroupPasswordJoin": "HRESULT WINAPI PeerGroupPasswordJoin (PCWSTR pwzIdentity, PCWSTR pwzInvitation, PCWSTR pwzPassword, PCWSTR pwzCloud, HGROUP *phGroup);", "PeerGroupConnectByAddress": "HRESULT WINAPI PeerGroupConnectByAddress (HGROUP hGroup, ULONG cAddresses, PPEER_ADDRESS pAddresses);", "PeerGroupCreatePasswordInvitation": "HRESULT WINAPI PeerGroupCreatePasswordInvitation (HGROUP hGroup, PWSTR *ppwzInvitation);", "PeerGroupResumePasswordAuthentication": "HRESULT WINAPI PeerGroupResumePasswordAuthentication (HGROUP hGroup, HPEEREVENT hPeerEventHandle);", "PeerIdentityCreate": "HRESULT WINAPI PeerIdentityCreate (PCWSTR pwzClassifier, PCWSTR pwzFriendlyName, HCRYPTPROV hCryptProv, PWSTR *ppwzIdentity);", "PeerIdentityGetFriendlyName": "HRESULT WINAPI PeerIdentityGetFriendlyName (PCWSTR pwzIdentity, PWSTR *ppwzFriendlyName);", "PeerIdentitySetFriendlyName": "HRESULT WINAPI PeerIdentitySetFriendlyName (PCWSTR pwzIdentity, PCWSTR pwzFriendlyName);", "PeerIdentityGetCryptKey": "HRESULT WINAPI PeerIdentityGetCryptKey (PCWSTR pwzIdentity, HCRYPTPROV *phCryptProv);", "PeerIdentityDelete": "HRESULT WINAPI PeerIdentityDelete (PCWSTR pwzIdentity);", "PeerEnumIdentities": "HRESULT WINAPI PeerEnumIdentities (HPEERENUM *phPeerEnum);", "PeerEnumGroups": "HRESULT WINAPI PeerEnumGroups (PCWSTR pwzIdentity, HPEERENUM *phPeerEnum);", "PeerCreatePeerName": "HRESULT WINAPI PeerCreatePeerName (PCWSTR pwzIdentity, PCWSTR pwzClassifier, PWSTR *ppwzPeerName);", "PeerIdentityGetXML": "HRESULT WINAPI PeerIdentityGetXML (PCWSTR pwzIdentity, PWSTR *ppwzIdentityXML);", "PeerIdentityExport": "HRESULT WINAPI PeerIdentityExport (PCWSTR pwzIdentity, PCWSTR pwzPassword, PWSTR *ppwzExportXML);", "PeerIdentityImport": "HRESULT WINAPI PeerIdentityImport (PCWSTR pwzImportXML, PCWSTR pwzPassword, PWSTR *ppwzIdentity);", "PeerIdentityGetDefault": "HRESULT WINAPI PeerIdentityGetDefault (PWSTR *ppwzPeerName);", "PeerCollabStartup": "HRESULT WINAPI PeerCollabStartup (WORD wVersionRequested);", "PeerCollabShutdown": "HRESULT WINAPI PeerCollabShutdown ();", "PeerCollabSignin": "HRESULT WINAPI PeerCollabSignin (HWND hwndParent, DWORD dwSigninOptions);", "PeerCollabSignout": "HRESULT WINAPI PeerCollabSignout (DWORD dwSigninOptions);", "PeerCollabGetSigninOptions": "HRESULT WINAPI PeerCollabGetSigninOptions (DWORD *pdwSigninOptions);", "PeerCollabAsyncInviteContact": "HRESULT WINAPI PeerCollabAsyncInviteContact (PCPEER_CONTACT pcContact, PCPEER_ENDPOINT pcEndpoint, PCPEER_INVITATION pcInvitation, HANDLE hEvent, HANDLE *phInvitation);", "PeerCollabGetInvitationResponse": "HRESULT WINAPI PeerCollabGetInvitationResponse (HANDLE hInvitation, PPEER_INVITATION_RESPONSE *ppInvitationResponse);", "PeerCollabCancelInvitation": "HRESULT WINAPI PeerCollabCancelInvitation (HANDLE hInvitation);", "PeerCollabCloseHandle": "HRESULT WINAPI PeerCollabCloseHandle (HANDLE hInvitation);", "PeerCollabInviteContact": "HRESULT WINAPI PeerCollabInviteContact (PCPEER_CONTACT pcContact, PCPEER_ENDPOINT pcEndpoint, PCPEER_INVITATION pcInvitation, PPEER_INVITATION_RESPONSE *ppResponse);", "PeerCollabAsyncInviteEndpoint": "HRESULT WINAPI PeerCollabAsyncInviteEndpoint (PCPEER_ENDPOINT pcEndpoint, PCPEER_INVITATION pcInvitation, HANDLE hEvent, HANDLE *phInvitation);", "PeerCollabInviteEndpoint": "HRESULT WINAPI PeerCollabInviteEndpoint (PCPEER_ENDPOINT pcEndpoint, PCPEER_INVITATION pcInvitation, PPEER_INVITATION_RESPONSE *ppResponse);", "PeerCollabGetAppLaunchInfo": "HRESULT WINAPI PeerCollabGetAppLaunchInfo (PPEER_APP_LAUNCH_INFO *ppLaunchInfo);", "PeerCollabRegisterApplication": "HRESULT WINAPI PeerCollabRegisterApplication (PCPEER_APPLICATION_REGISTRATION_INFO pcApplication, PEER_APPLICATION_REGISTRATION_TYPE registrationType);", "PeerCollabUnregisterApplication": "HRESULT WINAPI PeerCollabUnregisterApplication (const GUID *pApplicationId, PEER_APPLICATION_REGISTRATION_TYPE registrationType);", "PeerCollabGetApplicationRegistrationInfo": "HRESULT WINAPI PeerCollabGetApplicationRegistrationInfo (const GUID *pApplicationId, PEER_APPLICATION_REGISTRATION_TYPE registrationType, PPEER_APPLICATION_REGISTRATION_INFO *ppApplication);", "PeerCollabEnumApplicationRegistrationInfo": "HRESULT WINAPI PeerCollabEnumApplicationRegistrationInfo (PEER_APPLICATION_REGISTRATION_TYPE registrationType, HPEERENUM *phPeerEnum);", "PeerCollabGetPresenceInfo": "HRESULT WINAPI PeerCollabGetPresenceInfo (PCPEER_ENDPOINT pcEndpoint, PPEER_PRESENCE_INFO *ppPresenceInfo);", "PeerCollabEnumApplications": "HRESULT WINAPI PeerCollabEnumApplications (PCPEER_ENDPOINT pcEndpoint, const GUID *pApplicationId, HPEERENUM *phPeerEnum);", "PeerCollabEnumObjects": "HRESULT WINAPI PeerCollabEnumObjects (PCPEER_ENDPOINT pcEndpoint, const GUID *pObjectId, HPEERENUM *phPeerEnum);", "PeerCollabEnumEndpoints": "HRESULT WINAPI PeerCollabEnumEndpoints (PCPEER_CONTACT pcContact, HPEERENUM *phPeerEnum);", "PeerCollabRefreshEndpointData": "HRESULT WINAPI PeerCollabRefreshEndpointData (PCPEER_ENDPOINT pcEndpoint);", "PeerCollabDeleteEndpointData": "HRESULT WINAPI PeerCollabDeleteEndpointData (PCPEER_ENDPOINT pcEndpoint);", "PeerCollabQueryContactData": "HRESULT WINAPI PeerCollabQueryContactData (PCPEER_ENDPOINT pcEndpoint, PWSTR *ppwzContactData);", "PeerCollabSubscribeEndpointData": "HRESULT WINAPI PeerCollabSubscribeEndpointData (const PCPEER_ENDPOINT pcEndpoint);", "PeerCollabUnsubscribeEndpointData": "HRESULT WINAPI PeerCollabUnsubscribeEndpointData (const PCPEER_ENDPOINT pcEndpoint);", "PeerCollabSetPresenceInfo": "HRESULT WINAPI PeerCollabSetPresenceInfo (PCPEER_PRESENCE_INFO pcPresenceInfo);", "PeerCollabGetEndpointName": "HRESULT WINAPI PeerCollabGetEndpointName (PWSTR *ppwzEndpointName);", "PeerCollabSetEndpointName": "HRESULT WINAPI PeerCollabSetEndpointName (PCWSTR pwzEndpointName);", "PeerCollabSetObject": "HRESULT WINAPI PeerCollabSetObject (PCPEER_OBJECT pcObject);", "PeerCollabDeleteObject": "HRESULT WINAPI PeerCollabDeleteObject (const GUID *pObjectId);", "PeerCollabRegisterEvent": "HRESULT WINAPI PeerCollabRegisterEvent (HANDLE hEvent, DWORD cEventRegistration, PEER_COLLAB_EVENT_REGISTRATION *pEventRegistrations, HPEEREVENT *phPeerEvent);", "PeerCollabGetEventData": "HRESULT WINAPI PeerCollabGetEventData (HPEEREVENT hPeerEvent, PPEER_COLLAB_EVENT_DATA *ppEventData);", "PeerCollabUnregisterEvent": "HRESULT WINAPI PeerCollabUnregisterEvent (HPEEREVENT hPeerEvent);", "PeerCollabEnumPeopleNearMe": "HRESULT WINAPI PeerCollabEnumPeopleNearMe (HPEERENUM *phPeerEnum);", "PeerCollabAddContact": "HRESULT WINAPI PeerCollabAddContact (PCWSTR pwzContactData, PPEER_CONTACT *ppContact);", "PeerCollabDeleteContact": "HRESULT WINAPI PeerCollabDeleteContact (PCWSTR pwzPeerName);", "PeerCollabGetContact": "HRESULT WINAPI PeerCollabGetContact (PCWSTR pwzPeerName, PPEER_CONTACT *ppContact);", "PeerCollabUpdateContact": "HRESULT WINAPI PeerCollabUpdateContact (PCPEER_CONTACT pContact);", "PeerCollabEnumContacts": "HRESULT WINAPI PeerCollabEnumContacts (HPEERENUM *phPeerEnum);", "PeerCollabExportContact": "HRESULT WINAPI PeerCollabExportContact (PCWSTR pwzPeerName, PWSTR *ppwzContactData);", "PeerCollabParseContact": "HRESULT WINAPI PeerCollabParseContact (PCWSTR pwzContactData, PPEER_CONTACT *ppContact);", "PeerNameToPeerHostName": "HRESULT WINAPI PeerNameToPeerHostName (PCWSTR pwzPeerName, PWSTR *ppwzHostName);", "PeerHostNameToPeerName": "HRESULT WINAPI PeerHostNameToPeerName (PCWSTR pwzHostName, PWSTR *ppwzPeerName);", "PeerPnrpStartup": "HRESULT WINAPI PeerPnrpStartup (WORD wVersionRequested);", "PeerPnrpShutdown": "HRESULT WINAPI PeerPnrpShutdown ();", "PeerPnrpRegister": "HRESULT WINAPI PeerPnrpRegister (PCWSTR pcwzPeerName, PPEER_PNRP_REGISTRATION_INFO pRegistrationInfo, HREGISTRATION *phRegistration);", "PeerPnrpUpdateRegistration": "HRESULT WINAPI PeerPnrpUpdateRegistration (HREGISTRATION hRegistration, PPEER_PNRP_REGISTRATION_INFO pRegistrationInfo);", "PeerPnrpUnregister": "HRESULT WINAPI PeerPnrpUnregister (HREGISTRATION hRegistration);", "PeerPnrpResolve": "HRESULT WINAPI PeerPnrpResolve (PCWSTR pcwzPeerName, PCWSTR pcwzCloudName, ULONG *pcEndpoints, PPEER_PNRP_ENDPOINT_INFO *ppEndpoints);", "PeerPnrpStartResolve": "HRESULT WINAPI PeerPnrpStartResolve (PCWSTR pcwzPeerName, PCWSTR pcwzCloudName, ULONG cMaxEndpoints, HANDLE hEvent, HRESOLUTION *phResolve);", "PeerPnrpGetCloudInfo": "HRESULT WINAPI PeerPnrpGetCloudInfo (ULONG *pcNumClouds, PPEER_PNRP_CLOUD_INFO *ppCloudInfo);", "PeerPnrpGetEndpoint": "HRESULT WINAPI PeerPnrpGetEndpoint (HRESOLUTION hResolve, PPEER_PNRP_ENDPOINT_INFO *ppEndpoint);", "PeerPnrpEndResolve": "HRESULT WINAPI PeerPnrpEndResolve (HRESOLUTION hResolve);", "ISdoMachine_Attach_Proxy": "HRESULT WINAPI ISdoMachine_Attach_Proxy(ISdoMachine *This,BSTR bstrComputerName);", "ISdoMachine_GetDictionarySDO_Proxy": "HRESULT WINAPI ISdoMachine_GetDictionarySDO_Proxy(ISdoMachine *This,IUnknown **ppDictionarySDO);", "ISdoMachine_GetServiceSDO_Proxy": "HRESULT WINAPI ISdoMachine_GetServiceSDO_Proxy(ISdoMachine *This,IASDATASTORE eDataStore,BSTR bstrServiceName,IUnknown **ppServiceSDO);", "ISdoMachine_GetUserSDO_Proxy": "HRESULT WINAPI ISdoMachine_GetUserSDO_Proxy(ISdoMachine *This,IASDATASTORE eDataStore,BSTR bstrUserName,IUnknown **ppUserSDO);", "ISdoMachine_GetOSType_Proxy": "HRESULT WINAPI ISdoMachine_GetOSType_Proxy(ISdoMachine *This,IASOSTYPE *eOSType);", "ISdoMachine_GetDomainType_Proxy": "HRESULT WINAPI ISdoMachine_GetDomainType_Proxy(ISdoMachine *This,IASDOMAINTYPE *eDomainType);", "ISdoMachine_IsDirectoryAvailable_Proxy": "HRESULT WINAPI ISdoMachine_IsDirectoryAvailable_Proxy(ISdoMachine *This,VARIANT_BOOL *boolDirectoryAvailable);", "ISdoMachine_GetAttachedComputer_Proxy": "HRESULT WINAPI ISdoMachine_GetAttachedComputer_Proxy(ISdoMachine *This,BSTR *bstrComputerName);", "ISdoMachine_GetSDOSchema_Proxy": "HRESULT WINAPI ISdoMachine_GetSDOSchema_Proxy(ISdoMachine *This,IUnknown **ppSDOSchema);", "ISdoServiceControl_StartService_Proxy": "HRESULT WINAPI ISdoServiceControl_StartService_Proxy(ISdoServiceControl *This);", "ISdoServiceControl_StopService_Proxy": "HRESULT WINAPI ISdoServiceControl_StopService_Proxy(ISdoServiceControl *This);", "ISdoServiceControl_GetServiceStatus_Proxy": "HRESULT WINAPI ISdoServiceControl_GetServiceStatus_Proxy(ISdoServiceControl *This,LONG *status);", "ISdoServiceControl_ResetService_Proxy": "HRESULT WINAPI ISdoServiceControl_ResetService_Proxy(ISdoServiceControl *This);", "ISdo_GetPropertyInfo_Proxy": "HRESULT WINAPI ISdo_GetPropertyInfo_Proxy(ISdo *This,LONG Id,IUnknown **ppPropertyInfo);", "ISdo_GetProperty_Proxy": "HRESULT WINAPI ISdo_GetProperty_Proxy(ISdo *This,LONG Id,VARIANT *pValue);", "ISdo_PutProperty_Proxy": "HRESULT WINAPI ISdo_PutProperty_Proxy(ISdo *This,LONG Id,VARIANT *pValue);", "ISdo_ResetProperty_Proxy": "HRESULT WINAPI ISdo_ResetProperty_Proxy(ISdo *This,LONG Id);", "ISdo_Apply_Proxy": "HRESULT WINAPI ISdo_Apply_Proxy(ISdo *This);", "ISdo_Restore_Proxy": "HRESULT WINAPI ISdo_Restore_Proxy(ISdo *This);", "ISdo_get__NewEnum_Proxy": "HRESULT WINAPI ISdo_get__NewEnum_Proxy(ISdo *This,IUnknown **ppEnumVARIANT);", "ISdoCollection_get_Count_Proxy": "HRESULT WINAPI ISdoCollection_get_Count_Proxy(ISdoCollection *This,__LONG32 *pCount);", "ISdoCollection_Add_Proxy": "HRESULT WINAPI ISdoCollection_Add_Proxy(ISdoCollection *This,BSTR bstrName,IDispatch **ppItem);", "ISdoCollection_Remove_Proxy": "HRESULT WINAPI ISdoCollection_Remove_Proxy(ISdoCollection *This,IDispatch *pItem);", "ISdoCollection_RemoveAll_Proxy": "HRESULT WINAPI ISdoCollection_RemoveAll_Proxy(ISdoCollection *This);", "ISdoCollection_Reload_Proxy": "HRESULT WINAPI ISdoCollection_Reload_Proxy(ISdoCollection *This);", "ISdoCollection_IsNameUnique_Proxy": "HRESULT WINAPI ISdoCollection_IsNameUnique_Proxy(ISdoCollection *This,BSTR bstrName,VARIANT_BOOL *pBool);", "ISdoCollection_Item_Proxy": "HRESULT WINAPI ISdoCollection_Item_Proxy(ISdoCollection *This,VARIANT *Name,IDispatch **pItem);", "ISdoCollection_get__NewEnum_Proxy": "HRESULT WINAPI ISdoCollection_get__NewEnum_Proxy(ISdoCollection *This,IUnknown **ppEnumVARIANT);", "ISdoDictionaryOld_EnumAttributes_Proxy": "HRESULT WINAPI ISdoDictionaryOld_EnumAttributes_Proxy(ISdoDictionaryOld *This,VARIANT *Id,VARIANT *pValues);", "ISdoDictionaryOld_GetAttributeInfo_Proxy": "HRESULT WINAPI ISdoDictionaryOld_GetAttributeInfo_Proxy(ISdoDictionaryOld *This,ATTRIBUTEID Id,VARIANT *pInfoIDs,VARIANT *pInfoValues);", "ISdoDictionaryOld_EnumAttributeValues_Proxy": "HRESULT WINAPI ISdoDictionaryOld_EnumAttributeValues_Proxy(ISdoDictionaryOld *This,ATTRIBUTEID Id,VARIANT *pValueIds,VARIANT *pValuesDesc);", "ISdoDictionaryOld_CreateAttribute_Proxy": "HRESULT WINAPI ISdoDictionaryOld_CreateAttribute_Proxy(ISdoDictionaryOld *This,ATTRIBUTEID Id,IDispatch **ppAttributeObject);", "ISdoDictionaryOld_GetAttributeID_Proxy": "HRESULT WINAPI ISdoDictionaryOld_GetAttributeID_Proxy(ISdoDictionaryOld *This,BSTR bstrAttributeName,ATTRIBUTEID *pId);", "WSARecvEx": "int WINAPI WSARecvEx(SOCKET s,char *buf,int len,int *flags);", "TransmitFile": "WINBOOL WINAPI TransmitFile(SOCKET hSocket,HANDLE hFile,DWORD nNumberOfBytesToWrite,DWORD nNumberOfBytesPerSend,LPOVERLAPPED lpOverlapped,LPTRANSMIT_FILE_BUFFERS lpTransmitBuffers,DWORD dwReserved);", "AcceptEx": "WINBOOL WINAPI AcceptEx(SOCKET sListenSocket,SOCKET sAcceptSocket,PVOID lpOutputBuffer,DWORD dwReceiveDataLength,DWORD dwLocalAddressLength,DWORD dwRemoteAddressLength,LPDWORD lpdwBytesReceived,LPOVERLAPPED lpOverlapped);", "GetAcceptExSockaddrs": "VOID WINAPI GetAcceptExSockaddrs(PVOID lpOutputBuffer,DWORD dwReceiveDataLength,DWORD dwLocalAddressLength,DWORD dwRemoteAddressLength,struct sockaddr **LocalSockaddr,LPINT LocalSockaddrLength,struct sockaddr **RemoteSockaddr,LPINT RemoteSockaddrLength);", "HandleLogFull": "WINBOOL WINAPI HandleLogFull(", "RegisterManageableLogClient": "WINBOOL WINAPI RegisterManageableLogClient(", "ReadLogNotification": "WINBOOL WINAPI ReadLogNotification(", "LogTailAdvanceFailure": "WINBOOL WINAPI LogTailAdvanceFailure(", "RegisterForLogWriteNotification": "WINBOOL WINAPI RegisterForLogWriteNotification(", "RemoveLogPolicy": "WINBOOL WINAPI RemoveLogPolicy(", "SetLogFileSizeWithPolicy": "WINBOOL WINAPI SetLogFileSizeWithPolicy(", "EnumPrintersA": "WINBOOL WINAPI EnumPrintersA(DWORD Flags,LPSTR Name,DWORD Level,LPBYTE pPrinterEnum,DWORD cbBuf,LPDWORD pcbNeeded,LPDWORD pcReturned);", "EnumPrintersW": "WINBOOL WINAPI EnumPrintersW(DWORD Flags,LPWSTR Name,DWORD Level,LPBYTE pPrinterEnum,DWORD cbBuf,LPDWORD pcbNeeded,LPDWORD pcReturned);", "OpenPrinterA": "WINBOOL WINAPI OpenPrinterA(LPSTR pPrinterName,LPHANDLE phPrinter,LPPRINTER_DEFAULTSA pDefault);", "OpenPrinterW": "WINBOOL WINAPI OpenPrinterW(LPWSTR pPrinterName,LPHANDLE phPrinter,LPPRINTER_DEFAULTSW pDefault);", "ResetPrinterA": "WINBOOL WINAPI ResetPrinterA(HANDLE hPrinter,LPPRINTER_DEFAULTSA pDefault);", "ResetPrinterW": "WINBOOL WINAPI ResetPrinterW(HANDLE hPrinter,LPPRINTER_DEFAULTSW pDefault);", "SetJobA": "WINBOOL WINAPI SetJobA(HANDLE hPrinter,DWORD JobId,DWORD Level,LPBYTE pJob,DWORD Command);", "SetJobW": "WINBOOL WINAPI SetJobW(HANDLE hPrinter,DWORD JobId,DWORD Level,LPBYTE pJob,DWORD Command);", "GetJobA": "WINBOOL WINAPI GetJobA(HANDLE hPrinter,DWORD JobId,DWORD Level,LPBYTE pJob,DWORD cbBuf,LPDWORD pcbNeeded);", "GetJobW": "WINBOOL WINAPI GetJobW(HANDLE hPrinter,DWORD JobId,DWORD Level,LPBYTE pJob,DWORD cbBuf,LPDWORD pcbNeeded);", "EnumJobsA": "WINBOOL WINAPI EnumJobsA(HANDLE hPrinter,DWORD FirstJob,DWORD NoJobs,DWORD Level,LPBYTE pJob,DWORD cbBuf,LPDWORD pcbNeeded,LPDWORD pcReturned);", "EnumJobsW": "WINBOOL WINAPI EnumJobsW(HANDLE hPrinter,DWORD FirstJob,DWORD NoJobs,DWORD Level,LPBYTE pJob,DWORD cbBuf,LPDWORD pcbNeeded,LPDWORD pcReturned);", "AddPrinterA": "HANDLE WINAPI AddPrinterA(LPSTR pName,DWORD Level,LPBYTE pPrinter);", "AddPrinterW": "HANDLE WINAPI AddPrinterW(LPWSTR pName,DWORD Level,LPBYTE pPrinter);", "DeletePrinter": "WINBOOL WINAPI DeletePrinter(HANDLE hPrinter);", "SetPrinterA": "WINBOOL WINAPI SetPrinterA(HANDLE hPrinter,DWORD Level,LPBYTE pPrinter,DWORD Command);", "SetPrinterW": "WINBOOL WINAPI SetPrinterW(HANDLE hPrinter,DWORD Level,LPBYTE pPrinter,DWORD Command);", "GetPrinterA": "WINBOOL WINAPI GetPrinterA(HANDLE hPrinter,DWORD Level,LPBYTE pPrinter,DWORD cbBuf,LPDWORD pcbNeeded);", "GetPrinterW": "WINBOOL WINAPI GetPrinterW(HANDLE hPrinter,DWORD Level,LPBYTE pPrinter,DWORD cbBuf,LPDWORD pcbNeeded);", "AddPrinterDriverA": "WINBOOL WINAPI AddPrinterDriverA(LPSTR pName,DWORD Level,LPBYTE pDriverInfo);", "AddPrinterDriverW": "WINBOOL WINAPI AddPrinterDriverW(LPWSTR pName,DWORD Level,LPBYTE pDriverInfo);", "AddPrinterDriverExA": "WINBOOL WINAPI AddPrinterDriverExA(LPSTR pName,DWORD Level,LPBYTE pDriverInfo,DWORD dwFileCopyFlags);", "AddPrinterDriverExW": "WINBOOL WINAPI AddPrinterDriverExW(LPWSTR pName,DWORD Level,LPBYTE pDriverInfo,DWORD dwFileCopyFlags);", "EnumPrinterDriversA": "WINBOOL WINAPI EnumPrinterDriversA(LPSTR pName,LPSTR pEnvironment,DWORD Level,LPBYTE pDriverInfo,DWORD cbBuf,LPDWORD pcbNeeded,LPDWORD pcReturned);", "EnumPrinterDriversW": "WINBOOL WINAPI EnumPrinterDriversW(LPWSTR pName,LPWSTR pEnvironment,DWORD Level,LPBYTE pDriverInfo,DWORD cbBuf,LPDWORD pcbNeeded,LPDWORD pcReturned);", "GetPrinterDriverA": "WINBOOL WINAPI GetPrinterDriverA(HANDLE hPrinter,LPSTR pEnvironment,DWORD Level,LPBYTE pDriverInfo,DWORD cbBuf,LPDWORD pcbNeeded);", "GetPrinterDriverW": "WINBOOL WINAPI GetPrinterDriverW(HANDLE hPrinter,LPWSTR pEnvironment,DWORD Level,LPBYTE pDriverInfo,DWORD cbBuf,LPDWORD pcbNeeded);", "GetPrinterDriverDirectoryA": "WINBOOL WINAPI GetPrinterDriverDirectoryA(LPSTR pName,LPSTR pEnvironment,DWORD Level,LPBYTE pDriverDirectory,DWORD cbBuf,LPDWORD pcbNeeded);", "GetPrinterDriverDirectoryW": "WINBOOL WINAPI GetPrinterDriverDirectoryW(LPWSTR pName,LPWSTR pEnvironment,DWORD Level,LPBYTE pDriverDirectory,DWORD cbBuf,LPDWORD pcbNeeded);", "DeletePrinterDriverA": "WINBOOL WINAPI DeletePrinterDriverA(LPSTR pName,LPSTR pEnvironment,LPSTR pDriverName);", "DeletePrinterDriverW": "WINBOOL WINAPI DeletePrinterDriverW(LPWSTR pName,LPWSTR pEnvironment,LPWSTR pDriverName);", "DeletePrinterDriverExA": "WINBOOL WINAPI DeletePrinterDriverExA(LPSTR pName,LPSTR pEnvironment,LPSTR pDriverName,DWORD dwDeleteFlag,DWORD dwVersionFlag);", "DeletePrinterDriverExW": "WINBOOL WINAPI DeletePrinterDriverExW(LPWSTR pName,LPWSTR pEnvironment,LPWSTR pDriverName,DWORD dwDeleteFlag,DWORD dwVersionFlag);", "AddPrintProcessorA": "WINBOOL WINAPI AddPrintProcessorA(LPSTR pName,LPSTR pEnvironment,LPSTR pPathName,LPSTR pPrintProcessorName);", "AddPrintProcessorW": "WINBOOL WINAPI AddPrintProcessorW(LPWSTR pName,LPWSTR pEnvironment,LPWSTR pPathName,LPWSTR pPrintProcessorName);", "EnumPrintProcessorsA": "WINBOOL WINAPI EnumPrintProcessorsA(LPSTR pName,LPSTR pEnvironment,DWORD Level,LPBYTE pPrintProcessorInfo,DWORD cbBuf,LPDWORD pcbNeeded,LPDWORD pcReturned);", "EnumPrintProcessorsW": "WINBOOL WINAPI EnumPrintProcessorsW(LPWSTR pName,LPWSTR pEnvironment,DWORD Level,LPBYTE pPrintProcessorInfo,DWORD cbBuf,LPDWORD pcbNeeded,LPDWORD pcReturned);", "GetPrintProcessorDirectoryA": "WINBOOL WINAPI GetPrintProcessorDirectoryA(LPSTR pName,LPSTR pEnvironment,DWORD Level,LPBYTE pPrintProcessorInfo,DWORD cbBuf,LPDWORD pcbNeeded);", "GetPrintProcessorDirectoryW": "WINBOOL WINAPI GetPrintProcessorDirectoryW(LPWSTR pName,LPWSTR pEnvironment,DWORD Level,LPBYTE pPrintProcessorInfo,DWORD cbBuf,LPDWORD pcbNeeded);", "EnumPrintProcessorDatatypesA": "WINBOOL WINAPI EnumPrintProcessorDatatypesA(LPSTR pName,LPSTR pPrintProcessorName,DWORD Level,LPBYTE pDatatypes,DWORD cbBuf,LPDWORD pcbNeeded,LPDWORD pcReturned);", "EnumPrintProcessorDatatypesW": "WINBOOL WINAPI EnumPrintProcessorDatatypesW(LPWSTR pName,LPWSTR pPrintProcessorName,DWORD Level,LPBYTE pDatatypes,DWORD cbBuf,LPDWORD pcbNeeded,LPDWORD pcReturned);", "DeletePrintProcessorA": "WINBOOL WINAPI DeletePrintProcessorA(LPSTR pName,LPSTR pEnvironment,LPSTR pPrintProcessorName);", "DeletePrintProcessorW": "WINBOOL WINAPI DeletePrintProcessorW(LPWSTR pName,LPWSTR pEnvironment,LPWSTR pPrintProcessorName);", "StartDocPrinterA": "DWORD WINAPI StartDocPrinterA(HANDLE hPrinter,DWORD Level,LPBYTE pDocInfo);", "StartDocPrinterW": "DWORD WINAPI StartDocPrinterW(HANDLE hPrinter,DWORD Level,LPBYTE pDocInfo);", "StartPagePrinter": "WINBOOL WINAPI StartPagePrinter(HANDLE hPrinter);", "WritePrinter": "WINBOOL WINAPI WritePrinter(HANDLE hPrinter,LPVOID pBuf,DWORD cbBuf,LPDWORD pcWritten);", "FlushPrinter": "WINBOOL WINAPI FlushPrinter(HANDLE hPrinter,LPVOID pBuf,DWORD cbBuf,LPDWORD pcWritten,DWORD cSleep);", "EndPagePrinter": "WINBOOL WINAPI EndPagePrinter(HANDLE hPrinter);", "AbortPrinter": "WINBOOL WINAPI AbortPrinter(HANDLE hPrinter);", "ReadPrinter": "WINBOOL WINAPI ReadPrinter(HANDLE hPrinter,LPVOID pBuf,DWORD cbBuf,LPDWORD pNoBytesRead);", "EndDocPrinter": "WINBOOL WINAPI EndDocPrinter(HANDLE hPrinter);", "AddJobA": "WINBOOL WINAPI AddJobA(HANDLE hPrinter,DWORD Level,LPBYTE pData,DWORD cbBuf,LPDWORD pcbNeeded);", "AddJobW": "WINBOOL WINAPI AddJobW(HANDLE hPrinter,DWORD Level,LPBYTE pData,DWORD cbBuf,LPDWORD pcbNeeded);", "ScheduleJob": "WINBOOL WINAPI ScheduleJob(HANDLE hPrinter,DWORD JobId);", "PrinterProperties": "WINBOOL WINAPI PrinterProperties(HWND hWnd,HANDLE hPrinter);", "DocumentPropertiesA": "LONG WINAPI DocumentPropertiesA(HWND hWnd,HANDLE hPrinter,LPSTR pDeviceName,PDEVMODEA pDevModeOutput,PDEVMODEA pDevModeInput,DWORD fMode);", "DocumentPropertiesW": "LONG WINAPI DocumentPropertiesW(HWND hWnd,HANDLE hPrinter,LPWSTR pDeviceName,PDEVMODEW pDevModeOutput,PDEVMODEW pDevModeInput,DWORD fMode);", "AdvancedDocumentPropertiesA": "LONG WINAPI AdvancedDocumentPropertiesA(HWND hWnd,HANDLE hPrinter,LPSTR pDeviceName,PDEVMODEA pDevModeOutput,PDEVMODEA pDevModeInput);", "AdvancedDocumentPropertiesW": "LONG WINAPI AdvancedDocumentPropertiesW(HWND hWnd,HANDLE hPrinter,LPWSTR pDeviceName,PDEVMODEW pDevModeOutput,PDEVMODEW pDevModeInput);", "GetPrinterDataA": "DWORD WINAPI GetPrinterDataA(HANDLE hPrinter,LPSTR pValueName,LPDWORD pType,LPBYTE pData,DWORD nSize,LPDWORD pcbNeeded);", "GetPrinterDataW": "DWORD WINAPI GetPrinterDataW(HANDLE hPrinter,LPWSTR pValueName,LPDWORD pType,LPBYTE pData,DWORD nSize,LPDWORD pcbNeeded);", "GetPrinterDataExA": "DWORD WINAPI GetPrinterDataExA(HANDLE hPrinter,LPCSTR pKeyName,LPCSTR pValueName,LPDWORD pType,LPBYTE pData,DWORD nSize,LPDWORD pcbNeeded);", "GetPrinterDataExW": "DWORD WINAPI GetPrinterDataExW(HANDLE hPrinter,LPCWSTR pKeyName,LPCWSTR pValueName,LPDWORD pType,LPBYTE pData,DWORD nSize,LPDWORD pcbNeeded);", "EnumPrinterDataA": "DWORD WINAPI EnumPrinterDataA(HANDLE hPrinter,DWORD dwIndex,LPSTR pValueName,DWORD cbValueName,LPDWORD pcbValueName,LPDWORD pType,LPBYTE pData,DWORD cbData,LPDWORD pcbData);", "EnumPrinterDataW": "DWORD WINAPI EnumPrinterDataW(HANDLE hPrinter,DWORD dwIndex,LPWSTR pValueName,DWORD cbValueName,LPDWORD pcbValueName,LPDWORD pType,LPBYTE pData,DWORD cbData,LPDWORD pcbData);", "EnumPrinterDataExA": "DWORD WINAPI EnumPrinterDataExA(HANDLE hPrinter,LPCSTR pKeyName,LPBYTE pEnumValues,DWORD cbEnumValues,LPDWORD pcbEnumValues,LPDWORD pnEnumValues);", "EnumPrinterDataExW": "DWORD WINAPI EnumPrinterDataExW(HANDLE hPrinter,LPCWSTR pKeyName,LPBYTE pEnumValues,DWORD cbEnumValues,LPDWORD pcbEnumValues,LPDWORD pnEnumValues);", "EnumPrinterKeyA": "DWORD WINAPI EnumPrinterKeyA(HANDLE hPrinter,LPCSTR pKeyName,LPSTR pSubkey,DWORD cbSubkey,LPDWORD pcbSubkey);", "EnumPrinterKeyW": "DWORD WINAPI EnumPrinterKeyW(HANDLE hPrinter,LPCWSTR pKeyName,LPWSTR pSubkey,DWORD cbSubkey,LPDWORD pcbSubkey);", "SetPrinterDataA": "DWORD WINAPI SetPrinterDataA(HANDLE hPrinter,LPSTR pValueName,DWORD Type,LPBYTE pData,DWORD cbData);", "SetPrinterDataW": "DWORD WINAPI SetPrinterDataW(HANDLE hPrinter,LPWSTR pValueName,DWORD Type,LPBYTE pData,DWORD cbData);", "SetPrinterDataExA": "DWORD WINAPI SetPrinterDataExA(HANDLE hPrinter,LPCSTR pKeyName,LPCSTR pValueName,DWORD Type,LPBYTE pData,DWORD cbData);", "SetPrinterDataExW": "DWORD WINAPI SetPrinterDataExW(HANDLE hPrinter,LPCWSTR pKeyName,LPCWSTR pValueName,DWORD Type,LPBYTE pData,DWORD cbData);", "DeletePrinterDataA": "DWORD WINAPI DeletePrinterDataA(HANDLE hPrinter,LPSTR pValueName);", "DeletePrinterDataW": "DWORD WINAPI DeletePrinterDataW(HANDLE hPrinter,LPWSTR pValueName);", "DeletePrinterDataExA": "DWORD WINAPI DeletePrinterDataExA(HANDLE hPrinter,LPCSTR pKeyName,LPCSTR pValueName);", "DeletePrinterDataExW": "DWORD WINAPI DeletePrinterDataExW(HANDLE hPrinter,LPCWSTR pKeyName,LPCWSTR pValueName);", "DeletePrinterKeyA": "DWORD WINAPI DeletePrinterKeyA(HANDLE hPrinter,LPCSTR pKeyName);", "DeletePrinterKeyW": "DWORD WINAPI DeletePrinterKeyW(HANDLE hPrinter,LPCWSTR pKeyName);", "WaitForPrinterChange": "DWORD WINAPI WaitForPrinterChange(HANDLE hPrinter,DWORD Flags);", "FindFirstPrinterChangeNotification": "HANDLE WINAPI FindFirstPrinterChangeNotification(HANDLE hPrinter,DWORD fdwFlags,DWORD fdwOptions,LPVOID pPrinterNotifyOptions);", "FindNextPrinterChangeNotification": "WINBOOL WINAPI FindNextPrinterChangeNotification(HANDLE hChange,PDWORD pdwChange,LPVOID pPrinterNotifyOptions,LPVOID *ppPrinterNotifyInfo);", "FreePrinterNotifyInfo": "WINBOOL WINAPI FreePrinterNotifyInfo (PPRINTER_NOTIFY_INFO pPrinterNotifyInfo);", "FindClosePrinterChangeNotification": "WINBOOL WINAPI FindClosePrinterChangeNotification(HANDLE hChange);", "PrinterMessageBoxA": "DWORD WINAPI PrinterMessageBoxA(HANDLE hPrinter,DWORD Error,HWND hWnd,LPSTR pText,LPSTR pCaption,DWORD dwType);", "PrinterMessageBoxW": "DWORD WINAPI PrinterMessageBoxW(HANDLE hPrinter,DWORD Error,HWND hWnd,LPWSTR pText,LPWSTR pCaption,DWORD dwType);", "ClosePrinter": "WINBOOL WINAPI ClosePrinter(HANDLE hPrinter);", "AddFormA": "WINBOOL WINAPI AddFormA(HANDLE hPrinter,DWORD Level,LPBYTE pForm);", "AddFormW": "WINBOOL WINAPI AddFormW(HANDLE hPrinter,DWORD Level,LPBYTE pForm);", "DeleteFormA": "WINBOOL WINAPI DeleteFormA(HANDLE hPrinter,LPSTR pFormName);", "DeleteFormW": "WINBOOL WINAPI DeleteFormW(HANDLE hPrinter,LPWSTR pFormName);", "GetFormA": "WINBOOL WINAPI GetFormA(HANDLE hPrinter,LPSTR pFormName,DWORD Level,LPBYTE pForm,DWORD cbBuf,LPDWORD pcbNeeded);", "GetFormW": "WINBOOL WINAPI GetFormW(HANDLE hPrinter,LPWSTR pFormName,DWORD Level,LPBYTE pForm,DWORD cbBuf,LPDWORD pcbNeeded);", "SetFormA": "WINBOOL WINAPI SetFormA(HANDLE hPrinter,LPSTR pFormName,DWORD Level,LPBYTE pForm);", "SetFormW": "WINBOOL WINAPI SetFormW(HANDLE hPrinter,LPWSTR pFormName,DWORD Level,LPBYTE pForm);", "EnumFormsA": "WINBOOL WINAPI EnumFormsA(HANDLE hPrinter,DWORD Level,LPBYTE pForm,DWORD cbBuf,LPDWORD pcbNeeded,LPDWORD pcReturned);", "EnumFormsW": "WINBOOL WINAPI EnumFormsW(HANDLE hPrinter,DWORD Level,LPBYTE pForm,DWORD cbBuf,LPDWORD pcbNeeded,LPDWORD pcReturned);", "EnumMonitorsA": "WINBOOL WINAPI EnumMonitorsA(LPSTR pName,DWORD Level,LPBYTE pMonitor,DWORD cbBuf,LPDWORD pcbNeeded,LPDWORD pcReturned);", "EnumMonitorsW": "WINBOOL WINAPI EnumMonitorsW(LPWSTR pName,DWORD Level,LPBYTE pMonitor,DWORD cbBuf,LPDWORD pcbNeeded,LPDWORD pcReturned);", "AddMonitorA": "WINBOOL WINAPI AddMonitorA(LPSTR pName,DWORD Level,LPBYTE pMonitorInfo);", "AddMonitorW": "WINBOOL WINAPI AddMonitorW(LPWSTR pName,DWORD Level,LPBYTE pMonitorInfo);", "DeleteMonitorA": "WINBOOL WINAPI DeleteMonitorA(LPSTR pName,LPSTR pEnvironment,LPSTR pMonitorName);", "DeleteMonitorW": "WINBOOL WINAPI DeleteMonitorW(LPWSTR pName,LPWSTR pEnvironment,LPWSTR pMonitorName);", "EnumPortsA": "WINBOOL WINAPI EnumPortsA(LPSTR pName,DWORD Level,LPBYTE pPorts,DWORD cbBuf,LPDWORD pcbNeeded,LPDWORD pcReturned);", "EnumPortsW": "WINBOOL WINAPI EnumPortsW(LPWSTR pName,DWORD Level,LPBYTE pPorts,DWORD cbBuf,LPDWORD pcbNeeded,LPDWORD pcReturned);", "AddPortA": "WINBOOL WINAPI AddPortA(LPSTR pName,HWND hWnd,LPSTR pMonitorName);", "AddPortW": "WINBOOL WINAPI AddPortW(LPWSTR pName,HWND hWnd,LPWSTR pMonitorName);", "ConfigurePortA": "WINBOOL WINAPI ConfigurePortA(LPSTR pName,HWND hWnd,LPSTR pPortName);", "ConfigurePortW": "WINBOOL WINAPI ConfigurePortW(LPWSTR pName,HWND hWnd,LPWSTR pPortName);", "DeletePortA": "WINBOOL WINAPI DeletePortA(LPSTR pName,HWND hWnd,LPSTR pPortName);", "DeletePortW": "WINBOOL WINAPI DeletePortW(LPWSTR pName,HWND hWnd,LPWSTR pPortName);", "XcvDataW": "WINBOOL WINAPI XcvDataW(HANDLE hXcv,PCWSTR pszDataName,PBYTE pInputData,DWORD cbInputData,PBYTE pOutputData,DWORD cbOutputData,PDWORD pcbOutputNeeded,PDWORD pdwStatus);", "GetDefaultPrinterA": "WINBOOL WINAPI GetDefaultPrinterA(LPSTR pszBuffer,LPDWORD pcchBuffer);", "GetDefaultPrinterW": "WINBOOL WINAPI GetDefaultPrinterW(LPWSTR pszBuffer,LPDWORD pcchBuffer);", "SetDefaultPrinterA": "WINBOOL WINAPI SetDefaultPrinterA(LPCSTR pszPrinter);", "SetDefaultPrinterW": "WINBOOL WINAPI SetDefaultPrinterW(LPCWSTR pszPrinter);", "SetPortA": "WINBOOL WINAPI SetPortA(LPSTR pName,LPSTR pPortName,DWORD dwLevel,LPBYTE pPortInfo);", "SetPortW": "WINBOOL WINAPI SetPortW(LPWSTR pName,LPWSTR pPortName,DWORD dwLevel,LPBYTE pPortInfo);", "AddPrinterConnectionA": "WINBOOL WINAPI AddPrinterConnectionA(LPSTR pName);", "AddPrinterConnectionW": "WINBOOL WINAPI AddPrinterConnectionW(LPWSTR pName);", "DeletePrinterConnectionA": "WINBOOL WINAPI DeletePrinterConnectionA(LPSTR pName);", "DeletePrinterConnectionW": "WINBOOL WINAPI DeletePrinterConnectionW(LPWSTR pName);", "ConnectToPrinterDlg": "HANDLE WINAPI ConnectToPrinterDlg(HWND hwnd,DWORD Flags);", "AddPrintProvidorA": "WINBOOL WINAPI AddPrintProvidorA(LPSTR pName,DWORD level,LPBYTE pProvidorInfo);", "AddPrintProvidorW": "WINBOOL WINAPI AddPrintProvidorW(LPWSTR pName,DWORD level,LPBYTE pProvidorInfo);", "DeletePrintProvidorA": "WINBOOL WINAPI DeletePrintProvidorA(LPSTR pName,LPSTR pEnvironment,LPSTR pPrintProvidorName);", "DeletePrintProvidorW": "WINBOOL WINAPI DeletePrintProvidorW(LPWSTR pName,LPWSTR pEnvironment,LPWSTR pPrintProvidorName);", "IsValidDevmodeA": "WINBOOL WINAPI IsValidDevmodeA (PDEVMODEA pDevmode,size_t DevmodeSize);", "IsValidDevmodeW": "WINBOOL WINAPI IsValidDevmodeW (PDEVMODEW pDevmode,size_t DevmodeSize);", "DeletePrinterDriverPackageA": "HRESULT WINAPI DeletePrinterDriverPackageA(", "DeletePrinterDriverPackageW": "HRESULT WINAPI DeletePrinterDriverPackageW(", "GetCorePrinterDriversA": "HRESULT WINAPI GetCorePrinterDriversA(", "GetCorePrinterDriversW": "HRESULT WINAPI GetCorePrinterDriversW(", "GetPrinterDriver2A": "WINBOOL WINAPI GetPrinterDriver2A(", "GetPrinterDriver2W": "WINBOOL WINAPI GetPrinterDriver2W(", "GetPrinterDriverPackagePathA": "HRESULT WINAPI GetPrinterDriverPackagePathA(", "GetPrinterDriverPackagePathW": "HRESULT WINAPI GetPrinterDriverPackagePathW(", "GetSpoolFileHandleA": "HANDLE WINAPI GetSpoolFileHandleA(", "GetSpoolFileHandleW": "HANDLE WINAPI GetSpoolFileHandleW(", "CommitSpoolData": "HANDLE WINAPI CommitSpoolData(", "CloseSpoolFileHandle": "WINBOOL WINAPI CloseSpoolFileHandle(", "OpenPrinter2A": "WINBOOL WINAPI OpenPrinter2A(", "OpenPrinter2W": "WINBOOL WINAPI OpenPrinter2W(", "UploadPrinterDriverPackageA": "HRESULT WINAPI UploadPrinterDriverPackageA(", "UploadPrinterDriverPackageW": "HRESULT WINAPI UploadPrinterDriverPackageW(", "AttachVirtualDisk": "VIRTDISKAPI DWORD WINAPI AttachVirtualDisk(HANDLE VirtualDiskHandle, PSECURITY_DESCRIPTOR SecurityDescriptor, ATTACH_VIRTUAL_DISK_FLAG Flags, ULONG ProviderSpecificFlags, PATTACH_VIRTUAL_DISK_PARAMETERS Parameters, LPOVERLAPPED Overlapped);", "CompactVirtualDisk": "VIRTDISKAPI DWORD WINAPI CompactVirtualDisk(HANDLE VirtualDiskHandle, COMPACT_VIRTUAL_DISK_FLAG Flags, PCOMPACT_VIRTUAL_DISK_PARAMETERS Parameters, LPOVERLAPPED Overlapped);", "CreateVirtualDisk": "VIRTDISKAPI DWORD WINAPI CreateVirtualDisk(PVIRTUAL_STORAGE_TYPE VirtualStorageType, PCWSTR Path, VIRTUAL_DISK_ACCESS_MASK VirtualDiskAccessMask, PSECURITY_DESCRIPTOR SecurityDescriptor, CREATE_VIRTUAL_DISK_FLAG Flags, ULONG ProviderSpecificFlags, PCREATE_VIRTUAL_DISK_PARAMETERS Parameters, LPOVERLAPPED Overlapped, PHANDLE Handle);", "DetachVirtualDisk": "VIRTDISKAPI DWORD WINAPI DetachVirtualDisk(HANDLE VirtualDiskHandle, DETACH_VIRTUAL_DISK_FLAG Flags, ULONG ProviderSpecificFlags);", "ExpandVirtualDisk": "VIRTDISKAPI DWORD WINAPI ExpandVirtualDisk(HANDLE VirtualDiskHandle, EXPAND_VIRTUAL_DISK_FLAG Flags, PEXPAND_VIRTUAL_DISK_PARAMETERS Parameters, LPOVERLAPPED Overlapped);", "GetStorageDependencyInformation": "VIRTDISKAPI DWORD WINAPI GetStorageDependencyInformation(HANDLE ObjectHandle, GET_STORAGE_DEPENDENCY_FLAG Flags, ULONG StorageDependencyInfoSize, PSTORAGE_DEPENDENCY_INFO StorageDependencyInfo, PULONG SizeUsed);", "GetVirtualDiskInformation": "VIRTDISKAPI DWORD WINAPI GetVirtualDiskInformation(HANDLE VirtualDiskHandle, PULONG VirtualDiskInfoSize, PGET_VIRTUAL_DISK_INFO VirtualDiskInfo, PULONG SizeUsed);", "GetVirtualDiskOperationProgress": "VIRTDISKAPI DWORD WINAPI GetVirtualDiskOperationProgress(HANDLE VirtualDiskHandle, LPOVERLAPPED Overlapped, PVIRTUAL_DISK_PROGRESS Progress);", "GetVirtualDiskPhysicalPath": "VIRTDISKAPI DWORD WINAPI GetVirtualDiskPhysicalPath(HANDLE VirtualDiskHandle, PULONG DiskPathSizeInBytes, PWSTR DiskPath);", "MergeVirtualDisk": "VIRTDISKAPI DWORD WINAPI MergeVirtualDisk(HANDLE VirtualDiskHandle, MERGE_VIRTUAL_DISK_FLAG Flags, PMERGE_VIRTUAL_DISK_PARAMETERS Parameters, LPOVERLAPPED Overlapped);", "OpenVirtualDisk": "VIRTDISKAPI DWORD WINAPI OpenVirtualDisk(PVIRTUAL_STORAGE_TYPE VirtualStorageType, PCWSTR Path, VIRTUAL_DISK_ACCESS_MASK VirtualDiskAccessMask, OPEN_VIRTUAL_DISK_FLAG Flags, POPEN_VIRTUAL_DISK_PARAMETERS Parameters, PHANDLE Handle);", "SetVirtualDiskInformation": "VIRTDISKAPI DWORD WINAPI SetVirtualDiskInformation(HANDLE VirtualDiskHandle, PSET_VIRTUAL_DISK_INFO VirtualDiskInfo);", "AddVirtualDiskParent": "VIRTDISKAPI DWORD WINAPI AddVirtualDiskParent(HANDLE VirtualDiskHandle, PCWSTR ParentPath);", "BreakMirrorVirtualDisk": "VIRTDISKAPI DWORD WINAPI BreakMirrorVirtualDisk(HANDLE VirtualDiskHandle);", "DeleteVirtualDiskMetadata": "VIRTDISKAPI DWORD WINAPI DeleteVirtualDiskMetadata(HANDLE VirtualDiskHandle, LPGUID Item);", "EnumerateVirtualDiskMetadata": "VIRTDISKAPI DWORD WINAPI EnumerateVirtualDiskMetadata(HANDLE VirtualDiskHandle, PULONG NumberOfItems, GUID *Items);", "GetVirtualDiskMetadata": "VIRTDISKAPI DWORD WINAPI GetVirtualDiskMetadata(HANDLE VirtualDiskHandle, LPGUID Item, PULONG MetaDataSize, PVOID MetaData);", "MirrorVirtualDisk": "VIRTDISKAPI DWORD WINAPI MirrorVirtualDisk(HANDLE VirtualDiskHandle, MIRROR_VIRTUAL_DISK_FLAG Flags, PMIRROR_VIRTUAL_DISK_PARAMETERS Parameters, LPOVERLAPPED Overlapped);", "ResizeVirtualDisk": "VIRTDISKAPI DWORD WINAPI ResizeVirtualDisk(HANDLE VirtualDiskHandle, RESIZE_VIRTUAL_DISK_FLAG Flags, PRESIZE_VIRTUAL_DISK_PARAMETERS Parameters, LPOVERLAPPED Overlapped);", "SetVirtualDiskMetadata": "VIRTDISKAPI DWORD WINAPI SetVirtualDiskMetadata(HANDLE VirtualDiskHandle, LPGUID Item, ULONG MetaDataSize, PVOID MetaData);", "ApplySnapshotVhdSet": "VIRTDISKAPI DWORD WINAPI ApplySnapshotVhdSet(HANDLE VirtualDiskHandle, const PAPPLY_SNAPSHOT_VHDSET_PARAMETERS Parameters, APPLY_SNAPSHOT_VHDSET_FLAG Flags);", "DeleteSnapshotVhdSet": "VIRTDISKAPI DWORD WINAPI DeleteSnapshotVhdSet(HANDLE VirtualDiskHandle, const PDELETE_SNAPSHOT_VHDSET_PARAMETERS Parameters, DELETE_SNAPSHOT_VHDSET_FLAG Flags);", "ModifyVhdSet": "VIRTDISKAPI DWORD WINAPI ModifyVhdSet(HANDLE VirtualDiskHandle, const PMODIFY_VHDSET_PARAMETERS Parameters, MODIFY_VHDSET_FLAG Flags);", "QueryChangesVirtualDisk": "VIRTDISKAPI DWORD WINAPI QueryChangesVirtualDisk(HANDLE VirtualDiskHandle, PCWSTR ChangeTrackingId, ULONG64 ByteOffset, ULONG64 ByteLength, QUERY_CHANGES_VIRTUAL_DISK_FLAG Flags, PQUERY_CHANGES_VIRTUAL_DISK_RANGE Ranges, PULONG RangeCount, PULONG64 ProcessedLength);", "TakeSnapshotVhdSet": "VIRTDISKAPI WINAPI DWORD TakeSnapshotVhdSet(HANDLE VirtualDiskHandle, const PTAKE_SNAPSHOT_VHDSET_PARAMETERS Parameters, TAKE_SNAPSHOT_VHDSET_FLAG Flags);", "MoCopyMediaType": "HRESULT WINAPI MoCopyMediaType(DMO_MEDIA_TYPE*,const DMO_MEDIA_TYPE*);", "MoCreateMediaType": "HRESULT WINAPI MoCreateMediaType(DMO_MEDIA_TYPE**,DWORD);", "MoDeleteMediaType": "HRESULT WINAPI MoDeleteMediaType(DMO_MEDIA_TYPE*);", "MoDuplicateMediaType": "HRESULT WINAPI MoDuplicateMediaType(DMO_MEDIA_TYPE**,const DMO_MEDIA_TYPE*);", "MoFreeMediaType": "HRESULT WINAPI MoFreeMediaType(DMO_MEDIA_TYPE*);", "MoInitMediaType": "HRESULT WINAPI MoInitMediaType(DMO_MEDIA_TYPE*,DWORD);", "AddFontResourceA": "WINGDIAPI int WINAPI AddFontResourceA(LPCSTR);", "AddFontResourceW": "WINGDIAPI int WINAPI AddFontResourceW(LPCWSTR);", "AnimatePalette": "WINGDIAPI WINBOOL WINAPI AnimatePalette(HPALETTE hPal,UINT iStartIndex,UINT cEntries,CONST PALETTEENTRY *ppe);", "Arc": "WINGDIAPI WINBOOL WINAPI Arc(HDC hdc,int x1,int y1,int x2,int y2,int x3,int y3,int x4,int y4);", "BitBlt": "WINGDIAPI WINBOOL WINAPI BitBlt(HDC hdc,int x,int y,int cx,int cy,HDC hdcSrc,int x1,int y1,DWORD rop);", "CancelDC": "WINGDIAPI WINBOOL WINAPI CancelDC(HDC hdc);", "Chord": "WINGDIAPI WINBOOL WINAPI Chord(HDC hdc,int x1,int y1,int x2,int y2,int x3,int y3,int x4,int y4);", "ChoosePixelFormat": "int WINAPI ChoosePixelFormat (HDC hDc, const PIXELFORMATDESCRIPTOR *pPfd);", "CloseMetaFile": "WINGDIAPI HMETAFILE WINAPI CloseMetaFile(HDC hdc);", "CombineRgn": "WINGDIAPI int WINAPI CombineRgn(HRGN hrgnDst,HRGN hrgnSrc1,HRGN hrgnSrc2,int iMode);", "CopyMetaFileA": "WINGDIAPI HMETAFILE WINAPI CopyMetaFileA(HMETAFILE,LPCSTR);", "CopyMetaFileW": "WINGDIAPI HMETAFILE WINAPI CopyMetaFileW(HMETAFILE,LPCWSTR);", "CreateBitmap": "WINGDIAPI HBITMAP WINAPI CreateBitmap(int nWidth,int nHeight,UINT nPlanes,UINT nBitCount,CONST VOID *lpBits);", "CreateBitmapIndirect": "WINGDIAPI HBITMAP WINAPI CreateBitmapIndirect(CONST BITMAP *pbm);", "CreateBrushIndirect": "WINGDIAPI HBRUSH WINAPI CreateBrushIndirect(CONST LOGBRUSH *plbrush);", "CreateCompatibleBitmap": "WINGDIAPI HBITMAP WINAPI CreateCompatibleBitmap(HDC hdc,int cx,int cy);", "CreateDiscardableBitmap": "WINGDIAPI HBITMAP WINAPI CreateDiscardableBitmap(HDC hdc,int cx,int cy);", "CreateCompatibleDC": "WINGDIAPI HDC WINAPI CreateCompatibleDC(HDC hdc);", "CreateDCA": "WINGDIAPI HDC WINAPI CreateDCA(LPCSTR pwszDriver,LPCSTR pwszDevice,LPCSTR pszPort,CONST DEVMODEA *pdm);", "CreateDCW": "WINGDIAPI HDC WINAPI CreateDCW(LPCWSTR pwszDriver,LPCWSTR pwszDevice,LPCWSTR pszPort,CONST DEVMODEW *pdm);", "CreateDIBitmap": "WINGDIAPI HBITMAP WINAPI CreateDIBitmap(HDC hdc,CONST BITMAPINFOHEADER *pbmih,DWORD flInit,CONST VOID *pjBits,CONST BITMAPINFO *pbmi,UINT iUsage);", "CreateDIBPatternBrush": "WINGDIAPI HBRUSH WINAPI CreateDIBPatternBrush(HGLOBAL h,UINT iUsage);", "CreateDIBPatternBrushPt": "WINGDIAPI HBRUSH WINAPI CreateDIBPatternBrushPt(CONST VOID *lpPackedDIB,UINT iUsage);", "CreateEllipticRgn": "WINGDIAPI HRGN WINAPI CreateEllipticRgn(int x1,int y1,int x2,int y2);", "CreateEllipticRgnIndirect": "WINGDIAPI HRGN WINAPI CreateEllipticRgnIndirect(CONST RECT *lprect);", "CreateFontIndirectA": "WINGDIAPI HFONT WINAPI CreateFontIndirectA(CONST LOGFONTA *lplf);", "CreateFontIndirectW": "WINGDIAPI HFONT WINAPI CreateFontIndirectW(CONST LOGFONTW *lplf);", "CreateFontA": "WINGDIAPI HFONT WINAPI CreateFontA(int cHeight,int cWidth,int cEscapement,int cOrientation,int cWeight,DWORD bItalic,DWORD bUnderline,DWORD bStrikeOut,DWORD iCharSet,DWORD iOutPrecision,DWORD iClipPrecision,DWORD iQuality,DWORD iPitchAndFamily,LPCSTR pszFaceName);", "CreateFontW": "WINGDIAPI HFONT WINAPI CreateFontW(int cHeight,int cWidth,int cEscapement,int cOrientation,int cWeight,DWORD bItalic,DWORD bUnderline,DWORD bStrikeOut,DWORD iCharSet,DWORD iOutPrecision,DWORD iClipPrecision,DWORD iQuality,DWORD iPitchAndFamily,LPCWSTR pszFaceName);", "CreateHatchBrush": "WINGDIAPI HBRUSH WINAPI CreateHatchBrush(int iHatch,COLORREF color);", "CreateICA": "WINGDIAPI HDC WINAPI CreateICA(LPCSTR pszDriver,LPCSTR pszDevice,LPCSTR pszPort,CONST DEVMODEA *pdm);", "CreateICW": "WINGDIAPI HDC WINAPI CreateICW(LPCWSTR pszDriver,LPCWSTR pszDevice,LPCWSTR pszPort,CONST DEVMODEW *pdm);", "CreateMetaFileA": "WINGDIAPI HDC WINAPI CreateMetaFileA(LPCSTR pszFile);", "CreateMetaFileW": "WINGDIAPI HDC WINAPI CreateMetaFileW(LPCWSTR pszFile);", "CreatePalette": "WINGDIAPI HPALETTE WINAPI CreatePalette(CONST LOGPALETTE *plpal);", "CreatePen": "WINGDIAPI HPEN WINAPI CreatePen(int iStyle,int cWidth,COLORREF color);", "CreatePenIndirect": "WINGDIAPI HPEN WINAPI CreatePenIndirect(CONST LOGPEN *plpen);", "CreatePolyPolygonRgn": "WINGDIAPI HRGN WINAPI CreatePolyPolygonRgn(CONST POINT *pptl,CONST INT *pc,int cPoly,int iMode);", "CreatePatternBrush": "WINGDIAPI HBRUSH WINAPI CreatePatternBrush(HBITMAP hbm);", "CreateRectRgn": "WINGDIAPI HRGN WINAPI CreateRectRgn(int x1,int y1,int x2,int y2);", "CreateRectRgnIndirect": "WINGDIAPI HRGN WINAPI CreateRectRgnIndirect(CONST RECT *lprect);", "CreateRoundRectRgn": "WINGDIAPI HRGN WINAPI CreateRoundRectRgn(int x1,int y1,int x2,int y2,int w,int h);", "CreateScalableFontResourceA": "WINGDIAPI WINBOOL WINAPI CreateScalableFontResourceA(DWORD fdwHidden,LPCSTR lpszFont,LPCSTR lpszFile,LPCSTR lpszPath);", "CreateScalableFontResourceW": "WINGDIAPI WINBOOL WINAPI CreateScalableFontResourceW(DWORD fdwHidden,LPCWSTR lpszFont,LPCWSTR lpszFile,LPCWSTR lpszPath);", "CreateSolidBrush": "WINGDIAPI HBRUSH WINAPI CreateSolidBrush(COLORREF color);", "DeleteDC": "WINGDIAPI WINBOOL WINAPI DeleteDC(HDC hdc);", "DeleteMetaFile": "WINGDIAPI WINBOOL WINAPI DeleteMetaFile(HMETAFILE hmf);", "DeleteObject": "WINGDIAPI WINBOOL WINAPI DeleteObject(HGDIOBJ ho);", "DescribePixelFormat": "int WINAPI DescribePixelFormat (HDC hdc, int ipfd, UINT cjpfd, const PIXELFORMATDESCRIPTOR *ppfd);", "DeviceCapabilitiesA": "WINSPOOLAPI int WINAPI DeviceCapabilitiesA(LPCSTR pDevice,LPCSTR pPort,WORD fwCapability,LPSTR pOutput,CONST DEVMODEA *pDevMode);", "DeviceCapabilitiesW": "WINSPOOLAPI int WINAPI DeviceCapabilitiesW(LPCWSTR pDevice,LPCWSTR pPort,WORD fwCapability,LPWSTR pOutput,CONST DEVMODEW *pDevMode);", "DrawEscape": "WINGDIAPI int WINAPI DrawEscape(HDC hdc,int iEscape,int cjIn,LPCSTR lpIn);", "Ellipse": "WINGDIAPI WINBOOL WINAPI Ellipse(HDC hdc,int left,int top,int right,int bottom);", "EnumFontFamiliesExA": "WINGDIAPI int WINAPI EnumFontFamiliesExA(HDC hdc,LPLOGFONTA lpLogfont,FONTENUMPROCA lpProc,LPARAM lParam,DWORD dwFlags);", "EnumFontFamiliesExW": "WINGDIAPI int WINAPI EnumFontFamiliesExW(HDC hdc,LPLOGFONTW lpLogfont,FONTENUMPROCW lpProc,LPARAM lParam,DWORD dwFlags);", "EnumFontFamiliesA": "WINGDIAPI int WINAPI EnumFontFamiliesA(HDC hdc,LPCSTR lpLogfont,FONTENUMPROCA lpProc,LPARAM lParam);", "EnumFontFamiliesW": "WINGDIAPI int WINAPI EnumFontFamiliesW(HDC hdc,LPCWSTR lpLogfont,FONTENUMPROCW lpProc,LPARAM lParam);", "EnumFontsA": "WINGDIAPI int WINAPI EnumFontsA(HDC hdc,LPCSTR lpLogfont,FONTENUMPROCA lpProc,LPARAM lParam);", "EnumFontsW": "WINGDIAPI int WINAPI EnumFontsW(HDC hdc,LPCWSTR lpLogfont,FONTENUMPROCW lpProc,LPARAM lParam);", "EnumObjects": "WINGDIAPI int WINAPI EnumObjects(HDC hdc,int nType,GOBJENUMPROC lpFunc,LPARAM lParam);", "EqualRgn": "WINGDIAPI WINBOOL WINAPI EqualRgn(HRGN hrgn1,HRGN hrgn2);", "Escape": "WINGDIAPI int WINAPI Escape(HDC hdc,int iEscape,int cjIn,LPCSTR pvIn,LPVOID pvOut);", "ExtEscape": "WINGDIAPI int WINAPI ExtEscape(HDC hdc,int iEscape,int cjInput,LPCSTR lpInData,int cjOutput,LPSTR lpOutData);", "ExcludeClipRect": "WINGDIAPI int WINAPI ExcludeClipRect(HDC hdc,int left,int top,int right,int bottom);", "ExtCreateRegion": "WINGDIAPI HRGN WINAPI ExtCreateRegion(CONST XFORM *lpx,DWORD nCount,CONST RGNDATA *lpData);", "ExtFloodFill": "WINGDIAPI WINBOOL WINAPI ExtFloodFill(HDC hdc,int x,int y,COLORREF color,UINT type);", "FillRgn": "WINGDIAPI WINBOOL WINAPI FillRgn(HDC hdc,HRGN hrgn,HBRUSH hbr);", "FloodFill": "WINGDIAPI WINBOOL WINAPI FloodFill(HDC hdc,int x,int y,COLORREF color);", "FrameRgn": "WINGDIAPI WINBOOL WINAPI FrameRgn(HDC hdc,HRGN hrgn,HBRUSH hbr,int w,int h);", "GetROP2": "WINGDIAPI int WINAPI GetROP2(HDC hdc);", "GetAspectRatioFilterEx": "WINGDIAPI WINBOOL WINAPI GetAspectRatioFilterEx(HDC hdc,LPSIZE lpsize);", "GetBkColor": "WINGDIAPI COLORREF WINAPI GetBkColor(HDC hdc);", "GetDCBrushColor": "WINGDIAPI COLORREF WINAPI GetDCBrushColor(HDC hdc);", "GetDCPenColor": "WINGDIAPI COLORREF WINAPI GetDCPenColor(HDC hdc);", "GetBkMode": "WINGDIAPI int WINAPI GetBkMode(HDC hdc);", "GetBitmapBits": "WINGDIAPI LONG WINAPI GetBitmapBits(HBITMAP hbit,LONG cb,LPVOID lpvBits);", "GetBitmapDimensionEx": "WINGDIAPI WINBOOL WINAPI GetBitmapDimensionEx(HBITMAP hbit,LPSIZE lpsize);", "GetBoundsRect": "WINGDIAPI UINT WINAPI GetBoundsRect(HDC hdc,LPRECT lprect,UINT flags);", "GetBrushOrgEx": "WINGDIAPI WINBOOL WINAPI GetBrushOrgEx(HDC hdc,LPPOINT lppt);", "GetCharWidthA": "WINGDIAPI WINBOOL WINAPI GetCharWidthA(HDC hdc,UINT iFirst,UINT iLast,LPINT lpBuffer);", "GetCharWidthW": "WINGDIAPI WINBOOL WINAPI GetCharWidthW(HDC hdc,UINT iFirst,UINT iLast,LPINT lpBuffer);", "GetCharWidth32A": "WINGDIAPI WINBOOL WINAPI GetCharWidth32A(HDC hdc,UINT iFirst,UINT iLast,LPINT lpBuffer);", "GetCharWidth32W": "WINGDIAPI WINBOOL WINAPI GetCharWidth32W(HDC hdc,UINT iFirst,UINT iLast,LPINT lpBuffer);", "GetCharWidthFloatA": "WINGDIAPI WINBOOL WINAPI GetCharWidthFloatA(HDC hdc,UINT iFirst,UINT iLast,PFLOAT lpBuffer);", "GetCharWidthFloatW": "WINGDIAPI WINBOOL WINAPI GetCharWidthFloatW(HDC hdc,UINT iFirst,UINT iLast,PFLOAT lpBuffer);", "GetCharABCWidthsA": "WINGDIAPI WINBOOL WINAPI GetCharABCWidthsA(HDC hdc,UINT wFirst,UINT wLast,LPABC lpABC);", "GetCharABCWidthsW": "WINGDIAPI WINBOOL WINAPI GetCharABCWidthsW(HDC hdc,UINT wFirst,UINT wLast,LPABC lpABC);", "GetCharABCWidthsFloatA": "WINGDIAPI WINBOOL WINAPI GetCharABCWidthsFloatA(HDC hdc,UINT iFirst,UINT iLast,LPABCFLOAT lpABC);", "GetCharABCWidthsFloatW": "WINGDIAPI WINBOOL WINAPI GetCharABCWidthsFloatW(HDC hdc,UINT iFirst,UINT iLast,LPABCFLOAT lpABC);", "GetClipBox": "WINGDIAPI int WINAPI GetClipBox(HDC hdc,LPRECT lprect);", "GetClipRgn": "WINGDIAPI int WINAPI GetClipRgn(HDC hdc,HRGN hrgn);", "GetMetaRgn": "WINGDIAPI int WINAPI GetMetaRgn(HDC hdc,HRGN hrgn);", "GetCurrentObject": "WINGDIAPI HGDIOBJ WINAPI GetCurrentObject(HDC hdc,UINT type);", "GetCurrentPositionEx": "WINGDIAPI WINBOOL WINAPI GetCurrentPositionEx(HDC hdc,LPPOINT lppt);", "GetDeviceCaps": "WINGDIAPI int WINAPI GetDeviceCaps(HDC hdc,int index);", "GetDIBits": "WINGDIAPI int WINAPI GetDIBits(HDC hdc,HBITMAP hbm,UINT start,UINT cLines,LPVOID lpvBits,LPBITMAPINFO lpbmi,UINT usage);", "GetFontData": "WINGDIAPI DWORD WINAPI GetFontData (HDC hdc,DWORD dwTable,DWORD dwOffset,PVOID pvBuffer,DWORD cjBuffer);", "GetGlyphOutlineA": "WINGDIAPI DWORD WINAPI GetGlyphOutlineA(HDC hdc,UINT uChar,UINT fuFormat,LPGLYPHMETRICS lpgm,DWORD cjBuffer,LPVOID pvBuffer,CONST MAT2 *lpmat2);", "GetGlyphOutlineW": "WINGDIAPI DWORD WINAPI GetGlyphOutlineW(HDC hdc,UINT uChar,UINT fuFormat,LPGLYPHMETRICS lpgm,DWORD cjBuffer,LPVOID pvBuffer,CONST MAT2 *lpmat2);", "GetGraphicsMode": "WINGDIAPI int WINAPI GetGraphicsMode(HDC hdc);", "GetMapMode": "WINGDIAPI int WINAPI GetMapMode(HDC hdc);", "GetMetaFileBitsEx": "WINGDIAPI UINT WINAPI GetMetaFileBitsEx(HMETAFILE hMF,UINT cbBuffer,LPVOID lpData);", "GetMetaFileA": "WINGDIAPI HMETAFILE WINAPI GetMetaFileA(LPCSTR lpName);", "GetMetaFileW": "WINGDIAPI HMETAFILE WINAPI GetMetaFileW(LPCWSTR lpName);", "GetNearestColor": "WINGDIAPI COLORREF WINAPI GetNearestColor(HDC hdc,COLORREF color);", "GetNearestPaletteIndex": "WINGDIAPI UINT WINAPI GetNearestPaletteIndex(HPALETTE h,COLORREF color);", "GetObjectType": "WINGDIAPI DWORD WINAPI GetObjectType(HGDIOBJ h);", "GetOutlineTextMetricsA": "WINGDIAPI UINT WINAPI GetOutlineTextMetricsA(HDC hdc,UINT cjCopy,LPOUTLINETEXTMETRICA potm);", "GetOutlineTextMetricsW": "WINGDIAPI UINT WINAPI GetOutlineTextMetricsW(HDC hdc,UINT cjCopy,LPOUTLINETEXTMETRICW potm);", "GetPaletteEntries": "WINGDIAPI UINT WINAPI GetPaletteEntries(HPALETTE hpal,UINT iStart,UINT cEntries,LPPALETTEENTRY pPalEntries);", "GetPixel": "WINGDIAPI COLORREF WINAPI GetPixel(HDC hdc,int x,int y);", "GetPixelFormat": "int WINAPI GetPixelFormat (HDC hdc);", "GetPolyFillMode": "WINGDIAPI int WINAPI GetPolyFillMode(HDC hdc);", "GetRasterizerCaps": "WINGDIAPI WINBOOL WINAPI GetRasterizerCaps(LPRASTERIZER_STATUS lpraststat,UINT cjBytes);", "GetRandomRgn": "WINGDIAPI int WINAPI GetRandomRgn (HDC hdc,HRGN hrgn,INT i);", "GetRegionData": "WINGDIAPI DWORD WINAPI GetRegionData(HRGN hrgn,DWORD nCount,LPRGNDATA lpRgnData);", "GetRgnBox": "WINGDIAPI int WINAPI GetRgnBox(HRGN hrgn,LPRECT lprc);", "GetStockObject": "WINGDIAPI HGDIOBJ WINAPI GetStockObject(int i);", "GetStretchBltMode": "WINGDIAPI int WINAPI GetStretchBltMode(HDC hdc);", "GetSystemPaletteEntries": "WINGDIAPI UINT WINAPI GetSystemPaletteEntries(HDC hdc,UINT iStart,UINT cEntries,LPPALETTEENTRY pPalEntries);", "GetSystemPaletteUse": "WINGDIAPI UINT WINAPI GetSystemPaletteUse(HDC hdc);", "GetTextCharacterExtra": "WINGDIAPI int WINAPI GetTextCharacterExtra(HDC hdc);", "GetTextAlign": "WINGDIAPI UINT WINAPI GetTextAlign(HDC hdc);", "GetTextColor": "WINGDIAPI COLORREF WINAPI GetTextColor(HDC hdc);", "GetTextExtentPointA": "WINGDIAPI WINBOOL WINAPI GetTextExtentPointA(HDC hdc,LPCSTR lpString,int c,LPSIZE lpsz);", "GetTextExtentPointW": "WINGDIAPI WINBOOL WINAPI GetTextExtentPointW(HDC hdc,LPCWSTR lpString,int c,LPSIZE lpsz);", "GetTextExtentPoint32A": "WINGDIAPI WINBOOL WINAPI GetTextExtentPoint32A(HDC hdc,LPCSTR lpString,int c,LPSIZE psizl);", "GetTextExtentPoint32W": "WINGDIAPI WINBOOL WINAPI GetTextExtentPoint32W(HDC hdc,LPCWSTR lpString,int c,LPSIZE psizl);", "GetTextExtentExPointA": "WINGDIAPI WINBOOL WINAPI GetTextExtentExPointA(HDC hdc,LPCSTR lpszString,int cchString,int nMaxExtent,LPINT lpnFit,LPINT lpnDx,LPSIZE lpSize);", "GetTextExtentExPointW": "WINGDIAPI WINBOOL WINAPI GetTextExtentExPointW(HDC hdc,LPCWSTR lpszString,int cchString,int nMaxExtent,LPINT lpnFit,LPINT lpnDx,LPSIZE lpSize);", "GetTextCharset": "WINGDIAPI int WINAPI GetTextCharset(HDC hdc);", "GetTextCharsetInfo": "WINGDIAPI int WINAPI GetTextCharsetInfo(HDC hdc,LPFONTSIGNATURE lpSig,DWORD dwFlags);", "TranslateCharsetInfo": "WINGDIAPI WINBOOL WINAPI TranslateCharsetInfo(DWORD *lpSrc,LPCHARSETINFO lpCs,DWORD dwFlags);", "GetFontLanguageInfo": "WINGDIAPI DWORD WINAPI GetFontLanguageInfo(HDC hdc);", "GetCharacterPlacementA": "WINGDIAPI DWORD WINAPI GetCharacterPlacementA(HDC hdc,LPCSTR lpString,int nCount,int nMexExtent,LPGCP_RESULTSA lpResults,DWORD dwFlags);", "GetCharacterPlacementW": "WINGDIAPI DWORD WINAPI GetCharacterPlacementW(HDC hdc,LPCWSTR lpString,int nCount,int nMexExtent,LPGCP_RESULTSW lpResults,DWORD dwFlags);", "GetFontUnicodeRanges": "WINGDIAPI DWORD WINAPI GetFontUnicodeRanges(HDC hdc,LPGLYPHSET lpgs);", "GetGlyphIndicesA": "WINGDIAPI DWORD WINAPI GetGlyphIndicesA(HDC hdc,LPCSTR lpstr,int c,LPWORD pgi,DWORD fl);", "GetGlyphIndicesW": "WINGDIAPI DWORD WINAPI GetGlyphIndicesW(HDC hdc,LPCWSTR lpstr,int c,LPWORD pgi,DWORD fl);", "GetTextExtentPointI": "WINGDIAPI WINBOOL WINAPI GetTextExtentPointI(HDC hdc,LPWORD pgiIn,int cgi,LPSIZE psize);", "GetTextExtentExPointI": "WINGDIAPI WINBOOL WINAPI GetTextExtentExPointI (HDC hdc,LPWORD lpwszString,int cwchString,int nMaxExtent,LPINT lpnFit,LPINT lpnDx,LPSIZE lpSize);", "GetCharWidthI": "WINGDIAPI WINBOOL WINAPI GetCharWidthI(HDC hdc,UINT giFirst,UINT cgi,LPWORD pgi,LPINT piWidths);", "GetCharABCWidthsI": "WINGDIAPI WINBOOL WINAPI GetCharABCWidthsI(HDC hdc,UINT giFirst,UINT cgi,LPWORD pgi,LPABC pabc);", "AddFontResourceExA": "WINGDIAPI int WINAPI AddFontResourceExA(LPCSTR name,DWORD fl,PVOID res);", "AddFontResourceExW": "WINGDIAPI int WINAPI AddFontResourceExW(LPCWSTR name,DWORD fl,PVOID res);", "RemoveFontResourceExA": "WINGDIAPI WINBOOL WINAPI RemoveFontResourceExA(LPCSTR name,DWORD fl,PVOID pdv);", "RemoveFontResourceExW": "WINGDIAPI WINBOOL WINAPI RemoveFontResourceExW(LPCWSTR name,DWORD fl,PVOID pdv);", "AddFontMemResourceEx": "WINGDIAPI HANDLE WINAPI AddFontMemResourceEx(PVOID pFileView,DWORD cjSize,PVOID pvResrved,DWORD *pNumFonts);", "RemoveFontMemResourceEx": "WINGDIAPI WINBOOL WINAPI RemoveFontMemResourceEx(HANDLE h);", "CreateFontIndirectExA": "WINGDIAPI HFONT WINAPI CreateFontIndirectExA(CONST ENUMLOGFONTEXDVA *);", "CreateFontIndirectExW": "WINGDIAPI HFONT WINAPI CreateFontIndirectExW(CONST ENUMLOGFONTEXDVW *);", "GetViewportExtEx": "WINGDIAPI WINBOOL WINAPI GetViewportExtEx(HDC hdc,LPSIZE lpsize);", "GetViewportOrgEx": "WINGDIAPI WINBOOL WINAPI GetViewportOrgEx(HDC hdc,LPPOINT lppoint);", "GetWindowExtEx": "WINGDIAPI WINBOOL WINAPI GetWindowExtEx(HDC hdc,LPSIZE lpsize);", "GetWindowOrgEx": "WINGDIAPI WINBOOL WINAPI GetWindowOrgEx(HDC hdc,LPPOINT lppoint);", "IntersectClipRect": "WINGDIAPI int WINAPI IntersectClipRect(HDC hdc,int left,int top,int right,int bottom);", "InvertRgn": "WINGDIAPI WINBOOL WINAPI InvertRgn(HDC hdc,HRGN hrgn);", "LineDDA": "WINGDIAPI WINBOOL WINAPI LineDDA(int xStart,int yStart,int xEnd,int yEnd,LINEDDAPROC lpProc,LPARAM data);", "LineTo": "WINGDIAPI WINBOOL WINAPI LineTo(HDC hdc,int x,int y);", "MaskBlt": "WINGDIAPI WINBOOL WINAPI MaskBlt(HDC hdcDest,int xDest,int yDest,int width,int height,HDC hdcSrc,int xSrc,int ySrc,HBITMAP hbmMask,int xMask,int yMask,DWORD rop);", "PlgBlt": "WINGDIAPI WINBOOL WINAPI PlgBlt(HDC hdcDest,CONST POINT *lpPoint,HDC hdcSrc,int xSrc,int ySrc,int width,int height,HBITMAP hbmMask,int xMask,int yMask);", "OffsetClipRgn": "WINGDIAPI int WINAPI OffsetClipRgn(HDC hdc,int x,int y);", "OffsetRgn": "WINGDIAPI int WINAPI OffsetRgn(HRGN hrgn,int x,int y);", "PatBlt": "WINGDIAPI WINBOOL WINAPI PatBlt(HDC hdc,int x,int y,int w,int h,DWORD rop);", "Pie": "WINGDIAPI WINBOOL WINAPI Pie(HDC hdc,int left,int top,int right,int bottom,int xr1,int yr1,int xr2,int yr2);", "PlayMetaFile": "WINGDIAPI WINBOOL WINAPI PlayMetaFile(HDC hdc,HMETAFILE hmf);", "PaintRgn": "WINGDIAPI WINBOOL WINAPI PaintRgn(HDC hdc,HRGN hrgn);", "PolyPolygon": "WINGDIAPI WINBOOL WINAPI PolyPolygon(HDC hdc,CONST POINT *apt,CONST INT *asz,int csz);", "PtInRegion": "WINGDIAPI WINBOOL WINAPI PtInRegion(HRGN hrgn,int x,int y);", "PtVisible": "WINGDIAPI WINBOOL WINAPI PtVisible(HDC hdc,int x,int y);", "RectInRegion": "WINGDIAPI WINBOOL WINAPI RectInRegion(HRGN hrgn,CONST RECT *lprect);", "RectVisible": "WINGDIAPI WINBOOL WINAPI RectVisible(HDC hdc,CONST RECT *lprect);", "Rectangle": "WINGDIAPI WINBOOL WINAPI Rectangle(HDC hdc,int left,int top,int right,int bottom);", "RestoreDC": "WINGDIAPI WINBOOL WINAPI RestoreDC(HDC hdc,int nSavedDC);", "ResetDCA": "WINGDIAPI HDC WINAPI ResetDCA(HDC hdc,CONST DEVMODEA *lpdm);", "ResetDCW": "WINGDIAPI HDC WINAPI ResetDCW(HDC hdc,CONST DEVMODEW *lpdm);", "RealizePalette": "WINGDIAPI UINT WINAPI RealizePalette(HDC hdc);", "RemoveFontResourceA": "WINGDIAPI WINBOOL WINAPI RemoveFontResourceA(LPCSTR lpFileName);", "RemoveFontResourceW": "WINGDIAPI WINBOOL WINAPI RemoveFontResourceW(LPCWSTR lpFileName);", "RoundRect": "WINGDIAPI WINBOOL WINAPI RoundRect(HDC hdc,int left,int top,int right,int bottom,int width,int height);", "ResizePalette": "WINGDIAPI WINBOOL WINAPI ResizePalette(HPALETTE hpal,UINT n);", "SaveDC": "WINGDIAPI int WINAPI SaveDC(HDC hdc);", "SelectClipRgn": "WINGDIAPI int WINAPI SelectClipRgn(HDC hdc,HRGN hrgn);", "ExtSelectClipRgn": "WINGDIAPI int WINAPI ExtSelectClipRgn(HDC hdc,HRGN hrgn,int mode);", "SetMetaRgn": "WINGDIAPI int WINAPI SetMetaRgn(HDC hdc);", "SelectObject": "WINGDIAPI HGDIOBJ WINAPI SelectObject(HDC hdc,HGDIOBJ h);", "SelectPalette": "WINGDIAPI HPALETTE WINAPI SelectPalette(HDC hdc,HPALETTE hPal,WINBOOL bForceBkgd);", "SetBkColor": "WINGDIAPI COLORREF WINAPI SetBkColor(HDC hdc,COLORREF color);", "SetDCBrushColor": "WINGDIAPI COLORREF WINAPI SetDCBrushColor(HDC hdc,COLORREF color);", "SetDCPenColor": "WINGDIAPI COLORREF WINAPI SetDCPenColor(HDC hdc,COLORREF color);", "SetBkMode": "WINGDIAPI int WINAPI SetBkMode(HDC hdc,int mode);", "SetBitmapBits": "WINGDIAPI LONG WINAPI SetBitmapBits(HBITMAP hbm,DWORD cb,CONST VOID *pvBits);", "SetBoundsRect": "WINGDIAPI UINT WINAPI SetBoundsRect(HDC hdc,CONST RECT *lprect,UINT flags);", "SetDIBits": "WINGDIAPI int WINAPI SetDIBits(HDC hdc,HBITMAP hbm,UINT start,UINT cLines,CONST VOID *lpBits,CONST BITMAPINFO *lpbmi,UINT ColorUse);", "SetDIBitsToDevice": "WINGDIAPI int WINAPI SetDIBitsToDevice(HDC hdc,int xDest,int yDest,DWORD w,DWORD h,int xSrc,int ySrc,UINT StartScan,UINT cLines,CONST VOID *lpvBits,CONST BITMAPINFO *lpbmi,UINT ColorUse);", "SetMapperFlags": "WINGDIAPI DWORD WINAPI SetMapperFlags(HDC hdc,DWORD flags);", "SetGraphicsMode": "WINGDIAPI int WINAPI SetGraphicsMode(HDC hdc,int iMode);", "SetMapMode": "WINGDIAPI int WINAPI SetMapMode(HDC hdc,int iMode);", "SetLayout": "WINGDIAPI DWORD WINAPI SetLayout(HDC hdc,DWORD l);", "GetLayout": "WINGDIAPI DWORD WINAPI GetLayout(HDC hdc);", "SetMetaFileBitsEx": "WINGDIAPI HMETAFILE WINAPI SetMetaFileBitsEx(UINT cbBuffer,CONST BYTE *lpData);", "SetPaletteEntries": "WINGDIAPI UINT WINAPI SetPaletteEntries(HPALETTE hpal,UINT iStart,UINT cEntries,CONST PALETTEENTRY *pPalEntries);", "SetPixel": "WINGDIAPI COLORREF WINAPI SetPixel(HDC hdc,int x,int y,COLORREF color);", "SetPixelV": "WINGDIAPI WINBOOL WINAPI SetPixelV(HDC hdc,int x,int y,COLORREF color);", "SetPixelFormat": "BOOL WINAPI SetPixelFormat (HDC hdc, int ipfd, const PIXELFORMATDESCRIPTOR *ppfd);", "SetPolyFillMode": "WINGDIAPI int WINAPI SetPolyFillMode(HDC hdc,int mode);", "StretchBlt": "WINGDIAPI WINBOOL WINAPI StretchBlt(HDC hdcDest,int xDest,int yDest,int wDest,int hDest,HDC hdcSrc,int xSrc,int ySrc,int wSrc,int hSrc,DWORD rop);", "SetRectRgn": "WINGDIAPI WINBOOL WINAPI SetRectRgn(HRGN hrgn,int left,int top,int right,int bottom);", "StretchDIBits": "WINGDIAPI int WINAPI StretchDIBits(HDC hdc,int xDest,int yDest,int DestWidth,int DestHeight,int xSrc,int ySrc,int SrcWidth,int SrcHeight,CONST VOID *lpBits,CONST BITMAPINFO *lpbmi,UINT iUsage,DWORD rop);", "SetROP2": "WINGDIAPI int WINAPI SetROP2(HDC hdc,int rop2);", "SetStretchBltMode": "WINGDIAPI int WINAPI SetStretchBltMode(HDC hdc,int mode);", "SetSystemPaletteUse": "WINGDIAPI UINT WINAPI SetSystemPaletteUse(HDC hdc,UINT use);", "SetTextCharacterExtra": "WINGDIAPI int WINAPI SetTextCharacterExtra(HDC hdc,int extra);", "SetTextColor": "WINGDIAPI COLORREF WINAPI SetTextColor(HDC hdc,COLORREF color);", "SetTextAlign": "WINGDIAPI UINT WINAPI SetTextAlign(HDC hdc,UINT align);", "SetTextJustification": "WINGDIAPI WINBOOL WINAPI SetTextJustification(HDC hdc,int extra,int count);", "UpdateColors": "WINGDIAPI WINBOOL WINAPI UpdateColors(HDC hdc);", "GdiRegisterDdraw": "WINGDIAPI BOOL WINAPI GdiRegisterDdraw(PGDIREGISTERDDRAWPACKET pPacket,", "GdiMarshalSize": "WINGDIAPI ULONG WINAPI GdiMarshalSize(VOID);", "GdiMarshal": "WINGDIAPI VOID WINAPI GdiMarshal(DWORD dwProcessIdTo, HGDIOBJ hGdiObj,", "GdiUnmarshal": "WINGDIAPI HGDIOBJ WINAPI GdiUnmarshal(PVOID pData, ULONG ulFlags);", "AlphaBlend": "WINGDIAPI WINBOOL WINAPI AlphaBlend(HDC hdcDest,int xoriginDest,int yoriginDest,int wDest,int hDest,HDC hdcSrc,int xoriginSrc,int yoriginSrc,int wSrc,int hSrc,BLENDFUNCTION ftn);", "GdiAlphaBlend": "WINGDIAPI WINBOOL WINAPI GdiAlphaBlend(HDC hdcDest,int xoriginDest,int yoriginDest,int wDest,int hDest,HDC hdcSrc,int xoriginSrc,int yoriginSrc,int wSrc,int hSrc,BLENDFUNCTION ftn);", "TransparentBlt": "WINGDIAPI WINBOOL WINAPI TransparentBlt(HDC hdcDest,int xoriginDest,int yoriginDest,int wDest,int hDest,HDC hdcSrc,int xoriginSrc,int yoriginSrc,int wSrc,int hSrc,UINT crTransparent);", "GdiTransparentBlt": "WINGDIAPI WINBOOL WINAPI GdiTransparentBlt(HDC hdcDest,int xoriginDest,int yoriginDest,int wDest,int hDest,HDC hdcSrc,int xoriginSrc,int yoriginSrc,int wSrc,int hSrc,UINT crTransparent);", "GradientFill": "WINGDIAPI WINBOOL WINAPI GradientFill(HDC hdc,PTRIVERTEX pVertex,ULONG nVertex,PVOID pMesh,ULONG nMesh,ULONG ulMode);", "GdiGradientFill": "WINGDIAPI WINBOOL WINAPI GdiGradientFill(HDC hdc,PTRIVERTEX pVertex,ULONG nVertex,PVOID pMesh,ULONG nMesh,ULONG ulMode);", "PlayMetaFileRecord": "WINGDIAPI WINBOOL WINAPI PlayMetaFileRecord(HDC hdc,LPHANDLETABLE lpHandleTable,LPMETARECORD lpMR,UINT noObjs);", "EnumMetaFile": "WINGDIAPI WINBOOL WINAPI EnumMetaFile(HDC hdc,HMETAFILE hmf,MFENUMPROC lpProc,LPARAM lParam);", "CloseEnhMetaFile": "WINGDIAPI HENHMETAFILE WINAPI CloseEnhMetaFile(HDC hdc);", "CopyEnhMetaFileA": "WINGDIAPI HENHMETAFILE WINAPI CopyEnhMetaFileA(HENHMETAFILE hEnh,LPCSTR lpFileName);", "CopyEnhMetaFileW": "WINGDIAPI HENHMETAFILE WINAPI CopyEnhMetaFileW(HENHMETAFILE hEnh,LPCWSTR lpFileName);", "CreateEnhMetaFileA": "WINGDIAPI HDC WINAPI CreateEnhMetaFileA(HDC hdc,LPCSTR lpFilename,CONST RECT *lprc,LPCSTR lpDesc);", "CreateEnhMetaFileW": "WINGDIAPI HDC WINAPI CreateEnhMetaFileW(HDC hdc,LPCWSTR lpFilename,CONST RECT *lprc,LPCWSTR lpDesc);", "DeleteEnhMetaFile": "WINGDIAPI WINBOOL WINAPI DeleteEnhMetaFile(HENHMETAFILE hmf);", "EnumEnhMetaFile": "WINGDIAPI WINBOOL WINAPI EnumEnhMetaFile(HDC hdc,HENHMETAFILE hmf,ENHMFENUMPROC lpProc,LPVOID lpParam,CONST RECT *lpRect);", "GetEnhMetaFileA": "WINGDIAPI HENHMETAFILE WINAPI GetEnhMetaFileA(LPCSTR lpName);", "GetEnhMetaFileW": "WINGDIAPI HENHMETAFILE WINAPI GetEnhMetaFileW(LPCWSTR lpName);", "GetEnhMetaFileBits": "WINGDIAPI UINT WINAPI GetEnhMetaFileBits(HENHMETAFILE hEMF,UINT nSize,LPBYTE lpData);", "GetEnhMetaFileDescriptionA": "WINGDIAPI UINT WINAPI GetEnhMetaFileDescriptionA(HENHMETAFILE hemf,UINT cchBuffer,LPSTR lpDescription);", "GetEnhMetaFileDescriptionW": "WINGDIAPI UINT WINAPI GetEnhMetaFileDescriptionW(HENHMETAFILE hemf,UINT cchBuffer,LPWSTR lpDescription);", "GetEnhMetaFileHeader": "WINGDIAPI UINT WINAPI GetEnhMetaFileHeader(HENHMETAFILE hemf,UINT nSize,LPENHMETAHEADER lpEnhMetaHeader);", "GetEnhMetaFilePaletteEntries": "WINGDIAPI UINT WINAPI GetEnhMetaFilePaletteEntries(HENHMETAFILE hemf,UINT nNumEntries,LPPALETTEENTRY lpPaletteEntries);", "GetEnhMetaFilePixelFormat": "UINT WINAPI GetEnhMetaFilePixelFormat (HENHMETAFILE hemf, const PIXELFORMATDESCRIPTOR *ppfd);", "GetWinMetaFileBits": "WINGDIAPI UINT WINAPI GetWinMetaFileBits(HENHMETAFILE hemf,UINT cbData16,LPBYTE pData16,INT iMapMode,HDC hdcRef);", "PlayEnhMetaFile": "WINGDIAPI WINBOOL WINAPI PlayEnhMetaFile(HDC hdc,HENHMETAFILE hmf,CONST RECT *lprect);", "PlayEnhMetaFileRecord": "WINGDIAPI WINBOOL WINAPI PlayEnhMetaFileRecord(HDC hdc,LPHANDLETABLE pht,CONST ENHMETARECORD *pmr,UINT cht);", "SetEnhMetaFileBits": "WINGDIAPI HENHMETAFILE WINAPI SetEnhMetaFileBits(UINT nSize,CONST BYTE *pb);", "SetWinMetaFileBits": "WINGDIAPI HENHMETAFILE WINAPI SetWinMetaFileBits(UINT nSize,CONST BYTE *lpMeta16Data,HDC hdcRef,CONST METAFILEPICT *lpMFP);", "GdiComment": "WINGDIAPI WINBOOL WINAPI GdiComment(HDC hdc,UINT nSize,CONST BYTE *lpData);", "GetTextMetricsA": "WINGDIAPI WINBOOL WINAPI GetTextMetricsA(HDC hdc,LPTEXTMETRICA lptm);", "GetTextMetricsW": "WINGDIAPI WINBOOL WINAPI GetTextMetricsW(HDC hdc,LPTEXTMETRICW lptm);", "AngleArc": "WINGDIAPI WINBOOL WINAPI AngleArc(HDC hdc,int x,int y,DWORD r,FLOAT StartAngle,FLOAT SweepAngle);", "PolyPolyline": "WINGDIAPI WINBOOL WINAPI PolyPolyline(HDC hdc,CONST POINT *apt,CONST DWORD *asz,DWORD csz);", "GetWorldTransform": "WINGDIAPI WINBOOL WINAPI GetWorldTransform(HDC hdc,LPXFORM lpxf);", "SetWorldTransform": "WINGDIAPI WINBOOL WINAPI SetWorldTransform(HDC hdc,CONST XFORM *lpxf);", "ModifyWorldTransform": "WINGDIAPI WINBOOL WINAPI ModifyWorldTransform(HDC hdc,CONST XFORM *lpxf,DWORD mode);", "CombineTransform": "WINGDIAPI WINBOOL WINAPI CombineTransform(LPXFORM lpxfOut,CONST XFORM *lpxf1,CONST XFORM *lpxf2);", "CreateDIBSection": "WINGDIAPI HBITMAP WINAPI CreateDIBSection(HDC hdc,CONST BITMAPINFO *lpbmi,UINT usage,VOID **ppvBits,HANDLE hSection,DWORD offset);", "GetDIBColorTable": "WINGDIAPI UINT WINAPI GetDIBColorTable(HDC hdc,UINT iStart,UINT cEntries,RGBQUAD *prgbq);", "SetDIBColorTable": "WINGDIAPI UINT WINAPI SetDIBColorTable(HDC hdc,UINT iStart,UINT cEntries,CONST RGBQUAD *prgbq);", "SetColorAdjustment": "WINGDIAPI WINBOOL WINAPI SetColorAdjustment(HDC hdc,CONST COLORADJUSTMENT *lpca);", "GetColorAdjustment": "WINGDIAPI WINBOOL WINAPI GetColorAdjustment(HDC hdc,LPCOLORADJUSTMENT lpca);", "CreateHalftonePalette": "WINGDIAPI HPALETTE WINAPI CreateHalftonePalette(HDC hdc);", "StartDocA": "WINGDIAPI int WINAPI StartDocA(HDC hdc,CONST DOCINFOA *lpdi);", "StartDocW": "WINGDIAPI int WINAPI StartDocW(HDC hdc,CONST DOCINFOW *lpdi);", "EndDoc": "WINGDIAPI int WINAPI EndDoc(HDC hdc);", "StartPage": "WINGDIAPI int WINAPI StartPage(HDC hdc);", "EndPage": "WINGDIAPI int WINAPI EndPage(HDC hdc);", "AbortDoc": "WINGDIAPI int WINAPI AbortDoc(HDC hdc);", "SetAbortProc": "WINGDIAPI int WINAPI SetAbortProc(HDC hdc,ABORTPROC lpProc);", "AbortPath": "WINGDIAPI WINBOOL WINAPI AbortPath(HDC hdc);", "ArcTo": "WINGDIAPI WINBOOL WINAPI ArcTo(HDC hdc,int left,int top,int right,int bottom,int xr1,int yr1,int xr2,int yr2);", "BeginPath": "WINGDIAPI WINBOOL WINAPI BeginPath(HDC hdc);", "CloseFigure": "WINGDIAPI WINBOOL WINAPI CloseFigure(HDC hdc);", "EndPath": "WINGDIAPI WINBOOL WINAPI EndPath(HDC hdc);", "FillPath": "WINGDIAPI WINBOOL WINAPI FillPath(HDC hdc);", "FlattenPath": "WINGDIAPI WINBOOL WINAPI FlattenPath(HDC hdc);", "GetPath": "WINGDIAPI int WINAPI GetPath(HDC hdc,LPPOINT apt,LPBYTE aj,int cpt);", "PathToRegion": "WINGDIAPI HRGN WINAPI PathToRegion(HDC hdc);", "PolyDraw": "WINGDIAPI WINBOOL WINAPI PolyDraw(HDC hdc,CONST POINT *apt,CONST BYTE *aj,int cpt);", "SelectClipPath": "WINGDIAPI WINBOOL WINAPI SelectClipPath(HDC hdc,int mode);", "SetArcDirection": "WINGDIAPI int WINAPI SetArcDirection(HDC hdc,int dir);", "SetMiterLimit": "WINGDIAPI WINBOOL WINAPI SetMiterLimit(HDC hdc,FLOAT limit,PFLOAT old);", "StrokeAndFillPath": "WINGDIAPI WINBOOL WINAPI StrokeAndFillPath(HDC hdc);", "StrokePath": "WINGDIAPI WINBOOL WINAPI StrokePath(HDC hdc);", "WidenPath": "WINGDIAPI WINBOOL WINAPI WidenPath(HDC hdc);", "ExtCreatePen": "WINGDIAPI HPEN WINAPI ExtCreatePen(DWORD iPenStyle,DWORD cWidth,CONST LOGBRUSH *plbrush,DWORD cStyle,CONST DWORD *pstyle);", "GetMiterLimit": "WINGDIAPI WINBOOL WINAPI GetMiterLimit(HDC hdc,PFLOAT plimit);", "GetArcDirection": "WINGDIAPI int WINAPI GetArcDirection(HDC hdc);", "GetObjectA": "WINGDIAPI int WINAPI GetObjectA(HANDLE h,int c,LPVOID pv);", "GetObjectW": "WINGDIAPI int WINAPI GetObjectW(HANDLE h,int c,LPVOID pv);", "MoveToEx": "WINGDIAPI WINBOOL WINAPI MoveToEx(HDC hdc,int x,int y,LPPOINT lppt);", "TextOutA": "WINGDIAPI WINBOOL WINAPI TextOutA(HDC hdc,int x,int y,LPCSTR lpString,int c);", "TextOutW": "WINGDIAPI WINBOOL WINAPI TextOutW(HDC hdc,int x,int y,LPCWSTR lpString,int c);", "ExtTextOutA": "WINGDIAPI WINBOOL WINAPI ExtTextOutA(HDC hdc,int x,int y,UINT options,CONST RECT *lprect,LPCSTR lpString,UINT c,CONST INT *lpDx);", "ExtTextOutW": "WINGDIAPI WINBOOL WINAPI ExtTextOutW(HDC hdc,int x,int y,UINT options,CONST RECT *lprect,LPCWSTR lpString,UINT c,CONST INT *lpDx);", "PolyTextOutA": "WINGDIAPI WINBOOL WINAPI PolyTextOutA(HDC hdc,CONST POLYTEXTA *ppt,int nstrings);", "PolyTextOutW": "WINGDIAPI WINBOOL WINAPI PolyTextOutW(HDC hdc,CONST POLYTEXTW *ppt,int nstrings);", "CreatePolygonRgn": "WINGDIAPI HRGN WINAPI CreatePolygonRgn(CONST POINT *pptl,int cPoint,int iMode);", "DPtoLP": "WINGDIAPI WINBOOL WINAPI DPtoLP(HDC hdc,LPPOINT lppt,int c);", "LPtoDP": "WINGDIAPI WINBOOL WINAPI LPtoDP(HDC hdc,LPPOINT lppt,int c);", "Polygon": "WINGDIAPI WINBOOL WINAPI Polygon(HDC hdc,CONST POINT *apt,int cpt);", "Polyline": "WINGDIAPI WINBOOL WINAPI Polyline(HDC hdc,CONST POINT *apt,int cpt);", "PolyBezier": "WINGDIAPI WINBOOL WINAPI PolyBezier(HDC hdc,CONST POINT *apt,DWORD cpt);", "PolyBezierTo": "WINGDIAPI WINBOOL WINAPI PolyBezierTo(HDC hdc,CONST POINT *apt,DWORD cpt);", "PolylineTo": "WINGDIAPI WINBOOL WINAPI PolylineTo(HDC hdc,CONST POINT *apt,DWORD cpt);", "SetViewportExtEx": "WINGDIAPI WINBOOL WINAPI SetViewportExtEx(HDC hdc,int x,int y,LPSIZE lpsz);", "SetViewportOrgEx": "WINGDIAPI WINBOOL WINAPI SetViewportOrgEx(HDC hdc,int x,int y,LPPOINT lppt);", "SetWindowExtEx": "WINGDIAPI WINBOOL WINAPI SetWindowExtEx(HDC hdc,int x,int y,LPSIZE lpsz);", "SetWindowOrgEx": "WINGDIAPI WINBOOL WINAPI SetWindowOrgEx(HDC hdc,int x,int y,LPPOINT lppt);", "OffsetViewportOrgEx": "WINGDIAPI WINBOOL WINAPI OffsetViewportOrgEx(HDC hdc,int x,int y,LPPOINT lppt);", "OffsetWindowOrgEx": "WINGDIAPI WINBOOL WINAPI OffsetWindowOrgEx(HDC hdc,int x,int y,LPPOINT lppt);", "ScaleViewportExtEx": "WINGDIAPI WINBOOL WINAPI ScaleViewportExtEx(HDC hdc,int xn,int dx,int yn,int yd,LPSIZE lpsz);", "ScaleWindowExtEx": "WINGDIAPI WINBOOL WINAPI ScaleWindowExtEx(HDC hdc,int xn,int xd,int yn,int yd,LPSIZE lpsz);", "SetBitmapDimensionEx": "WINGDIAPI WINBOOL WINAPI SetBitmapDimensionEx(HBITMAP hbm,int w,int h,LPSIZE lpsz);", "SetBrushOrgEx": "WINGDIAPI WINBOOL WINAPI SetBrushOrgEx(HDC hdc,int x,int y,LPPOINT lppt);", "GetTextFaceA": "WINGDIAPI int WINAPI GetTextFaceA(HDC hdc,int c,LPSTR lpName);", "GetTextFaceW": "WINGDIAPI int WINAPI GetTextFaceW(HDC hdc,int c,LPWSTR lpName);", "GetKerningPairsA": "WINGDIAPI DWORD WINAPI GetKerningPairsA(HDC hdc,DWORD nPairs,LPKERNINGPAIR lpKernPair);", "GetKerningPairsW": "WINGDIAPI DWORD WINAPI GetKerningPairsW(HDC hdc,DWORD nPairs,LPKERNINGPAIR lpKernPair);", "GetDCOrgEx": "WINGDIAPI WINBOOL WINAPI GetDCOrgEx(HDC hdc,LPPOINT lppt);", "FixBrushOrgEx": "WINGDIAPI WINBOOL WINAPI FixBrushOrgEx(HDC hdc,int x,int y,LPPOINT ptl);", "UnrealizeObject": "WINGDIAPI WINBOOL WINAPI UnrealizeObject(HGDIOBJ h);", "GdiFlush": "WINGDIAPI WINBOOL WINAPI GdiFlush(void);", "GdiSetBatchLimit": "WINGDIAPI DWORD WINAPI GdiSetBatchLimit(DWORD dw);", "GdiGetBatchLimit": "WINGDIAPI DWORD WINAPI GdiGetBatchLimit(void);", "SetICMMode": "WINGDIAPI int WINAPI SetICMMode(HDC hdc,int mode);", "CheckColorsInGamut": "WINGDIAPI WINBOOL WINAPI CheckColorsInGamut(HDC hdc,LPVOID lpRGBTriple,LPVOID dlpBuffer,DWORD nCount);", "GetColorSpace": "WINGDIAPI HCOLORSPACE WINAPI GetColorSpace(HDC hdc);", "GetLogColorSpaceA": "WINGDIAPI WINBOOL WINAPI GetLogColorSpaceA(HCOLORSPACE hColorSpace,LPLOGCOLORSPACEA lpBuffer,DWORD nSize);", "GetLogColorSpaceW": "WINGDIAPI WINBOOL WINAPI GetLogColorSpaceW(HCOLORSPACE hColorSpace,LPLOGCOLORSPACEW lpBuffer,DWORD nSize);", "CreateColorSpaceA": "WINGDIAPI HCOLORSPACE WINAPI CreateColorSpaceA(LPLOGCOLORSPACEA lplcs);", "CreateColorSpaceW": "WINGDIAPI HCOLORSPACE WINAPI CreateColorSpaceW(LPLOGCOLORSPACEW lplcs);", "SetColorSpace": "WINGDIAPI HCOLORSPACE WINAPI SetColorSpace(HDC hdc,HCOLORSPACE hcs);", "DeleteColorSpace": "WINGDIAPI WINBOOL WINAPI DeleteColorSpace(HCOLORSPACE hcs);", "GetICMProfileA": "WINGDIAPI WINBOOL WINAPI GetICMProfileA(HDC hdc,LPDWORD pBufSize,LPSTR pszFilename);", "GetICMProfileW": "WINGDIAPI WINBOOL WINAPI GetICMProfileW(HDC hdc,LPDWORD pBufSize,LPWSTR pszFilename);", "SetICMProfileA": "WINGDIAPI WINBOOL WINAPI SetICMProfileA(HDC hdc,LPSTR lpFileName);", "SetICMProfileW": "WINGDIAPI WINBOOL WINAPI SetICMProfileW(HDC hdc,LPWSTR lpFileName);", "GetDeviceGammaRamp": "WINGDIAPI WINBOOL WINAPI GetDeviceGammaRamp(HDC hdc,LPVOID lpRamp);", "SetDeviceGammaRamp": "WINGDIAPI WINBOOL WINAPI SetDeviceGammaRamp(HDC hdc,LPVOID lpRamp);", "ColorMatchToTarget": "WINGDIAPI WINBOOL WINAPI ColorMatchToTarget(HDC hdc,HDC hdcTarget,DWORD action);", "EnumICMProfilesA": "WINGDIAPI int WINAPI EnumICMProfilesA(HDC hdc,ICMENUMPROCA lpProc,LPARAM lParam);", "EnumICMProfilesW": "WINGDIAPI int WINAPI EnumICMProfilesW(HDC hdc,ICMENUMPROCW lpProc,LPARAM lParam);", "UpdateICMRegKeyA": "WINGDIAPI WINBOOL WINAPI UpdateICMRegKeyA(DWORD reserved,LPSTR lpszCMID,LPSTR lpszFileName,UINT command);", "UpdateICMRegKeyW": "WINGDIAPI WINBOOL WINAPI UpdateICMRegKeyW(DWORD reserved,LPWSTR lpszCMID,LPWSTR lpszFileName,UINT command);", "ColorCorrectPalette": "WINGDIAPI WINBOOL WINAPI ColorCorrectPalette(HDC hdc,HPALETTE hPal,DWORD deFirst,DWORD num);", "wglCopyContext": "BOOL WINAPI wglCopyContext (HGLRC hglrcSrc, HGLRC hglrcDst, UINT mask);", "wglCreateContext": "HGLRC WINAPI wglCreateContext (HDC hDc);", "wglCreateLayerContext": "HGLRC WINAPI wglCreateLayerContext (HDC hDc, int level);", "wglDeleteContext": "BOOL WINAPI wglDeleteContext (HGLRC oldContext);", "wglGetCurrentContext": "HGLRC WINAPI wglGetCurrentContext (void);", "wglGetCurrentDC": "HDC WINAPI wglGetCurrentDC (void);", "wglGetProcAddress": "PROC WINAPI wglGetProcAddress (LPCSTR lpszProc);", "wglMakeCurrent": "BOOL WINAPI wglMakeCurrent (HDC hDc, HGLRC newContext);", "wglShareLists": "BOOL WINAPI wglShareLists (HGLRC hrcSrvShare, HGLRC hrcSrvSource);", "wglUseFontBitmapsA": "BOOL WINAPI wglUseFontBitmapsA (HDC hDC, DWORD first, DWORD count, DWORD listBase);", "wglUseFontBitmapsW": "BOOL WINAPI wglUseFontBitmapsW (HDC hDC, DWORD first, DWORD count, DWORD listBase);", "SwapBuffers": "BOOL WINAPI SwapBuffers (HDC hdc);", "wglUseFontOutlinesA": "BOOL WINAPI wglUseFontOutlinesA (HDC hDC, DWORD first, DWORD count, DWORD listBase, FLOAT deviation, FLOAT extrusion, int format, LPGLYPHMETRICSFLOAT lpgmf);", "wglUseFontOutlinesW": "BOOL WINAPI wglUseFontOutlinesW (HDC hDC, DWORD first, DWORD count, DWORD listBase, FLOAT deviation, FLOAT extrusion, int format, LPGLYPHMETRICSFLOAT lpgmf);", "wglDescribeLayerPlane": "BOOL WINAPI wglDescribeLayerPlane (HDC hDc, int pixelFormat, int layerPlane, UINT nBytes, const LAYERPLANEDESCRIPTOR *plpd);", "wglSetLayerPaletteEntries": "int WINAPI wglSetLayerPaletteEntries (HDC hdc, int iLayerPlane, int iStart, int cEntries, const COLORREF *pcr);", "wglGetLayerPaletteEntries": "int WINAPI wglGetLayerPaletteEntries (HDC hdc, int iLayerPlane, int iStart, int cEntries, const COLORREF *pcr);", "wglRealizeLayerPalette": "BOOL WINAPI wglRealizeLayerPalette (HDC hdc, int iLayerPlane, BOOL bRealize);", "wglSwapLayerBuffers": "BOOL WINAPI wglSwapLayerBuffers (HDC hdc, UINT fuFlags);", "wglSwapMultipleBuffers": "WINGDIAPI DWORD WINAPI wglSwapMultipleBuffers(UINT,CONST WGLSWAP *);", "D3DXCreateMesh": "HRESULT WINAPI D3DXCreateMesh(DWORD face_count, DWORD vertex_count, DWORD flags,", "D3DXCreateMeshFVF": "HRESULT WINAPI D3DXCreateMeshFVF(DWORD face_count, DWORD vertex_count, DWORD flags,", "D3DXCreateBuffer": "HRESULT WINAPI D3DXCreateBuffer(DWORD size, ID3DXBuffer **buffer);", "D3DXCreateSPMesh": "HRESULT WINAPI D3DXCreateSPMesh(ID3DXMesh *mesh, const DWORD *adjacency,", "D3DXCreatePMeshFromStream": "HRESULT WINAPI D3DXCreatePMeshFromStream(struct IStream *stream, DWORD flags, struct IDirect3DDevice9 *device,", "D3DXCreateSkinInfo": "HRESULT WINAPI D3DXCreateSkinInfo(DWORD vertex_count, const D3DVERTEXELEMENT9 *declaration,", "D3DXCreateSkinInfoFVF": "HRESULT WINAPI D3DXCreateSkinInfoFVF(DWORD vertex_count, DWORD fvf, DWORD bone_count, ID3DXSkinInfo **skin_info);", "D3DXCreateSkinInfoFromBlendedMesh": "HRESULT WINAPI D3DXCreateSkinInfoFromBlendedMesh(ID3DXBaseMesh *mesh, DWORD bone_count,", "D3DXCreatePatchMesh": "HRESULT WINAPI D3DXCreatePatchMesh(const D3DXPATCHINFO *patch_info, DWORD patch_count,", "D3DXCreatePRTBuffer": "HRESULT WINAPI D3DXCreatePRTBuffer(UINT sample_count, UINT coeff_count, UINT channel_count, ID3DXPRTBuffer **buffer);", "D3DXCreatePRTBufferTex": "HRESULT WINAPI D3DXCreatePRTBufferTex(UINT width, UINT height, UINT coeff_count,", "D3DXCreatePRTCompBuffer": "HRESULT WINAPI D3DXCreatePRTCompBuffer(D3DXSHCOMPRESSQUALITYTYPE quality, UINT cluster_count, UINT pca_count,", "D3DXCreateTextureGutterHelper": "HRESULT WINAPI D3DXCreateTextureGutterHelper(UINT width, UINT height, ID3DXMesh *mesh,", "D3DXCreatePRTEngine": "HRESULT WINAPI D3DXCreatePRTEngine(ID3DXMesh *mesh, DWORD *adjacency, WINBOOL extract_uv,", "D3DXLoadMeshFromXA": "HRESULT WINAPI D3DXLoadMeshFromXA(const char *filename, DWORD flags, struct IDirect3DDevice9 *device,", "D3DXLoadMeshFromXW": "HRESULT WINAPI D3DXLoadMeshFromXW(const WCHAR *filename, DWORD flags, struct IDirect3DDevice9 *device,", "D3DXLoadMeshFromXInMemory": "HRESULT WINAPI D3DXLoadMeshFromXInMemory(const void *data, DWORD data_size, DWORD flags,", "D3DXLoadMeshFromXResource": "HRESULT WINAPI D3DXLoadMeshFromXResource(HMODULE module, const char *resource, const char *resource_type,", "D3DXLoadMeshFromXof": "HRESULT WINAPI D3DXLoadMeshFromXof(struct ID3DXFileData *file_data, DWORD flags, struct IDirect3DDevice9 *device,", "D3DXLoadPatchMeshFromXof": "HRESULT WINAPI D3DXLoadPatchMeshFromXof(struct ID3DXFileData *file_data, DWORD flags, struct IDirect3DDevice9 *device,", "D3DXLoadSkinMeshFromXof": "HRESULT WINAPI D3DXLoadSkinMeshFromXof(struct ID3DXFileData *file_data, DWORD flags, struct IDirect3DDevice9 *device,", "D3DXLoadPRTBufferFromFileA": "HRESULT WINAPI D3DXLoadPRTBufferFromFileA(const char *filename, ID3DXPRTBuffer **buffer);", "D3DXLoadPRTBufferFromFileW": "HRESULT WINAPI D3DXLoadPRTBufferFromFileW(const WCHAR *filename, ID3DXPRTBuffer **buffer);", "D3DXLoadPRTCompBufferFromFileA": "HRESULT WINAPI D3DXLoadPRTCompBufferFromFileA(const char *filename, ID3DXPRTCompBuffer **buffer);", "D3DXLoadPRTCompBufferFromFileW": "HRESULT WINAPI D3DXLoadPRTCompBufferFromFileW(const WCHAR *filename, ID3DXPRTCompBuffer **buffer);", "D3DXSaveMeshToXA": "HRESULT WINAPI D3DXSaveMeshToXA(const char *filename, ID3DXMesh *mesh, const DWORD *adjacency,", "D3DXSaveMeshToXW": "HRESULT WINAPI D3DXSaveMeshToXW(const WCHAR *filename, ID3DXMesh *mesh, const DWORD *adjacency,", "D3DXSavePRTBufferToFileA": "HRESULT WINAPI D3DXSavePRTBufferToFileA(const char *filename, ID3DXPRTBuffer *buffer);", "D3DXSavePRTBufferToFileW": "HRESULT WINAPI D3DXSavePRTBufferToFileW(const WCHAR *filename, ID3DXPRTBuffer *buffer);", "D3DXSavePRTCompBufferToFileA": "HRESULT WINAPI D3DXSavePRTCompBufferToFileA(const char *filename, ID3DXPRTCompBuffer *buffer);", "D3DXSavePRTCompBufferToFileW": "HRESULT WINAPI D3DXSavePRTCompBufferToFileW(const WCHAR *filename, ID3DXPRTCompBuffer *buffer);", "D3DXGetDeclLength": "UINT    WINAPI D3DXGetDeclLength(const D3DVERTEXELEMENT9 *decl);", "D3DXGetDeclVertexSize": "UINT    WINAPI D3DXGetDeclVertexSize(const D3DVERTEXELEMENT9 *decl, DWORD stream_idx);", "D3DXGetFVFVertexSize": "UINT    WINAPI D3DXGetFVFVertexSize(DWORD);", "D3DXBoxBoundProbe": "WINBOOL WINAPI D3DXBoxBoundProbe(const D3DXVECTOR3 *vmin, const D3DXVECTOR3 *vmax,", "D3DXSphereBoundProbe": "WINBOOL WINAPI D3DXSphereBoundProbe(const D3DXVECTOR3 *center, FLOAT radius,", "D3DXCleanMesh": "HRESULT WINAPI D3DXCleanMesh(D3DXCLEANTYPE clean_type, ID3DXMesh *mesh_in, const DWORD *adjacency_in,", "D3DXConcatenateMeshes": "HRESULT WINAPI D3DXConcatenateMeshes(struct ID3DXMesh **meshes, UINT mesh_count, DWORD flags,", "D3DXComputeBoundingBox": "HRESULT WINAPI D3DXComputeBoundingBox(const D3DXVECTOR3 *first_pos, DWORD num_vertices,", "D3DXComputeBoundingSphere": "HRESULT WINAPI D3DXComputeBoundingSphere(const D3DXVECTOR3 *first_pos, DWORD num_vertices,", "D3DXComputeIMTFromPerTexelSignal": "HRESULT WINAPI D3DXComputeIMTFromPerTexelSignal(ID3DXMesh *mesh, DWORD texture_idx, float *texel_signal,", "D3DXComputeIMTFromPerVertexSignal": "HRESULT WINAPI D3DXComputeIMTFromPerVertexSignal(ID3DXMesh *mesh, const float *vertex_signal,", "D3DXComputeIMTFromSignal": "HRESULT WINAPI D3DXComputeIMTFromSignal(ID3DXMesh *mesh, DWORD texture_idx, UINT signal_dimension,", "D3DXComputeIMTFromTexture": "HRESULT WINAPI D3DXComputeIMTFromTexture(struct ID3DXMesh *mesh, struct IDirect3DTexture9 *texture,", "D3DXComputeNormals": "HRESULT WINAPI D3DXComputeNormals(ID3DXBaseMesh *mesh, const DWORD *adjacency);", "D3DXComputeTangentFrameEx": "HRESULT WINAPI D3DXComputeTangentFrameEx(ID3DXMesh *mesh_in, DWORD texture_in_semantic, DWORD texture_in_idx,", "D3DXComputeTangent": "HRESULT WINAPI D3DXComputeTangent(ID3DXMesh *mesh, DWORD stage, DWORD tangent_idx,", "D3DXConvertMeshSubsetToSingleStrip": "HRESULT WINAPI D3DXConvertMeshSubsetToSingleStrip(struct ID3DXBaseMesh *mesh_in, DWORD attribute_id,", "D3DXConvertMeshSubsetToStrips": "HRESULT WINAPI D3DXConvertMeshSubsetToStrips(struct ID3DXBaseMesh *mesh_in, DWORD attribute_id,", "D3DXDeclaratorFromFVF": "HRESULT WINAPI D3DXDeclaratorFromFVF(DWORD, D3DVERTEXELEMENT9[MAX_FVF_DECL_SIZE]);", "D3DXFVFFromDeclarator": "HRESULT WINAPI D3DXFVFFromDeclarator(const D3DVERTEXELEMENT9 *decl, DWORD *fvf);", "D3DXGenerateOutputDecl": "HRESULT WINAPI D3DXGenerateOutputDecl(D3DVERTEXELEMENT9 *decl_out, const D3DVERTEXELEMENT9 *decl_in);", "D3DXGeneratePMesh": "HRESULT WINAPI D3DXGeneratePMesh(ID3DXMesh *mesh, const DWORD *adjacency,", "D3DXIntersect": "HRESULT WINAPI D3DXIntersect(ID3DXBaseMesh *mesh, const D3DXVECTOR3 *ray_position, const D3DXVECTOR3 *ray_direction,", "D3DXIntersectSubset": "HRESULT WINAPI D3DXIntersectSubset(ID3DXBaseMesh *mesh, DWORD attribute_id, const D3DXVECTOR3 *ray_position,", "D3DXIntersectTri": "WINBOOL WINAPI D3DXIntersectTri(const D3DXVECTOR3 *vtx0, const D3DXVECTOR3 *vtx1,", "D3DXOptimizeFaces": "HRESULT WINAPI D3DXOptimizeFaces(const void *indices, UINT face_count,", "D3DXOptimizeVertices": "HRESULT WINAPI D3DXOptimizeVertices(const void *indices, UINT face_count,", "D3DXRectPatchSize": "HRESULT WINAPI D3DXRectPatchSize(const FLOAT *segment_count, DWORD *num_triangles,", "D3DXSHPRTCompSuperCluster": "HRESULT WINAPI D3DXSHPRTCompSuperCluster(UINT *cluster_ids, ID3DXMesh *scene, UINT max_cluster_count,", "D3DXSHPRTCompSplitMeshSC": "HRESULT WINAPI D3DXSHPRTCompSplitMeshSC(UINT *cluster_idx, UINT vertex_count, UINT cluster_count, UINT *scluster_ids,", "D3DXSimplifyMesh": "HRESULT WINAPI D3DXSimplifyMesh(ID3DXMesh *mesh_in, const DWORD *adjacency,", "D3DXSplitMesh": "HRESULT WINAPI D3DXSplitMesh(ID3DXMesh *mesh_in, const DWORD *adjacency_in, const DWORD max_size,", "D3DXTessellateNPatches": "HRESULT WINAPI D3DXTessellateNPatches(ID3DXMesh *mesh_in, const DWORD *adjacency_in, float segment_count,", "D3DXTessellateRectPatch": "HRESULT WINAPI D3DXTessellateRectPatch(struct IDirect3DVertexBuffer9 *buffer, const float *segment_count,", "D3DXTessellateTriPatch": "HRESULT WINAPI D3DXTessellateTriPatch(struct IDirect3DVertexBuffer9 *buffer, const float *segment_count,", "D3DXTriPatchSize": "HRESULT WINAPI D3DXTriPatchSize(const FLOAT *segment_count, DWORD *num_triangles,", "D3DXUVAtlasCreate": "HRESULT WINAPI D3DXUVAtlasCreate(ID3DXMesh *mesh_in, UINT max_chart_count, float max_stretch_in,", "D3DXUVAtlasPack": "HRESULT WINAPI D3DXUVAtlasPack(ID3DXMesh *mesh, UINT width, UINT height, float gutter, DWORD texture_idx,", "D3DXUVAtlasPartition": "HRESULT WINAPI D3DXUVAtlasPartition(ID3DXMesh *mesh_in, UINT max_chart_count, float max_stretch_in,", "D3DXValidMesh": "HRESULT WINAPI D3DXValidMesh(ID3DXMesh *mesh, const DWORD *adjacency, ID3DXBuffer **errors);", "D3DXValidPatchMesh": "HRESULT WINAPI D3DXValidPatchMesh(ID3DXPatchMesh *mesh, DWORD *degenerate_vertex_count,", "D3DXWeldVertices": "HRESULT WINAPI D3DXWeldVertices(ID3DXMesh *mesh, DWORD flags, const D3DXWELDEPSILONS *epsilons,", "GetDpiForShellUIComponent": "UINT WINAPI GetDpiForShellUIComponent(SHELL_UI_COMPONENT component);", "IRouterProtocolConfig_AddProtocol_Proxy": "HRESULT WINAPI IRouterProtocolConfig_AddProtocol_Proxy(IRouterProtocolConfig *This,LPCOLESTR pszMachineName,DWORD dwTransportId,DWORD dwProtocolId,HWND hWnd,DWORD dwFlags,IUnknown *pRouter,ULONG_PTR uReserved1);", "IRouterProtocolConfig_RemoveProtocol_Proxy": "HRESULT WINAPI IRouterProtocolConfig_RemoveProtocol_Proxy(IRouterProtocolConfig *This,LPCOLESTR pszMachineName,DWORD dwTransportId,DWORD dwProtocolId,HWND hWnd,DWORD dwFlags,IUnknown *pRouter,ULONG_PTR uReserved1);", "IAuthenticationProviderConfig_Initialize_Proxy": "HRESULT WINAPI IAuthenticationProviderConfig_Initialize_Proxy(IAuthenticationProviderConfig *This,LPCOLESTR pszMachineName,ULONG_PTR *puConnectionParam);", "IAuthenticationProviderConfig_Uninitialize_Proxy": "HRESULT WINAPI IAuthenticationProviderConfig_Uninitialize_Proxy(IAuthenticationProviderConfig *This,ULONG_PTR uConnectionParam);", "IAuthenticationProviderConfig_Configure_Proxy": "HRESULT WINAPI IAuthenticationProviderConfig_Configure_Proxy(IAuthenticationProviderConfig *This,ULONG_PTR uConnectionParam,HWND hWnd,DWORD dwFlags,ULONG_PTR uReserved1,ULONG_PTR uReserved2);", "IAuthenticationProviderConfig_Activate_Proxy": "HRESULT WINAPI IAuthenticationProviderConfig_Activate_Proxy(IAuthenticationProviderConfig *This,ULONG_PTR uConnectionParam,ULONG_PTR uReserved1,ULONG_PTR uReserved2);", "IAuthenticationProviderConfig_Deactivate_Proxy": "HRESULT WINAPI IAuthenticationProviderConfig_Deactivate_Proxy(IAuthenticationProviderConfig *This,ULONG_PTR uConnectionParam,ULONG_PTR uReserved1,ULONG_PTR uReserved2);", "IAccountingProviderConfig_Initialize_Proxy": "HRESULT WINAPI IAccountingProviderConfig_Initialize_Proxy(IAccountingProviderConfig *This,LPCOLESTR pszMachineName,ULONG_PTR *puConnectionParam);", "IAccountingProviderConfig_Uninitialize_Proxy": "HRESULT WINAPI IAccountingProviderConfig_Uninitialize_Proxy(IAccountingProviderConfig *This,ULONG_PTR uConnectionParam);", "IAccountingProviderConfig_Configure_Proxy": "HRESULT WINAPI IAccountingProviderConfig_Configure_Proxy(IAccountingProviderConfig *This,ULONG_PTR uConnectionParam,HWND hWnd,DWORD dwFlags,ULONG_PTR uReserved1,ULONG_PTR uReserved2);", "IAccountingProviderConfig_Activate_Proxy": "HRESULT WINAPI IAccountingProviderConfig_Activate_Proxy(IAccountingProviderConfig *This,ULONG_PTR uConnectionParam,ULONG_PTR uReserved1,ULONG_PTR uReserved2);", "IAccountingProviderConfig_Deactivate_Proxy": "HRESULT WINAPI IAccountingProviderConfig_Deactivate_Proxy(IAccountingProviderConfig *This,ULONG_PTR uConnectionParam,ULONG_PTR uReserved1,ULONG_PTR uReserved2);", "IEAPProviderConfig_Initialize_Proxy": "HRESULT WINAPI IEAPProviderConfig_Initialize_Proxy(IEAPProviderConfig *This,LPCOLESTR pszMachineName,DWORD dwEapTypeId,ULONG_PTR *puConnectionParam);", "IEAPProviderConfig_Uninitialize_Proxy": "HRESULT WINAPI IEAPProviderConfig_Uninitialize_Proxy(IEAPProviderConfig *This,DWORD dwEapTypeId,ULONG_PTR uConnectionParam);", "IEAPProviderConfig_ServerInvokeConfigUI_Proxy": "HRESULT WINAPI IEAPProviderConfig_ServerInvokeConfigUI_Proxy(IEAPProviderConfig *This,DWORD dwEapTypeId,ULONG_PTR uConnectionParam,HWND hWnd,ULONG_PTR uReserved1,ULONG_PTR uReserved2);", "IEAPProviderConfig_RouterInvokeConfigUI_Proxy": "HRESULT WINAPI IEAPProviderConfig_RouterInvokeConfigUI_Proxy(IEAPProviderConfig *This,DWORD dwEapTypeId,ULONG_PTR uConnectionParam,HWND hwndParent,DWORD dwFlags,BYTE *pConnectionDataIn,DWORD dwSizeOfConnectionDataIn,BYTE **ppConnectionDataOut,DWORD *pdwSizeOfConnectionDataOut);", "IEAPProviderConfig_RouterInvokeCredentialsUI_Proxy": "HRESULT WINAPI IEAPProviderConfig_RouterInvokeCredentialsUI_Proxy(IEAPProviderConfig *This,DWORD dwEapTypeId,ULONG_PTR uConnectionParam,HWND hwndParent,DWORD dwFlags,BYTE *pConnectionDataIn,DWORD dwSizeOfConnectionDataIn,BYTE *pUserDataIn,DWORD dwSizeOfUserDataIn,BYTE **ppUserDataOut,DWORD *pdwSizeOfUserDataOut);", "IObjectWithSite_SetSite_Proxy": "HRESULT WINAPI IObjectWithSite_SetSite_Proxy(IObjectWithSite *This,IUnknown *pUnkSite);", "IObjectWithSite_GetSite_Proxy": "HRESULT WINAPI IObjectWithSite_GetSite_Proxy(IObjectWithSite *This,REFIID riid,void **ppvSite);", "IDataPathBrowser_BrowseType_Proxy": "HRESULT WINAPI IDataPathBrowser_BrowseType_Proxy(IDataPathBrowser *This,REFGUID rguidPathType,LPOLESTR pszDefaultPath,ULONG cchPath,LPOLESTR pszPath,HWND hWnd);", "IProvideClassInfo3_GetGUIDDwordArrays_Proxy": "HRESULT WINAPI IProvideClassInfo3_GetGUIDDwordArrays_Proxy(IProvideClassInfo3 *This,REFGUID rguidArray,CAUUID *pcaUUID,CADWORD *pcadw);", "IProvideClassInfo3_GetClassInfoLocale_Proxy": "HRESULT WINAPI IProvideClassInfo3_GetClassInfoLocale_Proxy(IProvideClassInfo3 *This,ITypeInfo **ppITypeInfo,LCID lcid);", "IProvideClassInfo3_GetFlags_Proxy": "HRESULT WINAPI IProvideClassInfo3_GetFlags_Proxy(IProvideClassInfo3 *This,REFGUID guidGroup,DWORD *pdwFlags);", "D3D10CreateDevice1": "HRESULT WINAPI D3D10CreateDevice1(IDXGIAdapter*,D3D10_DRIVER_TYPE,", "SMELoadMenuA": "DWORD WINAPI SMELoadMenuA(HWND hWnd,PSMS_LOADMENUA psmsload);", "SMELoadMenuW": "DWORD WINAPI SMELoadMenuW(HWND hWnd,PSMS_LOADMENUW psmsload);", "SMEGetExtendedErrorStringA": "LPSTR WINAPI SMEGetExtendedErrorStringA(VOID);", "SMEGetExtendedErrorStringW": "LPWSTR WINAPI SMEGetExtendedErrorStringW(VOID);", "SMEUnloadMenu": "VOID WINAPI SMEUnloadMenu(VOID);", "SMEInitializeMenu": "VOID WINAPI SMEInitializeMenu(VOID);", "SMERefresh": "VOID WINAPI SMERefresh(HWND hwndParent);", "SMEMenuAction": "VOID WINAPI SMEMenuAction(HWND hwndParent,DWORD dwEventId);", "SMEValidateA": "WINBOOL WINAPI SMEValidateA(PSMS_VALIDATEA psmsValidate);", "SMEValidateW": "WINBOOL WINAPI SMEValidateW(PSMS_VALIDATEW psmsValidate);", "IDialEventSink_OnEvent_Proxy": "HRESULT WINAPI IDialEventSink_OnEvent_Proxy(IDialEventSink *This,DWORD dwEvent,DWORD dwStatus);", "IDialEngine_Initialize_Proxy": "HRESULT WINAPI IDialEngine_Initialize_Proxy(IDialEngine *This,LPCWSTR pwzConnectoid,IDialEventSink *pIDES);", "IDialEngine_GetProperty_Proxy": "HRESULT WINAPI IDialEngine_GetProperty_Proxy(IDialEngine *This,LPCWSTR pwzProperty,LPWSTR pwzValue,DWORD dwBufSize);", "IDialEngine_SetProperty_Proxy": "HRESULT WINAPI IDialEngine_SetProperty_Proxy(IDialEngine *This,LPCWSTR pwzProperty,LPCWSTR pwzValue);", "IDialEngine_Dial_Proxy": "HRESULT WINAPI IDialEngine_Dial_Proxy(IDialEngine *This);", "IDialEngine_HangUp_Proxy": "HRESULT WINAPI IDialEngine_HangUp_Proxy(IDialEngine *This);", "IDialEngine_GetConnectedState_Proxy": "HRESULT WINAPI IDialEngine_GetConnectedState_Proxy(IDialEngine *This,DWORD *pdwState);", "IDialEngine_GetConnectHandle_Proxy": "HRESULT WINAPI IDialEngine_GetConnectHandle_Proxy(IDialEngine *This,DWORD_PTR *pdwHandle);", "IDialBranding_Initialize_Proxy": "HRESULT WINAPI IDialBranding_Initialize_Proxy(IDialBranding *This,LPCWSTR pwzConnectoid);", "IDialBranding_GetBitmap_Proxy": "HRESULT WINAPI IDialBranding_GetBitmap_Proxy(IDialBranding *This,DWORD dwIndex,HBITMAP *phBitmap);", "HcsImportLayer": "HRESULT WINAPI HcsImportLayer (PCWSTR layerPath, PCWSTR sourceFolderPath, PCWSTR layerData);", "HcsExportLayer": "HRESULT WINAPI HcsExportLayer (PCWSTR layerPath, PCWSTR exportFolderPath, PCWSTR layerData, PCWSTR options);", "HcsExportLegacyWritableLayer": "HRESULT WINAPI HcsExportLegacyWritableLayer (PCWSTR writableLayerMountPath, PCWSTR writableLayerFolderPath, PCWSTR exportFolderPath, PCWSTR layerData);", "HcsDestroyLayer": "HRESULT WINAPI HcsDestroyLayer (PCWSTR layerPath);", "HcsSetupBaseOSLayer": "HRESULT WINAPI HcsSetupBaseOSLayer (PCWSTR layerPath, HANDLE vhdHandle, PCWSTR options);", "HcsInitializeWritableLayer": "HRESULT WINAPI HcsInitializeWritableLayer (PCWSTR writableLayerPath, PCWSTR layerData, PCWSTR options);", "HcsInitializeLegacyWritableLayer": "HRESULT WINAPI HcsInitializeLegacyWritableLayer (PCWSTR writableLayerMountPath, PCWSTR writableLayerFolderPath, PCWSTR layerData, PCWSTR options);", "HcsAttachLayerStorageFilter": "HRESULT WINAPI HcsAttachLayerStorageFilter (PCWSTR layerPath, PCWSTR layerData);", "HcsDetachLayerStorageFilter": "HRESULT WINAPI HcsDetachLayerStorageFilter (PCWSTR layerPath);", "HcsFormatWritableLayerVhd": "HRESULT WINAPI HcsFormatWritableLayerVhd (HANDLE vhdHandle);", "HcsGetLayerVhdMountPath": "HRESULT WINAPI HcsGetLayerVhdMountPath (HANDLE vhdHandle, PWSTR *mountPath);", "HcsSetupBaseOSVolume": "HRESULT WINAPI HcsSetupBaseOSVolume (PCWSTR layerPath, PCWSTR volumePath, PCWSTR options);", "BemCreateReference": "HRESULT WINAPI BemCreateReference (REFGUID iid, void *interfaceInstance, BEM_FREE_INTERFACE_CALLBACK freeCallback, BEM_REFERENCE **reference);", "BemCreateContractFrom": "HRESULT WINAPI BemCreateContractFrom (LPCWSTR dllPath, REFGUID extensionId, const CONTRACT_DESCRIPTION *contractDescription, void *hostContract, void **contract);", "BemCopyReference": "HRESULT WINAPI BemCopyReference (BEM_REFERENCE *reference, BEM_REFERENCE **copiedReference);", "BemFreeReference": "void WINAPI BemFreeReference (BEM_REFERENCE *reference);", "BemFreeContract": "void WINAPI BemFreeContract (void *contract);", "GetEffectiveRightsFromAclA": "WINADVAPI DWORD WINAPI GetEffectiveRightsFromAclA (PACL pacl, PTRUSTEE_A pTrustee, PACCESS_MASK pAccessRights);", "GetEffectiveRightsFromAclW": "WINADVAPI DWORD WINAPI GetEffectiveRightsFromAclW (PACL pacl, PTRUSTEE_W pTrustee, PACCESS_MASK pAccessRights);", "GetAuditedPermissionsFromAclA": "WINADVAPI DWORD WINAPI GetAuditedPermissionsFromAclA (PACL pacl, PTRUSTEE_A pTrustee, PACCESS_MASK pSuccessfulAuditedRights, PACCESS_MASK pFailedAuditRights);", "GetAuditedPermissionsFromAclW": "WINADVAPI DWORD WINAPI GetAuditedPermissionsFromAclW (PACL pacl, PTRUSTEE_W pTrustee, PACCESS_MASK pSuccessfulAuditedRights, PACCESS_MASK pFailedAuditRights);", "GetInheritanceSourceA": "WINADVAPI DWORD WINAPI GetInheritanceSourceA (LPSTR pObjectName, SE_OBJECT_TYPE ObjectType, SECURITY_INFORMATION SecurityInfo, WINBOOL Container, GUID **pObjectClassGuids, DWORD GuidCount, PACL pAcl, PFN_OBJECT_MGR_FUNCTS pfnArray, PGENERIC_MAPPING pGenericMapping, PINHERITED_FROMA pInheritArray);", "GetInheritanceSourceW": "WINADVAPI DWORD WINAPI GetInheritanceSourceW (LPWSTR pObjectName, SE_OBJECT_TYPE ObjectType, SECURITY_INFORMATION SecurityInfo, WINBOOL Container, GUID **pObjectClassGuids, DWORD GuidCount, PACL pAcl, PFN_OBJECT_MGR_FUNCTS pfnArray, PGENERIC_MAPPING pGenericMapping, PINHERITED_FROMW pInheritArray);", "FreeInheritedFromArray": "WINADVAPI DWORD WINAPI FreeInheritedFromArray (PINHERITED_FROMW pInheritArray, USHORT AceCnt, PFN_OBJECT_MGR_FUNCTS pfnArray);", "TreeResetNamedSecurityInfoA": "WINADVAPI DWORD WINAPI TreeResetNamedSecurityInfoA (LPSTR pObjectName, SE_OBJECT_TYPE ObjectType, SECURITY_INFORMATION SecurityInfo, PSID pOwner, PSID pGroup, PACL pDacl, PACL pSacl, WINBOOL KeepExplicit, FN_PROGRESS fnProgress, PROG_INVOKE_SETTING ProgressInvokeSetting, PVOID Args);", "TreeResetNamedSecurityInfoW": "WINADVAPI DWORD WINAPI TreeResetNamedSecurityInfoW (LPWSTR pObjectName, SE_OBJECT_TYPE ObjectType, SECURITY_INFORMATION SecurityInfo, PSID pOwner, PSID pGroup, PACL pDacl, PACL pSacl, WINBOOL KeepExplicit, FN_PROGRESS fnProgress, PROG_INVOKE_SETTING ProgressInvokeSetting, PVOID Args);", "BuildSecurityDescriptorA": "WINADVAPI DWORD WINAPI BuildSecurityDescriptorA (PTRUSTEE_A pOwner, PTRUSTEE_A pGroup, ULONG cCountOfAccessEntries, PEXPLICIT_ACCESS_A pListOfAccessEntries, ULONG cCountOfAuditEntries, PEXPLICIT_ACCESS_A pListOfAuditEntries, PSECURITY_DESCRIPTOR pOldSD, PULONG pSizeNewSD, PSECURITY_DESCRIPTOR *pNewSD);", "BuildSecurityDescriptorW": "WINADVAPI DWORD WINAPI BuildSecurityDescriptorW (PTRUSTEE_W pOwner, PTRUSTEE_W pGroup, ULONG cCountOfAccessEntries, PEXPLICIT_ACCESS_W pListOfAccessEntries, ULONG cCountOfAuditEntries, PEXPLICIT_ACCESS_W pListOfAuditEntries, PSECURITY_DESCRIPTOR pOldSD, PULONG pSizeNewSD, PSECURITY_DESCRIPTOR *pNewSD);", "LookupSecurityDescriptorPartsA": "WINADVAPI DWORD WINAPI LookupSecurityDescriptorPartsA (PTRUSTEE_A *ppOwner, PTRUSTEE_A *ppGroup, PULONG pcCountOfAccessEntries, PEXPLICIT_ACCESS_A *ppListOfAccessEntries, PULONG pcCountOfAuditEntries, PEXPLICIT_ACCESS_A *ppListOfAuditEntries, PSECURITY_DESCRIPTOR pSD);", "LookupSecurityDescriptorPartsW": "WINADVAPI DWORD WINAPI LookupSecurityDescriptorPartsW (PTRUSTEE_W *ppOwner, PTRUSTEE_W *ppGroup, PULONG pcCountOfAccessEntries, PEXPLICIT_ACCESS_W *ppListOfAccessEntries, PULONG pcCountOfAuditEntries, PEXPLICIT_ACCESS_W *ppListOfAuditEntries, PSECURITY_DESCRIPTOR pSD);", "BuildExplicitAccessWithNameA": "WINADVAPI VOID WINAPI BuildExplicitAccessWithNameA (PEXPLICIT_ACCESS_A pExplicitAccess, LPSTR pTrusteeName, DWORD AccessPermissions, ACCESS_MODE AccessMode, DWORD Inheritance);", "BuildExplicitAccessWithNameW": "WINADVAPI VOID WINAPI BuildExplicitAccessWithNameW (PEXPLICIT_ACCESS_W pExplicitAccess, LPWSTR pTrusteeName, DWORD AccessPermissions, ACCESS_MODE AccessMode, DWORD Inheritance);", "BuildImpersonateExplicitAccessWithNameA": "WINADVAPI VOID WINAPI BuildImpersonateExplicitAccessWithNameA (PEXPLICIT_ACCESS_A pExplicitAccess, LPSTR pTrusteeName, PTRUSTEE_A pTrustee, DWORD AccessPermissions, ACCESS_MODE AccessMode, DWORD Inheritance);", "BuildImpersonateExplicitAccessWithNameW": "WINADVAPI VOID WINAPI BuildImpersonateExplicitAccessWithNameW (PEXPLICIT_ACCESS_W pExplicitAccess, LPWSTR pTrusteeName, PTRUSTEE_W pTrustee, DWORD AccessPermissions, ACCESS_MODE AccessMode, DWORD Inheritance);", "BuildTrusteeWithNameA": "WINADVAPI VOID WINAPI BuildTrusteeWithNameA (PTRUSTEE_A pTrustee, LPSTR pName);", "BuildTrusteeWithNameW": "WINADVAPI VOID WINAPI BuildTrusteeWithNameW (PTRUSTEE_W pTrustee, LPWSTR pName);", "BuildImpersonateTrusteeA": "WINADVAPI VOID WINAPI BuildImpersonateTrusteeA (PTRUSTEE_A pTrustee, PTRUSTEE_A pImpersonateTrustee);", "BuildImpersonateTrusteeW": "WINADVAPI VOID WINAPI BuildImpersonateTrusteeW (PTRUSTEE_W pTrustee, PTRUSTEE_W pImpersonateTrustee);", "BuildTrusteeWithSidA": "WINADVAPI VOID WINAPI BuildTrusteeWithSidA (PTRUSTEE_A pTrustee, PSID pSid);", "BuildTrusteeWithSidW": "WINADVAPI VOID WINAPI BuildTrusteeWithSidW (PTRUSTEE_W pTrustee, PSID pSid);", "BuildTrusteeWithObjectsAndSidA": "WINADVAPI VOID WINAPI BuildTrusteeWithObjectsAndSidA (PTRUSTEE_A pTrustee, POBJECTS_AND_SID pObjSid, GUID *pObjectGuid, GUID *pInheritedObjectGuid, PSID pSid);", "BuildTrusteeWithObjectsAndSidW": "WINADVAPI VOID WINAPI BuildTrusteeWithObjectsAndSidW (PTRUSTEE_W pTrustee, POBJECTS_AND_SID pObjSid, GUID *pObjectGuid, GUID *pInheritedObjectGuid, PSID pSid);", "BuildTrusteeWithObjectsAndNameA": "WINADVAPI VOID WINAPI BuildTrusteeWithObjectsAndNameA (PTRUSTEE_A pTrustee, POBJECTS_AND_NAME_A pObjName, SE_OBJECT_TYPE ObjectType, LPSTR ObjectTypeName, LPSTR InheritedObjectTypeName, LPSTR Name);", "BuildTrusteeWithObjectsAndNameW": "WINADVAPI VOID WINAPI BuildTrusteeWithObjectsAndNameW (PTRUSTEE_W pTrustee, POBJECTS_AND_NAME_W pObjName, SE_OBJECT_TYPE ObjectType, LPWSTR ObjectTypeName, LPWSTR InheritedObjectTypeName, LPWSTR Name);", "GetTrusteeNameA": "WINADVAPI LPSTR WINAPI GetTrusteeNameA (PTRUSTEE_A pTrustee);", "GetTrusteeNameW": "WINADVAPI LPWSTR WINAPI GetTrusteeNameW (PTRUSTEE_W pTrustee);", "GetTrusteeTypeA": "WINADVAPI TRUSTEE_TYPE WINAPI GetTrusteeTypeA (PTRUSTEE_A pTrustee);", "GetTrusteeTypeW": "WINADVAPI TRUSTEE_TYPE WINAPI GetTrusteeTypeW (PTRUSTEE_W pTrustee);", "GetTrusteeFormA": "WINADVAPI TRUSTEE_FORM WINAPI GetTrusteeFormA (PTRUSTEE_A pTrustee);", "GetTrusteeFormW": "WINADVAPI TRUSTEE_FORM WINAPI GetTrusteeFormW (PTRUSTEE_W pTrustee);", "GetMultipleTrusteeOperationA": "WINADVAPI MULTIPLE_TRUSTEE_OPERATION WINAPI GetMultipleTrusteeOperationA (PTRUSTEE_A pTrustee);", "GetMultipleTrusteeOperationW": "WINADVAPI MULTIPLE_TRUSTEE_OPERATION WINAPI GetMultipleTrusteeOperationW (PTRUSTEE_W pTrustee);", "GetMultipleTrusteeA": "WINADVAPI PTRUSTEE_A WINAPI GetMultipleTrusteeA (PTRUSTEE_A pTrustee);", "GetMultipleTrusteeW": "WINADVAPI PTRUSTEE_W WINAPI GetMultipleTrusteeW (PTRUSTEE_W pTrustee);", "TreeSetNamedSecurityInfoA": "WINADVAPI DWORD WINAPI TreeSetNamedSecurityInfoA (LPSTR pObjectName, SE_OBJECT_TYPE ObjectType, SECURITY_INFORMATION SecurityInfo, PSID pOwner, PSID pGroup, PACL pDacl, PACL pSacl, DWORD dwAction, FN_PROGRESS fnProgress, PROG_INVOKE_SETTING ProgressInvokeSetting, PVOID Args);", "TreeSetNamedSecurityInfoW": "WINADVAPI DWORD WINAPI TreeSetNamedSecurityInfoW (LPWSTR pObjectName, SE_OBJECT_TYPE ObjectType, SECURITY_INFORMATION SecurityInfo, PSID pOwner, PSID pGroup, PACL pDacl, PACL pSacl, DWORD dwAction, FN_PROGRESS fnProgress, PROG_INVOKE_SETTING ProgressInvokeSetting, PVOID Args);", "SetEntriesInAclA": "WINADVAPI DWORD WINAPI SetEntriesInAclA (ULONG cCountOfExplicitEntries, PEXPLICIT_ACCESS_A pListOfExplicitEntries, PACL OldAcl, PACL *NewAcl);", "SetEntriesInAclW": "WINADVAPI DWORD WINAPI SetEntriesInAclW (ULONG cCountOfExplicitEntries, PEXPLICIT_ACCESS_W pListOfExplicitEntries, PACL OldAcl, PACL *NewAcl);", "GetExplicitEntriesFromAclA": "WINADVAPI DWORD WINAPI GetExplicitEntriesFromAclA (PACL pacl, PULONG pcCountOfExplicitEntries, PEXPLICIT_ACCESS_A *pListOfExplicitEntries);", "GetExplicitEntriesFromAclW": "WINADVAPI DWORD WINAPI GetExplicitEntriesFromAclW (PACL pacl, PULONG pcCountOfExplicitEntries, PEXPLICIT_ACCESS_W *pListOfExplicitEntries);", "GetNamedSecurityInfoA": "WINADVAPI DWORD WINAPI GetNamedSecurityInfoA (LPCSTR pObjectName, SE_OBJECT_TYPE ObjectType, SECURITY_INFORMATION SecurityInfo, PSID *ppsidOwner, PSID *ppsidGroup, PACL *ppDacl, PACL *ppSacl, PSECURITY_DESCRIPTOR *ppSecurityDescriptor);", "GetNamedSecurityInfoW": "WINADVAPI DWORD WINAPI GetNamedSecurityInfoW (LPCWSTR pObjectName, SE_OBJECT_TYPE ObjectType, SECURITY_INFORMATION SecurityInfo, PSID *ppsidOwner, PSID *ppsidGroup, PACL *ppDacl, PACL *ppSacl, PSECURITY_DESCRIPTOR *ppSecurityDescriptor);", "GetSecurityInfo": "WINADVAPI DWORD WINAPI GetSecurityInfo (HANDLE handle, SE_OBJECT_TYPE ObjectType, SECURITY_INFORMATION SecurityInfo, PSID *ppsidOwner, PSID *ppsidGroup, PACL *ppDacl, PACL *ppSacl, PSECURITY_DESCRIPTOR *ppSecurityDescriptor);", "SetNamedSecurityInfoA": "WINADVAPI DWORD WINAPI SetNamedSecurityInfoA (LPSTR pObjectName, SE_OBJECT_TYPE ObjectType, SECURITY_INFORMATION SecurityInfo, PSID psidOwner, PSID psidGroup, PACL pDacl, PACL pSacl);", "SetNamedSecurityInfoW": "WINADVAPI DWORD WINAPI SetNamedSecurityInfoW (LPWSTR pObjectName, SE_OBJECT_TYPE ObjectType, SECURITY_INFORMATION SecurityInfo, PSID psidOwner, PSID psidGroup, PACL pDacl, PACL pSacl);", "SetSecurityInfo": "WINADVAPI DWORD WINAPI SetSecurityInfo (HANDLE handle, SE_OBJECT_TYPE ObjectType, SECURITY_INFORMATION SecurityInfo, PSID psidOwner, PSID psidGroup, PACL pDacl, PACL pSacl);", "waveOutGetNumDevs": "WINMMAPI UINT WINAPI waveOutGetNumDevs(void);", "waveOutGetDevCapsA": "WINMMAPI MMRESULT WINAPI waveOutGetDevCapsA(UINT_PTR uDeviceID, LPWAVEOUTCAPSA pwoc, UINT cbwoc);", "waveOutGetDevCapsW": "WINMMAPI MMRESULT WINAPI waveOutGetDevCapsW(UINT_PTR uDeviceID, LPWAVEOUTCAPSW pwoc, UINT cbwoc);", "waveOutGetVolume": "WINMMAPI MMRESULT WINAPI waveOutGetVolume(HWAVEOUT hwo, LPDWORD pdwVolume);", "waveOutSetVolume": "WINMMAPI MMRESULT WINAPI waveOutSetVolume(HWAVEOUT hwo, DWORD dwVolume);", "waveOutGetErrorTextA": "WINMMAPI MMRESULT WINAPI waveOutGetErrorTextA(MMRESULT mmrError, LPSTR pszText, UINT cchText);", "waveOutGetErrorTextW": "WINMMAPI MMRESULT WINAPI waveOutGetErrorTextW(MMRESULT mmrError, LPWSTR pszText, UINT cchText);", "waveOutOpen": "WINMMAPI MMRESULT WINAPI waveOutOpen(LPHWAVEOUT phwo, UINT uDeviceID, LPCWAVEFORMATEX pwfx, DWORD_PTR dwCallback, DWORD_PTR dwInstance, DWORD fdwOpen);", "waveOutClose": "WINMMAPI MMRESULT WINAPI waveOutClose(HWAVEOUT hwo);", "waveOutPrepareHeader": "WINMMAPI MMRESULT WINAPI waveOutPrepareHeader(HWAVEOUT hwo, LPWAVEHDR pwh, UINT cbwh);", "waveOutUnprepareHeader": "WINMMAPI MMRESULT WINAPI waveOutUnprepareHeader(HWAVEOUT hwo, LPWAVEHDR pwh, UINT cbwh);", "waveOutWrite": "WINMMAPI MMRESULT WINAPI waveOutWrite(HWAVEOUT hwo, LPWAVEHDR pwh, UINT cbwh);", "waveOutPause": "WINMMAPI MMRESULT WINAPI waveOutPause(HWAVEOUT hwo);", "waveOutRestart": "WINMMAPI MMRESULT WINAPI waveOutRestart(HWAVEOUT hwo);", "waveOutReset": "WINMMAPI MMRESULT WINAPI waveOutReset(HWAVEOUT hwo);", "waveOutBreakLoop": "WINMMAPI MMRESULT WINAPI waveOutBreakLoop(HWAVEOUT hwo);", "waveOutGetPosition": "WINMMAPI MMRESULT WINAPI waveOutGetPosition(HWAVEOUT hwo, LPMMTIME pmmt, UINT cbmmt);", "waveOutGetPitch": "WINMMAPI MMRESULT WINAPI waveOutGetPitch(HWAVEOUT hwo, LPDWORD pdwPitch);", "waveOutSetPitch": "WINMMAPI MMRESULT WINAPI waveOutSetPitch(HWAVEOUT hwo, DWORD dwPitch);", "waveOutGetPlaybackRate": "WINMMAPI MMRESULT WINAPI waveOutGetPlaybackRate(HWAVEOUT hwo, LPDWORD pdwRate);", "waveOutSetPlaybackRate": "WINMMAPI MMRESULT WINAPI waveOutSetPlaybackRate(HWAVEOUT hwo, DWORD dwRate);", "waveOutGetID": "WINMMAPI MMRESULT WINAPI waveOutGetID(HWAVEOUT hwo, LPUINT puDeviceID);", "waveOutMessage": "WINMMAPI MMRESULT WINAPI waveOutMessage(HWAVEOUT hwo, UINT uMsg, DWORD_PTR dw1, DWORD_PTR dw2);", "waveInGetNumDevs": "WINMMAPI UINT WINAPI waveInGetNumDevs(void);", "waveInGetDevCapsA": "WINMMAPI MMRESULT WINAPI waveInGetDevCapsA(UINT_PTR uDeviceID, LPWAVEINCAPSA pwic, UINT cbwic);", "waveInGetDevCapsW": "WINMMAPI MMRESULT WINAPI waveInGetDevCapsW(UINT_PTR uDeviceID, LPWAVEINCAPSW pwic, UINT cbwic);", "waveInGetErrorTextA": "WINMMAPI MMRESULT WINAPI waveInGetErrorTextA(MMRESULT mmrError, LPSTR pszText, UINT cchText);", "waveInGetErrorTextW": "WINMMAPI MMRESULT WINAPI waveInGetErrorTextW(MMRESULT mmrError, LPWSTR pszText, UINT cchText);", "waveInOpen": "WINMMAPI MMRESULT WINAPI waveInOpen(LPHWAVEIN phwi, UINT uDeviceID, LPCWAVEFORMATEX pwfx, DWORD_PTR dwCallback, DWORD_PTR dwInstance, DWORD fdwOpen);", "waveInClose": "WINMMAPI MMRESULT WINAPI waveInClose(HWAVEIN hwi);", "waveInPrepareHeader": "WINMMAPI MMRESULT WINAPI waveInPrepareHeader(HWAVEIN hwi, LPWAVEHDR pwh, UINT cbwh);", "waveInUnprepareHeader": "WINMMAPI MMRESULT WINAPI waveInUnprepareHeader(HWAVEIN hwi, LPWAVEHDR pwh, UINT cbwh);", "waveInAddBuffer": "WINMMAPI MMRESULT WINAPI waveInAddBuffer(HWAVEIN hwi, LPWAVEHDR pwh, UINT cbwh);", "waveInStart": "WINMMAPI MMRESULT WINAPI waveInStart(HWAVEIN hwi);", "waveInStop": "WINMMAPI MMRESULT WINAPI waveInStop(HWAVEIN hwi);", "waveInReset": "WINMMAPI MMRESULT WINAPI waveInReset(HWAVEIN hwi);", "waveInGetPosition": "WINMMAPI MMRESULT WINAPI waveInGetPosition(HWAVEIN hwi, LPMMTIME pmmt, UINT cbmmt);", "waveInGetID": "WINMMAPI MMRESULT WINAPI waveInGetID(HWAVEIN hwi, LPUINT puDeviceID);", "waveInMessage": "WINMMAPI MMRESULT WINAPI waveInMessage(HWAVEIN hwi, UINT uMsg, DWORD_PTR dw1, DWORD_PTR dw2);", "midiOutGetNumDevs": "WINMMAPI UINT WINAPI midiOutGetNumDevs(void);", "midiStreamOpen": "WINMMAPI MMRESULT WINAPI midiStreamOpen(LPHMIDISTRM phms, LPUINT puDeviceID, DWORD cMidi, DWORD_PTR dwCallback, DWORD_PTR dwInstance, DWORD fdwOpen);", "midiStreamClose": "WINMMAPI MMRESULT WINAPI midiStreamClose(HMIDISTRM hms);", "midiStreamProperty": "WINMMAPI MMRESULT WINAPI midiStreamProperty(HMIDISTRM hms, LPBYTE lppropdata, DWORD dwProperty);", "midiStreamPosition": "WINMMAPI MMRESULT WINAPI midiStreamPosition(HMIDISTRM hms, LPMMTIME lpmmt, UINT cbmmt);", "midiStreamOut": "WINMMAPI MMRESULT WINAPI midiStreamOut(HMIDISTRM hms, LPMIDIHDR pmh, UINT cbmh);", "midiStreamPause": "WINMMAPI MMRESULT WINAPI midiStreamPause(HMIDISTRM hms);", "midiStreamRestart": "WINMMAPI MMRESULT WINAPI midiStreamRestart(HMIDISTRM hms);", "midiStreamStop": "WINMMAPI MMRESULT WINAPI midiStreamStop(HMIDISTRM hms);", "midiConnect": "WINMMAPI MMRESULT WINAPI midiConnect(HMIDI hmi, HMIDIOUT hmo, LPVOID pReserved);", "midiDisconnect": "WINMMAPI MMRESULT WINAPI midiDisconnect(HMIDI hmi, HMIDIOUT hmo, LPVOID pReserved);", "midiOutGetDevCapsA": "WINMMAPI MMRESULT WINAPI midiOutGetDevCapsA(UINT_PTR uDeviceID, LPMIDIOUTCAPSA pmoc, UINT cbmoc);", "midiOutGetDevCapsW": "WINMMAPI MMRESULT WINAPI midiOutGetDevCapsW(UINT_PTR uDeviceID, LPMIDIOUTCAPSW pmoc, UINT cbmoc);", "midiOutGetVolume": "WINMMAPI MMRESULT WINAPI midiOutGetVolume(HMIDIOUT hmo, LPDWORD pdwVolume);", "midiOutSetVolume": "WINMMAPI MMRESULT WINAPI midiOutSetVolume(HMIDIOUT hmo, DWORD dwVolume);", "midiOutGetErrorTextA": "WINMMAPI MMRESULT WINAPI midiOutGetErrorTextA(MMRESULT mmrError, LPSTR pszText, UINT cchText);", "midiOutGetErrorTextW": "WINMMAPI MMRESULT WINAPI midiOutGetErrorTextW(MMRESULT mmrError, LPWSTR pszText, UINT cchText);", "midiOutOpen": "WINMMAPI MMRESULT WINAPI midiOutOpen(LPHMIDIOUT phmo, UINT uDeviceID, DWORD_PTR dwCallback, DWORD_PTR dwInstance, DWORD fdwOpen);", "midiOutClose": "WINMMAPI MMRESULT WINAPI midiOutClose(HMIDIOUT hmo);", "midiOutPrepareHeader": "WINMMAPI MMRESULT WINAPI midiOutPrepareHeader(HMIDIOUT hmo, LPMIDIHDR pmh, UINT cbmh);", "midiOutUnprepareHeader": "WINMMAPI MMRESULT WINAPI midiOutUnprepareHeader(HMIDIOUT hmo, LPMIDIHDR pmh, UINT cbmh);", "midiOutShortMsg": "WINMMAPI MMRESULT WINAPI midiOutShortMsg(HMIDIOUT hmo, DWORD dwMsg);", "midiOutLongMsg": "WINMMAPI MMRESULT WINAPI midiOutLongMsg(HMIDIOUT hmo, LPMIDIHDR pmh, UINT cbmh);", "midiOutReset": "WINMMAPI MMRESULT WINAPI midiOutReset(HMIDIOUT hmo);", "midiOutCachePatches": "WINMMAPI MMRESULT WINAPI midiOutCachePatches(HMIDIOUT hmo, UINT uBank, LPWORD pwpa, UINT fuCache);", "midiOutCacheDrumPatches": "WINMMAPI MMRESULT WINAPI midiOutCacheDrumPatches(HMIDIOUT hmo, UINT uPatch, LPWORD pwkya, UINT fuCache);", "midiOutGetID": "WINMMAPI MMRESULT WINAPI midiOutGetID(HMIDIOUT hmo, LPUINT puDeviceID);", "midiOutMessage": "WINMMAPI MMRESULT WINAPI midiOutMessage(HMIDIOUT hmo, UINT uMsg, DWORD_PTR dw1, DWORD_PTR dw2);", "midiInGetNumDevs": "WINMMAPI UINT WINAPI midiInGetNumDevs(void);", "midiInGetDevCapsA": "WINMMAPI MMRESULT WINAPI midiInGetDevCapsA(UINT_PTR uDeviceID, LPMIDIINCAPSA pmic, UINT cbmic);", "midiInGetDevCapsW": "WINMMAPI MMRESULT WINAPI midiInGetDevCapsW(UINT_PTR uDeviceID, LPMIDIINCAPSW pmic, UINT cbmic);", "midiInGetErrorTextA": "WINMMAPI MMRESULT WINAPI midiInGetErrorTextA(MMRESULT mmrError, LPSTR pszText, UINT cchText);", "midiInGetErrorTextW": "WINMMAPI MMRESULT WINAPI midiInGetErrorTextW(MMRESULT mmrError, LPWSTR pszText, UINT cchText);", "midiInOpen": "WINMMAPI MMRESULT WINAPI midiInOpen(LPHMIDIIN phmi, UINT uDeviceID, DWORD_PTR dwCallback, DWORD_PTR dwInstance, DWORD fdwOpen);", "midiInClose": "WINMMAPI MMRESULT WINAPI midiInClose(HMIDIIN hmi);", "midiInPrepareHeader": "WINMMAPI MMRESULT WINAPI midiInPrepareHeader(HMIDIIN hmi, LPMIDIHDR pmh, UINT cbmh);", "midiInUnprepareHeader": "WINMMAPI MMRESULT WINAPI midiInUnprepareHeader(HMIDIIN hmi, LPMIDIHDR pmh, UINT cbmh);", "midiInAddBuffer": "WINMMAPI MMRESULT WINAPI midiInAddBuffer(HMIDIIN hmi, LPMIDIHDR pmh, UINT cbmh);", "midiInStart": "WINMMAPI MMRESULT WINAPI midiInStart(HMIDIIN hmi);", "midiInStop": "WINMMAPI MMRESULT WINAPI midiInStop(HMIDIIN hmi);", "midiInReset": "WINMMAPI MMRESULT WINAPI midiInReset(HMIDIIN hmi);", "midiInGetID": "WINMMAPI MMRESULT WINAPI midiInGetID(HMIDIIN hmi, LPUINT puDeviceID);", "midiInMessage": "WINMMAPI MMRESULT WINAPI midiInMessage(HMIDIIN hmi, UINT uMsg, DWORD_PTR dw1, DWORD_PTR dw2);", "auxGetNumDevs": "WINMMAPI UINT WINAPI auxGetNumDevs(void);", "auxGetDevCapsA": "WINMMAPI MMRESULT WINAPI auxGetDevCapsA(UINT_PTR uDeviceID, LPAUXCAPSA pac, UINT cbac);", "auxGetDevCapsW": "WINMMAPI MMRESULT WINAPI auxGetDevCapsW(UINT_PTR uDeviceID, LPAUXCAPSW pac, UINT cbac);", "auxSetVolume": "WINMMAPI MMRESULT WINAPI auxSetVolume(UINT uDeviceID, DWORD dwVolume);", "auxGetVolume": "WINMMAPI MMRESULT WINAPI auxGetVolume(UINT uDeviceID, LPDWORD pdwVolume);", "auxOutMessage": "WINMMAPI MMRESULT WINAPI auxOutMessage(UINT uDeviceID, UINT uMsg, DWORD_PTR dw1, DWORD_PTR dw2);", "mixerGetNumDevs": "WINMMAPI UINT WINAPI mixerGetNumDevs(void);", "mixerGetDevCapsA": "WINMMAPI MMRESULT WINAPI mixerGetDevCapsA(UINT_PTR uMxId, LPMIXERCAPSA pmxcaps, UINT cbmxcaps);", "mixerGetDevCapsW": "WINMMAPI MMRESULT WINAPI mixerGetDevCapsW(UINT_PTR uMxId, LPMIXERCAPSW pmxcaps, UINT cbmxcaps);", "mixerOpen": "WINMMAPI MMRESULT WINAPI mixerOpen(LPHMIXER phmx, UINT uMxId, DWORD_PTR dwCallback, DWORD_PTR dwInstance, DWORD fdwOpen);", "mixerClose": "WINMMAPI MMRESULT WINAPI mixerClose(HMIXER hmx);", "mixerMessage": "WINMMAPI DWORD WINAPI mixerMessage(HMIXER hmx, UINT uMsg, DWORD_PTR dwParam1, DWORD_PTR dwParam2);", "mixerGetLineInfoA": "WINMMAPI MMRESULT WINAPI mixerGetLineInfoA(HMIXEROBJ hmxobj, LPMIXERLINEA pmxl, DWORD fdwInfo);", "mixerGetLineInfoW": "WINMMAPI MMRESULT WINAPI mixerGetLineInfoW(HMIXEROBJ hmxobj, LPMIXERLINEW pmxl, DWORD fdwInfo);", "mixerGetID": "WINMMAPI MMRESULT WINAPI mixerGetID(HMIXEROBJ hmxobj, UINT *puMxId, DWORD fdwId);", "mixerGetLineControlsA": "WINMMAPI MMRESULT WINAPI mixerGetLineControlsA(HMIXEROBJ hmxobj, LPMIXERLINECONTROLSA pmxlc, DWORD fdwControls);", "mixerGetLineControlsW": "WINMMAPI MMRESULT WINAPI mixerGetLineControlsW(HMIXEROBJ hmxobj, LPMIXERLINECONTROLSW pmxlc, DWORD fdwControls);", "mixerGetControlDetailsA": "WINMMAPI MMRESULT WINAPI mixerGetControlDetailsA(HMIXEROBJ hmxobj, LPMIXERCONTROLDETAILS pmxcd, DWORD fdwDetails);", "mixerGetControlDetailsW": "WINMMAPI MMRESULT WINAPI mixerGetControlDetailsW(HMIXEROBJ hmxobj, LPMIXERCONTROLDETAILS pmxcd, DWORD fdwDetails);", "mixerSetControlDetails": "WINMMAPI MMRESULT WINAPI mixerSetControlDetails(HMIXEROBJ hmxobj, LPMIXERCONTROLDETAILS pmxcd, DWORD fdwDetails);", "IByteBuffer_get_Stream_Proxy": "HRESULT WINAPI IByteBuffer_get_Stream_Proxy(IByteBuffer *This,LPSTREAM *ppStream);", "IByteBuffer_put_Stream_Proxy": "HRESULT WINAPI IByteBuffer_put_Stream_Proxy(IByteBuffer *This,LPSTREAM pStream);", "IByteBuffer_Clone_Proxy": "HRESULT WINAPI IByteBuffer_Clone_Proxy(IByteBuffer *This,LPBYTEBUFFER *ppByteBuffer);", "IByteBuffer_Commit_Proxy": "HRESULT WINAPI IByteBuffer_Commit_Proxy(IByteBuffer *This,LONG grfCommitFlags);", "IByteBuffer_CopyTo_Proxy": "HRESULT WINAPI IByteBuffer_CopyTo_Proxy(IByteBuffer *This,LPBYTEBUFFER *ppByteBuffer,LONG cb,LONG *pcbRead,LONG *pcbWritten);", "IByteBuffer_Initialize_Proxy": "HRESULT WINAPI IByteBuffer_Initialize_Proxy(IByteBuffer *This,LONG lSize,BYTE *pData);", "IByteBuffer_LockRegion_Proxy": "HRESULT WINAPI IByteBuffer_LockRegion_Proxy(IByteBuffer *This,LONG libOffset,LONG cb,LONG dwLockType);", "IByteBuffer_Read_Proxy": "HRESULT WINAPI IByteBuffer_Read_Proxy(IByteBuffer *This,BYTE *pByte,LONG cb,LONG *pcbRead);", "IByteBuffer_Revert_Proxy": "HRESULT WINAPI IByteBuffer_Revert_Proxy(IByteBuffer *This);", "IByteBuffer_Seek_Proxy": "HRESULT WINAPI IByteBuffer_Seek_Proxy(IByteBuffer *This,LONG dLibMove,LONG dwOrigin,LONG *pLibnewPosition);", "IByteBuffer_SetSize_Proxy": "HRESULT WINAPI IByteBuffer_SetSize_Proxy(IByteBuffer *This,LONG libNewSize);", "IByteBuffer_Stat_Proxy": "HRESULT WINAPI IByteBuffer_Stat_Proxy(IByteBuffer *This,LPSTATSTRUCT pstatstg,LONG grfStatFlag);", "IByteBuffer_UnlockRegion_Proxy": "HRESULT WINAPI IByteBuffer_UnlockRegion_Proxy(IByteBuffer *This,LONG libOffset,LONG cb,LONG dwLockType);", "IByteBuffer_Write_Proxy": "HRESULT WINAPI IByteBuffer_Write_Proxy(IByteBuffer *This,BYTE *pByte,LONG cb,LONG *pcbWritten);", "ISCardTypeConv_ConvertByteArrayToByteBuffer_Proxy": "HRESULT WINAPI ISCardTypeConv_ConvertByteArrayToByteBuffer_Proxy(ISCardTypeConv *This,LPBYTE pbyArray,DWORD dwArraySize,LPBYTEBUFFER *ppbyBuffer);", "ISCardTypeConv_ConvertByteBufferToByteArray_Proxy": "HRESULT WINAPI ISCardTypeConv_ConvertByteBufferToByteArray_Proxy(ISCardTypeConv *This,LPBYTEBUFFER pbyBuffer,LPBYTEARRAY *ppArray);", "ISCardTypeConv_ConvertByteBufferToSafeArray_Proxy": "HRESULT WINAPI ISCardTypeConv_ConvertByteBufferToSafeArray_Proxy(ISCardTypeConv *This,LPBYTEBUFFER pbyBuffer,LPSAFEARRAY *ppbyArray);", "ISCardTypeConv_ConvertSafeArrayToByteBuffer_Proxy": "HRESULT WINAPI ISCardTypeConv_ConvertSafeArrayToByteBuffer_Proxy(ISCardTypeConv *This,LPSAFEARRAY pbyArray,LPBYTEBUFFER *ppbyBuff);", "ISCardTypeConv_CreateByteArray_Proxy": "HRESULT WINAPI ISCardTypeConv_CreateByteArray_Proxy(ISCardTypeConv *This,DWORD dwAllocSize,LPBYTE *ppbyArray);", "ISCardTypeConv_CreateByteBuffer_Proxy": "HRESULT WINAPI ISCardTypeConv_CreateByteBuffer_Proxy(ISCardTypeConv *This,DWORD dwAllocSize,LPBYTEBUFFER *ppbyBuff);", "ISCardTypeConv_CreateSafeArray_Proxy": "HRESULT WINAPI ISCardTypeConv_CreateSafeArray_Proxy(ISCardTypeConv *This,UINT nAllocSize,LPSAFEARRAY *ppArray);", "ISCardTypeConv_FreeIStreamMemoryPtr_Proxy": "HRESULT WINAPI ISCardTypeConv_FreeIStreamMemoryPtr_Proxy(ISCardTypeConv *This,LPSTREAM pStrm,LPBYTE pMem);", "ISCardTypeConv_GetAtIStreamMemory_Proxy": "HRESULT WINAPI ISCardTypeConv_GetAtIStreamMemory_Proxy(ISCardTypeConv *This,LPSTREAM pStrm,LPBYTEARRAY *ppMem);", "ISCardTypeConv_SizeOfIStream_Proxy": "HRESULT WINAPI ISCardTypeConv_SizeOfIStream_Proxy(ISCardTypeConv *This,LPSTREAM pStrm,ULARGE_INTEGER *puliSize);", "ISCardCmd_get_Apdu_Proxy": "HRESULT WINAPI ISCardCmd_get_Apdu_Proxy(ISCardCmd *This,LPBYTEBUFFER *ppApdu);", "ISCardCmd_put_Apdu_Proxy": "HRESULT WINAPI ISCardCmd_put_Apdu_Proxy(ISCardCmd *This,LPBYTEBUFFER pApdu);", "ISCardCmd_get_ApduLength_Proxy": "HRESULT WINAPI ISCardCmd_get_ApduLength_Proxy(ISCardCmd *This,LONG *plSize);", "ISCardCmd_get_ApduReply_Proxy": "HRESULT WINAPI ISCardCmd_get_ApduReply_Proxy(ISCardCmd *This,LPBYTEBUFFER *ppReplyApdu);", "ISCardCmd_put_ApduReply_Proxy": "HRESULT WINAPI ISCardCmd_put_ApduReply_Proxy(ISCardCmd *This,LPBYTEBUFFER pReplyApdu);", "ISCardCmd_get_ApduReplyLength_Proxy": "HRESULT WINAPI ISCardCmd_get_ApduReplyLength_Proxy(ISCardCmd *This,LONG *plSize);", "ISCardCmd_put_ApduReplyLength_Proxy": "HRESULT WINAPI ISCardCmd_put_ApduReplyLength_Proxy(ISCardCmd *This,LONG lSize);", "ISCardCmd_get_ClassId_Proxy": "HRESULT WINAPI ISCardCmd_get_ClassId_Proxy(ISCardCmd *This,BYTE *pbyClass);", "ISCardCmd_put_ClassId_Proxy": "HRESULT WINAPI ISCardCmd_put_ClassId_Proxy(ISCardCmd *This,BYTE byClass);", "ISCardCmd_get_Data_Proxy": "HRESULT WINAPI ISCardCmd_get_Data_Proxy(ISCardCmd *This,LPBYTEBUFFER *ppData);", "ISCardCmd_put_Data_Proxy": "HRESULT WINAPI ISCardCmd_put_Data_Proxy(ISCardCmd *This,LPBYTEBUFFER pData);", "ISCardCmd_get_InstructionId_Proxy": "HRESULT WINAPI ISCardCmd_get_InstructionId_Proxy(ISCardCmd *This,BYTE *pbyIns);", "ISCardCmd_put_InstructionId_Proxy": "HRESULT WINAPI ISCardCmd_put_InstructionId_Proxy(ISCardCmd *This,BYTE byIns);", "ISCardCmd_get_LeField_Proxy": "HRESULT WINAPI ISCardCmd_get_LeField_Proxy(ISCardCmd *This,LONG *plSize);", "ISCardCmd_get_P1_Proxy": "HRESULT WINAPI ISCardCmd_get_P1_Proxy(ISCardCmd *This,BYTE *pbyP1);", "ISCardCmd_put_P1_Proxy": "HRESULT WINAPI ISCardCmd_put_P1_Proxy(ISCardCmd *This,BYTE byP1);", "ISCardCmd_get_P2_Proxy": "HRESULT WINAPI ISCardCmd_get_P2_Proxy(ISCardCmd *This,BYTE *pbyP2);", "ISCardCmd_put_P2_Proxy": "HRESULT WINAPI ISCardCmd_put_P2_Proxy(ISCardCmd *This,BYTE byP2);", "ISCardCmd_get_P3_Proxy": "HRESULT WINAPI ISCardCmd_get_P3_Proxy(ISCardCmd *This,BYTE *pbyP3);", "ISCardCmd_get_ReplyStatus_Proxy": "HRESULT WINAPI ISCardCmd_get_ReplyStatus_Proxy(ISCardCmd *This,LPWORD pwStatus);", "ISCardCmd_put_ReplyStatus_Proxy": "HRESULT WINAPI ISCardCmd_put_ReplyStatus_Proxy(ISCardCmd *This,WORD wStatus);", "ISCardCmd_get_ReplyStatusSW1_Proxy": "HRESULT WINAPI ISCardCmd_get_ReplyStatusSW1_Proxy(ISCardCmd *This,BYTE *pbySW1);", "ISCardCmd_get_ReplyStatusSW2_Proxy": "HRESULT WINAPI ISCardCmd_get_ReplyStatusSW2_Proxy(ISCardCmd *This,BYTE *pbySW2);", "ISCardCmd_get_Type_Proxy": "HRESULT WINAPI ISCardCmd_get_Type_Proxy(ISCardCmd *This,ISO_APDU_TYPE *pType);", "ISCardCmd_get_Nad_Proxy": "HRESULT WINAPI ISCardCmd_get_Nad_Proxy(ISCardCmd *This,BYTE *pbNad);", "ISCardCmd_put_Nad_Proxy": "HRESULT WINAPI ISCardCmd_put_Nad_Proxy(ISCardCmd *This,BYTE bNad);", "ISCardCmd_get_ReplyNad_Proxy": "HRESULT WINAPI ISCardCmd_get_ReplyNad_Proxy(ISCardCmd *This,BYTE *pbNad);", "ISCardCmd_put_ReplyNad_Proxy": "HRESULT WINAPI ISCardCmd_put_ReplyNad_Proxy(ISCardCmd *This,BYTE bNad);", "ISCardCmd_BuildCmd_Proxy": "HRESULT WINAPI ISCardCmd_BuildCmd_Proxy(ISCardCmd *This,BYTE byClassId,BYTE byInsId,BYTE byP1,BYTE byP2,LPBYTEBUFFER pbyData,LONG *plLe);", "ISCardCmd_Clear_Proxy": "HRESULT WINAPI ISCardCmd_Clear_Proxy(ISCardCmd *This);", "ISCardCmd_Encapsulate_Proxy": "HRESULT WINAPI ISCardCmd_Encapsulate_Proxy(ISCardCmd *This,LPBYTEBUFFER pApdu,ISO_APDU_TYPE ApduType);", "ISCardCmd_get_AlternateClassId_Proxy": "HRESULT WINAPI ISCardCmd_get_AlternateClassId_Proxy(ISCardCmd *This,BYTE *pbyClass);", "ISCardCmd_put_AlternateClassId_Proxy": "HRESULT WINAPI ISCardCmd_put_AlternateClassId_Proxy(ISCardCmd *This,BYTE byClass);", "ISCardISO7816_AppendRecord_Proxy": "HRESULT WINAPI ISCardISO7816_AppendRecord_Proxy(ISCardISO7816 *This,BYTE byRefCtrl,LPBYTEBUFFER pData,LPSCARDCMD *ppCmd);", "ISCardISO7816_EraseBinary_Proxy": "HRESULT WINAPI ISCardISO7816_EraseBinary_Proxy(ISCardISO7816 *This,BYTE byP1,BYTE byP2,LPBYTEBUFFER pData,LPSCARDCMD *ppCmd);", "ISCardISO7816_ExternalAuthenticate_Proxy": "HRESULT WINAPI ISCardISO7816_ExternalAuthenticate_Proxy(ISCardISO7816 *This,BYTE byAlgorithmRef,BYTE bySecretRef,LPBYTEBUFFER pChallenge,LPSCARDCMD *ppCmd);", "ISCardISO7816_GetChallenge_Proxy": "HRESULT WINAPI ISCardISO7816_GetChallenge_Proxy(ISCardISO7816 *This,LONG lBytesExpected,LPSCARDCMD *ppCmd);", "ISCardISO7816_GetData_Proxy": "HRESULT WINAPI ISCardISO7816_GetData_Proxy(ISCardISO7816 *This,BYTE byP1,BYTE byP2,LONG lBytesToGet,LPSCARDCMD *ppCmd);", "ISCardISO7816_GetResponse_Proxy": "HRESULT WINAPI ISCardISO7816_GetResponse_Proxy(ISCardISO7816 *This,BYTE byP1,BYTE byP2,LONG lDataLength,LPSCARDCMD *ppCmd);", "ISCardISO7816_InternalAuthenticate_Proxy": "HRESULT WINAPI ISCardISO7816_InternalAuthenticate_Proxy(ISCardISO7816 *This,BYTE byAlgorithmRef,BYTE bySecretRef,LPBYTEBUFFER pChallenge,LONG lReplyBytes,LPSCARDCMD *ppCmd);", "ISCardISO7816_ManageChannel_Proxy": "HRESULT WINAPI ISCardISO7816_ManageChannel_Proxy(ISCardISO7816 *This,BYTE byChannelState,BYTE byChannel,LPSCARDCMD *ppCmd);", "ISCardISO7816_PutData_Proxy": "HRESULT WINAPI ISCardISO7816_PutData_Proxy(ISCardISO7816 *This,BYTE byP1,BYTE byP2,LPBYTEBUFFER pData,LPSCARDCMD *ppCmd);", "ISCardISO7816_ReadBinary_Proxy": "HRESULT WINAPI ISCardISO7816_ReadBinary_Proxy(ISCardISO7816 *This,BYTE byP1,BYTE byP2,LONG lBytesToRead,LPSCARDCMD *ppCmd);", "ISCardISO7816_ReadRecord_Proxy": "HRESULT WINAPI ISCardISO7816_ReadRecord_Proxy(ISCardISO7816 *This,BYTE byRecordId,BYTE byRefCtrl,LONG lBytesToRead,LPSCARDCMD *ppCmd);", "ISCardISO7816_SelectFile_Proxy": "HRESULT WINAPI ISCardISO7816_SelectFile_Proxy(ISCardISO7816 *This,BYTE byP1,BYTE byP2,LPBYTEBUFFER pData,LONG lBytesToRead,LPSCARDCMD *ppCmd);", "ISCardISO7816_SetDefaultClassId_Proxy": "HRESULT WINAPI ISCardISO7816_SetDefaultClassId_Proxy(ISCardISO7816 *This,BYTE byClass);", "ISCardISO7816_UpdateBinary_Proxy": "HRESULT WINAPI ISCardISO7816_UpdateBinary_Proxy(ISCardISO7816 *This,BYTE byP1,BYTE byP2,LPBYTEBUFFER pData,LPSCARDCMD *ppCmd);", "ISCardISO7816_UpdateRecord_Proxy": "HRESULT WINAPI ISCardISO7816_UpdateRecord_Proxy(ISCardISO7816 *This,BYTE byRecordId,BYTE byRefCtrl,LPBYTEBUFFER pData,LPSCARDCMD *ppCmd);", "ISCardISO7816_Verify_Proxy": "HRESULT WINAPI ISCardISO7816_Verify_Proxy(ISCardISO7816 *This,BYTE byRefCtrl,LPBYTEBUFFER pData,LPSCARDCMD *ppCmd);", "ISCardISO7816_WriteBinary_Proxy": "HRESULT WINAPI ISCardISO7816_WriteBinary_Proxy(ISCardISO7816 *This,BYTE byP1,BYTE byP2,LPBYTEBUFFER pData,LPSCARDCMD *ppCmd);", "ISCardISO7816_WriteRecord_Proxy": "HRESULT WINAPI ISCardISO7816_WriteRecord_Proxy(ISCardISO7816 *This,BYTE byRecordId,BYTE byRefCtrl,LPBYTEBUFFER pData,LPSCARDCMD *ppCmd);", "ISCard_get_Atr_Proxy": "HRESULT WINAPI ISCard_get_Atr_Proxy(ISCard *This,LPBYTEBUFFER *ppAtr);", "ISCard_get_CardHandle_Proxy": "HRESULT WINAPI ISCard_get_CardHandle_Proxy(ISCard *This,HSCARD *pHandle);", "ISCard_get_Context_Proxy": "HRESULT WINAPI ISCard_get_Context_Proxy(ISCard *This,HSCARDCONTEXT *pContext);", "ISCard_get_Protocol_Proxy": "HRESULT WINAPI ISCard_get_Protocol_Proxy(ISCard *This,SCARD_PROTOCOLS *pProtocol);", "ISCard_get_Status_Proxy": "HRESULT WINAPI ISCard_get_Status_Proxy(ISCard *This,SCARD_STATES *pStatus);", "ISCard_AttachByHandle_Proxy": "HRESULT WINAPI ISCard_AttachByHandle_Proxy(ISCard *This,HSCARD hCard);", "ISCard_AttachByReader_Proxy": "HRESULT WINAPI ISCard_AttachByReader_Proxy(ISCard *This,BSTR bstrReaderName,SCARD_SHARE_MODES ShareMode,SCARD_PROTOCOLS PrefProtocol);", "ISCard_Detach_Proxy": "HRESULT WINAPI ISCard_Detach_Proxy(ISCard *This,SCARD_DISPOSITIONS Disposition);", "ISCard_LockSCard_Proxy": "HRESULT WINAPI ISCard_LockSCard_Proxy(ISCard *This);", "ISCard_ReAttach_Proxy": "HRESULT WINAPI ISCard_ReAttach_Proxy(ISCard *This,SCARD_SHARE_MODES ShareMode,SCARD_DISPOSITIONS InitState);", "ISCard_Transaction_Proxy": "HRESULT WINAPI ISCard_Transaction_Proxy(ISCard *This,LPSCARDCMD *ppCmd);", "ISCard_UnlockSCard_Proxy": "HRESULT WINAPI ISCard_UnlockSCard_Proxy(ISCard *This,SCARD_DISPOSITIONS Disposition);", "ISCardDatabase_GetProviderCardId_Proxy": "HRESULT WINAPI ISCardDatabase_GetProviderCardId_Proxy(ISCardDatabase *This,BSTR bstrCardName,LPGUID *ppguidProviderId);", "ISCardDatabase_ListCardInterfaces_Proxy": "HRESULT WINAPI ISCardDatabase_ListCardInterfaces_Proxy(ISCardDatabase *This,BSTR bstrCardName,LPSAFEARRAY *ppInterfaceGuids);", "ISCardDatabase_ListCards_Proxy": "HRESULT WINAPI ISCardDatabase_ListCards_Proxy(ISCardDatabase *This,LPBYTEBUFFER pAtr,LPSAFEARRAY pInterfaceGuids,__LONG32 localeId,LPSAFEARRAY *ppCardNames);", "ISCardDatabase_ListReaderGroups_Proxy": "HRESULT WINAPI ISCardDatabase_ListReaderGroups_Proxy(ISCardDatabase *This,__LONG32 localeId,LPSAFEARRAY *ppReaderGroups);", "ISCardDatabase_ListReaders_Proxy": "HRESULT WINAPI ISCardDatabase_ListReaders_Proxy(ISCardDatabase *This,__LONG32 localeId,LPSAFEARRAY *ppReaders);", "ISCardLocate_ConfigureCardGuidSearch_Proxy": "HRESULT WINAPI ISCardLocate_ConfigureCardGuidSearch_Proxy(ISCardLocate *This,LPSAFEARRAY pCardGuids,LPSAFEARRAY pGroupNames,BSTR bstrTitle,LONG lFlags);", "ISCardLocate_ConfigureCardNameSearch_Proxy": "HRESULT WINAPI ISCardLocate_ConfigureCardNameSearch_Proxy(ISCardLocate *This,LPSAFEARRAY pCardNames,LPSAFEARRAY pGroupNames,BSTR bstrTitle,LONG lFlags);", "ISCardLocate_FindCard_Proxy": "HRESULT WINAPI ISCardLocate_FindCard_Proxy(ISCardLocate *This,SCARD_SHARE_MODES ShareMode,SCARD_PROTOCOLS Protocols,LONG lFlags,LPSCARDINFO *ppCardInfo);", "EapMethodAuthenticatorFreeMemory": "VOID WINAPI EapMethodAuthenticatorFreeMemory(", "EapMethodAuthenticatorInitialize": "DWORD WINAPI EapMethodAuthenticatorInitialize(", "EapPeerFreeErrorMemory": "VOID WINAPI EapPeerFreeErrorMemory(", "EapMethodAuthenticatorGetResult": "DWORD WINAPI EapMethodAuthenticatorGetResult(", "EapMethodAuthenticatorBeginSession": "DWORD WINAPI EapMethodAuthenticatorBeginSession(", "EapMethodAuthenticatorFreeErrorMemory": "DWORD WINAPI EapMethodAuthenticatorFreeErrorMemory(", "EapMethodAuthenticatorInvokeConfigUI": "DWORD WINAPI EapMethodAuthenticatorInvokeConfigUI(", "EapMethodAuthenticatorReceivePacket": "DWORD WINAPI EapMethodAuthenticatorReceivePacket(", "EapMethodAuthenticatorSendPacket": "DWORD WINAPI EapMethodAuthenticatorSendPacket(", "EapMethodAuthenticatorSetAttributes": "DWORD WINAPI EapMethodAuthenticatorSetAttributes(", "EapMethodAuthenticatorShutdown": "DWORD WINAPI EapMethodAuthenticatorShutdown(", "EapMethodAuthenticatorUpdateInnerMethodParams": "DWORD WINAPI EapMethodAuthenticatorUpdateInnerMethodParams(", "WHvEmulatorCreateEmulator": "HRESULT WINAPI WHvEmulatorCreateEmulator(const WHV_EMULATOR_CALLBACKS *Callbacks, WHV_EMULATOR_HANDLE *Emulator);", "WHvEmulatorDestroyEmulator": "HRESULT WINAPI WHvEmulatorDestroyEmulator(WHV_EMULATOR_HANDLE Emulator);", "WHvEmulatorTryIoEmulation": "HRESULT WINAPI WHvEmulatorTryIoEmulation(WHV_EMULATOR_HANDLE Emulator, VOID *Context, const WHV_VP_EXIT_CONTEXT *VpContext, const WHV_X64_IO_PORT_ACCESS_CONTEXT *IoInstructionContext, WHV_EMULATOR_STATUS *EmulatorReturnStatus);", "WHvEmulatorTryMmioEmulation": "HRESULT WINAPI WHvEmulatorTryMmioEmulation(WHV_EMULATOR_HANDLE Emulator, VOID *Context, const WHV_VP_EXIT_CONTEXT *VpContext, const WHV_MEMORY_ACCESS_CONTEXT *MmioInstructionContext, WHV_EMULATOR_STATUS *EmulatorReturnStatus);", "ClearDownloadCache": "HRESULT WINAPI ClearDownloadCache(void);", "CompareAssemblyIdentity": "HRESULT WINAPI CompareAssemblyIdentity(LPCWSTR,WINBOOL,LPCWSTR,WINBOOL,WINBOOL*,AssemblyComparisonResult*);", "CreateAssemblyCache": "HRESULT WINAPI CreateAssemblyCache(IAssemblyCache**,DWORD);", "CreateAssemblyEnum": "HRESULT WINAPI CreateAssemblyEnum(IAssemblyEnum**,IUnknown*,IAssemblyName*,DWORD,LPVOID);", "CreateAssemblyNameObject": "HRESULT WINAPI CreateAssemblyNameObject(LPASSEMBLYNAME*,LPCWSTR,DWORD,LPVOID);", "CreateInstallReferenceEnum": "HRESULT WINAPI CreateInstallReferenceEnum(IInstallReferenceEnum**,IAssemblyName*,DWORD,LPVOID);", "GetAssemblyIdentityFromFile": "HRESULT WINAPI GetAssemblyIdentityFromFile(LPCWSTR,REFIID,IUnknown**);", "GetCachePath": "HRESULT WINAPI GetCachePath(ASM_CACHE_FLAGS,LPWSTR,PDWORD);", "ISClusApplication_get_DomainNames_Proxy": "HRESULT WINAPI ISClusApplication_get_DomainNames_Proxy(ISClusApplication *This,ISDomainNames **ppDomains);", "ISClusApplication_get_ClusterNames_Proxy": "HRESULT WINAPI ISClusApplication_get_ClusterNames_Proxy(ISClusApplication *This,BSTR bstrDomainName,ISClusterNames **ppClusters);", "ISClusApplication_OpenCluster_Proxy": "HRESULT WINAPI ISClusApplication_OpenCluster_Proxy(ISClusApplication *This,BSTR bstrClusterName,ISCluster **pCluster);", "ISDomainNames_get_Count_Proxy": "HRESULT WINAPI ISDomainNames_get_Count_Proxy(ISDomainNames *This,__LONG32 *plCount);", "ISDomainNames_get__NewEnum_Proxy": "HRESULT WINAPI ISDomainNames_get__NewEnum_Proxy(ISDomainNames *This,IUnknown **retval);", "ISDomainNames_Refresh_Proxy": "HRESULT WINAPI ISDomainNames_Refresh_Proxy(ISDomainNames *This);", "ISDomainNames_get_Item_Proxy": "HRESULT WINAPI ISDomainNames_get_Item_Proxy(ISDomainNames *This,VARIANT varIndex,BSTR *pbstrDomainName);", "ISClusterNames_get_Count_Proxy": "HRESULT WINAPI ISClusterNames_get_Count_Proxy(ISClusterNames *This,__LONG32 *plCount);", "ISClusterNames_get__NewEnum_Proxy": "HRESULT WINAPI ISClusterNames_get__NewEnum_Proxy(ISClusterNames *This,IUnknown **retval);", "ISClusterNames_Refresh_Proxy": "HRESULT WINAPI ISClusterNames_Refresh_Proxy(ISClusterNames *This);", "ISClusterNames_get_Item_Proxy": "HRESULT WINAPI ISClusterNames_get_Item_Proxy(ISClusterNames *This,VARIANT varIndex,BSTR *pbstrClusterName);", "ISClusterNames_get_DomainName_Proxy": "HRESULT WINAPI ISClusterNames_get_DomainName_Proxy(ISClusterNames *This,BSTR *pbstrDomainName);", "ISClusRefObject_get_Handle_Proxy": "HRESULT WINAPI ISClusRefObject_get_Handle_Proxy(ISClusRefObject *This,ULONG_PTR *phandle);", "ISClusVersion_get_Name_Proxy": "HRESULT WINAPI ISClusVersion_get_Name_Proxy(ISClusVersion *This,BSTR *pbstrClusterName);", "ISClusVersion_get_MajorVersion_Proxy": "HRESULT WINAPI ISClusVersion_get_MajorVersion_Proxy(ISClusVersion *This,__LONG32 *pnMajorVersion);", "ISClusVersion_get_MinorVersion_Proxy": "HRESULT WINAPI ISClusVersion_get_MinorVersion_Proxy(ISClusVersion *This,__LONG32 *pnMinorVersion);", "ISClusVersion_get_BuildNumber_Proxy": "HRESULT WINAPI ISClusVersion_get_BuildNumber_Proxy(ISClusVersion *This,SHORT *pnBuildNumber);", "ISClusVersion_get_VendorId_Proxy": "HRESULT WINAPI ISClusVersion_get_VendorId_Proxy(ISClusVersion *This,BSTR *pbstrVendorId);", "ISClusVersion_get_CSDVersion_Proxy": "HRESULT WINAPI ISClusVersion_get_CSDVersion_Proxy(ISClusVersion *This,BSTR *pbstrCSDVersion);", "ISClusVersion_get_ClusterHighestVersion_Proxy": "HRESULT WINAPI ISClusVersion_get_ClusterHighestVersion_Proxy(ISClusVersion *This,__LONG32 *pnClusterHighestVersion);", "ISClusVersion_get_ClusterLowestVersion_Proxy": "HRESULT WINAPI ISClusVersion_get_ClusterLowestVersion_Proxy(ISClusVersion *This,__LONG32 *pnClusterLowestVersion);", "ISClusVersion_get_Flags_Proxy": "HRESULT WINAPI ISClusVersion_get_Flags_Proxy(ISClusVersion *This,__LONG32 *pnFlags);", "ISClusVersion_get_MixedVersion_Proxy": "HRESULT WINAPI ISClusVersion_get_MixedVersion_Proxy(ISClusVersion *This,VARIANT *pvarMixedVersion);", "ISCluster_get_CommonProperties_Proxy": "HRESULT WINAPI ISCluster_get_CommonProperties_Proxy(ISCluster *This,ISClusProperties **ppProperties);", "ISCluster_get_PrivateProperties_Proxy": "HRESULT WINAPI ISCluster_get_PrivateProperties_Proxy(ISCluster *This,ISClusProperties **ppProperties);", "ISCluster_get_CommonROProperties_Proxy": "HRESULT WINAPI ISCluster_get_CommonROProperties_Proxy(ISCluster *This,ISClusProperties **ppProperties);", "ISCluster_get_PrivateROProperties_Proxy": "HRESULT WINAPI ISCluster_get_PrivateROProperties_Proxy(ISCluster *This,ISClusProperties **ppProperties);", "ISCluster_get_Handle_Proxy": "HRESULT WINAPI ISCluster_get_Handle_Proxy(ISCluster *This,ULONG_PTR *phandle);", "ISCluster_Open_Proxy": "HRESULT WINAPI ISCluster_Open_Proxy(ISCluster *This,BSTR bstrClusterName);", "ISCluster_get_Name_Proxy": "HRESULT WINAPI ISCluster_get_Name_Proxy(ISCluster *This,BSTR *pbstrName);", "ISCluster_put_Name_Proxy": "HRESULT WINAPI ISCluster_put_Name_Proxy(ISCluster *This,BSTR bstrClusterName);", "ISCluster_get_Version_Proxy": "HRESULT WINAPI ISCluster_get_Version_Proxy(ISCluster *This,ISClusVersion **ppClusVersion);", "ISCluster_put_QuorumResource_Proxy": "HRESULT WINAPI ISCluster_put_QuorumResource_Proxy(ISCluster *This,ISClusResource *pClusterResource);", "ISCluster_get_QuorumResource_Proxy": "HRESULT WINAPI ISCluster_get_QuorumResource_Proxy(ISCluster *This,ISClusResource **pClusterResource);", "ISCluster_get_QuorumLogSize_Proxy": "HRESULT WINAPI ISCluster_get_QuorumLogSize_Proxy(ISCluster *This,__LONG32 *pnLogSize);", "ISCluster_put_QuorumLogSize_Proxy": "HRESULT WINAPI ISCluster_put_QuorumLogSize_Proxy(ISCluster *This,__LONG32 nLogSize);", "ISCluster_get_QuorumPath_Proxy": "HRESULT WINAPI ISCluster_get_QuorumPath_Proxy(ISCluster *This,BSTR *ppPath);", "ISCluster_put_QuorumPath_Proxy": "HRESULT WINAPI ISCluster_put_QuorumPath_Proxy(ISCluster *This,BSTR pPath);", "ISCluster_get_Nodes_Proxy": "HRESULT WINAPI ISCluster_get_Nodes_Proxy(ISCluster *This,ISClusNodes **ppNodes);", "ISCluster_get_ResourceGroups_Proxy": "HRESULT WINAPI ISCluster_get_ResourceGroups_Proxy(ISCluster *This,ISClusResGroups **ppClusterResourceGroups);", "ISCluster_get_Resources_Proxy": "HRESULT WINAPI ISCluster_get_Resources_Proxy(ISCluster *This,ISClusResources **ppClusterResources);", "ISCluster_get_ResourceTypes_Proxy": "HRESULT WINAPI ISCluster_get_ResourceTypes_Proxy(ISCluster *This,ISClusResTypes **ppResourceTypes);", "ISCluster_get_Networks_Proxy": "HRESULT WINAPI ISCluster_get_Networks_Proxy(ISCluster *This,ISClusNetworks **ppNetworks);", "ISCluster_get_NetInterfaces_Proxy": "HRESULT WINAPI ISCluster_get_NetInterfaces_Proxy(ISCluster *This,ISClusNetInterfaces **ppNetInterfaces);", "ISClusNode_get_CommonProperties_Proxy": "HRESULT WINAPI ISClusNode_get_CommonProperties_Proxy(ISClusNode *This,ISClusProperties **ppProperties);", "ISClusNode_get_PrivateProperties_Proxy": "HRESULT WINAPI ISClusNode_get_PrivateProperties_Proxy(ISClusNode *This,ISClusProperties **ppProperties);", "ISClusNode_get_CommonROProperties_Proxy": "HRESULT WINAPI ISClusNode_get_CommonROProperties_Proxy(ISClusNode *This,ISClusProperties **ppProperties);", "ISClusNode_get_PrivateROProperties_Proxy": "HRESULT WINAPI ISClusNode_get_PrivateROProperties_Proxy(ISClusNode *This,ISClusProperties **ppProperties);", "ISClusNode_get_Name_Proxy": "HRESULT WINAPI ISClusNode_get_Name_Proxy(ISClusNode *This,BSTR *pbstrName);", "ISClusNode_get_Handle_Proxy": "HRESULT WINAPI ISClusNode_get_Handle_Proxy(ISClusNode *This,ULONG_PTR *phandle);", "ISClusNode_get_NodeID_Proxy": "HRESULT WINAPI ISClusNode_get_NodeID_Proxy(ISClusNode *This,BSTR *pbstrNodeID);", "ISClusNode_get_State_Proxy": "HRESULT WINAPI ISClusNode_get_State_Proxy(ISClusNode *This,CLUSTER_NODE_STATE *dwState);", "ISClusNode_Pause_Proxy": "HRESULT WINAPI ISClusNode_Pause_Proxy(ISClusNode *This);", "ISClusNode_Resume_Proxy": "HRESULT WINAPI ISClusNode_Resume_Proxy(ISClusNode *This);", "ISClusNode_Evict_Proxy": "HRESULT WINAPI ISClusNode_Evict_Proxy(ISClusNode *This);", "ISClusNode_get_ResourceGroups_Proxy": "HRESULT WINAPI ISClusNode_get_ResourceGroups_Proxy(ISClusNode *This,ISClusResGroups **ppResourceGroups);", "ISClusNode_get_Cluster_Proxy": "HRESULT WINAPI ISClusNode_get_Cluster_Proxy(ISClusNode *This,ISCluster **ppCluster);", "ISClusNode_get_NetInterfaces_Proxy": "HRESULT WINAPI ISClusNode_get_NetInterfaces_Proxy(ISClusNode *This,ISClusNodeNetInterfaces **ppClusNetInterfaces);", "ISClusNodes_get_Count_Proxy": "HRESULT WINAPI ISClusNodes_get_Count_Proxy(ISClusNodes *This,__LONG32 *plCount);", "ISClusNodes_get__NewEnum_Proxy": "HRESULT WINAPI ISClusNodes_get__NewEnum_Proxy(ISClusNodes *This,IUnknown **retval);", "ISClusNodes_Refresh_Proxy": "HRESULT WINAPI ISClusNodes_Refresh_Proxy(ISClusNodes *This);", "ISClusNodes_get_Item_Proxy": "HRESULT WINAPI ISClusNodes_get_Item_Proxy(ISClusNodes *This,VARIANT varIndex,ISClusNode **ppNode);", "ISClusNetwork_get_CommonProperties_Proxy": "HRESULT WINAPI ISClusNetwork_get_CommonProperties_Proxy(ISClusNetwork *This,ISClusProperties **ppProperties);", "ISClusNetwork_get_PrivateProperties_Proxy": "HRESULT WINAPI ISClusNetwork_get_PrivateProperties_Proxy(ISClusNetwork *This,ISClusProperties **ppProperties);", "ISClusNetwork_get_CommonROProperties_Proxy": "HRESULT WINAPI ISClusNetwork_get_CommonROProperties_Proxy(ISClusNetwork *This,ISClusProperties **ppProperties);", "ISClusNetwork_get_PrivateROProperties_Proxy": "HRESULT WINAPI ISClusNetwork_get_PrivateROProperties_Proxy(ISClusNetwork *This,ISClusProperties **ppProperties);", "ISClusNetwork_get_Handle_Proxy": "HRESULT WINAPI ISClusNetwork_get_Handle_Proxy(ISClusNetwork *This,ULONG_PTR *phandle);", "ISClusNetwork_get_Name_Proxy": "HRESULT WINAPI ISClusNetwork_get_Name_Proxy(ISClusNetwork *This,BSTR *pbstrName);", "ISClusNetwork_put_Name_Proxy": "HRESULT WINAPI ISClusNetwork_put_Name_Proxy(ISClusNetwork *This,BSTR bstrNetworkName);", "ISClusNetwork_get_NetworkID_Proxy": "HRESULT WINAPI ISClusNetwork_get_NetworkID_Proxy(ISClusNetwork *This,BSTR *pbstrNetworkID);", "ISClusNetwork_get_State_Proxy": "HRESULT WINAPI ISClusNetwork_get_State_Proxy(ISClusNetwork *This,CLUSTER_NETWORK_STATE *dwState);", "ISClusNetwork_get_NetInterfaces_Proxy": "HRESULT WINAPI ISClusNetwork_get_NetInterfaces_Proxy(ISClusNetwork *This,ISClusNetworkNetInterfaces **ppClusNetInterfaces);", "ISClusNetwork_get_Cluster_Proxy": "HRESULT WINAPI ISClusNetwork_get_Cluster_Proxy(ISClusNetwork *This,ISCluster **ppCluster);", "ISClusNetworks_get_Count_Proxy": "HRESULT WINAPI ISClusNetworks_get_Count_Proxy(ISClusNetworks *This,__LONG32 *plCount);", "ISClusNetworks_get__NewEnum_Proxy": "HRESULT WINAPI ISClusNetworks_get__NewEnum_Proxy(ISClusNetworks *This,IUnknown **retval);", "ISClusNetworks_Refresh_Proxy": "HRESULT WINAPI ISClusNetworks_Refresh_Proxy(ISClusNetworks *This);", "ISClusNetworks_get_Item_Proxy": "HRESULT WINAPI ISClusNetworks_get_Item_Proxy(ISClusNetworks *This,VARIANT varIndex,ISClusNetwork **ppClusNetwork);", "ISClusNetInterface_get_CommonProperties_Proxy": "HRESULT WINAPI ISClusNetInterface_get_CommonProperties_Proxy(ISClusNetInterface *This,ISClusProperties **ppProperties);", "ISClusNetInterface_get_PrivateProperties_Proxy": "HRESULT WINAPI ISClusNetInterface_get_PrivateProperties_Proxy(ISClusNetInterface *This,ISClusProperties **ppProperties);", "ISClusNetInterface_get_CommonROProperties_Proxy": "HRESULT WINAPI ISClusNetInterface_get_CommonROProperties_Proxy(ISClusNetInterface *This,ISClusProperties **ppProperties);", "ISClusNetInterface_get_PrivateROProperties_Proxy": "HRESULT WINAPI ISClusNetInterface_get_PrivateROProperties_Proxy(ISClusNetInterface *This,ISClusProperties **ppProperties);", "ISClusNetInterface_get_Name_Proxy": "HRESULT WINAPI ISClusNetInterface_get_Name_Proxy(ISClusNetInterface *This,BSTR *pbstrName);", "ISClusNetInterface_get_Handle_Proxy": "HRESULT WINAPI ISClusNetInterface_get_Handle_Proxy(ISClusNetInterface *This,ULONG_PTR *phandle);", "ISClusNetInterface_get_State_Proxy": "HRESULT WINAPI ISClusNetInterface_get_State_Proxy(ISClusNetInterface *This,CLUSTER_NETINTERFACE_STATE *dwState);", "ISClusNetInterface_get_Cluster_Proxy": "HRESULT WINAPI ISClusNetInterface_get_Cluster_Proxy(ISClusNetInterface *This,ISCluster **ppCluster);", "ISClusNetInterfaces_get_Count_Proxy": "HRESULT WINAPI ISClusNetInterfaces_get_Count_Proxy(ISClusNetInterfaces *This,__LONG32 *plCount);", "ISClusNetInterfaces_get__NewEnum_Proxy": "HRESULT WINAPI ISClusNetInterfaces_get__NewEnum_Proxy(ISClusNetInterfaces *This,IUnknown **retval);", "ISClusNetInterfaces_Refresh_Proxy": "HRESULT WINAPI ISClusNetInterfaces_Refresh_Proxy(ISClusNetInterfaces *This);", "ISClusNetInterfaces_get_Item_Proxy": "HRESULT WINAPI ISClusNetInterfaces_get_Item_Proxy(ISClusNetInterfaces *This,VARIANT varIndex,ISClusNetInterface **ppClusNetInterface);", "ISClusNodeNetInterfaces_get_Count_Proxy": "HRESULT WINAPI ISClusNodeNetInterfaces_get_Count_Proxy(ISClusNodeNetInterfaces *This,__LONG32 *plCount);", "ISClusNodeNetInterfaces_get__NewEnum_Proxy": "HRESULT WINAPI ISClusNodeNetInterfaces_get__NewEnum_Proxy(ISClusNodeNetInterfaces *This,IUnknown **retval);", "ISClusNodeNetInterfaces_Refresh_Proxy": "HRESULT WINAPI ISClusNodeNetInterfaces_Refresh_Proxy(ISClusNodeNetInterfaces *This);", "ISClusNodeNetInterfaces_get_Item_Proxy": "HRESULT WINAPI ISClusNodeNetInterfaces_get_Item_Proxy(ISClusNodeNetInterfaces *This,VARIANT varIndex,ISClusNetInterface **ppClusNetInterface);", "ISClusNetworkNetInterfaces_get_Count_Proxy": "HRESULT WINAPI ISClusNetworkNetInterfaces_get_Count_Proxy(ISClusNetworkNetInterfaces *This,__LONG32 *plCount);", "ISClusNetworkNetInterfaces_get__NewEnum_Proxy": "HRESULT WINAPI ISClusNetworkNetInterfaces_get__NewEnum_Proxy(ISClusNetworkNetInterfaces *This,IUnknown **retval);", "ISClusNetworkNetInterfaces_Refresh_Proxy": "HRESULT WINAPI ISClusNetworkNetInterfaces_Refresh_Proxy(ISClusNetworkNetInterfaces *This);", "ISClusNetworkNetInterfaces_get_Item_Proxy": "HRESULT WINAPI ISClusNetworkNetInterfaces_get_Item_Proxy(ISClusNetworkNetInterfaces *This,VARIANT varIndex,ISClusNetInterface **ppClusNetInterface);", "ISClusResGroup_get_CommonProperties_Proxy": "HRESULT WINAPI ISClusResGroup_get_CommonProperties_Proxy(ISClusResGroup *This,ISClusProperties **ppProperties);", "ISClusResGroup_get_PrivateProperties_Proxy": "HRESULT WINAPI ISClusResGroup_get_PrivateProperties_Proxy(ISClusResGroup *This,ISClusProperties **ppProperties);", "ISClusResGroup_get_CommonROProperties_Proxy": "HRESULT WINAPI ISClusResGroup_get_CommonROProperties_Proxy(ISClusResGroup *This,ISClusProperties **ppProperties);", "ISClusResGroup_get_PrivateROProperties_Proxy": "HRESULT WINAPI ISClusResGroup_get_PrivateROProperties_Proxy(ISClusResGroup *This,ISClusProperties **ppProperties);", "ISClusResGroup_get_Handle_Proxy": "HRESULT WINAPI ISClusResGroup_get_Handle_Proxy(ISClusResGroup *This,ULONG_PTR *phandle);", "ISClusResGroup_get_Name_Proxy": "HRESULT WINAPI ISClusResGroup_get_Name_Proxy(ISClusResGroup *This,BSTR *pbstrName);", "ISClusResGroup_put_Name_Proxy": "HRESULT WINAPI ISClusResGroup_put_Name_Proxy(ISClusResGroup *This,BSTR bstrGroupName);", "ISClusResGroup_get_State_Proxy": "HRESULT WINAPI ISClusResGroup_get_State_Proxy(ISClusResGroup *This,CLUSTER_GROUP_STATE *dwState);", "ISClusResGroup_get_OwnerNode_Proxy": "HRESULT WINAPI ISClusResGroup_get_OwnerNode_Proxy(ISClusResGroup *This,ISClusNode **ppOwnerNode);", "ISClusResGroup_get_Resources_Proxy": "HRESULT WINAPI ISClusResGroup_get_Resources_Proxy(ISClusResGroup *This,ISClusResGroupResources **ppClusterGroupResources);", "ISClusResGroup_get_PreferredOwnerNodes_Proxy": "HRESULT WINAPI ISClusResGroup_get_PreferredOwnerNodes_Proxy(ISClusResGroup *This,ISClusResGroupPreferredOwnerNodes **ppOwnerNodes);", "ISClusResGroup_Delete_Proxy": "HRESULT WINAPI ISClusResGroup_Delete_Proxy(ISClusResGroup *This);", "ISClusResGroup_Online_Proxy": "HRESULT WINAPI ISClusResGroup_Online_Proxy(ISClusResGroup *This,VARIANT varTimeout,VARIANT varNode,VARIANT *pvarPending);", "ISClusResGroup_Move_Proxy": "HRESULT WINAPI ISClusResGroup_Move_Proxy(ISClusResGroup *This,VARIANT varTimeout,VARIANT varNode,VARIANT *pvarPending);", "ISClusResGroup_Offline_Proxy": "HRESULT WINAPI ISClusResGroup_Offline_Proxy(ISClusResGroup *This,VARIANT varTimeout,VARIANT *pvarPending);", "ISClusResGroup_get_Cluster_Proxy": "HRESULT WINAPI ISClusResGroup_get_Cluster_Proxy(ISClusResGroup *This,ISCluster **ppCluster);", "ISClusResGroups_get_Count_Proxy": "HRESULT WINAPI ISClusResGroups_get_Count_Proxy(ISClusResGroups *This,__LONG32 *plCount);", "ISClusResGroups_get__NewEnum_Proxy": "HRESULT WINAPI ISClusResGroups_get__NewEnum_Proxy(ISClusResGroups *This,IUnknown **retval);", "ISClusResGroups_Refresh_Proxy": "HRESULT WINAPI ISClusResGroups_Refresh_Proxy(ISClusResGroups *This);", "ISClusResGroups_get_Item_Proxy": "HRESULT WINAPI ISClusResGroups_get_Item_Proxy(ISClusResGroups *This,VARIANT varIndex,ISClusResGroup **ppClusResGroup);", "ISClusResGroups_CreateItem_Proxy": "HRESULT WINAPI ISClusResGroups_CreateItem_Proxy(ISClusResGroups *This,BSTR bstrResourceGroupName,ISClusResGroup **ppResourceGroup);", "ISClusResGroups_DeleteItem_Proxy": "HRESULT WINAPI ISClusResGroups_DeleteItem_Proxy(ISClusResGroups *This,VARIANT varIndex);", "ISClusResource_get_CommonProperties_Proxy": "HRESULT WINAPI ISClusResource_get_CommonProperties_Proxy(ISClusResource *This,ISClusProperties **ppProperties);", "ISClusResource_get_PrivateProperties_Proxy": "HRESULT WINAPI ISClusResource_get_PrivateProperties_Proxy(ISClusResource *This,ISClusProperties **ppProperties);", "ISClusResource_get_CommonROProperties_Proxy": "HRESULT WINAPI ISClusResource_get_CommonROProperties_Proxy(ISClusResource *This,ISClusProperties **ppProperties);", "ISClusResource_get_PrivateROProperties_Proxy": "HRESULT WINAPI ISClusResource_get_PrivateROProperties_Proxy(ISClusResource *This,ISClusProperties **ppProperties);", "ISClusResource_get_Handle_Proxy": "HRESULT WINAPI ISClusResource_get_Handle_Proxy(ISClusResource *This,ULONG_PTR *phandle);", "ISClusResource_get_Name_Proxy": "HRESULT WINAPI ISClusResource_get_Name_Proxy(ISClusResource *This,BSTR *pbstrName);", "ISClusResource_put_Name_Proxy": "HRESULT WINAPI ISClusResource_put_Name_Proxy(ISClusResource *This,BSTR bstrResourceName);", "ISClusResource_get_State_Proxy": "HRESULT WINAPI ISClusResource_get_State_Proxy(ISClusResource *This,CLUSTER_RESOURCE_STATE *dwState);", "ISClusResource_get_CoreFlag_Proxy": "HRESULT WINAPI ISClusResource_get_CoreFlag_Proxy(ISClusResource *This,CLUS_FLAGS *dwCoreFlag);", "ISClusResource_BecomeQuorumResource_Proxy": "HRESULT WINAPI ISClusResource_BecomeQuorumResource_Proxy(ISClusResource *This,BSTR bstrDevicePath,__LONG32 lMaxLogSize);", "ISClusResource_Delete_Proxy": "HRESULT WINAPI ISClusResource_Delete_Proxy(ISClusResource *This);", "ISClusResource_Fail_Proxy": "HRESULT WINAPI ISClusResource_Fail_Proxy(ISClusResource *This);", "ISClusResource_Online_Proxy": "HRESULT WINAPI ISClusResource_Online_Proxy(ISClusResource *This,__LONG32 nTimeout,VARIANT *pvarPending);", "ISClusResource_Offline_Proxy": "HRESULT WINAPI ISClusResource_Offline_Proxy(ISClusResource *This,__LONG32 nTimeout,VARIANT *pvarPending);", "ISClusResource_ChangeResourceGroup_Proxy": "HRESULT WINAPI ISClusResource_ChangeResourceGroup_Proxy(ISClusResource *This,ISClusResGroup *pResourceGroup);", "ISClusResource_AddResourceNode_Proxy": "HRESULT WINAPI ISClusResource_AddResourceNode_Proxy(ISClusResource *This,ISClusNode *pNode);", "ISClusResource_RemoveResourceNode_Proxy": "HRESULT WINAPI ISClusResource_RemoveResourceNode_Proxy(ISClusResource *This,ISClusNode *pNode);", "ISClusResource_CanResourceBeDependent_Proxy": "HRESULT WINAPI ISClusResource_CanResourceBeDependent_Proxy(ISClusResource *This,ISClusResource *pResource,VARIANT *pvarDependent);", "ISClusResource_get_PossibleOwnerNodes_Proxy": "HRESULT WINAPI ISClusResource_get_PossibleOwnerNodes_Proxy(ISClusResource *This,ISClusResPossibleOwnerNodes **ppOwnerNodes);", "ISClusResource_get_Dependencies_Proxy": "HRESULT WINAPI ISClusResource_get_Dependencies_Proxy(ISClusResource *This,ISClusResDependencies **ppResDependencies);", "ISClusResource_get_Dependents_Proxy": "HRESULT WINAPI ISClusResource_get_Dependents_Proxy(ISClusResource *This,ISClusResDependents **ppResDependents);", "ISClusResource_get_Group_Proxy": "HRESULT WINAPI ISClusResource_get_Group_Proxy(ISClusResource *This,ISClusResGroup **ppResGroup);", "ISClusResource_get_OwnerNode_Proxy": "HRESULT WINAPI ISClusResource_get_OwnerNode_Proxy(ISClusResource *This,ISClusNode **ppOwnerNode);", "ISClusResource_get_Cluster_Proxy": "HRESULT WINAPI ISClusResource_get_Cluster_Proxy(ISClusResource *This,ISCluster **ppCluster);", "ISClusResource_get_ClassInfo_Proxy": "HRESULT WINAPI ISClusResource_get_ClassInfo_Proxy(ISClusResource *This,CLUSTER_RESOURCE_CLASS *prcClassInfo);", "ISClusResource_get_Disk_Proxy": "HRESULT WINAPI ISClusResource_get_Disk_Proxy(ISClusResource *This,ISClusDisk **ppDisk);", "ISClusResource_get_RegistryKeys_Proxy": "HRESULT WINAPI ISClusResource_get_RegistryKeys_Proxy(ISClusResource *This,ISClusRegistryKeys **ppRegistryKeys);", "ISClusResource_get_CryptoKeys_Proxy": "HRESULT WINAPI ISClusResource_get_CryptoKeys_Proxy(ISClusResource *This,ISClusCryptoKeys **ppCryptoKeys);", "ISClusResource_get_TypeName_Proxy": "HRESULT WINAPI ISClusResource_get_TypeName_Proxy(ISClusResource *This,BSTR *pbstrTypeName);", "ISClusResource_get_Type_Proxy": "HRESULT WINAPI ISClusResource_get_Type_Proxy(ISClusResource *This,ISClusResType **ppResourceType);", "ISClusResource_get_MaintenanceMode_Proxy": "HRESULT WINAPI ISClusResource_get_MaintenanceMode_Proxy(ISClusResource *This,WINBOOL *pbMaintenanceMode);", "ISClusResource_put_MaintenanceMode_Proxy": "HRESULT WINAPI ISClusResource_put_MaintenanceMode_Proxy(ISClusResource *This,WINBOOL bMaintenanceMode);", "ISClusResDependencies_get_Count_Proxy": "HRESULT WINAPI ISClusResDependencies_get_Count_Proxy(ISClusResDependencies *This,__LONG32 *plCount);", "ISClusResDependencies_get__NewEnum_Proxy": "HRESULT WINAPI ISClusResDependencies_get__NewEnum_Proxy(ISClusResDependencies *This,IUnknown **retval);", "ISClusResDependencies_Refresh_Proxy": "HRESULT WINAPI ISClusResDependencies_Refresh_Proxy(ISClusResDependencies *This);", "ISClusResDependencies_get_Item_Proxy": "HRESULT WINAPI ISClusResDependencies_get_Item_Proxy(ISClusResDependencies *This,VARIANT varIndex,ISClusResource **ppClusResource);", "ISClusResDependencies_CreateItem_Proxy": "HRESULT WINAPI ISClusResDependencies_CreateItem_Proxy(ISClusResDependencies *This,BSTR bstrResourceName,BSTR bstrResourceType,CLUSTER_RESOURCE_CREATE_FLAGS dwFlags,ISClusResource **ppClusterResource);", "ISClusResDependencies_DeleteItem_Proxy": "HRESULT WINAPI ISClusResDependencies_DeleteItem_Proxy(ISClusResDependencies *This,VARIANT varIndex);", "ISClusResDependencies_AddItem_Proxy": "HRESULT WINAPI ISClusResDependencies_AddItem_Proxy(ISClusResDependencies *This,ISClusResource *pResource);", "ISClusResDependencies_RemoveItem_Proxy": "HRESULT WINAPI ISClusResDependencies_RemoveItem_Proxy(ISClusResDependencies *This,VARIANT varIndex);", "ISClusResGroupResources_get_Count_Proxy": "HRESULT WINAPI ISClusResGroupResources_get_Count_Proxy(ISClusResGroupResources *This,__LONG32 *plCount);", "ISClusResGroupResources_get__NewEnum_Proxy": "HRESULT WINAPI ISClusResGroupResources_get__NewEnum_Proxy(ISClusResGroupResources *This,IUnknown **retval);", "ISClusResGroupResources_Refresh_Proxy": "HRESULT WINAPI ISClusResGroupResources_Refresh_Proxy(ISClusResGroupResources *This);", "ISClusResGroupResources_get_Item_Proxy": "HRESULT WINAPI ISClusResGroupResources_get_Item_Proxy(ISClusResGroupResources *This,VARIANT varIndex,ISClusResource **ppClusResource);", "ISClusResGroupResources_CreateItem_Proxy": "HRESULT WINAPI ISClusResGroupResources_CreateItem_Proxy(ISClusResGroupResources *This,BSTR bstrResourceName,BSTR bstrResourceType,CLUSTER_RESOURCE_CREATE_FLAGS dwFlags,ISClusResource **ppClusterResource);", "ISClusResGroupResources_DeleteItem_Proxy": "HRESULT WINAPI ISClusResGroupResources_DeleteItem_Proxy(ISClusResGroupResources *This,VARIANT varIndex);", "ISClusResTypeResources_get_Count_Proxy": "HRESULT WINAPI ISClusResTypeResources_get_Count_Proxy(ISClusResTypeResources *This,__LONG32 *plCount);", "ISClusResTypeResources_get__NewEnum_Proxy": "HRESULT WINAPI ISClusResTypeResources_get__NewEnum_Proxy(ISClusResTypeResources *This,IUnknown **retval);", "ISClusResTypeResources_Refresh_Proxy": "HRESULT WINAPI ISClusResTypeResources_Refresh_Proxy(ISClusResTypeResources *This);", "ISClusResTypeResources_get_Item_Proxy": "HRESULT WINAPI ISClusResTypeResources_get_Item_Proxy(ISClusResTypeResources *This,VARIANT varIndex,ISClusResource **ppClusResource);", "ISClusResTypeResources_CreateItem_Proxy": "HRESULT WINAPI ISClusResTypeResources_CreateItem_Proxy(ISClusResTypeResources *This,BSTR bstrResourceName,BSTR bstrGroupName,CLUSTER_RESOURCE_CREATE_FLAGS dwFlags,ISClusResource **ppClusterResource);", "ISClusResTypeResources_DeleteItem_Proxy": "HRESULT WINAPI ISClusResTypeResources_DeleteItem_Proxy(ISClusResTypeResources *This,VARIANT varIndex);", "ISClusResources_get_Count_Proxy": "HRESULT WINAPI ISClusResources_get_Count_Proxy(ISClusResources *This,__LONG32 *plCount);", "ISClusResources_get__NewEnum_Proxy": "HRESULT WINAPI ISClusResources_get__NewEnum_Proxy(ISClusResources *This,IUnknown **retval);", "ISClusResources_Refresh_Proxy": "HRESULT WINAPI ISClusResources_Refresh_Proxy(ISClusResources *This);", "ISClusResources_get_Item_Proxy": "HRESULT WINAPI ISClusResources_get_Item_Proxy(ISClusResources *This,VARIANT varIndex,ISClusResource **ppClusResource);", "ISClusResources_CreateItem_Proxy": "HRESULT WINAPI ISClusResources_CreateItem_Proxy(ISClusResources *This,BSTR bstrResourceName,BSTR bstrResourceType,BSTR bstrGroupName,CLUSTER_RESOURCE_CREATE_FLAGS dwFlags,ISClusResource **ppClusterResource);", "ISClusResources_DeleteItem_Proxy": "HRESULT WINAPI ISClusResources_DeleteItem_Proxy(ISClusResources *This,VARIANT varIndex);", "ISClusResGroupPreferredOwnerNodes_get_Count_Proxy": "HRESULT WINAPI ISClusResGroupPreferredOwnerNodes_get_Count_Proxy(ISClusResGroupPreferredOwnerNodes *This,__LONG32 *plCount);", "ISClusResGroupPreferredOwnerNodes_get__NewEnum_Proxy": "HRESULT WINAPI ISClusResGroupPreferredOwnerNodes_get__NewEnum_Proxy(ISClusResGroupPreferredOwnerNodes *This,IUnknown **retval);", "ISClusResGroupPreferredOwnerNodes_Refresh_Proxy": "HRESULT WINAPI ISClusResGroupPreferredOwnerNodes_Refresh_Proxy(ISClusResGroupPreferredOwnerNodes *This);", "ISClusResGroupPreferredOwnerNodes_get_Item_Proxy": "HRESULT WINAPI ISClusResGroupPreferredOwnerNodes_get_Item_Proxy(ISClusResGroupPreferredOwnerNodes *This,VARIANT varIndex,ISClusNode **ppNode);", "ISClusResGroupPreferredOwnerNodes_InsertItem_Proxy": "HRESULT WINAPI ISClusResGroupPreferredOwnerNodes_InsertItem_Proxy(ISClusResGroupPreferredOwnerNodes *This,ISClusNode *pNode,__LONG32 nPosition);", "ISClusResGroupPreferredOwnerNodes_RemoveItem_Proxy": "HRESULT WINAPI ISClusResGroupPreferredOwnerNodes_RemoveItem_Proxy(ISClusResGroupPreferredOwnerNodes *This,VARIANT varIndex);", "ISClusResGroupPreferredOwnerNodes_get_Modified_Proxy": "HRESULT WINAPI ISClusResGroupPreferredOwnerNodes_get_Modified_Proxy(ISClusResGroupPreferredOwnerNodes *This,VARIANT *pvarModified);", "ISClusResGroupPreferredOwnerNodes_SaveChanges_Proxy": "HRESULT WINAPI ISClusResGroupPreferredOwnerNodes_SaveChanges_Proxy(ISClusResGroupPreferredOwnerNodes *This);", "ISClusResGroupPreferredOwnerNodes_AddItem_Proxy": "HRESULT WINAPI ISClusResGroupPreferredOwnerNodes_AddItem_Proxy(ISClusResGroupPreferredOwnerNodes *This,ISClusNode *pNode);", "ISClusResPossibleOwnerNodes_get_Count_Proxy": "HRESULT WINAPI ISClusResPossibleOwnerNodes_get_Count_Proxy(ISClusResPossibleOwnerNodes *This,__LONG32 *plCount);", "ISClusResPossibleOwnerNodes_get__NewEnum_Proxy": "HRESULT WINAPI ISClusResPossibleOwnerNodes_get__NewEnum_Proxy(ISClusResPossibleOwnerNodes *This,IUnknown **retval);", "ISClusResPossibleOwnerNodes_Refresh_Proxy": "HRESULT WINAPI ISClusResPossibleOwnerNodes_Refresh_Proxy(ISClusResPossibleOwnerNodes *This);", "ISClusResPossibleOwnerNodes_get_Item_Proxy": "HRESULT WINAPI ISClusResPossibleOwnerNodes_get_Item_Proxy(ISClusResPossibleOwnerNodes *This,VARIANT varIndex,ISClusNode **ppNode);", "ISClusResPossibleOwnerNodes_AddItem_Proxy": "HRESULT WINAPI ISClusResPossibleOwnerNodes_AddItem_Proxy(ISClusResPossibleOwnerNodes *This,ISClusNode *pNode);", "ISClusResPossibleOwnerNodes_RemoveItem_Proxy": "HRESULT WINAPI ISClusResPossibleOwnerNodes_RemoveItem_Proxy(ISClusResPossibleOwnerNodes *This,VARIANT varIndex);", "ISClusResPossibleOwnerNodes_get_Modified_Proxy": "HRESULT WINAPI ISClusResPossibleOwnerNodes_get_Modified_Proxy(ISClusResPossibleOwnerNodes *This,VARIANT *pvarModified);", "ISClusResTypePossibleOwnerNodes_get_Count_Proxy": "HRESULT WINAPI ISClusResTypePossibleOwnerNodes_get_Count_Proxy(ISClusResTypePossibleOwnerNodes *This,__LONG32 *plCount);", "ISClusResTypePossibleOwnerNodes_get__NewEnum_Proxy": "HRESULT WINAPI ISClusResTypePossibleOwnerNodes_get__NewEnum_Proxy(ISClusResTypePossibleOwnerNodes *This,IUnknown **retval);", "ISClusResTypePossibleOwnerNodes_Refresh_Proxy": "HRESULT WINAPI ISClusResTypePossibleOwnerNodes_Refresh_Proxy(ISClusResTypePossibleOwnerNodes *This);", "ISClusResTypePossibleOwnerNodes_get_Item_Proxy": "HRESULT WINAPI ISClusResTypePossibleOwnerNodes_get_Item_Proxy(ISClusResTypePossibleOwnerNodes *This,VARIANT varIndex,ISClusNode **ppNode);", "ISClusResType_get_CommonProperties_Proxy": "HRESULT WINAPI ISClusResType_get_CommonProperties_Proxy(ISClusResType *This,ISClusProperties **ppProperties);", "ISClusResType_get_PrivateProperties_Proxy": "HRESULT WINAPI ISClusResType_get_PrivateProperties_Proxy(ISClusResType *This,ISClusProperties **ppProperties);", "ISClusResType_get_CommonROProperties_Proxy": "HRESULT WINAPI ISClusResType_get_CommonROProperties_Proxy(ISClusResType *This,ISClusProperties **ppProperties);", "ISClusResType_get_PrivateROProperties_Proxy": "HRESULT WINAPI ISClusResType_get_PrivateROProperties_Proxy(ISClusResType *This,ISClusProperties **ppProperties);", "ISClusResType_get_Name_Proxy": "HRESULT WINAPI ISClusResType_get_Name_Proxy(ISClusResType *This,BSTR *pbstrName);", "ISClusResType_Delete_Proxy": "HRESULT WINAPI ISClusResType_Delete_Proxy(ISClusResType *This);", "ISClusResType_get_Cluster_Proxy": "HRESULT WINAPI ISClusResType_get_Cluster_Proxy(ISClusResType *This,ISCluster **ppCluster);", "ISClusResType_get_Resources_Proxy": "HRESULT WINAPI ISClusResType_get_Resources_Proxy(ISClusResType *This,ISClusResTypeResources **ppClusterResTypeResources);", "ISClusResType_get_PossibleOwnerNodes_Proxy": "HRESULT WINAPI ISClusResType_get_PossibleOwnerNodes_Proxy(ISClusResType *This,ISClusResTypePossibleOwnerNodes **ppOwnerNodes);", "ISClusResType_get_AvailableDisks_Proxy": "HRESULT WINAPI ISClusResType_get_AvailableDisks_Proxy(ISClusResType *This,ISClusDisks **ppAvailableDisks);", "ISClusResTypes_get_Count_Proxy": "HRESULT WINAPI ISClusResTypes_get_Count_Proxy(ISClusResTypes *This,__LONG32 *plCount);", "ISClusResTypes_get__NewEnum_Proxy": "HRESULT WINAPI ISClusResTypes_get__NewEnum_Proxy(ISClusResTypes *This,IUnknown **retval);", "ISClusResTypes_Refresh_Proxy": "HRESULT WINAPI ISClusResTypes_Refresh_Proxy(ISClusResTypes *This);", "ISClusResTypes_get_Item_Proxy": "HRESULT WINAPI ISClusResTypes_get_Item_Proxy(ISClusResTypes *This,VARIANT varIndex,ISClusResType **ppClusResType);", "ISClusResTypes_CreateItem_Proxy": "HRESULT WINAPI ISClusResTypes_CreateItem_Proxy(ISClusResTypes *This,BSTR bstrResourceTypeName,BSTR bstrDisplayName,BSTR bstrResourceTypeDll,__LONG32 dwLooksAlivePollInterval,__LONG32 dwIsAlivePollInterval,ISClusResType **ppResourceType);", "ISClusResTypes_DeleteItem_Proxy": "HRESULT WINAPI ISClusResTypes_DeleteItem_Proxy(ISClusResTypes *This,VARIANT varIndex);", "ISClusProperty_get_Name_Proxy": "HRESULT WINAPI ISClusProperty_get_Name_Proxy(ISClusProperty *This,BSTR *pbstrName);", "ISClusProperty_get_Length_Proxy": "HRESULT WINAPI ISClusProperty_get_Length_Proxy(ISClusProperty *This,__LONG32 *pLength);", "ISClusProperty_get_ValueCount_Proxy": "HRESULT WINAPI ISClusProperty_get_ValueCount_Proxy(ISClusProperty *This,__LONG32 *pCount);", "ISClusProperty_get_Values_Proxy": "HRESULT WINAPI ISClusProperty_get_Values_Proxy(ISClusProperty *This,ISClusPropertyValues **ppClusterPropertyValues);", "ISClusProperty_get_Value_Proxy": "HRESULT WINAPI ISClusProperty_get_Value_Proxy(ISClusProperty *This,VARIANT *pvarValue);", "ISClusProperty_put_Value_Proxy": "HRESULT WINAPI ISClusProperty_put_Value_Proxy(ISClusProperty *This,VARIANT varValue);", "ISClusProperty_get_Type_Proxy": "HRESULT WINAPI ISClusProperty_get_Type_Proxy(ISClusProperty *This,CLUSTER_PROPERTY_TYPE *pType);", "ISClusProperty_put_Type_Proxy": "HRESULT WINAPI ISClusProperty_put_Type_Proxy(ISClusProperty *This,CLUSTER_PROPERTY_TYPE Type);", "ISClusProperty_get_Format_Proxy": "HRESULT WINAPI ISClusProperty_get_Format_Proxy(ISClusProperty *This,CLUSTER_PROPERTY_FORMAT *pFormat);", "ISClusProperty_put_Format_Proxy": "HRESULT WINAPI ISClusProperty_put_Format_Proxy(ISClusProperty *This,CLUSTER_PROPERTY_FORMAT Format);", "ISClusProperty_get_ReadOnly_Proxy": "HRESULT WINAPI ISClusProperty_get_ReadOnly_Proxy(ISClusProperty *This,VARIANT *pvarReadOnly);", "ISClusProperty_get_Private_Proxy": "HRESULT WINAPI ISClusProperty_get_Private_Proxy(ISClusProperty *This,VARIANT *pvarPrivate);", "ISClusProperty_get_Common_Proxy": "HRESULT WINAPI ISClusProperty_get_Common_Proxy(ISClusProperty *This,VARIANT *pvarCommon);", "ISClusProperty_get_Modified_Proxy": "HRESULT WINAPI ISClusProperty_get_Modified_Proxy(ISClusProperty *This,VARIANT *pvarModified);", "ISClusProperty_UseDefaultValue_Proxy": "HRESULT WINAPI ISClusProperty_UseDefaultValue_Proxy(ISClusProperty *This);", "ISClusPropertyValue_get_Value_Proxy": "HRESULT WINAPI ISClusPropertyValue_get_Value_Proxy(ISClusPropertyValue *This,VARIANT *pvarValue);", "ISClusPropertyValue_put_Value_Proxy": "HRESULT WINAPI ISClusPropertyValue_put_Value_Proxy(ISClusPropertyValue *This,VARIANT varValue);", "ISClusPropertyValue_get_Type_Proxy": "HRESULT WINAPI ISClusPropertyValue_get_Type_Proxy(ISClusPropertyValue *This,CLUSTER_PROPERTY_TYPE *pType);", "ISClusPropertyValue_put_Type_Proxy": "HRESULT WINAPI ISClusPropertyValue_put_Type_Proxy(ISClusPropertyValue *This,CLUSTER_PROPERTY_TYPE Type);", "ISClusPropertyValue_get_Format_Proxy": "HRESULT WINAPI ISClusPropertyValue_get_Format_Proxy(ISClusPropertyValue *This,CLUSTER_PROPERTY_FORMAT *pFormat);", "ISClusPropertyValue_put_Format_Proxy": "HRESULT WINAPI ISClusPropertyValue_put_Format_Proxy(ISClusPropertyValue *This,CLUSTER_PROPERTY_FORMAT Format);", "ISClusPropertyValue_get_Length_Proxy": "HRESULT WINAPI ISClusPropertyValue_get_Length_Proxy(ISClusPropertyValue *This,__LONG32 *pLength);", "ISClusPropertyValue_get_DataCount_Proxy": "HRESULT WINAPI ISClusPropertyValue_get_DataCount_Proxy(ISClusPropertyValue *This,__LONG32 *pCount);", "ISClusPropertyValue_get_Data_Proxy": "HRESULT WINAPI ISClusPropertyValue_get_Data_Proxy(ISClusPropertyValue *This,ISClusPropertyValueData **ppClusterPropertyValueData);", "ISClusPropertyValues_get_Count_Proxy": "HRESULT WINAPI ISClusPropertyValues_get_Count_Proxy(ISClusPropertyValues *This,__LONG32 *plCount);", "ISClusPropertyValues_get__NewEnum_Proxy": "HRESULT WINAPI ISClusPropertyValues_get__NewEnum_Proxy(ISClusPropertyValues *This,IUnknown **retval);", "ISClusPropertyValues_get_Item_Proxy": "HRESULT WINAPI ISClusPropertyValues_get_Item_Proxy(ISClusPropertyValues *This,VARIANT varIndex,ISClusPropertyValue **ppPropertyValue);", "ISClusPropertyValues_CreateItem_Proxy": "HRESULT WINAPI ISClusPropertyValues_CreateItem_Proxy(ISClusPropertyValues *This,BSTR bstrName,VARIANT varValue,ISClusPropertyValue **ppPropertyValue);", "ISClusPropertyValues_RemoveItem_Proxy": "HRESULT WINAPI ISClusPropertyValues_RemoveItem_Proxy(ISClusPropertyValues *This,VARIANT varIndex);", "ISClusProperties_get_Count_Proxy": "HRESULT WINAPI ISClusProperties_get_Count_Proxy(ISClusProperties *This,__LONG32 *plCount);", "ISClusProperties_get__NewEnum_Proxy": "HRESULT WINAPI ISClusProperties_get__NewEnum_Proxy(ISClusProperties *This,IUnknown **retval);", "ISClusProperties_Refresh_Proxy": "HRESULT WINAPI ISClusProperties_Refresh_Proxy(ISClusProperties *This);", "ISClusProperties_get_Item_Proxy": "HRESULT WINAPI ISClusProperties_get_Item_Proxy(ISClusProperties *This,VARIANT varIndex,ISClusProperty **ppClusProperty);", "ISClusProperties_CreateItem_Proxy": "HRESULT WINAPI ISClusProperties_CreateItem_Proxy(ISClusProperties *This,BSTR bstrName,VARIANT varValue,ISClusProperty **pProperty);", "ISClusProperties_UseDefaultValue_Proxy": "HRESULT WINAPI ISClusProperties_UseDefaultValue_Proxy(ISClusProperties *This,VARIANT varIndex);", "ISClusProperties_SaveChanges_Proxy": "HRESULT WINAPI ISClusProperties_SaveChanges_Proxy(ISClusProperties *This,VARIANT *pvarStatusCode);", "ISClusProperties_get_ReadOnly_Proxy": "HRESULT WINAPI ISClusProperties_get_ReadOnly_Proxy(ISClusProperties *This,VARIANT *pvarReadOnly);", "ISClusProperties_get_Private_Proxy": "HRESULT WINAPI ISClusProperties_get_Private_Proxy(ISClusProperties *This,VARIANT *pvarPrivate);", "ISClusProperties_get_Common_Proxy": "HRESULT WINAPI ISClusProperties_get_Common_Proxy(ISClusProperties *This,VARIANT *pvarCommon);", "ISClusProperties_get_Modified_Proxy": "HRESULT WINAPI ISClusProperties_get_Modified_Proxy(ISClusProperties *This,VARIANT *pvarModified);", "ISClusPropertyValueData_get_Count_Proxy": "HRESULT WINAPI ISClusPropertyValueData_get_Count_Proxy(ISClusPropertyValueData *This,__LONG32 *plCount);", "ISClusPropertyValueData_get__NewEnum_Proxy": "HRESULT WINAPI ISClusPropertyValueData_get__NewEnum_Proxy(ISClusPropertyValueData *This,IUnknown **retval);", "ISClusPropertyValueData_get_Item_Proxy": "HRESULT WINAPI ISClusPropertyValueData_get_Item_Proxy(ISClusPropertyValueData *This,VARIANT varIndex,VARIANT *pvarValue);", "ISClusPropertyValueData_CreateItem_Proxy": "HRESULT WINAPI ISClusPropertyValueData_CreateItem_Proxy(ISClusPropertyValueData *This,VARIANT varValue,VARIANT *pvarData);", "ISClusPropertyValueData_RemoveItem_Proxy": "HRESULT WINAPI ISClusPropertyValueData_RemoveItem_Proxy(ISClusPropertyValueData *This,VARIANT varIndex);", "ISClusPartition_get_Flags_Proxy": "HRESULT WINAPI ISClusPartition_get_Flags_Proxy(ISClusPartition *This,__LONG32 *plFlags);", "ISClusPartition_get_DeviceName_Proxy": "HRESULT WINAPI ISClusPartition_get_DeviceName_Proxy(ISClusPartition *This,BSTR *pbstrDeviceName);", "ISClusPartition_get_VolumeLabel_Proxy": "HRESULT WINAPI ISClusPartition_get_VolumeLabel_Proxy(ISClusPartition *This,BSTR *pbstrVolumeLabel);", "ISClusPartition_get_SerialNumber_Proxy": "HRESULT WINAPI ISClusPartition_get_SerialNumber_Proxy(ISClusPartition *This,__LONG32 *plSerialNumber);", "ISClusPartition_get_MaximumComponentLength_Proxy": "HRESULT WINAPI ISClusPartition_get_MaximumComponentLength_Proxy(ISClusPartition *This,__LONG32 *plMaximumComponentLength);", "ISClusPartition_get_FileSystemFlags_Proxy": "HRESULT WINAPI ISClusPartition_get_FileSystemFlags_Proxy(ISClusPartition *This,__LONG32 *plFileSystemFlags);", "ISClusPartition_get_FileSystem_Proxy": "HRESULT WINAPI ISClusPartition_get_FileSystem_Proxy(ISClusPartition *This,BSTR *pbstrFileSystem);", "ISClusPartitions_get_Count_Proxy": "HRESULT WINAPI ISClusPartitions_get_Count_Proxy(ISClusPartitions *This,__LONG32 *plCount);", "ISClusPartitions_get__NewEnum_Proxy": "HRESULT WINAPI ISClusPartitions_get__NewEnum_Proxy(ISClusPartitions *This,IUnknown **retval);", "ISClusPartitions_get_Item_Proxy": "HRESULT WINAPI ISClusPartitions_get_Item_Proxy(ISClusPartitions *This,VARIANT varIndex,ISClusPartition **ppPartition);", "ISClusDisk_get_Signature_Proxy": "HRESULT WINAPI ISClusDisk_get_Signature_Proxy(ISClusDisk *This,__LONG32 *plSignature);", "ISClusDisk_get_ScsiAddress_Proxy": "HRESULT WINAPI ISClusDisk_get_ScsiAddress_Proxy(ISClusDisk *This,ISClusScsiAddress **ppScsiAddress);", "ISClusDisk_get_DiskNumber_Proxy": "HRESULT WINAPI ISClusDisk_get_DiskNumber_Proxy(ISClusDisk *This,__LONG32 *plDiskNumber);", "ISClusDisk_get_Partitions_Proxy": "HRESULT WINAPI ISClusDisk_get_Partitions_Proxy(ISClusDisk *This,ISClusPartitions **ppPartitions);", "ISClusDisks_get_Count_Proxy": "HRESULT WINAPI ISClusDisks_get_Count_Proxy(ISClusDisks *This,__LONG32 *plCount);", "ISClusDisks_get__NewEnum_Proxy": "HRESULT WINAPI ISClusDisks_get__NewEnum_Proxy(ISClusDisks *This,IUnknown **retval);", "ISClusDisks_get_Item_Proxy": "HRESULT WINAPI ISClusDisks_get_Item_Proxy(ISClusDisks *This,VARIANT varIndex,ISClusDisk **ppDisk);", "ISClusScsiAddress_get_PortNumber_Proxy": "HRESULT WINAPI ISClusScsiAddress_get_PortNumber_Proxy(ISClusScsiAddress *This,VARIANT *pvarPortNumber);", "ISClusScsiAddress_get_PathId_Proxy": "HRESULT WINAPI ISClusScsiAddress_get_PathId_Proxy(ISClusScsiAddress *This,VARIANT *pvarPathId);", "ISClusScsiAddress_get_TargetId_Proxy": "HRESULT WINAPI ISClusScsiAddress_get_TargetId_Proxy(ISClusScsiAddress *This,VARIANT *pvarTargetId);", "ISClusScsiAddress_get_Lun_Proxy": "HRESULT WINAPI ISClusScsiAddress_get_Lun_Proxy(ISClusScsiAddress *This,VARIANT *pvarLun);", "ISClusRegistryKeys_get_Count_Proxy": "HRESULT WINAPI ISClusRegistryKeys_get_Count_Proxy(ISClusRegistryKeys *This,__LONG32 *plCount);", "ISClusRegistryKeys_get__NewEnum_Proxy": "HRESULT WINAPI ISClusRegistryKeys_get__NewEnum_Proxy(ISClusRegistryKeys *This,IUnknown **retval);", "ISClusRegistryKeys_Refresh_Proxy": "HRESULT WINAPI ISClusRegistryKeys_Refresh_Proxy(ISClusRegistryKeys *This);", "ISClusRegistryKeys_get_Item_Proxy": "HRESULT WINAPI ISClusRegistryKeys_get_Item_Proxy(ISClusRegistryKeys *This,VARIANT varIndex,BSTR *pbstrRegistryKey);", "ISClusRegistryKeys_AddItem_Proxy": "HRESULT WINAPI ISClusRegistryKeys_AddItem_Proxy(ISClusRegistryKeys *This,BSTR bstrRegistryKey);", "ISClusRegistryKeys_RemoveItem_Proxy": "HRESULT WINAPI ISClusRegistryKeys_RemoveItem_Proxy(ISClusRegistryKeys *This,VARIANT varIndex);", "ISClusCryptoKeys_get_Count_Proxy": "HRESULT WINAPI ISClusCryptoKeys_get_Count_Proxy(ISClusCryptoKeys *This,__LONG32 *plCount);", "ISClusCryptoKeys_get__NewEnum_Proxy": "HRESULT WINAPI ISClusCryptoKeys_get__NewEnum_Proxy(ISClusCryptoKeys *This,IUnknown **retval);", "ISClusCryptoKeys_Refresh_Proxy": "HRESULT WINAPI ISClusCryptoKeys_Refresh_Proxy(ISClusCryptoKeys *This);", "ISClusCryptoKeys_get_Item_Proxy": "HRESULT WINAPI ISClusCryptoKeys_get_Item_Proxy(ISClusCryptoKeys *This,VARIANT varIndex,BSTR *pbstrCyrptoKey);", "ISClusCryptoKeys_AddItem_Proxy": "HRESULT WINAPI ISClusCryptoKeys_AddItem_Proxy(ISClusCryptoKeys *This,BSTR bstrCryptoKey);", "ISClusCryptoKeys_RemoveItem_Proxy": "HRESULT WINAPI ISClusCryptoKeys_RemoveItem_Proxy(ISClusCryptoKeys *This,VARIANT varIndex);", "ISClusResDependents_get_Count_Proxy": "HRESULT WINAPI ISClusResDependents_get_Count_Proxy(ISClusResDependents *This,__LONG32 *plCount);", "ISClusResDependents_get__NewEnum_Proxy": "HRESULT WINAPI ISClusResDependents_get__NewEnum_Proxy(ISClusResDependents *This,IUnknown **retval);", "ISClusResDependents_Refresh_Proxy": "HRESULT WINAPI ISClusResDependents_Refresh_Proxy(ISClusResDependents *This);", "ISClusResDependents_get_Item_Proxy": "HRESULT WINAPI ISClusResDependents_get_Item_Proxy(ISClusResDependents *This,VARIANT varIndex,ISClusResource **ppClusResource);", "ISClusResDependents_CreateItem_Proxy": "HRESULT WINAPI ISClusResDependents_CreateItem_Proxy(ISClusResDependents *This,BSTR bstrResourceName,BSTR bstrResourceType,CLUSTER_RESOURCE_CREATE_FLAGS dwFlags,ISClusResource **ppClusterResource);", "ISClusResDependents_DeleteItem_Proxy": "HRESULT WINAPI ISClusResDependents_DeleteItem_Proxy(ISClusResDependents *This,VARIANT varIndex);", "ISClusResDependents_AddItem_Proxy": "HRESULT WINAPI ISClusResDependents_AddItem_Proxy(ISClusResDependents *This,ISClusResource *pResource);", "ISClusResDependents_RemoveItem_Proxy": "HRESULT WINAPI ISClusResDependents_RemoveItem_Proxy(ISClusResDependents *This,VARIANT varIndex);", "BCryptOpenAlgorithmProvider": "NTSTATUS WINAPI BCryptOpenAlgorithmProvider (BCRYPT_ALG_HANDLE *phAlgorithm, LPCWSTR pszAlgId, LPCWSTR pszImplementation, ULONG dwFlags);", "BCryptEnumAlgorithms": "NTSTATUS WINAPI BCryptEnumAlgorithms (ULONG dwAlgOperations, ULONG *pAlgCount, BCRYPT_ALGORITHM_IDENTIFIER **ppAlgList, ULONG dwFlags);", "BCryptEnumProviders": "NTSTATUS WINAPI BCryptEnumProviders (LPCWSTR pszAlgId, ULONG *pImplCount, BCRYPT_PROVIDER_NAME **ppImplList, ULONG dwFlags);", "BCryptGetProperty": "NTSTATUS WINAPI BCryptGetProperty (BCRYPT_HANDLE hObject, LPCWSTR pszProperty, PUCHAR pbOutput, ULONG cbOutput, ULONG *pcbResult, ULONG dwFlags);", "BCryptSetProperty": "NTSTATUS WINAPI BCryptSetProperty (BCRYPT_HANDLE hObject, LPCWSTR pszProperty, PUCHAR pbInput, ULONG cbInput, ULONG dwFlags);", "BCryptCloseAlgorithmProvider": "NTSTATUS WINAPI BCryptCloseAlgorithmProvider (BCRYPT_ALG_HANDLE hAlgorithm, ULONG dwFlags);", "BCryptFreeBuffer": "VOID WINAPI BCryptFreeBuffer (PVOID pvBuffer);", "BCryptGenerateSymmetricKey": "NTSTATUS WINAPI BCryptGenerateSymmetricKey (BCRYPT_ALG_HANDLE hAlgorithm, BCRYPT_KEY_HANDLE *phKey, PUCHAR pbKeyObject, ULONG cbKeyObject, PUCHAR pbSecret, ULONG cbSecret, ULONG dwFlags);", "BCryptGenerateKeyPair": "NTSTATUS WINAPI BCryptGenerateKeyPair (BCRYPT_ALG_HANDLE hAlgorithm, BCRYPT_KEY_HANDLE *phKey, ULONG dwLength, ULONG dwFlags);", "BCryptEncrypt": "NTSTATUS WINAPI BCryptEncrypt (BCRYPT_KEY_HANDLE hKey, PUCHAR pbInput, ULONG cbInput, VOID *pPaddingInfo, PUCHAR pbIV, ULONG cbIV, PUCHAR pbOutput, ULONG cbOutput, ULONG *pcbResult, ULONG dwFlags);", "BCryptDecrypt": "NTSTATUS WINAPI BCryptDecrypt (BCRYPT_KEY_HANDLE hKey, PUCHAR pbInput, ULONG cbInput, VOID *pPaddingInfo, PUCHAR pbIV, ULONG cbIV, PUCHAR pbOutput, ULONG cbOutput, ULONG *pcbResult, ULONG dwFlags);", "BCryptExportKey": "NTSTATUS WINAPI BCryptExportKey (BCRYPT_KEY_HANDLE hKey, BCRYPT_KEY_HANDLE hExportKey, LPCWSTR pszBlobType, PUCHAR pbOutput, ULONG cbOutput, ULONG *pcbResult, ULONG dwFlags);", "BCryptImportKey": "NTSTATUS WINAPI BCryptImportKey (BCRYPT_ALG_HANDLE hAlgorithm, BCRYPT_KEY_HANDLE hImportKey, LPCWSTR pszBlobType, BCRYPT_KEY_HANDLE *phKey, PUCHAR pbKeyObject, ULONG cbKeyObject, PUCHAR pbInput, ULONG cbInput, ULONG dwFlags);", "BCryptImportKeyPair": "NTSTATUS WINAPI BCryptImportKeyPair (BCRYPT_ALG_HANDLE hAlgorithm, BCRYPT_KEY_HANDLE hImportKey, LPCWSTR pszBlobType, BCRYPT_KEY_HANDLE *phKey, PUCHAR pbInput, ULONG cbInput, ULONG dwFlags);", "BCryptDuplicateKey": "NTSTATUS WINAPI BCryptDuplicateKey (BCRYPT_KEY_HANDLE hKey, BCRYPT_KEY_HANDLE *phNewKey, PUCHAR pbKeyObject, ULONG cbKeyObject, ULONG dwFlags);", "BCryptFinalizeKeyPair": "NTSTATUS WINAPI BCryptFinalizeKeyPair (BCRYPT_KEY_HANDLE hKey, ULONG dwFlags);", "BCryptDestroyKey": "NTSTATUS WINAPI BCryptDestroyKey (BCRYPT_KEY_HANDLE hKey);", "BCryptDestroySecret": "NTSTATUS WINAPI BCryptDestroySecret (BCRYPT_SECRET_HANDLE hSecret);", "BCryptSignHash": "NTSTATUS WINAPI BCryptSignHash (BCRYPT_KEY_HANDLE hKey, VOID *pPaddingInfo, PUCHAR pbInput, ULONG cbInput, PUCHAR pbOutput, ULONG cbOutput, ULONG *pcbResult, ULONG dwFlags);", "BCryptVerifySignature": "NTSTATUS WINAPI BCryptVerifySignature (BCRYPT_KEY_HANDLE hKey, VOID *pPaddingInfo, PUCHAR pbHash, ULONG cbHash, PUCHAR pbSignature, ULONG cbSignature, ULONG dwFlags);", "BCryptSecretAgreement": "NTSTATUS WINAPI BCryptSecretAgreement (BCRYPT_KEY_HANDLE hPrivKey, BCRYPT_KEY_HANDLE hPubKey, BCRYPT_SECRET_HANDLE *phAgreedSecret, ULONG dwFlags);", "BCryptDeriveKey": "NTSTATUS WINAPI BCryptDeriveKey (BCRYPT_SECRET_HANDLE hSharedSecret, LPCWSTR pwszKDF, BCryptBufferDesc *pParameterList, PUCHAR pbDerivedKey, ULONG cbDerivedKey, ULONG *pcbResult, ULONG dwFlags);", "BCryptKeyDerivation": "NTSTATUS WINAPI BCryptKeyDerivation (BCRYPT_KEY_HANDLE hKey, BCryptBufferDesc *pParameterList, PUCHAR pbDerivedKey, ULONG cbDerivedKey, ULONG *pcbResult, ULONG dwFlags);", "BCryptCreateHash": "NTSTATUS WINAPI BCryptCreateHash (BCRYPT_ALG_HANDLE hAlgorithm, BCRYPT_HASH_HANDLE *phHash, PUCHAR pbHashObject, ULONG cbHashObject, PUCHAR pbSecret, ULONG cbSecret, ULONG dwFlags);", "BCryptHashData": "NTSTATUS WINAPI BCryptHashData (BCRYPT_HASH_HANDLE hHash, PUCHAR pbInput, ULONG cbInput, ULONG dwFlags);", "BCryptFinishHash": "NTSTATUS WINAPI BCryptFinishHash (BCRYPT_HASH_HANDLE hHash, PUCHAR pbOutput, ULONG cbOutput, ULONG dwFlags);", "BCryptCreateMultiHash": "NTSTATUS WINAPI BCryptCreateMultiHash (BCRYPT_ALG_HANDLE hAlgorithm, BCRYPT_HASH_HANDLE *phHash, ULONG nHashes, PUCHAR pbHashObject, ULONG cbHashObject, PUCHAR pbSecret, ULONG cbSecret, ULONG dwFlags);", "BCryptProcessMultiOperations": "NTSTATUS WINAPI BCryptProcessMultiOperations (BCRYPT_HANDLE hObject, BCRYPT_MULTI_OPERATION_TYPE operationType, PVOID pOperations, ULONG cbOperations, ULONG dwFlags);", "BCryptDuplicateHash": "NTSTATUS WINAPI BCryptDuplicateHash (BCRYPT_HASH_HANDLE hHash, BCRYPT_HASH_HANDLE *phNewHash, PUCHAR pbHashObject, ULONG cbHashObject, ULONG dwFlags);", "BCryptDestroyHash": "NTSTATUS WINAPI BCryptDestroyHash (BCRYPT_HASH_HANDLE hHash);", "BCryptHash": "NTSTATUS WINAPI BCryptHash (BCRYPT_ALG_HANDLE hAlgorithm, PUCHAR pbSecret, ULONG cbSecret, PUCHAR pbInput, ULONG cbInput, PUCHAR pbOutput, ULONG cbOutput);", "BCryptGenRandom": "NTSTATUS WINAPI BCryptGenRandom (BCRYPT_ALG_HANDLE hAlgorithm, PUCHAR pbBuffer, ULONG cbBuffer, ULONG dwFlags);", "BCryptDeriveKeyCapi": "NTSTATUS WINAPI BCryptDeriveKeyCapi (BCRYPT_HASH_HANDLE hHash, BCRYPT_ALG_HANDLE hTargetAlg, PUCHAR pbDerivedKey, ULONG cbDerivedKey, ULONG dwFlags);", "BCryptDeriveKeyPBKDF2": "NTSTATUS WINAPI BCryptDeriveKeyPBKDF2 (BCRYPT_ALG_HANDLE hPrf, PUCHAR pbPassword, ULONG cbPassword, PUCHAR pbSalt, ULONG cbSalt, ULONGLONG cIterations, PUCHAR pbDerivedKey, ULONG cbDerivedKey, ULONG dwFlags);", "BCryptResolveProviders": "NTSTATUS WINAPI BCryptResolveProviders (LPCWSTR pszContext, ULONG dwInterface, LPCWSTR pszFunction, LPCWSTR pszProvider, ULONG dwMode, ULONG dwFlags, ULONG *pcbBuffer, PCRYPT_PROVIDER_REFS *ppBuffer);", "BCryptGetFipsAlgorithmMode": "NTSTATUS WINAPI BCryptGetFipsAlgorithmMode (BOOLEAN *pfEnabled);", "BCryptQueryProviderRegistration": "NTSTATUS WINAPI BCryptQueryProviderRegistration (LPCWSTR pszProvider, ULONG dwMode, ULONG dwInterface, ULONG *pcbBuffer, PCRYPT_PROVIDER_REG *ppBuffer);", "BCryptEnumRegisteredProviders": "NTSTATUS WINAPI BCryptEnumRegisteredProviders (ULONG *pcbBuffer, PCRYPT_PROVIDERS *ppBuffer);", "BCryptCreateContext": "NTSTATUS WINAPI BCryptCreateContext (ULONG dwTable, LPCWSTR pszContext, PCRYPT_CONTEXT_CONFIG pConfig);", "BCryptDeleteContext": "NTSTATUS WINAPI BCryptDeleteContext (ULONG dwTable, LPCWSTR pszContext);", "BCryptEnumContexts": "NTSTATUS WINAPI BCryptEnumContexts (ULONG dwTable, ULONG *pcbBuffer, PCRYPT_CONTEXTS *ppBuffer);", "BCryptConfigureContext": "NTSTATUS WINAPI BCryptConfigureContext (ULONG dwTable, LPCWSTR pszContext, PCRYPT_CONTEXT_CONFIG pConfig);", "BCryptQueryContextConfiguration": "NTSTATUS WINAPI BCryptQueryContextConfiguration (ULONG dwTable, LPCWSTR pszContext, ULONG *pcbBuffer, PCRYPT_CONTEXT_CONFIG *ppBuffer);", "BCryptAddContextFunction": "NTSTATUS WINAPI BCryptAddContextFunction (ULONG dwTable, LPCWSTR pszContext, ULONG dwInterface, LPCWSTR pszFunction, ULONG dwPosition);", "BCryptRemoveContextFunction": "NTSTATUS WINAPI BCryptRemoveContextFunction (ULONG dwTable, LPCWSTR pszContext, ULONG dwInterface, LPCWSTR pszFunction);", "BCryptEnumContextFunctions": "NTSTATUS WINAPI BCryptEnumContextFunctions (ULONG dwTable, LPCWSTR pszContext, ULONG dwInterface, ULONG *pcbBuffer, PCRYPT_CONTEXT_FUNCTIONS *ppBuffer);", "BCryptConfigureContextFunction": "NTSTATUS WINAPI BCryptConfigureContextFunction (ULONG dwTable, LPCWSTR pszContext, ULONG dwInterface, LPCWSTR pszFunction, PCRYPT_CONTEXT_FUNCTION_CONFIG pConfig);", "BCryptQueryContextFunctionConfiguration": "NTSTATUS WINAPI BCryptQueryContextFunctionConfiguration (ULONG dwTable, LPCWSTR pszContext, ULONG dwInterface, LPCWSTR pszFunction, ULONG *pcbBuffer, PCRYPT_CONTEXT_FUNCTION_CONFIG *ppBuffer);", "BCryptEnumContextFunctionProviders": "NTSTATUS WINAPI BCryptEnumContextFunctionProviders (ULONG dwTable, LPCWSTR pszContext, ULONG dwInterface, LPCWSTR pszFunction, ULONG *pcbBuffer, PCRYPT_CONTEXT_FUNCTION_PROVIDERS *ppBuffer);", "BCryptSetContextFunctionProperty": "NTSTATUS WINAPI BCryptSetContextFunctionProperty (ULONG dwTable, LPCWSTR pszContext, ULONG dwInterface, LPCWSTR pszFunction, LPCWSTR pszProperty, ULONG cbValue, PUCHAR pbValue);", "BCryptQueryContextFunctionProperty": "NTSTATUS WINAPI BCryptQueryContextFunctionProperty (ULONG dwTable, LPCWSTR pszContext, ULONG dwInterface, LPCWSTR pszFunction, LPCWSTR pszProperty, ULONG *pcbValue, PUCHAR *ppbValue);", "BCryptRegisterConfigChangeNotify": "NTSTATUS WINAPI BCryptRegisterConfigChangeNotify (PRKEVENT pEvent);", "BCryptUnregisterConfigChangeNotify": "NTSTATUS WINAPI BCryptUnregisterConfigChangeNotify (PRKEVENT pEvent);", "WindowsCompareStringOrdinal": "HRESULT WINAPI WindowsCompareStringOrdinal(HSTRING string1, HSTRING string2, INT32 *result);", "WindowsConcatString": "HRESULT WINAPI WindowsConcatString(HSTRING string1, HSTRING string2, HSTRING *newString);", "WindowsCreateString": "HRESULT WINAPI WindowsCreateString(LPCWSTR sourceString, UINT32 length, HSTRING *string);", "WindowsCreateStringReference": "HRESULT WINAPI WindowsCreateStringReference(PCWSTR sourceString, UINT32 length, HSTRING_HEADER *hstringHeader, HSTRING *string);", "WindowsDeleteString": "HRESULT WINAPI WindowsDeleteString(HSTRING string);", "WindowsDuplicateString": "HRESULT WINAPI WindowsDuplicateString(HSTRING string, HSTRING *newString);", "WindowsGetStringLen": "UINT32 WINAPI WindowsGetStringLen(HSTRING string);", "WindowsGetStringRawBuffer": "PCWSTR WINAPI WindowsGetStringRawBuffer(HSTRING string, UINT32 *length);", "WindowsInspectString": "HRESULT WINAPI WindowsInspectString(UINT_PTR targetHString, USHORT machine, PINSPECT_HSTRING_CALLBACK callback, void *context, UINT32 *length, UINT_PTR *targetStringAddress);", "WindowsIsStringEmpty": "BOOL WINAPI WindowsIsStringEmpty(HSTRING string);", "WindowsReplaceString": "HRESULT WINAPI WindowsReplaceString(HSTRING string, HSTRING stringReplaced, HSTRING stringReplaceWith, HSTRING *newString);", "WindowsStringHasEmbeddedNull": "HRESULT WINAPI WindowsStringHasEmbeddedNull(HSTRING string, BOOL *hasEmbedNull);", "WindowsSubstring": "HRESULT WINAPI WindowsSubstring(HSTRING string, UINT32 startIndex, HSTRING *newString);", "WindowsSubstringWithSpecifiedLength": "HRESULT WINAPI WindowsSubstringWithSpecifiedLength(HSTRING string, UINT32 startIndex, UINT32 length, HSTRING *newString);", "WindowsTrimStringEnd": "HRESULT WINAPI WindowsTrimStringEnd(HSTRING string, HSTRING trimString, HSTRING *newString);", "WindowsTrimStringStart": "HRESULT WINAPI WindowsTrimStringStart(HSTRING string, HSTRING trimString, HSTRING *newString);", "OLEDBSimpleProviderListener_aboutToChangeCell_Proxy": "HRESULT WINAPI OLEDBSimpleProviderListener_aboutToChangeCell_Proxy(OLEDBSimpleProviderListener *This,DBROWCOUNT iRow,DB_LORDINAL iColumn);", "OLEDBSimpleProviderListener_cellChanged_Proxy": "HRESULT WINAPI OLEDBSimpleProviderListener_cellChanged_Proxy(OLEDBSimpleProviderListener *This,DBROWCOUNT iRow,DB_LORDINAL iColumn);", "OLEDBSimpleProviderListener_aboutToDeleteRows_Proxy": "HRESULT WINAPI OLEDBSimpleProviderListener_aboutToDeleteRows_Proxy(OLEDBSimpleProviderListener *This,DBROWCOUNT iRow,DBROWCOUNT cRows);", "OLEDBSimpleProviderListener_deletedRows_Proxy": "HRESULT WINAPI OLEDBSimpleProviderListener_deletedRows_Proxy(OLEDBSimpleProviderListener *This,DBROWCOUNT iRow,DBROWCOUNT cRows);", "OLEDBSimpleProviderListener_aboutToInsertRows_Proxy": "HRESULT WINAPI OLEDBSimpleProviderListener_aboutToInsertRows_Proxy(OLEDBSimpleProviderListener *This,DBROWCOUNT iRow,DBROWCOUNT cRows);", "OLEDBSimpleProviderListener_insertedRows_Proxy": "HRESULT WINAPI OLEDBSimpleProviderListener_insertedRows_Proxy(OLEDBSimpleProviderListener *This,DBROWCOUNT iRow,DBROWCOUNT cRows);", "OLEDBSimpleProviderListener_rowsAvailable_Proxy": "HRESULT WINAPI OLEDBSimpleProviderListener_rowsAvailable_Proxy(OLEDBSimpleProviderListener *This,DBROWCOUNT iRow,DBROWCOUNT cRows);", "OLEDBSimpleProviderListener_transferComplete_Proxy": "HRESULT WINAPI OLEDBSimpleProviderListener_transferComplete_Proxy(OLEDBSimpleProviderListener *This,OSPXFER xfer);", "OLEDBSimpleProvider_getRowCount_Proxy": "HRESULT WINAPI OLEDBSimpleProvider_getRowCount_Proxy(OLEDBSimpleProvider *This,DBROWCOUNT *pcRows);", "OLEDBSimpleProvider_getColumnCount_Proxy": "HRESULT WINAPI OLEDBSimpleProvider_getColumnCount_Proxy(OLEDBSimpleProvider *This,DB_LORDINAL *pcColumns);", "OLEDBSimpleProvider_getRWStatus_Proxy": "HRESULT WINAPI OLEDBSimpleProvider_getRWStatus_Proxy(OLEDBSimpleProvider *This,DBROWCOUNT iRow,DB_LORDINAL iColumn,OSPRW *prwStatus);", "OLEDBSimpleProvider_getVariant_Proxy": "HRESULT WINAPI OLEDBSimpleProvider_getVariant_Proxy(OLEDBSimpleProvider *This,DBROWCOUNT iRow,DB_LORDINAL iColumn,OSPFORMAT format,VARIANT *pVar);", "OLEDBSimpleProvider_setVariant_Proxy": "HRESULT WINAPI OLEDBSimpleProvider_setVariant_Proxy(OLEDBSimpleProvider *This,DBROWCOUNT iRow,DB_LORDINAL iColumn,OSPFORMAT format,VARIANT Var);", "OLEDBSimpleProvider_getLocale_Proxy": "HRESULT WINAPI OLEDBSimpleProvider_getLocale_Proxy(OLEDBSimpleProvider *This,BSTR *pbstrLocale);", "OLEDBSimpleProvider_deleteRows_Proxy": "HRESULT WINAPI OLEDBSimpleProvider_deleteRows_Proxy(OLEDBSimpleProvider *This,DBROWCOUNT iRow,DBROWCOUNT cRows,DBROWCOUNT *pcRowsDeleted);", "OLEDBSimpleProvider_insertRows_Proxy": "HRESULT WINAPI OLEDBSimpleProvider_insertRows_Proxy(OLEDBSimpleProvider *This,DBROWCOUNT iRow,DBROWCOUNT cRows,DBROWCOUNT *pcRowsInserted);", "OLEDBSimpleProvider_find_Proxy": "HRESULT WINAPI OLEDBSimpleProvider_find_Proxy(OLEDBSimpleProvider *This,DBROWCOUNT iRowStart,DB_LORDINAL iColumn,VARIANT val,OSPFIND findFlags,OSPCOMP compType,DBROWCOUNT *piRowFound);", "OLEDBSimpleProvider_addOLEDBSimpleProviderListener_Proxy": "HRESULT WINAPI OLEDBSimpleProvider_addOLEDBSimpleProviderListener_Proxy(OLEDBSimpleProvider *This,OLEDBSimpleProviderListener *pospIListener);", "OLEDBSimpleProvider_removeOLEDBSimpleProviderListener_Proxy": "HRESULT WINAPI OLEDBSimpleProvider_removeOLEDBSimpleProviderListener_Proxy(OLEDBSimpleProvider *This,OLEDBSimpleProviderListener *pospIListener);", "OLEDBSimpleProvider_isAsync_Proxy": "HRESULT WINAPI OLEDBSimpleProvider_isAsync_Proxy(OLEDBSimpleProvider *This,WINBOOL *pbAsynch);", "OLEDBSimpleProvider_getEstimatedRows_Proxy": "HRESULT WINAPI OLEDBSimpleProvider_getEstimatedRows_Proxy(OLEDBSimpleProvider *This,DBROWCOUNT *piRows);", "OLEDBSimpleProvider_stopTransfer_Proxy": "HRESULT WINAPI OLEDBSimpleProvider_stopTransfer_Proxy(OLEDBSimpleProvider *This);", "AccessCheck": "WINADVAPI WINBOOL WINAPI AccessCheck (PSECURITY_DESCRIPTOR pSecurityDescriptor, HANDLE ClientToken, DWORD DesiredAccess, PGENERIC_MAPPING GenericMapping, PPRIVILEGE_SET PrivilegeSet, LPDWORD PrivilegeSetLength, LPDWORD GrantedAccess, LPBOOL AccessStatus);", "AccessCheckAndAuditAlarmW": "WINADVAPI WINBOOL WINAPI AccessCheckAndAuditAlarmW (LPCWSTR SubsystemName, LPVOID HandleId, LPWSTR ObjectTypeName, LPWSTR ObjectName, PSECURITY_DESCRIPTOR SecurityDescriptor, DWORD DesiredAccess, PGENERIC_MAPPING GenericMapping, WINBOOL ObjectCreation, LPDWORD GrantedAccess, LPBOOL AccessStatus, LPBOOL pfGenerateOnClose);", "AccessCheckByType": "WINADVAPI WINBOOL WINAPI AccessCheckByType (PSECURITY_DESCRIPTOR pSecurityDescriptor, PSID PrincipalSelfSid, HANDLE ClientToken, DWORD DesiredAccess, POBJECT_TYPE_LIST ObjectTypeList, DWORD ObjectTypeListLength, PGENERIC_MAPPING GenericMapping, PPRIVILEGE_SET PrivilegeSet, LPDWORD PrivilegeSetLength, LPDWORD GrantedAccess, LPBOOL AccessStatus);", "AccessCheckByTypeResultList": "WINADVAPI WINBOOL WINAPI AccessCheckByTypeResultList (PSECURITY_DESCRIPTOR pSecurityDescriptor, PSID PrincipalSelfSid, HANDLE ClientToken, DWORD DesiredAccess, POBJECT_TYPE_LIST ObjectTypeList, DWORD ObjectTypeListLength, PGENERIC_MAPPING GenericMapping, PPRIVILEGE_SET PrivilegeSet, LPDWORD PrivilegeSetLength, LPDWORD GrantedAccessList, LPDWORD AccessStatusList);", "AccessCheckByTypeAndAuditAlarmW": "WINADVAPI WINBOOL WINAPI AccessCheckByTypeAndAuditAlarmW (LPCWSTR SubsystemName, LPVOID HandleId, LPCWSTR ObjectTypeName, LPCWSTR ObjectName, PSECURITY_DESCRIPTOR SecurityDescriptor, PSID PrincipalSelfSid, DWORD DesiredAccess, AUDIT_EVENT_TYPE AuditType, DWORD Flags, POBJECT_TYPE_LIST ObjectTypeList, DWORD ObjectTypeListLength, PGENERIC_MAPPING GenericMapping, WINBOOL ObjectCreation, LPDWORD GrantedAccess, LPBOOL AccessStatus, LPBOOL pfGenerateOnClose);", "AccessCheckByTypeResultListAndAuditAlarmW": "WINADVAPI WINBOOL WINAPI AccessCheckByTypeResultListAndAuditAlarmW (LPCWSTR SubsystemName, LPVOID HandleId, LPCWSTR ObjectTypeName, LPCWSTR ObjectName, PSECURITY_DESCRIPTOR SecurityDescriptor, PSID PrincipalSelfSid, DWORD DesiredAccess, AUDIT_EVENT_TYPE AuditType, DWORD Flags, POBJECT_TYPE_LIST ObjectTypeList, DWORD ObjectTypeListLength, PGENERIC_MAPPING GenericMapping, WINBOOL ObjectCreation, LPDWORD GrantedAccessList, LPDWORD AccessStatusList, LPBOOL pfGenerateOnClose);", "AccessCheckByTypeResultListAndAuditAlarmByHandleW": "WINADVAPI WINBOOL WINAPI AccessCheckByTypeResultListAndAuditAlarmByHandleW (LPCWSTR SubsystemName, LPVOID HandleId, HANDLE ClientToken, LPCWSTR ObjectTypeName, LPCWSTR ObjectName, PSECURITY_DESCRIPTOR SecurityDescriptor, PSID PrincipalSelfSid, DWORD DesiredAccess, AUDIT_EVENT_TYPE AuditType, DWORD Flags, POBJECT_TYPE_LIST ObjectTypeList, DWORD ObjectTypeListLength, PGENERIC_MAPPING GenericMapping, WINBOOL ObjectCreation, LPDWORD GrantedAccessList, LPDWORD AccessStatusList, LPBOOL pfGenerateOnClose);", "AddAccessAllowedObjectAce": "WINADVAPI WINBOOL WINAPI AddAccessAllowedObjectAce (PACL pAcl, DWORD dwAceRevision, DWORD AceFlags, DWORD AccessMask, GUID *ObjectTypeGuid, GUID *InheritedObjectTypeGuid, PSID pSid);", "AddAccessDeniedAce": "WINADVAPI WINBOOL WINAPI AddAccessDeniedAce (PACL pAcl, DWORD dwAceRevision, DWORD AccessMask, PSID pSid);", "AddAccessDeniedAceEx": "WINADVAPI WINBOOL WINAPI AddAccessDeniedAceEx (PACL pAcl, DWORD dwAceRevision, DWORD AceFlags, DWORD AccessMask, PSID pSid);", "AddAccessDeniedObjectAce": "WINADVAPI WINBOOL WINAPI AddAccessDeniedObjectAce (PACL pAcl, DWORD dwAceRevision, DWORD AceFlags, DWORD AccessMask, GUID *ObjectTypeGuid, GUID *InheritedObjectTypeGuid, PSID pSid);", "AddAuditAccessAce": "WINADVAPI WINBOOL WINAPI AddAuditAccessAce (PACL pAcl, DWORD dwAceRevision, DWORD dwAccessMask, PSID pSid, WINBOOL bAuditSuccess, WINBOOL bAuditFailure);", "AddAuditAccessAceEx": "WINADVAPI WINBOOL WINAPI AddAuditAccessAceEx (PACL pAcl, DWORD dwAceRevision, DWORD AceFlags, DWORD dwAccessMask, PSID pSid, WINBOOL bAuditSuccess, WINBOOL bAuditFailure);", "AddAuditAccessObjectAce": "WINADVAPI WINBOOL WINAPI AddAuditAccessObjectAce (PACL pAcl, DWORD dwAceRevision, DWORD AceFlags, DWORD AccessMask, GUID *ObjectTypeGuid, GUID *InheritedObjectTypeGuid, PSID pSid, WINBOOL bAuditSuccess, WINBOOL bAuditFailure);", "AddResourceAttributeAce": "WINADVAPI WINBOOL WINAPI AddResourceAttributeAce (PACL pAcl, DWORD dwAceRevision, DWORD AceFlags, DWORD AccessMask, PSID pSid, PCLAIM_SECURITY_ATTRIBUTES_INFORMATION pAttributeInfo, PDWORD pReturnLength);", "AddScopedPolicyIDAce": "WINADVAPI WINBOOL WINAPI AddScopedPolicyIDAce (PACL pAcl, DWORD dwAceRevision, DWORD AceFlags, DWORD AccessMask, PSID pSid);", "AreAllAccessesGranted": "WINADVAPI WINBOOL WINAPI AreAllAccessesGranted (DWORD GrantedAccess, DWORD DesiredAccess);", "AreAnyAccessesGranted": "WINADVAPI WINBOOL WINAPI AreAnyAccessesGranted (DWORD GrantedAccess, DWORD DesiredAccess);", "ConvertToAutoInheritPrivateObjectSecurity": "WINADVAPI WINBOOL WINAPI ConvertToAutoInheritPrivateObjectSecurity (PSECURITY_DESCRIPTOR ParentDescriptor, PSECURITY_DESCRIPTOR CurrentSecurityDescriptor, PSECURITY_DESCRIPTOR *NewSecurityDescriptor, GUID *ObjectType, BOOLEAN IsDirectoryObject, PGENERIC_MAPPING GenericMapping);", "CreatePrivateObjectSecurity": "WINADVAPI WINBOOL WINAPI CreatePrivateObjectSecurity (PSECURITY_DESCRIPTOR ParentDescriptor, PSECURITY_DESCRIPTOR CreatorDescriptor, PSECURITY_DESCRIPTOR *NewDescriptor, WINBOOL IsDirectoryObject, HANDLE Token, PGENERIC_MAPPING GenericMapping);", "CreatePrivateObjectSecurityEx": "WINADVAPI WINBOOL WINAPI CreatePrivateObjectSecurityEx (PSECURITY_DESCRIPTOR ParentDescriptor, PSECURITY_DESCRIPTOR CreatorDescriptor, PSECURITY_DESCRIPTOR *NewDescriptor, GUID *ObjectType, WINBOOL IsContainerObject, ULONG AutoInheritFlags, HANDLE Token, PGENERIC_MAPPING GenericMapping);", "CreatePrivateObjectSecurityWithMultipleInheritance": "WINADVAPI WINBOOL WINAPI CreatePrivateObjectSecurityWithMultipleInheritance (PSECURITY_DESCRIPTOR ParentDescriptor, PSECURITY_DESCRIPTOR CreatorDescriptor, PSECURITY_DESCRIPTOR *NewDescriptor, GUID **ObjectTypes, ULONG GuidCount, WINBOOL IsContainerObject, ULONG AutoInheritFlags, HANDLE Token, PGENERIC_MAPPING GenericMapping);", "DestroyPrivateObjectSecurity": "WINADVAPI WINBOOL WINAPI DestroyPrivateObjectSecurity (PSECURITY_DESCRIPTOR *ObjectDescriptor);", "EqualPrefixSid": "WINADVAPI WINBOOL WINAPI EqualPrefixSid (PSID pSid1, PSID pSid2);", "EqualSid": "WINADVAPI WINBOOL WINAPI EqualSid (PSID pSid1, PSID pSid2);", "FindFirstFreeAce": "WINADVAPI WINBOOL WINAPI FindFirstFreeAce (PACL pAcl, LPVOID *pAce);", "GetFileSecurityW": "WINADVAPI WINBOOL WINAPI GetFileSecurityW (LPCWSTR lpFileName, SECURITY_INFORMATION RequestedInformation, PSECURITY_DESCRIPTOR pSecurityDescriptor, DWORD nLength, LPDWORD lpnLengthNeeded);", "GetPrivateObjectSecurity": "WINADVAPI WINBOOL WINAPI GetPrivateObjectSecurity (PSECURITY_DESCRIPTOR ObjectDescriptor, SECURITY_INFORMATION SecurityInformation, PSECURITY_DESCRIPTOR ResultantDescriptor, DWORD DescriptorLength, PDWORD ReturnLength);", "ImpersonateLoggedOnUser": "WINADVAPI WINBOOL WINAPI ImpersonateLoggedOnUser (HANDLE hToken);", "ImpersonateSelf": "WINADVAPI WINBOOL WINAPI ImpersonateSelf (SECURITY_IMPERSONATION_LEVEL ImpersonationLevel);", "IsTokenRestricted": "WINADVAPI WINBOOL WINAPI IsTokenRestricted (HANDLE TokenHandle);", "MapGenericMask": "WINADVAPI VOID WINAPI MapGenericMask (PDWORD AccessMask, PGENERIC_MAPPING GenericMapping);", "ObjectCloseAuditAlarmW": "WINADVAPI WINBOOL WINAPI ObjectCloseAuditAlarmW (LPCWSTR SubsystemName, LPVOID HandleId, WINBOOL GenerateOnClose);", "ObjectDeleteAuditAlarmW": "WINADVAPI WINBOOL WINAPI ObjectDeleteAuditAlarmW (LPCWSTR SubsystemName, LPVOID HandleId, WINBOOL GenerateOnClose);", "ObjectOpenAuditAlarmW": "WINADVAPI WINBOOL WINAPI ObjectOpenAuditAlarmW (LPCWSTR SubsystemName, LPVOID HandleId, LPWSTR ObjectTypeName, LPWSTR ObjectName, PSECURITY_DESCRIPTOR pSecurityDescriptor, HANDLE ClientToken, DWORD DesiredAccess, DWORD GrantedAccess, PPRIVILEGE_SET Privileges, WINBOOL ObjectCreation, WINBOOL AccessGranted, LPBOOL GenerateOnClose);", "ObjectPrivilegeAuditAlarmW": "WINADVAPI WINBOOL WINAPI ObjectPrivilegeAuditAlarmW (LPCWSTR SubsystemName, LPVOID HandleId, HANDLE ClientToken, DWORD DesiredAccess, PPRIVILEGE_SET Privileges, WINBOOL AccessGranted);", "PrivilegeCheck": "WINADVAPI WINBOOL WINAPI PrivilegeCheck (HANDLE ClientToken, PPRIVILEGE_SET RequiredPrivileges, LPBOOL pfResult);", "PrivilegedServiceAuditAlarmW": "WINADVAPI WINBOOL WINAPI PrivilegedServiceAuditAlarmW (LPCWSTR SubsystemName, LPCWSTR ServiceName, HANDLE ClientToken, PPRIVILEGE_SET Privileges, WINBOOL AccessGranted);", "QuerySecurityAccessMask": "WINADVAPI VOID WINAPI QuerySecurityAccessMask (SECURITY_INFORMATION SecurityInformation, LPDWORD DesiredAccess);", "RevertToSelf": "WINADVAPI WINBOOL WINAPI RevertToSelf (VOID);", "SetAclInformation": "WINADVAPI WINBOOL WINAPI SetAclInformation (PACL pAcl, LPVOID pAclInformation, DWORD nAclInformationLength, ACL_INFORMATION_CLASS dwAclInformationClass);", "SetFileSecurityW": "WINADVAPI WINBOOL WINAPI SetFileSecurityW (LPCWSTR lpFileName, SECURITY_INFORMATION SecurityInformation, PSECURITY_DESCRIPTOR pSecurityDescriptor);", "SetPrivateObjectSecurity": "WINADVAPI WINBOOL WINAPI SetPrivateObjectSecurity (SECURITY_INFORMATION SecurityInformation, PSECURITY_DESCRIPTOR ModificationDescriptor, PSECURITY_DESCRIPTOR *ObjectsSecurityDescriptor, PGENERIC_MAPPING GenericMapping, HANDLE Token);", "SetPrivateObjectSecurityEx": "WINADVAPI WINBOOL WINAPI SetPrivateObjectSecurityEx (SECURITY_INFORMATION SecurityInformation, PSECURITY_DESCRIPTOR ModificationDescriptor, PSECURITY_DESCRIPTOR *ObjectsSecurityDescriptor, ULONG AutoInheritFlags, PGENERIC_MAPPING GenericMapping, HANDLE Token);", "SetSecurityAccessMask": "WINADVAPI VOID WINAPI SetSecurityAccessMask (SECURITY_INFORMATION SecurityInformation, LPDWORD DesiredAccess);", "SetCachedSigningLevel": "WINADVAPI WINBOOL WINAPI SetCachedSigningLevel (PHANDLE SourceFiles, ULONG SourceFileCount, ULONG Flags, HANDLE TargetFile);", "GetCachedSigningLevel": "WINADVAPI WINBOOL WINAPI GetCachedSigningLevel (HANDLE File, PULONG Flags, PULONG SigningLevel, PUCHAR Thumbprint, PULONG ThumbprintSize, PULONG ThumbprintAlgorithm);", "AddAce": "WINADVAPI WINBOOL WINAPI AddAce (PACL pAcl, DWORD dwAceRevision, DWORD dwStartingAceIndex, LPVOID pAceList, DWORD nAceListLength);", "AddAccessAllowedAce": "WINADVAPI WINBOOL WINAPI AddAccessAllowedAce (PACL pAcl, DWORD dwAceRevision, DWORD AccessMask, PSID pSid);", "AddAccessAllowedAceEx": "WINADVAPI WINBOOL WINAPI AddAccessAllowedAceEx (PACL pAcl, DWORD dwAceRevision, DWORD AceFlags, DWORD AccessMask, PSID pSid);", "AdjustTokenGroups": "WINADVAPI WINBOOL WINAPI AdjustTokenGroups (HANDLE TokenHandle, WINBOOL ResetToDefault, PTOKEN_GROUPS NewState, DWORD BufferLength, PTOKEN_GROUPS PreviousState, PDWORD ReturnLength);", "AdjustTokenPrivileges": "WINADVAPI WINBOOL WINAPI AdjustTokenPrivileges (HANDLE TokenHandle, WINBOOL DisableAllPrivileges, PTOKEN_PRIVILEGES NewState, DWORD BufferLength, PTOKEN_PRIVILEGES PreviousState, PDWORD ReturnLength);", "AllocateAndInitializeSid": "WINADVAPI WINBOOL WINAPI AllocateAndInitializeSid (PSID_IDENTIFIER_AUTHORITY pIdentifierAuthority, BYTE nSubAuthorityCount, DWORD nSubAuthority0, DWORD nSubAuthority1, DWORD nSubAuthority2, DWORD nSubAuthority3, DWORD nSubAuthority4, DWORD nSubAuthority5, DWORD nSubAuthority6, DWORD nSubAuthority7, PSID *pSid);", "AllocateLocallyUniqueId": "WINADVAPI WINBOOL WINAPI AllocateLocallyUniqueId (PLUID Luid);", "CopySid": "WINADVAPI WINBOOL WINAPI CopySid (DWORD nDestinationSidLength, PSID pDestinationSid, PSID pSourceSid);", "CreateWellKnownSid": "WINADVAPI WINBOOL WINAPI CreateWellKnownSid (WELL_KNOWN_SID_TYPE WellKnownSidType, PSID DomainSid, PSID pSid, DWORD *cbSid);", "DeleteAce": "WINADVAPI WINBOOL WINAPI DeleteAce (PACL pAcl, DWORD dwAceIndex);", "DuplicateToken": "WINADVAPI WINBOOL WINAPI DuplicateToken (HANDLE ExistingTokenHandle, SECURITY_IMPERSONATION_LEVEL ImpersonationLevel, PHANDLE DuplicateTokenHandle);", "DuplicateTokenEx": "WINADVAPI WINBOOL WINAPI DuplicateTokenEx (HANDLE hExistingToken, DWORD dwDesiredAccess, LPSECURITY_ATTRIBUTES lpTokenAttributes, SECURITY_IMPERSONATION_LEVEL ImpersonationLevel, TOKEN_TYPE TokenType, PHANDLE phNewToken);", "EqualDomainSid": "WINADVAPI WINBOOL WINAPI EqualDomainSid (PSID pSid1, PSID pSid2, WINBOOL *pfEqual);", "FreeSid": "WINADVAPI PVOID WINAPI FreeSid (PSID pSid);", "GetAce": "WINADVAPI WINBOOL WINAPI GetAce (PACL pAcl, DWORD dwAceIndex, LPVOID *pAce);", "GetAclInformation": "WINADVAPI WINBOOL WINAPI GetAclInformation (PACL pAcl, LPVOID pAclInformation, DWORD nAclInformationLength, ACL_INFORMATION_CLASS dwAclInformationClass);", "GetKernelObjectSecurity": "WINADVAPI WINBOOL WINAPI GetKernelObjectSecurity (HANDLE Handle, SECURITY_INFORMATION RequestedInformation, PSECURITY_DESCRIPTOR pSecurityDescriptor, DWORD nLength, LPDWORD lpnLengthNeeded);", "GetLengthSid": "WINADVAPI DWORD WINAPI GetLengthSid (PSID pSid);", "GetSecurityDescriptorControl": "WINADVAPI WINBOOL WINAPI GetSecurityDescriptorControl (PSECURITY_DESCRIPTOR pSecurityDescriptor, PSECURITY_DESCRIPTOR_CONTROL pControl, LPDWORD lpdwRevision);", "GetSecurityDescriptorDacl": "WINADVAPI WINBOOL WINAPI GetSecurityDescriptorDacl (PSECURITY_DESCRIPTOR pSecurityDescriptor, LPBOOL lpbDaclPresent, PACL *pDacl, LPBOOL lpbDaclDefaulted);", "GetSecurityDescriptorGroup": "WINADVAPI WINBOOL WINAPI GetSecurityDescriptorGroup (PSECURITY_DESCRIPTOR pSecurityDescriptor, PSID *pGroup, LPBOOL lpbGroupDefaulted);", "GetSecurityDescriptorLength": "WINADVAPI DWORD WINAPI GetSecurityDescriptorLength (PSECURITY_DESCRIPTOR pSecurityDescriptor);", "GetSecurityDescriptorOwner": "WINADVAPI WINBOOL WINAPI GetSecurityDescriptorOwner (PSECURITY_DESCRIPTOR pSecurityDescriptor, PSID *pOwner, LPBOOL lpbOwnerDefaulted);", "GetSecurityDescriptorRMControl": "WINADVAPI DWORD WINAPI GetSecurityDescriptorRMControl (PSECURITY_DESCRIPTOR SecurityDescriptor, PUCHAR RMControl);", "GetSecurityDescriptorSacl": "WINADVAPI WINBOOL WINAPI GetSecurityDescriptorSacl (PSECURITY_DESCRIPTOR pSecurityDescriptor, LPBOOL lpbSaclPresent, PACL *pSacl, LPBOOL lpbSaclDefaulted);", "GetSidIdentifierAuthority": "WINADVAPI PSID_IDENTIFIER_AUTHORITY WINAPI GetSidIdentifierAuthority (PSID pSid);", "GetSidLengthRequired": "WINADVAPI DWORD WINAPI GetSidLengthRequired (UCHAR nSubAuthorityCount);", "GetSidSubAuthority": "WINADVAPI PDWORD WINAPI GetSidSubAuthority (PSID pSid, DWORD nSubAuthority);", "GetSidSubAuthorityCount": "WINADVAPI PUCHAR WINAPI GetSidSubAuthorityCount (PSID pSid);", "GetTokenInformation": "WINADVAPI WINBOOL WINAPI GetTokenInformation (HANDLE TokenHandle, TOKEN_INFORMATION_CLASS TokenInformationClass, LPVOID TokenInformation, DWORD TokenInformationLength, PDWORD ReturnLength);", "GetWindowsAccountDomainSid": "WINADVAPI WINBOOL WINAPI GetWindowsAccountDomainSid (PSID pSid, PSID pDomainSid, DWORD *cbDomainSid);", "InitializeAcl": "WINADVAPI WINBOOL WINAPI InitializeAcl (PACL pAcl, DWORD nAclLength, DWORD dwAclRevision);", "InitializeSecurityDescriptor": "WINADVAPI WINBOOL WINAPI InitializeSecurityDescriptor (PSECURITY_DESCRIPTOR pSecurityDescriptor, DWORD dwRevision);", "InitializeSid": "WINADVAPI WINBOOL WINAPI InitializeSid (PSID Sid, PSID_IDENTIFIER_AUTHORITY pIdentifierAuthority, BYTE nSubAuthorityCount);", "IsValidAcl": "WINADVAPI WINBOOL WINAPI IsValidAcl (PACL pAcl);", "IsValidSecurityDescriptor": "WINADVAPI WINBOOL WINAPI IsValidSecurityDescriptor (PSECURITY_DESCRIPTOR pSecurityDescriptor);", "IsValidSid": "WINADVAPI WINBOOL WINAPI IsValidSid (PSID pSid);", "IsWellKnownSid": "WINADVAPI WINBOOL WINAPI IsWellKnownSid (PSID pSid, WELL_KNOWN_SID_TYPE WellKnownSidType);", "MakeAbsoluteSD": "WINADVAPI WINBOOL WINAPI MakeAbsoluteSD (PSECURITY_DESCRIPTOR pSelfRelativeSecurityDescriptor, PSECURITY_DESCRIPTOR pAbsoluteSecurityDescriptor, LPDWORD lpdwAbsoluteSecurityDescriptorSize, PACL pDacl, LPDWORD lpdwDaclSize, PACL pSacl, LPDWORD lpdwSaclSize, PSID pOwner, LPDWORD lpdwOwnerSize, PSID pPrimaryGroup, LPDWORD lpdwPrimaryGroupSize);", "MakeSelfRelativeSD": "WINADVAPI WINBOOL WINAPI MakeSelfRelativeSD (PSECURITY_DESCRIPTOR pAbsoluteSecurityDescriptor, PSECURITY_DESCRIPTOR pSelfRelativeSecurityDescriptor, LPDWORD lpdwBufferLength);", "SetKernelObjectSecurity": "WINADVAPI WINBOOL WINAPI SetKernelObjectSecurity (HANDLE Handle, SECURITY_INFORMATION SecurityInformation, PSECURITY_DESCRIPTOR SecurityDescriptor);", "SetSecurityDescriptorControl": "WINADVAPI WINBOOL WINAPI SetSecurityDescriptorControl (PSECURITY_DESCRIPTOR pSecurityDescriptor, SECURITY_DESCRIPTOR_CONTROL ControlBitsOfInterest, SECURITY_DESCRIPTOR_CONTROL ControlBitsToSet);", "SetSecurityDescriptorDacl": "WINADVAPI WINBOOL WINAPI SetSecurityDescriptorDacl (PSECURITY_DESCRIPTOR pSecurityDescriptor, WINBOOL bDaclPresent, PACL pDacl, WINBOOL bDaclDefaulted);", "SetSecurityDescriptorGroup": "WINADVAPI WINBOOL WINAPI SetSecurityDescriptorGroup (PSECURITY_DESCRIPTOR pSecurityDescriptor, PSID pGroup, WINBOOL bGroupDefaulted);", "SetSecurityDescriptorOwner": "WINADVAPI WINBOOL WINAPI SetSecurityDescriptorOwner (PSECURITY_DESCRIPTOR pSecurityDescriptor, PSID pOwner, WINBOOL bOwnerDefaulted);", "SetSecurityDescriptorRMControl": "WINADVAPI DWORD WINAPI SetSecurityDescriptorRMControl (PSECURITY_DESCRIPTOR SecurityDescriptor, PUCHAR RMControl);", "SetSecurityDescriptorSacl": "WINADVAPI WINBOOL WINAPI SetSecurityDescriptorSacl (PSECURITY_DESCRIPTOR pSecurityDescriptor, WINBOOL bSaclPresent, PACL pSacl, WINBOOL bSaclDefaulted);", "SetTokenInformation": "WINADVAPI WINBOOL WINAPI SetTokenInformation (HANDLE TokenHandle, TOKEN_INFORMATION_CLASS TokenInformationClass, LPVOID TokenInformation, DWORD TokenInformationLength);", "AddMandatoryAce": "WINADVAPI WINBOOL WINAPI AddMandatoryAce (PACL pAcl, DWORD dwAceRevision, DWORD AceFlags, DWORD MandatoryPolicy, PSID pLabelSid);", "CveEventWrite": "WINADVAPI LONG WINAPI CveEventWrite (PCWSTR CveId, PCWSTR AdditionalDetails);", "DeriveCapabilitySidsFromName": "WINADVAPI WINBOOL WINAPI DeriveCapabilitySidsFromName(LPCWSTR CapName, PSID** CapabilityGroupSids, DWORD* CapabilityGroupSidCount, PSID** CapabilitySids, DWORD* CapabilitySidCount);", "ITLocalParticipant_get_LocalParticipantTypedInfo_Proxy": "HRESULT WINAPI ITLocalParticipant_get_LocalParticipantTypedInfo_Proxy(ITLocalParticipant *This,PARTICIPANT_TYPED_INFO InfoType,BSTR *ppInfo);", "ITLocalParticipant_put_LocalParticipantTypedInfo_Proxy": "HRESULT WINAPI ITLocalParticipant_put_LocalParticipantTypedInfo_Proxy(ITLocalParticipant *This,PARTICIPANT_TYPED_INFO InfoType,BSTR pInfo);", "IEnumParticipant_Next_Proxy": "HRESULT WINAPI IEnumParticipant_Next_Proxy(IEnumParticipant *This,ULONG celt,ITParticipant **ppElements,ULONG *pceltFetched);", "IEnumParticipant_Reset_Proxy": "HRESULT WINAPI IEnumParticipant_Reset_Proxy(IEnumParticipant *This);", "IEnumParticipant_Skip_Proxy": "HRESULT WINAPI IEnumParticipant_Skip_Proxy(IEnumParticipant *This,ULONG celt);", "IEnumParticipant_Clone_Proxy": "HRESULT WINAPI IEnumParticipant_Clone_Proxy(IEnumParticipant *This,IEnumParticipant **ppEnum);", "ITParticipantControl_EnumerateParticipants_Proxy": "HRESULT WINAPI ITParticipantControl_EnumerateParticipants_Proxy(ITParticipantControl *This,IEnumParticipant **ppEnumParticipants);", "ITParticipantControl_get_Participants_Proxy": "HRESULT WINAPI ITParticipantControl_get_Participants_Proxy(ITParticipantControl *This,VARIANT *pVariant);", "ITParticipantSubStreamControl_get_SubStreamFromParticipant_Proxy": "HRESULT WINAPI ITParticipantSubStreamControl_get_SubStreamFromParticipant_Proxy(ITParticipantSubStreamControl *This,ITParticipant *pParticipant,ITSubStream **ppITSubStream);", "ITParticipantSubStreamControl_get_ParticipantFromSubStream_Proxy": "HRESULT WINAPI ITParticipantSubStreamControl_get_ParticipantFromSubStream_Proxy(ITParticipantSubStreamControl *This,ITSubStream *pITSubStream,ITParticipant **ppParticipant);", "ITParticipantSubStreamControl_SwitchTerminalToSubStream_Proxy": "HRESULT WINAPI ITParticipantSubStreamControl_SwitchTerminalToSubStream_Proxy(ITParticipantSubStreamControl *This,ITTerminal *pITTerminal,ITSubStream *pITSubStream);", "ITParticipantEvent_get_Event_Proxy": "HRESULT WINAPI ITParticipantEvent_get_Event_Proxy(ITParticipantEvent *This,PARTICIPANT_EVENT *pParticipantEvent);", "ITParticipantEvent_get_Participant_Proxy": "HRESULT WINAPI ITParticipantEvent_get_Participant_Proxy(ITParticipantEvent *This,ITParticipant **ppParticipant);", "ITParticipantEvent_get_SubStream_Proxy": "HRESULT WINAPI ITParticipantEvent_get_SubStream_Proxy(ITParticipantEvent *This,ITSubStream **ppSubStream);", "IMulticastControl_get_LoopbackMode_Proxy": "HRESULT WINAPI IMulticastControl_get_LoopbackMode_Proxy(IMulticastControl *This,MULTICAST_LOOPBACK_MODE *pMode);", "IMulticastControl_put_LoopbackMode_Proxy": "HRESULT WINAPI IMulticastControl_put_LoopbackMode_Proxy(IMulticastControl *This,MULTICAST_LOOPBACK_MODE mode);", "XInputEnable": "void WINAPI XInputEnable(WINBOOL);", "XInputSetState": "DWORD WINAPI XInputSetState(DWORD, XINPUT_VIBRATION*);", "XInputGetState": "DWORD WINAPI XInputGetState(DWORD, XINPUT_STATE*);", "XInputGetKeystroke": "DWORD WINAPI XInputGetKeystroke(DWORD, DWORD, PXINPUT_KEYSTROKE);", "XInputGetCapabilities": "DWORD WINAPI XInputGetCapabilities(DWORD, DWORD, XINPUT_CAPABILITIES*);", "XInputGetCapabilitiesEx": "DWORD WINAPI XInputGetCapabilitiesEx(DWORD, DWORD, DWORD, XINPUT_CAPABILITIES_EX*);", "XInputGetDSoundAudioDeviceGuids": "DWORD WINAPI XInputGetDSoundAudioDeviceGuids(DWORD, GUID*, GUID*);", "XInputGetBatteryInformation": "DWORD WINAPI XInputGetBatteryInformation(DWORD, BYTE, XINPUT_BATTERY_INFORMATION*);", "XInputGetStateEx": "DWORD WINAPI XInputGetStateEx(DWORD, XINPUT_STATE*);", "UiaProviderCallback": "typedef SAFEARRAY * WINAPI UiaProviderCallback(HWND hwnd,enum ProviderType providerType);", "UiaEventCallback": "typedef void WINAPI UiaEventCallback(struct UiaEventArgs *pArgs,SAFEARRAY *pRequestedData,BSTR pTreeStructure);", "UiaGetReservedMixedAttributeValue": "HRESULT WINAPI UiaGetReservedMixedAttributeValue(IUnknown **value);", "UiaGetReservedNotSupportedValue": "HRESULT WINAPI UiaGetReservedNotSupportedValue(IUnknown **value);", "UiaLookupId": "int WINAPI UiaLookupId(enum AutomationIdentifierType type, const GUID *guid);", "UiaPatternRelease": "WINBOOL WINAPI UiaPatternRelease(HUIAPATTERNOBJECT hobj);", "UiaRaiseAsyncContentLoadedEvent": "HRESULT WINAPI UiaRaiseAsyncContentLoadedEvent(IRawElementProviderSimple *provider,", "UiaRaiseAutomationEvent": "HRESULT WINAPI UiaRaiseAutomationEvent(IRawElementProviderSimple *provider, EVENTID id);", "UiaRaiseAutomationPropertyChangedEvent": "HRESULT WINAPI UiaRaiseAutomationPropertyChangedEvent(IRawElementProviderSimple *, PROPERTYID, VARIANT, VARIANT);", "UiaRaiseChangesEvent": "HRESULT WINAPI UiaRaiseChangesEvent(IRawElementProviderSimple *provider, int event_id_count,", "UiaRaiseNotificationEvent": "HRESULT WINAPI UiaRaiseNotificationEvent(IRawElementProviderSimple *provider, enum NotificationKind notification_kind,", "UiaRaiseStructureChangedEvent": "HRESULT WINAPI UiaRaiseStructureChangedEvent(IRawElementProviderSimple *provider, enum StructureChangeType struct_change_type,", "UiaRaiseTextEditTextChangedEvent": "HRESULT WINAPI UiaRaiseTextEditTextChangedEvent(IRawElementProviderSimple *provider, enum TextEditChangeType text_edit_change_type,", "UiaRegisterProviderCallback": "void WINAPI UiaRegisterProviderCallback(UiaProviderCallback *pCallback);", "UiaReturnRawElementProvider": "LRESULT WINAPI UiaReturnRawElementProvider(HWND hwnd, WPARAM wParam, LPARAM lParam, IRawElementProviderSimple *elprov);", "UiaTextRangeRelease": "WINBOOL WINAPI UiaTextRangeRelease(HUIATEXTRANGE hobj);", "UiaHostProviderFromHwnd": "HRESULT WINAPI UiaHostProviderFromHwnd(HWND hwnd, IRawElementProviderSimple **elprov);", "UiaProviderFromIAccessible": "HRESULT WINAPI UiaProviderFromIAccessible(IAccessible *acc, LONG child_id, DWORD flags, IRawElementProviderSimple **elprov);", "UiaGetPropertyValue": "HRESULT WINAPI UiaGetPropertyValue(HUIANODE huianode, PROPERTYID prop_id, VARIANT *out_val);", "UiaNodeFromProvider": "HRESULT WINAPI UiaNodeFromProvider(IRawElementProviderSimple *elprov, HUIANODE *huianode);", "UiaNodeRelease": "WINBOOL WINAPI UiaNodeRelease(HUIANODE huianode);", "UiaGetRuntimeId": "HRESULT WINAPI UiaGetRuntimeId(HUIANODE huianode, SAFEARRAY **runtime_id);", "UiaHUiaNodeFromVariant": "HRESULT WINAPI UiaHUiaNodeFromVariant(VARIANT *in_val, HUIANODE *huianode);", "UiaNodeFromHandle": "HRESULT WINAPI UiaNodeFromHandle(HWND hwnd, HUIANODE *huianode);", "UiaGetRootNode": "HRESULT WINAPI UiaGetRootNode(HUIANODE *huianode);", "UiaNodeFromFocus": "HRESULT WINAPI UiaNodeFromFocus(struct UiaCacheRequest *cache_req, SAFEARRAY **out_req, BSTR *tree_struct);", "UiaDisconnectProvider": "HRESULT WINAPI UiaDisconnectProvider(IRawElementProviderSimple *elprov);", "UiaGetUpdatedCache": "HRESULT WINAPI UiaGetUpdatedCache(HUIANODE huianode, struct UiaCacheRequest *cache_req, enum NormalizeState normalize_state,", "UiaNavigate": "HRESULT WINAPI UiaNavigate(HUIANODE huianode, enum NavigateDirection dir, struct UiaCondition *nav_condition,", "UiaFind": "HRESULT WINAPI UiaFind(HUIANODE huianode, struct UiaFindParams *find_params, struct UiaCacheRequest *cache_req, SAFEARRAY **out_req,", "UiaAddEvent": "HRESULT WINAPI UiaAddEvent(HUIANODE huianode, EVENTID event_id, UiaEventCallback *callback, enum TreeScope scope,", "UiaRemoveEvent": "HRESULT WINAPI UiaRemoveEvent(HUIAEVENT huiaevent);", "UiaEventAddWindow": "HRESULT WINAPI UiaEventAddWindow(HUIAEVENT huiaevent, HWND hwnd);", "UiaEventRemoveWindow": "HRESULT WINAPI UiaEventRemoveWindow(HUIAEVENT huiaevent, HWND hwnd);", "UiaHasServerSideProvider": "WINBOOL WINAPI UiaHasServerSideProvider(HWND hwnd);", "UiaClientsAreListening": "WINBOOL WINAPI UiaClientsAreListening(void);", "EapHostPeerProcessReceivedPacket": "DWORD WINAPI EapHostPeerProcessReceivedPacket(", "EapHostPeerGetSendPacket": "DWORD WINAPI EapHostPeerGetSendPacket(", "EapHostPeerFreeRuntimeMemory": "VOID WINAPI  EapHostPeerFreeRuntimeMemory(", "EapHostPeerGetIdentity": "DWORD WINAPI EapHostPeerGetIdentity(", "EapHostPeerInitialize": "DWORD WINAPI EapHostPeerInitialize(void);", "EapHostPeerUninitialize": "void WINAPI EapHostPeerUninitialize(void);", "GetExtensionVersion": "WINBOOL WINAPI GetExtensionVersion(HSE_VERSION_INFO *pVer);", "HttpExtensionProc": "DWORD WINAPI HttpExtensionProc(EXTENSION_CONTROL_BLOCK *pECB);", "TerminateExtension": "WINBOOL WINAPI TerminateExtension(DWORD dwFlags);", "IRowsetNextRowset_GetNextRowset_Proxy": "HRESULT WINAPI IRowsetNextRowset_GetNextRowset_Proxy(IRowsetNextRowset *This,IUnknown *pUnkOuter,REFIID riid,IUnknown **ppNextRowset);", "IRowsetNewRowAfter_SetNewDataAfter_Proxy": "HRESULT WINAPI IRowsetNewRowAfter_SetNewDataAfter_Proxy(IRowsetNewRowAfter *This,HCHAPTER hChapter,ULONG cbbmPrevious,const BYTE *pbmPrevious,HACCESSOR hAccessor,BYTE *pData,HROW *phRow);", "IRowsetWithParameters_GetParameterInfo_Proxy": "HRESULT WINAPI IRowsetWithParameters_GetParameterInfo_Proxy(IRowsetWithParameters *This,DB_UPARAMS *pcParams,DBPARAMINFO **prgParamInfo,OLECHAR **ppNamesBuffer);", "IRowsetWithParameters_Requery_Proxy": "HRESULT WINAPI IRowsetWithParameters_Requery_Proxy(IRowsetWithParameters *This,DBPARAMS *pParams,ULONG *pulErrorParam,HCHAPTER *phReserved);", "IRowsetAsynch_RatioFinished_Proxy": "HRESULT WINAPI IRowsetAsynch_RatioFinished_Proxy(IRowsetAsynch *This,DBCOUNTITEM *pulDenominator,DBCOUNTITEM *pulNumerator,DBCOUNTITEM *pcRows,WINBOOL *pfNewRows);", "IRowsetAsynch_Stop_Proxy": "HRESULT WINAPI IRowsetAsynch_Stop_Proxy(IRowsetAsynch *This);", "IRowsetKeys_ListKeys_Proxy": "HRESULT WINAPI IRowsetKeys_ListKeys_Proxy(IRowsetKeys *This,DBORDINAL *pcColumns,DBORDINAL **prgColumns);", "IRowsetWatchAll_Acknowledge_Proxy": "HRESULT WINAPI IRowsetWatchAll_Acknowledge_Proxy(IRowsetWatchAll *This);", "IRowsetWatchAll_Start_Proxy": "HRESULT WINAPI IRowsetWatchAll_Start_Proxy(IRowsetWatchAll *This);", "IRowsetWatchAll_StopWatching_Proxy": "HRESULT WINAPI IRowsetWatchAll_StopWatching_Proxy(IRowsetWatchAll *This);", "IRowsetWatchNotify_OnChange_Proxy": "HRESULT WINAPI IRowsetWatchNotify_OnChange_Proxy(IRowsetWatchNotify *This,IRowset *pRowset,DBWATCHNOTIFY eChangeReason);", "IRowsetWatchRegion_CreateWatchRegion_Proxy": "HRESULT WINAPI IRowsetWatchRegion_CreateWatchRegion_Proxy(IRowsetWatchRegion *This,DBWATCHMODE dwWatchMode,HWATCHREGION *phRegion);", "IRowsetWatchRegion_ChangeWatchMode_Proxy": "HRESULT WINAPI IRowsetWatchRegion_ChangeWatchMode_Proxy(IRowsetWatchRegion *This,HWATCHREGION hRegion,DBWATCHMODE dwWatchMode);", "IRowsetWatchRegion_DeleteWatchRegion_Proxy": "HRESULT WINAPI IRowsetWatchRegion_DeleteWatchRegion_Proxy(IRowsetWatchRegion *This,HWATCHREGION hRegion);", "IRowsetWatchRegion_GetWatchRegionInfo_Proxy": "HRESULT WINAPI IRowsetWatchRegion_GetWatchRegionInfo_Proxy(IRowsetWatchRegion *This,HWATCHREGION hRegion,DBWATCHMODE *pdwWatchMode,HCHAPTER *phChapter,DBBKMARK *pcbBookmark,BYTE **ppBookmark,DBROWCOUNT *pcRows);", "IRowsetWatchRegion_Refresh_Proxy": "HRESULT WINAPI IRowsetWatchRegion_Refresh_Proxy(IRowsetWatchRegion *This,DBCOUNTITEM *pcChangesObtained,DBROWWATCHCHANGE **prgChanges);", "IRowsetWatchRegion_ShrinkWatchRegion_Proxy": "HRESULT WINAPI IRowsetWatchRegion_ShrinkWatchRegion_Proxy(IRowsetWatchRegion *This,HWATCHREGION hRegion,HCHAPTER hChapter,DBBKMARK cbBookmark,BYTE *pBookmark,DBROWCOUNT cRows);", "IRowsetCopyRows_CloseSource_Proxy": "HRESULT WINAPI IRowsetCopyRows_CloseSource_Proxy(IRowsetCopyRows *This,HSOURCE hSourceID);", "IRowsetCopyRows_CopyByHROWS_Proxy": "HRESULT WINAPI IRowsetCopyRows_CopyByHROWS_Proxy(IRowsetCopyRows *This,HSOURCE hSourceID,HCHAPTER hReserved,DBROWCOUNT cRows,const HROW rghRows[],ULONG bFlags);", "IRowsetCopyRows_CopyRows_Proxy": "HRESULT WINAPI IRowsetCopyRows_CopyRows_Proxy(IRowsetCopyRows *This,HSOURCE hSourceID,HCHAPTER hReserved,DBROWCOUNT cRows,ULONG bFlags,DBCOUNTITEM *pcRowsCopied);", "IRowsetCopyRows_DefineSource_Proxy": "HRESULT WINAPI IRowsetCopyRows_DefineSource_Proxy(IRowsetCopyRows *This,const IRowset *pRowsetSource,const DBORDINAL cColIds,const DB_LORDINAL rgSourceColumns[],const DB_LORDINAL rgTargetColumns[],HSOURCE *phSourceID);", "IReadData_ReadData_Proxy": "HRESULT WINAPI IReadData_ReadData_Proxy(IReadData *This,HCHAPTER hChapter,DBBKMARK cbBookmark,const BYTE *pBookmark,DBROWOFFSET lRowsOffset,HACCESSOR hAccessor,DBROWCOUNT cRows,DBCOUNTITEM *pcRowsObtained,BYTE **ppFixedData,DBLENGTH *pcbVariableTotal,BYTE **ppVariableData);", "IReadData_ReleaseChapter_Proxy": "HRESULT WINAPI IReadData_ReleaseChapter_Proxy(IReadData *This,HCHAPTER hChapter);", "ICommandCost_GetAccumulatedCost_Proxy": "HRESULT WINAPI ICommandCost_GetAccumulatedCost_Proxy(ICommandCost *This,LPCOLESTR pwszRowsetName,ULONG *pcCostLimits,DBCOST **prgCostLimits);", "ICommandCost_GetCostEstimate_Proxy": "HRESULT WINAPI ICommandCost_GetCostEstimate_Proxy(ICommandCost *This,LPCOLESTR pwszRowsetName,ULONG *pcCostEstimates,DBCOST *prgCostEstimates);", "ICommandCost_GetCostGoals_Proxy": "HRESULT WINAPI ICommandCost_GetCostGoals_Proxy(ICommandCost *This,LPCOLESTR pwszRowsetName,ULONG *pcCostGoals,DBCOST *prgCostGoals);", "ICommandCost_GetCostLimits_Proxy": "HRESULT WINAPI ICommandCost_GetCostLimits_Proxy(ICommandCost *This,LPCOLESTR pwszRowsetName,ULONG *pcCostLimits,DBCOST *prgCostLimits);", "ICommandCost_SetCostGoals_Proxy": "HRESULT WINAPI ICommandCost_SetCostGoals_Proxy(ICommandCost *This,LPCOLESTR pwszRowsetName,ULONG cCostGoals,const DBCOST rgCostGoals[]);", "ICommandCost_SetCostLimits_Proxy": "HRESULT WINAPI ICommandCost_SetCostLimits_Proxy(ICommandCost *This,LPCOLESTR pwszRowsetName,ULONG cCostLimits,DBCOST *prgCostLimits,DBEXECLIMITS dwExecutionFlags);", "ICommandValidate_ValidateCompletely_Proxy": "HRESULT WINAPI ICommandValidate_ValidateCompletely_Proxy(ICommandValidate *This);", "ICommandValidate_ValidateSyntax_Proxy": "HRESULT WINAPI ICommandValidate_ValidateSyntax_Proxy(ICommandValidate *This);", "ITableRename_RenameColumn_Proxy": "HRESULT WINAPI ITableRename_RenameColumn_Proxy(ITableRename *This,DBID *pTableId,DBID *pOldColumnId,DBID *pNewColumnId);", "ITableRename_RenameTable_Proxy": "HRESULT WINAPI ITableRename_RenameTable_Proxy(ITableRename *This,DBID *pOldTableId,DBID *pOldIndexId,DBID *pNewTableId,DBID *pNewIndexId);", "IDBSchemaCommand_GetCommand_Proxy": "HRESULT WINAPI IDBSchemaCommand_GetCommand_Proxy(IDBSchemaCommand *This,IUnknown *pUnkOuter,REFGUID rguidSchema,ICommand **ppCommand);", "IDBSchemaCommand_GetSchemas_Proxy": "HRESULT WINAPI IDBSchemaCommand_GetSchemas_Proxy(IDBSchemaCommand *This,ULONG *pcSchemas,GUID **prgSchemas);", "IProvideMoniker_GetMoniker_Proxy": "HRESULT WINAPI IProvideMoniker_GetMoniker_Proxy(IProvideMoniker *This,IMoniker **ppIMoniker);", "IEnumCERTVIEWCOLUMN_Next_Proxy": "HRESULT WINAPI IEnumCERTVIEWCOLUMN_Next_Proxy(IEnumCERTVIEWCOLUMN *This,LONG *pIndex);", "IEnumCERTVIEWCOLUMN_GetName_Proxy": "HRESULT WINAPI IEnumCERTVIEWCOLUMN_GetName_Proxy(IEnumCERTVIEWCOLUMN *This,BSTR *pstrOut);", "IEnumCERTVIEWCOLUMN_GetDisplayName_Proxy": "HRESULT WINAPI IEnumCERTVIEWCOLUMN_GetDisplayName_Proxy(IEnumCERTVIEWCOLUMN *This,BSTR *pstrOut);", "IEnumCERTVIEWCOLUMN_GetType_Proxy": "HRESULT WINAPI IEnumCERTVIEWCOLUMN_GetType_Proxy(IEnumCERTVIEWCOLUMN *This,LONG *pType);", "IEnumCERTVIEWCOLUMN_IsIndexed_Proxy": "HRESULT WINAPI IEnumCERTVIEWCOLUMN_IsIndexed_Proxy(IEnumCERTVIEWCOLUMN *This,LONG *pIndexed);", "IEnumCERTVIEWCOLUMN_GetMaxLength_Proxy": "HRESULT WINAPI IEnumCERTVIEWCOLUMN_GetMaxLength_Proxy(IEnumCERTVIEWCOLUMN *This,LONG *pMaxLength);", "IEnumCERTVIEWCOLUMN_GetValue_Proxy": "HRESULT WINAPI IEnumCERTVIEWCOLUMN_GetValue_Proxy(IEnumCERTVIEWCOLUMN *This,LONG Flags,VARIANT *pvarValue);", "IEnumCERTVIEWCOLUMN_Skip_Proxy": "HRESULT WINAPI IEnumCERTVIEWCOLUMN_Skip_Proxy(IEnumCERTVIEWCOLUMN *This,LONG celt);", "IEnumCERTVIEWCOLUMN_Reset_Proxy": "HRESULT WINAPI IEnumCERTVIEWCOLUMN_Reset_Proxy(IEnumCERTVIEWCOLUMN *This);", "IEnumCERTVIEWCOLUMN_Clone_Proxy": "HRESULT WINAPI IEnumCERTVIEWCOLUMN_Clone_Proxy(IEnumCERTVIEWCOLUMN *This,IEnumCERTVIEWCOLUMN **ppenum);", "IEnumCERTVIEWATTRIBUTE_Next_Proxy": "HRESULT WINAPI IEnumCERTVIEWATTRIBUTE_Next_Proxy(IEnumCERTVIEWATTRIBUTE *This,LONG *pIndex);", "IEnumCERTVIEWATTRIBUTE_GetName_Proxy": "HRESULT WINAPI IEnumCERTVIEWATTRIBUTE_GetName_Proxy(IEnumCERTVIEWATTRIBUTE *This,BSTR *pstrOut);", "IEnumCERTVIEWATTRIBUTE_GetValue_Proxy": "HRESULT WINAPI IEnumCERTVIEWATTRIBUTE_GetValue_Proxy(IEnumCERTVIEWATTRIBUTE *This,BSTR *pstrOut);", "IEnumCERTVIEWATTRIBUTE_Skip_Proxy": "HRESULT WINAPI IEnumCERTVIEWATTRIBUTE_Skip_Proxy(IEnumCERTVIEWATTRIBUTE *This,LONG celt);", "IEnumCERTVIEWATTRIBUTE_Reset_Proxy": "HRESULT WINAPI IEnumCERTVIEWATTRIBUTE_Reset_Proxy(IEnumCERTVIEWATTRIBUTE *This);", "IEnumCERTVIEWATTRIBUTE_Clone_Proxy": "HRESULT WINAPI IEnumCERTVIEWATTRIBUTE_Clone_Proxy(IEnumCERTVIEWATTRIBUTE *This,IEnumCERTVIEWATTRIBUTE **ppenum);", "IEnumCERTVIEWEXTENSION_Next_Proxy": "HRESULT WINAPI IEnumCERTVIEWEXTENSION_Next_Proxy(IEnumCERTVIEWEXTENSION *This,LONG *pIndex);", "IEnumCERTVIEWEXTENSION_GetName_Proxy": "HRESULT WINAPI IEnumCERTVIEWEXTENSION_GetName_Proxy(IEnumCERTVIEWEXTENSION *This,BSTR *pstrOut);", "IEnumCERTVIEWEXTENSION_GetFlags_Proxy": "HRESULT WINAPI IEnumCERTVIEWEXTENSION_GetFlags_Proxy(IEnumCERTVIEWEXTENSION *This,LONG *pFlags);", "IEnumCERTVIEWEXTENSION_GetValue_Proxy": "HRESULT WINAPI IEnumCERTVIEWEXTENSION_GetValue_Proxy(IEnumCERTVIEWEXTENSION *This,LONG Type,LONG Flags,VARIANT *pvarValue);", "IEnumCERTVIEWEXTENSION_Skip_Proxy": "HRESULT WINAPI IEnumCERTVIEWEXTENSION_Skip_Proxy(IEnumCERTVIEWEXTENSION *This,LONG celt);", "IEnumCERTVIEWEXTENSION_Reset_Proxy": "HRESULT WINAPI IEnumCERTVIEWEXTENSION_Reset_Proxy(IEnumCERTVIEWEXTENSION *This);", "IEnumCERTVIEWEXTENSION_Clone_Proxy": "HRESULT WINAPI IEnumCERTVIEWEXTENSION_Clone_Proxy(IEnumCERTVIEWEXTENSION *This,IEnumCERTVIEWEXTENSION **ppenum);", "IEnumCERTVIEWROW_Next_Proxy": "HRESULT WINAPI IEnumCERTVIEWROW_Next_Proxy(IEnumCERTVIEWROW *This,LONG *pIndex);", "IEnumCERTVIEWROW_EnumCertViewColumn_Proxy": "HRESULT WINAPI IEnumCERTVIEWROW_EnumCertViewColumn_Proxy(IEnumCERTVIEWROW *This,IEnumCERTVIEWCOLUMN **ppenum);", "IEnumCERTVIEWROW_EnumCertViewAttribute_Proxy": "HRESULT WINAPI IEnumCERTVIEWROW_EnumCertViewAttribute_Proxy(IEnumCERTVIEWROW *This,LONG Flags,IEnumCERTVIEWATTRIBUTE **ppenum);", "IEnumCERTVIEWROW_EnumCertViewExtension_Proxy": "HRESULT WINAPI IEnumCERTVIEWROW_EnumCertViewExtension_Proxy(IEnumCERTVIEWROW *This,LONG Flags,IEnumCERTVIEWEXTENSION **ppenum);", "IEnumCERTVIEWROW_Skip_Proxy": "HRESULT WINAPI IEnumCERTVIEWROW_Skip_Proxy(IEnumCERTVIEWROW *This,LONG celt);", "IEnumCERTVIEWROW_Reset_Proxy": "HRESULT WINAPI IEnumCERTVIEWROW_Reset_Proxy(IEnumCERTVIEWROW *This);", "IEnumCERTVIEWROW_Clone_Proxy": "HRESULT WINAPI IEnumCERTVIEWROW_Clone_Proxy(IEnumCERTVIEWROW *This,IEnumCERTVIEWROW **ppenum);", "IEnumCERTVIEWROW_GetMaxIndex_Proxy": "HRESULT WINAPI IEnumCERTVIEWROW_GetMaxIndex_Proxy(IEnumCERTVIEWROW *This,LONG *pIndex);", "ICertView_OpenConnection_Proxy": "HRESULT WINAPI ICertView_OpenConnection_Proxy(ICertView *This,const BSTR strConfig);", "ICertView_EnumCertViewColumn_Proxy": "HRESULT WINAPI ICertView_EnumCertViewColumn_Proxy(ICertView *This,LONG fResultColumn,IEnumCERTVIEWCOLUMN **ppenum);", "ICertView_GetColumnCount_Proxy": "HRESULT WINAPI ICertView_GetColumnCount_Proxy(ICertView *This,LONG fResultColumn,LONG *pcColumn);", "ICertView_GetColumnIndex_Proxy": "HRESULT WINAPI ICertView_GetColumnIndex_Proxy(ICertView *This,LONG fResultColumn,const BSTR strColumnName,LONG *pColumnIndex);", "ICertView_SetResultColumnCount_Proxy": "HRESULT WINAPI ICertView_SetResultColumnCount_Proxy(ICertView *This,LONG cResultColumn);", "ICertView_SetResultColumn_Proxy": "HRESULT WINAPI ICertView_SetResultColumn_Proxy(ICertView *This,LONG ColumnIndex);", "ICertView_SetRestriction_Proxy": "HRESULT WINAPI ICertView_SetRestriction_Proxy(ICertView *This,LONG ColumnIndex,LONG SeekOperator,LONG SortOrder,const VARIANT *pvarValue);", "ICertView_OpenView_Proxy": "HRESULT WINAPI ICertView_OpenView_Proxy(ICertView *This,IEnumCERTVIEWROW **ppenum);", "ICertView2_SetTable_Proxy": "HRESULT WINAPI ICertView2_SetTable_Proxy(ICertView2 *This,LONG Table);", "FlsAlloc": "WINBASEAPI DWORD WINAPI FlsAlloc (PFLS_CALLBACK_FUNCTION lpCallback);", "FlsGetValue": "WINBASEAPI PVOID WINAPI FlsGetValue (DWORD dwFlsIndex);", "FlsSetValue": "WINBASEAPI WINBOOL WINAPI FlsSetValue (DWORD dwFlsIndex, PVOID lpFlsData);", "FlsFree": "WINBASEAPI WINBOOL WINAPI FlsFree (DWORD dwFlsIndex);", "IsThreadAFiber": "WINBASEAPI WINBOOL WINAPI IsThreadAFiber (VOID);", "FwpmCalloutSubscribeChanges0": "DWORD WINAPI FwpmCalloutSubscribeChanges0(", "FwpmEngineOpen0": "DWORD WINAPI FwpmEngineOpen0(", "FwpmCalloutAdd0": "DWORD WINAPI FwpmCalloutAdd0(", "FwpmFilterAdd0": "DWORD WINAPI FwpmFilterAdd0(", "FwpmEngineClose0": "DWORD WINAPI FwpmEngineClose0(", "FwpmFilterSubscribeChanges0": "DWORD WINAPI FwpmFilterSubscribeChanges0(", "FwpmProviderSubscribeChanges0": "DWORD WINAPI FwpmProviderSubscribeChanges0(", "FwpmProviderContextSubscribeChanges0": "DWORD WINAPI FwpmProviderContextSubscribeChanges0(", "FwpmProviderContextAdd0": "DWORD WINAPI FwpmProviderContextAdd0(", "FwpmSubLayerSubscribeChanges0": "DWORD WINAPI FwpmSubLayerSubscribeChanges0(", "FwpmSubLayerAdd0": "DWORD WINAPI FwpmSubLayerAdd0(", "FwpmCalloutCreateEnumHandle0": "DWORD WINAPI FwpmCalloutCreateEnumHandle0(", "FwpmCalloutDeleteById0": "DWORD WINAPI FwpmCalloutDeleteById0(", "FwpmCalloutDeleteByKey0": "DWORD WINAPI FwpmCalloutDeleteByKey0(", "FwpmCalloutDestroyEnumHandle0": "DWORD WINAPI FwpmCalloutDestroyEnumHandle0(", "FwpmCalloutEnum0": "DWORD WINAPI FwpmCalloutEnum0(", "FwpmFreeMemory0": "void WINAPI FwpmFreeMemory0(", "FwpmCalloutGetById0": "DWORD WINAPI FwpmCalloutGetById0(", "FwpmCalloutGetByKey0": "DWORD WINAPI FwpmCalloutGetByKey0(", "FwpmCalloutGetSecurityInfoByKey0": "DWORD WINAPI FwpmCalloutGetSecurityInfoByKey0(", "FwpmCalloutSetSecurityInfoByKey0": "DWORD WINAPI FwpmCalloutSetSecurityInfoByKey0(", "FwpmCalloutSubscriptionsGet0": "DWORD WINAPI FwpmCalloutSubscriptionsGet0(", "FwpmCalloutUnsubscribeChanges0": "DWORD WINAPI FwpmCalloutUnsubscribeChanges0(", "FwpmEngineGetOption0": "DWORD WINAPI FwpmEngineGetOption0(", "FwpmEngineGetSecurityInfo0": "DWORD WINAPI FwpmEngineGetSecurityInfo0(", "FwpmEngineSetOption0": "DWORD WINAPI FwpmEngineSetOption0(", "IPsecSaDbSetSecurityInfo0": "DWORD WINAPI IPsecSaDbSetSecurityInfo0(", "FwpmFilterCreateEnumHandle0": "DWORD WINAPI FwpmFilterCreateEnumHandle0(", "FwpmFilterDeleteById0": "DWORD WINAPI FwpmFilterDeleteById0(", "FwpmFilterDeleteByKey0": "DWORD WINAPI FwpmFilterDeleteByKey0(", "FwpmFilterDestroyEnumHandle0": "DWORD WINAPI FwpmFilterDestroyEnumHandle0(", "FwpmFilterEnum0": "DWORD WINAPI FwpmFilterEnum0(", "FwpmFilterGetById0": "DWORD WINAPI FwpmFilterGetById0(", "FwpmFilterGetByKey0": "DWORD WINAPI FwpmFilterGetByKey0(", "FwpmFilterGetSecurityInfoByKey0": "DWORD WINAPI FwpmFilterGetSecurityInfoByKey0(", "FwpmFilterSetSecurityInfoByKey0": "DWORD WINAPI FwpmFilterSetSecurityInfoByKey0(", "FwpmFilterSubscriptionsGet0": "DWORD WINAPI FwpmFilterSubscriptionsGet0(", "FwpmFilterUnsubscribeChanges0": "DWORD WINAPI FwpmFilterUnsubscribeChanges0(", "FwpmGetAppIdFromFileName0": "DWORD WINAPI FwpmGetAppIdFromFileName0(", "FwpmIpsecTunnelAdd0": "DWORD WINAPI FwpmIpsecTunnelAdd0(", "FwpmIPsecTunnelDeleteByKey0": "DWORD WINAPI FwpmIPsecTunnelDeleteByKey0(", "FwpmLayerCreateEnumHandle0": "DWORD WINAPI FwpmLayerCreateEnumHandle0(", "FwpmLayerDestroyEnumHandle0": "DWORD WINAPI FwpmLayerDestroyEnumHandle0(", "FwpmLayerEnum0": "DWORD WINAPI FwpmLayerEnum0(", "FwpmLayerGetById0": "DWORD WINAPI FwpmLayerGetById0(", "FwpmLayerGetByKey0": "DWORD WINAPI FwpmLayerGetByKey0(", "FwpmLayerGetSecurityInfoByKey0": "DWORD WINAPI FwpmLayerGetSecurityInfoByKey0(", "FwpmLayerSetSecurityInfoByKey0": "DWORD WINAPI FwpmLayerSetSecurityInfoByKey0(", "FwpmNetEventCreateEnumHandle0": "DWORD WINAPI FwpmNetEventCreateEnumHandle0(", "FwpmNetEventDestroyEnumHandle0": "DWORD WINAPI FwpmNetEventDestroyEnumHandle0(", "FwpmNetEventEnum0": "DWORD WINAPI FwpmNetEventEnum0(", "FwpmNetEventsGetSecurityInfo0": "DWORD WINAPI FwpmNetEventsGetSecurityInfo0(", "FwpmNetEventsSetSecurityInfo0": "DWORD WINAPI FwpmNetEventsSetSecurityInfo0(", "FwpmProviderAdd0": "DWORD WINAPI FwpmProviderAdd0(", "FwpmProviderContextCreateEnumHandle0": "DWORD WINAPI FwpmProviderContextCreateEnumHandle0(", "FwpmProviderContextDeleteById0": "DWORD WINAPI FwpmProviderContextDeleteById0(", "FwpmProviderContextDeleteByKey0": "DWORD WINAPI FwpmProviderContextDeleteByKey0(", "FwpmProviderContextDestroyEnumHandle0": "DWORD WINAPI FwpmProviderContextDestroyEnumHandle0(", "FwpmProviderContextEnum0": "DWORD WINAPI FwpmProviderContextEnum0(", "FwpmProviderContextGetById0": "DWORD WINAPI FwpmProviderContextGetById0(", "FwpmProviderContextGetByKey0": "DWORD WINAPI FwpmProviderContextGetByKey0(", "FwpmProviderContextGetSecurityInfoByKey0": "DWORD WINAPI FwpmProviderContextGetSecurityInfoByKey0(", "FwpmProviderContextSetSecurityInfoByKey0": "DWORD WINAPI FwpmProviderContextSetSecurityInfoByKey0(", "FwpmProviderContextSubscriptionsGet0": "DWORD WINAPI FwpmProviderContextSubscriptionsGet0(", "FwpmProviderContextUnsubscribeChanges0": "DWORD WINAPI FwpmProviderContextUnsubscribeChanges0(", "FwpmProviderCreateEnumHandle0": "DWORD WINAPI FwpmProviderCreateEnumHandle0(", "FwpmProviderDeleteByKey0": "DWORD WINAPI FwpmProviderDeleteByKey0(", "FwpmProviderDestroyEnumHandle0": "DWORD WINAPI FwpmProviderDestroyEnumHandle0(", "FwpmProviderEnum0": "DWORD WINAPI FwpmProviderEnum0(", "FwpmProviderGetByKey0": "DWORD WINAPI FwpmProviderGetByKey0(", "FwpmProviderGetSecurityInfoByKey0": "DWORD WINAPI FwpmProviderGetSecurityInfoByKey0(", "FwpmProviderSetSecurityInfoByKey0": "DWORD WINAPI FwpmProviderSetSecurityInfoByKey0(", "FwpmProviderSubscriptionsGet0": "DWORD WINAPI FwpmProviderSubscriptionsGet0(", "FwpmProviderUnsubscribeChanges0": "DWORD WINAPI FwpmProviderUnsubscribeChanges0(", "FwpmSessionCreateEnumHandle0": "DWORD WINAPI FwpmSessionCreateEnumHandle0(", "FwpmSessionDestroyEnumHandle0": "DWORD WINAPI FwpmSessionDestroyEnumHandle0(", "FwpmSessionEnum0": "DWORD WINAPI FwpmSessionEnum0(", "FwpmSubLayerCreateEnumHandle0": "DWORD WINAPI FwpmSubLayerCreateEnumHandle0(", "FwpmSubLayerDeleteByKey0": "DWORD WINAPI FwpmSubLayerDeleteByKey0(", "FwpmSubLayerDestroyEnumHandle0": "DWORD WINAPI FwpmSubLayerDestroyEnumHandle0(", "FwpmSubLayerEnum0": "DWORD WINAPI FwpmSubLayerEnum0(", "FwpmSubLayerGetByKey0": "DWORD WINAPI FwpmSubLayerGetByKey0(", "FwpmSubLayerGetSecurityInfoByKey0": "DWORD WINAPI FwpmSubLayerGetSecurityInfoByKey0(", "FwpmSubLayerSubscriptionsGet0": "DWORD WINAPI FwpmSubLayerSubscriptionsGet0(", "FwpmSubLayerUnsubscribeChanges0": "DWORD WINAPI FwpmSubLayerUnsubscribeChanges0(", "FwpmTransactionAbort0": "DWORD WINAPI FwpmTransactionAbort0(", "FwpmTransactionBegin0": "DWORD WINAPI FwpmTransactionBegin0(", "FwpmTransactionCommit0": "DWORD WINAPI FwpmTransactionCommit0(", "IkeextGetStatistics0": "DWORD WINAPI IkeextGetStatistics0(", "IkeextSaDbGetSecurityInfo0": "DWORD WINAPI IkeextSaDbGetSecurityInfo0(", "IkeextSaCreateEnumHandle0": "DWORD WINAPI IkeextSaCreateEnumHandle0(", "IkeextSaDbSetSecurityInfo0": "DWORD WINAPI IkeextSaDbSetSecurityInfo0(", "IkeextSaDeleteById0": "DWORD WINAPI IkeextSaDeleteById0(", "IkeextSaDestroyEnumHandle0": "DWORD WINAPI IkeextSaDestroyEnumHandle0(", "IkeextSaEnum0": "DWORD WINAPI IkeextSaEnum0(", "IkeextSaGetById0": "DWORD WINAPI IkeextSaGetById0(", "IPsecGetStatistics0": "DWORD WINAPI IPsecGetStatistics0(", "IPsecSaContextAddInbound0": "DWORD WINAPI IPsecSaContextAddInbound0(", "IPsecSaContextAddOutbound0": "DWORD WINAPI IPsecSaContextAddOutbound0(", "IPsecSaContextCreate0": "DWORD WINAPI IPsecSaContextCreate0(", "IPsecSaContextCreateEnumHandle0": "DWORD WINAPI IPsecSaContextCreateEnumHandle0(", "IPsecSaContextDeleteById0": "DWORD WINAPI IPsecSaContextDeleteById0(", "IPsecSaContextDestroyEnumHandle0": "DWORD WINAPI IPsecSaContextDestroyEnumHandle0(", "FwpmEngineSetSecurityInfo0": "DWORD WINAPI FwpmEngineSetSecurityInfo0(", "IPsecSaContextEnum0": "DWORD WINAPI IPsecSaContextEnum0(", "IPsecSaContextExpire0": "DWORD WINAPI IPsecSaContextExpire0(", "IPsecSaContextGetById0": "DWORD WINAPI IPsecSaContextGetById0(", "IPsecSaContextGetSpi0": "DWORD WINAPI IPsecSaContextGetSpi0(", "IPsecSaCreateEnumHandle0": "DWORD WINAPI IPsecSaCreateEnumHandle0(", "IPsecSaDbGetSecurityInfo0": "DWORD WINAPI IPsecSaDbGetSecurityInfo0(", "IPsecSaDestroyEnumHandle0": "DWORD WINAPI IPsecSaDestroyEnumHandle0(", "IPsecSaEnum0": "DWORD WINAPI IPsecSaEnum0(", "IkeextGetStatistics1": "DWORD WINAPI IkeextGetStatistics1(", "IkeextSaEnum1": "DWORD WINAPI IkeextSaEnum1(", "IkeextSaGetById1": "DWORD WINAPI IkeextSaGetById1(", "FwpmIpsecTunnelAdd1": "DWORD WINAPI FwpmIpsecTunnelAdd1(", "IPsecDospGetSecurityInfo0": "DWORD WINAPI IPsecDospGetSecurityInfo0(", "IPsecDospGetStatistics0": "DWORD WINAPI IPsecDospGetStatistics0(", "IPsecDospSetSecurityInfo0": "DWORD WINAPI IPsecDospSetSecurityInfo0(", "IPsecDospStateCreateEnumHandle0": "DWORD WINAPI IPsecDospStateCreateEnumHandle0(", "IPsecDospStateDestroyEnumHandle0": "DWORD WINAPI IPsecDospStateDestroyEnumHandle0(", "IPsecDospStateEnum0": "DWORD WINAPI IPsecDospStateEnum0(", "IPsecGetStatistics1": "DWORD WINAPI IPsecGetStatistics1(", "IPsecSaContextAddInbound1": "DWORD WINAPI IPsecSaContextAddInbound1(", "IPsecSaContextAddOutbound1": "DWORD WINAPI IPsecSaContextAddOutbound1(", "IPsecSaContextCreate1": "DWORD WINAPI IPsecSaContextCreate1(", "FwpmNetEventEnum1": "DWORD WINAPI FwpmNetEventEnum1(", "FwpmNetEventSubscribe0": "DWORD WINAPI FwpmNetEventSubscribe0(", "FwpmNetEventSubscriptionsGet0": "DWORD WINAPI FwpmNetEventSubscriptionsGet0(", "FwpmNetEventUnsubscribe0": "DWORD WINAPI FwpmNetEventUnsubscribe0(", "FwpmProviderContextAdd1": "DWORD WINAPI FwpmProviderContextAdd1(", "FwpmProviderContextEnum1": "DWORD WINAPI FwpmProviderContextEnum1(", "FwpmProviderContextGetById1": "DWORD WINAPI FwpmProviderContextGetById1(", "FwpmProviderContextGetByKey1": "DWORD WINAPI FwpmProviderContextGetByKey1(", "FwpmSystemPortsGet0": "DWORD WINAPI FwpmSystemPortsGet0(", "FwpmSystemPortsSubscribe0": "DWORD WINAPI FwpmSystemPortsSubscribe0(", "FwpmSystemPortsUnsubscribe0": "DWORD WINAPI FwpmSystemPortsUnsubscribe0(", "IPsecSaContextEnum1": "DWORD WINAPI IPsecSaContextEnum1(", "IPsecSaContextGetById1": "DWORD WINAPI IPsecSaContextGetById1(", "IPsecSaContextGetSpi1": "DWORD WINAPI IPsecSaContextGetSpi1(", "IPsecSaContextUpdate0": "DWORD WINAPI IPsecSaContextUpdate0(", "IPsecSaEnum1": "DWORD WINAPI IPsecSaEnum1(", "IPsecSaContextSetSpi0": "DWORD WINAPI IPsecSaContextSetSpi0(", "ADsGetObject": "HRESULT WINAPI ADsGetObject (LPCWSTR lpszPathName, REFIID riid, VOID **ppObject);", "ADsBuildEnumerator": "HRESULT WINAPI ADsBuildEnumerator (IADsContainer *pADsContainer, IEnumVARIANT **ppEnumVariant);", "ADsFreeEnumerator": "HRESULT WINAPI ADsFreeEnumerator (IEnumVARIANT *pEnumVariant);", "ADsEnumerateNext": "HRESULT WINAPI ADsEnumerateNext (IEnumVARIANT *pEnumVariant, ULONG cElements, VARIANT *pvar, ULONG *pcElementsFetched);", "ADsBuildVarArrayStr": "HRESULT WINAPI ADsBuildVarArrayStr (LPWSTR *lppPathNames, DWORD dwPathNames, VARIANT *pVar);", "ADsBuildVarArrayInt": "HRESULT WINAPI ADsBuildVarArrayInt (LPDWORD lpdwObjectTypes, DWORD dwObjectTypes, VARIANT *pVar);", "ADsOpenObject": "HRESULT WINAPI ADsOpenObject (LPCWSTR lpszPathName, LPCWSTR lpszUserName, LPCWSTR lpszPassword, DWORD dwReserved, REFIID riid, void **ppObject);", "ADsGetLastError": "HRESULT WINAPI ADsGetLastError (LPDWORD lpError, LPWSTR lpErrorBuf, DWORD dwErrorBufLen, LPWSTR lpNameBuf, DWORD dwNameBufLen);", "ADsSetLastError": "VOID WINAPI ADsSetLastError (DWORD dwErr, LPCWSTR pszError, LPCWSTR pszProvider);", "ADsFreeAllErrorRecords": "VOID WINAPI ADsFreeAllErrorRecords (VOID);", "AllocADsMem": "LPVOID WINAPI AllocADsMem (DWORD cb);", "FreeADsMem": "WINBOOL WINAPI FreeADsMem (LPVOID pMem);", "ReallocADsMem": "LPVOID WINAPI ReallocADsMem (LPVOID pOldMem, DWORD cbOld, DWORD cbNew);", "AllocADsStr": "LPWSTR WINAPI AllocADsStr (LPCWSTR pStr);", "FreeADsStr": "WINBOOL WINAPI FreeADsStr (LPWSTR pStr);", "ReallocADsStr": "WINBOOL WINAPI ReallocADsStr (LPWSTR *ppStr, LPWSTR pStr);", "ADsEncodeBinaryData": "HRESULT WINAPI ADsEncodeBinaryData (PBYTE pbSrcData, DWORD dwSrcLen, LPWSTR *ppszDestData);", "ADsDecodeBinaryData": "HRESULT WINAPI ADsDecodeBinaryData (LPCWSTR szSrcData, PBYTE *ppbDestData, ULONG *pdwDestLen);", "PropVariantToAdsType": "HRESULT WINAPI PropVariantToAdsType (VARIANT *pVariant, DWORD dwNumVariant, PADSVALUE *ppAdsValues, PDWORD pdwNumValues);", "AdsTypeToPropVariant": "HRESULT WINAPI AdsTypeToPropVariant (PADSVALUE pAdsValues, DWORD dwNumValues, VARIANT *pVariant);", "AdsFreeAdsValues": "void WINAPI AdsFreeAdsValues (PADSVALUE pAdsValues, DWORD dwNumValues);", "BinarySDToSecurityDescriptor": "HRESULT WINAPI BinarySDToSecurityDescriptor (PSECURITY_DESCRIPTOR pSecurityDescriptor, VARIANT *pVarsec, LPCWSTR pszServerName, LPCWSTR userName, LPCWSTR passWord, DWORD dwFlags);", "SecurityDescriptorToBinarySD": "HRESULT WINAPI SecurityDescriptorToBinarySD (VARIANT vVarSecDes, PSECURITY_DESCRIPTOR *ppSecurityDescriptor, PDWORD pdwSDLength, LPCWSTR pszServerName, LPCWSTR userName, LPCWSTR passWord, DWORD dwFlags);", "ConvertSidToStringSidA": "WINADVAPI WINBOOL WINAPI ConvertSidToStringSidA(PSID Sid,LPSTR *StringSid);", "ConvertSidToStringSidW": "WINADVAPI WINBOOL WINAPI ConvertSidToStringSidW(PSID Sid,LPWSTR *StringSid);", "ConvertStringSidToSidA": "WINADVAPI WINBOOL WINAPI ConvertStringSidToSidA(LPCSTR StringSid,PSID *Sid);", "ConvertStringSidToSidW": "WINADVAPI WINBOOL WINAPI ConvertStringSidToSidW(LPCWSTR StringSid,PSID *Sid);", "ConvertStringSecurityDescriptorToSecurityDescriptorA": "WINADVAPI WINBOOL WINAPI ConvertStringSecurityDescriptorToSecurityDescriptorA(LPCSTR StringSecurityDescriptor,DWORD StringSDRevision,PSECURITY_DESCRIPTOR *SecurityDescriptor,PULONG SecurityDescriptorSize);", "ConvertStringSecurityDescriptorToSecurityDescriptorW": "WINADVAPI WINBOOL WINAPI ConvertStringSecurityDescriptorToSecurityDescriptorW(LPCWSTR StringSecurityDescriptor,DWORD StringSDRevision,PSECURITY_DESCRIPTOR *SecurityDescriptor,PULONG SecurityDescriptorSize);", "ConvertSecurityDescriptorToStringSecurityDescriptorA": "WINADVAPI WINBOOL WINAPI ConvertSecurityDescriptorToStringSecurityDescriptorA(PSECURITY_DESCRIPTOR SecurityDescriptor,DWORD RequestedStringSDRevision,SECURITY_INFORMATION SecurityInformation,LPSTR *StringSecurityDescriptor,PULONG StringSecurityDescriptorLen);", "ConvertSecurityDescriptorToStringSecurityDescriptorW": "WINADVAPI WINBOOL WINAPI ConvertSecurityDescriptorToStringSecurityDescriptorW(PSECURITY_DESCRIPTOR SecurityDescriptor,DWORD RequestedStringSDRevision,SECURITY_INFORMATION SecurityInformation,LPWSTR *StringSecurityDescriptor,PULONG StringSecurityDescriptorLen);", "GetCommandLineA": "WINBASEAPI LPSTR WINAPI GetCommandLineA (VOID);", "GetCommandLineW": "WINBASEAPI LPWSTR WINAPI GetCommandLineW (VOID);", "SetCurrentDirectoryA": "WINBASEAPI WINBOOL WINAPI SetCurrentDirectoryA (LPCSTR lpPathName);", "SetCurrentDirectoryW": "WINBASEAPI WINBOOL WINAPI SetCurrentDirectoryW (LPCWSTR lpPathName);", "GetCurrentDirectoryA": "WINBASEAPI DWORD WINAPI GetCurrentDirectoryA (DWORD nBufferLength, LPSTR lpBuffer);", "GetCurrentDirectoryW": "WINBASEAPI DWORD WINAPI GetCurrentDirectoryW (DWORD nBufferLength, LPWSTR lpBuffer);", "SetEnvironmentStringsW": "WINBASEAPI WINBOOL WINAPI SetEnvironmentStringsW (LPWCH NewEnvironment);", "SearchPathW": "WINBASEAPI DWORD WINAPI SearchPathW (LPCWSTR lpPath, LPCWSTR lpFileName, LPCWSTR lpExtension, DWORD nBufferLength, LPWSTR lpBuffer, LPWSTR *lpFilePart);", "NeedCurrentDirectoryForExePathA": "WINBASEAPI WINBOOL WINAPI NeedCurrentDirectoryForExePathA (LPCSTR ExeName);", "NeedCurrentDirectoryForExePathW": "WINBASEAPI WINBOOL WINAPI NeedCurrentDirectoryForExePathW (LPCWSTR ExeName);", "GetEnvironmentStrings": "WINBASEAPI LPCH WINAPI GetEnvironmentStrings (VOID);", "GetEnvironmentStringsW": "WINBASEAPI LPWCH WINAPI GetEnvironmentStringsW (VOID);", "GetStdHandle": "WINBASEAPI HANDLE WINAPI GetStdHandle (DWORD nStdHandle);", "ExpandEnvironmentStringsA": "WINBASEAPI DWORD WINAPI ExpandEnvironmentStringsA (LPCSTR lpSrc, LPSTR lpDst, DWORD nSize);", "ExpandEnvironmentStringsW": "WINBASEAPI DWORD WINAPI ExpandEnvironmentStringsW (LPCWSTR lpSrc, LPWSTR lpDst, DWORD nSize);", "FreeEnvironmentStringsA": "WINBASEAPI WINBOOL WINAPI FreeEnvironmentStringsA (LPCH penv);", "FreeEnvironmentStringsW": "WINBASEAPI WINBOOL WINAPI FreeEnvironmentStringsW (LPWCH penv);", "GetEnvironmentVariableA": "WINBASEAPI DWORD WINAPI GetEnvironmentVariableA (LPCSTR lpName, LPSTR lpBuffer, DWORD nSize);", "GetEnvironmentVariableW": "WINBASEAPI DWORD WINAPI GetEnvironmentVariableW (LPCWSTR lpName, LPWSTR lpBuffer, DWORD nSize);", "SetEnvironmentVariableA": "WINBASEAPI WINBOOL WINAPI SetEnvironmentVariableA (LPCSTR lpName, LPCSTR lpValue);", "SetEnvironmentVariableW": "WINBASEAPI WINBOOL WINAPI SetEnvironmentVariableW (LPCWSTR lpName, LPCWSTR lpValue);", "SetStdHandle": "WINBASEAPI WINBOOL WINAPI SetStdHandle (DWORD nStdHandle, HANDLE hHandle);", "SetStdHandleEx": "WINBASEAPI WINBOOL WINAPI SetStdHandleEx (DWORD nStdHandle, HANDLE hHandle, PHANDLE phPrevValue);", "Wow64DisableWow64FsRedirection": "WINBASEAPI WINBOOL WINAPI Wow64DisableWow64FsRedirection (PVOID *OldValue);", "Wow64RevertWow64FsRedirection": "WINBASEAPI WINBOOL WINAPI Wow64RevertWow64FsRedirection (PVOID OlValue);", "GetSystemWow64DirectoryA": "WINBASEAPI UINT WINAPI GetSystemWow64DirectoryA (LPSTR lpBuffer, UINT uSize);", "GetSystemWow64DirectoryW": "WINBASEAPI UINT WINAPI GetSystemWow64DirectoryW (LPWSTR lpBuffer, UINT uSize);", "Wow64GetThreadContext": "WINBASEAPI WINBOOL WINAPI Wow64GetThreadContext (HANDLE hThread, PWOW64_CONTEXT lpContext);", "Wow64SetThreadContext": "WINBASEAPI WINBOOL WINAPI Wow64SetThreadContext (HANDLE hThread, CONST WOW64_CONTEXT *lpContext);", "Wow64SuspendThread": "WINBASEAPI DWORD WINAPI Wow64SuspendThread (HANDLE hThread);", "Wow64SetThreadDefaultGuestMachine": "WINBASEAPI USHORT WINAPI Wow64SetThreadDefaultGuestMachine (USHORT Machine);", "GetSystemWow64Directory2A": "WINBASEAPI UINT WINAPI GetSystemWow64Directory2A (LPSTR lpBuffer, UINT uSize, WORD ImageFileMachineType);", "GetSystemWow64Directory2W": "WINBASEAPI UINT WINAPI GetSystemWow64Directory2W (LPWSTR lpBuffer, UINT uSize, WORD ImageFileMachineType);", "IsWow64GuestMachineSupported": "WINBASEAPI HRESULT WINAPI IsWow64GuestMachineSupported (USHORT WowGuestMachine, WINBOOL *MachineIsSupported);", "IsWow64Process": "WINBASEAPI WINBOOL WINAPI IsWow64Process (HANDLE hProcess, PBOOL Wow64Process);", "IsWow64Process2": "WINBASEAPI WINBOOL WINAPI IsWow64Process2 (HANDLE hProcess, USHORT *pProcessMachine, USHORT *pNativeMachine);", "WppBindToSiteA": "HRESULT WPPFUNC WINAPI WppBindToSiteA(HWND hwnd,LPCSTR sSiteName,LPCSTR sURL,REFIID riid,DWORD dwFlag,DWORD dwReserved,PVOID *ppvUnk);", "WppListSitesA": "HRESULT WPPFUNC WINAPI WppListSitesA(LPDWORD pdwSitesBufLen,LPWPSITEINFOA pSitesBuffer,LPDWORD pdwNumSites);", "WppDeleteSiteA": "HRESULT WPPFUNC WINAPI WppDeleteSiteA(LPCSTR sSiteName);", "WppBindToSiteW": "HRESULT WPPFUNC WINAPI WppBindToSiteW(HWND hwnd,LPCWSTR sSiteName,LPCWSTR sURL,REFIID riid,DWORD dwFlag,DWORD dwReserved,PVOID *ppvUnk);", "WppListSitesW": "HRESULT WPPFUNC WINAPI WppListSitesW(LPDWORD pdwSitesBufLen,LPWPSITEINFOW pSitesBuffer,LPDWORD pdwNumSites);", "WppDeleteSiteW": "HRESULT WPPFUNC WINAPI WppDeleteSiteW(LPCWSTR sSiteName);", "joyGetPosEx": "WINMMAPI MMRESULT WINAPI joyGetPosEx(UINT uJoyID, LPJOYINFOEX pji);", "joyGetNumDevs": "WINMMAPI UINT WINAPI joyGetNumDevs(void);", "joyGetDevCapsA": "WINMMAPI MMRESULT WINAPI joyGetDevCapsA(UINT_PTR uJoyID, LPJOYCAPSA pjc, UINT cbjc);", "joyGetDevCapsW": "WINMMAPI MMRESULT WINAPI joyGetDevCapsW(UINT_PTR uJoyID, LPJOYCAPSW pjc, UINT cbjc);", "joyGetPos": "WINMMAPI MMRESULT WINAPI joyGetPos(UINT uJoyID, LPJOYINFO pji);", "joyGetThreshold": "WINMMAPI MMRESULT WINAPI joyGetThreshold(UINT uJoyID, LPUINT puThreshold);", "joyReleaseCapture": "WINMMAPI MMRESULT WINAPI joyReleaseCapture(UINT uJoyID);", "joySetCapture": "WINMMAPI MMRESULT WINAPI joySetCapture(HWND hwnd, UINT uJoyID, UINT uPeriod, WINBOOL fChanged);", "joySetThreshold": "WINMMAPI MMRESULT WINAPI joySetThreshold(UINT uJoyID, UINT uThreshold);", "joyConfigChanged": "WINMMAPI MMRESULT WINAPI joyConfigChanged(DWORD dwFlags);", "IsProcessInJob": "WINBASEAPI WINBOOL WINAPI IsProcessInJob (HANDLE ProcessHandle, HANDLE JobHandle, PBOOL Result);", "TraceRegisterExA": "DWORD WINAPI TraceRegisterExA(LPCSTR lpszCallerName,DWORD dwFlags);", "TraceDeregisterA": "DWORD WINAPI TraceDeregisterA(DWORD dwTraceID);", "TraceDeregisterExA": "DWORD WINAPI TraceDeregisterExA(DWORD dwTraceID,DWORD dwFlags);", "TraceGetConsoleA": "DWORD WINAPI TraceGetConsoleA(DWORD dwTraceID,LPHANDLE lphConsole);", "TraceVprintfExA": "DWORD WINAPI TraceVprintfExA(DWORD dwTraceID,DWORD dwFlags,LPCSTR lpszFormat,va_list arglist);", "TracePutsExA": "DWORD WINAPI TracePutsExA(DWORD dwTraceID,DWORD dwFlags,LPCSTR lpszString);", "TraceDumpExA": "DWORD WINAPI TraceDumpExA(DWORD dwTraceID,DWORD dwFlags,LPBYTE lpbBytes,DWORD dwByteCount,DWORD dwGroupSize,WINBOOL bAddressPrefix,LPCSTR lpszPrefix);", "TraceRegisterExW": "DWORD WINAPI TraceRegisterExW(LPCWSTR lpszCallerName,DWORD dwFlags);", "TraceDeregisterW": "DWORD WINAPI TraceDeregisterW(DWORD dwTraceID);", "TraceDeregisterExW": "DWORD WINAPI TraceDeregisterExW(DWORD dwTraceID,DWORD dwFlags);", "TraceGetConsoleW": "DWORD WINAPI TraceGetConsoleW(DWORD dwTraceID,LPHANDLE lphConsole);", "TraceVprintfExW": "DWORD WINAPI TraceVprintfExW(DWORD dwTraceID,DWORD dwFlags,LPCWSTR lpszFormat,va_list arglist);", "TracePutsExW": "DWORD WINAPI TracePutsExW(DWORD dwTraceID,DWORD dwFlags,LPCWSTR lpszString);", "TraceDumpExW": "DWORD WINAPI TraceDumpExW(DWORD dwTraceID,DWORD dwFlags,LPBYTE lpbBytes,DWORD dwByteCount,DWORD dwGroupSize,WINBOOL bAddressPrefix,LPCWSTR lpszPrefix);", "LogErrorA": "VOID WINAPI LogErrorA(DWORD dwMessageId,DWORD cNumberOfSubStrings,LPSTR *plpwsSubStrings,DWORD dwErrorCode);", "LogEventA": "VOID WINAPI LogEventA(DWORD wEventType,DWORD dwMessageId,DWORD cNumberOfSubStrings,LPSTR *plpwsSubStrings);", "QueueWorkItem": "DWORD WINAPI QueueWorkItem(WORKERFUNCTION functionptr,PVOID context,WINBOOL serviceinalertablethread);", "SetIoCompletionProc": "DWORD WINAPI SetIoCompletionProc(HANDLE FileHandle,LPOVERLAPPED_COMPLETION_ROUTINE CompletionProc);", "MprSetupProtocolEnum": "DWORD WINAPI MprSetupProtocolEnum(DWORD dwTransportId,LPBYTE *lplpBuffer,LPDWORD lpdwEntriesRead);", "MprSetupProtocolFree": "DWORD WINAPI MprSetupProtocolFree(LPVOID lpBuffer);", "CreateWaitEvent": "PWT_EVENT_ENTRY WINAPI CreateWaitEvent(HANDLE pEvent OPT1_1,LPSECURITY_ATTRIBUTES lpEventAttributes OPT1_2,WINBOOL bManualReset,WINBOOL bInitialState,LPCTSTR lpName OPT1_2,WINBOOL bHighPriority,WORKERFUNCTION pFunction OPT2_1,PVOID pContext OPT2_1,DWORD dwContextSz OPT2_1,WINBOOL bRunInServerContext OPT2_1);", "CreateWaitEventBinding": "PWT_EVENT_BINDING WINAPI CreateWaitEventBinding(PWT_EVENT_ENTRY pee,WORKERFUNCTION pFunction,PVOID pContext,DWORD dwContextSz,WINBOOL bRunInServerContext);", "CreateWaitTimer": "PWT_TIMER_ENTRY WINAPI CreateWaitTimer(WORKERFUNCTION pFunction,PVOID pContext,DWORD dwContextSz,WINBOOL bRunInServerContext);", "DeRegisterWaitEventBindingSelf": "DWORD WINAPI DeRegisterWaitEventBindingSelf(PWT_EVENT_BINDING pwiWorkItem);", "DeRegisterWaitEventBinding": "DWORD WINAPI DeRegisterWaitEventBinding(PWT_EVENT_BINDING pwiWorkItem);", "DeRegisterWaitEventsTimers": "DWORD WINAPI DeRegisterWaitEventsTimers (PLIST_ENTRY pLEvents,PLIST_ENTRY pLTimers);", "DeRegisterWaitEventsTimersSelf": "DWORD WINAPI DeRegisterWaitEventsTimersSelf(PLIST_ENTRY pLEvents,PLIST_ENTRY pLTimers);", "RegisterWaitEventBinding": "DWORD WINAPI RegisterWaitEventBinding(PWT_EVENT_BINDING pwiWorkItem);", "RegisterWaitEventsTimers": "DWORD WINAPI RegisterWaitEventsTimers(PLIST_ENTRY pLEventsToAdd,PLIST_ENTRY pLTimersToAdd);", "UpdateWaitTimer": "DWORD WINAPI UpdateWaitTimer(PWT_TIMER_ENTRY pte,LONGLONG *time);", "WTFree": "VOID WINAPI WTFree (PVOID ptr);", "WTFreeEvent": "VOID WINAPI WTFreeEvent(PWT_EVENT_ENTRY peeEvent);", "WTFreeTimer": "VOID WINAPI WTFreeTimer(PWT_TIMER_ENTRY pteTimer);", "DebugPrintWaitWorkerThreads": "VOID WINAPI DebugPrintWaitWorkerThreads (DWORD dwDebugLevel);", "IAccessControl_GrantAccessRights_Proxy": "HRESULT WINAPI IAccessControl_GrantAccessRights_Proxy(IAccessControl *This,PACTRL_ACCESSW pAccessList);", "IAccessControl_SetAccessRights_Proxy": "HRESULT WINAPI IAccessControl_SetAccessRights_Proxy(IAccessControl *This,PACTRL_ACCESSW pAccessList);", "IAccessControl_SetOwner_Proxy": "HRESULT WINAPI IAccessControl_SetOwner_Proxy(IAccessControl *This,PTRUSTEEW pOwner,PTRUSTEEW pGroup);", "IAccessControl_RevokeAccessRights_Proxy": "HRESULT WINAPI IAccessControl_RevokeAccessRights_Proxy(IAccessControl *This,LPWSTR lpProperty,ULONG cTrustees,TRUSTEEW prgTrustees[]);", "IAccessControl_GetAllAccessRights_Proxy": "HRESULT WINAPI IAccessControl_GetAllAccessRights_Proxy(IAccessControl *This,LPWSTR lpProperty,PACTRL_ACCESSW_ALLOCATE_ALL_NODES *ppAccessList,PTRUSTEEW *ppOwner,PTRUSTEEW *ppGroup);", "IAccessControl_IsAccessAllowed_Proxy": "HRESULT WINAPI IAccessControl_IsAccessAllowed_Proxy(IAccessControl *This,PTRUSTEEW pTrustee,LPWSTR lpProperty,ACCESS_RIGHTS AccessRights,WINBOOL *pfAccessAllowed);", "IAuditControl_GrantAuditRights_Proxy": "HRESULT WINAPI IAuditControl_GrantAuditRights_Proxy(IAuditControl *This,PACTRL_AUDITW pAuditList);", "IAuditControl_SetAuditRights_Proxy": "HRESULT WINAPI IAuditControl_SetAuditRights_Proxy(IAuditControl *This,PACTRL_AUDITW pAuditList);", "IAuditControl_RevokeAuditRights_Proxy": "HRESULT WINAPI IAuditControl_RevokeAuditRights_Proxy(IAuditControl *This,LPWSTR lpProperty,ULONG cTrustees,TRUSTEEW prgTrustees[]);", "IAuditControl_GetAllAuditRights_Proxy": "HRESULT WINAPI IAuditControl_GetAllAuditRights_Proxy(IAuditControl *This,LPWSTR lpProperty,PACTRL_AUDITW *ppAuditList);", "IAuditControl_IsAccessAudited_Proxy": "HRESULT WINAPI IAuditControl_IsAccessAudited_Proxy(IAuditControl *This,PTRUSTEEW pTrustee,ACCESS_RIGHTS AuditRights,WINBOOL *pfAccessAudited);", "IEnumItemProperties_Next_Proxy": "HRESULT WINAPI IEnumItemProperties_Next_Proxy(IEnumItemProperties *This,ULONG celt,ITEMPROP *rgelt,ULONG *pceltFetched);", "IEnumItemProperties_Skip_Proxy": "HRESULT WINAPI IEnumItemProperties_Skip_Proxy(IEnumItemProperties *This,ULONG celt);", "IEnumItemProperties_Reset_Proxy": "HRESULT WINAPI IEnumItemProperties_Reset_Proxy(IEnumItemProperties *This);", "IEnumItemProperties_Clone_Proxy": "HRESULT WINAPI IEnumItemProperties_Clone_Proxy(IEnumItemProperties *This,IEnumItemProperties **ppenum);", "IEnumItemProperties_GetCount_Proxy": "HRESULT WINAPI IEnumItemProperties_GetCount_Proxy(IEnumItemProperties *This,ULONG *pnCount);", "ISubscriptionItem_GetCookie_Proxy": "HRESULT WINAPI ISubscriptionItem_GetCookie_Proxy(ISubscriptionItem *This,SUBSCRIPTIONCOOKIE *pCookie);", "ISubscriptionItem_GetSubscriptionItemInfo_Proxy": "HRESULT WINAPI ISubscriptionItem_GetSubscriptionItemInfo_Proxy(ISubscriptionItem *This,SUBSCRIPTIONITEMINFO *pSubscriptionItemInfo);", "ISubscriptionItem_SetSubscriptionItemInfo_Proxy": "HRESULT WINAPI ISubscriptionItem_SetSubscriptionItemInfo_Proxy(ISubscriptionItem *This,const SUBSCRIPTIONITEMINFO *pSubscriptionItemInfo);", "ISubscriptionItem_ReadProperties_Proxy": "HRESULT WINAPI ISubscriptionItem_ReadProperties_Proxy(ISubscriptionItem *This,ULONG nCount,const LPCWSTR rgwszName[],VARIANT rgValue[]);", "ISubscriptionItem_WriteProperties_Proxy": "HRESULT WINAPI ISubscriptionItem_WriteProperties_Proxy(ISubscriptionItem *This,ULONG nCount,const LPCWSTR rgwszName[],const VARIANT rgValue[]);", "ISubscriptionItem_EnumProperties_Proxy": "HRESULT WINAPI ISubscriptionItem_EnumProperties_Proxy(ISubscriptionItem *This,IEnumItemProperties **ppEnumItemProperties);", "ISubscriptionItem_NotifyChanged_Proxy": "HRESULT WINAPI ISubscriptionItem_NotifyChanged_Proxy(ISubscriptionItem *This);", "IEnumSubscription_Next_Proxy": "HRESULT WINAPI IEnumSubscription_Next_Proxy(IEnumSubscription *This,ULONG celt,SUBSCRIPTIONCOOKIE *rgelt,ULONG *pceltFetched);", "IEnumSubscription_Skip_Proxy": "HRESULT WINAPI IEnumSubscription_Skip_Proxy(IEnumSubscription *This,ULONG celt);", "IEnumSubscription_Reset_Proxy": "HRESULT WINAPI IEnumSubscription_Reset_Proxy(IEnumSubscription *This);", "IEnumSubscription_Clone_Proxy": "HRESULT WINAPI IEnumSubscription_Clone_Proxy(IEnumSubscription *This,IEnumSubscription **ppenum);", "IEnumSubscription_GetCount_Proxy": "HRESULT WINAPI IEnumSubscription_GetCount_Proxy(IEnumSubscription *This,ULONG *pnCount);", "ISubscriptionMgr_DeleteSubscription_Proxy": "HRESULT WINAPI ISubscriptionMgr_DeleteSubscription_Proxy(ISubscriptionMgr *This,LPCWSTR pwszURL,HWND hwnd);", "ISubscriptionMgr_UpdateSubscription_Proxy": "HRESULT WINAPI ISubscriptionMgr_UpdateSubscription_Proxy(ISubscriptionMgr *This,LPCWSTR pwszURL);", "ISubscriptionMgr_UpdateAll_Proxy": "HRESULT WINAPI ISubscriptionMgr_UpdateAll_Proxy(ISubscriptionMgr *This);", "ISubscriptionMgr_IsSubscribed_Proxy": "HRESULT WINAPI ISubscriptionMgr_IsSubscribed_Proxy(ISubscriptionMgr *This,LPCWSTR pwszURL,WINBOOL *pfSubscribed);", "ISubscriptionMgr_GetSubscriptionInfo_Proxy": "HRESULT WINAPI ISubscriptionMgr_GetSubscriptionInfo_Proxy(ISubscriptionMgr *This,LPCWSTR pwszURL,SUBSCRIPTIONINFO *pInfo);", "ISubscriptionMgr_GetDefaultInfo_Proxy": "HRESULT WINAPI ISubscriptionMgr_GetDefaultInfo_Proxy(ISubscriptionMgr *This,SUBSCRIPTIONTYPE subType,SUBSCRIPTIONINFO *pInfo);", "ISubscriptionMgr_ShowSubscriptionProperties_Proxy": "HRESULT WINAPI ISubscriptionMgr_ShowSubscriptionProperties_Proxy(ISubscriptionMgr *This,LPCWSTR pwszURL,HWND hwnd);", "ISubscriptionMgr_CreateSubscription_Proxy": "HRESULT WINAPI ISubscriptionMgr_CreateSubscription_Proxy(ISubscriptionMgr *This,HWND hwnd,LPCWSTR pwszURL,LPCWSTR pwszFriendlyName,DWORD dwFlags,SUBSCRIPTIONTYPE subsType,SUBSCRIPTIONINFO *pInfo);", "ISubscriptionMgr2_GetItemFromURL_Proxy": "HRESULT WINAPI ISubscriptionMgr2_GetItemFromURL_Proxy(ISubscriptionMgr2 *This,LPCWSTR pwszURL,ISubscriptionItem **ppSubscriptionItem);", "ISubscriptionMgr2_GetItemFromCookie_Proxy": "HRESULT WINAPI ISubscriptionMgr2_GetItemFromCookie_Proxy(ISubscriptionMgr2 *This,const SUBSCRIPTIONCOOKIE *pSubscriptionCookie,ISubscriptionItem **ppSubscriptionItem);", "ISubscriptionMgr2_GetSubscriptionRunState_Proxy": "HRESULT WINAPI ISubscriptionMgr2_GetSubscriptionRunState_Proxy(ISubscriptionMgr2 *This,DWORD dwNumCookies,const SUBSCRIPTIONCOOKIE *pCookies,DWORD *pdwRunState);", "ISubscriptionMgr2_EnumSubscriptions_Proxy": "HRESULT WINAPI ISubscriptionMgr2_EnumSubscriptions_Proxy(ISubscriptionMgr2 *This,DWORD dwFlags,IEnumSubscription **ppEnumSubscriptions);", "ISubscriptionMgr2_UpdateItems_Proxy": "HRESULT WINAPI ISubscriptionMgr2_UpdateItems_Proxy(ISubscriptionMgr2 *This,DWORD dwFlags,DWORD dwNumCookies,const SUBSCRIPTIONCOOKIE *pCookies);", "ISubscriptionMgr2_AbortItems_Proxy": "HRESULT WINAPI ISubscriptionMgr2_AbortItems_Proxy(ISubscriptionMgr2 *This,DWORD dwNumCookies,const SUBSCRIPTIONCOOKIE *pCookies);", "ISubscriptionMgr2_AbortAll_Proxy": "HRESULT WINAPI ISubscriptionMgr2_AbortAll_Proxy(ISubscriptionMgr2 *This);", "IAccessor_RemoteAddRefAccessor_Proxy": "HRESULT WINAPI IAccessor_RemoteAddRefAccessor_Proxy(IAccessor *This,HACCESSOR hAccessor,DBREFCOUNT *pcRefCount,IErrorInfo **ppErrorInfoRem);", "IAccessor_RemoteCreateAccessor_Proxy": "HRESULT WINAPI IAccessor_RemoteCreateAccessor_Proxy(IAccessor *This,DBACCESSORFLAGS dwAccessorFlags,DBCOUNTITEM cBindings,DBBINDING *rgBindings,DBLENGTH cbRowSize,HACCESSOR *phAccessor,DBBINDSTATUS *rgStatus,IErrorInfo **ppErrorInfoRem);", "IAccessor_RemoteGetBindings_Proxy": "HRESULT WINAPI IAccessor_RemoteGetBindings_Proxy(IAccessor *This,HACCESSOR hAccessor,DBACCESSORFLAGS *pdwAccessorFlags,DBCOUNTITEM *pcBindings,DBBINDING **prgBindings,IErrorInfo **ppErrorInfoRem);", "IAccessor_RemoteReleaseAccessor_Proxy": "HRESULT WINAPI IAccessor_RemoteReleaseAccessor_Proxy(IAccessor *This,HACCESSOR hAccessor,DBREFCOUNT *pcRefCount,IErrorInfo **ppErrorInfoRem);", "IRowset_AddRefRows_Proxy": "HRESULT WINAPI IRowset_AddRefRows_Proxy(IRowset *This,DBCOUNTITEM cRows,const HROW rghRows[],DBREFCOUNT rgRefCounts[],DBROWSTATUS rgRowStatus[]);", "IRowset_GetData_Proxy": "HRESULT WINAPI IRowset_GetData_Proxy(IRowset *This,HROW hRow,HACCESSOR hAccessor,void *pData);", "IRowset_GetNextRows_Proxy": "HRESULT WINAPI IRowset_GetNextRows_Proxy(IRowset *This,HCHAPTER hReserved,DBROWOFFSET lRowsOffset,DBROWCOUNT cRows,DBCOUNTITEM *pcRowsObtained,HROW **prghRows);", "IRowset_ReleaseRows_Proxy": "HRESULT WINAPI IRowset_ReleaseRows_Proxy(IRowset *This,DBCOUNTITEM cRows,const HROW rghRows[],DBROWOPTIONS rgRowOptions[],DBREFCOUNT rgRefCounts[],DBROWSTATUS rgRowStatus[]);", "IRowset_RestartPosition_Proxy": "HRESULT WINAPI IRowset_RestartPosition_Proxy(IRowset *This,HCHAPTER hReserved);", "IRowsetInfo_RemoteGetProperties_Proxy": "HRESULT WINAPI IRowsetInfo_RemoteGetProperties_Proxy(IRowsetInfo *This,ULONG cPropertyIDSets,const DBPROPIDSET *rgPropertyIDSets,ULONG *pcPropertySets,DBPROPSET **prgPropertySets,IErrorInfo **ppErrorInfoRem);", "IRowsetInfo_RemoteGetReferencedRowset_Proxy": "HRESULT WINAPI IRowsetInfo_RemoteGetReferencedRowset_Proxy(IRowsetInfo *This,DBORDINAL iOrdinal,REFIID riid,IUnknown **ppReferencedRowset,IErrorInfo **ppErrorInfoRem);", "IRowsetInfo_RemoteGetSpecification_Proxy": "HRESULT WINAPI IRowsetInfo_RemoteGetSpecification_Proxy(IRowsetInfo *This,REFIID riid,IUnknown **ppSpecification,IErrorInfo **ppErrorInfoRem);", "IRowsetLocate_Compare_Proxy": "HRESULT WINAPI IRowsetLocate_Compare_Proxy(IRowsetLocate *This,HCHAPTER hReserved,DBBKMARK cbBookmark1,const BYTE *pBookmark1,DBBKMARK cbBookmark2,const BYTE *pBookmark2,DBCOMPARE *pComparison);", "IRowsetLocate_GetRowsAt_Proxy": "HRESULT WINAPI IRowsetLocate_GetRowsAt_Proxy(IRowsetLocate *This,HWATCHREGION hReserved1,HCHAPTER hReserved2,DBBKMARK cbBookmark,const BYTE *pBookmark,DBROWOFFSET lRowsOffset,DBROWCOUNT cRows,DBCOUNTITEM *pcRowsObtained,HROW **prghRows);", "IRowsetLocate_GetRowsByBookmark_Proxy": "HRESULT WINAPI IRowsetLocate_GetRowsByBookmark_Proxy(IRowsetLocate *This,HCHAPTER hReserved,DBCOUNTITEM cRows,const DBBKMARK rgcbBookmarks[],const BYTE *rgpBookmarks[],HROW rghRows[],DBROWSTATUS rgRowStatus[]);", "IRowsetLocate_Hash_Proxy": "HRESULT WINAPI IRowsetLocate_Hash_Proxy(IRowsetLocate *This,HCHAPTER hReserved,DBBKMARK cBookmarks,const DBBKMARK rgcbBookmarks[],const BYTE *rgpBookmarks[],DBHASHVALUE rgHashedValues[],DBROWSTATUS rgBookmarkStatus[]);", "IRowsetResynch_GetVisibleData_Proxy": "HRESULT WINAPI IRowsetResynch_GetVisibleData_Proxy(IRowsetResynch *This,HROW hRow,HACCESSOR hAccessor,void *pData);", "IRowsetResynch_ResynchRows_Proxy": "HRESULT WINAPI IRowsetResynch_ResynchRows_Proxy(IRowsetResynch *This,DBCOUNTITEM cRows,const HROW rghRows[],DBCOUNTITEM *pcRowsResynched,HROW **prghRowsResynched,DBROWSTATUS **prgRowStatus);", "IRowsetScroll_GetApproximatePosition_Proxy": "HRESULT WINAPI IRowsetScroll_GetApproximatePosition_Proxy(IRowsetScroll *This,HCHAPTER hReserved,DBBKMARK cbBookmark,const BYTE *pBookmark,DBCOUNTITEM *pulPosition,DBCOUNTITEM *pcRows);", "IRowsetScroll_GetRowsAtRatio_Proxy": "HRESULT WINAPI IRowsetScroll_GetRowsAtRatio_Proxy(IRowsetScroll *This,HWATCHREGION hReserved1,HCHAPTER hReserved2,DBCOUNTITEM ulNumerator,DBCOUNTITEM ulDenominator,DBROWCOUNT cRows,DBCOUNTITEM *pcRowsObtained,HROW **prghRows);", "IChapteredRowset_RemoteAddRefChapter_Proxy": "HRESULT WINAPI IChapteredRowset_RemoteAddRefChapter_Proxy(IChapteredRowset *This,HCHAPTER hChapter,DBREFCOUNT *pcRefCount,IErrorInfo **ppErrorInfoRem);", "IChapteredRowset_RemoteReleaseChapter_Proxy": "HRESULT WINAPI IChapteredRowset_RemoteReleaseChapter_Proxy(IChapteredRowset *This,HCHAPTER hChapter,DBREFCOUNT *pcRefCount,IErrorInfo **ppErrorInfoRem);", "IRowsetFind_FindNextRow_Proxy": "HRESULT WINAPI IRowsetFind_FindNextRow_Proxy(IRowsetFind *This,HCHAPTER hChapter,HACCESSOR hAccessor,void *pFindValue,DBCOMPAREOP CompareOp,DBBKMARK cbBookmark,const BYTE *pBookmark,DBROWOFFSET lRowsOffset,DBROWCOUNT cRows,DBCOUNTITEM *pcRowsObtained,HROW **prghRows);", "IRowPosition_RemoteClearRowPosition_Proxy": "HRESULT WINAPI IRowPosition_RemoteClearRowPosition_Proxy(IRowPosition *This,IErrorInfo **ppErrorInfoRem);", "IRowPosition_RemoteGetRowPosition_Proxy": "HRESULT WINAPI IRowPosition_RemoteGetRowPosition_Proxy(IRowPosition *This,HCHAPTER *phChapter,HROW *phRow,DBPOSITIONFLAGS *pdwPositionFlags,IErrorInfo **ppErrorInfoRem);", "IRowPosition_RemoteGetRowset_Proxy": "HRESULT WINAPI IRowPosition_RemoteGetRowset_Proxy(IRowPosition *This,REFIID riid,IUnknown **ppRowset,IErrorInfo **ppErrorInfoRem);", "IRowPosition_RemoteInitialize_Proxy": "HRESULT WINAPI IRowPosition_RemoteInitialize_Proxy(IRowPosition *This,IUnknown *pRowset,IErrorInfo **ppErrorInfoRem);", "IRowPosition_RemoteSetRowPosition_Proxy": "HRESULT WINAPI IRowPosition_RemoteSetRowPosition_Proxy(IRowPosition *This,HCHAPTER hChapter,HROW hRow,DBPOSITIONFLAGS dwPositionFlags,IErrorInfo **ppErrorInfoRem);", "IRowPositionChange_RemoteOnRowPositionChange_Proxy": "HRESULT WINAPI IRowPositionChange_RemoteOnRowPositionChange_Proxy(IRowPositionChange *This,DBREASON eReason,DBEVENTPHASE ePhase,WINBOOL fCantDeny,IErrorInfo **ppErrorInfoRem);", "IViewRowset_RemoteGetSpecification_Proxy": "HRESULT WINAPI IViewRowset_RemoteGetSpecification_Proxy(IViewRowset *This,REFIID riid,IUnknown **ppObject,IErrorInfo **ppErrorInfoRem);", "IViewRowset_RemoteOpenViewRowset_Proxy": "HRESULT WINAPI IViewRowset_RemoteOpenViewRowset_Proxy(IViewRowset *This,IUnknown *pUnkOuter,REFIID riid,IUnknown **ppRowset,IErrorInfo **ppErrorInfoRem);", "IViewChapter_RemoteGetSpecification_Proxy": "HRESULT WINAPI IViewChapter_RemoteGetSpecification_Proxy(IViewChapter *This,REFIID riid,IUnknown **ppRowset,IErrorInfo **ppErrorInfoRem);", "IViewChapter_RemoteOpenViewChapter_Proxy": "HRESULT WINAPI IViewChapter_RemoteOpenViewChapter_Proxy(IViewChapter *This,HCHAPTER hSource,HCHAPTER *phViewChapter,IErrorInfo **ppErrorInfoRem);", "IViewSort_RemoteGetSortOrder_Proxy": "HRESULT WINAPI IViewSort_RemoteGetSortOrder_Proxy(IViewSort *This,DBORDINAL *pcValues,DBORDINAL **prgColumns,DBSORT **prgOrders,IErrorInfo **ppErrorInfoRem);", "IViewSort_RemoteSetSortOrder_Proxy": "HRESULT WINAPI IViewSort_RemoteSetSortOrder_Proxy(IViewSort *This,DBORDINAL cValues,const DBORDINAL *rgColumns,const DBSORT *rgOrders,IErrorInfo **ppErrorInfoRem);", "IViewFilter_GetFilter_Proxy": "HRESULT WINAPI IViewFilter_GetFilter_Proxy(IViewFilter *This,HACCESSOR hAccessor,DBCOUNTITEM *pcRows,DBCOMPAREOP *pCompareOps[],void *pCriteriaData);", "IViewFilter_RemoteGetFilterBindings_Proxy": "HRESULT WINAPI IViewFilter_RemoteGetFilterBindings_Proxy(IViewFilter *This,DBCOUNTITEM *pcBindings,DBBINDING **prgBindings,IErrorInfo **ppErrorInfoRem);", "IViewFilter_SetFilter_Proxy": "HRESULT WINAPI IViewFilter_SetFilter_Proxy(IViewFilter *This,HACCESSOR hAccessor,DBCOUNTITEM cRows,DBCOMPAREOP CompareOps[],void *pCriteriaData);", "IRowsetView_RemoteCreateView_Proxy": "HRESULT WINAPI IRowsetView_RemoteCreateView_Proxy(IRowsetView *This,IUnknown *pUnkOuter,REFIID riid,IUnknown **ppView,IErrorInfo **ppErrorInfoRem);", "IRowsetView_RemoteGetView_Proxy": "HRESULT WINAPI IRowsetView_RemoteGetView_Proxy(IRowsetView *This,HCHAPTER hChapter,REFIID riid,HCHAPTER *phChapterSource,IUnknown **ppView,IErrorInfo **ppErrorInfoRem);", "IRowsetExactScroll_GetExactPosition_Proxy": "HRESULT WINAPI IRowsetExactScroll_GetExactPosition_Proxy(IRowsetExactScroll *This,HCHAPTER hChapter,DBBKMARK cbBookmark,const BYTE *pBookmark,DBCOUNTITEM *pulPosition,DBCOUNTITEM *pcRows);", "IRowsetChange_DeleteRows_Proxy": "HRESULT WINAPI IRowsetChange_DeleteRows_Proxy(IRowsetChange *This,HCHAPTER hReserved,DBCOUNTITEM cRows,const HROW rghRows[],DBROWSTATUS rgRowStatus[]);", "IRowsetChange_SetData_Proxy": "HRESULT WINAPI IRowsetChange_SetData_Proxy(IRowsetChange *This,HROW hRow,HACCESSOR hAccessor,void *pData);", "IRowsetChange_InsertRow_Proxy": "HRESULT WINAPI IRowsetChange_InsertRow_Proxy(IRowsetChange *This,HCHAPTER hReserved,HACCESSOR hAccessor,void *pData,HROW *phRow);", "IRowsetUpdate_GetOriginalData_Proxy": "HRESULT WINAPI IRowsetUpdate_GetOriginalData_Proxy(IRowsetUpdate *This,HROW hRow,HACCESSOR hAccessor,void *pData);", "IRowsetUpdate_GetPendingRows_Proxy": "HRESULT WINAPI IRowsetUpdate_GetPendingRows_Proxy(IRowsetUpdate *This,HCHAPTER hReserved,DBPENDINGSTATUS dwRowStatus,DBCOUNTITEM *pcPendingRows,HROW **prgPendingRows,DBPENDINGSTATUS **prgPendingStatus);", "IRowsetUpdate_GetRowStatus_Proxy": "HRESULT WINAPI IRowsetUpdate_GetRowStatus_Proxy(IRowsetUpdate *This,HCHAPTER hReserved,DBCOUNTITEM cRows,const HROW rghRows[],DBPENDINGSTATUS rgPendingStatus[]);", "IRowsetUpdate_Undo_Proxy": "HRESULT WINAPI IRowsetUpdate_Undo_Proxy(IRowsetUpdate *This,HCHAPTER hReserved,DBCOUNTITEM cRows,const HROW rghRows[],DBCOUNTITEM *pcRowsUndone,HROW **prgRowsUndone,DBROWSTATUS **prgRowStatus);", "IRowsetUpdate_Update_Proxy": "HRESULT WINAPI IRowsetUpdate_Update_Proxy(IRowsetUpdate *This,HCHAPTER hReserved,DBCOUNTITEM cRows,const HROW rghRows[],DBCOUNTITEM *pcRows,HROW **prgRows,DBROWSTATUS **prgRowStatus);", "IRowsetIdentity_RemoteIsSameRow_Proxy": "HRESULT WINAPI IRowsetIdentity_RemoteIsSameRow_Proxy(IRowsetIdentity *This,HROW hThisRow,HROW hThatRow,IErrorInfo **ppErrorInfoRem);", "IRowsetNotify_RemoteOnFieldChange_Proxy": "HRESULT WINAPI IRowsetNotify_RemoteOnFieldChange_Proxy(IRowsetNotify *This,IRowset *pRowset,HROW hRow,DBORDINAL cColumns,DBORDINAL *rgColumns,DBREASON eReason,DBEVENTPHASE ePhase,WINBOOL fCantDeny);", "IRowsetNotify_RemoteOnRowChange_Proxy": "HRESULT WINAPI IRowsetNotify_RemoteOnRowChange_Proxy(IRowsetNotify *This,IRowset *pRowset,DBCOUNTITEM cRows,const HROW *rghRows,DBREASON eReason,DBEVENTPHASE ePhase,WINBOOL fCantDeny);", "IRowsetNotify_RemoteOnRowsetChange_Proxy": "HRESULT WINAPI IRowsetNotify_RemoteOnRowsetChange_Proxy(IRowsetNotify *This,IRowset *pRowset,DBREASON eReason,DBEVENTPHASE ePhase,WINBOOL fCantDeny);", "IRowsetIndex_GetIndexInfo_Proxy": "HRESULT WINAPI IRowsetIndex_GetIndexInfo_Proxy(IRowsetIndex *This,DBORDINAL *pcKeyColumns,DBINDEXCOLUMNDESC **prgIndexColumnDesc,ULONG *pcIndexPropertySets,DBPROPSET **prgIndexPropertySets);", "IRowsetIndex_Seek_Proxy": "HRESULT WINAPI IRowsetIndex_Seek_Proxy(IRowsetIndex *This,HACCESSOR hAccessor,DBORDINAL cKeyValues,void *pData,DBSEEK dwSeekOptions);", "IRowsetIndex_SetRange_Proxy": "HRESULT WINAPI IRowsetIndex_SetRange_Proxy(IRowsetIndex *This,HACCESSOR hAccessor,DBORDINAL cStartKeyColumns,void *pStartData,DBORDINAL cEndKeyColumns,void *pEndData,DBRANGE dwRangeOptions);", "ICommand_RemoteCancel_Proxy": "HRESULT WINAPI ICommand_RemoteCancel_Proxy(ICommand *This,IErrorInfo **ppErrorInfoRem);", "ICommand_RemoteExecute_Proxy": "HRESULT WINAPI ICommand_RemoteExecute_Proxy(ICommand *This,IUnknown *pUnkOuter,REFIID riid,HACCESSOR hAccessor,DB_UPARAMS cParamSets,GUID *pGuid,ULONG ulGuidOffset,RMTPACK *pInputParams,RMTPACK *pOutputParams,DBCOUNTITEM cBindings,DBBINDING *rgBindings,DBSTATUS *rgStatus,DBROWCOUNT *pcRowsAffected,IUnknown **ppRowset);", "ICommand_RemoteGetDBSession_Proxy": "HRESULT WINAPI ICommand_RemoteGetDBSession_Proxy(ICommand *This,REFIID riid,IUnknown **ppSession,IErrorInfo **ppErrorInfoRem);", "IMultipleResults_RemoteGetResult_Proxy": "HRESULT WINAPI IMultipleResults_RemoteGetResult_Proxy(IMultipleResults *This,IUnknown *pUnkOuter,DBRESULTFLAG lResultFlag,REFIID riid,DBROWCOUNT *pcRowsAffected,IUnknown **ppRowset,IErrorInfo **ppErrorInfoRem);", "IConvertType_RemoteCanConvert_Proxy": "HRESULT WINAPI IConvertType_RemoteCanConvert_Proxy(IConvertType *This,DBTYPE wFromType,DBTYPE wToType,DBCONVERTFLAGS dwConvertFlags,IErrorInfo **ppErrorInfoRem);", "ICommandPrepare_RemotePrepare_Proxy": "HRESULT WINAPI ICommandPrepare_RemotePrepare_Proxy(ICommandPrepare *This,ULONG cExpectedRuns,IErrorInfo **ppErrorInfoRem);", "ICommandPrepare_RemoteUnprepare_Proxy": "HRESULT WINAPI ICommandPrepare_RemoteUnprepare_Proxy(ICommandPrepare *This,IErrorInfo **ppErrorInfoRem);", "ICommandProperties_RemoteGetProperties_Proxy": "HRESULT WINAPI ICommandProperties_RemoteGetProperties_Proxy(ICommandProperties *This,const ULONG cPropertyIDSets,const DBPROPIDSET *rgPropertyIDSets,ULONG *pcPropertySets,DBPROPSET **prgPropertySets,IErrorInfo **ppErrorInfoRem);", "ICommandProperties_RemoteSetProperties_Proxy": "HRESULT WINAPI ICommandProperties_RemoteSetProperties_Proxy(ICommandProperties *This,ULONG cPropertySets,DBPROPSET *rgPropertySets,ULONG cTotalProps,DBPROPSTATUS *rgPropStatus,IErrorInfo **ppErrorInfoRem);", "ICommandText_RemoteGetCommandText_Proxy": "HRESULT WINAPI ICommandText_RemoteGetCommandText_Proxy(ICommandText *This,GUID *pguidDialect,LPOLESTR *ppwszCommand,IErrorInfo **ppErrorInfoRem);", "ICommandText_RemoteSetCommandText_Proxy": "HRESULT WINAPI ICommandText_RemoteSetCommandText_Proxy(ICommandText *This,REFGUID rguidDialect,LPCOLESTR pwszCommand,IErrorInfo **ppErrorInfoRem);", "ICommandWithParameters_RemoteGetParameterInfo_Proxy": "HRESULT WINAPI ICommandWithParameters_RemoteGetParameterInfo_Proxy(ICommandWithParameters *This,DB_UPARAMS *pcParams,DBPARAMINFO **prgParamInfo,DBBYTEOFFSET **prgNameOffsets,DBLENGTH *pcbNamesBuffer,OLECHAR **ppNamesBuffer,IErrorInfo **ppErrorInfoRem);", "ICommandWithParameters_RemoteMapParameterNames_Proxy": "HRESULT WINAPI ICommandWithParameters_RemoteMapParameterNames_Proxy(ICommandWithParameters *This,DB_UPARAMS cParamNames,LPCOLESTR *rgParamNames,DB_LPARAMS *rgParamOrdinals,IErrorInfo **ppErrorInfoRem);", "ICommandWithParameters_RemoteSetParameterInfo_Proxy": "HRESULT WINAPI ICommandWithParameters_RemoteSetParameterInfo_Proxy(ICommandWithParameters *This,DB_UPARAMS cParams,const DB_UPARAMS *rgParamOrdinals,const DBPARAMBINDINFO *rgParamBindInfo,IErrorInfo **ppErrorInfoRem);", "IColumnsRowset_RemoteGetAvailableColumns_Proxy": "HRESULT WINAPI IColumnsRowset_RemoteGetAvailableColumns_Proxy(IColumnsRowset *This,DBORDINAL *pcOptColumns,DBID **prgOptColumns,IErrorInfo **ppErrorInfoRem);", "IColumnsRowset_RemoteGetColumnsRowset_Proxy": "HRESULT WINAPI IColumnsRowset_RemoteGetColumnsRowset_Proxy(IColumnsRowset *This,IUnknown *pUnkOuter,DBORDINAL cOptColumns,const DBID *rgOptColumns,REFIID riid,ULONG cPropertySets,DBPROPSET *rgPropertySets,IUnknown **ppColRowset,ULONG cTotalProps,DBPROPSTATUS *rgPropStatus,IErrorInfo **ppErrorInfoRem);", "IColumnsInfo_RemoteGetColumnInfo_Proxy": "HRESULT WINAPI IColumnsInfo_RemoteGetColumnInfo_Proxy(IColumnsInfo *This,DBORDINAL *pcColumns,DBCOLUMNINFO **prgInfo,DBBYTEOFFSET **prgNameOffsets,DBBYTEOFFSET **prgcolumnidOffsets,DBLENGTH *pcbStringsBuffer,OLECHAR **ppStringsBuffer,IErrorInfo **ppErrorInfoRem);", "IColumnsInfo_RemoteMapColumnIDs_Proxy": "HRESULT WINAPI IColumnsInfo_RemoteMapColumnIDs_Proxy(IColumnsInfo *This,DBORDINAL cColumnIDs,const DBID *rgColumnIDs,DBORDINAL *rgColumns,IErrorInfo **ppErrorInfoRem);", "IDBCreateCommand_RemoteCreateCommand_Proxy": "HRESULT WINAPI IDBCreateCommand_RemoteCreateCommand_Proxy(IDBCreateCommand *This,IUnknown *pUnkOuter,REFIID riid,IUnknown **ppCommand,IErrorInfo **ppErrorInfoRem);", "IDBCreateSession_RemoteCreateSession_Proxy": "HRESULT WINAPI IDBCreateSession_RemoteCreateSession_Proxy(IDBCreateSession *This,IUnknown *pUnkOuter,REFIID riid,IUnknown **ppDBSession,IErrorInfo **ppErrorInfoRem);", "ISourcesRowset_RemoteGetSourcesRowset_Proxy": "HRESULT WINAPI ISourcesRowset_RemoteGetSourcesRowset_Proxy(ISourcesRowset *This,IUnknown *pUnkOuter,REFIID riid,ULONG cPropertySets,DBPROPSET *rgProperties,IUnknown **ppSourcesRowset,ULONG cTotalProps,DBPROPSTATUS *rgPropStatus,IErrorInfo **ppErrorInfoRem);", "IDBProperties_RemoteGetProperties_Proxy": "HRESULT WINAPI IDBProperties_RemoteGetProperties_Proxy(IDBProperties *This,ULONG cPropertyIDSets,const DBPROPIDSET *rgPropertyIDSets,ULONG *pcPropertySets,DBPROPSET **prgPropertySets,IErrorInfo **ppErrorInfoRem);", "IDBProperties_RemoteGetPropertyInfo_Proxy": "HRESULT WINAPI IDBProperties_RemoteGetPropertyInfo_Proxy(IDBProperties *This,ULONG cPropertyIDSets,const DBPROPIDSET *rgPropertyIDSets,ULONG *pcPropertyInfoSets,DBPROPINFOSET **prgPropertyInfoSets,ULONG *pcOffsets,DBBYTEOFFSET **prgDescOffsets,ULONG *pcbDescBuffer,OLECHAR **ppDescBuffer,IErrorInfo **ppErrorInfoRem);", "IDBProperties_RemoteSetProperties_Proxy": "HRESULT WINAPI IDBProperties_RemoteSetProperties_Proxy(IDBProperties *This,ULONG cPropertySets,DBPROPSET *rgPropertySets,ULONG cTotalProps,DBPROPSTATUS *rgPropStatus,IErrorInfo **ppErrorInfoRem);", "IDBInitialize_RemoteInitialize_Proxy": "HRESULT WINAPI IDBInitialize_RemoteInitialize_Proxy(IDBInitialize *This,IErrorInfo **ppErrorInfoRem);", "IDBInitialize_RemoteUninitialize_Proxy": "HRESULT WINAPI IDBInitialize_RemoteUninitialize_Proxy(IDBInitialize *This,IErrorInfo **ppErrorInfoRem);", "IDBInfo_RemoteGetKeywords_Proxy": "HRESULT WINAPI IDBInfo_RemoteGetKeywords_Proxy(IDBInfo *This,LPOLESTR *ppwszKeywords,IErrorInfo **ppErrorInfoRem);", "IDBInfo_RemoteGetLiteralInfo_Proxy": "HRESULT WINAPI IDBInfo_RemoteGetLiteralInfo_Proxy(IDBInfo *This,ULONG cLiterals,const DBLITERAL *rgLiterals,ULONG *pcLiteralInfo,DBLITERALINFO **prgLiteralInfo,DB_UPARAMS **prgLVOffsets,DB_UPARAMS **prgICOffsets,DB_UPARAMS **prgISCOffsets,ULONG *pcbCharBuffer,OLECHAR **ppCharBuffer,IErrorInfo **ppErrorInfoRem);", "IDBDataSourceAdmin_RemoteCreateDataSource_Proxy": "HRESULT WINAPI IDBDataSourceAdmin_RemoteCreateDataSource_Proxy(IDBDataSourceAdmin *This,ULONG cPropertySets,DBPROPSET *rgPropertySets,IUnknown *pUnkOuter,REFIID riid,IUnknown **ppDBSession,ULONG cTotalProps,DBPROPSTATUS *rgPropStatus,IErrorInfo **ppErrorInfoRem);", "IDBDataSourceAdmin_RemoteDestroyDataSource_Proxy": "HRESULT WINAPI IDBDataSourceAdmin_RemoteDestroyDataSource_Proxy(IDBDataSourceAdmin *This,IErrorInfo **ppErrorInfoRem);", "IDBDataSourceAdmin_RemoteGetCreationProperties_Proxy": "HRESULT WINAPI IDBDataSourceAdmin_RemoteGetCreationProperties_Proxy(IDBDataSourceAdmin *This,ULONG cPropertyIDSets,const DBPROPIDSET *rgPropertyIDSets,ULONG *pcPropertyInfoSets,DBPROPINFOSET **prgPropertyInfoSets,DBCOUNTITEM *pcOffsets,DBBYTEOFFSET **prgDescOffsets,ULONG *pcbDescBuffer,OLECHAR **ppDescBuffer,IErrorInfo **ppErrorInfoRem);", "IDBDataSourceAdmin_RemoteModifyDataSource_Proxy": "HRESULT WINAPI IDBDataSourceAdmin_RemoteModifyDataSource_Proxy(IDBDataSourceAdmin *This,ULONG cPropertySets,DBPROPSET *rgPropertySets,IErrorInfo **ppErrorInfoRem);", "IDBAsynchNotify_RemoteOnLowResource_Proxy": "HRESULT WINAPI IDBAsynchNotify_RemoteOnLowResource_Proxy(IDBAsynchNotify *This,DB_DWRESERVE dwReserved);", "IDBAsynchNotify_RemoteOnProgress_Proxy": "HRESULT WINAPI IDBAsynchNotify_RemoteOnProgress_Proxy(IDBAsynchNotify *This,HCHAPTER hChapter,DBASYNCHOP eOperation,DBCOUNTITEM ulProgress,DBCOUNTITEM ulProgressMax,DBASYNCHPHASE eAsynchPhase,LPOLESTR pwszStatusText);", "IDBAsynchNotify_RemoteOnStop_Proxy": "HRESULT WINAPI IDBAsynchNotify_RemoteOnStop_Proxy(IDBAsynchNotify *This,HCHAPTER hChapter,DBASYNCHOP eOperation,HRESULT hrStatus,LPOLESTR pwszStatusText);", "IDBAsynchStatus_RemoteAbort_Proxy": "HRESULT WINAPI IDBAsynchStatus_RemoteAbort_Proxy(IDBAsynchStatus *This, HCHAPTER hChapter, DBASYNCHOP eOperation, IErrorInfo **ppErrorInfoRem);", "IDBAsynchStatus_RemoteGetStatus_Proxy": "HRESULT WINAPI IDBAsynchStatus_RemoteGetStatus_Proxy(IDBAsynchStatus *This, HCHAPTER hChapter, DBASYNCHOP eOperation, DBCOUNTITEM *pulProgress, DBCOUNTITEM *pulProgressMax, DBASYNCHPHASE *peAsynchPhase, LPOLESTR *ppwszStatusText, IErrorInfo **ppErrorInfoRem);", "ISessionProperties_RemoteGetProperties_Proxy": "HRESULT WINAPI ISessionProperties_RemoteGetProperties_Proxy(ISessionProperties *This,ULONG cPropertyIDSets,const DBPROPIDSET *rgPropertyIDSets,ULONG *pcPropertySets,DBPROPSET **prgPropertySets,IErrorInfo **ppErrorInfoRem);", "ISessionProperties_RemoteSetProperties_Proxy": "HRESULT WINAPI ISessionProperties_RemoteSetProperties_Proxy(ISessionProperties *This,ULONG cPropertySets,DBPROPSET *rgPropertySets,ULONG cTotalProps,DBPROPSTATUS *rgPropStatus,IErrorInfo **ppErrorInfoRem);", "IIndexDefinition_RemoteCreateIndex_Proxy": "HRESULT WINAPI IIndexDefinition_RemoteCreateIndex_Proxy(IIndexDefinition *This,DBID *pTableID,DBID *pIndexID,DBORDINAL cIndexColumnDescs,const DBINDEXCOLUMNDESC *rgIndexColumnDescs,ULONG cPropertySets,DBPROPSET *rgPropertySets,DBID **ppIndexID,ULONG cTotalProps,DBPROPSTATUS *rgPropStatus,IErrorInfo **ppErrorInfoRem);", "IIndexDefinition_RemoteDropIndex_Proxy": "HRESULT WINAPI IIndexDefinition_RemoteDropIndex_Proxy(IIndexDefinition *This,DBID *pTableID,DBID *pIndexID,IErrorInfo **ppErrorInfoRem);", "ITableDefinition_RemoteCreateTable_Proxy": "HRESULT WINAPI ITableDefinition_RemoteCreateTable_Proxy(ITableDefinition *This,IUnknown *pUnkOuter,DBID *pTableID,DBORDINAL cColumnDescs,const DBCOLUMNDESC *rgColumnDescs,REFIID riid,ULONG cPropertySets,DBPROPSET *rgPropertySets,DBID **ppTableID,IUnknown **ppRowset,ULONG cTotalProps,DBPROPSTATUS *rgPropStatus,WINBOOL *pfTableCreated,IErrorInfo **ppErrorInfoRem);", "ITableDefinition_RemoteDropTable_Proxy": "HRESULT WINAPI ITableDefinition_RemoteDropTable_Proxy(ITableDefinition *This,DBID *pTableID,IErrorInfo **ppErrorInfoRem);", "ITableDefinition_RemoteAddColumn_Proxy": "HRESULT WINAPI ITableDefinition_RemoteAddColumn_Proxy(ITableDefinition *This,DBID *pTableID,DBCOLUMNDESC *pColumnDesc,DBID **ppColumnID,ULONG cTotalProps,DBPROPSTATUS *rgPropStatus,IErrorInfo **ppErrorInfoRem);", "ITableDefinition_RemoteDropColumn_Proxy": "HRESULT WINAPI ITableDefinition_RemoteDropColumn_Proxy(ITableDefinition *This,DBID *pTableID,DBID *pColumnID,IErrorInfo **ppErrorInfoRem);", "IOpenRowset_RemoteOpenRowset_Proxy": "HRESULT WINAPI IOpenRowset_RemoteOpenRowset_Proxy(IOpenRowset *This,IUnknown *pUnkOuter,DBID *pTableID,DBID *pIndexID,REFIID riid,ULONG cPropertySets,DBPROPSET *rgPropertySets,IUnknown **ppRowset,ULONG cTotalProps,DBPROPSTATUS *rgPropStatus,IErrorInfo **ppErrorInfoRem);", "IDBSchemaRowset_RemoteGetRowset_Proxy": "HRESULT WINAPI IDBSchemaRowset_RemoteGetRowset_Proxy(IDBSchemaRowset *This,IUnknown *pUnkOuter,REFGUID rguidSchema,ULONG cRestrictions,const VARIANT *rgRestrictions,REFIID riid,ULONG cPropertySets,DBPROPSET *rgPropertySets,IUnknown **ppRowset,ULONG cTotalProps,DBPROPSTATUS *rgPropStatus,IErrorInfo **ppErrorInfoRem);", "IDBSchemaRowset_RemoteGetSchemas_Proxy": "HRESULT WINAPI IDBSchemaRowset_RemoteGetSchemas_Proxy(IDBSchemaRowset *This,ULONG *pcSchemas,GUID **prgSchemas,ULONG **prgRestrictionSupport,IErrorInfo **ppErrorInfoRem);", "IMDDataset_FreeAxisInfo_Proxy": "HRESULT WINAPI IMDDataset_FreeAxisInfo_Proxy(IMDDataset *This,DBCOUNTITEM cAxes,MDAXISINFO *rgAxisInfo);", "IMDDataset_GetAxisInfo_Proxy": "HRESULT WINAPI IMDDataset_GetAxisInfo_Proxy(IMDDataset *This,DBCOUNTITEM *pcAxes,MDAXISINFO **prgAxisInfo);", "IMDDataset_GetAxisRowset_Proxy": "HRESULT WINAPI IMDDataset_GetAxisRowset_Proxy(IMDDataset *This,IUnknown *pUnkOuter,DBCOUNTITEM iAxis,REFIID riid,ULONG cPropertySets,DBPROPSET rgPropertySets[],IUnknown **ppRowset);", "IMDDataset_GetCellData_Proxy": "HRESULT WINAPI IMDDataset_GetCellData_Proxy(IMDDataset *This,HACCESSOR hAccessor,DBORDINAL ulStartCell,DBORDINAL ulEndCell,void *pData);", "IMDDataset_GetSpecification_Proxy": "HRESULT WINAPI IMDDataset_GetSpecification_Proxy(IMDDataset *This,REFIID riid,IUnknown **ppSpecification);", "IMDFind_FindCell_Proxy": "HRESULT WINAPI IMDFind_FindCell_Proxy(IMDFind *This,DBORDINAL ulStartingOrdinal,DBCOUNTITEM cMembers,LPCOLESTR *rgpwszMember,DBORDINAL *pulCellOrdinal);", "IMDFind_FindTuple_Proxy": "HRESULT WINAPI IMDFind_FindTuple_Proxy(IMDFind *This,ULONG ulAxisIdentifier,DBORDINAL ulStartingOrdinal,DBCOUNTITEM cMembers,LPCOLESTR *rgpwszMember,ULONG *pulTupleOrdinal);", "IMDRangeRowset_GetRangeRowset_Proxy": "HRESULT WINAPI IMDRangeRowset_GetRangeRowset_Proxy(IMDRangeRowset *This,IUnknown *pUnkOuter,DBORDINAL ulStartCell,DBORDINAL ulEndCell,REFIID riid,ULONG cPropertySets,DBPROPSET rgPropertySets[],IUnknown **ppRowset);", "IAlterTable_AlterColumn_Proxy": "HRESULT WINAPI IAlterTable_AlterColumn_Proxy(IAlterTable *This,DBID *pTableId,DBID *pColumnId,DBCOLUMNDESCFLAGS dwColumnDescFlags,DBCOLUMNDESC *pColumnDesc);", "IAlterTable_AlterTable_Proxy": "HRESULT WINAPI IAlterTable_AlterTable_Proxy(IAlterTable *This,DBID *pTableId,DBID *pNewTableId,ULONG cPropertySets,DBPROPSET rgPropertySets[]);", "IAlterIndex_AlterIndex_Proxy": "HRESULT WINAPI IAlterIndex_AlterIndex_Proxy(IAlterIndex *This,DBID *pTableId,DBID *pIndexId,DBID *pNewIndexId,ULONG cPropertySets,DBPROPSET rgPropertySets[]);", "IRowsetChapterMember_IsRowInChapter_Proxy": "HRESULT WINAPI IRowsetChapterMember_IsRowInChapter_Proxy(IRowsetChapterMember *This,HCHAPTER hChapter,HROW hRow);", "ICommandPersist_DeleteCommand_Proxy": "HRESULT WINAPI ICommandPersist_DeleteCommand_Proxy(ICommandPersist *This,DBID *pCommandID);", "ICommandPersist_GetCurrentCommand_Proxy": "HRESULT WINAPI ICommandPersist_GetCurrentCommand_Proxy(ICommandPersist *This,DBID **ppCommandID);", "ICommandPersist_LoadCommand_Proxy": "HRESULT WINAPI ICommandPersist_LoadCommand_Proxy(ICommandPersist *This,DBID *pCommandID,DWORD dwFlags);", "ICommandPersist_SaveCommand_Proxy": "HRESULT WINAPI ICommandPersist_SaveCommand_Proxy(ICommandPersist *This,DBID *pCommandID,DWORD dwFlags);", "IRowsetRefresh_RefreshVisibleData_Proxy": "HRESULT WINAPI IRowsetRefresh_RefreshVisibleData_Proxy(IRowsetRefresh *This,HCHAPTER hChapter,DBCOUNTITEM cRows,const HROW rghRows[],WINBOOL fOverWrite,DBCOUNTITEM *pcRowsRefreshed,HROW **prghRowsRefreshed,DBROWSTATUS **prgRowStatus);", "IRowsetRefresh_GetLastVisibleData_Proxy": "HRESULT WINAPI IRowsetRefresh_GetLastVisibleData_Proxy(IRowsetRefresh *This,HROW hRow,HACCESSOR hAccessor,void *pData);", "IParentRowset_GetChildRowset_Proxy": "HRESULT WINAPI IParentRowset_GetChildRowset_Proxy(IParentRowset *This,IUnknown *pUnkOuter,DBORDINAL iOrdinal,REFIID riid,IUnknown **ppRowset);", "IErrorRecords_RemoteAddErrorRecord_Proxy": "HRESULT WINAPI IErrorRecords_RemoteAddErrorRecord_Proxy(IErrorRecords *This,ERRORINFO *pErrorInfo,DWORD dwLookupID,DISPPARAMS *pdispparams,IUnknown *punkCustomError,DWORD dwDynamicErrorID,IErrorInfo **ppErrorInfoRem);", "IErrorRecords_RemoteGetBasicErrorInfo_Proxy": "HRESULT WINAPI IErrorRecords_RemoteGetBasicErrorInfo_Proxy(IErrorRecords *This,ULONG ulRecordNum,ERRORINFO *pErrorInfo,IErrorInfo **ppErrorInfoRem);", "IErrorRecords_RemoteGetCustomErrorObject_Proxy": "HRESULT WINAPI IErrorRecords_RemoteGetCustomErrorObject_Proxy(IErrorRecords *This,ULONG ulRecordNum,REFIID riid,IUnknown **ppObject,IErrorInfo **ppErrorInfoRem);", "IErrorRecords_RemoteGetErrorInfo_Proxy": "HRESULT WINAPI IErrorRecords_RemoteGetErrorInfo_Proxy(IErrorRecords *This,ULONG ulRecordNum,LCID lcid,IErrorInfo **ppErrorInfo,IErrorInfo **ppErrorInfoRem);", "IErrorRecords_RemoteGetErrorParameters_Proxy": "HRESULT WINAPI IErrorRecords_RemoteGetErrorParameters_Proxy(IErrorRecords *This,ULONG ulRecordNum,DISPPARAMS *pdispparams,IErrorInfo **ppErrorInfoRem);", "IErrorRecords_RemoteGetRecordCount_Proxy": "HRESULT WINAPI IErrorRecords_RemoteGetRecordCount_Proxy(IErrorRecords *This,ULONG *pcRecords,IErrorInfo **ppErrorInfoRem);", "IErrorLookup_RemoteGetErrorDescription_Proxy": "HRESULT WINAPI IErrorLookup_RemoteGetErrorDescription_Proxy(IErrorLookup *This,HRESULT hrError,DWORD dwLookupID,DISPPARAMS *pdispparams,LCID lcid,BSTR *pbstrSource,BSTR *pbstrDescription,IErrorInfo **ppErrorInfoRem);", "IErrorLookup_RemoteGetHelpInfo_Proxy": "HRESULT WINAPI IErrorLookup_RemoteGetHelpInfo_Proxy(IErrorLookup *This,HRESULT hrError,DWORD dwLookupID,LCID lcid,BSTR *pbstrHelpFile,DWORD *pdwHelpContext,IErrorInfo **ppErrorInfoRem);", "IErrorLookup_RemoteReleaseErrors_Proxy": "HRESULT WINAPI IErrorLookup_RemoteReleaseErrors_Proxy(IErrorLookup *This,const DWORD dwDynamicErrorID,IErrorInfo **ppErrorInfoRem);", "ISQLErrorInfo_RemoteGetSQLInfo_Proxy": "HRESULT WINAPI ISQLErrorInfo_RemoteGetSQLInfo_Proxy(ISQLErrorInfo *This,BSTR *pbstrSQLState,LONG *plNativeError,IErrorInfo **ppErrorInfoRem);", "IGetDataSource_RemoteGetDataSource_Proxy": "HRESULT WINAPI IGetDataSource_RemoteGetDataSource_Proxy(IGetDataSource *This,REFIID riid,IUnknown **ppDataSource,IErrorInfo **ppErrorInfoRem);", "ITransactionLocal_RemoteGetOptionsObject_Proxy": "HRESULT WINAPI ITransactionLocal_RemoteGetOptionsObject_Proxy(ITransactionLocal *This,ITransactionOptions **ppOptions,IErrorInfo **ppErrorInfoRem);", "ITransactionLocal_RemoteStartTransaction_Proxy": "HRESULT WINAPI ITransactionLocal_RemoteStartTransaction_Proxy(ITransactionLocal *This,ISOLEVEL isoLevel,ULONG isoFlags,ITransactionOptions *pOtherOptions,ULONG *pulTransactionLevel,IErrorInfo **ppErrorInfoRem);", "ITransactionJoin_RemoteGetOptionsObject_Proxy": "HRESULT WINAPI ITransactionJoin_RemoteGetOptionsObject_Proxy(ITransactionJoin *This,ITransactionOptions **ppOptions,IErrorInfo **ppErrorInfoRem);", "ITransactionJoin_RemoteJoinTransaction_Proxy": "HRESULT WINAPI ITransactionJoin_RemoteJoinTransaction_Proxy(ITransactionJoin *This,IUnknown *punkTransactionCoord,ISOLEVEL isoLevel,ULONG isoFlags,ITransactionOptions *pOtherOptions,IErrorInfo **ppErrorInfoRem);", "ITransactionObject_RemoteGetTransactionObject_Proxy": "HRESULT WINAPI ITransactionObject_RemoteGetTransactionObject_Proxy(ITransactionObject *This,ULONG ulTransactionLevel,ITransaction **ppTransactionObject,IErrorInfo **ppErrorInfoRem);", "ITrusteeAdmin_CompareTrustees_Proxy": "HRESULT WINAPI ITrusteeAdmin_CompareTrustees_Proxy(ITrusteeAdmin *This,TRUSTEE_W *pTrustee1,TRUSTEE_W *pTrustee2);", "ITrusteeAdmin_CreateTrustee_Proxy": "HRESULT WINAPI ITrusteeAdmin_CreateTrustee_Proxy(ITrusteeAdmin *This,TRUSTEE_W *pTrustee,ULONG cPropertySets,DBPROPSET rgPropertySets[]);", "ITrusteeAdmin_DeleteTrustee_Proxy": "HRESULT WINAPI ITrusteeAdmin_DeleteTrustee_Proxy(ITrusteeAdmin *This,TRUSTEE_W *pTrustee);", "ITrusteeAdmin_SetTrusteeProperties_Proxy": "HRESULT WINAPI ITrusteeAdmin_SetTrusteeProperties_Proxy(ITrusteeAdmin *This,TRUSTEE_W *pTrustee,ULONG cPropertySets,DBPROPSET rgPropertySets[]);", "ITrusteeAdmin_GetTrusteeProperties_Proxy": "HRESULT WINAPI ITrusteeAdmin_GetTrusteeProperties_Proxy(ITrusteeAdmin *This,TRUSTEE_W *pTrustee,const ULONG cPropertyIDSets,const DBPROPIDSET rgPropertyIDSets[],ULONG *pcPropertySets,DBPROPSET **prgPropertySets);", "ITrusteeGroupAdmin_AddMember_Proxy": "HRESULT WINAPI ITrusteeGroupAdmin_AddMember_Proxy(ITrusteeGroupAdmin *This,TRUSTEE_W *pMembershipTrustee,TRUSTEE_W *pMemberTrustee);", "ITrusteeGroupAdmin_DeleteMember_Proxy": "HRESULT WINAPI ITrusteeGroupAdmin_DeleteMember_Proxy(ITrusteeGroupAdmin *This,TRUSTEE_W *pMembershipTrustee,TRUSTEE_W *pMemberTrustee);", "ITrusteeGroupAdmin_IsMember_Proxy": "HRESULT WINAPI ITrusteeGroupAdmin_IsMember_Proxy(ITrusteeGroupAdmin *This,TRUSTEE_W *pMembershipTrustee,TRUSTEE_W *pMemberTrustee,WINBOOL *pfStatus);", "ITrusteeGroupAdmin_GetMembers_Proxy": "HRESULT WINAPI ITrusteeGroupAdmin_GetMembers_Proxy(ITrusteeGroupAdmin *This,TRUSTEE_W *pMembershipTrustee,ULONG *pcMembers,TRUSTEE_W **prgMembers);", "ITrusteeGroupAdmin_GetMemberships_Proxy": "HRESULT WINAPI ITrusteeGroupAdmin_GetMemberships_Proxy(ITrusteeGroupAdmin *This,TRUSTEE_W *pTrustee,ULONG *pcMemberships,TRUSTEE_W **prgMemberships);", "IObjectAccessControl_GetObjectAccessRights_Proxy": "HRESULT WINAPI IObjectAccessControl_GetObjectAccessRights_Proxy(IObjectAccessControl *This,SEC_OBJECT *pObject,ULONG *pcAccessEntries,EXPLICIT_ACCESS_W **prgAccessEntries);", "IObjectAccessControl_GetObjectOwner_Proxy": "HRESULT WINAPI IObjectAccessControl_GetObjectOwner_Proxy(IObjectAccessControl *This,SEC_OBJECT *pObject,TRUSTEE_W **ppOwner);", "IObjectAccessControl_IsObjectAccessAllowed_Proxy": "HRESULT WINAPI IObjectAccessControl_IsObjectAccessAllowed_Proxy(IObjectAccessControl *This,SEC_OBJECT *pObject,EXPLICIT_ACCESS_W *pAccessEntry,WINBOOL *pfResult);", "IObjectAccessControl_SetObjectAccessRights_Proxy": "HRESULT WINAPI IObjectAccessControl_SetObjectAccessRights_Proxy(IObjectAccessControl *This,SEC_OBJECT *pObject,ULONG cAccessEntries,EXPLICIT_ACCESS_W *prgAccessEntries);", "IObjectAccessControl_SetObjectOwner_Proxy": "HRESULT WINAPI IObjectAccessControl_SetObjectOwner_Proxy(IObjectAccessControl *This,SEC_OBJECT *pObject,TRUSTEE_W *pOwner);", "ISecurityInfo_GetCurrentTrustee_Proxy": "HRESULT WINAPI ISecurityInfo_GetCurrentTrustee_Proxy(ISecurityInfo *This,TRUSTEE_W **ppTrustee);", "ISecurityInfo_GetObjectTypes_Proxy": "HRESULT WINAPI ISecurityInfo_GetObjectTypes_Proxy(ISecurityInfo *This,ULONG *cObjectTypes,GUID **rgObjectTypes);", "ISecurityInfo_GetPermissions_Proxy": "HRESULT WINAPI ISecurityInfo_GetPermissions_Proxy(ISecurityInfo *This,GUID ObjectType,ACCESS_MASK *pPermissions);", "ITableCreation_GetTableDefinition_Proxy": "HRESULT WINAPI ITableCreation_GetTableDefinition_Proxy(ITableCreation *This,DBID *pTableID,DBORDINAL *pcColumnDescs,DBCOLUMNDESC *prgColumnDescs[],ULONG *pcPropertySets,DBPROPSET *prgPropertySets[],ULONG *pcConstraintDescs,DBCONSTRAINTDESC *prgConstraintDescs[],OLECHAR **ppwszStringBuffer);", "ITableDefinitionWithConstraints_AddConstraint_Proxy": "HRESULT WINAPI ITableDefinitionWithConstraints_AddConstraint_Proxy(ITableDefinitionWithConstraints *This,DBID *pTableID,DBCONSTRAINTDESC *pConstraintDesc);", "ITableDefinitionWithConstraints_CreateTableWithConstraints_Proxy": "HRESULT WINAPI ITableDefinitionWithConstraints_CreateTableWithConstraints_Proxy(ITableDefinitionWithConstraints *This,IUnknown *pUnkOuter,DBID *pTableID,DBORDINAL cColumnDescs,DBCOLUMNDESC rgColumnDescs[],ULONG cConstraintDescs,DBCONSTRAINTDESC rgConstraintDescs[],REFIID riid,ULONG cPropertySets,DBPROPSET rgPropertySets[],DBID **ppTableID,IUnknown **ppRowset);", "ITableDefinitionWithConstraints_DropConstraint_Proxy": "HRESULT WINAPI ITableDefinitionWithConstraints_DropConstraint_Proxy(ITableDefinitionWithConstraints *This,DBID *pTableID,DBID *pConstraintID);", "IRow_GetColumns_Proxy": "HRESULT WINAPI IRow_GetColumns_Proxy(IRow *This,DBORDINAL cColumns,DBCOLUMNACCESS rgColumns[]);", "IRow_GetSourceRowset_Proxy": "HRESULT WINAPI IRow_GetSourceRowset_Proxy(IRow *This,REFIID riid,IUnknown **ppRowset,HROW *phRow);", "IRow_Open_Proxy": "HRESULT WINAPI IRow_Open_Proxy(IRow *This,IUnknown *pUnkOuter,DBID *pColumnID,REFGUID rguidColumnType,DWORD dwBindFlags,REFIID riid,IUnknown **ppUnk);", "IRowChange_SetColumns_Proxy": "HRESULT WINAPI IRowChange_SetColumns_Proxy(IRowChange *This,DBORDINAL cColumns,DBCOLUMNACCESS rgColumns[]);", "IRowSchemaChange_DeleteColumns_Proxy": "HRESULT WINAPI IRowSchemaChange_DeleteColumns_Proxy(IRowSchemaChange *This,DBORDINAL cColumns,const DBID rgColumnIDs[],DBSTATUS rgdwStatus[]);", "IRowSchemaChange_AddColumns_Proxy": "HRESULT WINAPI IRowSchemaChange_AddColumns_Proxy(IRowSchemaChange *This,DBORDINAL cColumns,const DBCOLUMNINFO rgNewColumnInfo[],DBCOLUMNACCESS rgColumns[]);", "IGetRow_GetRowFromHROW_Proxy": "HRESULT WINAPI IGetRow_GetRowFromHROW_Proxy(IGetRow *This,IUnknown *pUnkOuter,HROW hRow,REFIID riid,IUnknown **ppUnk);", "IGetRow_GetURLFromHROW_Proxy": "HRESULT WINAPI IGetRow_GetURLFromHROW_Proxy(IGetRow *This,HROW hRow,LPOLESTR *ppwszURL);", "IBindResource_RemoteBind_Proxy": "HRESULT WINAPI IBindResource_RemoteBind_Proxy(IBindResource *This,IUnknown *pUnkOuter,LPCOLESTR pwszURL,DBBINDURLFLAG dwBindURLFlags,REFGUID rguid,REFIID riid,IAuthenticate *pAuthenticate,IUnknown *pSessionUnkOuter,IID *piid,IUnknown **ppSession,DBBINDURLSTATUS *pdwBindStatus,IUnknown **ppUnk);", "IScopedOperations_RemoteCopy_Proxy": "HRESULT WINAPI IScopedOperations_RemoteCopy_Proxy(IScopedOperations *This,DBCOUNTITEM cRows,LPCOLESTR *rgpwszSourceURLs,LPCOLESTR *rgpwszDestURLs,DWORD dwCopyFlags,IAuthenticate *pAuthenticate,DBSTATUS *rgdwStatus,DBBYTEOFFSET **prgulNewURLOffsets,ULONG *pcbStringsBuffer,OLECHAR **ppStringsBuffer);", "IScopedOperations_RemoteMove_Proxy": "HRESULT WINAPI IScopedOperations_RemoteMove_Proxy(IScopedOperations *This,DBCOUNTITEM cRows,LPCOLESTR *rgpwszSourceURLs,LPCOLESTR *rgpwszDestURLs,DWORD dwMoveFlags,IAuthenticate *pAuthenticate,DBSTATUS *rgdwStatus,DBBYTEOFFSET **prgulNewURLOffsets,ULONG *pcbStringsBuffer,OLECHAR **ppStringsBuffer);", "IScopedOperations_RemoteDelete_Proxy": "HRESULT WINAPI IScopedOperations_RemoteDelete_Proxy(IScopedOperations *This,DBCOUNTITEM cRows,LPCOLESTR *rgpwszURLs,DWORD dwDeleteFlags,DBSTATUS *rgdwStatus);", "IScopedOperations_RemoteOpenRowset_Proxy": "HRESULT WINAPI IScopedOperations_RemoteOpenRowset_Proxy(IScopedOperations *This,IUnknown *pUnkOuter,DBID *pTableID,DBID *pIndexID,REFIID riid,ULONG cPropertySets,DBPROPSET *rgPropertySets,IUnknown **ppRowset,ULONG cTotalProps,DBPROPSTATUS *rgPropStatus);", "ICreateRow_RemoteCreateRow_Proxy": "HRESULT WINAPI ICreateRow_RemoteCreateRow_Proxy(ICreateRow *This,IUnknown *pUnkOuter,LPCOLESTR pwszURL,DBBINDURLFLAG dwBindURLFlags,REFGUID rguid,REFIID riid,IAuthenticate *pAuthenticate,IUnknown *pSessionUnkOuter,IID *piid,IUnknown **ppSession,DBBINDURLSTATUS *pdwBindStatus,LPOLESTR *ppwszNewURL,IUnknown **ppUnk);", "IDBBinderProperties_Reset_Proxy": "HRESULT WINAPI IDBBinderProperties_Reset_Proxy(IDBBinderProperties *This);", "IColumnsInfo2_RemoteGetRestrictedColumnInfo_Proxy": "HRESULT WINAPI IColumnsInfo2_RemoteGetRestrictedColumnInfo_Proxy(IColumnsInfo2 *This,DBORDINAL cColumnIDMasks,const DBID *rgColumnIDMasks,DWORD dwFlags,DBORDINAL *pcColumns,DBID **prgColumnIDs,DBCOLUMNINFO **prgColumnInfo,DBBYTEOFFSET **prgNameOffsets,DBBYTEOFFSET **prgcolumnidOffsets,DBLENGTH *pcbStringsBuffer,OLECHAR **ppStringsBuffer);", "IRegisterProvider_RemoteGetURLMapping_Proxy": "HRESULT WINAPI IRegisterProvider_RemoteGetURLMapping_Proxy(IRegisterProvider *This,LPCOLESTR pwszURL,DB_DWRESERVE dwReserved,CLSID *pclsidProvider);", "IRegisterProvider_SetURLMapping_Proxy": "HRESULT WINAPI IRegisterProvider_SetURLMapping_Proxy(IRegisterProvider *This,LPCOLESTR pwszURL,DB_DWRESERVE dwReserved,REFCLSID rclsidProvider);", "IRegisterProvider_UnregisterProvider_Proxy": "HRESULT WINAPI IRegisterProvider_UnregisterProvider_Proxy(IRegisterProvider *This,LPCOLESTR pwszURL,DB_DWRESERVE dwReserved,REFCLSID rclsidProvider);", "IGetSession_GetSession_Proxy": "HRESULT WINAPI IGetSession_GetSession_Proxy(IGetSession *This,REFIID riid,IUnknown **ppSession);", "IGetSourceRow_GetSourceRow_Proxy": "HRESULT WINAPI IGetSourceRow_GetSourceRow_Proxy(IGetSourceRow *This,REFIID riid,IUnknown **ppRow);", "IRowsetCurrentIndex_GetIndex_Proxy": "HRESULT WINAPI IRowsetCurrentIndex_GetIndex_Proxy(IRowsetCurrentIndex *This,DBID **ppIndexID);", "IRowsetCurrentIndex_SetIndex_Proxy": "HRESULT WINAPI IRowsetCurrentIndex_SetIndex_Proxy(IRowsetCurrentIndex *This,DBID *pIndexID);", "ICommandStream_GetCommandStream_Proxy": "HRESULT WINAPI ICommandStream_GetCommandStream_Proxy(ICommandStream *This,IID *piid,GUID *pguidDialect,IUnknown **ppCommandStream);", "ICommandStream_SetCommandStream_Proxy": "HRESULT WINAPI ICommandStream_SetCommandStream_Proxy(ICommandStream *This,REFIID riid,REFGUID rguidDialect,IUnknown *pCommandStream);", "IRowsetBookmark_PositionOnBookmark_Proxy": "HRESULT WINAPI IRowsetBookmark_PositionOnBookmark_Proxy(IRowsetBookmark *This,HCHAPTER hChapter,DBBKMARK cbBookmark,const BYTE *pBookmark);", "IAccessor_AddRefAccessor_Proxy": "HRESULT WINAPI IAccessor_AddRefAccessor_Proxy(IAccessor *This,HACCESSOR hAccessor,DBREFCOUNT *pcRefCount);", "IAccessor_AddRefAccessor_Stub": "HRESULT WINAPI IAccessor_AddRefAccessor_Stub(IAccessor *This,HACCESSOR hAccessor,DBREFCOUNT *pcRefCount,IErrorInfo **ppErrorInfoRem);", "IAccessor_CreateAccessor_Proxy": "HRESULT WINAPI IAccessor_CreateAccessor_Proxy(IAccessor *This,DBACCESSORFLAGS dwAccessorFlags,DBCOUNTITEM cBindings,const DBBINDING rgBindings[],DBLENGTH cbRowSize,HACCESSOR *phAccessor,DBBINDSTATUS rgStatus[]);", "IAccessor_CreateAccessor_Stub": "HRESULT WINAPI IAccessor_CreateAccessor_Stub(IAccessor *This,DBACCESSORFLAGS dwAccessorFlags,DBCOUNTITEM cBindings,DBBINDING *rgBindings,DBLENGTH cbRowSize,HACCESSOR *phAccessor,DBBINDSTATUS *rgStatus,IErrorInfo **ppErrorInfoRem);", "IAccessor_GetBindings_Proxy": "HRESULT WINAPI IAccessor_GetBindings_Proxy(IAccessor *This,HACCESSOR hAccessor,DBACCESSORFLAGS *pdwAccessorFlags,DBCOUNTITEM *pcBindings,DBBINDING **prgBindings);", "IAccessor_GetBindings_Stub": "HRESULT WINAPI IAccessor_GetBindings_Stub(IAccessor *This,HACCESSOR hAccessor,DBACCESSORFLAGS *pdwAccessorFlags,DBCOUNTITEM *pcBindings,DBBINDING **prgBindings,IErrorInfo **ppErrorInfoRem);", "IAccessor_ReleaseAccessor_Proxy": "HRESULT WINAPI IAccessor_ReleaseAccessor_Proxy(IAccessor *This,HACCESSOR hAccessor,DBREFCOUNT *pcRefCount);", "IAccessor_ReleaseAccessor_Stub": "HRESULT WINAPI IAccessor_ReleaseAccessor_Stub(IAccessor *This,HACCESSOR hAccessor,DBREFCOUNT *pcRefCount,IErrorInfo **ppErrorInfoRem);", "IRowsetInfo_GetProperties_Proxy": "HRESULT WINAPI IRowsetInfo_GetProperties_Proxy(IRowsetInfo *This,const ULONG cPropertyIDSets,const DBPROPIDSET rgPropertyIDSets[],ULONG *pcPropertySets,DBPROPSET **prgPropertySets);", "IRowsetInfo_GetProperties_Stub": "HRESULT WINAPI IRowsetInfo_GetProperties_Stub(IRowsetInfo *This,ULONG cPropertyIDSets,const DBPROPIDSET *rgPropertyIDSets,ULONG *pcPropertySets,DBPROPSET **prgPropertySets,IErrorInfo **ppErrorInfoRem);", "IRowsetInfo_GetReferencedRowset_Proxy": "HRESULT WINAPI IRowsetInfo_GetReferencedRowset_Proxy(IRowsetInfo *This,DBORDINAL iOrdinal,REFIID riid,IUnknown **ppReferencedRowset);", "IRowsetInfo_GetReferencedRowset_Stub": "HRESULT WINAPI IRowsetInfo_GetReferencedRowset_Stub(IRowsetInfo *This,DBORDINAL iOrdinal,REFIID riid,IUnknown **ppReferencedRowset,IErrorInfo **ppErrorInfoRem);", "IRowsetInfo_GetSpecification_Proxy": "HRESULT WINAPI IRowsetInfo_GetSpecification_Proxy(IRowsetInfo *This,REFIID riid,IUnknown **ppSpecification);", "IRowsetInfo_GetSpecification_Stub": "HRESULT WINAPI IRowsetInfo_GetSpecification_Stub(IRowsetInfo *This,REFIID riid,IUnknown **ppSpecification,IErrorInfo **ppErrorInfoRem);", "IChapteredRowset_AddRefChapter_Proxy": "HRESULT WINAPI IChapteredRowset_AddRefChapter_Proxy(IChapteredRowset *This,HCHAPTER hChapter,DBREFCOUNT *pcRefCount);", "IChapteredRowset_AddRefChapter_Stub": "HRESULT WINAPI IChapteredRowset_AddRefChapter_Stub(IChapteredRowset *This,HCHAPTER hChapter,DBREFCOUNT *pcRefCount,IErrorInfo **ppErrorInfoRem);", "IChapteredRowset_ReleaseChapter_Proxy": "HRESULT WINAPI IChapteredRowset_ReleaseChapter_Proxy(IChapteredRowset *This,HCHAPTER hChapter,DBREFCOUNT *pcRefCount);", "IChapteredRowset_ReleaseChapter_Stub": "HRESULT WINAPI IChapteredRowset_ReleaseChapter_Stub(IChapteredRowset *This,HCHAPTER hChapter,DBREFCOUNT *pcRefCount,IErrorInfo **ppErrorInfoRem);", "IRowPosition_ClearRowPosition_Proxy": "HRESULT WINAPI IRowPosition_ClearRowPosition_Proxy(IRowPosition *This);", "IRowPosition_ClearRowPosition_Stub": "HRESULT WINAPI IRowPosition_ClearRowPosition_Stub(IRowPosition *This,IErrorInfo **ppErrorInfoRem);", "IRowPosition_GetRowPosition_Proxy": "HRESULT WINAPI IRowPosition_GetRowPosition_Proxy(IRowPosition *This,HCHAPTER *phChapter,HROW *phRow,DBPOSITIONFLAGS *pdwPositionFlags);", "IRowPosition_GetRowPosition_Stub": "HRESULT WINAPI IRowPosition_GetRowPosition_Stub(IRowPosition *This,HCHAPTER *phChapter,HROW *phRow,DBPOSITIONFLAGS *pdwPositionFlags,IErrorInfo **ppErrorInfoRem);", "IRowPosition_GetRowset_Proxy": "HRESULT WINAPI IRowPosition_GetRowset_Proxy(IRowPosition *This,REFIID riid,IUnknown **ppRowset);", "IRowPosition_GetRowset_Stub": "HRESULT WINAPI IRowPosition_GetRowset_Stub(IRowPosition *This,REFIID riid,IUnknown **ppRowset,IErrorInfo **ppErrorInfoRem);", "IRowPosition_Initialize_Proxy": "HRESULT WINAPI IRowPosition_Initialize_Proxy(IRowPosition *This,IUnknown *pRowset);", "IRowPosition_Initialize_Stub": "HRESULT WINAPI IRowPosition_Initialize_Stub(IRowPosition *This,IUnknown *pRowset,IErrorInfo **ppErrorInfoRem);", "IRowPosition_SetRowPosition_Proxy": "HRESULT WINAPI IRowPosition_SetRowPosition_Proxy(IRowPosition *This,HCHAPTER hChapter,HROW hRow,DBPOSITIONFLAGS dwPositionFlags);", "IRowPosition_SetRowPosition_Stub": "HRESULT WINAPI IRowPosition_SetRowPosition_Stub(IRowPosition *This,HCHAPTER hChapter,HROW hRow,DBPOSITIONFLAGS dwPositionFlags,IErrorInfo **ppErrorInfoRem);", "IRowPositionChange_OnRowPositionChange_Proxy": "HRESULT WINAPI IRowPositionChange_OnRowPositionChange_Proxy(IRowPositionChange *This,DBREASON eReason,DBEVENTPHASE ePhase,WINBOOL fCantDeny);", "IRowPositionChange_OnRowPositionChange_Stub": "HRESULT WINAPI IRowPositionChange_OnRowPositionChange_Stub(IRowPositionChange *This,DBREASON eReason,DBEVENTPHASE ePhase,WINBOOL fCantDeny,IErrorInfo **ppErrorInfoRem);", "IViewRowset_GetSpecification_Proxy": "HRESULT WINAPI IViewRowset_GetSpecification_Proxy(IViewRowset *This,REFIID riid,IUnknown **ppObject);", "IViewRowset_GetSpecification_Stub": "HRESULT WINAPI IViewRowset_GetSpecification_Stub(IViewRowset *This,REFIID riid,IUnknown **ppObject,IErrorInfo **ppErrorInfoRem);", "IViewRowset_OpenViewRowset_Proxy": "HRESULT WINAPI IViewRowset_OpenViewRowset_Proxy(IViewRowset *This,IUnknown *pUnkOuter,REFIID riid,IUnknown **ppRowset);", "IViewRowset_OpenViewRowset_Stub": "HRESULT WINAPI IViewRowset_OpenViewRowset_Stub(IViewRowset *This,IUnknown *pUnkOuter,REFIID riid,IUnknown **ppRowset,IErrorInfo **ppErrorInfoRem);", "IViewChapter_GetSpecification_Proxy": "HRESULT WINAPI IViewChapter_GetSpecification_Proxy(IViewChapter *This,REFIID riid,IUnknown **ppRowset);", "IViewChapter_GetSpecification_Stub": "HRESULT WINAPI IViewChapter_GetSpecification_Stub(IViewChapter *This,REFIID riid,IUnknown **ppRowset,IErrorInfo **ppErrorInfoRem);", "IViewChapter_OpenViewChapter_Proxy": "HRESULT WINAPI IViewChapter_OpenViewChapter_Proxy(IViewChapter *This,HCHAPTER hSource,HCHAPTER *phViewChapter);", "IViewChapter_OpenViewChapter_Stub": "HRESULT WINAPI IViewChapter_OpenViewChapter_Stub(IViewChapter *This,HCHAPTER hSource,HCHAPTER *phViewChapter,IErrorInfo **ppErrorInfoRem);", "IViewSort_GetSortOrder_Proxy": "HRESULT WINAPI IViewSort_GetSortOrder_Proxy(IViewSort *This,DBORDINAL *pcValues,DBORDINAL *prgColumns[],DBSORT *prgOrders[]);", "IViewSort_GetSortOrder_Stub": "HRESULT WINAPI IViewSort_GetSortOrder_Stub(IViewSort *This,DBORDINAL *pcValues,DBORDINAL **prgColumns,DBSORT **prgOrders,IErrorInfo **ppErrorInfoRem);", "IViewSort_SetSortOrder_Proxy": "HRESULT WINAPI IViewSort_SetSortOrder_Proxy(IViewSort *This,DBORDINAL cValues,const DBORDINAL rgColumns[],const DBSORT rgOrders[]);", "IViewSort_SetSortOrder_Stub": "HRESULT WINAPI IViewSort_SetSortOrder_Stub(IViewSort *This,DBORDINAL cValues,const DBORDINAL *rgColumns,const DBSORT *rgOrders,IErrorInfo **ppErrorInfoRem);", "IViewFilter_GetFilterBindings_Proxy": "HRESULT WINAPI IViewFilter_GetFilterBindings_Proxy(IViewFilter *This,DBCOUNTITEM *pcBindings,DBBINDING **prgBindings);", "IViewFilter_GetFilterBindings_Stub": "HRESULT WINAPI IViewFilter_GetFilterBindings_Stub(IViewFilter *This,DBCOUNTITEM *pcBindings,DBBINDING **prgBindings,IErrorInfo **ppErrorInfoRem);", "IRowsetView_CreateView_Proxy": "HRESULT WINAPI IRowsetView_CreateView_Proxy(IRowsetView *This,IUnknown *pUnkOuter,REFIID riid,IUnknown **ppView);", "IRowsetView_CreateView_Stub": "HRESULT WINAPI IRowsetView_CreateView_Stub(IRowsetView *This,IUnknown *pUnkOuter,REFIID riid,IUnknown **ppView,IErrorInfo **ppErrorInfoRem);", "IRowsetView_GetView_Proxy": "HRESULT WINAPI IRowsetView_GetView_Proxy(IRowsetView *This,HCHAPTER hChapter,REFIID riid,HCHAPTER *phChapterSource,IUnknown **ppView);", "IRowsetView_GetView_Stub": "HRESULT WINAPI IRowsetView_GetView_Stub(IRowsetView *This,HCHAPTER hChapter,REFIID riid,HCHAPTER *phChapterSource,IUnknown **ppView,IErrorInfo **ppErrorInfoRem);", "IRowsetIdentity_IsSameRow_Proxy": "HRESULT WINAPI IRowsetIdentity_IsSameRow_Proxy(IRowsetIdentity *This,HROW hThisRow,HROW hThatRow);", "IRowsetIdentity_IsSameRow_Stub": "HRESULT WINAPI IRowsetIdentity_IsSameRow_Stub(IRowsetIdentity *This,HROW hThisRow,HROW hThatRow,IErrorInfo **ppErrorInfoRem);", "IRowsetNotify_OnFieldChange_Proxy": "HRESULT WINAPI IRowsetNotify_OnFieldChange_Proxy(IRowsetNotify *This,IRowset *pRowset,HROW hRow,DBORDINAL cColumns,DBORDINAL rgColumns[],DBREASON eReason,DBEVENTPHASE ePhase,WINBOOL fCantDeny);", "IRowsetNotify_OnFieldChange_Stub": "HRESULT WINAPI IRowsetNotify_OnFieldChange_Stub(IRowsetNotify *This,IRowset *pRowset,HROW hRow,DBORDINAL cColumns,DBORDINAL *rgColumns,DBREASON eReason,DBEVENTPHASE ePhase,WINBOOL fCantDeny);", "IRowsetNotify_OnRowChange_Proxy": "HRESULT WINAPI IRowsetNotify_OnRowChange_Proxy(IRowsetNotify *This,IRowset *pRowset,DBCOUNTITEM cRows,const HROW rghRows[],DBREASON eReason,DBEVENTPHASE ePhase,WINBOOL fCantDeny);", "IRowsetNotify_OnRowChange_Stub": "HRESULT WINAPI IRowsetNotify_OnRowChange_Stub(IRowsetNotify *This,IRowset *pRowset,DBCOUNTITEM cRows,const HROW *rghRows,DBREASON eReason,DBEVENTPHASE ePhase,WINBOOL fCantDeny);", "IRowsetNotify_OnRowsetChange_Proxy": "HRESULT WINAPI IRowsetNotify_OnRowsetChange_Proxy(IRowsetNotify *This,IRowset *pRowset,DBREASON eReason,DBEVENTPHASE ePhase,WINBOOL fCantDeny);", "IRowsetNotify_OnRowsetChange_Stub": "HRESULT WINAPI IRowsetNotify_OnRowsetChange_Stub(IRowsetNotify *This,IRowset *pRowset,DBREASON eReason,DBEVENTPHASE ePhase,WINBOOL fCantDeny);", "ICommand_Cancel_Proxy": "HRESULT WINAPI ICommand_Cancel_Proxy(ICommand *This);", "ICommand_Cancel_Stub": "HRESULT WINAPI ICommand_Cancel_Stub(ICommand *This,IErrorInfo **ppErrorInfoRem);", "ICommand_Execute_Proxy": "HRESULT WINAPI ICommand_Execute_Proxy(ICommand *This,IUnknown *pUnkOuter,REFIID riid,DBPARAMS *pParams,DBROWCOUNT *pcRowsAffected,IUnknown **ppRowset);", "ICommand_Execute_Stub": "HRESULT WINAPI ICommand_Execute_Stub(ICommand *This,IUnknown *pUnkOuter,REFIID riid,HACCESSOR hAccessor,DB_UPARAMS cParamSets,GUID *pGuid,ULONG ulGuidOffset,RMTPACK *pInputParams,RMTPACK *pOutputParams,DBCOUNTITEM cBindings,DBBINDING *rgBindings,DBSTATUS *rgStatus,DBROWCOUNT *pcRowsAffected,IUnknown **ppRowset);", "ICommand_GetDBSession_Proxy": "HRESULT WINAPI ICommand_GetDBSession_Proxy(ICommand *This,REFIID riid,IUnknown **ppSession);", "ICommand_GetDBSession_Stub": "HRESULT WINAPI ICommand_GetDBSession_Stub(ICommand *This,REFIID riid,IUnknown **ppSession,IErrorInfo **ppErrorInfoRem);", "IMultipleResults_GetResult_Proxy": "HRESULT WINAPI IMultipleResults_GetResult_Proxy(IMultipleResults *This,IUnknown *pUnkOuter,DBRESULTFLAG lResultFlag,REFIID riid,DBROWCOUNT *pcRowsAffected,IUnknown **ppRowset);", "IMultipleResults_GetResult_Stub": "HRESULT WINAPI IMultipleResults_GetResult_Stub(IMultipleResults *This,IUnknown *pUnkOuter,DBRESULTFLAG lResultFlag,REFIID riid,DBROWCOUNT *pcRowsAffected,IUnknown **ppRowset,IErrorInfo **ppErrorInfoRem);", "IConvertType_CanConvert_Proxy": "HRESULT WINAPI IConvertType_CanConvert_Proxy(IConvertType *This,DBTYPE wFromType,DBTYPE wToType,DBCONVERTFLAGS dwConvertFlags);", "IConvertType_CanConvert_Stub": "HRESULT WINAPI IConvertType_CanConvert_Stub(IConvertType *This,DBTYPE wFromType,DBTYPE wToType,DBCONVERTFLAGS dwConvertFlags,IErrorInfo **ppErrorInfoRem);", "ICommandPrepare_Prepare_Proxy": "HRESULT WINAPI ICommandPrepare_Prepare_Proxy(ICommandPrepare *This,ULONG cExpectedRuns);", "ICommandPrepare_Prepare_Stub": "HRESULT WINAPI ICommandPrepare_Prepare_Stub(ICommandPrepare *This,ULONG cExpectedRuns,IErrorInfo **ppErrorInfoRem);", "ICommandPrepare_Unprepare_Proxy": "HRESULT WINAPI ICommandPrepare_Unprepare_Proxy(ICommandPrepare *This);", "ICommandPrepare_Unprepare_Stub": "HRESULT WINAPI ICommandPrepare_Unprepare_Stub(ICommandPrepare *This,IErrorInfo **ppErrorInfoRem);", "ICommandProperties_GetProperties_Proxy": "HRESULT WINAPI ICommandProperties_GetProperties_Proxy(ICommandProperties *This,const ULONG cPropertyIDSets,const DBPROPIDSET rgPropertyIDSets[],ULONG *pcPropertySets,DBPROPSET **prgPropertySets);", "ICommandProperties_GetProperties_Stub": "HRESULT WINAPI ICommandProperties_GetProperties_Stub(ICommandProperties *This,const ULONG cPropertyIDSets,const DBPROPIDSET *rgPropertyIDSets,ULONG *pcPropertySets,DBPROPSET **prgPropertySets,IErrorInfo **ppErrorInfoRem);", "ICommandProperties_SetProperties_Proxy": "HRESULT WINAPI ICommandProperties_SetProperties_Proxy(ICommandProperties *This,ULONG cPropertySets,DBPROPSET rgPropertySets[]);", "ICommandProperties_SetProperties_Stub": "HRESULT WINAPI ICommandProperties_SetProperties_Stub(ICommandProperties *This,ULONG cPropertySets,DBPROPSET *rgPropertySets,ULONG cTotalProps,DBPROPSTATUS *rgPropStatus,IErrorInfo **ppErrorInfoRem);", "ICommandText_GetCommandText_Proxy": "HRESULT WINAPI ICommandText_GetCommandText_Proxy(ICommandText *This,GUID *pguidDialect,LPOLESTR *ppwszCommand);", "ICommandText_GetCommandText_Stub": "HRESULT WINAPI ICommandText_GetCommandText_Stub(ICommandText *This,GUID *pguidDialect,LPOLESTR *ppwszCommand,IErrorInfo **ppErrorInfoRem);", "ICommandText_SetCommandText_Proxy": "HRESULT WINAPI ICommandText_SetCommandText_Proxy(ICommandText *This,REFGUID rguidDialect,LPCOLESTR pwszCommand);", "ICommandText_SetCommandText_Stub": "HRESULT WINAPI ICommandText_SetCommandText_Stub(ICommandText *This,REFGUID rguidDialect,LPCOLESTR pwszCommand,IErrorInfo **ppErrorInfoRem);", "ICommandWithParameters_GetParameterInfo_Proxy": "HRESULT WINAPI ICommandWithParameters_GetParameterInfo_Proxy(ICommandWithParameters *This,DB_UPARAMS *pcParams,DBPARAMINFO **prgParamInfo,OLECHAR **ppNamesBuffer);", "ICommandWithParameters_GetParameterInfo_Stub": "HRESULT WINAPI ICommandWithParameters_GetParameterInfo_Stub(ICommandWithParameters *This,DB_UPARAMS *pcParams,DBPARAMINFO **prgParamInfo,DBBYTEOFFSET **prgNameOffsets,DBLENGTH *pcbNamesBuffer,OLECHAR **ppNamesBuffer,IErrorInfo **ppErrorInfoRem);", "ICommandWithParameters_MapParameterNames_Proxy": "HRESULT WINAPI ICommandWithParameters_MapParameterNames_Proxy(ICommandWithParameters *This,DB_UPARAMS cParamNames,const OLECHAR *rgParamNames[],DB_LPARAMS rgParamOrdinals[]);", "ICommandWithParameters_MapParameterNames_Stub": "HRESULT WINAPI ICommandWithParameters_MapParameterNames_Stub(ICommandWithParameters *This,DB_UPARAMS cParamNames,LPCOLESTR *rgParamNames,DB_LPARAMS *rgParamOrdinals,IErrorInfo **ppErrorInfoRem);", "ICommandWithParameters_SetParameterInfo_Proxy": "HRESULT WINAPI ICommandWithParameters_SetParameterInfo_Proxy(ICommandWithParameters *This,DB_UPARAMS cParams,const DB_UPARAMS rgParamOrdinals[],const DBPARAMBINDINFO rgParamBindInfo[]);", "ICommandWithParameters_SetParameterInfo_Stub": "HRESULT WINAPI ICommandWithParameters_SetParameterInfo_Stub(ICommandWithParameters *This,DB_UPARAMS cParams,const DB_UPARAMS *rgParamOrdinals,const DBPARAMBINDINFO *rgParamBindInfo,IErrorInfo **ppErrorInfoRem);", "IColumnsRowset_GetAvailableColumns_Proxy": "HRESULT WINAPI IColumnsRowset_GetAvailableColumns_Proxy(IColumnsRowset *This,DBORDINAL *pcOptColumns,DBID **prgOptColumns);", "IColumnsRowset_GetAvailableColumns_Stub": "HRESULT WINAPI IColumnsRowset_GetAvailableColumns_Stub(IColumnsRowset *This,DBORDINAL *pcOptColumns,DBID **prgOptColumns,IErrorInfo **ppErrorInfoRem);", "IColumnsRowset_GetColumnsRowset_Proxy": "HRESULT WINAPI IColumnsRowset_GetColumnsRowset_Proxy(IColumnsRowset *This,IUnknown *pUnkOuter,DBORDINAL cOptColumns,const DBID rgOptColumns[],REFIID riid,ULONG cPropertySets,DBPROPSET rgPropertySets[],IUnknown **ppColRowset);", "IColumnsRowset_GetColumnsRowset_Stub": "HRESULT WINAPI IColumnsRowset_GetColumnsRowset_Stub(IColumnsRowset *This,IUnknown *pUnkOuter,DBORDINAL cOptColumns,const DBID *rgOptColumns,REFIID riid,ULONG cPropertySets,DBPROPSET *rgPropertySets,IUnknown **ppColRowset,ULONG cTotalProps,DBPROPSTATUS *rgPropStatus,IErrorInfo **ppErrorInfoRem);", "IColumnsInfo_GetColumnInfo_Proxy": "HRESULT WINAPI IColumnsInfo_GetColumnInfo_Proxy(IColumnsInfo *This,DBORDINAL *pcColumns,DBCOLUMNINFO **prgInfo,OLECHAR **ppStringsBuffer);", "IColumnsInfo_GetColumnInfo_Stub": "HRESULT WINAPI IColumnsInfo_GetColumnInfo_Stub(IColumnsInfo *This,DBORDINAL *pcColumns,DBCOLUMNINFO **prgInfo,DBBYTEOFFSET **prgNameOffsets,DBBYTEOFFSET **prgcolumnidOffsets,DBLENGTH *pcbStringsBuffer,OLECHAR **ppStringsBuffer,IErrorInfo **ppErrorInfoRem);", "IColumnsInfo_MapColumnIDs_Proxy": "HRESULT WINAPI IColumnsInfo_MapColumnIDs_Proxy(IColumnsInfo *This,DBORDINAL cColumnIDs,const DBID rgColumnIDs[],DBORDINAL rgColumns[]);", "IColumnsInfo_MapColumnIDs_Stub": "HRESULT WINAPI IColumnsInfo_MapColumnIDs_Stub(IColumnsInfo *This,DBORDINAL cColumnIDs,const DBID *rgColumnIDs,DBORDINAL *rgColumns,IErrorInfo **ppErrorInfoRem);", "IDBCreateCommand_CreateCommand_Proxy": "HRESULT WINAPI IDBCreateCommand_CreateCommand_Proxy(IDBCreateCommand *This,IUnknown *pUnkOuter,REFIID riid,IUnknown **ppCommand);", "IDBCreateCommand_CreateCommand_Stub": "HRESULT WINAPI IDBCreateCommand_CreateCommand_Stub(IDBCreateCommand *This,IUnknown *pUnkOuter,REFIID riid,IUnknown **ppCommand,IErrorInfo **ppErrorInfoRem);", "IDBCreateSession_CreateSession_Proxy": "HRESULT WINAPI IDBCreateSession_CreateSession_Proxy(IDBCreateSession *This,IUnknown *pUnkOuter,REFIID riid,IUnknown **ppDBSession);", "IDBCreateSession_CreateSession_Stub": "HRESULT WINAPI IDBCreateSession_CreateSession_Stub(IDBCreateSession *This,IUnknown *pUnkOuter,REFIID riid,IUnknown **ppDBSession,IErrorInfo **ppErrorInfoRem);", "ISourcesRowset_GetSourcesRowset_Proxy": "HRESULT WINAPI ISourcesRowset_GetSourcesRowset_Proxy(ISourcesRowset *This,IUnknown *pUnkOuter,REFIID riid,ULONG cPropertySets,DBPROPSET rgProperties[],IUnknown **ppSourcesRowset);", "ISourcesRowset_GetSourcesRowset_Stub": "HRESULT WINAPI ISourcesRowset_GetSourcesRowset_Stub(ISourcesRowset *This,IUnknown *pUnkOuter,REFIID riid,ULONG cPropertySets,DBPROPSET *rgProperties,IUnknown **ppSourcesRowset,ULONG cTotalProps,DBPROPSTATUS *rgPropStatus,IErrorInfo **ppErrorInfoRem);", "IDBProperties_GetProperties_Proxy": "HRESULT WINAPI IDBProperties_GetProperties_Proxy(IDBProperties *This,ULONG cPropertyIDSets,const DBPROPIDSET rgPropertyIDSets[],ULONG *pcPropertySets,DBPROPSET **prgPropertySets);", "IDBProperties_GetProperties_Stub": "HRESULT WINAPI IDBProperties_GetProperties_Stub(IDBProperties *This,ULONG cPropertyIDSets,const DBPROPIDSET *rgPropertyIDSets,ULONG *pcPropertySets,DBPROPSET **prgPropertySets,IErrorInfo **ppErrorInfoRem);", "IDBProperties_GetPropertyInfo_Proxy": "HRESULT WINAPI IDBProperties_GetPropertyInfo_Proxy(IDBProperties *This,ULONG cPropertyIDSets,const DBPROPIDSET rgPropertyIDSets[],ULONG *pcPropertyInfoSets,DBPROPINFOSET **prgPropertyInfoSets,OLECHAR **ppDescBuffer);", "IDBProperties_GetPropertyInfo_Stub": "HRESULT WINAPI IDBProperties_GetPropertyInfo_Stub(IDBProperties *This,ULONG cPropertyIDSets,const DBPROPIDSET *rgPropertyIDSets,ULONG *pcPropertyInfoSets,DBPROPINFOSET **prgPropertyInfoSets,ULONG *pcOffsets,DBBYTEOFFSET **prgDescOffsets,ULONG *pcbDescBuffer,OLECHAR **ppDescBuffer,IErrorInfo **ppErrorInfoRem);", "IDBProperties_SetProperties_Proxy": "HRESULT WINAPI IDBProperties_SetProperties_Proxy(IDBProperties *This,ULONG cPropertySets,DBPROPSET rgPropertySets[]);", "IDBProperties_SetProperties_Stub": "HRESULT WINAPI IDBProperties_SetProperties_Stub(IDBProperties *This,ULONG cPropertySets,DBPROPSET *rgPropertySets,ULONG cTotalProps,DBPROPSTATUS *rgPropStatus,IErrorInfo **ppErrorInfoRem);", "IDBInitialize_Initialize_Proxy": "HRESULT WINAPI IDBInitialize_Initialize_Proxy(IDBInitialize *This);", "IDBInitialize_Initialize_Stub": "HRESULT WINAPI IDBInitialize_Initialize_Stub(IDBInitialize *This,IErrorInfo **ppErrorInfoRem);", "IDBInitialize_Uninitialize_Proxy": "HRESULT WINAPI IDBInitialize_Uninitialize_Proxy(IDBInitialize *This);", "IDBInitialize_Uninitialize_Stub": "HRESULT WINAPI IDBInitialize_Uninitialize_Stub(IDBInitialize *This,IErrorInfo **ppErrorInfoRem);", "IDBInfo_GetKeywords_Proxy": "HRESULT WINAPI IDBInfo_GetKeywords_Proxy(IDBInfo *This,LPOLESTR *ppwszKeywords);", "IDBInfo_GetKeywords_Stub": "HRESULT WINAPI IDBInfo_GetKeywords_Stub(IDBInfo *This,LPOLESTR *ppwszKeywords,IErrorInfo **ppErrorInfoRem);", "IDBInfo_GetLiteralInfo_Proxy": "HRESULT WINAPI IDBInfo_GetLiteralInfo_Proxy(IDBInfo *This,ULONG cLiterals,const DBLITERAL rgLiterals[],ULONG *pcLiteralInfo,DBLITERALINFO **prgLiteralInfo,OLECHAR **ppCharBuffer);", "IDBInfo_GetLiteralInfo_Stub": "HRESULT WINAPI IDBInfo_GetLiteralInfo_Stub(IDBInfo *This,ULONG cLiterals,const DBLITERAL *rgLiterals,ULONG *pcLiteralInfo,DBLITERALINFO **prgLiteralInfo,DB_UPARAMS **prgLVOffsets,DB_UPARAMS **prgICOffsets,DB_UPARAMS **prgISCOffsets,ULONG *pcbCharBuffer,OLECHAR **ppCharBuffer,IErrorInfo **ppErrorInfoRem);", "IDBDataSourceAdmin_CreateDataSource_Proxy": "HRESULT WINAPI IDBDataSourceAdmin_CreateDataSource_Proxy(IDBDataSourceAdmin *This,ULONG cPropertySets,DBPROPSET rgPropertySets[],IUnknown *pUnkOuter,REFIID riid,IUnknown **ppDBSession);", "IDBDataSourceAdmin_CreateDataSource_Stub": "HRESULT WINAPI IDBDataSourceAdmin_CreateDataSource_Stub(IDBDataSourceAdmin *This,ULONG cPropertySets,DBPROPSET *rgPropertySets,IUnknown *pUnkOuter,REFIID riid,IUnknown **ppDBSession,ULONG cTotalProps,DBPROPSTATUS *rgPropStatus,IErrorInfo **ppErrorInfoRem);", "IDBDataSourceAdmin_DestroyDataSource_Proxy": "HRESULT WINAPI IDBDataSourceAdmin_DestroyDataSource_Proxy(IDBDataSourceAdmin *This);", "IDBDataSourceAdmin_DestroyDataSource_Stub": "HRESULT WINAPI IDBDataSourceAdmin_DestroyDataSource_Stub(IDBDataSourceAdmin *This,IErrorInfo **ppErrorInfoRem);", "IDBDataSourceAdmin_GetCreationProperties_Proxy": "HRESULT WINAPI IDBDataSourceAdmin_GetCreationProperties_Proxy(IDBDataSourceAdmin *This,ULONG cPropertyIDSets,const DBPROPIDSET rgPropertyIDSets[],ULONG *pcPropertyInfoSets,DBPROPINFOSET **prgPropertyInfoSets,OLECHAR **ppDescBuffer);", "IDBDataSourceAdmin_GetCreationProperties_Stub": "HRESULT WINAPI IDBDataSourceAdmin_GetCreationProperties_Stub(IDBDataSourceAdmin *This,ULONG cPropertyIDSets,const DBPROPIDSET *rgPropertyIDSets,ULONG *pcPropertyInfoSets,DBPROPINFOSET **prgPropertyInfoSets,DBCOUNTITEM *pcOffsets,DBBYTEOFFSET **prgDescOffsets,ULONG *pcbDescBuffer,OLECHAR **ppDescBuffer,IErrorInfo **ppErrorInfoRem);", "IDBDataSourceAdmin_ModifyDataSource_Proxy": "HRESULT WINAPI IDBDataSourceAdmin_ModifyDataSource_Proxy(IDBDataSourceAdmin *This,ULONG cPropertySets,DBPROPSET rgPropertySets[]);", "IDBDataSourceAdmin_ModifyDataSource_Stub": "HRESULT WINAPI IDBDataSourceAdmin_ModifyDataSource_Stub(IDBDataSourceAdmin *This,ULONG cPropertySets,DBPROPSET *rgPropertySets,IErrorInfo **ppErrorInfoRem);", "IDBAsynchNotify_OnLowResource_Proxy": "HRESULT WINAPI IDBAsynchNotify_OnLowResource_Proxy(IDBAsynchNotify *This,DB_DWRESERVE dwReserved);", "IDBAsynchNotify_OnLowResource_Stub": "HRESULT WINAPI IDBAsynchNotify_OnLowResource_Stub(IDBAsynchNotify *This,DB_DWRESERVE dwReserved);", "IDBAsynchNotify_OnProgress_Proxy": "HRESULT WINAPI IDBAsynchNotify_OnProgress_Proxy(IDBAsynchNotify *This,HCHAPTER hChapter,DBASYNCHOP eOperation,DBCOUNTITEM ulProgress,DBCOUNTITEM ulProgressMax,DBASYNCHPHASE eAsynchPhase,LPOLESTR pwszStatusText);", "IDBAsynchNotify_OnProgress_Stub": "HRESULT WINAPI IDBAsynchNotify_OnProgress_Stub(IDBAsynchNotify *This,HCHAPTER hChapter,DBASYNCHOP eOperation,DBCOUNTITEM ulProgress,DBCOUNTITEM ulProgressMax,DBASYNCHPHASE eAsynchPhase,LPOLESTR pwszStatusText);", "IDBAsynchNotify_OnStop_Proxy": "HRESULT WINAPI IDBAsynchNotify_OnStop_Proxy(IDBAsynchNotify *This,HCHAPTER hChapter,DBASYNCHOP eOperation,HRESULT hrStatus,LPOLESTR pwszStatusText);", "IDBAsynchNotify_OnStop_Stub": "HRESULT WINAPI IDBAsynchNotify_OnStop_Stub(IDBAsynchNotify *This,HCHAPTER hChapter,DBASYNCHOP eOperation,HRESULT hrStatus,LPOLESTR pwszStatusText);", "IDBAsynchStatus_Abort_Proxy": "HRESULT WINAPI IDBAsynchStatus_Abort_Proxy(IDBAsynchStatus *This,HCHAPTER hChapter,DBASYNCHOP eOperation);", "IDBAsynchStatus_Abort_Stub": "HRESULT WINAPI IDBAsynchStatus_Abort_Stub(IDBAsynchStatus *This,HCHAPTER hChapter,DBASYNCHOP eOperation,IErrorInfo **ppErrorInfoRem);", "IDBAsynchStatus_GetStatus_Proxy": "HRESULT WINAPI IDBAsynchStatus_GetStatus_Proxy(IDBAsynchStatus *This,HCHAPTER hChapter,DBASYNCHOP eOperation,DBCOUNTITEM *pulProgress,DBCOUNTITEM *pulProgressMax,DBASYNCHPHASE *peAsynchPhase,LPOLESTR *ppwszStatusText);", "IDBAsynchStatus_GetStatus_Stub": "HRESULT WINAPI IDBAsynchStatus_GetStatus_Stub(IDBAsynchStatus *This,HCHAPTER hChapter,DBASYNCHOP eOperation,DBCOUNTITEM *pulProgress,DBCOUNTITEM *pulProgressMax,DBASYNCHPHASE *peAsynchPhase,LPOLESTR *ppwszStatusText,IErrorInfo **ppErrorInfoRem);", "ISessionProperties_GetProperties_Proxy": "HRESULT WINAPI ISessionProperties_GetProperties_Proxy(ISessionProperties *This,ULONG cPropertyIDSets,const DBPROPIDSET rgPropertyIDSets[],ULONG *pcPropertySets,DBPROPSET **prgPropertySets);", "ISessionProperties_GetProperties_Stub": "HRESULT WINAPI ISessionProperties_GetProperties_Stub(ISessionProperties *This,ULONG cPropertyIDSets,const DBPROPIDSET *rgPropertyIDSets,ULONG *pcPropertySets,DBPROPSET **prgPropertySets,IErrorInfo **ppErrorInfoRem);", "ISessionProperties_SetProperties_Proxy": "HRESULT WINAPI ISessionProperties_SetProperties_Proxy(ISessionProperties *This,ULONG cPropertySets,DBPROPSET rgPropertySets[]);", "ISessionProperties_SetProperties_Stub": "HRESULT WINAPI ISessionProperties_SetProperties_Stub(ISessionProperties *This,ULONG cPropertySets,DBPROPSET *rgPropertySets,ULONG cTotalProps,DBPROPSTATUS *rgPropStatus,IErrorInfo **ppErrorInfoRem);", "IIndexDefinition_CreateIndex_Proxy": "HRESULT WINAPI IIndexDefinition_CreateIndex_Proxy(IIndexDefinition *This,DBID *pTableID,DBID *pIndexID,DBORDINAL cIndexColumnDescs,const DBINDEXCOLUMNDESC rgIndexColumnDescs[],ULONG cPropertySets,DBPROPSET rgPropertySets[],DBID **ppIndexID);", "IIndexDefinition_CreateIndex_Stub": "HRESULT WINAPI IIndexDefinition_CreateIndex_Stub(IIndexDefinition *This,DBID *pTableID,DBID *pIndexID,DBORDINAL cIndexColumnDescs,const DBINDEXCOLUMNDESC *rgIndexColumnDescs,ULONG cPropertySets,DBPROPSET *rgPropertySets,DBID **ppIndexID,ULONG cTotalProps,DBPROPSTATUS *rgPropStatus,IErrorInfo **ppErrorInfoRem);", "IIndexDefinition_DropIndex_Proxy": "HRESULT WINAPI IIndexDefinition_DropIndex_Proxy(IIndexDefinition *This,DBID *pTableID,DBID *pIndexID);", "IIndexDefinition_DropIndex_Stub": "HRESULT WINAPI IIndexDefinition_DropIndex_Stub(IIndexDefinition *This,DBID *pTableID,DBID *pIndexID,IErrorInfo **ppErrorInfoRem);", "ITableDefinition_CreateTable_Proxy": "HRESULT WINAPI ITableDefinition_CreateTable_Proxy(ITableDefinition *This,IUnknown *pUnkOuter,DBID *pTableID,DBORDINAL cColumnDescs,const DBCOLUMNDESC rgColumnDescs[],REFIID riid,ULONG cPropertySets,DBPROPSET rgPropertySets[],DBID **ppTableID,IUnknown **ppRowset);", "ITableDefinition_CreateTable_Stub": "HRESULT WINAPI ITableDefinition_CreateTable_Stub(ITableDefinition *This,IUnknown *pUnkOuter,DBID *pTableID,DBORDINAL cColumnDescs,const DBCOLUMNDESC *rgColumnDescs,REFIID riid,ULONG cPropertySets,DBPROPSET *rgPropertySets,DBID **ppTableID,IUnknown **ppRowset,ULONG cTotalProps,DBPROPSTATUS *rgPropStatus,WINBOOL *pfTableCreated,IErrorInfo **ppErrorInfoRem);", "ITableDefinition_DropTable_Proxy": "HRESULT WINAPI ITableDefinition_DropTable_Proxy(ITableDefinition *This,DBID *pTableID);", "ITableDefinition_DropTable_Stub": "HRESULT WINAPI ITableDefinition_DropTable_Stub(ITableDefinition *This,DBID *pTableID,IErrorInfo **ppErrorInfoRem);", "ITableDefinition_AddColumn_Proxy": "HRESULT WINAPI ITableDefinition_AddColumn_Proxy(ITableDefinition *This,DBID *pTableID,DBCOLUMNDESC *pColumnDesc,DBID **ppColumnID);", "ITableDefinition_AddColumn_Stub": "HRESULT WINAPI ITableDefinition_AddColumn_Stub(ITableDefinition *This,DBID *pTableID,DBCOLUMNDESC *pColumnDesc,DBID **ppColumnID,ULONG cTotalProps,DBPROPSTATUS *rgPropStatus,IErrorInfo **ppErrorInfoRem);", "ITableDefinition_DropColumn_Proxy": "HRESULT WINAPI ITableDefinition_DropColumn_Proxy(ITableDefinition *This,DBID *pTableID,DBID *pColumnID);", "ITableDefinition_DropColumn_Stub": "HRESULT WINAPI ITableDefinition_DropColumn_Stub(ITableDefinition *This,DBID *pTableID,DBID *pColumnID,IErrorInfo **ppErrorInfoRem);", "IOpenRowset_OpenRowset_Proxy": "HRESULT WINAPI IOpenRowset_OpenRowset_Proxy(IOpenRowset *This,IUnknown *pUnkOuter,DBID *pTableID,DBID *pIndexID,REFIID riid,ULONG cPropertySets,DBPROPSET rgPropertySets[],IUnknown **ppRowset);", "IOpenRowset_OpenRowset_Stub": "HRESULT WINAPI IOpenRowset_OpenRowset_Stub(IOpenRowset *This,IUnknown *pUnkOuter,DBID *pTableID,DBID *pIndexID,REFIID riid,ULONG cPropertySets,DBPROPSET *rgPropertySets,IUnknown **ppRowset,ULONG cTotalProps,DBPROPSTATUS *rgPropStatus,IErrorInfo **ppErrorInfoRem);", "IDBSchemaRowset_GetRowset_Proxy": "HRESULT WINAPI IDBSchemaRowset_GetRowset_Proxy(IDBSchemaRowset *This,IUnknown *pUnkOuter,REFGUID rguidSchema,ULONG cRestrictions,const VARIANT rgRestrictions[],REFIID riid,ULONG cPropertySets,DBPROPSET rgPropertySets[],IUnknown **ppRowset);", "IDBSchemaRowset_GetRowset_Stub": "HRESULT WINAPI IDBSchemaRowset_GetRowset_Stub(IDBSchemaRowset *This,IUnknown *pUnkOuter,REFGUID rguidSchema,ULONG cRestrictions,const VARIANT *rgRestrictions,REFIID riid,ULONG cPropertySets,DBPROPSET *rgPropertySets,IUnknown **ppRowset,ULONG cTotalProps,DBPROPSTATUS *rgPropStatus,IErrorInfo **ppErrorInfoRem);", "IDBSchemaRowset_GetSchemas_Proxy": "HRESULT WINAPI IDBSchemaRowset_GetSchemas_Proxy(IDBSchemaRowset *This,ULONG *pcSchemas,GUID **prgSchemas,ULONG **prgRestrictionSupport);", "IDBSchemaRowset_GetSchemas_Stub": "HRESULT WINAPI IDBSchemaRowset_GetSchemas_Stub(IDBSchemaRowset *This,ULONG *pcSchemas,GUID **prgSchemas,ULONG **prgRestrictionSupport,IErrorInfo **ppErrorInfoRem);", "IErrorRecords_AddErrorRecord_Proxy": "HRESULT WINAPI IErrorRecords_AddErrorRecord_Proxy(IErrorRecords *This,ERRORINFO *pErrorInfo,DWORD dwLookupID,DISPPARAMS *pdispparams,IUnknown *punkCustomError,DWORD dwDynamicErrorID);", "IErrorRecords_AddErrorRecord_Stub": "HRESULT WINAPI IErrorRecords_AddErrorRecord_Stub(IErrorRecords *This,ERRORINFO *pErrorInfo,DWORD dwLookupID,DISPPARAMS *pdispparams,IUnknown *punkCustomError,DWORD dwDynamicErrorID,IErrorInfo **ppErrorInfoRem);", "IErrorRecords_GetBasicErrorInfo_Proxy": "HRESULT WINAPI IErrorRecords_GetBasicErrorInfo_Proxy(IErrorRecords *This,ULONG ulRecordNum,ERRORINFO *pErrorInfo);", "IErrorRecords_GetBasicErrorInfo_Stub": "HRESULT WINAPI IErrorRecords_GetBasicErrorInfo_Stub(IErrorRecords *This,ULONG ulRecordNum,ERRORINFO *pErrorInfo,IErrorInfo **ppErrorInfoRem);", "IErrorRecords_GetCustomErrorObject_Proxy": "HRESULT WINAPI IErrorRecords_GetCustomErrorObject_Proxy(IErrorRecords *This,ULONG ulRecordNum,REFIID riid,IUnknown **ppObject);", "IErrorRecords_GetCustomErrorObject_Stub": "HRESULT WINAPI IErrorRecords_GetCustomErrorObject_Stub(IErrorRecords *This,ULONG ulRecordNum,REFIID riid,IUnknown **ppObject,IErrorInfo **ppErrorInfoRem);", "IErrorRecords_GetErrorInfo_Proxy": "HRESULT WINAPI IErrorRecords_GetErrorInfo_Proxy(IErrorRecords *This,ULONG ulRecordNum,LCID lcid,IErrorInfo **ppErrorInfo);", "IErrorRecords_GetErrorInfo_Stub": "HRESULT WINAPI IErrorRecords_GetErrorInfo_Stub(IErrorRecords *This,ULONG ulRecordNum,LCID lcid,IErrorInfo **ppErrorInfo,IErrorInfo **ppErrorInfoRem);", "IErrorRecords_GetErrorParameters_Proxy": "HRESULT WINAPI IErrorRecords_GetErrorParameters_Proxy(IErrorRecords *This,ULONG ulRecordNum,DISPPARAMS *pdispparams);", "IErrorRecords_GetErrorParameters_Stub": "HRESULT WINAPI IErrorRecords_GetErrorParameters_Stub(IErrorRecords *This,ULONG ulRecordNum,DISPPARAMS *pdispparams,IErrorInfo **ppErrorInfoRem);", "IErrorRecords_GetRecordCount_Proxy": "HRESULT WINAPI IErrorRecords_GetRecordCount_Proxy(IErrorRecords *This,ULONG *pcRecords);", "IErrorRecords_GetRecordCount_Stub": "HRESULT WINAPI IErrorRecords_GetRecordCount_Stub(IErrorRecords *This,ULONG *pcRecords,IErrorInfo **ppErrorInfoRem);", "IErrorLookup_GetErrorDescription_Proxy": "HRESULT WINAPI IErrorLookup_GetErrorDescription_Proxy(IErrorLookup *This,HRESULT hrError,DWORD dwLookupID,DISPPARAMS *pdispparams,LCID lcid,BSTR *pbstrSource,BSTR *pbstrDescription);", "IErrorLookup_GetErrorDescription_Stub": "HRESULT WINAPI IErrorLookup_GetErrorDescription_Stub(IErrorLookup *This,HRESULT hrError,DWORD dwLookupID,DISPPARAMS *pdispparams,LCID lcid,BSTR *pbstrSource,BSTR *pbstrDescription,IErrorInfo **ppErrorInfoRem);", "IErrorLookup_GetHelpInfo_Proxy": "HRESULT WINAPI IErrorLookup_GetHelpInfo_Proxy(IErrorLookup *This,HRESULT hrError,DWORD dwLookupID,LCID lcid,BSTR *pbstrHelpFile,DWORD *pdwHelpContext);", "IErrorLookup_GetHelpInfo_Stub": "HRESULT WINAPI IErrorLookup_GetHelpInfo_Stub(IErrorLookup *This,HRESULT hrError,DWORD dwLookupID,LCID lcid,BSTR *pbstrHelpFile,DWORD *pdwHelpContext,IErrorInfo **ppErrorInfoRem);", "IErrorLookup_ReleaseErrors_Proxy": "HRESULT WINAPI IErrorLookup_ReleaseErrors_Proxy(IErrorLookup *This,const DWORD dwDynamicErrorID);", "IErrorLookup_ReleaseErrors_Stub": "HRESULT WINAPI IErrorLookup_ReleaseErrors_Stub(IErrorLookup *This,const DWORD dwDynamicErrorID,IErrorInfo **ppErrorInfoRem);", "ISQLErrorInfo_GetSQLInfo_Proxy": "HRESULT WINAPI ISQLErrorInfo_GetSQLInfo_Proxy(ISQLErrorInfo *This,BSTR *pbstrSQLState,LONG *plNativeError);", "ISQLErrorInfo_GetSQLInfo_Stub": "HRESULT WINAPI ISQLErrorInfo_GetSQLInfo_Stub(ISQLErrorInfo *This,BSTR *pbstrSQLState,LONG *plNativeError,IErrorInfo **ppErrorInfoRem);", "IGetDataSource_GetDataSource_Proxy": "HRESULT WINAPI IGetDataSource_GetDataSource_Proxy(IGetDataSource *This,REFIID riid,IUnknown **ppDataSource);", "IGetDataSource_GetDataSource_Stub": "HRESULT WINAPI IGetDataSource_GetDataSource_Stub(IGetDataSource *This,REFIID riid,IUnknown **ppDataSource,IErrorInfo **ppErrorInfoRem);", "ITransactionLocal_GetOptionsObject_Proxy": "HRESULT WINAPI ITransactionLocal_GetOptionsObject_Proxy(ITransactionLocal *This,ITransactionOptions **ppOptions);", "ITransactionLocal_GetOptionsObject_Stub": "HRESULT WINAPI ITransactionLocal_GetOptionsObject_Stub(ITransactionLocal *This,ITransactionOptions **ppOptions,IErrorInfo **ppErrorInfoRem);", "ITransactionLocal_StartTransaction_Proxy": "HRESULT WINAPI ITransactionLocal_StartTransaction_Proxy(ITransactionLocal *This,ISOLEVEL isoLevel,ULONG isoFlags,ITransactionOptions *pOtherOptions,ULONG *pulTransactionLevel);", "ITransactionLocal_StartTransaction_Stub": "HRESULT WINAPI ITransactionLocal_StartTransaction_Stub(ITransactionLocal *This,ISOLEVEL isoLevel,ULONG isoFlags,ITransactionOptions *pOtherOptions,ULONG *pulTransactionLevel,IErrorInfo **ppErrorInfoRem);", "ITransactionJoin_GetOptionsObject_Proxy": "HRESULT WINAPI ITransactionJoin_GetOptionsObject_Proxy(ITransactionJoin *This,ITransactionOptions **ppOptions);", "ITransactionJoin_GetOptionsObject_Stub": "HRESULT WINAPI ITransactionJoin_GetOptionsObject_Stub(ITransactionJoin *This,ITransactionOptions **ppOptions,IErrorInfo **ppErrorInfoRem);", "ITransactionJoin_JoinTransaction_Proxy": "HRESULT WINAPI ITransactionJoin_JoinTransaction_Proxy(ITransactionJoin *This,IUnknown *punkTransactionCoord,ISOLEVEL isoLevel,ULONG isoFlags,ITransactionOptions *pOtherOptions);", "ITransactionJoin_JoinTransaction_Stub": "HRESULT WINAPI ITransactionJoin_JoinTransaction_Stub(ITransactionJoin *This,IUnknown *punkTransactionCoord,ISOLEVEL isoLevel,ULONG isoFlags,ITransactionOptions *pOtherOptions,IErrorInfo **ppErrorInfoRem);", "ITransactionObject_GetTransactionObject_Proxy": "HRESULT WINAPI ITransactionObject_GetTransactionObject_Proxy(ITransactionObject *This,ULONG ulTransactionLevel,ITransaction **ppTransactionObject);", "ITransactionObject_GetTransactionObject_Stub": "HRESULT WINAPI ITransactionObject_GetTransactionObject_Stub(ITransactionObject *This,ULONG ulTransactionLevel,ITransaction **ppTransactionObject,IErrorInfo **ppErrorInfoRem);", "IScopedOperations_Copy_Proxy": "HRESULT WINAPI IScopedOperations_Copy_Proxy(IScopedOperations *This,DBCOUNTITEM cRows,LPCOLESTR rgpwszSourceURLs[],LPCOLESTR rgpwszDestURLs[],DWORD dwCopyFlags,IAuthenticate *pAuthenticate,DBSTATUS rgdwStatus[],LPOLESTR rgpwszNewURLs[],OLECHAR **ppStringsBuffer);", "IScopedOperations_Copy_Stub": "HRESULT WINAPI IScopedOperations_Copy_Stub(IScopedOperations *This,DBCOUNTITEM cRows,LPCOLESTR *rgpwszSourceURLs,LPCOLESTR *rgpwszDestURLs,DWORD dwCopyFlags,IAuthenticate *pAuthenticate,DBSTATUS *rgdwStatus,DBBYTEOFFSET **prgulNewURLOffsets,ULONG *pcbStringsBuffer,OLECHAR **ppStringsBuffer);", "IScopedOperations_Move_Proxy": "HRESULT WINAPI IScopedOperations_Move_Proxy(IScopedOperations *This,DBCOUNTITEM cRows,LPCOLESTR rgpwszSourceURLs[],LPCOLESTR rgpwszDestURLs[],DWORD dwMoveFlags,IAuthenticate *pAuthenticate,DBSTATUS rgdwStatus[],LPOLESTR rgpwszNewURLs[],OLECHAR **ppStringsBuffer);", "IScopedOperations_Move_Stub": "HRESULT WINAPI IScopedOperations_Move_Stub(IScopedOperations *This,DBCOUNTITEM cRows,LPCOLESTR *rgpwszSourceURLs,LPCOLESTR *rgpwszDestURLs,DWORD dwMoveFlags,IAuthenticate *pAuthenticate,DBSTATUS *rgdwStatus,DBBYTEOFFSET **prgulNewURLOffsets,ULONG *pcbStringsBuffer,OLECHAR **ppStringsBuffer);", "IScopedOperations_Delete_Proxy": "HRESULT WINAPI IScopedOperations_Delete_Proxy(IScopedOperations *This,DBCOUNTITEM cRows,LPCOLESTR rgpwszURLs[],DWORD dwDeleteFlags,DBSTATUS rgdwStatus[]);", "IScopedOperations_Delete_Stub": "HRESULT WINAPI IScopedOperations_Delete_Stub(IScopedOperations *This,DBCOUNTITEM cRows,LPCOLESTR *rgpwszURLs,DWORD dwDeleteFlags,DBSTATUS *rgdwStatus);", "IScopedOperations_OpenRowset_Proxy": "HRESULT WINAPI IScopedOperations_OpenRowset_Proxy(IScopedOperations *This,IUnknown *pUnkOuter,DBID *pTableID,DBID *pIndexID,REFIID riid,ULONG cPropertySets,DBPROPSET rgPropertySets[],IUnknown **ppRowset);", "IScopedOperations_OpenRowset_Stub": "HRESULT WINAPI IScopedOperations_OpenRowset_Stub(IScopedOperations *This,IUnknown *pUnkOuter,DBID *pTableID,DBID *pIndexID,REFIID riid,ULONG cPropertySets,DBPROPSET *rgPropertySets,IUnknown **ppRowset,ULONG cTotalProps,DBPROPSTATUS *rgPropStatus);", "IBindResource_Bind_Proxy": "HRESULT WINAPI IBindResource_Bind_Proxy(IBindResource *This,IUnknown *pUnkOuter,LPCOLESTR pwszURL,DBBINDURLFLAG dwBindURLFlags,REFGUID rguid,REFIID riid,IAuthenticate *pAuthenticate,DBIMPLICITSESSION *pImplSession,DBBINDURLSTATUS *pdwBindStatus,IUnknown **ppUnk);", "IBindResource_Bind_Stub": "HRESULT WINAPI IBindResource_Bind_Stub(IBindResource *This,IUnknown *pUnkOuter,LPCOLESTR pwszURL,DBBINDURLFLAG dwBindURLFlags,REFGUID rguid,REFIID riid,IAuthenticate *pAuthenticate,IUnknown *pSessionUnkOuter,IID *piid,IUnknown **ppSession,DBBINDURLSTATUS *pdwBindStatus,IUnknown **ppUnk);", "ICreateRow_CreateRow_Proxy": "HRESULT WINAPI ICreateRow_CreateRow_Proxy(ICreateRow *This,IUnknown *pUnkOuter,LPCOLESTR pwszURL,DBBINDURLFLAG dwBindURLFlags,REFGUID rguid,REFIID riid,IAuthenticate *pAuthenticate,DBIMPLICITSESSION *pImplSession,DBBINDURLSTATUS *pdwBindStatus,LPOLESTR *ppwszNewURL,IUnknown **ppUnk);", "ICreateRow_CreateRow_Stub": "HRESULT WINAPI ICreateRow_CreateRow_Stub(ICreateRow *This,IUnknown *pUnkOuter,LPCOLESTR pwszURL,DBBINDURLFLAG dwBindURLFlags,REFGUID rguid,REFIID riid,IAuthenticate *pAuthenticate,IUnknown *pSessionUnkOuter,IID *piid,IUnknown **ppSession,DBBINDURLSTATUS *pdwBindStatus,LPOLESTR *ppwszNewURL,IUnknown **ppUnk);", "IColumnsInfo2_GetRestrictedColumnInfo_Proxy": "HRESULT WINAPI IColumnsInfo2_GetRestrictedColumnInfo_Proxy(IColumnsInfo2 *This,DBORDINAL cColumnIDMasks,const DBID rgColumnIDMasks[],DWORD dwFlags,DBORDINAL *pcColumns,DBID **prgColumnIDs,DBCOLUMNINFO **prgColumnInfo,OLECHAR **ppStringsBuffer);", "IColumnsInfo2_GetRestrictedColumnInfo_Stub": "HRESULT WINAPI IColumnsInfo2_GetRestrictedColumnInfo_Stub(IColumnsInfo2 *This,DBORDINAL cColumnIDMasks,const DBID *rgColumnIDMasks,DWORD dwFlags,DBORDINAL *pcColumns,DBID **prgColumnIDs,DBCOLUMNINFO **prgColumnInfo,DBBYTEOFFSET **prgNameOffsets,DBBYTEOFFSET **prgcolumnidOffsets,DBLENGTH *pcbStringsBuffer,OLECHAR **ppStringsBuffer);", "IRegisterProvider_GetURLMapping_Proxy": "HRESULT WINAPI IRegisterProvider_GetURLMapping_Proxy(IRegisterProvider *This,LPCOLESTR pwszURL,DB_DWRESERVE dwReserved,CLSID *pclsidProvider);", "IRegisterProvider_GetURLMapping_Stub": "HRESULT WINAPI IRegisterProvider_GetURLMapping_Stub(IRegisterProvider *This,LPCOLESTR pwszURL,DB_DWRESERVE dwReserved,CLSID *pclsidProvider);", "I_CryptInstallAsn1Module": "HCRYPTASN1MODULE WINAPI I_CryptInstallAsn1Module(ASN1module_t pMod,DWORD dwFlags,void *pvReserved);", "I_CryptUninstallAsn1Module": "WINBOOL WINAPI I_CryptUninstallAsn1Module(HCRYPTASN1MODULE hAsn1Module);", "I_CryptGetAsn1Encoder": "ASN1encoding_t WINAPI I_CryptGetAsn1Encoder(HCRYPTASN1MODULE hAsn1Module);", "I_CryptGetAsn1Decoder": "ASN1decoding_t WINAPI I_CryptGetAsn1Decoder(HCRYPTASN1MODULE hAsn1Module);", "AddIScsiConnectionA": "HRESULT WINAPI AddIScsiConnectionA(PISCSI_UNIQUE_SESSION_ID UniqueSessionId,PVOID Reserved,ULONG InitiatorPortNumber,PISCSI_TARGET_PORTALA TargetPortal,ISCSI_SECURITY_FLAGS SecurityFlags,PSCSI_LOGIN_OPTIONS LoginOptions,ULONG KeySize,PCHAR Key,PISCSI_UNIQUE_CONNECTION_ID ConnectionId);", "AddIScsiConnectionW": "HRESULT WINAPI AddIScsiConnectionW(PISCSI_UNIQUE_SESSION_ID UniqueSessionId,PVOID Reserved,ULONG InitiatorPortNumber,PISCSI_TARGET_PORTALW TargetPortal,ISCSI_SECURITY_FLAGS SecurityFlags,PSCSI_LOGIN_OPTIONS LoginOptions,ULONG KeySize,PCHAR Key,PISCSI_UNIQUE_CONNECTION_ID ConnectionId);", "AddIScsiSendTargetPortalA": "HRESULT WINAPI AddIScsiSendTargetPortalA(PCHAR InitiatorName,ULONG InitiatorPortNumber,PISCI_LOGIN_OPTIONS LoginOptions,ISCSI_SECURITY_FLAGS SecurityFlags,PISCSI_TARGET_PORTALA Portal);", "AddIScsiSendTargetPortalW": "HRESULT WINAPI AddIScsiSendTargetPortalW(PWCHAR InitiatorName,ULONG InitiatorPortNumber,PISCI_LOGIN_OPTIONS LoginOptions,ISCSI_SECURITY_FLAGS SecurityFlags,PISCSI_TARGET_PORTALW Portal);", "AddIScsiStaticTargetA": "HRESULT WINAPI AddIScsiStaticTargetA(PCHAR TargetName,PCHAR TargetAlias,ISCSI_TARGET_FLAGS TargetFlags,BOOLEAN Persist,PISCSI_TARGET_MAPPINGA Mappings,PISCSI_LOGIN_OPTIONS LoginOptions,PISCSI_TARGET_PORTAL_GROUPA PortalGroup);", "AddIScsiStaticTargetW": "HRESULT WINAPI AddIScsiStaticTargetW(PWCHAR TargetName,PWCHAR TargetAlias,ISCSI_TARGET_FLAGS TargetFlags,BOOLEAN Persist,PISCSI_TARGET_MAPPINGW Mappings,PISCSI_LOGIN_OPTIONS LoginOptions,PISCSI_TARGET_PORTAL_GROUPW PortalGroup);", "AddISNSServerA": "HRESULT WINAPI AddISNSServerA(PCHAR Address);", "AddISNSServerW": "HRESULT WINAPI AddISNSServerW(PWCHAR Address);", "AddRadiusServerA": "HRESULT WINAPI AddRadiusServerA(PCHAR Address);", "AddRadiusServerW": "HRESULT WINAPI AddRadiusServerW(PWCHAR Address);", "AddPersistentiScsiDeviceA": "HRESULT WINAPI AddPersistentiScsiDeviceA(PCHAR VolumePath);", "AddPersistentiScsiDeviceW": "HRESULT WINAPI AddPersistentiScsiDeviceW(PWCHAR VolumePath);", "ClearPersistentiScsiDevices": "HRESULT WINAPI ClearPersistentiScsiDevices(void);", "RemoveIScsiPersistentTargetA": "HRESULT WINAPI RemoveIScsiPersistentTargetA(", "RemoveIScsiPersistentTargetW": "HRESULT WINAPI RemoveIScsiPersistentTargetW(", "RemoveIScsiStaticTargetA": "HRESULT WINAPI RemoveIScsiStaticTargetA(", "RemoveIScsiStaticTargetW": "HRESULT WINAPI RemoveIScsiStaticTargetW(", "RemovePersistentIScsiDeviceA": "HRESULT WINAPI RemovePersistentIScsiDeviceA(", "RemovePersistentIScsiDeviceW": "HRESULT WINAPI RemovePersistentIScsiDeviceW(", "RemoveRadiusServerA": "HRESULT WINAPI RemoveRadiusServerA(", "RemoveRadiusServerW": "HRESULT WINAPI RemoveRadiusServerW(", "SetupPersistentIScsiDevices": "HRESULT WINAPI SetupPersistentIScsiDevices(void);", "SendScsiInquiry": "HRESULT WINAPI SendScsiInquiry(", "SendScsiReadCapacity": "HRESULT WINAPI SendScsiReadCapacity(", "SendScsiReportLuns": "HRESULT WINAPI SendScsiReportLuns(", "GetDevicesForiSCSISession": "HRESULT WINAPI GetDevicesForiSCSISession(", "GetIScsiIKEInfoA": "HRESULT WINAPI GetIScsiIKEInfoA(", "GetIScsiIKEInfoW": "HRESULT WINAPI GetIScsiIKEInfoW(", "GetIScsiInitiatorNodeNameA": "HRESULT WINAPI GetIScsiInitiatorNodeNameA(", "GetIScsiInitiatorNodeNameW": "HRESULT WINAPI GetIScsiInitiatorNodeNameW(", "GetIScsiSessionListA": "HRESULT WINAPI GetIScsiSessionListA(", "GetIScsiSessionListW": "HRESULT WINAPI GetIScsiSessionListW(", "GetIScsiTargetInformationA": "HRESULT WINAPI GetIScsiTargetInformationA(", "GetIScsiTargetInformationW": "HRESULT WINAPI GetIScsiTargetInformationW(", "GetIScsiVersionInformation": "HRESULT WINAPI GetIScsiVersionInformation(", "LoginIScsiTargetA": "HRESULT WINAPI LoginIScsiTargetA(", "LoginIScsiTargetW": "HRESULT WINAPI LoginIScsiTargetW(", "LogoutIScsiTarget": "HRESULT WINAPI LogoutIScsiTarget(", "RefreshIScsiSendTargetPortalA": "HRESULT WINAPI RefreshIScsiSendTargetPortalA(", "RefreshIScsiSendTargetPortalW": "HRESULT WINAPI RefreshIScsiSendTargetPortalW(", "RefreshISNSServerA": "HRESULT WINAPI RefreshISNSServerA(", "RefreshISNSServerW": "HRESULT WINAPI RefreshISNSServerW(", "RemoveIScsiConnection": "HRESULT WINAPI RemoveIScsiConnection(", "RemoveIScsiSendTargetPortalA": "HRESULT WINAPI RemoveIScsiSendTargetPortalA(", "RemoveIScsiSendTargetPortalW": "HRESULT WINAPI RemoveIScsiSendTargetPortalW(", "RemoveISNSServerA": "HRESULT WINAPI RemoveISNSServerA(", "RemoveISNSServerW": "HRESULT WINAPI RemoveISNSServerW(", "ReportIScsiInitiatorListA": "HRESULT WINAPI ReportIScsiInitiatorListA(", "ReportIScsiInitiatorListW": "HRESULT WINAPI ReportIScsiInitiatorListW(", "ReportIScsiPersistentLoginsA": "HRESULT WINAPI ReportIScsiPersistentLoginsA(", "ReportIScsiPersistentLoginsW": "HRESULT WINAPI ReportIScsiPersistentLoginsW(", "ReportIScsiSendTargetPortalsA": "HRESULT WINAPI ReportIScsiSendTargetPortalsA(", "ReportIScsiSendTargetPortalsW": "HRESULT WINAPI ReportIScsiSendTargetPortalsW(", "ReportActiveIScsiTargetMappingsA": "HRESULT WINAPI ReportActiveIScsiTargetMappingsA(", "ReportActiveIScsiTargetMappingsW": "HRESULT WINAPI ReportActiveIScsiTargetMappingsW(", "ReportIScsiSendTargetPortalsExA": "HRESULT WINAPI ReportIScsiSendTargetPortalsExA(", "ReportIScsiSendTargetPortalsExW": "HRESULT WINAPI ReportIScsiSendTargetPortalsExW(", "ReportIScsiTargetPortalsA": "HRESULT WINAPI ReportIScsiTargetPortalsA(", "ReportIScsiTargetPortalsW": "HRESULT WINAPI ReportIScsiTargetPortalsW(", "ReportIScsiTargetsA": "HRESULT WINAPI ReportIScsiTargetsA(", "ReportIScsiTargetsW": "HRESULT WINAPI ReportIScsiTargetsW(", "ReportISNSServerListA": "HRESULT WINAPI ReportISNSServerListA(", "ReportISNSServerListW": "HRESULT WINAPI ReportISNSServerListW(", "ReportPersistentiScsiDevicesA": "HRESULT WINAPI ReportPersistentiScsiDevicesA(", "ReportPersistentiScsiDevicesW": "HRESULT WINAPI ReportPersistentiScsiDevicesW(", "ReportRadiusServerListA": "HRESULT WINAPI ReportRadiusServerListA(", "ReportRadiusServerListW": "HRESULT WINAPI ReportRadiusServerListW(", "SetIScsiGroupPresharedKey": "HRESULT WINAPI SetIScsiGroupPresharedKey(", "SetIScsiInitiatorCHAPSharedSecret": "HRESULT WINAPI SetIScsiInitiatorCHAPSharedSecret(", "SetIScsiInitiatorNodeNameA": "HRESULT WINAPI SetIScsiInitiatorNodeNameA(", "SetIScsiInitiatorNodeNameW": "HRESULT WINAPI SetIScsiInitiatorNodeNameW(", "SetIscsiInitiatorRADIUSSharedSecret": "HRESULT WINAPI SetIscsiInitiatorRADIUSSharedSecret(", "SetIScsiTunnelModeOuterAddressA": "HRESULT WINAPI SetIScsiTunnelModeOuterAddressA(", "SetIScsiTunnelModeOuterAddressW": "HRESULT WINAPI SetIScsiTunnelModeOuterAddressW(", "IComponentData_Initialize_Proxy": "HRESULT WINAPI IComponentData_Initialize_Proxy(IComponentData *This,LPUNKNOWN pUnknown);", "IComponentData_CreateComponent_Proxy": "HRESULT WINAPI IComponentData_CreateComponent_Proxy(IComponentData *This,LPCOMPONENT *ppComponent);", "IComponentData_Notify_Proxy": "HRESULT WINAPI IComponentData_Notify_Proxy(IComponentData *This,LPDATAOBJECT lpDataObject,MMC_NOTIFY_TYPE event,LPARAM arg,LPARAM param);", "IComponentData_Destroy_Proxy": "HRESULT WINAPI IComponentData_Destroy_Proxy(IComponentData *This);", "IComponentData_QueryDataObject_Proxy": "HRESULT WINAPI IComponentData_QueryDataObject_Proxy(IComponentData *This,MMC_COOKIE cookie,DATA_OBJECT_TYPES type,LPDATAOBJECT *ppDataObject);", "IComponentData_GetDisplayInfo_Proxy": "HRESULT WINAPI IComponentData_GetDisplayInfo_Proxy(IComponentData *This,SCOPEDATAITEM *pScopeDataItem);", "IComponentData_CompareObjects_Proxy": "HRESULT WINAPI IComponentData_CompareObjects_Proxy(IComponentData *This,LPDATAOBJECT lpDataObjectA,LPDATAOBJECT lpDataObjectB);", "IComponent_Initialize_Proxy": "HRESULT WINAPI IComponent_Initialize_Proxy(IComponent *This,LPCONSOLE lpConsole);", "IComponent_Notify_Proxy": "HRESULT WINAPI IComponent_Notify_Proxy(IComponent *This,LPDATAOBJECT lpDataObject,MMC_NOTIFY_TYPE event,LPARAM arg,LPARAM param);", "IComponent_Destroy_Proxy": "HRESULT WINAPI IComponent_Destroy_Proxy(IComponent *This,MMC_COOKIE cookie);", "IComponent_QueryDataObject_Proxy": "HRESULT WINAPI IComponent_QueryDataObject_Proxy(IComponent *This,MMC_COOKIE cookie,DATA_OBJECT_TYPES type,LPDATAOBJECT *ppDataObject);", "IComponent_GetResultViewType_Proxy": "HRESULT WINAPI IComponent_GetResultViewType_Proxy(IComponent *This,MMC_COOKIE cookie,LPOLESTR *ppViewType,__LONG32 *pViewOptions);", "IComponent_GetDisplayInfo_Proxy": "HRESULT WINAPI IComponent_GetDisplayInfo_Proxy(IComponent *This,RESULTDATAITEM *pResultDataItem);", "IComponent_CompareObjects_Proxy": "HRESULT WINAPI IComponent_CompareObjects_Proxy(IComponent *This,LPDATAOBJECT lpDataObjectA,LPDATAOBJECT lpDataObjectB);", "IResultDataCompare_Compare_Proxy": "HRESULT WINAPI IResultDataCompare_Compare_Proxy(IResultDataCompare *This,LPARAM lUserParam,MMC_COOKIE cookieA,MMC_COOKIE cookieB,int *pnResult);", "IResultOwnerData_FindItem_Proxy": "HRESULT WINAPI IResultOwnerData_FindItem_Proxy(IResultOwnerData *This,LPRESULTFINDINFO pFindInfo,int *pnFoundIndex);", "IResultOwnerData_CacheHint_Proxy": "HRESULT WINAPI IResultOwnerData_CacheHint_Proxy(IResultOwnerData *This,int nStartIndex,int nEndIndex);", "IResultOwnerData_SortItems_Proxy": "HRESULT WINAPI IResultOwnerData_SortItems_Proxy(IResultOwnerData *This,int nColumn,DWORD dwSortOptions,LPARAM lUserParam);", "IConsole_SetHeader_Proxy": "HRESULT WINAPI IConsole_SetHeader_Proxy(IConsole *This,LPHEADERCTRL pHeader);", "IConsole_SetToolbar_Proxy": "HRESULT WINAPI IConsole_SetToolbar_Proxy(IConsole *This,LPTOOLBAR pToolbar);", "IConsole_QueryResultView_Proxy": "HRESULT WINAPI IConsole_QueryResultView_Proxy(IConsole *This,LPUNKNOWN *pUnknown);", "IConsole_QueryScopeImageList_Proxy": "HRESULT WINAPI IConsole_QueryScopeImageList_Proxy(IConsole *This,LPIMAGELIST *ppImageList);", "IConsole_QueryResultImageList_Proxy": "HRESULT WINAPI IConsole_QueryResultImageList_Proxy(IConsole *This,LPIMAGELIST *ppImageList);", "IConsole_UpdateAllViews_Proxy": "HRESULT WINAPI IConsole_UpdateAllViews_Proxy(IConsole *This,LPDATAOBJECT lpDataObject,LPARAM data,LONG_PTR hint);", "IConsole_MessageBox_Proxy": "HRESULT WINAPI IConsole_MessageBox_Proxy(IConsole *This,LPCWSTR lpszText,LPCWSTR lpszTitle,UINT fuStyle,int *piRetval);", "IConsole_QueryConsoleVerb_Proxy": "HRESULT WINAPI IConsole_QueryConsoleVerb_Proxy(IConsole *This,LPCONSOLEVERB *ppConsoleVerb);", "IConsole_SelectScopeItem_Proxy": "HRESULT WINAPI IConsole_SelectScopeItem_Proxy(IConsole *This,HSCOPEITEM hScopeItem);", "IConsole_GetMainWindow_Proxy": "HRESULT WINAPI IConsole_GetMainWindow_Proxy(IConsole *This,HWND *phwnd);", "IConsole_NewWindow_Proxy": "HRESULT WINAPI IConsole_NewWindow_Proxy(IConsole *This,HSCOPEITEM hScopeItem,unsigned __LONG32 lOptions);", "IHeaderCtrl_InsertColumn_Proxy": "HRESULT WINAPI IHeaderCtrl_InsertColumn_Proxy(IHeaderCtrl *This,int nCol,LPCWSTR title,int nFormat,int nWidth);", "IHeaderCtrl_DeleteColumn_Proxy": "HRESULT WINAPI IHeaderCtrl_DeleteColumn_Proxy(IHeaderCtrl *This,int nCol);", "IHeaderCtrl_SetColumnText_Proxy": "HRESULT WINAPI IHeaderCtrl_SetColumnText_Proxy(IHeaderCtrl *This,int nCol,LPCWSTR title);", "IHeaderCtrl_GetColumnText_Proxy": "HRESULT WINAPI IHeaderCtrl_GetColumnText_Proxy(IHeaderCtrl *This,int nCol,LPOLESTR *pText);", "IHeaderCtrl_SetColumnWidth_Proxy": "HRESULT WINAPI IHeaderCtrl_SetColumnWidth_Proxy(IHeaderCtrl *This,int nCol,int nWidth);", "IHeaderCtrl_GetColumnWidth_Proxy": "HRESULT WINAPI IHeaderCtrl_GetColumnWidth_Proxy(IHeaderCtrl *This,int nCol,int *pWidth);", "IContextMenuCallback_AddItem_Proxy": "HRESULT WINAPI IContextMenuCallback_AddItem_Proxy(IContextMenuCallback *This,CONTEXTMENUITEM *pItem);", "IContextMenuProvider_EmptyMenuList_Proxy": "HRESULT WINAPI IContextMenuProvider_EmptyMenuList_Proxy(IContextMenuProvider *This);", "IContextMenuProvider_AddPrimaryExtensionItems_Proxy": "HRESULT WINAPI IContextMenuProvider_AddPrimaryExtensionItems_Proxy(IContextMenuProvider *This,LPUNKNOWN piExtension,LPDATAOBJECT piDataObject);", "IContextMenuProvider_AddThirdPartyExtensionItems_Proxy": "HRESULT WINAPI IContextMenuProvider_AddThirdPartyExtensionItems_Proxy(IContextMenuProvider *This,LPDATAOBJECT piDataObject);", "IContextMenuProvider_ShowContextMenu_Proxy": "HRESULT WINAPI IContextMenuProvider_ShowContextMenu_Proxy(IContextMenuProvider *This,HWND hwndParent,__LONG32 xPos,__LONG32 yPos,__LONG32 *plSelected);", "IExtendContextMenu_AddMenuItems_Proxy": "HRESULT WINAPI IExtendContextMenu_AddMenuItems_Proxy(IExtendContextMenu *This,LPDATAOBJECT piDataObject,LPCONTEXTMENUCALLBACK piCallback,__LONG32 *pInsertionAllowed);", "IExtendContextMenu_Command_Proxy": "HRESULT WINAPI IExtendContextMenu_Command_Proxy(IExtendContextMenu *This,__LONG32 lCommandID,LPDATAOBJECT piDataObject);", "IImageList_ImageListSetIcon_Proxy": "HRESULT WINAPI IImageList_ImageListSetIcon_Proxy(IImageList *This,LONG_PTR *pIcon,__LONG32 nLoc);", "IImageList_ImageListSetStrip_Proxy": "HRESULT WINAPI IImageList_ImageListSetStrip_Proxy(IImageList *This,LONG_PTR *pBMapSm,LONG_PTR *pBMapLg,__LONG32 nStartLoc,COLORREF cMask);", "IResultData_InsertItem_Proxy": "HRESULT WINAPI IResultData_InsertItem_Proxy(IResultData *This,LPRESULTDATAITEM item);", "IResultData_DeleteItem_Proxy": "HRESULT WINAPI IResultData_DeleteItem_Proxy(IResultData *This,HRESULTITEM itemID,int nCol);", "IResultData_FindItemByLParam_Proxy": "HRESULT WINAPI IResultData_FindItemByLParam_Proxy(IResultData *This,LPARAM lParam,HRESULTITEM *pItemID);", "IResultData_DeleteAllRsltItems_Proxy": "HRESULT WINAPI IResultData_DeleteAllRsltItems_Proxy(IResultData *This);", "IResultData_SetItem_Proxy": "HRESULT WINAPI IResultData_SetItem_Proxy(IResultData *This,LPRESULTDATAITEM item);", "IResultData_GetItem_Proxy": "HRESULT WINAPI IResultData_GetItem_Proxy(IResultData *This,LPRESULTDATAITEM item);", "IResultData_GetNextItem_Proxy": "HRESULT WINAPI IResultData_GetNextItem_Proxy(IResultData *This,LPRESULTDATAITEM item);", "IResultData_ModifyItemState_Proxy": "HRESULT WINAPI IResultData_ModifyItemState_Proxy(IResultData *This,int nIndex,HRESULTITEM itemID,UINT uAdd,UINT uRemove);", "IResultData_ModifyViewStyle_Proxy": "HRESULT WINAPI IResultData_ModifyViewStyle_Proxy(IResultData *This,MMC_RESULT_VIEW_STYLE add,MMC_RESULT_VIEW_STYLE remove);", "IResultData_SetViewMode_Proxy": "HRESULT WINAPI IResultData_SetViewMode_Proxy(IResultData *This,__LONG32 lViewMode);", "IResultData_GetViewMode_Proxy": "HRESULT WINAPI IResultData_GetViewMode_Proxy(IResultData *This,__LONG32 *lViewMode);", "IResultData_UpdateItem_Proxy": "HRESULT WINAPI IResultData_UpdateItem_Proxy(IResultData *This,HRESULTITEM itemID);", "IResultData_Sort_Proxy": "HRESULT WINAPI IResultData_Sort_Proxy(IResultData *This,int nColumn,DWORD dwSortOptions,LPARAM lUserParam);", "IResultData_SetDescBarText_Proxy": "HRESULT WINAPI IResultData_SetDescBarText_Proxy(IResultData *This,LPOLESTR DescText);", "IResultData_SetItemCount_Proxy": "HRESULT WINAPI IResultData_SetItemCount_Proxy(IResultData *This,int nItemCount,DWORD dwOptions);", "IConsoleNameSpace_InsertItem_Proxy": "HRESULT WINAPI IConsoleNameSpace_InsertItem_Proxy(IConsoleNameSpace *This,LPSCOPEDATAITEM item);", "IConsoleNameSpace_DeleteItem_Proxy": "HRESULT WINAPI IConsoleNameSpace_DeleteItem_Proxy(IConsoleNameSpace *This,HSCOPEITEM hItem,__LONG32 fDeleteThis);", "IConsoleNameSpace_SetItem_Proxy": "HRESULT WINAPI IConsoleNameSpace_SetItem_Proxy(IConsoleNameSpace *This,LPSCOPEDATAITEM item);", "IConsoleNameSpace_GetItem_Proxy": "HRESULT WINAPI IConsoleNameSpace_GetItem_Proxy(IConsoleNameSpace *This,LPSCOPEDATAITEM item);", "IConsoleNameSpace_GetChildItem_Proxy": "HRESULT WINAPI IConsoleNameSpace_GetChildItem_Proxy(IConsoleNameSpace *This,HSCOPEITEM item,HSCOPEITEM *pItemChild,MMC_COOKIE *pCookie);", "IConsoleNameSpace_GetNextItem_Proxy": "HRESULT WINAPI IConsoleNameSpace_GetNextItem_Proxy(IConsoleNameSpace *This,HSCOPEITEM item,HSCOPEITEM *pItemNext,MMC_COOKIE *pCookie);", "IConsoleNameSpace_GetParentItem_Proxy": "HRESULT WINAPI IConsoleNameSpace_GetParentItem_Proxy(IConsoleNameSpace *This,HSCOPEITEM item,HSCOPEITEM *pItemParent,MMC_COOKIE *pCookie);", "IConsoleNameSpace2_Expand_Proxy": "HRESULT WINAPI IConsoleNameSpace2_Expand_Proxy(IConsoleNameSpace2 *This,HSCOPEITEM hItem);", "IConsoleNameSpace2_AddExtension_Proxy": "HRESULT WINAPI IConsoleNameSpace2_AddExtension_Proxy(IConsoleNameSpace2 *This,HSCOPEITEM hItem,LPCLSID lpClsid);", "IPropertySheetCallback_AddPage_Proxy": "HRESULT WINAPI IPropertySheetCallback_AddPage_Proxy(IPropertySheetCallback *This,HPROPSHEETPAGE hPage);", "IPropertySheetCallback_RemovePage_Proxy": "HRESULT WINAPI IPropertySheetCallback_RemovePage_Proxy(IPropertySheetCallback *This,HPROPSHEETPAGE hPage);", "IPropertySheetProvider_CreatePropertySheet_Proxy": "HRESULT WINAPI IPropertySheetProvider_CreatePropertySheet_Proxy(IPropertySheetProvider *This,LPCWSTR title,boolean type,MMC_COOKIE cookie,LPDATAOBJECT pIDataObjectm,DWORD dwOptions);", "IPropertySheetProvider_FindPropertySheet_Proxy": "HRESULT WINAPI IPropertySheetProvider_FindPropertySheet_Proxy(IPropertySheetProvider *This,MMC_COOKIE cookie,LPCOMPONENT lpComponent,LPDATAOBJECT lpDataObject);", "IPropertySheetProvider_AddPrimaryPages_Proxy": "HRESULT WINAPI IPropertySheetProvider_AddPrimaryPages_Proxy(IPropertySheetProvider *This,LPUNKNOWN lpUnknown,WINBOOL bCreateHandle,HWND hNotifyWindow,WINBOOL bScopePane);", "IPropertySheetProvider_AddExtensionPages_Proxy": "HRESULT WINAPI IPropertySheetProvider_AddExtensionPages_Proxy(IPropertySheetProvider *This);", "IPropertySheetProvider_Show_Proxy": "HRESULT WINAPI IPropertySheetProvider_Show_Proxy(IPropertySheetProvider *This,LONG_PTR window,int page);", "IExtendPropertySheet_CreatePropertyPages_Proxy": "HRESULT WINAPI IExtendPropertySheet_CreatePropertyPages_Proxy(IExtendPropertySheet *This,LPPROPERTYSHEETCALLBACK lpProvider,LONG_PTR handle,LPDATAOBJECT lpIDataObject);", "IExtendPropertySheet_QueryPagesFor_Proxy": "HRESULT WINAPI IExtendPropertySheet_QueryPagesFor_Proxy(IExtendPropertySheet *This,LPDATAOBJECT lpDataObject);", "IControlbar_Create_Proxy": "HRESULT WINAPI IControlbar_Create_Proxy(IControlbar *This,MMC_CONTROL_TYPE nType,LPEXTENDCONTROLBAR pExtendControlbar,LPUNKNOWN *ppUnknown);", "IControlbar_Attach_Proxy": "HRESULT WINAPI IControlbar_Attach_Proxy(IControlbar *This,MMC_CONTROL_TYPE nType,LPUNKNOWN lpUnknown);", "IControlbar_Detach_Proxy": "HRESULT WINAPI IControlbar_Detach_Proxy(IControlbar *This,LPUNKNOWN lpUnknown);", "IExtendControlbar_SetControlbar_Proxy": "HRESULT WINAPI IExtendControlbar_SetControlbar_Proxy(IExtendControlbar *This,LPCONTROLBAR pControlbar);", "IExtendControlbar_ControlbarNotify_Proxy": "HRESULT WINAPI IExtendControlbar_ControlbarNotify_Proxy(IExtendControlbar *This,MMC_NOTIFY_TYPE event,LPARAM arg,LPARAM param);", "IToolbar_AddBitmap_Proxy": "HRESULT WINAPI IToolbar_AddBitmap_Proxy(IToolbar *This,int nImages,HBITMAP hbmp,int cxSize,int cySize,COLORREF crMask);", "IToolbar_AddButtons_Proxy": "HRESULT WINAPI IToolbar_AddButtons_Proxy(IToolbar *This,int nButtons,LPMMCBUTTON lpButtons);", "IToolbar_InsertButton_Proxy": "HRESULT WINAPI IToolbar_InsertButton_Proxy(IToolbar *This,int nIndex,LPMMCBUTTON lpButton);", "IToolbar_DeleteButton_Proxy": "HRESULT WINAPI IToolbar_DeleteButton_Proxy(IToolbar *This,int nIndex);", "IToolbar_GetButtonState_Proxy": "HRESULT WINAPI IToolbar_GetButtonState_Proxy(IToolbar *This,int idCommand,MMC_BUTTON_STATE nState,WINBOOL *pState);", "IToolbar_SetButtonState_Proxy": "HRESULT WINAPI IToolbar_SetButtonState_Proxy(IToolbar *This,int idCommand,MMC_BUTTON_STATE nState,WINBOOL bState);", "IConsoleVerb_GetVerbState_Proxy": "HRESULT WINAPI IConsoleVerb_GetVerbState_Proxy(IConsoleVerb *This,MMC_CONSOLE_VERB eCmdID,MMC_BUTTON_STATE nState,WINBOOL *pState);", "IConsoleVerb_SetVerbState_Proxy": "HRESULT WINAPI IConsoleVerb_SetVerbState_Proxy(IConsoleVerb *This,MMC_CONSOLE_VERB eCmdID,MMC_BUTTON_STATE nState,WINBOOL bState);", "IConsoleVerb_SetDefaultVerb_Proxy": "HRESULT WINAPI IConsoleVerb_SetDefaultVerb_Proxy(IConsoleVerb *This,MMC_CONSOLE_VERB eCmdID);", "IConsoleVerb_GetDefaultVerb_Proxy": "HRESULT WINAPI IConsoleVerb_GetDefaultVerb_Proxy(IConsoleVerb *This,MMC_CONSOLE_VERB *peCmdID);", "ISnapinAbout_GetSnapinDescription_Proxy": "HRESULT WINAPI ISnapinAbout_GetSnapinDescription_Proxy(ISnapinAbout *This,LPOLESTR *lpDescription);", "ISnapinAbout_GetProvider_Proxy": "HRESULT WINAPI ISnapinAbout_GetProvider_Proxy(ISnapinAbout *This,LPOLESTR *lpName);", "ISnapinAbout_GetSnapinVersion_Proxy": "HRESULT WINAPI ISnapinAbout_GetSnapinVersion_Proxy(ISnapinAbout *This,LPOLESTR *lpVersion);", "ISnapinAbout_GetSnapinImage_Proxy": "HRESULT WINAPI ISnapinAbout_GetSnapinImage_Proxy(ISnapinAbout *This,HICON *hAppIcon);", "ISnapinAbout_GetStaticFolderImage_Proxy": "HRESULT WINAPI ISnapinAbout_GetStaticFolderImage_Proxy(ISnapinAbout *This,HBITMAP *hSmallImage,HBITMAP *hSmallImageOpen,HBITMAP *hLargeImage,COLORREF *cMask);", "IMenuButton_AddButton_Proxy": "HRESULT WINAPI IMenuButton_AddButton_Proxy(IMenuButton *This,int idCommand,LPOLESTR lpButtonText,LPOLESTR lpTooltipText);", "IMenuButton_SetButton_Proxy": "HRESULT WINAPI IMenuButton_SetButton_Proxy(IMenuButton *This,int idCommand,LPOLESTR lpButtonText,LPOLESTR lpTooltipText);", "IMenuButton_SetButtonState_Proxy": "HRESULT WINAPI IMenuButton_SetButtonState_Proxy(IMenuButton *This,int idCommand,MMC_BUTTON_STATE nState,WINBOOL bState);", "ISnapinHelp_GetHelpTopic_Proxy": "HRESULT WINAPI ISnapinHelp_GetHelpTopic_Proxy(ISnapinHelp *This,LPOLESTR *lpCompiledHelpFile);", "IExtendPropertySheet2_GetWatermarks_Proxy": "HRESULT WINAPI IExtendPropertySheet2_GetWatermarks_Proxy(IExtendPropertySheet2 *This,LPDATAOBJECT lpIDataObject,HBITMAP *lphWatermark,HBITMAP *lphHeader,HPALETTE *lphPalette,WINBOOL *bStretch);", "IHeaderCtrl2_SetChangeTimeOut_Proxy": "HRESULT WINAPI IHeaderCtrl2_SetChangeTimeOut_Proxy(IHeaderCtrl2 *This,unsigned __LONG32 uTimeout);", "IHeaderCtrl2_SetColumnFilter_Proxy": "HRESULT WINAPI IHeaderCtrl2_SetColumnFilter_Proxy(IHeaderCtrl2 *This,UINT nColumn,DWORD dwType,MMC_FILTERDATA *pFilterData);", "IHeaderCtrl2_GetColumnFilter_Proxy": "HRESULT WINAPI IHeaderCtrl2_GetColumnFilter_Proxy(IHeaderCtrl2 *This,UINT nColumn,LPDWORD pdwType,MMC_FILTERDATA *pFilterData);", "ISnapinHelp2_GetLinkedTopics_Proxy": "HRESULT WINAPI ISnapinHelp2_GetLinkedTopics_Proxy(ISnapinHelp2 *This,LPOLESTR *lpCompiledHelpFiles);", "IEnumTASK_Next_Proxy": "HRESULT WINAPI IEnumTASK_Next_Proxy(IEnumTASK *This,ULONG celt,MMC_TASK *rgelt,ULONG *pceltFetched);", "IEnumTASK_Skip_Proxy": "HRESULT WINAPI IEnumTASK_Skip_Proxy(IEnumTASK *This,ULONG celt);", "IEnumTASK_Reset_Proxy": "HRESULT WINAPI IEnumTASK_Reset_Proxy(IEnumTASK *This);", "IEnumTASK_Clone_Proxy": "HRESULT WINAPI IEnumTASK_Clone_Proxy(IEnumTASK *This,IEnumTASK **ppenum);", "IExtendTaskPad_TaskNotify_Proxy": "HRESULT WINAPI IExtendTaskPad_TaskNotify_Proxy(IExtendTaskPad *This,IDataObject *pdo,VARIANT *arg,VARIANT *param);", "IExtendTaskPad_EnumTasks_Proxy": "HRESULT WINAPI IExtendTaskPad_EnumTasks_Proxy(IExtendTaskPad *This,IDataObject *pdo,LPOLESTR szTaskGroup,IEnumTASK **ppEnumTASK);", "IExtendTaskPad_GetTitle_Proxy": "HRESULT WINAPI IExtendTaskPad_GetTitle_Proxy(IExtendTaskPad *This,LPOLESTR pszGroup,LPOLESTR *pszTitle);", "IExtendTaskPad_GetDescriptiveText_Proxy": "HRESULT WINAPI IExtendTaskPad_GetDescriptiveText_Proxy(IExtendTaskPad *This,LPOLESTR pszGroup,LPOLESTR *pszDescriptiveText);", "IExtendTaskPad_GetBackground_Proxy": "HRESULT WINAPI IExtendTaskPad_GetBackground_Proxy(IExtendTaskPad *This,LPOLESTR pszGroup,MMC_TASK_DISPLAY_OBJECT *pTDO);", "IExtendTaskPad_GetListPadInfo_Proxy": "HRESULT WINAPI IExtendTaskPad_GetListPadInfo_Proxy(IExtendTaskPad *This,LPOLESTR pszGroup,MMC_LISTPAD_INFO *lpListPadInfo);", "IConsole2_Expand_Proxy": "HRESULT WINAPI IConsole2_Expand_Proxy(IConsole2 *This,HSCOPEITEM hItem,WINBOOL bExpand);", "IConsole2_IsTaskpadViewPreferred_Proxy": "HRESULT WINAPI IConsole2_IsTaskpadViewPreferred_Proxy(IConsole2 *This);", "IConsole2_SetStatusText_Proxy": "HRESULT WINAPI IConsole2_SetStatusText_Proxy(IConsole2 *This,LPOLESTR pszStatusText);", "IDisplayHelp_ShowTopic_Proxy": "HRESULT WINAPI IDisplayHelp_ShowTopic_Proxy(IDisplayHelp *This,LPOLESTR pszHelpTopic);", "IRequiredExtensions_EnableAllExtensions_Proxy": "HRESULT WINAPI IRequiredExtensions_EnableAllExtensions_Proxy(IRequiredExtensions *This);", "IRequiredExtensions_GetFirstExtension_Proxy": "HRESULT WINAPI IRequiredExtensions_GetFirstExtension_Proxy(IRequiredExtensions *This,LPCLSID pExtCLSID);", "IRequiredExtensions_GetNextExtension_Proxy": "HRESULT WINAPI IRequiredExtensions_GetNextExtension_Proxy(IRequiredExtensions *This,LPCLSID pExtCLSID);", "IStringTable_AddString_Proxy": "HRESULT WINAPI IStringTable_AddString_Proxy(IStringTable *This,LPCOLESTR pszAdd,MMC_STRING_ID *pStringID);", "IStringTable_GetString_Proxy": "HRESULT WINAPI IStringTable_GetString_Proxy(IStringTable *This,MMC_STRING_ID StringID,ULONG cchBuffer,LPOLESTR lpBuffer,ULONG *pcchOut);", "IStringTable_GetStringLength_Proxy": "HRESULT WINAPI IStringTable_GetStringLength_Proxy(IStringTable *This,MMC_STRING_ID StringID,ULONG *pcchString);", "IStringTable_DeleteString_Proxy": "HRESULT WINAPI IStringTable_DeleteString_Proxy(IStringTable *This,MMC_STRING_ID StringID);", "IStringTable_DeleteAllStrings_Proxy": "HRESULT WINAPI IStringTable_DeleteAllStrings_Proxy(IStringTable *This);", "IStringTable_FindString_Proxy": "HRESULT WINAPI IStringTable_FindString_Proxy(IStringTable *This,LPCOLESTR pszFind,MMC_STRING_ID *pStringID);", "IStringTable_Enumerate_Proxy": "HRESULT WINAPI IStringTable_Enumerate_Proxy(IStringTable *This,IEnumString **ppEnum);", "IColumnData_SetColumnConfigData_Proxy": "HRESULT WINAPI IColumnData_SetColumnConfigData_Proxy(IColumnData *This,SColumnSetID *pColID,MMC_COLUMN_SET_DATA *pColSetData);", "IColumnData_GetColumnConfigData_Proxy": "HRESULT WINAPI IColumnData_GetColumnConfigData_Proxy(IColumnData *This,SColumnSetID *pColID,MMC_COLUMN_SET_DATA **ppColSetData);", "IColumnData_SetColumnSortData_Proxy": "HRESULT WINAPI IColumnData_SetColumnSortData_Proxy(IColumnData *This,SColumnSetID *pColID,MMC_SORT_SET_DATA *pColSortData);", "IColumnData_GetColumnSortData_Proxy": "HRESULT WINAPI IColumnData_GetColumnSortData_Proxy(IColumnData *This,SColumnSetID *pColID,MMC_SORT_SET_DATA **ppColSortData);", "IMessageView_SetTitleText_Proxy": "HRESULT WINAPI IMessageView_SetTitleText_Proxy(IMessageView *This,LPCOLESTR pszTitleText);", "IMessageView_SetBodyText_Proxy": "HRESULT WINAPI IMessageView_SetBodyText_Proxy(IMessageView *This,LPCOLESTR pszBodyText);", "IMessageView_SetIcon_Proxy": "HRESULT WINAPI IMessageView_SetIcon_Proxy(IMessageView *This,IconIdentifier id);", "IMessageView_Clear_Proxy": "HRESULT WINAPI IMessageView_Clear_Proxy(IMessageView *This);", "IResultDataCompareEx_Compare_Proxy": "HRESULT WINAPI IResultDataCompareEx_Compare_Proxy(IResultDataCompareEx *This,RDCOMPARE *prdc,int *pnResult);", "IComponentData2_QueryDispatch_Proxy": "HRESULT WINAPI IComponentData2_QueryDispatch_Proxy(IComponentData2 *This,MMC_COOKIE cookie,DATA_OBJECT_TYPES type,LPDISPATCH *ppDispatch);", "IComponent2_QueryDispatch_Proxy": "HRESULT WINAPI IComponent2_QueryDispatch_Proxy(IComponent2 *This,MMC_COOKIE cookie,DATA_OBJECT_TYPES type,LPDISPATCH *ppDispatch);", "IComponent2_GetResultViewType2_Proxy": "HRESULT WINAPI IComponent2_GetResultViewType2_Proxy(IComponent2 *This,MMC_COOKIE cookie,PRESULT_VIEW_TYPE_INFO pResultViewType);", "IComponent2_RestoreResultView_Proxy": "HRESULT WINAPI IComponent2_RestoreResultView_Proxy(IComponent2 *This,MMC_COOKIE cookie,PRESULT_VIEW_TYPE_INFO pResultViewType);", "IContextMenuCallback2_AddItem_Proxy": "HRESULT WINAPI IContextMenuCallback2_AddItem_Proxy(IContextMenuCallback2 *This,CONTEXTMENUITEM2 *pItem);", "IMMCVersionInfo_GetMMCVersion_Proxy": "HRESULT WINAPI IMMCVersionInfo_GetMMCVersion_Proxy(IMMCVersionInfo *This,__LONG32 *pVersionMajor,__LONG32 *pVersionMinor);", "IExtendView_GetViews_Proxy": "HRESULT WINAPI IExtendView_GetViews_Proxy(IExtendView *This,LPDATAOBJECT pDataObject,LPVIEWEXTENSIONCALLBACK pViewExtensionCallback);", "IViewExtensionCallback_AddView_Proxy": "HRESULT WINAPI IViewExtensionCallback_AddView_Proxy(IViewExtensionCallback *This,PMMC_EXT_VIEW_DATA pExtViewData);", "IConsolePower_SetExecutionState_Proxy": "HRESULT WINAPI IConsolePower_SetExecutionState_Proxy(IConsolePower *This,DWORD dwAdd,DWORD dwRemove);", "IConsolePower_ResetIdleTimer_Proxy": "HRESULT WINAPI IConsolePower_ResetIdleTimer_Proxy(IConsolePower *This,DWORD dwFlags);", "IConsolePowerSink_OnPowerBroadcast_Proxy": "HRESULT WINAPI IConsolePowerSink_OnPowerBroadcast_Proxy(IConsolePowerSink *This,UINT nEvent,LPARAM lParam,LRESULT *plReturn);", "INodeProperties_GetProperty_Proxy": "HRESULT WINAPI INodeProperties_GetProperty_Proxy(INodeProperties *This,LPDATAOBJECT pDataObject,BSTR szPropertyName,PBSTR pbstrProperty);", "IConsole3_RenameScopeItem_Proxy": "HRESULT WINAPI IConsole3_RenameScopeItem_Proxy(IConsole3 *This,HSCOPEITEM hScopeItem);", "IResultData2_RenameResultItem_Proxy": "HRESULT WINAPI IResultData2_RenameResultItem_Proxy(IResultData2 *This,HRESULTITEM itemID);", "GetADOBindingEntries": "const ADO_BINDING_ENTRY *WINAPI GetADOBindingEntries() { static const ADO_BINDING_ENTRY rgADOBindingEntries[] = {", "InterlockedIncrement": "/* LONG WINAPI InterlockedIncrement(LONG volatile *); moved to psdk_inc/intrin-impl.h */", "InterlockedDecrement": "/* LONG WINAPI InterlockedDecrement(LONG volatile *); moved to psdk_inc/intrin-impl.h */", "InterlockedExchange": "/* LONG WINAPI InterlockedExchange(LONG volatile *, LONG); moved to psdk_inc/intrin-impl.h */", "RtlSecureZeroMemory": "PVOID WINAPI RtlSecureZeroMemory(PVOID ptr,SIZE_T cnt);", "Emulate_GetDiskFreeSpaceEx": "static WINBOOL WINAPI Emulate_GetDiskFreeSpaceEx(LPCTSTR ptszRoot,PULARGE_INTEGER pliQuota,PULARGE_INTEGER pliTotal,PULARGE_INTEGER pliFree) {", "Probe_GetDiskFreeSpaceEx": "static WINBOOL WINAPI Probe_GetDiskFreeSpaceEx(LPCTSTR ptszRoot,PULARGE_INTEGER pliQuota,PULARGE_INTEGER pliTotal,PULARGE_INTEGER pliFree) {", "Emulate_GetLongPathName": "static DWORD WINAPI Emulate_GetLongPathName(LPCTSTR ptszShort,LPTSTR ptszLong,DWORD ctchBuf) {", "Probe_GetLongPathName": "static DWORD WINAPI Probe_GetLongPathName(LPCTSTR ptszShort,LPTSTR ptszLong,DWORD ctchBuf) {", "Emulate_GetFileAttributesEx": "static WINBOOL WINAPI Emulate_GetFileAttributesEx(LPCTSTR ptszFile,GET_FILEEX_INFO_LEVELS level,LPVOID pv) {", "Probe_GetFileAttributesEx": "static WINBOOL WINAPI Probe_GetFileAttributesEx(LPCTSTR ptszFile,GET_FILEEX_INFO_LEVELS level,LPVOID pv) {", "Emulate_IsDebuggerPresent": "static WINBOOL WINAPI Emulate_IsDebuggerPresent(VOID) { return FALSE; }", "Probe_IsDebuggerPresent": "static WINBOOL WINAPI Probe_IsDebuggerPresent(VOID) {", "AcquireCredentialsHandleW": "KSECDDDECLSPEC SECURITY_STATUS WINAPI AcquireCredentialsHandleW(", "AcquireCredentialsHandleA": "SECURITY_STATUS WINAPI AcquireCredentialsHandleA(SEC_CHAR *pszPrincipal,SEC_CHAR *pszPackage,unsigned __LONG32 fCredentialUse,void *pvLogonId,void *pAuthData,SEC_GET_KEY_FN pGetKeyFn,void *pvGetKeyArgument,PCredHandle phCredential,PTimeStamp ptsExpiry);", "FreeCredentialsHandle": "KSECDDDECLSPEC SECURITY_STATUS WINAPI FreeCredentialsHandle(PCredHandle phCredential);", "AddCredentialsW": "KSECDDDECLSPEC SECURITY_STATUS WINAPI AddCredentialsW(PCredHandle hCredentials,", "AddCredentialsA": "SECURITY_STATUS WINAPI AddCredentialsA(PCredHandle hCredentials,SEC_CHAR *pszPrincipal,SEC_CHAR *pszPackage,unsigned __LONG32 fCredentialUse,void *pAuthData,SEC_GET_KEY_FN pGetKeyFn,void *pvGetKeyArgument,PTimeStamp ptsExpiry);", "InitializeSecurityContextW": "KSECDDDECLSPEC SECURITY_STATUS WINAPI InitializeSecurityContextW(PCredHandle phCredential,PCtxtHandle phContext,", "InitializeSecurityContextA": "SECURITY_STATUS WINAPI InitializeSecurityContextA(PCredHandle phCredential,PCtxtHandle phContext,SEC_CHAR *pszTargetName,unsigned __LONG32 fContextReq,unsigned __LONG32 Reserved1,unsigned __LONG32 TargetDataRep,PSecBufferDesc pInput,unsigned __LONG32 Reserved2,PCtxtHandle phNewContext,PSecBufferDesc pOutput,unsigned __LONG32 *pfContextAttr,PTimeStamp ptsExpiry);", "AcceptSecurityContext": "KSECDDDECLSPEC SECURITY_STATUS WINAPI AcceptSecurityContext(PCredHandle phCredential,PCtxtHandle phContext,PSecBufferDesc pInput,unsigned __LONG32 fContextReq,unsigned __LONG32 TargetDataRep,PCtxtHandle phNewContext,PSecBufferDesc pOutput,unsigned __LONG32 *pfContextAttr,PTimeStamp ptsExpiry);", "CompleteAuthToken": "SECURITY_STATUS WINAPI CompleteAuthToken(PCtxtHandle phContext,PSecBufferDesc pToken);", "ImpersonateSecurityContext": "KSECDDDECLSPEC SECURITY_STATUS WINAPI ImpersonateSecurityContext(PCtxtHandle phContext);", "RevertSecurityContext": "KSECDDDECLSPEC SECURITY_STATUS WINAPI RevertSecurityContext(PCtxtHandle phContext);", "QuerySecurityContextToken": "KSECDDDECLSPEC SECURITY_STATUS WINAPI QuerySecurityContextToken(PCtxtHandle phContext,HANDLE *Token);", "DeleteSecurityContext": "KSECDDDECLSPEC SECURITY_STATUS WINAPI DeleteSecurityContext(PCtxtHandle phContext);", "ApplyControlToken": "KSECDDDECLSPEC SECURITY_STATUS WINAPI ApplyControlToken(PCtxtHandle phContext,PSecBufferDesc pInput);", "QueryContextAttributesW": "KSECDDDECLSPEC SECURITY_STATUS WINAPI QueryContextAttributesW(PCtxtHandle phContext,unsigned __LONG32 ulAttribute,void *pBuffer);", "QueryContextAttributesA": "SECURITY_STATUS WINAPI QueryContextAttributesA(PCtxtHandle phContext,unsigned __LONG32 ulAttribute,void *pBuffer);", "QueryContextAttributesExW": "SECURITY_STATUS WINAPI QueryContextAttributesExW(PCtxtHandle phContext,unsigned __LONG32 ulAttribute,void *pBuffer,unsigned __LONG32 cbBuffer);", "QueryContextAttributesExA": "SECURITY_STATUS WINAPI QueryContextAttributesExA(PCtxtHandle phContext,unsigned __LONG32 ulAttribute,void *pBuffer,unsigned __LONG32 cbBuffer);", "SetContextAttributesW": "SECURITY_STATUS WINAPI SetContextAttributesW(PCtxtHandle phContext,unsigned __LONG32 ulAttribute,void *pBuffer,unsigned __LONG32 cbBuffer);", "SetContextAttributesA": "SECURITY_STATUS WINAPI SetContextAttributesA(PCtxtHandle phContext,unsigned __LONG32 ulAttribute,void *pBuffer,unsigned __LONG32 cbBuffer);", "QueryCredentialsAttributesW": "KSECDDDECLSPEC SECURITY_STATUS WINAPI QueryCredentialsAttributesW(PCredHandle phCredential,unsigned __LONG32 ulAttribute,void *pBuffer);", "QueryCredentialsAttributesA": "SECURITY_STATUS WINAPI QueryCredentialsAttributesA(PCredHandle phCredential,unsigned __LONG32 ulAttribute,void *pBuffer);", "QueryCredentialsAttributesExW": "SECURITY_STATUS WINAPI QueryCredentialsAttributesExW(PCredHandle phCredential,unsigned __LONG32 ulAttribute,void *pBuffer,unsigned __LONG32 cbBuffer);", "QueryCredentialsAttributesExA": "SECURITY_STATUS WINAPI QueryCredentialsAttributesExA(PCredHandle phCredential,unsigned __LONG32 ulAttribute,void *pBuffer,unsigned __LONG32 cbBuffer);", "SetCredentialsAttributesW": "KSECDDDECLSPEC SECURITY_STATUS WINAPI SetCredentialsAttributesW(PCredHandle phCredential,unsigned __LONG32 ulAttribute,void *pBuffer,unsigned __LONG32 cbBuffer);", "SetCredentialsAttributesA": "SECURITY_STATUS WINAPI SetCredentialsAttributesA(PCredHandle phCredential,unsigned __LONG32 ulAttribute,void *pBuffer,unsigned __LONG32 cbBuffer);", "FreeContextBuffer": "SECURITY_STATUS WINAPI FreeContextBuffer(void *pvContextBuffer);", "MakeSignature": "KSECDDDECLSPEC SECURITY_STATUS WINAPI MakeSignature(PCtxtHandle phContext,unsigned __LONG32 fQOP,PSecBufferDesc pMessage,unsigned __LONG32 MessageSeqNo);", "VerifySignature": "KSECDDDECLSPEC SECURITY_STATUS WINAPI VerifySignature(PCtxtHandle phContext,PSecBufferDesc pMessage,unsigned __LONG32 MessageSeqNo,unsigned __LONG32 *pfQOP);", "EncryptMessage": "SECURITY_STATUS WINAPI EncryptMessage(PCtxtHandle phContext,unsigned __LONG32 fQOP,PSecBufferDesc pMessage,unsigned __LONG32 MessageSeqNo);", "DecryptMessage": "SECURITY_STATUS WINAPI DecryptMessage(PCtxtHandle phContext,PSecBufferDesc pMessage,unsigned __LONG32 MessageSeqNo,unsigned __LONG32 *pfQOP);", "EnumerateSecurityPackagesW": "KSECDDDECLSPEC SECURITY_STATUS WINAPI EnumerateSecurityPackagesW(unsigned __LONG32 *pcPackages,PSecPkgInfoW *ppPackageInfo);", "EnumerateSecurityPackagesA": "SECURITY_STATUS WINAPI EnumerateSecurityPackagesA(unsigned __LONG32 *pcPackages,PSecPkgInfoA *ppPackageInfo);", "QuerySecurityPackageInfoW": "KSECDDDECLSPEC SECURITY_STATUS WINAPI QuerySecurityPackageInfoW(", "QuerySecurityPackageInfoA": "SECURITY_STATUS WINAPI QuerySecurityPackageInfoA(SEC_CHAR *pszPackageName,PSecPkgInfoA *ppPackageInfo);", "DelegateSecurityContext": "SECURITY_STATUS WINAPI DelegateSecurityContext(PCtxtHandle phContext,", "ExportSecurityContext": "KSECDDDECLSPEC SECURITY_STATUS WINAPI ExportSecurityContext(PCtxtHandle phContext,ULONG fFlags,PSecBuffer pPackedContext,void **pToken);", "ImportSecurityContextW": "KSECDDDECLSPEC SECURITY_STATUS WINAPI ImportSecurityContextW(", "ImportSecurityContextA": "SECURITY_STATUS WINAPI ImportSecurityContextA(SEC_CHAR *pszPackage,PSecBuffer pPackedContext,VOID *Token,PCtxtHandle phContext);", "SecLookupAccountSid": "KSECDDDECLSPEC NTSTATUS WINAPI SecLookupAccountSid(PSID Sid,PULONG NameSize,PUNICODE_STRING NameBuffer,PULONG DomainSize,PUNICODE_STRING DomainBuffer,PSID_NAME_USE NameUse);", "SecLookupAccountName": "KSECDDDECLSPEC NTSTATUS WINAPI SecLookupAccountName(PUNICODE_STRING Name,PULONG SidSize,PSID Sid,PSID_NAME_USE NameUse,PULONG DomainSize,PUNICODE_STRING ReferencedDomain);", "SecLookupWellKnownSid": "KSECDDDECLSPEC NTSTATUS WINAPI SecLookupWellKnownSid(WELL_KNOWN_SID_TYPE SidType,PSID Sid,ULONG SidBufferSize,PULONG SidSize);", "InitSecurityInterfaceA": "PSecurityFunctionTableA WINAPI InitSecurityInterfaceA(void);", "InitSecurityInterfaceW": "KSECDDDECLSPEC PSecurityFunctionTableW WINAPI InitSecurityInterfaceW(void);", "SaslEnumerateProfilesA": "SECURITY_STATUS WINAPI SaslEnumerateProfilesA(LPSTR *ProfileList,ULONG *ProfileCount);", "SaslEnumerateProfilesW": "SECURITY_STATUS WINAPI SaslEnumerateProfilesW(LPWSTR *ProfileList,ULONG *ProfileCount);", "SaslGetProfilePackageA": "SECURITY_STATUS WINAPI SaslGetProfilePackageA(LPSTR ProfileName,PSecPkgInfoA *PackageInfo);", "SaslGetProfilePackageW": "SECURITY_STATUS WINAPI SaslGetProfilePackageW(LPWSTR ProfileName,PSecPkgInfoW *PackageInfo);", "SaslIdentifyPackageA": "SECURITY_STATUS WINAPI SaslIdentifyPackageA(PSecBufferDesc pInput,PSecPkgInfoA *PackageInfo);", "SaslIdentifyPackageW": "SECURITY_STATUS WINAPI SaslIdentifyPackageW(PSecBufferDesc pInput,PSecPkgInfoW *PackageInfo);", "SaslInitializeSecurityContextW": "SECURITY_STATUS WINAPI SaslInitializeSecurityContextW(PCredHandle phCredential,PCtxtHandle phContext,LPWSTR pszTargetName,unsigned __LONG32 fContextReq,unsigned __LONG32 Reserved1,unsigned __LONG32 TargetDataRep,PSecBufferDesc pInput,unsigned __LONG32 Reserved2,PCtxtHandle phNewContext,PSecBufferDesc pOutput,unsigned __LONG32 *pfContextAttr,PTimeStamp ptsExpiry);", "SaslInitializeSecurityContextA": "SECURITY_STATUS WINAPI SaslInitializeSecurityContextA(PCredHandle phCredential,PCtxtHandle phContext,LPSTR pszTargetName,unsigned __LONG32 fContextReq,unsigned __LONG32 Reserved1,unsigned __LONG32 TargetDataRep,PSecBufferDesc pInput,unsigned __LONG32 Reserved2,PCtxtHandle phNewContext,PSecBufferDesc pOutput,unsigned __LONG32 *pfContextAttr,PTimeStamp ptsExpiry);", "SaslAcceptSecurityContext": "SECURITY_STATUS WINAPI SaslAcceptSecurityContext(PCredHandle phCredential,PCtxtHandle phContext,PSecBufferDesc pInput,unsigned __LONG32 fContextReq,unsigned __LONG32 TargetDataRep,PCtxtHandle phNewContext,PSecBufferDesc pOutput,unsigned __LONG32 *pfContextAttr,PTimeStamp ptsExpiry);", "SaslSetContextOption": "SECURITY_STATUS WINAPI SaslSetContextOption(PCtxtHandle ContextHandle,ULONG Option,PVOID Value,ULONG Size);", "SaslGetContextOption": "SECURITY_STATUS WINAPI SaslGetContextOption(PCtxtHandle ContextHandle,ULONG Option,PVOID Value,ULONG Size,PULONG Needed);", "AddSecurityPackageA": "SECURITY_STATUS WINAPI AddSecurityPackageA(LPSTR pszPackageName,PSECURITY_PACKAGE_OPTIONS pOptions);", "AddSecurityPackageW": "SECURITY_STATUS WINAPI AddSecurityPackageW(LPWSTR pszPackageName,PSECURITY_PACKAGE_OPTIONS pOptions);", "DeleteSecurityPackageA": "SECURITY_STATUS WINAPI DeleteSecurityPackageA(SEC_CHAR *pszPackageName);", "DeleteSecurityPackageW": "SECURITY_STATUS WINAPI DeleteSecurityPackageW(SEC_WCHAR *pszPackageName);", "IsDestinationReachableA": "WINBOOL WINAPI IsDestinationReachableA(LPCSTR lpszDestination,LPQOCINFO lpQOCInfo);", "IsDestinationReachableW": "WINBOOL WINAPI IsDestinationReachableW(LPCWSTR lpszDestination,LPQOCINFO lpQOCInfo);", "IsNetworkAlive": "WINBOOL WINAPI IsNetworkAlive(LPDWORD lpdwFlags);", "TF_CreateThreadMgr": "HRESULT WINAPI TF_CreateThreadMgr(ITfThreadMgr **pptim);", "TF_GetThreadMgr": "HRESULT WINAPI TF_GetThreadMgr(ITfThreadMgr **pptim);", "TF_CreateInputProcessorProfiles": "HRESULT WINAPI TF_CreateInputProcessorProfiles(ITfInputProcessorProfiles **ppipr);", "TF_CreateLangBarMgr": "HRESULT WINAPI TF_CreateLangBarMgr(ITfLangBarMgr **pppbm);", "TF_CreateLangBarItemMgr": "HRESULT WINAPI TF_CreateLangBarItemMgr(ITfLangBarItemMgr **pplbim);", "TF_InvalidAssemblyListCacheIfExist": "HRESULT WINAPI TF_InvalidAssemblyListCacheIfExist(void);", "WinUsb_AbortPipe": "WINBOOL WINAPI WinUsb_AbortPipe (WINUSB_INTERFACE_HANDLE InterfaceHandle, UCHAR PipeID);", "WinUsb_ControlTransfer": "WINBOOL WINAPI WinUsb_ControlTransfer (WINUSB_INTERFACE_HANDLE InterfaceHandle, WINUSB_SETUP_PACKET SetupPacket, PUCHAR Buffer, ULONG BufferLength, PULONG LengthTransferred, LPOVERLAPPED Overlapped);", "WinUsb_FlushPipe": "WINBOOL WINAPI WinUsb_FlushPipe (WINUSB_INTERFACE_HANDLE InterfaceHandle, UCHAR PipeID);", "WinUsb_Free": "WINBOOL WINAPI WinUsb_Free (WINUSB_INTERFACE_HANDLE InterfaceHandle);", "WinUsb_GetAdjustedFrameNumber": "WINBOOL WINAPI WinUsb_GetAdjustedFrameNumber (PULONG CurrentFrameNumber, LARGE_INTEGER TimeStamp);", "WinUsb_GetAssociatedInterface": "WINBOOL WINAPI WinUsb_GetAssociatedInterface (WINUSB_INTERFACE_HANDLE InterfaceHandle, UCHAR AssociatedInterfaceIndex, PWINUSB_INTERFACE_HANDLE AssociatedInterfaceHandle);", "WinUsb_GetCurrentAlternateSetting": "WINBOOL WINAPI WinUsb_GetCurrentAlternateSetting (WINUSB_INTERFACE_HANDLE InterfaceHandle, PUCHAR SettingNumber);", "WinUsb_GetCurrentFrameNumber": "WINBOOL WINAPI WinUsb_GetCurrentFrameNumber (WINUSB_INTERFACE_HANDLE InterfaceHandle, PULONG CurrentFrameNumber, LARGE_INTEGER* TimeStamp);", "WinUsb_GetDescriptor": "WINBOOL WINAPI WinUsb_GetDescriptor (WINUSB_INTERFACE_HANDLE InterfaceHandle, UCHAR DescriptorType, UCHAR Index, USHORT LanguageID, PUCHAR Buffer, ULONG BufferLength, PULONG LengthTransferred);", "WinUsb_GetOverlappedResult": "WINBOOL WINAPI WinUsb_GetOverlappedResult (WINUSB_INTERFACE_HANDLE InterfaceHandle, LPOVERLAPPED lpOverlapped, LPDWORD lpNumberOfBytesTransferred, WINBOOL bWait);", "WinUsb_GetPipePolicy": "WINBOOL WINAPI WinUsb_GetPipePolicy (WINUSB_INTERFACE_HANDLE InterfaceHandle, UCHAR PipeID, ULONG PolicyType, PULONG ValueLength, PVOID Value);", "WinUsb_GetPowerPolicy": "WINBOOL WINAPI WinUsb_GetPowerPolicy (WINUSB_INTERFACE_HANDLE InterfaceHandle, ULONG PolicyType, PULONG ValueLength, PVOID Value);", "WinUsb_Initialize": "WINBOOL WINAPI WinUsb_Initialize (HANDLE DeviceHandle, PWINUSB_INTERFACE_HANDLE InterfaceHandle);", "WinUsb_ParseConfigurationDescriptor": "PUSB_INTERFACE_DESCRIPTOR WINAPI WinUsb_ParseConfigurationDescriptor (PUSB_CONFIGURATION_DESCRIPTOR ConfigurationDescriptor, PVOID StartPosition, LONG InterfaceNumber, LONG AlternateSetting, LONG InterfaceClass, LONG InterfaceSubClass, LONG InterfaceProtocol);", "WinUsb_ParseDescriptors": "PUSB_COMMON_DESCRIPTOR WINAPI WinUsb_ParseDescriptors (PVOID DescriptorBuffer, ULONG TotalLength, PVOID StartPosition, LONG DescriptorType);", "WinUsb_ReadIsochPipe": "WINBOOL WINAPI WinUsb_ReadIsochPipe (WINUSB_ISOCH_BUFFER_HANDLE BufferHandle, ULONG Offset, ULONG Length, PULONG FrameNumber, ULONG NumberOfPackets, PUSBD_ISO_PACKET_DESCRIPTOR IsoPacketDescriptors, LPOVERLAPPED Overlapped);", "WinUsb_ReadIsochPipeAsap": "WINBOOL WINAPI WinUsb_ReadIsochPipeAsap (WINUSB_ISOCH_BUFFER_HANDLE BufferHandle, ULONG Offset, ULONG Length, BOOL ContinueStream, ULONG NumberOfPackets, PUSBD_ISO_PACKET_DESCRIPTOR IsoPacketDescriptors, LPOVERLAPPED Overlapped);", "WinUsb_ReadPipe": "WINBOOL WINAPI WinUsb_ReadPipe (WINUSB_INTERFACE_HANDLE InterfaceHandle, UCHAR PipeID, PUCHAR Buffer, ULONG BufferLength, PULONG LengthTransferred, LPOVERLAPPED Overlapped);", "WinUsb_RegisterIsochBuffer": "WINBOOL WINAPI WinUsb_RegisterIsochBuffer(WINUSB_INTERFACE_HANDLE InterfaceHandle, UCHAR PipeID, PUCHAR Buffer, ULONG BufferLength, PWINUSB_ISOCH_BUFFER_HANDLE IsochBufferHandle);", "WinUsb_QueryDeviceInformation": "WINBOOL WINAPI WinUsb_QueryDeviceInformation (WINUSB_INTERFACE_HANDLE InterfaceHandle, ULONG InformationType, PULONG BufferLength, PVOID Buffer);", "WinUsb_QueryInterfaceSettings": "WINBOOL WINAPI WinUsb_QueryInterfaceSettings (WINUSB_INTERFACE_HANDLE InterfaceHandle, UCHAR AlternateInterfaceNumber, PUSB_INTERFACE_DESCRIPTOR UsbAltInterfaceDescriptor);", "WinUsb_QueryPipe": "WINBOOL WINAPI WinUsb_QueryPipe (WINUSB_INTERFACE_HANDLE InterfaceHandle, UCHAR AlternateInterfaceNumber, UCHAR PipeIndex, PWINUSB_PIPE_INFORMATION PipeInformation);", "WinUsb_QueryPipeEx": "WINBOOL WINAPI WinUsb_QueryPipeEx (WINUSB_INTERFACE_HANDLE InterfaceHandle, UCHAR AlternateInterfaceNumber, UCHAR PipeIndex, PWINUSB_PIPE_INFORMATION_EX PipeInformationEx);", "WinUsb_ResetPipe": "WINBOOL WINAPI WinUsb_ResetPipe (WINUSB_INTERFACE_HANDLE InterfaceHandle, UCHAR PipeID);", "WinUsb_SetCurrentAlternateSetting": "WINBOOL WINAPI WinUsb_SetCurrentAlternateSetting (WINUSB_INTERFACE_HANDLE InterfaceHandle, UCHAR SettingNumber);", "WinUsb_SetPipePolicy": "WINBOOL WINAPI WinUsb_SetPipePolicy (WINUSB_INTERFACE_HANDLE InterfaceHandle, UCHAR PipeID, ULONG PolicyType, ULONG ValueLength, PVOID Value);", "WinUsb_SetPowerPolicy": "WINBOOL WINAPI WinUsb_SetPowerPolicy (WINUSB_INTERFACE_HANDLE InterfaceHandle, ULONG PolicyType, ULONG ValueLength, PVOID Value);", "WinUsb_UnregisterIsochBuffer": "WINBOOL WINAPI WinUsb_UnregisterIsochBuffer(WINUSB_ISOCH_BUFFER_HANDLE IsochBufferHandle);", "WinUsb_WriteIsochPipe": "WINBOOL WINAPI WinUsb_WriteIsochPipe (WINUSB_ISOCH_BUFFER_HANDLE BufferHandle, ULONG Offset, ULONG Length, PULONG FrameNumber, LPOVERLAPPED Overlapped);", "WinUsb_WriteIsochPipeAsap": "WINBOOL WINAPI WinUsb_WriteIsochPipeAsap (WINUSB_ISOCH_BUFFER_HANDLE BufferHandle, ULONG Offset, ULONG Length, BOOL ContinueStream, LPOVERLAPPED Overlapped);", "WinUsb_WritePipe": "WINBOOL WINAPI WinUsb_WritePipe (WINUSB_INTERFACE_HANDLE InterfaceHandle, UCHAR PipeID, PUCHAR Buffer, ULONG BufferLength, PULONG LengthTransferred, LPOVERLAPPED Overlapped);", "IDistributorNotify_Stop_Proxy": "HRESULT WINAPI IDistributorNotify_Stop_Proxy(IDistributorNotify *This);", "IDistributorNotify_Pause_Proxy": "HRESULT WINAPI IDistributorNotify_Pause_Proxy(IDistributorNotify *This);", "IDistributorNotify_Run_Proxy": "HRESULT WINAPI IDistributorNotify_Run_Proxy(IDistributorNotify *This,REFERENCE_TIME tStart);", "IDistributorNotify_SetSyncSource_Proxy": "HRESULT WINAPI IDistributorNotify_SetSyncSource_Proxy(IDistributorNotify *This,IReferenceClock *pClock);", "IDistributorNotify_NotifyGraphChange_Proxy": "HRESULT WINAPI IDistributorNotify_NotifyGraphChange_Proxy(IDistributorNotify *This);", "IAMVfwCompressDialogs_ShowDialog_Proxy": "HRESULT WINAPI IAMVfwCompressDialogs_ShowDialog_Proxy(IAMVfwCompressDialogs *This,int iDialog,HWND hwnd);", "IAMVfwCompressDialogs_GetState_Proxy": "HRESULT WINAPI IAMVfwCompressDialogs_GetState_Proxy(IAMVfwCompressDialogs *This,LPVOID pState,int *pcbState);", "IAMVfwCompressDialogs_SetState_Proxy": "HRESULT WINAPI IAMVfwCompressDialogs_SetState_Proxy(IAMVfwCompressDialogs *This,LPVOID pState,int cbState);", "IAMVfwCompressDialogs_SendDriverMessage_Proxy": "HRESULT WINAPI IAMVfwCompressDialogs_SendDriverMessage_Proxy(IAMVfwCompressDialogs *This,int uMsg,LONG dw1,LONG dw2);", "IAMAudioInputMixer_put_Enable_Proxy": "HRESULT WINAPI IAMAudioInputMixer_put_Enable_Proxy(IAMAudioInputMixer *This,WINBOOL fEnable);", "IAMAudioInputMixer_get_Enable_Proxy": "HRESULT WINAPI IAMAudioInputMixer_get_Enable_Proxy(IAMAudioInputMixer *This,WINBOOL *pfEnable);", "IAMAudioInputMixer_put_Mono_Proxy": "HRESULT WINAPI IAMAudioInputMixer_put_Mono_Proxy(IAMAudioInputMixer *This,WINBOOL fMono);", "IAMAudioInputMixer_get_Mono_Proxy": "HRESULT WINAPI IAMAudioInputMixer_get_Mono_Proxy(IAMAudioInputMixer *This,WINBOOL *pfMono);", "IAMAudioInputMixer_put_MixLevel_Proxy": "HRESULT WINAPI IAMAudioInputMixer_put_MixLevel_Proxy(IAMAudioInputMixer *This,double Level);", "IAMAudioInputMixer_get_MixLevel_Proxy": "HRESULT WINAPI IAMAudioInputMixer_get_MixLevel_Proxy(IAMAudioInputMixer *This,double *pLevel);", "IAMAudioInputMixer_put_Pan_Proxy": "HRESULT WINAPI IAMAudioInputMixer_put_Pan_Proxy(IAMAudioInputMixer *This,double Pan);", "IAMAudioInputMixer_get_Pan_Proxy": "HRESULT WINAPI IAMAudioInputMixer_get_Pan_Proxy(IAMAudioInputMixer *This,double *pPan);", "IAMAudioInputMixer_put_Loudness_Proxy": "HRESULT WINAPI IAMAudioInputMixer_put_Loudness_Proxy(IAMAudioInputMixer *This,WINBOOL fLoudness);", "IAMAudioInputMixer_get_Loudness_Proxy": "HRESULT WINAPI IAMAudioInputMixer_get_Loudness_Proxy(IAMAudioInputMixer *This,WINBOOL *pfLoudness);", "IAMAudioInputMixer_put_Treble_Proxy": "HRESULT WINAPI IAMAudioInputMixer_put_Treble_Proxy(IAMAudioInputMixer *This,double Treble);", "IAMAudioInputMixer_get_Treble_Proxy": "HRESULT WINAPI IAMAudioInputMixer_get_Treble_Proxy(IAMAudioInputMixer *This,double *pTreble);", "IAMAudioInputMixer_get_TrebleRange_Proxy": "HRESULT WINAPI IAMAudioInputMixer_get_TrebleRange_Proxy(IAMAudioInputMixer *This,double *pRange);", "IAMAudioInputMixer_put_Bass_Proxy": "HRESULT WINAPI IAMAudioInputMixer_put_Bass_Proxy(IAMAudioInputMixer *This,double Bass);", "IAMAudioInputMixer_get_Bass_Proxy": "HRESULT WINAPI IAMAudioInputMixer_get_Bass_Proxy(IAMAudioInputMixer *This,double *pBass);", "IAMAudioInputMixer_get_BassRange_Proxy": "HRESULT WINAPI IAMAudioInputMixer_get_BassRange_Proxy(IAMAudioInputMixer *This,double *pRange);", "IAMAnalogVideoDecoder_get_AvailableTVFormats_Proxy": "HRESULT WINAPI IAMAnalogVideoDecoder_get_AvailableTVFormats_Proxy(IAMAnalogVideoDecoder *This,LONG *lAnalogVideoStandard);", "IAMAnalogVideoDecoder_put_TVFormat_Proxy": "HRESULT WINAPI IAMAnalogVideoDecoder_put_TVFormat_Proxy(IAMAnalogVideoDecoder *This,LONG lAnalogVideoStandard);", "IAMAnalogVideoDecoder_get_TVFormat_Proxy": "HRESULT WINAPI IAMAnalogVideoDecoder_get_TVFormat_Proxy(IAMAnalogVideoDecoder *This,LONG *plAnalogVideoStandard);", "IAMAnalogVideoDecoder_get_HorizontalLocked_Proxy": "HRESULT WINAPI IAMAnalogVideoDecoder_get_HorizontalLocked_Proxy(IAMAnalogVideoDecoder *This,LONG *plLocked);", "IAMAnalogVideoDecoder_put_VCRHorizontalLocking_Proxy": "HRESULT WINAPI IAMAnalogVideoDecoder_put_VCRHorizontalLocking_Proxy(IAMAnalogVideoDecoder *This,LONG lVCRHorizontalLocking);", "IAMAnalogVideoDecoder_get_VCRHorizontalLocking_Proxy": "HRESULT WINAPI IAMAnalogVideoDecoder_get_VCRHorizontalLocking_Proxy(IAMAnalogVideoDecoder *This,LONG *plVCRHorizontalLocking);", "IAMAnalogVideoDecoder_get_NumberOfLines_Proxy": "HRESULT WINAPI IAMAnalogVideoDecoder_get_NumberOfLines_Proxy(IAMAnalogVideoDecoder *This,LONG *plNumberOfLines);", "IAMAnalogVideoDecoder_put_OutputEnable_Proxy": "HRESULT WINAPI IAMAnalogVideoDecoder_put_OutputEnable_Proxy(IAMAnalogVideoDecoder *This,LONG lOutputEnable);", "IAMAnalogVideoDecoder_get_OutputEnable_Proxy": "HRESULT WINAPI IAMAnalogVideoDecoder_get_OutputEnable_Proxy(IAMAnalogVideoDecoder *This,LONG *plOutputEnable);", "IBPCSatelliteTuner_get_DefaultSubChannelTypes_Proxy": "HRESULT WINAPI IBPCSatelliteTuner_get_DefaultSubChannelTypes_Proxy(IBPCSatelliteTuner *This,LONG *plDefaultVideoType,LONG *plDefaultAudioType);", "IBPCSatelliteTuner_put_DefaultSubChannelTypes_Proxy": "HRESULT WINAPI IBPCSatelliteTuner_put_DefaultSubChannelTypes_Proxy(IBPCSatelliteTuner *This,LONG lDefaultVideoType,LONG lDefaultAudioType);", "IBPCSatelliteTuner_IsTapingPermitted_Proxy": "HRESULT WINAPI IBPCSatelliteTuner_IsTapingPermitted_Proxy(IBPCSatelliteTuner *This);", "IAMTVAudio_GetHardwareSupportedTVAudioModes_Proxy": "HRESULT WINAPI IAMTVAudio_GetHardwareSupportedTVAudioModes_Proxy(IAMTVAudio *This,LONG *plModes);", "IAMTVAudio_GetAvailableTVAudioModes_Proxy": "HRESULT WINAPI IAMTVAudio_GetAvailableTVAudioModes_Proxy(IAMTVAudio *This,LONG *plModes);", "IAMTVAudio_get_TVAudioMode_Proxy": "HRESULT WINAPI IAMTVAudio_get_TVAudioMode_Proxy(IAMTVAudio *This,LONG *plMode);", "IAMTVAudio_put_TVAudioMode_Proxy": "HRESULT WINAPI IAMTVAudio_put_TVAudioMode_Proxy(IAMTVAudio *This,LONG lMode);", "IAMTVAudio_RegisterNotificationCallBack_Proxy": "HRESULT WINAPI IAMTVAudio_RegisterNotificationCallBack_Proxy(IAMTVAudio *This,IAMTunerNotification *pNotify,LONG lEvents);", "IAMTVAudio_UnRegisterNotificationCallBack_Proxy": "HRESULT WINAPI IAMTVAudio_UnRegisterNotificationCallBack_Proxy(IAMTVAudio *This,IAMTunerNotification *pNotify);", "IAMTVAudioNotification_OnEvent_Proxy": "HRESULT WINAPI IAMTVAudioNotification_OnEvent_Proxy(IAMTVAudioNotification *This,AMTVAudioEventType Event);", "IAMAnalogVideoEncoder_get_AvailableTVFormats_Proxy": "HRESULT WINAPI IAMAnalogVideoEncoder_get_AvailableTVFormats_Proxy(IAMAnalogVideoEncoder *This,LONG *lAnalogVideoStandard);", "IAMAnalogVideoEncoder_put_TVFormat_Proxy": "HRESULT WINAPI IAMAnalogVideoEncoder_put_TVFormat_Proxy(IAMAnalogVideoEncoder *This,LONG lAnalogVideoStandard);", "IAMAnalogVideoEncoder_get_TVFormat_Proxy": "HRESULT WINAPI IAMAnalogVideoEncoder_get_TVFormat_Proxy(IAMAnalogVideoEncoder *This,LONG *plAnalogVideoStandard);", "IAMAnalogVideoEncoder_put_CopyProtection_Proxy": "HRESULT WINAPI IAMAnalogVideoEncoder_put_CopyProtection_Proxy(IAMAnalogVideoEncoder *This,LONG lVideoCopyProtection);", "IAMAnalogVideoEncoder_get_CopyProtection_Proxy": "HRESULT WINAPI IAMAnalogVideoEncoder_get_CopyProtection_Proxy(IAMAnalogVideoEncoder *This,LONG *lVideoCopyProtection);", "IAMAnalogVideoEncoder_put_CCEnable_Proxy": "HRESULT WINAPI IAMAnalogVideoEncoder_put_CCEnable_Proxy(IAMAnalogVideoEncoder *This,LONG lCCEnable);", "IAMAnalogVideoEncoder_get_CCEnable_Proxy": "HRESULT WINAPI IAMAnalogVideoEncoder_get_CCEnable_Proxy(IAMAnalogVideoEncoder *This,LONG *lCCEnable);", "IAMPhysicalPinInfo_GetPhysicalType_Proxy": "HRESULT WINAPI IAMPhysicalPinInfo_GetPhysicalType_Proxy(IAMPhysicalPinInfo *This,LONG *pType,LPOLESTR *ppszType);", "IAMExtDevice_GetCapability_Proxy": "HRESULT WINAPI IAMExtDevice_GetCapability_Proxy(IAMExtDevice *This,LONG Capability,LONG *pValue,double *pdblValue);", "IAMExtDevice_get_ExternalDeviceID_Proxy": "HRESULT WINAPI IAMExtDevice_get_ExternalDeviceID_Proxy(IAMExtDevice *This,LPOLESTR *ppszData);", "IAMExtDevice_get_ExternalDeviceVersion_Proxy": "HRESULT WINAPI IAMExtDevice_get_ExternalDeviceVersion_Proxy(IAMExtDevice *This,LPOLESTR *ppszData);", "IAMExtDevice_put_DevicePower_Proxy": "HRESULT WINAPI IAMExtDevice_put_DevicePower_Proxy(IAMExtDevice *This,LONG PowerMode);", "IAMExtDevice_get_DevicePower_Proxy": "HRESULT WINAPI IAMExtDevice_get_DevicePower_Proxy(IAMExtDevice *This,LONG *pPowerMode);", "IAMExtDevice_Calibrate_Proxy": "HRESULT WINAPI IAMExtDevice_Calibrate_Proxy(IAMExtDevice *This,HEVENT hEvent,LONG Mode,LONG *pStatus);", "IAMExtDevice_put_DevicePort_Proxy": "HRESULT WINAPI IAMExtDevice_put_DevicePort_Proxy(IAMExtDevice *This,LONG DevicePort);", "IAMExtDevice_get_DevicePort_Proxy": "HRESULT WINAPI IAMExtDevice_get_DevicePort_Proxy(IAMExtDevice *This,LONG *pDevicePort);", "IAMExtTransport_GetCapability_Proxy": "HRESULT WINAPI IAMExtTransport_GetCapability_Proxy(IAMExtTransport *This,LONG Capability,LONG *pValue,double *pdblValue);", "IAMExtTransport_put_MediaState_Proxy": "HRESULT WINAPI IAMExtTransport_put_MediaState_Proxy(IAMExtTransport *This,LONG State);", "IAMExtTransport_get_MediaState_Proxy": "HRESULT WINAPI IAMExtTransport_get_MediaState_Proxy(IAMExtTransport *This,LONG *pState);", "IAMExtTransport_put_LocalControl_Proxy": "HRESULT WINAPI IAMExtTransport_put_LocalControl_Proxy(IAMExtTransport *This,LONG State);", "IAMExtTransport_get_LocalControl_Proxy": "HRESULT WINAPI IAMExtTransport_get_LocalControl_Proxy(IAMExtTransport *This,LONG *pState);", "IAMExtTransport_GetStatus_Proxy": "HRESULT WINAPI IAMExtTransport_GetStatus_Proxy(IAMExtTransport *This,LONG StatusItem,LONG *pValue);", "IAMExtTransport_GetTransportBasicParameters_Proxy": "HRESULT WINAPI IAMExtTransport_GetTransportBasicParameters_Proxy(IAMExtTransport *This,LONG Param,LONG *pValue,LPOLESTR *ppszData);", "IAMExtTransport_SetTransportBasicParameters_Proxy": "HRESULT WINAPI IAMExtTransport_SetTransportBasicParameters_Proxy(IAMExtTransport *This,LONG Param,LONG Value,LPCOLESTR pszData);", "IAMExtTransport_GetTransportVideoParameters_Proxy": "HRESULT WINAPI IAMExtTransport_GetTransportVideoParameters_Proxy(IAMExtTransport *This,LONG Param,LONG *pValue);", "IAMExtTransport_SetTransportVideoParameters_Proxy": "HRESULT WINAPI IAMExtTransport_SetTransportVideoParameters_Proxy(IAMExtTransport *This,LONG Param,LONG Value);", "IAMExtTransport_GetTransportAudioParameters_Proxy": "HRESULT WINAPI IAMExtTransport_GetTransportAudioParameters_Proxy(IAMExtTransport *This,LONG Param,LONG *pValue);", "IAMExtTransport_SetTransportAudioParameters_Proxy": "HRESULT WINAPI IAMExtTransport_SetTransportAudioParameters_Proxy(IAMExtTransport *This,LONG Param,LONG Value);", "IAMExtTransport_put_Mode_Proxy": "HRESULT WINAPI IAMExtTransport_put_Mode_Proxy(IAMExtTransport *This,LONG Mode);", "IAMExtTransport_get_Mode_Proxy": "HRESULT WINAPI IAMExtTransport_get_Mode_Proxy(IAMExtTransport *This,LONG *pMode);", "IAMExtTransport_put_Rate_Proxy": "HRESULT WINAPI IAMExtTransport_put_Rate_Proxy(IAMExtTransport *This,double dblRate);", "IAMExtTransport_get_Rate_Proxy": "HRESULT WINAPI IAMExtTransport_get_Rate_Proxy(IAMExtTransport *This,double *pdblRate);", "IAMExtTransport_GetChase_Proxy": "HRESULT WINAPI IAMExtTransport_GetChase_Proxy(IAMExtTransport *This,LONG *pEnabled,LONG *pOffset,HEVENT *phEvent);", "IAMExtTransport_SetChase_Proxy": "HRESULT WINAPI IAMExtTransport_SetChase_Proxy(IAMExtTransport *This,LONG Enable,LONG Offset,HEVENT hEvent);", "IAMExtTransport_GetBump_Proxy": "HRESULT WINAPI IAMExtTransport_GetBump_Proxy(IAMExtTransport *This,LONG *pSpeed,LONG *pDuration);", "IAMExtTransport_SetBump_Proxy": "HRESULT WINAPI IAMExtTransport_SetBump_Proxy(IAMExtTransport *This,LONG Speed,LONG Duration);", "IAMExtTransport_get_AntiClogControl_Proxy": "HRESULT WINAPI IAMExtTransport_get_AntiClogControl_Proxy(IAMExtTransport *This,LONG *pEnabled);", "IAMExtTransport_put_AntiClogControl_Proxy": "HRESULT WINAPI IAMExtTransport_put_AntiClogControl_Proxy(IAMExtTransport *This,LONG Enable);", "IAMExtTransport_GetEditPropertySet_Proxy": "HRESULT WINAPI IAMExtTransport_GetEditPropertySet_Proxy(IAMExtTransport *This,LONG EditID,LONG *pState);", "IAMExtTransport_SetEditPropertySet_Proxy": "HRESULT WINAPI IAMExtTransport_SetEditPropertySet_Proxy(IAMExtTransport *This,LONG *pEditID,LONG State);", "IAMExtTransport_GetEditProperty_Proxy": "HRESULT WINAPI IAMExtTransport_GetEditProperty_Proxy(IAMExtTransport *This,LONG EditID,LONG Param,LONG *pValue);", "IAMExtTransport_SetEditProperty_Proxy": "HRESULT WINAPI IAMExtTransport_SetEditProperty_Proxy(IAMExtTransport *This,LONG EditID,LONG Param,LONG Value);", "IAMExtTransport_get_EditStart_Proxy": "HRESULT WINAPI IAMExtTransport_get_EditStart_Proxy(IAMExtTransport *This,LONG *pValue);", "IAMExtTransport_put_EditStart_Proxy": "HRESULT WINAPI IAMExtTransport_put_EditStart_Proxy(IAMExtTransport *This,LONG Value);", "IAMTimecodeReader_GetTCRMode_Proxy": "HRESULT WINAPI IAMTimecodeReader_GetTCRMode_Proxy(IAMTimecodeReader *This,LONG Param,LONG *pValue);", "IAMTimecodeReader_SetTCRMode_Proxy": "HRESULT WINAPI IAMTimecodeReader_SetTCRMode_Proxy(IAMTimecodeReader *This,LONG Param,LONG Value);", "IAMTimecodeReader_put_VITCLine_Proxy": "HRESULT WINAPI IAMTimecodeReader_put_VITCLine_Proxy(IAMTimecodeReader *This,LONG Line);", "IAMTimecodeReader_get_VITCLine_Proxy": "HRESULT WINAPI IAMTimecodeReader_get_VITCLine_Proxy(IAMTimecodeReader *This,LONG *pLine);", "IAMTimecodeReader_GetTimecode_Proxy": "HRESULT WINAPI IAMTimecodeReader_GetTimecode_Proxy(IAMTimecodeReader *This,PTIMECODE_SAMPLE pTimecodeSample);", "IAMTimecodeGenerator_GetTCGMode_Proxy": "HRESULT WINAPI IAMTimecodeGenerator_GetTCGMode_Proxy(IAMTimecodeGenerator *This,LONG Param,LONG *pValue);", "IAMTimecodeGenerator_SetTCGMode_Proxy": "HRESULT WINAPI IAMTimecodeGenerator_SetTCGMode_Proxy(IAMTimecodeGenerator *This,LONG Param,LONG Value);", "IAMTimecodeGenerator_put_VITCLine_Proxy": "HRESULT WINAPI IAMTimecodeGenerator_put_VITCLine_Proxy(IAMTimecodeGenerator *This,LONG Line);", "IAMTimecodeGenerator_get_VITCLine_Proxy": "HRESULT WINAPI IAMTimecodeGenerator_get_VITCLine_Proxy(IAMTimecodeGenerator *This,LONG *pLine);", "IAMTimecodeGenerator_SetTimecode_Proxy": "HRESULT WINAPI IAMTimecodeGenerator_SetTimecode_Proxy(IAMTimecodeGenerator *This,PTIMECODE_SAMPLE pTimecodeSample);", "IAMTimecodeGenerator_GetTimecode_Proxy": "HRESULT WINAPI IAMTimecodeGenerator_GetTimecode_Proxy(IAMTimecodeGenerator *This,PTIMECODE_SAMPLE pTimecodeSample);", "IAMTimecodeDisplay_GetTCDisplayEnable_Proxy": "HRESULT WINAPI IAMTimecodeDisplay_GetTCDisplayEnable_Proxy(IAMTimecodeDisplay *This,LONG *pState);", "IAMTimecodeDisplay_SetTCDisplayEnable_Proxy": "HRESULT WINAPI IAMTimecodeDisplay_SetTCDisplayEnable_Proxy(IAMTimecodeDisplay *This,LONG State);", "IAMTimecodeDisplay_GetTCDisplay_Proxy": "HRESULT WINAPI IAMTimecodeDisplay_GetTCDisplay_Proxy(IAMTimecodeDisplay *This,LONG Param,LONG *pValue);", "IAMTimecodeDisplay_SetTCDisplay_Proxy": "HRESULT WINAPI IAMTimecodeDisplay_SetTCDisplay_Proxy(IAMTimecodeDisplay *This,LONG Param,LONG Value);", "IAMDevMemoryAllocator_GetInfo_Proxy": "HRESULT WINAPI IAMDevMemoryAllocator_GetInfo_Proxy(IAMDevMemoryAllocator *This,DWORD *pdwcbTotalFree,DWORD *pdwcbLargestFree,DWORD *pdwcbTotalMemory,DWORD *pdwcbMinimumChunk);", "IAMDevMemoryAllocator_CheckMemory_Proxy": "HRESULT WINAPI IAMDevMemoryAllocator_CheckMemory_Proxy(IAMDevMemoryAllocator *This,const BYTE *pBuffer);", "IAMDevMemoryAllocator_Alloc_Proxy": "HRESULT WINAPI IAMDevMemoryAllocator_Alloc_Proxy(IAMDevMemoryAllocator *This,BYTE **ppBuffer,DWORD *pdwcbBuffer);", "IAMDevMemoryAllocator_Free_Proxy": "HRESULT WINAPI IAMDevMemoryAllocator_Free_Proxy(IAMDevMemoryAllocator *This,BYTE *pBuffer);", "IAMDevMemoryAllocator_GetDevMemoryObject_Proxy": "HRESULT WINAPI IAMDevMemoryAllocator_GetDevMemoryObject_Proxy(IAMDevMemoryAllocator *This,IUnknown **ppUnkInnner,IUnknown *pUnkOuter);", "IAMDevMemoryControl_QueryWriteSync_Proxy": "HRESULT WINAPI IAMDevMemoryControl_QueryWriteSync_Proxy(IAMDevMemoryControl *This);", "IAMDevMemoryControl_WriteSync_Proxy": "HRESULT WINAPI IAMDevMemoryControl_WriteSync_Proxy(IAMDevMemoryControl *This);", "IAMDevMemoryControl_GetDevId_Proxy": "HRESULT WINAPI IAMDevMemoryControl_GetDevId_Proxy(IAMDevMemoryControl *This,DWORD *pdwDevId);", "IAMStreamSelect_Count_Proxy": "HRESULT WINAPI IAMStreamSelect_Count_Proxy(IAMStreamSelect *This,DWORD *pcStreams);", "IAMStreamSelect_Info_Proxy": "HRESULT WINAPI IAMStreamSelect_Info_Proxy(IAMStreamSelect *This,LONG lIndex,AM_MEDIA_TYPE **ppmt,DWORD *pdwFlags,LCID *plcid,DWORD *pdwGroup,WCHAR **ppszName,IUnknown **ppObject,IUnknown **ppUnk);", "IAMStreamSelect_Enable_Proxy": "HRESULT WINAPI IAMStreamSelect_Enable_Proxy(IAMStreamSelect *This,LONG lIndex,DWORD dwFlags);", "IAMResourceControl_Reserve_Proxy": "HRESULT WINAPI IAMResourceControl_Reserve_Proxy(IAMResourceControl *This,DWORD dwFlags,PVOID pvReserved);", "IAMClockAdjust_SetClockDelta_Proxy": "HRESULT WINAPI IAMClockAdjust_SetClockDelta_Proxy(IAMClockAdjust *This,REFERENCE_TIME rtDelta);", "IDrawVideoImage_DrawVideoImageBegin_Proxy": "HRESULT WINAPI IDrawVideoImage_DrawVideoImageBegin_Proxy(IDrawVideoImage *This);", "IDrawVideoImage_DrawVideoImageEnd_Proxy": "HRESULT WINAPI IDrawVideoImage_DrawVideoImageEnd_Proxy(IDrawVideoImage *This);", "IDrawVideoImage_DrawVideoImageDraw_Proxy": "HRESULT WINAPI IDrawVideoImage_DrawVideoImageDraw_Proxy(IDrawVideoImage *This,HDC hdc,LPRECT lprcSrc,LPRECT lprcDst);", "IDecimateVideoImage_SetDecimationImageSize_Proxy": "HRESULT WINAPI IDecimateVideoImage_SetDecimationImageSize_Proxy(IDecimateVideoImage *This,LONG lWidth,LONG lHeight);", "IDecimateVideoImage_ResetDecimationImageSize_Proxy": "HRESULT WINAPI IDecimateVideoImage_ResetDecimationImageSize_Proxy(IDecimateVideoImage *This);", "IAMVideoDecimationProperties_QueryDecimationUsage_Proxy": "HRESULT WINAPI IAMVideoDecimationProperties_QueryDecimationUsage_Proxy(IAMVideoDecimationProperties *This,DECIMATION_USAGE *lpUsage);", "IAMVideoDecimationProperties_SetDecimationUsage_Proxy": "HRESULT WINAPI IAMVideoDecimationProperties_SetDecimationUsage_Proxy(IAMVideoDecimationProperties *This,DECIMATION_USAGE Usage);", "IAMDeviceRemoval_DeviceInfo_Proxy": "HRESULT WINAPI IAMDeviceRemoval_DeviceInfo_Proxy(IAMDeviceRemoval *This,CLSID *pclsidInterfaceClass,WCHAR **pwszSymbolicLink);", "IAMDeviceRemoval_Reassociate_Proxy": "HRESULT WINAPI IAMDeviceRemoval_Reassociate_Proxy(IAMDeviceRemoval *This);", "IAMDeviceRemoval_Disassociate_Proxy": "HRESULT WINAPI IAMDeviceRemoval_Disassociate_Proxy(IAMDeviceRemoval *This);", "IDVEnc_get_IFormatResolution_Proxy": "HRESULT WINAPI IDVEnc_get_IFormatResolution_Proxy(IDVEnc *This,int *VideoFormat,int *DVFormat,int *Resolution,BYTE fDVInfo,DVINFO *sDVInfo);", "IDVEnc_put_IFormatResolution_Proxy": "HRESULT WINAPI IDVEnc_put_IFormatResolution_Proxy(IDVEnc *This,int VideoFormat,int DVFormat,int Resolution,BYTE fDVInfo,DVINFO *sDVInfo);", "IIPDVDec_get_IPDisplay_Proxy": "HRESULT WINAPI IIPDVDec_get_IPDisplay_Proxy(IIPDVDec *This,int *displayPix);", "IIPDVDec_put_IPDisplay_Proxy": "HRESULT WINAPI IIPDVDec_put_IPDisplay_Proxy(IIPDVDec *This,int displayPix);", "IDVRGB219_SetRGB219_Proxy": "HRESULT WINAPI IDVRGB219_SetRGB219_Proxy(IDVRGB219 *This,WINBOOL bState);", "IDVSplitter_DiscardAlternateVideoFrames_Proxy": "HRESULT WINAPI IDVSplitter_DiscardAlternateVideoFrames_Proxy(IDVSplitter *This,int nDiscard);", "IAMAudioRendererStats_GetStatParam_Proxy": "HRESULT WINAPI IAMAudioRendererStats_GetStatParam_Proxy(IAMAudioRendererStats *This,DWORD dwParam,DWORD *pdwParam1,DWORD *pdwParam2);", "IAMGraphStreams_FindUpstreamInterface_Proxy": "HRESULT WINAPI IAMGraphStreams_FindUpstreamInterface_Proxy(IAMGraphStreams *This,IPin *pPin,REFIID riid,void **ppvInterface,DWORD dwFlags);", "IAMGraphStreams_SyncUsingStreamOffset_Proxy": "HRESULT WINAPI IAMGraphStreams_SyncUsingStreamOffset_Proxy(IAMGraphStreams *This,WINBOOL bUseStreamOffset);", "IAMGraphStreams_SetMaxGraphLatency_Proxy": "HRESULT WINAPI IAMGraphStreams_SetMaxGraphLatency_Proxy(IAMGraphStreams *This,REFERENCE_TIME rtMaxGraphLatency);", "IAMOverlayFX_QueryOverlayFXCaps_Proxy": "HRESULT WINAPI IAMOverlayFX_QueryOverlayFXCaps_Proxy(IAMOverlayFX *This,DWORD *lpdwOverlayFXCaps);", "IAMOverlayFX_SetOverlayFX_Proxy": "HRESULT WINAPI IAMOverlayFX_SetOverlayFX_Proxy(IAMOverlayFX *This,DWORD dwOverlayFX);", "IAMOverlayFX_GetOverlayFX_Proxy": "HRESULT WINAPI IAMOverlayFX_GetOverlayFX_Proxy(IAMOverlayFX *This,DWORD *lpdwOverlayFX);", "IAMOpenProgress_QueryProgress_Proxy": "HRESULT WINAPI IAMOpenProgress_QueryProgress_Proxy(IAMOpenProgress *This,LONGLONG *pllTotal,LONGLONG *pllCurrent);", "IAMOpenProgress_AbortOperation_Proxy": "HRESULT WINAPI IAMOpenProgress_AbortOperation_Proxy(IAMOpenProgress *This);", "IMpeg2Demultiplexer_CreateOutputPin_Proxy": "HRESULT WINAPI IMpeg2Demultiplexer_CreateOutputPin_Proxy(IMpeg2Demultiplexer *This,AM_MEDIA_TYPE *pMediaType,LPWSTR pszPinName,IPin **ppIPin);", "IMpeg2Demultiplexer_SetOutputPinMediaType_Proxy": "HRESULT WINAPI IMpeg2Demultiplexer_SetOutputPinMediaType_Proxy(IMpeg2Demultiplexer *This,LPWSTR pszPinName,AM_MEDIA_TYPE *pMediaType);", "IMpeg2Demultiplexer_DeleteOutputPin_Proxy": "HRESULT WINAPI IMpeg2Demultiplexer_DeleteOutputPin_Proxy(IMpeg2Demultiplexer *This,LPWSTR pszPinName);", "IEnumStreamIdMap_Next_Proxy": "HRESULT WINAPI IEnumStreamIdMap_Next_Proxy(IEnumStreamIdMap *This,ULONG cRequest,STREAM_ID_MAP *pStreamIdMap,ULONG *pcReceived);", "IEnumStreamIdMap_Skip_Proxy": "HRESULT WINAPI IEnumStreamIdMap_Skip_Proxy(IEnumStreamIdMap *This,ULONG cRecords);", "IEnumStreamIdMap_Reset_Proxy": "HRESULT WINAPI IEnumStreamIdMap_Reset_Proxy(IEnumStreamIdMap *This);", "IEnumStreamIdMap_Clone_Proxy": "HRESULT WINAPI IEnumStreamIdMap_Clone_Proxy(IEnumStreamIdMap *This,IEnumStreamIdMap **ppIEnumStreamIdMap);", "IMPEG2StreamIdMap_MapStreamId_Proxy": "HRESULT WINAPI IMPEG2StreamIdMap_MapStreamId_Proxy(IMPEG2StreamIdMap *This,ULONG ulStreamId,DWORD MediaSampleContent,ULONG ulSubstreamFilterValue,int iDataOffset);", "IMPEG2StreamIdMap_UnmapStreamId_Proxy": "HRESULT WINAPI IMPEG2StreamIdMap_UnmapStreamId_Proxy(IMPEG2StreamIdMap *This,ULONG culStreamId,ULONG *pulStreamId);", "IMPEG2StreamIdMap_EnumStreamIdMap_Proxy": "HRESULT WINAPI IMPEG2StreamIdMap_EnumStreamIdMap_Proxy(IMPEG2StreamIdMap *This,IEnumStreamIdMap **ppIEnumStreamIdMap);", "IRegisterServiceProvider_RegisterService_Proxy": "HRESULT WINAPI IRegisterServiceProvider_RegisterService_Proxy(IRegisterServiceProvider *This,REFGUID guidService,IUnknown *pUnkObject);", "ICodecAPI_IsSupported_Proxy": "HRESULT WINAPI ICodecAPI_IsSupported_Proxy(ICodecAPI *This,const GUID *Api);", "ICodecAPI_IsModifiable_Proxy": "HRESULT WINAPI ICodecAPI_IsModifiable_Proxy(ICodecAPI *This,const GUID *Api);", "ICodecAPI_GetParameterRange_Proxy": "HRESULT WINAPI ICodecAPI_GetParameterRange_Proxy(ICodecAPI *This,const GUID *Api,VARIANT *ValueMin,VARIANT *ValueMax,VARIANT *SteppingDelta);", "ICodecAPI_GetParameterValues_Proxy": "HRESULT WINAPI ICodecAPI_GetParameterValues_Proxy(ICodecAPI *This,const GUID *Api,VARIANT **Values,ULONG *ValuesCount);", "ICodecAPI_GetDefaultValue_Proxy": "HRESULT WINAPI ICodecAPI_GetDefaultValue_Proxy(ICodecAPI *This,const GUID *Api,VARIANT *Value);", "ICodecAPI_GetValue_Proxy": "HRESULT WINAPI ICodecAPI_GetValue_Proxy(ICodecAPI *This,const GUID *Api,VARIANT *Value);", "ICodecAPI_SetValue_Proxy": "HRESULT WINAPI ICodecAPI_SetValue_Proxy(ICodecAPI *This,const GUID *Api,VARIANT *Value);", "ICodecAPI_RegisterForEvent_Proxy": "HRESULT WINAPI ICodecAPI_RegisterForEvent_Proxy(ICodecAPI *This,const GUID *Api,LONG_PTR userData);", "ICodecAPI_UnregisterForEvent_Proxy": "HRESULT WINAPI ICodecAPI_UnregisterForEvent_Proxy(ICodecAPI *This,const GUID *Api);", "ICodecAPI_SetAllDefaults_Proxy": "HRESULT WINAPI ICodecAPI_SetAllDefaults_Proxy(ICodecAPI *This);", "ICodecAPI_SetValueWithNotify_Proxy": "HRESULT WINAPI ICodecAPI_SetValueWithNotify_Proxy(ICodecAPI *This,const GUID *Api,VARIANT *Value,GUID **ChangedParam,ULONG *ChangedParamCount);", "ICodecAPI_SetAllDefaultsWithNotify_Proxy": "HRESULT WINAPI ICodecAPI_SetAllDefaultsWithNotify_Proxy(ICodecAPI *This,GUID **ChangedParam,ULONG *ChangedParamCount);", "ICodecAPI_GetAllSettings_Proxy": "HRESULT WINAPI ICodecAPI_GetAllSettings_Proxy(ICodecAPI *This,IStream *__MIDL_0016);", "ICodecAPI_SetAllSettings_Proxy": "HRESULT WINAPI ICodecAPI_SetAllSettings_Proxy(ICodecAPI *This,IStream *__MIDL_0017);", "ICodecAPI_SetAllSettingsWithNotify_Proxy": "HRESULT WINAPI ICodecAPI_SetAllSettingsWithNotify_Proxy(ICodecAPI *This,IStream *__MIDL_0018,GUID **ChangedParam,ULONG *ChangedParamCount);", "IGetCapabilitiesKey_GetCapabilitiesKey_Proxy": "HRESULT WINAPI IGetCapabilitiesKey_GetCapabilitiesKey_Proxy(IGetCapabilitiesKey *This,HKEY *pHKey);", "IEncoderAPI_IsSupported_Proxy": "HRESULT WINAPI IEncoderAPI_IsSupported_Proxy(IEncoderAPI *This,const GUID *Api);", "IEncoderAPI_IsAvailable_Proxy": "HRESULT WINAPI IEncoderAPI_IsAvailable_Proxy(IEncoderAPI *This,const GUID *Api);", "IEncoderAPI_GetParameterRange_Proxy": "HRESULT WINAPI IEncoderAPI_GetParameterRange_Proxy(IEncoderAPI *This,const GUID *Api,VARIANT *ValueMin,VARIANT *ValueMax,VARIANT *SteppingDelta);", "IEncoderAPI_GetParameterValues_Proxy": "HRESULT WINAPI IEncoderAPI_GetParameterValues_Proxy(IEncoderAPI *This,const GUID *Api,VARIANT **Values,ULONG *ValuesCount);", "IEncoderAPI_GetDefaultValue_Proxy": "HRESULT WINAPI IEncoderAPI_GetDefaultValue_Proxy(IEncoderAPI *This,const GUID *Api,VARIANT *Value);", "IEncoderAPI_GetValue_Proxy": "HRESULT WINAPI IEncoderAPI_GetValue_Proxy(IEncoderAPI *This,const GUID *Api,VARIANT *Value);", "IEncoderAPI_SetValue_Proxy": "HRESULT WINAPI IEncoderAPI_SetValue_Proxy(IEncoderAPI *This,const GUID *Api,VARIANT *Value);", "IAMDecoderCaps_GetDecoderCaps_Proxy": "HRESULT WINAPI IAMDecoderCaps_GetDecoderCaps_Proxy(IAMDecoderCaps *This,DWORD dwCapIndex,DWORD *lpdwCap);", "IDvdControl_TitlePlay_Proxy": "HRESULT WINAPI IDvdControl_TitlePlay_Proxy(IDvdControl *This,ULONG ulTitle);", "IDvdControl_ChapterPlay_Proxy": "HRESULT WINAPI IDvdControl_ChapterPlay_Proxy(IDvdControl *This,ULONG ulTitle,ULONG ulChapter);", "IDvdControl_TimePlay_Proxy": "HRESULT WINAPI IDvdControl_TimePlay_Proxy(IDvdControl *This,ULONG ulTitle,ULONG bcdTime);", "IDvdControl_StopForResume_Proxy": "HRESULT WINAPI IDvdControl_StopForResume_Proxy(IDvdControl *This);", "IDvdControl_GoUp_Proxy": "HRESULT WINAPI IDvdControl_GoUp_Proxy(IDvdControl *This);", "IDvdControl_TimeSearch_Proxy": "HRESULT WINAPI IDvdControl_TimeSearch_Proxy(IDvdControl *This,ULONG bcdTime);", "IDvdControl_ChapterSearch_Proxy": "HRESULT WINAPI IDvdControl_ChapterSearch_Proxy(IDvdControl *This,ULONG ulChapter);", "IDvdControl_PrevPGSearch_Proxy": "HRESULT WINAPI IDvdControl_PrevPGSearch_Proxy(IDvdControl *This);", "IDvdControl_TopPGSearch_Proxy": "HRESULT WINAPI IDvdControl_TopPGSearch_Proxy(IDvdControl *This);", "IDvdControl_NextPGSearch_Proxy": "HRESULT WINAPI IDvdControl_NextPGSearch_Proxy(IDvdControl *This);", "IDvdControl_ForwardScan_Proxy": "HRESULT WINAPI IDvdControl_ForwardScan_Proxy(IDvdControl *This,double dwSpeed);", "IDvdControl_BackwardScan_Proxy": "HRESULT WINAPI IDvdControl_BackwardScan_Proxy(IDvdControl *This,double dwSpeed);", "IDvdControl_MenuCall_Proxy": "HRESULT WINAPI IDvdControl_MenuCall_Proxy(IDvdControl *This,DVD_MENU_ID MenuID);", "IDvdControl_Resume_Proxy": "HRESULT WINAPI IDvdControl_Resume_Proxy(IDvdControl *This);", "IDvdControl_UpperButtonSelect_Proxy": "HRESULT WINAPI IDvdControl_UpperButtonSelect_Proxy(IDvdControl *This);", "IDvdControl_LowerButtonSelect_Proxy": "HRESULT WINAPI IDvdControl_LowerButtonSelect_Proxy(IDvdControl *This);", "IDvdControl_LeftButtonSelect_Proxy": "HRESULT WINAPI IDvdControl_LeftButtonSelect_Proxy(IDvdControl *This);", "IDvdControl_RightButtonSelect_Proxy": "HRESULT WINAPI IDvdControl_RightButtonSelect_Proxy(IDvdControl *This);", "IDvdControl_ButtonActivate_Proxy": "HRESULT WINAPI IDvdControl_ButtonActivate_Proxy(IDvdControl *This);", "IDvdControl_ButtonSelectAndActivate_Proxy": "HRESULT WINAPI IDvdControl_ButtonSelectAndActivate_Proxy(IDvdControl *This,ULONG ulButton);", "IDvdControl_StillOff_Proxy": "HRESULT WINAPI IDvdControl_StillOff_Proxy(IDvdControl *This);", "IDvdControl_PauseOn_Proxy": "HRESULT WINAPI IDvdControl_PauseOn_Proxy(IDvdControl *This);", "IDvdControl_PauseOff_Proxy": "HRESULT WINAPI IDvdControl_PauseOff_Proxy(IDvdControl *This);", "IDvdControl_MenuLanguageSelect_Proxy": "HRESULT WINAPI IDvdControl_MenuLanguageSelect_Proxy(IDvdControl *This,LCID Language);", "IDvdControl_AudioStreamChange_Proxy": "HRESULT WINAPI IDvdControl_AudioStreamChange_Proxy(IDvdControl *This,ULONG ulAudio);", "IDvdControl_SubpictureStreamChange_Proxy": "HRESULT WINAPI IDvdControl_SubpictureStreamChange_Proxy(IDvdControl *This,ULONG ulSubPicture,WINBOOL bDisplay);", "IDvdControl_AngleChange_Proxy": "HRESULT WINAPI IDvdControl_AngleChange_Proxy(IDvdControl *This,ULONG ulAngle);", "IDvdControl_ParentalLevelSelect_Proxy": "HRESULT WINAPI IDvdControl_ParentalLevelSelect_Proxy(IDvdControl *This,ULONG ulParentalLevel);", "IDvdControl_ParentalCountrySelect_Proxy": "HRESULT WINAPI IDvdControl_ParentalCountrySelect_Proxy(IDvdControl *This,WORD wCountry);", "IDvdControl_KaraokeAudioPresentationModeChange_Proxy": "HRESULT WINAPI IDvdControl_KaraokeAudioPresentationModeChange_Proxy(IDvdControl *This,ULONG ulMode);", "IDvdControl_VideoModePreferrence_Proxy": "HRESULT WINAPI IDvdControl_VideoModePreferrence_Proxy(IDvdControl *This,ULONG ulPreferredDisplayMode);", "IDvdControl_SetRoot_Proxy": "HRESULT WINAPI IDvdControl_SetRoot_Proxy(IDvdControl *This,LPCWSTR pszPath);", "IDvdControl_MouseActivate_Proxy": "HRESULT WINAPI IDvdControl_MouseActivate_Proxy(IDvdControl *This,POINT point);", "IDvdControl_MouseSelect_Proxy": "HRESULT WINAPI IDvdControl_MouseSelect_Proxy(IDvdControl *This,POINT point);", "IDvdControl_ChapterPlayAutoStop_Proxy": "HRESULT WINAPI IDvdControl_ChapterPlayAutoStop_Proxy(IDvdControl *This,ULONG ulTitle,ULONG ulChapter,ULONG ulChaptersToPlay);", "IDvdInfo_GetCurrentDomain_Proxy": "HRESULT WINAPI IDvdInfo_GetCurrentDomain_Proxy(IDvdInfo *This,DVD_DOMAIN *pDomain);", "IDvdInfo_GetCurrentLocation_Proxy": "HRESULT WINAPI IDvdInfo_GetCurrentLocation_Proxy(IDvdInfo *This,DVD_PLAYBACK_LOCATION *pLocation);", "IDvdInfo_GetTotalTitleTime_Proxy": "HRESULT WINAPI IDvdInfo_GetTotalTitleTime_Proxy(IDvdInfo *This,ULONG *pulTotalTime);", "IDvdInfo_GetCurrentButton_Proxy": "HRESULT WINAPI IDvdInfo_GetCurrentButton_Proxy(IDvdInfo *This,ULONG *pulButtonsAvailable,ULONG *pulCurrentButton);", "IDvdInfo_GetCurrentAngle_Proxy": "HRESULT WINAPI IDvdInfo_GetCurrentAngle_Proxy(IDvdInfo *This,ULONG *pulAnglesAvailable,ULONG *pulCurrentAngle);", "IDvdInfo_GetCurrentAudio_Proxy": "HRESULT WINAPI IDvdInfo_GetCurrentAudio_Proxy(IDvdInfo *This,ULONG *pulStreamsAvailable,ULONG *pulCurrentStream);", "IDvdInfo_GetCurrentSubpicture_Proxy": "HRESULT WINAPI IDvdInfo_GetCurrentSubpicture_Proxy(IDvdInfo *This,ULONG *pulStreamsAvailable,ULONG *pulCurrentStream,WINBOOL *pIsDisabled);", "IDvdInfo_GetCurrentUOPS_Proxy": "HRESULT WINAPI IDvdInfo_GetCurrentUOPS_Proxy(IDvdInfo *This,VALID_UOP_SOMTHING_OR_OTHER *pUOP);", "IDvdInfo_GetAllSPRMs_Proxy": "HRESULT WINAPI IDvdInfo_GetAllSPRMs_Proxy(IDvdInfo *This,SPRMARRAY *pRegisterArray);", "IDvdInfo_GetAllGPRMs_Proxy": "HRESULT WINAPI IDvdInfo_GetAllGPRMs_Proxy(IDvdInfo *This,GPRMARRAY *pRegisterArray);", "IDvdInfo_GetAudioLanguage_Proxy": "HRESULT WINAPI IDvdInfo_GetAudioLanguage_Proxy(IDvdInfo *This,ULONG ulStream,LCID *pLanguage);", "IDvdInfo_GetSubpictureLanguage_Proxy": "HRESULT WINAPI IDvdInfo_GetSubpictureLanguage_Proxy(IDvdInfo *This,ULONG ulStream,LCID *pLanguage);", "IDvdInfo_GetTitleAttributes_Proxy": "HRESULT WINAPI IDvdInfo_GetTitleAttributes_Proxy(IDvdInfo *This,ULONG ulTitle,DVD_ATR *pATR);", "IDvdInfo_GetVMGAttributes_Proxy": "HRESULT WINAPI IDvdInfo_GetVMGAttributes_Proxy(IDvdInfo *This,DVD_ATR *pATR);", "IDvdInfo_GetCurrentVideoAttributes_Proxy": "HRESULT WINAPI IDvdInfo_GetCurrentVideoAttributes_Proxy(IDvdInfo *This,DVD_VideoATR *pATR);", "IDvdInfo_GetCurrentAudioAttributes_Proxy": "HRESULT WINAPI IDvdInfo_GetCurrentAudioAttributes_Proxy(IDvdInfo *This,DVD_AudioATR *pATR);", "IDvdInfo_GetCurrentSubpictureAttributes_Proxy": "HRESULT WINAPI IDvdInfo_GetCurrentSubpictureAttributes_Proxy(IDvdInfo *This,DVD_SubpictureATR *pATR);", "IDvdInfo_GetCurrentVolumeInfo_Proxy": "HRESULT WINAPI IDvdInfo_GetCurrentVolumeInfo_Proxy(IDvdInfo *This,ULONG *pulNumOfVol,ULONG *pulThisVolNum,DVD_DISC_SIDE *pSide,ULONG *pulNumOfTitles);", "IDvdInfo_GetDVDTextInfo_Proxy": "HRESULT WINAPI IDvdInfo_GetDVDTextInfo_Proxy(IDvdInfo *This,BYTE *pTextManager,ULONG ulBufSize,ULONG *pulActualSize);", "IDvdInfo_GetPlayerParentalLevel_Proxy": "HRESULT WINAPI IDvdInfo_GetPlayerParentalLevel_Proxy(IDvdInfo *This,ULONG *pulParentalLevel,ULONG *pulCountryCode);", "IDvdInfo_GetNumberOfChapters_Proxy": "HRESULT WINAPI IDvdInfo_GetNumberOfChapters_Proxy(IDvdInfo *This,ULONG ulTitle,ULONG *pulNumberOfChapters);", "IDvdInfo_GetTitleParentalLevels_Proxy": "HRESULT WINAPI IDvdInfo_GetTitleParentalLevels_Proxy(IDvdInfo *This,ULONG ulTitle,ULONG *pulParentalLevels);", "IDvdInfo_GetRoot_Proxy": "HRESULT WINAPI IDvdInfo_GetRoot_Proxy(IDvdInfo *This,LPSTR pRoot,ULONG ulBufSize,ULONG *pulActualSize);", "IDvdCmd_WaitForStart_Proxy": "HRESULT WINAPI IDvdCmd_WaitForStart_Proxy(IDvdCmd *This);", "IDvdCmd_WaitForEnd_Proxy": "HRESULT WINAPI IDvdCmd_WaitForEnd_Proxy(IDvdCmd *This);", "IDvdState_GetDiscID_Proxy": "HRESULT WINAPI IDvdState_GetDiscID_Proxy(IDvdState *This,ULONGLONG *pullUniqueID);", "IDvdState_GetParentalLevel_Proxy": "HRESULT WINAPI IDvdState_GetParentalLevel_Proxy(IDvdState *This,ULONG *pulParentalLevel);", "IDvdControl2_PlayTitle_Proxy": "HRESULT WINAPI IDvdControl2_PlayTitle_Proxy(IDvdControl2 *This,ULONG ulTitle,DWORD dwFlags,IDvdCmd **ppCmd);", "IDvdControl2_PlayChapterInTitle_Proxy": "HRESULT WINAPI IDvdControl2_PlayChapterInTitle_Proxy(IDvdControl2 *This,ULONG ulTitle,ULONG ulChapter,DWORD dwFlags,IDvdCmd **ppCmd);", "IDvdControl2_PlayAtTimeInTitle_Proxy": "HRESULT WINAPI IDvdControl2_PlayAtTimeInTitle_Proxy(IDvdControl2 *This,ULONG ulTitle,DVD_HMSF_TIMECODE *pStartTime,DWORD dwFlags,IDvdCmd **ppCmd);", "IDvdControl2_Stop_Proxy": "HRESULT WINAPI IDvdControl2_Stop_Proxy(IDvdControl2 *This);", "IDvdControl2_ReturnFromSubmenu_Proxy": "HRESULT WINAPI IDvdControl2_ReturnFromSubmenu_Proxy(IDvdControl2 *This,DWORD dwFlags,IDvdCmd **ppCmd);", "IDvdControl2_PlayAtTime_Proxy": "HRESULT WINAPI IDvdControl2_PlayAtTime_Proxy(IDvdControl2 *This,DVD_HMSF_TIMECODE *pTime,DWORD dwFlags,IDvdCmd **ppCmd);", "IDvdControl2_PlayChapter_Proxy": "HRESULT WINAPI IDvdControl2_PlayChapter_Proxy(IDvdControl2 *This,ULONG ulChapter,DWORD dwFlags,IDvdCmd **ppCmd);", "IDvdControl2_PlayPrevChapter_Proxy": "HRESULT WINAPI IDvdControl2_PlayPrevChapter_Proxy(IDvdControl2 *This,DWORD dwFlags,IDvdCmd **ppCmd);", "IDvdControl2_ReplayChapter_Proxy": "HRESULT WINAPI IDvdControl2_ReplayChapter_Proxy(IDvdControl2 *This,DWORD dwFlags,IDvdCmd **ppCmd);", "IDvdControl2_PlayNextChapter_Proxy": "HRESULT WINAPI IDvdControl2_PlayNextChapter_Proxy(IDvdControl2 *This,DWORD dwFlags,IDvdCmd **ppCmd);", "IDvdControl2_PlayForwards_Proxy": "HRESULT WINAPI IDvdControl2_PlayForwards_Proxy(IDvdControl2 *This,double dSpeed,DWORD dwFlags,IDvdCmd **ppCmd);", "IDvdControl2_PlayBackwards_Proxy": "HRESULT WINAPI IDvdControl2_PlayBackwards_Proxy(IDvdControl2 *This,double dSpeed,DWORD dwFlags,IDvdCmd **ppCmd);", "IDvdControl2_ShowMenu_Proxy": "HRESULT WINAPI IDvdControl2_ShowMenu_Proxy(IDvdControl2 *This,DVD_MENU_ID MenuID,DWORD dwFlags,IDvdCmd **ppCmd);", "IDvdControl2_Resume_Proxy": "HRESULT WINAPI IDvdControl2_Resume_Proxy(IDvdControl2 *This,DWORD dwFlags,IDvdCmd **ppCmd);", "IDvdControl2_SelectRelativeButton_Proxy": "HRESULT WINAPI IDvdControl2_SelectRelativeButton_Proxy(IDvdControl2 *This,DVD_RELATIVE_BUTTON buttonDir);", "IDvdControl2_ActivateButton_Proxy": "HRESULT WINAPI IDvdControl2_ActivateButton_Proxy(IDvdControl2 *This);", "IDvdControl2_SelectButton_Proxy": "HRESULT WINAPI IDvdControl2_SelectButton_Proxy(IDvdControl2 *This,ULONG ulButton);", "IDvdControl2_SelectAndActivateButton_Proxy": "HRESULT WINAPI IDvdControl2_SelectAndActivateButton_Proxy(IDvdControl2 *This,ULONG ulButton);", "IDvdControl2_StillOff_Proxy": "HRESULT WINAPI IDvdControl2_StillOff_Proxy(IDvdControl2 *This);", "IDvdControl2_Pause_Proxy": "HRESULT WINAPI IDvdControl2_Pause_Proxy(IDvdControl2 *This,WINBOOL bState);", "IDvdControl2_SelectAudioStream_Proxy": "HRESULT WINAPI IDvdControl2_SelectAudioStream_Proxy(IDvdControl2 *This,ULONG ulAudio,DWORD dwFlags,IDvdCmd **ppCmd);", "IDvdControl2_SelectSubpictureStream_Proxy": "HRESULT WINAPI IDvdControl2_SelectSubpictureStream_Proxy(IDvdControl2 *This,ULONG ulSubPicture,DWORD dwFlags,IDvdCmd **ppCmd);", "IDvdControl2_SetSubpictureState_Proxy": "HRESULT WINAPI IDvdControl2_SetSubpictureState_Proxy(IDvdControl2 *This,WINBOOL bState,DWORD dwFlags,IDvdCmd **ppCmd);", "IDvdControl2_SelectAngle_Proxy": "HRESULT WINAPI IDvdControl2_SelectAngle_Proxy(IDvdControl2 *This,ULONG ulAngle,DWORD dwFlags,IDvdCmd **ppCmd);", "IDvdControl2_SelectParentalLevel_Proxy": "HRESULT WINAPI IDvdControl2_SelectParentalLevel_Proxy(IDvdControl2 *This,ULONG ulParentalLevel);", "IDvdControl2_SelectParentalCountry_Proxy": "HRESULT WINAPI IDvdControl2_SelectParentalCountry_Proxy(IDvdControl2 *This,BYTE bCountry[2]);", "IDvdControl2_SelectKaraokeAudioPresentationMode_Proxy": "HRESULT WINAPI IDvdControl2_SelectKaraokeAudioPresentationMode_Proxy(IDvdControl2 *This,ULONG ulMode);", "IDvdControl2_SelectVideoModePreference_Proxy": "HRESULT WINAPI IDvdControl2_SelectVideoModePreference_Proxy(IDvdControl2 *This,ULONG ulPreferredDisplayMode);", "IDvdControl2_SetDVDDirectory_Proxy": "HRESULT WINAPI IDvdControl2_SetDVDDirectory_Proxy(IDvdControl2 *This,LPCWSTR pszwPath);", "IDvdControl2_ActivateAtPosition_Proxy": "HRESULT WINAPI IDvdControl2_ActivateAtPosition_Proxy(IDvdControl2 *This,POINT point);", "IDvdControl2_SelectAtPosition_Proxy": "HRESULT WINAPI IDvdControl2_SelectAtPosition_Proxy(IDvdControl2 *This,POINT point);", "IDvdControl2_PlayChaptersAutoStop_Proxy": "HRESULT WINAPI IDvdControl2_PlayChaptersAutoStop_Proxy(IDvdControl2 *This,ULONG ulTitle,ULONG ulChapter,ULONG ulChaptersToPlay,DWORD dwFlags,IDvdCmd **ppCmd);", "IDvdControl2_AcceptParentalLevelChange_Proxy": "HRESULT WINAPI IDvdControl2_AcceptParentalLevelChange_Proxy(IDvdControl2 *This,WINBOOL bAccept);", "IDvdControl2_SetOption_Proxy": "HRESULT WINAPI IDvdControl2_SetOption_Proxy(IDvdControl2 *This,DVD_OPTION_FLAG flag,WINBOOL fState);", "IDvdControl2_SetState_Proxy": "HRESULT WINAPI IDvdControl2_SetState_Proxy(IDvdControl2 *This,IDvdState *pState,DWORD dwFlags,IDvdCmd **ppCmd);", "IDvdControl2_PlayPeriodInTitleAutoStop_Proxy": "HRESULT WINAPI IDvdControl2_PlayPeriodInTitleAutoStop_Proxy(IDvdControl2 *This,ULONG ulTitle,DVD_HMSF_TIMECODE *pStartTime,DVD_HMSF_TIMECODE *pEndTime,DWORD dwFlags,IDvdCmd **ppCmd);", "IDvdControl2_SetGPRM_Proxy": "HRESULT WINAPI IDvdControl2_SetGPRM_Proxy(IDvdControl2 *This,ULONG ulIndex,WORD wValue,DWORD dwFlags,IDvdCmd **ppCmd);", "IDvdControl2_SelectDefaultMenuLanguage_Proxy": "HRESULT WINAPI IDvdControl2_SelectDefaultMenuLanguage_Proxy(IDvdControl2 *This,LCID Language);", "IDvdControl2_SelectDefaultAudioLanguage_Proxy": "HRESULT WINAPI IDvdControl2_SelectDefaultAudioLanguage_Proxy(IDvdControl2 *This,LCID Language,DVD_AUDIO_LANG_EXT audioExtension);", "IDvdControl2_SelectDefaultSubpictureLanguage_Proxy": "HRESULT WINAPI IDvdControl2_SelectDefaultSubpictureLanguage_Proxy(IDvdControl2 *This,LCID Language,DVD_SUBPICTURE_LANG_EXT subpictureExtension);", "IDvdInfo2_GetCurrentDomain_Proxy": "HRESULT WINAPI IDvdInfo2_GetCurrentDomain_Proxy(IDvdInfo2 *This,DVD_DOMAIN *pDomain);", "IDvdInfo2_GetCurrentLocation_Proxy": "HRESULT WINAPI IDvdInfo2_GetCurrentLocation_Proxy(IDvdInfo2 *This,DVD_PLAYBACK_LOCATION2 *pLocation);", "IDvdInfo2_GetTotalTitleTime_Proxy": "HRESULT WINAPI IDvdInfo2_GetTotalTitleTime_Proxy(IDvdInfo2 *This,DVD_HMSF_TIMECODE *pTotalTime,ULONG *ulTimeCodeFlags);", "IDvdInfo2_GetCurrentButton_Proxy": "HRESULT WINAPI IDvdInfo2_GetCurrentButton_Proxy(IDvdInfo2 *This,ULONG *pulButtonsAvailable,ULONG *pulCurrentButton);", "IDvdInfo2_GetCurrentAngle_Proxy": "HRESULT WINAPI IDvdInfo2_GetCurrentAngle_Proxy(IDvdInfo2 *This,ULONG *pulAnglesAvailable,ULONG *pulCurrentAngle);", "IDvdInfo2_GetCurrentAudio_Proxy": "HRESULT WINAPI IDvdInfo2_GetCurrentAudio_Proxy(IDvdInfo2 *This,ULONG *pulStreamsAvailable,ULONG *pulCurrentStream);", "IDvdInfo2_GetCurrentSubpicture_Proxy": "HRESULT WINAPI IDvdInfo2_GetCurrentSubpicture_Proxy(IDvdInfo2 *This,ULONG *pulStreamsAvailable,ULONG *pulCurrentStream,WINBOOL *pbIsDisabled);", "IDvdInfo2_GetCurrentUOPS_Proxy": "HRESULT WINAPI IDvdInfo2_GetCurrentUOPS_Proxy(IDvdInfo2 *This,ULONG *pulUOPs);", "IDvdInfo2_GetAllSPRMs_Proxy": "HRESULT WINAPI IDvdInfo2_GetAllSPRMs_Proxy(IDvdInfo2 *This,SPRMARRAY *pRegisterArray);", "IDvdInfo2_GetAllGPRMs_Proxy": "HRESULT WINAPI IDvdInfo2_GetAllGPRMs_Proxy(IDvdInfo2 *This,GPRMARRAY *pRegisterArray);", "IDvdInfo2_GetAudioLanguage_Proxy": "HRESULT WINAPI IDvdInfo2_GetAudioLanguage_Proxy(IDvdInfo2 *This,ULONG ulStream,LCID *pLanguage);", "IDvdInfo2_GetSubpictureLanguage_Proxy": "HRESULT WINAPI IDvdInfo2_GetSubpictureLanguage_Proxy(IDvdInfo2 *This,ULONG ulStream,LCID *pLanguage);", "IDvdInfo2_GetTitleAttributes_Proxy": "HRESULT WINAPI IDvdInfo2_GetTitleAttributes_Proxy(IDvdInfo2 *This,ULONG ulTitle,DVD_MenuAttributes *pMenu,DVD_TitleAttributes *pTitle);", "IDvdInfo2_GetVMGAttributes_Proxy": "HRESULT WINAPI IDvdInfo2_GetVMGAttributes_Proxy(IDvdInfo2 *This,DVD_MenuAttributes *pATR);", "IDvdInfo2_GetCurrentVideoAttributes_Proxy": "HRESULT WINAPI IDvdInfo2_GetCurrentVideoAttributes_Proxy(IDvdInfo2 *This,DVD_VideoAttributes *pATR);", "IDvdInfo2_GetAudioAttributes_Proxy": "HRESULT WINAPI IDvdInfo2_GetAudioAttributes_Proxy(IDvdInfo2 *This,ULONG ulStream,DVD_AudioAttributes *pATR);", "IDvdInfo2_GetKaraokeAttributes_Proxy": "HRESULT WINAPI IDvdInfo2_GetKaraokeAttributes_Proxy(IDvdInfo2 *This,ULONG ulStream,DVD_KaraokeAttributes *pAttributes);", "IDvdInfo2_GetSubpictureAttributes_Proxy": "HRESULT WINAPI IDvdInfo2_GetSubpictureAttributes_Proxy(IDvdInfo2 *This,ULONG ulStream,DVD_SubpictureAttributes *pATR);", "IDvdInfo2_GetDVDVolumeInfo_Proxy": "HRESULT WINAPI IDvdInfo2_GetDVDVolumeInfo_Proxy(IDvdInfo2 *This,ULONG *pulNumOfVolumes,ULONG *pulVolume,DVD_DISC_SIDE *pSide,ULONG *pulNumOfTitles);", "IDvdInfo2_GetDVDTextNumberOfLanguages_Proxy": "HRESULT WINAPI IDvdInfo2_GetDVDTextNumberOfLanguages_Proxy(IDvdInfo2 *This,ULONG *pulNumOfLangs);", "IDvdInfo2_GetDVDTextLanguageInfo_Proxy": "HRESULT WINAPI IDvdInfo2_GetDVDTextLanguageInfo_Proxy(IDvdInfo2 *This,ULONG ulLangIndex,ULONG *pulNumOfStrings,LCID *pLangCode,enum DVD_TextCharSet *pbCharacterSet);", "IDvdInfo2_GetDVDTextStringAsNative_Proxy": "HRESULT WINAPI IDvdInfo2_GetDVDTextStringAsNative_Proxy(IDvdInfo2 *This,ULONG ulLangIndex,ULONG ulStringIndex,BYTE *pbBuffer,ULONG ulMaxBufferSize,ULONG *pulActualSize,enum DVD_TextStringType *pType);", "IDvdInfo2_GetDVDTextStringAsUnicode_Proxy": "HRESULT WINAPI IDvdInfo2_GetDVDTextStringAsUnicode_Proxy(IDvdInfo2 *This,ULONG ulLangIndex,ULONG ulStringIndex,WCHAR *pchwBuffer,ULONG ulMaxBufferSize,ULONG *pulActualSize,enum DVD_TextStringType *pType);", "IDvdInfo2_GetPlayerParentalLevel_Proxy": "HRESULT WINAPI IDvdInfo2_GetPlayerParentalLevel_Proxy(IDvdInfo2 *This,ULONG *pulParentalLevel,BYTE pbCountryCode[2]);", "IDvdInfo2_GetNumberOfChapters_Proxy": "HRESULT WINAPI IDvdInfo2_GetNumberOfChapters_Proxy(IDvdInfo2 *This,ULONG ulTitle,ULONG *pulNumOfChapters);", "IDvdInfo2_GetTitleParentalLevels_Proxy": "HRESULT WINAPI IDvdInfo2_GetTitleParentalLevels_Proxy(IDvdInfo2 *This,ULONG ulTitle,ULONG *pulParentalLevels);", "IDvdInfo2_GetDVDDirectory_Proxy": "HRESULT WINAPI IDvdInfo2_GetDVDDirectory_Proxy(IDvdInfo2 *This,LPWSTR pszwPath,ULONG ulMaxSize,ULONG *pulActualSize);", "IDvdInfo2_IsAudioStreamEnabled_Proxy": "HRESULT WINAPI IDvdInfo2_IsAudioStreamEnabled_Proxy(IDvdInfo2 *This,ULONG ulStreamNum,WINBOOL *pbEnabled);", "IDvdInfo2_GetDiscID_Proxy": "HRESULT WINAPI IDvdInfo2_GetDiscID_Proxy(IDvdInfo2 *This,LPCWSTR pszwPath,ULONGLONG *pullDiscID);", "IDvdInfo2_GetState_Proxy": "HRESULT WINAPI IDvdInfo2_GetState_Proxy(IDvdInfo2 *This,IDvdState **pStateData);", "IDvdInfo2_GetMenuLanguages_Proxy": "HRESULT WINAPI IDvdInfo2_GetMenuLanguages_Proxy(IDvdInfo2 *This,LCID *pLanguages,ULONG ulMaxLanguages,ULONG *pulActualLanguages);", "IDvdInfo2_GetButtonAtPosition_Proxy": "HRESULT WINAPI IDvdInfo2_GetButtonAtPosition_Proxy(IDvdInfo2 *This,POINT point,ULONG *pulButtonIndex);", "IDvdInfo2_GetCmdFromEvent_Proxy": "HRESULT WINAPI IDvdInfo2_GetCmdFromEvent_Proxy(IDvdInfo2 *This,LONG_PTR lParam1,IDvdCmd **pCmdObj);", "IDvdInfo2_GetDefaultMenuLanguage_Proxy": "HRESULT WINAPI IDvdInfo2_GetDefaultMenuLanguage_Proxy(IDvdInfo2 *This,LCID *pLanguage);", "IDvdInfo2_GetDefaultAudioLanguage_Proxy": "HRESULT WINAPI IDvdInfo2_GetDefaultAudioLanguage_Proxy(IDvdInfo2 *This,LCID *pLanguage,DVD_AUDIO_LANG_EXT *pAudioExtension);", "IDvdInfo2_GetDefaultSubpictureLanguage_Proxy": "HRESULT WINAPI IDvdInfo2_GetDefaultSubpictureLanguage_Proxy(IDvdInfo2 *This,LCID *pLanguage,DVD_SUBPICTURE_LANG_EXT *pSubpictureExtension);", "IDvdInfo2_GetDecoderCaps_Proxy": "HRESULT WINAPI IDvdInfo2_GetDecoderCaps_Proxy(IDvdInfo2 *This,DVD_DECODER_CAPS *pCaps);", "IDvdInfo2_GetButtonRect_Proxy": "HRESULT WINAPI IDvdInfo2_GetButtonRect_Proxy(IDvdInfo2 *This,ULONG ulButton,RECT *pRect);", "IDvdInfo2_IsSubpictureStreamEnabled_Proxy": "HRESULT WINAPI IDvdInfo2_IsSubpictureStreamEnabled_Proxy(IDvdInfo2 *This,ULONG ulStreamNum,WINBOOL *pbEnabled);", "IDvdGraphBuilder_GetFiltergraph_Proxy": "HRESULT WINAPI IDvdGraphBuilder_GetFiltergraph_Proxy(IDvdGraphBuilder *This,IGraphBuilder **ppGB);", "IDvdGraphBuilder_GetDvdInterface_Proxy": "HRESULT WINAPI IDvdGraphBuilder_GetDvdInterface_Proxy(IDvdGraphBuilder *This,REFIID riid,void **ppvIF);", "IDvdGraphBuilder_RenderDvdVideoVolume_Proxy": "HRESULT WINAPI IDvdGraphBuilder_RenderDvdVideoVolume_Proxy(IDvdGraphBuilder *This,LPCWSTR lpcwszPathName,DWORD dwFlags,AM_DVD_RENDERSTATUS *pStatus);", "IDDrawExclModeVideo_SetDDrawObject_Proxy": "HRESULT WINAPI IDDrawExclModeVideo_SetDDrawObject_Proxy(IDDrawExclModeVideo *This,IDirectDraw *pDDrawObject);", "IDDrawExclModeVideo_GetDDrawObject_Proxy": "HRESULT WINAPI IDDrawExclModeVideo_GetDDrawObject_Proxy(IDDrawExclModeVideo *This,IDirectDraw **ppDDrawObject,WINBOOL *pbUsingExternal);", "IDDrawExclModeVideo_SetDDrawSurface_Proxy": "HRESULT WINAPI IDDrawExclModeVideo_SetDDrawSurface_Proxy(IDDrawExclModeVideo *This,IDirectDrawSurface *pDDrawSurface);", "IDDrawExclModeVideo_GetDDrawSurface_Proxy": "HRESULT WINAPI IDDrawExclModeVideo_GetDDrawSurface_Proxy(IDDrawExclModeVideo *This,IDirectDrawSurface **ppDDrawSurface,WINBOOL *pbUsingExternal);", "IDDrawExclModeVideo_SetDrawParameters_Proxy": "HRESULT WINAPI IDDrawExclModeVideo_SetDrawParameters_Proxy(IDDrawExclModeVideo *This,const RECT *prcSource,const RECT *prcTarget);", "IDDrawExclModeVideo_GetNativeVideoProps_Proxy": "HRESULT WINAPI IDDrawExclModeVideo_GetNativeVideoProps_Proxy(IDDrawExclModeVideo *This,DWORD *pdwVideoWidth,DWORD *pdwVideoHeight,DWORD *pdwPictAspectRatioX,DWORD *pdwPictAspectRatioY);", "IDDrawExclModeVideo_SetCallbackInterface_Proxy": "HRESULT WINAPI IDDrawExclModeVideo_SetCallbackInterface_Proxy(IDDrawExclModeVideo *This,IDDrawExclModeVideoCallback *pCallback,DWORD dwFlags);", "IDDrawExclModeVideoCallback_OnUpdateOverlay_Proxy": "HRESULT WINAPI IDDrawExclModeVideoCallback_OnUpdateOverlay_Proxy(IDDrawExclModeVideoCallback *This,WINBOOL bBefore,DWORD dwFlags,WINBOOL bOldVisible,const RECT *prcOldSrc,const RECT *prcOldDest,WINBOOL bNewVisible,const RECT *prcNewSrc,const RECT *prcNewDest);", "IDDrawExclModeVideoCallback_OnUpdateColorKey_Proxy": "HRESULT WINAPI IDDrawExclModeVideoCallback_OnUpdateColorKey_Proxy(IDDrawExclModeVideoCallback *This,const COLORKEY *pKey,DWORD dwColor);", "IDDrawExclModeVideoCallback_OnUpdateSize_Proxy": "HRESULT WINAPI IDDrawExclModeVideoCallback_OnUpdateSize_Proxy(IDDrawExclModeVideoCallback *This,DWORD dwWidth,DWORD dwHeight,DWORD dwARWidth,DWORD dwARHeight);", "IVMRImagePresenter_StartPresenting_Proxy": "HRESULT WINAPI IVMRImagePresenter_StartPresenting_Proxy(IVMRImagePresenter *This,DWORD_PTR dwUserID);", "IVMRImagePresenter_StopPresenting_Proxy": "HRESULT WINAPI IVMRImagePresenter_StopPresenting_Proxy(IVMRImagePresenter *This,DWORD_PTR dwUserID);", "IVMRImagePresenter_PresentImage_Proxy": "HRESULT WINAPI IVMRImagePresenter_PresentImage_Proxy(IVMRImagePresenter *This,DWORD_PTR dwUserID,VMRPRESENTATIONINFO *lpPresInfo);", "IVMRSurfaceAllocator_AllocateSurface_Proxy": "HRESULT WINAPI IVMRSurfaceAllocator_AllocateSurface_Proxy(IVMRSurfaceAllocator *This,DWORD_PTR dwUserID,VMRALLOCATIONINFO *lpAllocInfo,DWORD *lpdwActualBuffers,LPDIRECTDRAWSURFACE7 *lplpSurface);", "IVMRSurfaceAllocator_FreeSurface_Proxy": "HRESULT WINAPI IVMRSurfaceAllocator_FreeSurface_Proxy(IVMRSurfaceAllocator *This,DWORD_PTR dwID);", "IVMRSurfaceAllocator_PrepareSurface_Proxy": "HRESULT WINAPI IVMRSurfaceAllocator_PrepareSurface_Proxy(IVMRSurfaceAllocator *This,DWORD_PTR dwUserID,LPDIRECTDRAWSURFACE7 lpSurface,DWORD dwSurfaceFlags);", "IVMRSurfaceAllocator_AdviseNotify_Proxy": "HRESULT WINAPI IVMRSurfaceAllocator_AdviseNotify_Proxy(IVMRSurfaceAllocator *This,IVMRSurfaceAllocatorNotify *lpIVMRSurfAllocNotify);", "IVMRSurfaceAllocatorNotify_AdviseSurfaceAllocator_Proxy": "HRESULT WINAPI IVMRSurfaceAllocatorNotify_AdviseSurfaceAllocator_Proxy(IVMRSurfaceAllocatorNotify *This,DWORD_PTR dwUserID,IVMRSurfaceAllocator *lpIVRMSurfaceAllocator);", "IVMRSurfaceAllocatorNotify_SetDDrawDevice_Proxy": "HRESULT WINAPI IVMRSurfaceAllocatorNotify_SetDDrawDevice_Proxy(IVMRSurfaceAllocatorNotify *This,LPDIRECTDRAW7 lpDDrawDevice,HMONITOR hMonitor);", "IVMRSurfaceAllocatorNotify_ChangeDDrawDevice_Proxy": "HRESULT WINAPI IVMRSurfaceAllocatorNotify_ChangeDDrawDevice_Proxy(IVMRSurfaceAllocatorNotify *This,LPDIRECTDRAW7 lpDDrawDevice,HMONITOR hMonitor);", "IVMRSurfaceAllocatorNotify_RestoreDDrawSurfaces_Proxy": "HRESULT WINAPI IVMRSurfaceAllocatorNotify_RestoreDDrawSurfaces_Proxy(IVMRSurfaceAllocatorNotify *This);", "IVMRSurfaceAllocatorNotify_NotifyEvent_Proxy": "HRESULT WINAPI IVMRSurfaceAllocatorNotify_NotifyEvent_Proxy(IVMRSurfaceAllocatorNotify *This,LONG EventCode,LONG_PTR Param1,LONG_PTR Param2);", "IVMRSurfaceAllocatorNotify_SetBorderColor_Proxy": "HRESULT WINAPI IVMRSurfaceAllocatorNotify_SetBorderColor_Proxy(IVMRSurfaceAllocatorNotify *This,COLORREF clrBorder);", "IVMRWindowlessControl_GetNativeVideoSize_Proxy": "HRESULT WINAPI IVMRWindowlessControl_GetNativeVideoSize_Proxy(IVMRWindowlessControl *This,LONG *lpWidth,LONG *lpHeight,LONG *lpARWidth,LONG *lpARHeight);", "IVMRWindowlessControl_GetMinIdealVideoSize_Proxy": "HRESULT WINAPI IVMRWindowlessControl_GetMinIdealVideoSize_Proxy(IVMRWindowlessControl *This,LONG *lpWidth,LONG *lpHeight);", "IVMRWindowlessControl_GetMaxIdealVideoSize_Proxy": "HRESULT WINAPI IVMRWindowlessControl_GetMaxIdealVideoSize_Proxy(IVMRWindowlessControl *This,LONG *lpWidth,LONG *lpHeight);", "IVMRWindowlessControl_SetVideoPosition_Proxy": "HRESULT WINAPI IVMRWindowlessControl_SetVideoPosition_Proxy(IVMRWindowlessControl *This,const LPRECT lpSRCRect,const LPRECT lpDSTRect);", "IVMRWindowlessControl_GetVideoPosition_Proxy": "HRESULT WINAPI IVMRWindowlessControl_GetVideoPosition_Proxy(IVMRWindowlessControl *This,LPRECT lpSRCRect,LPRECT lpDSTRect);", "IVMRWindowlessControl_GetAspectRatioMode_Proxy": "HRESULT WINAPI IVMRWindowlessControl_GetAspectRatioMode_Proxy(IVMRWindowlessControl *This,DWORD *lpAspectRatioMode);", "IVMRWindowlessControl_SetAspectRatioMode_Proxy": "HRESULT WINAPI IVMRWindowlessControl_SetAspectRatioMode_Proxy(IVMRWindowlessControl *This,DWORD AspectRatioMode);", "IVMRWindowlessControl_SetVideoClippingWindow_Proxy": "HRESULT WINAPI IVMRWindowlessControl_SetVideoClippingWindow_Proxy(IVMRWindowlessControl *This,HWND hwnd);", "IVMRWindowlessControl_RepaintVideo_Proxy": "HRESULT WINAPI IVMRWindowlessControl_RepaintVideo_Proxy(IVMRWindowlessControl *This,HWND hwnd,HDC hdc);", "IVMRWindowlessControl_DisplayModeChanged_Proxy": "HRESULT WINAPI IVMRWindowlessControl_DisplayModeChanged_Proxy(IVMRWindowlessControl *This);", "IVMRWindowlessControl_GetCurrentImage_Proxy": "HRESULT WINAPI IVMRWindowlessControl_GetCurrentImage_Proxy(IVMRWindowlessControl *This,BYTE **lpDib);", "IVMRWindowlessControl_SetBorderColor_Proxy": "HRESULT WINAPI IVMRWindowlessControl_SetBorderColor_Proxy(IVMRWindowlessControl *This,COLORREF Clr);", "IVMRWindowlessControl_GetBorderColor_Proxy": "HRESULT WINAPI IVMRWindowlessControl_GetBorderColor_Proxy(IVMRWindowlessControl *This,COLORREF *lpClr);", "IVMRWindowlessControl_SetColorKey_Proxy": "HRESULT WINAPI IVMRWindowlessControl_SetColorKey_Proxy(IVMRWindowlessControl *This,COLORREF Clr);", "IVMRWindowlessControl_GetColorKey_Proxy": "HRESULT WINAPI IVMRWindowlessControl_GetColorKey_Proxy(IVMRWindowlessControl *This,COLORREF *lpClr);", "IVMRMixerControl_SetAlpha_Proxy": "HRESULT WINAPI IVMRMixerControl_SetAlpha_Proxy(IVMRMixerControl *This,DWORD dwStreamID,float Alpha);", "IVMRMixerControl_GetAlpha_Proxy": "HRESULT WINAPI IVMRMixerControl_GetAlpha_Proxy(IVMRMixerControl *This,DWORD dwStreamID,float *pAlpha);", "IVMRMixerControl_SetZOrder_Proxy": "HRESULT WINAPI IVMRMixerControl_SetZOrder_Proxy(IVMRMixerControl *This,DWORD dwStreamID,DWORD dwZ);", "IVMRMixerControl_GetZOrder_Proxy": "HRESULT WINAPI IVMRMixerControl_GetZOrder_Proxy(IVMRMixerControl *This,DWORD dwStreamID,DWORD *pZ);", "IVMRMixerControl_SetOutputRect_Proxy": "HRESULT WINAPI IVMRMixerControl_SetOutputRect_Proxy(IVMRMixerControl *This,DWORD dwStreamID,const NORMALIZEDRECT *pRect);", "IVMRMixerControl_GetOutputRect_Proxy": "HRESULT WINAPI IVMRMixerControl_GetOutputRect_Proxy(IVMRMixerControl *This,DWORD dwStreamID,NORMALIZEDRECT *pRect);", "IVMRMixerControl_SetBackgroundClr_Proxy": "HRESULT WINAPI IVMRMixerControl_SetBackgroundClr_Proxy(IVMRMixerControl *This,COLORREF ClrBkg);", "IVMRMixerControl_GetBackgroundClr_Proxy": "HRESULT WINAPI IVMRMixerControl_GetBackgroundClr_Proxy(IVMRMixerControl *This,COLORREF *lpClrBkg);", "IVMRMixerControl_SetMixingPrefs_Proxy": "HRESULT WINAPI IVMRMixerControl_SetMixingPrefs_Proxy(IVMRMixerControl *This,DWORD dwMixerPrefs);", "IVMRMixerControl_GetMixingPrefs_Proxy": "HRESULT WINAPI IVMRMixerControl_GetMixingPrefs_Proxy(IVMRMixerControl *This,DWORD *pdwMixerPrefs);", "IVMRMonitorConfig_SetMonitor_Proxy": "HRESULT WINAPI IVMRMonitorConfig_SetMonitor_Proxy(IVMRMonitorConfig *This,const VMRGUID *pGUID);", "IVMRMonitorConfig_GetMonitor_Proxy": "HRESULT WINAPI IVMRMonitorConfig_GetMonitor_Proxy(IVMRMonitorConfig *This,VMRGUID *pGUID);", "IVMRMonitorConfig_SetDefaultMonitor_Proxy": "HRESULT WINAPI IVMRMonitorConfig_SetDefaultMonitor_Proxy(IVMRMonitorConfig *This,const VMRGUID *pGUID);", "IVMRMonitorConfig_GetDefaultMonitor_Proxy": "HRESULT WINAPI IVMRMonitorConfig_GetDefaultMonitor_Proxy(IVMRMonitorConfig *This,VMRGUID *pGUID);", "IVMRMonitorConfig_GetAvailableMonitors_Proxy": "HRESULT WINAPI IVMRMonitorConfig_GetAvailableMonitors_Proxy(IVMRMonitorConfig *This,VMRMONITORINFO *pInfo,DWORD dwMaxInfoArraySize,DWORD *pdwNumDevices);", "IVMRFilterConfig_SetImageCompositor_Proxy": "HRESULT WINAPI IVMRFilterConfig_SetImageCompositor_Proxy(IVMRFilterConfig *This,IVMRImageCompositor *lpVMRImgCompositor);", "IVMRFilterConfig_SetNumberOfStreams_Proxy": "HRESULT WINAPI IVMRFilterConfig_SetNumberOfStreams_Proxy(IVMRFilterConfig *This,DWORD dwMaxStreams);", "IVMRFilterConfig_GetNumberOfStreams_Proxy": "HRESULT WINAPI IVMRFilterConfig_GetNumberOfStreams_Proxy(IVMRFilterConfig *This,DWORD *pdwMaxStreams);", "IVMRFilterConfig_SetRenderingPrefs_Proxy": "HRESULT WINAPI IVMRFilterConfig_SetRenderingPrefs_Proxy(IVMRFilterConfig *This,DWORD dwRenderFlags);", "IVMRFilterConfig_GetRenderingPrefs_Proxy": "HRESULT WINAPI IVMRFilterConfig_GetRenderingPrefs_Proxy(IVMRFilterConfig *This,DWORD *pdwRenderFlags);", "IVMRFilterConfig_SetRenderingMode_Proxy": "HRESULT WINAPI IVMRFilterConfig_SetRenderingMode_Proxy(IVMRFilterConfig *This,DWORD Mode);", "IVMRFilterConfig_GetRenderingMode_Proxy": "HRESULT WINAPI IVMRFilterConfig_GetRenderingMode_Proxy(IVMRFilterConfig *This,DWORD *pMode);", "IVMRAspectRatioControl_GetAspectRatioMode_Proxy": "HRESULT WINAPI IVMRAspectRatioControl_GetAspectRatioMode_Proxy(IVMRAspectRatioControl *This,LPDWORD lpdwARMode);", "IVMRAspectRatioControl_SetAspectRatioMode_Proxy": "HRESULT WINAPI IVMRAspectRatioControl_SetAspectRatioMode_Proxy(IVMRAspectRatioControl *This,DWORD dwARMode);", "IVMRDeinterlaceControl_GetNumberOfDeinterlaceModes_Proxy": "HRESULT WINAPI IVMRDeinterlaceControl_GetNumberOfDeinterlaceModes_Proxy(IVMRDeinterlaceControl *This,VMRVideoDesc *lpVideoDescription,LPDWORD lpdwNumDeinterlaceModes,LPGUID lpDeinterlaceModes);", "IVMRDeinterlaceControl_GetDeinterlaceModeCaps_Proxy": "HRESULT WINAPI IVMRDeinterlaceControl_GetDeinterlaceModeCaps_Proxy(IVMRDeinterlaceControl *This,LPGUID lpDeinterlaceMode,VMRVideoDesc *lpVideoDescription,VMRDeinterlaceCaps *lpDeinterlaceCaps);", "IVMRDeinterlaceControl_GetDeinterlaceMode_Proxy": "HRESULT WINAPI IVMRDeinterlaceControl_GetDeinterlaceMode_Proxy(IVMRDeinterlaceControl *This,DWORD dwStreamID,LPGUID lpDeinterlaceMode);", "IVMRDeinterlaceControl_SetDeinterlaceMode_Proxy": "HRESULT WINAPI IVMRDeinterlaceControl_SetDeinterlaceMode_Proxy(IVMRDeinterlaceControl *This,DWORD dwStreamID,LPGUID lpDeinterlaceMode);", "IVMRDeinterlaceControl_GetDeinterlacePrefs_Proxy": "HRESULT WINAPI IVMRDeinterlaceControl_GetDeinterlacePrefs_Proxy(IVMRDeinterlaceControl *This,LPDWORD lpdwDeinterlacePrefs);", "IVMRDeinterlaceControl_SetDeinterlacePrefs_Proxy": "HRESULT WINAPI IVMRDeinterlaceControl_SetDeinterlacePrefs_Proxy(IVMRDeinterlaceControl *This,DWORD dwDeinterlacePrefs);", "IVMRDeinterlaceControl_GetActualDeinterlaceMode_Proxy": "HRESULT WINAPI IVMRDeinterlaceControl_GetActualDeinterlaceMode_Proxy(IVMRDeinterlaceControl *This,DWORD dwStreamID,LPGUID lpDeinterlaceMode);", "IVMRMixerBitmap_SetAlphaBitmap_Proxy": "HRESULT WINAPI IVMRMixerBitmap_SetAlphaBitmap_Proxy(IVMRMixerBitmap *This,const VMRALPHABITMAP *pBmpParms);", "IVMRMixerBitmap_UpdateAlphaBitmapParameters_Proxy": "HRESULT WINAPI IVMRMixerBitmap_UpdateAlphaBitmapParameters_Proxy(IVMRMixerBitmap *This,PVMRALPHABITMAP pBmpParms);", "IVMRMixerBitmap_GetAlphaBitmapParameters_Proxy": "HRESULT WINAPI IVMRMixerBitmap_GetAlphaBitmapParameters_Proxy(IVMRMixerBitmap *This,PVMRALPHABITMAP pBmpParms);", "IVMRImageCompositor_InitCompositionTarget_Proxy": "HRESULT WINAPI IVMRImageCompositor_InitCompositionTarget_Proxy(IVMRImageCompositor *This,IUnknown *pD3DDevice,LPDIRECTDRAWSURFACE7 pddsRenderTarget);", "IVMRImageCompositor_TermCompositionTarget_Proxy": "HRESULT WINAPI IVMRImageCompositor_TermCompositionTarget_Proxy(IVMRImageCompositor *This,IUnknown *pD3DDevice,LPDIRECTDRAWSURFACE7 pddsRenderTarget);", "IVMRImageCompositor_SetStreamMediaType_Proxy": "HRESULT WINAPI IVMRImageCompositor_SetStreamMediaType_Proxy(IVMRImageCompositor *This,DWORD dwStrmID,AM_MEDIA_TYPE *pmt,WINBOOL fTexture);", "IVMRImageCompositor_CompositeImage_Proxy": "HRESULT WINAPI IVMRImageCompositor_CompositeImage_Proxy(IVMRImageCompositor *This,IUnknown *pD3DDevice,LPDIRECTDRAWSURFACE7 pddsRenderTarget,AM_MEDIA_TYPE *pmtRenderTarget,REFERENCE_TIME rtStart,REFERENCE_TIME rtEnd,DWORD dwClrBkGnd,VMRVIDEOSTREAMINFO *pVideoStreamInfo,UINT cStreams);", "IVMRVideoStreamControl_SetColorKey_Proxy": "HRESULT WINAPI IVMRVideoStreamControl_SetColorKey_Proxy(IVMRVideoStreamControl *This,LPDDCOLORKEY lpClrKey);", "IVMRVideoStreamControl_GetColorKey_Proxy": "HRESULT WINAPI IVMRVideoStreamControl_GetColorKey_Proxy(IVMRVideoStreamControl *This,LPDDCOLORKEY lpClrKey);", "IVMRVideoStreamControl_SetStreamActiveState_Proxy": "HRESULT WINAPI IVMRVideoStreamControl_SetStreamActiveState_Proxy(IVMRVideoStreamControl *This,WINBOOL fActive);", "IVMRVideoStreamControl_GetStreamActiveState_Proxy": "HRESULT WINAPI IVMRVideoStreamControl_GetStreamActiveState_Proxy(IVMRVideoStreamControl *This,WINBOOL *lpfActive);", "IVMRSurface_IsSurfaceLocked_Proxy": "HRESULT WINAPI IVMRSurface_IsSurfaceLocked_Proxy(IVMRSurface *This);", "IVMRSurface_LockSurface_Proxy": "HRESULT WINAPI IVMRSurface_LockSurface_Proxy(IVMRSurface *This,BYTE **lpSurface);", "IVMRSurface_UnlockSurface_Proxy": "HRESULT WINAPI IVMRSurface_UnlockSurface_Proxy(IVMRSurface *This);", "IVMRSurface_GetSurface_Proxy": "HRESULT WINAPI IVMRSurface_GetSurface_Proxy(IVMRSurface *This,LPDIRECTDRAWSURFACE7 *lplpSurface);", "IVMRImagePresenterConfig_SetRenderingPrefs_Proxy": "HRESULT WINAPI IVMRImagePresenterConfig_SetRenderingPrefs_Proxy(IVMRImagePresenterConfig *This,DWORD dwRenderFlags);", "IVMRImagePresenterConfig_GetRenderingPrefs_Proxy": "HRESULT WINAPI IVMRImagePresenterConfig_GetRenderingPrefs_Proxy(IVMRImagePresenterConfig *This,DWORD *dwRenderFlags);", "IVMRImagePresenterExclModeConfig_SetXlcModeDDObjAndPrimarySurface_Proxy": "HRESULT WINAPI IVMRImagePresenterExclModeConfig_SetXlcModeDDObjAndPrimarySurface_Proxy(IVMRImagePresenterExclModeConfig *This,LPDIRECTDRAW7 lpDDObj,LPDIRECTDRAWSURFACE7 lpPrimarySurf);", "IVMRImagePresenterExclModeConfig_GetXlcModeDDObjAndPrimarySurface_Proxy": "HRESULT WINAPI IVMRImagePresenterExclModeConfig_GetXlcModeDDObjAndPrimarySurface_Proxy(IVMRImagePresenterExclModeConfig *This,LPDIRECTDRAW7 *lpDDObj,LPDIRECTDRAWSURFACE7 *lpPrimarySurf);", "IVPManager_SetVideoPortIndex_Proxy": "HRESULT WINAPI IVPManager_SetVideoPortIndex_Proxy(IVPManager *This,DWORD dwVideoPortIndex);", "IVPManager_GetVideoPortIndex_Proxy": "HRESULT WINAPI IVPManager_GetVideoPortIndex_Proxy(IVPManager *This,DWORD *pdwVideoPortIndex);", "DirectPlay8LobbyCreate": "HRESULT WINAPI DirectPlay8LobbyCreate(const GUID* pcIID, LPVOID* ppvInterface, IUnknown* pUnknown);", "WpPostW": "DWORD WINAPI WpPostW(HWND hwnd,DWORD dwNumLocalPaths,LPWSTR *pwsLocalPaths,LPDWORD pdwSiteNameBufLen,LPWSTR wsSiteName,LPDWORD pdwDestURLBufLen,LPWSTR wsDestURL,DWORD dwFlag);", "WpListSitesW": "DWORD WINAPI WpListSitesW(LPDWORD pdwSitesBufLen,LPWPSITEINFOW pSitesBuffer,LPDWORD pdwNumSites);", "WpDoesSiteExistW": "DWORD WINAPI WpDoesSiteExistW(LPCWSTR wsSiteName,WINBOOL *pfSiteExists);", "WpDeleteSiteW": "DWORD WINAPI WpDeleteSiteW(LPCWSTR wsSiteName);", "WpBindToSiteW": "DWORD WINAPI WpBindToSiteW(HWND hwnd,LPCWSTR wsSiteName,LPCWSTR wsSitePostingURL,DWORD dwFlag,DWORD dwReserved,PVOID *ppvUnk);", "WpCreateSiteW": "DWORD WINAPI WpCreateSiteW(LPCWSTR wsSiteName,LPCWSTR wsSiteLocalBaseDir,LPCWSTR wsSitePostingURL,LPCWSTR wsProviderCLSID,DWORD dwFlags);", "WpEnumProvidersW": "DWORD WINAPI WpEnumProvidersW(LPDWORD pdwProvidersBufLen,LPWPPROVINFOW pProvidersBuffer,LPDWORD pdwNumProviders);", "WpGetErrorStringW": "DWORD WINAPI WpGetErrorStringW(UINT uErrCode,LPWSTR wsOutputBuf,LPDWORD pdwBufLen);", "WpPostA": "DWORD WINAPI WpPostA(HWND hwnd,DWORD dwNumLocalPaths,LPSTR *psLocalPaths,LPDWORD pdwSiteNameBufLen,LPSTR sSiteName,LPDWORD pdwDestURLBufLen,LPSTR sDestURLBufLen,DWORD dwFlag);", "WpListSitesA": "DWORD WINAPI WpListSitesA(LPDWORD pdwSitesBufLen,LPWPSITEINFOA pSitesBuffer,LPDWORD pdwNumSites);", "WpDoesSiteExistA": "DWORD WINAPI WpDoesSiteExistA(LPCSTR sSiteName,WINBOOL *pfSiteExists);", "WpDeleteSiteA": "DWORD WINAPI WpDeleteSiteA(LPCSTR sSiteName);", "WpBindToSiteA": "DWORD WINAPI WpBindToSiteA(HWND hwnd,LPCSTR sSiteName,LPCSTR sSitePostingURL,DWORD dwFlag,DWORD dwReserved,PVOID *ppvUnk);", "WpCreateSiteA": "DWORD WINAPI WpCreateSiteA(LPCSTR sSiteName,LPCSTR sSiteLocalBaseDir,LPCSTR sSitePostingURL,LPCSTR sProviderCLSID,DWORD dwFlags);", "WpEnumProvidersA": "DWORD WINAPI WpEnumProvidersA(LPDWORD pdwProvidersBufLen,LPWPPROVINFOA pProvidersBuffer,LPDWORD pdwNumProviders);", "WpGetErrorStringA": "DWORD WINAPI WpGetErrorStringA(UINT uErrCode,LPSTR sOutputBuf,LPDWORD pdwBufLen);", "FIOInitialize": "FILEHC_EXPORT WINBOOL WINAPI FIOInitialize (DWORD dwFlags);", "FIOTerminate": "FILEHC_EXPORT WINBOOL WINAPI FIOTerminate (VOID);", "FIOReadFile": "FILEHC_EXPORT WINBOOL WINAPI FIOReadFile (PFIO_CONTEXT pContext, LPVOID lpBuffer, DWORD BytesToRead, FH_OVERLAPPED *lpo);", "FIOReadFileEx": "FILEHC_EXPORT WINBOOL WINAPI FIOReadFileEx (PFIO_CONTEXT pContext, LPVOID lpBuffer, DWORD BytesToRead, DWORD BytesAvailable, FH_OVERLAPPED *lpo, WINBOOL fFinalWrite, WINBOOL fIncludeTerminator);", "FIOWriteFile": "FILEHC_EXPORT WINBOOL WINAPI FIOWriteFile (PFIO_CONTEXT pContext, LPCVOID lpBuffer, DWORD BytesToWrite, FH_OVERLAPPED *lpo);", "FIOWriteFileEx": "FILEHC_EXPORT WINBOOL WINAPI FIOWriteFileEx (PFIO_CONTEXT pContext, LPVOID lpBuffer, DWORD BytesToWrite, DWORD BytesAvailable, FH_OVERLAPPED *lpo, WINBOOL fFinalWrite, WINBOOL fIncludeTerminator);", "InitializeCache": "FILEHC_EXPORT WINBOOL WINAPI InitializeCache ();", "TerminateCache": "FILEHC_EXPORT WINBOOL WINAPI TerminateCache ();", "AssociateFile": "FILEHC_EXPORT PFIO_CONTEXT WINAPI AssociateFile (HANDLE hFile);", "AssociateFileEx": "FILEHC_EXPORT PFIO_CONTEXT WINAPI AssociateFileEx (HANDLE hFile, WINBOOL fStoreWithDots, WINBOOL fStoredWithTerminatingDot);", "AddRefContext": "FILEHC_EXPORT void WINAPI AddRefContext (PFIO_CONTEXT);", "ReleaseContext": "FILEHC_EXPORT void WINAPI ReleaseContext (PFIO_CONTEXT);", "CloseNonCachedFile": "FILEHC_EXPORT WINBOOL WINAPI CloseNonCachedFile (PFIO_CONTEXT);", "CacheCreateFile": "FILEHC_EXPORT FIO_CONTEXT * WINAPI CacheCreateFile (LPSTR lpstrName, FCACHE_CREATE_CALLBACK pfnCallBack, LPVOID lpv, WINBOOL fAsyncContext);", "CacheRichCreateFile": "FILEHC_EXPORT FIO_CONTEXT * WINAPI CacheRichCreateFile (LPSTR lpstrName, FCACHE_RICHCREATE_CALLBACK pfnCallBack, LPVOID lpv, WINBOOL fAsyncContext);", "CacheRemoveFiles": "FILEHC_EXPORT void WINAPI CacheRemoveFiles (LPSTR lpstrName, WINBOOL fAllPrefixes);", "InsertFile": "FILEHC_EXPORT WINBOOL WINAPI InsertFile (LPSTR lpstrName, FIO_CONTEXT *pContext, WINBOOL fKeepReference);", "GetFileSizeFromContext": "FILEHC_EXPORT DWORD WINAPI GetFileSizeFromContext (FIO_CONTEXT *pContext, DWORD *pcbFileSizeHigh);", "FindOrCreateNameCache": "FILEHC_EXPORT PNAME_CACHE_CONTEXT WINAPI FindOrCreateNameCache (LPSTR lpstrName, CACHE_KEY_COMPARE pfnKeyCompare, CACHE_KEY_HASH pfnKeyHash, CACHE_DESTROY_CALLBACK pfnKeyDestroy, CACHE_DESTROY_CALLBACK pfnDataDestroy);", "ReleaseNameCache": "FILEHC_EXPORT __LONG32 WINAPI ReleaseNameCache (PNAME_CACHE_CONTEXT pNameCache);", "SetNameCacheSecurityFunction": "FILEHC_EXPORT WINBOOL WINAPI SetNameCacheSecurityFunction (PNAME_CACHE_CONTEXT pNameCache, CACHE_ACCESS_CHECK pfnAccessCheck);", "FindContextFromName": "FILEHC_EXPORT WINBOOL WINAPI FindContextFromName (PNAME_CACHE_CONTEXT pNameCache, LPBYTE lpbName, DWORD cbName, CACHE_READ_CALLBACK pfnCallback, LPVOID lpvClientContext, HANDLE hToken, ACCESS_MASK accessMask, FIO_CONTEXT **ppContext);", "FindSyncContextFromName": "FILEHC_EXPORT WINBOOL WINAPI FindSyncContextFromName (PNAME_CACHE_CONTEXT pNameCache, LPBYTE lpbName, DWORD cbName, CACHE_READ_CALLBACK pfnCallback, LPVOID lpvClientContext, HANDLE hToken, ACCESS_MASK accessMask, FIO_CONTEXT **ppContext);", "AssociateContextWithName": "FILEHC_EXPORT WINBOOL WINAPI AssociateContextWithName (PNAME_CACHE_CONTEXT pNameCache, LPBYTE lpbName, DWORD cbName, LPBYTE lpbData, DWORD cbData, PGENERIC_MAPPING pGenericMapping, PSECURITY_DESCRIPTOR pSecurityDescriptor, FIO_CONTEXT *pContext, WINBOOL fKeepReference);", "InvalidateName": "FILEHC_EXPORT WINBOOL WINAPI InvalidateName (PNAME_CACHE_CONTEXT pNameCache, LPBYTE lpbName, DWORD cbName);", "ProduceDotStuffedContext": "FILEHC_EXPORT FIO_CONTEXT * WINAPI ProduceDotStuffedContext (FIO_CONTEXT *pContext, LPSTR lpstrName, WINBOOL fWantItDotStuffed);", "ProduceDotStuffedContextInContext": "FILEHC_EXPORT WINBOOL WINAPI ProduceDotStuffedContextInContext (FIO_CONTEXT *pContextSource, FIO_CONTEXT *pContextDestination, WINBOOL fWantItDotStuffed, WINBOOL *pfModified);", "GetIsFileDotTerminated": "FILEHC_EXPORT WINBOOL WINAPI GetIsFileDotTerminated (FIO_CONTEXT *pContext);", "SetIsFileDotTerminated": "FILEHC_EXPORT void WINAPI SetIsFileDotTerminated (FIO_CONTEXT *pContext, WINBOOL fIsDotTerminated);", "SetDotStuffingOnWrites": "FILEHC_EXPORT WINBOOL WINAPI SetDotStuffingOnWrites (FIO_CONTEXT *pContext, WINBOOL fEnable, WINBOOL fStripDots);", "SetDotScanningOnWrites": "FILEHC_EXPORT WINBOOL WINAPI SetDotScanningOnWrites (FIO_CONTEXT *pContext, WINBOOL fEnable);", "CompleteDotStuffingOnWrites": "FILEHC_EXPORT void WINAPI CompleteDotStuffingOnWrites (FIO_CONTEXT *pContext, WINBOOL fStripDots);", "SetDotScanningOnReads": "FILEHC_EXPORT WINBOOL WINAPI SetDotScanningOnReads (FIO_CONTEXT *pContext, WINBOOL fEnable);", "GetDotStuffState": "FILEHC_EXPORT WINBOOL WINAPI GetDotStuffState (FIO_CONTEXT *pContext, WINBOOL fReads, WINBOOL *pfStuffed, WINBOOL *pfStoredWithDots);", "SetDotStuffState": "FILEHC_EXPORT void WINAPI SetDotStuffState (FIO_CONTEXT *pContext, WINBOOL fKnown, WINBOOL fRequiresStuffing);", "OpenColorProfileA": "HPROFILE WINAPI OpenColorProfileA(PPROFILE,DWORD,DWORD,DWORD);", "OpenColorProfileW": "HPROFILE WINAPI OpenColorProfileW(PPROFILE,DWORD,DWORD,DWORD);", "CloseColorProfile": "WINBOOL WINAPI CloseColorProfile(HPROFILE);", "GetColorProfileFromHandle": "WINBOOL WINAPI GetColorProfileFromHandle(HPROFILE,PBYTE,PDWORD);", "IsColorProfileValid": "WINBOOL WINAPI IsColorProfileValid(HPROFILE,PBOOL);", "CreateProfileFromLogColorSpaceA": "WINBOOL WINAPI CreateProfileFromLogColorSpaceA(LPLOGCOLORSPACEA,PBYTE*);", "CreateProfileFromLogColorSpaceW": "WINBOOL WINAPI CreateProfileFromLogColorSpaceW(LPLOGCOLORSPACEW,PBYTE*);", "GetCountColorProfileElements": "WINBOOL WINAPI GetCountColorProfileElements(HPROFILE,PDWORD);", "GetColorProfileHeader": "WINBOOL WINAPI GetColorProfileHeader(HPROFILE,PPROFILEHEADER);", "GetColorProfileElementTag": "WINBOOL WINAPI GetColorProfileElementTag(HPROFILE,DWORD,PTAGTYPE);", "IsColorProfileTagPresent": "WINBOOL WINAPI IsColorProfileTagPresent(HPROFILE,TAGTYPE,PBOOL);", "GetColorProfileElement": "WINBOOL WINAPI GetColorProfileElement(HPROFILE,TAGTYPE,DWORD,PDWORD,PVOID,PBOOL);", "SetColorProfileHeader": "WINBOOL WINAPI SetColorProfileHeader(HPROFILE,PPROFILEHEADER);", "SetColorProfileElementSize": "WINBOOL WINAPI SetColorProfileElementSize(HPROFILE,TAGTYPE,DWORD);", "SetColorProfileElement": "WINBOOL WINAPI SetColorProfileElement(HPROFILE,TAGTYPE,DWORD,PDWORD,PVOID);", "SetColorProfileElementReference": "WINBOOL WINAPI SetColorProfileElementReference(HPROFILE,TAGTYPE,TAGTYPE);", "GetPS2ColorSpaceArray": "WINBOOL WINAPI GetPS2ColorSpaceArray (HPROFILE,DWORD,DWORD,PBYTE,PDWORD,PBOOL);", "GetPS2ColorRenderingIntent": "WINBOOL WINAPI GetPS2ColorRenderingIntent(HPROFILE,DWORD,PBYTE,PDWORD);", "GetPS2ColorRenderingDictionary": "WINBOOL WINAPI GetPS2ColorRenderingDictionary(HPROFILE,DWORD,PBYTE,PDWORD,PBOOL);", "GetNamedProfileInfo": "WINBOOL WINAPI GetNamedProfileInfo(HPROFILE,PNAMED_PROFILE_INFO);", "ConvertColorNameToIndex": "WINBOOL WINAPI ConvertColorNameToIndex(HPROFILE,PCOLOR_NAME,PDWORD,DWORD);", "ConvertIndexToColorName": "WINBOOL WINAPI ConvertIndexToColorName(HPROFILE,PDWORD,PCOLOR_NAME,DWORD);", "CreateDeviceLinkProfile": "WINBOOL WINAPI CreateDeviceLinkProfile(PHPROFILE,DWORD,PDWORD,DWORD,DWORD,PBYTE*,DWORD);", "CreateColorTransformA": "HTRANSFORM WINAPI CreateColorTransformA(LPLOGCOLORSPACEA,HPROFILE,HPROFILE,DWORD);", "CreateColorTransformW": "HTRANSFORM WINAPI CreateColorTransformW(LPLOGCOLORSPACEW,HPROFILE,HPROFILE,DWORD);", "CreateMultiProfileTransform": "HTRANSFORM WINAPI CreateMultiProfileTransform(PHPROFILE,DWORD,PDWORD,DWORD,DWORD,DWORD);", "DeleteColorTransform": "WINBOOL WINAPI DeleteColorTransform(HTRANSFORM);", "TranslateBitmapBits": "WINBOOL WINAPI TranslateBitmapBits(HTRANSFORM,PVOID,BMFORMAT,DWORD,DWORD,DWORD,PVOID,BMFORMAT,DWORD,PBMCALLBACKFN,LPARAM);", "CheckBitmapBits": "WINBOOL WINAPI CheckBitmapBits(HTRANSFORM ,PVOID,BMFORMAT,DWORD,DWORD,DWORD,PBYTE,PBMCALLBACKFN,LPARAM);", "TranslateColors": "WINBOOL WINAPI TranslateColors(HTRANSFORM,PCOLOR,DWORD,COLORTYPE,PCOLOR,COLORTYPE);", "CheckColors": "WINBOOL WINAPI CheckColors(HTRANSFORM,PCOLOR,DWORD,COLORTYPE,PBYTE);", "GetCMMInfo": "DWORD WINAPI GetCMMInfo(HTRANSFORM,DWORD);", "RegisterCMMA": "WINBOOL WINAPI RegisterCMMA(PCSTR,DWORD,PCSTR);", "RegisterCMMW": "WINBOOL WINAPI RegisterCMMW(PCWSTR,DWORD,PCWSTR);", "UnregisterCMMA": "WINBOOL WINAPI UnregisterCMMA(PCSTR,DWORD);", "UnregisterCMMW": "WINBOOL WINAPI UnregisterCMMW(PCWSTR,DWORD);", "SelectCMM": "WINBOOL WINAPI SelectCMM(DWORD);", "GetColorDirectoryA": "WINBOOL WINAPI GetColorDirectoryA(PCSTR pMachineName,PSTR pBuffer,PDWORD pdwSize);", "GetColorDirectoryW": "WINBOOL WINAPI GetColorDirectoryW(PCWSTR pMachineName,PWSTR pBuffer,PDWORD pdwSize);", "InstallColorProfileA": "WINBOOL WINAPI InstallColorProfileA(PCSTR,PCSTR);", "InstallColorProfileW": "WINBOOL WINAPI InstallColorProfileW(PCWSTR,PCWSTR);", "UninstallColorProfileA": "WINBOOL WINAPI UninstallColorProfileA(PCSTR,PCSTR,WINBOOL);", "UninstallColorProfileW": "WINBOOL WINAPI UninstallColorProfileW(PCWSTR,PCWSTR,WINBOOL);", "EnumColorProfilesA": "WINBOOL WINAPI EnumColorProfilesA(PCSTR,PENUMTYPEA,PBYTE,PDWORD,PDWORD);", "EnumColorProfilesW": "WINBOOL WINAPI EnumColorProfilesW(PCWSTR,PENUMTYPEW,PBYTE,PDWORD,PDWORD);", "SetStandardColorSpaceProfileA": "WINBOOL WINAPI SetStandardColorSpaceProfileA(PCSTR,DWORD,PCSTR);", "SetStandardColorSpaceProfileW": "WINBOOL WINAPI SetStandardColorSpaceProfileW(PCWSTR,DWORD,PCWSTR);", "GetStandardColorSpaceProfileA": "WINBOOL WINAPI GetStandardColorSpaceProfileA(PCSTR pMachineName,DWORD dwSCS,PSTR pBuffer,PDWORD pcbSize);", "GetStandardColorSpaceProfileW": "WINBOOL WINAPI GetStandardColorSpaceProfileW(PCWSTR pMachineName,DWORD dwSCS,PWSTR pBuffer,PDWORD pcbSize);", "AssociateColorProfileWithDeviceA": "WINBOOL WINAPI AssociateColorProfileWithDeviceA(PCSTR,PCSTR,PCSTR);", "AssociateColorProfileWithDeviceW": "WINBOOL WINAPI AssociateColorProfileWithDeviceW(PCWSTR,PCWSTR,PCWSTR);", "DisassociateColorProfileFromDeviceA": "WINBOOL WINAPI DisassociateColorProfileFromDeviceA(PCSTR,PCSTR,PCSTR);", "DisassociateColorProfileFromDeviceW": "WINBOOL WINAPI DisassociateColorProfileFromDeviceW(PCWSTR,PCWSTR,PCWSTR);", "SetupColorMatchingW": "WINBOOL WINAPI SetupColorMatchingW(PCOLORMATCHSETUPW pcms);", "SetupColorMatchingA": "WINBOOL WINAPI SetupColorMatchingA(PCOLORMATCHSETUPA pcms);", "CMCheckColors": "WINBOOL WINAPI CMCheckColors(HCMTRANSFORM hcmTransform,LPCOLOR lpaInputColors,DWORD nColors,COLORTYPE ctInput,LPBYTE lpaResult);", "CMCheckColorsInGamut": "WINBOOL WINAPI CMCheckColorsInGamut(HCMTRANSFORM hcmTransform,RGBTRIPLE *lpaRGBTriple,LPBYTE lpaResult,UINT nCount);", "CMCheckRGBs": "WINBOOL WINAPI CMCheckRGBs(HCMTRANSFORM hcmTransform,LPVOID lpSrcBits,BMFORMAT bmInput,DWORD dwWidth,DWORD dwHeight,DWORD dwStride,LPBYTE lpaResult,PBMCALLBACKFN pfnCallback,LPARAM ulCallbackData);", "CMConvertColorNameToIndex": "WINBOOL WINAPI CMConvertColorNameToIndex(HPROFILE hProfile,PCOLOR_NAME paColorName,PDWORD paIndex,DWORD dwCount);", "CMConvertIndexToColorName": "WINBOOL WINAPI CMConvertIndexToColorName(HPROFILE hProfile,PDWORD paIndex,PCOLOR_NAME paColorName,DWORD dwCount);", "CMCreateDeviceLinkProfile": "WINBOOL WINAPI CMCreateDeviceLinkProfile(PHPROFILE pahProfiles,DWORD nProfiles,PDWORD padwIntents,DWORD nIntents,DWORD dwFlags,LPBYTE *lpProfileData);", "CMCreateMultiProfileTransform": "HCMTRANSFORM WINAPI CMCreateMultiProfileTransform(PHPROFILE pahProfiles,DWORD nProfiles,PDWORD padwIntents,DWORD nIntents,DWORD dwFlags);", "CMCreateProfile": "WINBOOL WINAPI CMCreateProfile(LPLOGCOLORSPACEA lpColorSpace,LPDEVCHARACTER *lpProfileData);", "CMCreateProfileW": "WINBOOL WINAPI CMCreateProfileW(LPLOGCOLORSPACEW lpColorSpace,LPDEVCHARACTER *lpProfileData);", "CMCreateTransform": "HCMTRANSFORM WINAPI CMCreateTransform(LPLOGCOLORSPACEA lpColorSpace,LPDEVCHARACTER lpDevCharacter,LPDEVCHARACTER lpTargetDevCharacter);", "CMCreateTransformW": "HCMTRANSFORM WINAPI CMCreateTransformW(LPLOGCOLORSPACEW lpColorSpace,LPDEVCHARACTER lpDevCharacter,LPDEVCHARACTER lpTargetDevCharacter);", "CMCreateTransformExt": "HCMTRANSFORM WINAPI CMCreateTransformExt(LPLOGCOLORSPACEA lpColorSpace,LPDEVCHARACTER lpDevCharacter,LPDEVCHARACTER lpTargetDevCharacter,DWORD dwFlags);", "CMCreateTransformExtW": "HCMTRANSFORM WINAPI CMCreateTransformExtW(LPLOGCOLORSPACEW lpColorSpace,LPDEVCHARACTER lpDevCharacter,LPDEVCHARACTER lpTargetDevCharacter,DWORD dwFlags);", "CMDeleteTransform": "WINBOOL WINAPI CMDeleteTransform(HCMTRANSFORM hcmTransform);", "CMGetInfo": "DWORD WINAPI CMGetInfo(DWORD dwInfo);", "CMGetNamedProfileInfo": "WINBOOL WINAPI CMGetNamedProfileInfo(HPROFILE hProfile,PNAMED_PROFILE_INFO pNamedProfileInfo);", "CMGetPS2ColorRenderingDictionary": "WINBOOL WINAPI CMGetPS2ColorRenderingDictionary(HPROFILE hProfile,DWORD dwIntent,LPBYTE lpBuffer,LPDWORD lpcbSize,LPBOOL lpbBinary);", "CMGetPS2ColorRenderingIntent": "WINBOOL WINAPI CMGetPS2ColorRenderingIntent(HPROFILE hProfile,DWORD dwIntent,LPBYTE lpBuffer,LPDWORD lpcbSize);", "CMGetPS2ColorSpaceArray": "WINBOOL WINAPI CMGetPS2ColorSpaceArray(HPROFILE hProfile,DWORD dwIntent,DWORD dwCSAType,LPBYTE lpBuffer,LPDWORD lpcbSize,LPBOOL lpbBinary);", "CMIsProfileValid": "WINBOOL WINAPI CMIsProfileValid(HPROFILE hProfile,LPBOOL lpbValid);", "CMTranslateColors": "WINBOOL WINAPI CMTranslateColors(HCMTRANSFORM hcmTransform,LPCOLOR lpaInputColors,DWORD nColors,COLORTYPE ctInput,LPCOLOR lpaOutputColors,COLORTYPE ctOutput);", "CMTranslateRGB": "WINBOOL WINAPI CMTranslateRGB(HCMTRANSFORM hcmTransform,COLORREF ColorRef,LPCOLORREF lpColorRef,DWORD dwFlags);", "CMTranslateRGBs": "WINBOOL WINAPI CMTranslateRGBs(HCMTRANSFORM hcmTransform,LPVOID lpSrcBits,BMFORMAT bmInput,DWORD dwWidth,DWORD dwHeight,DWORD dwStride,LPVOID lpDestBits,BMFORMAT bmOutput,DWORD dwTranslateDirection);", "CMTranslateRGBsExt": "WINBOOL WINAPI CMTranslateRGBsExt(HCMTRANSFORM hcmTransform,LPVOID lpSrcBits,BMFORMAT bmInput,DWORD dwWidth,DWORD dwHeight,DWORD dwInputStride,LPVOID lpDestBits,BMFORMAT bmOutput,DWORD dwOutputStride,LPBMCALLBACKFN lpfnCallback,LPARAM ulCallbackData);", "WcsAssociateColorProfileWithDevice": "WINBOOL WINAPI WcsAssociateColorProfileWithDevice(", "WcsCheckColors": "WINBOOL WINAPI WcsCheckColors(", "WcsCreateIccProfile": "HPROFILE WINAPI WcsCreateIccProfile(", "WcsDisassociateColorProfileFromDevice": "WINBOOL WINAPI WcsDisassociateColorProfileFromDevice(", "WcsEnumColorProfiles": "WINBOOL WINAPI WcsEnumColorProfiles(", "WcsEnumColorProfilesSize": "WINBOOL WINAPI WcsEnumColorProfilesSize(", "WcsGetDefaultColorProfile": "WINBOOL WINAPI WcsGetDefaultColorProfile(", "WcsGetDefaultColorProfileSize": "WINBOOL WINAPI WcsGetDefaultColorProfileSize(", "WcsGetDefaultRenderingIntent": "WINBOOL WINAPI WcsGetDefaultRenderingIntent(", "WcsGetUsePerUserProfiles": "WINBOOL WINAPI WcsGetUsePerUserProfiles(", "WcsOpenColorProfileA": "HPROFILE WINAPI WcsOpenColorProfileA(", "WcsOpenColorProfileW": "HPROFILE WINAPI WcsOpenColorProfileW(", "WcsSetDefaultColorProfile": "WINBOOL WINAPI WcsSetDefaultColorProfile(", "WcsSetDefaultRenderingIntent": "WINBOOL WINAPI WcsSetDefaultRenderingIntent(", "WcsSetUsePerUserProfiles": "WINBOOL WINAPI WcsSetUsePerUserProfiles(", "WcsTranslateColors": "WINBOOL WINAPI WcsTranslateColors(", "ITimerService_CreateTimer_Proxy": "HRESULT WINAPI ITimerService_CreateTimer_Proxy(ITimerService *This,ITimer *pReferenceTimer,ITimer **ppNewTimer);", "ITimerService_GetNamedTimer_Proxy": "HRESULT WINAPI ITimerService_GetNamedTimer_Proxy(ITimerService *This,REFGUID rguidName,ITimer **ppTimer);", "ITimerService_SetNamedTimerReference_Proxy": "HRESULT WINAPI ITimerService_SetNamedTimerReference_Proxy(ITimerService *This,REFGUID rguidName,ITimer *pReferenceTimer);", "ITimer_Advise_Proxy": "HRESULT WINAPI ITimer_Advise_Proxy(ITimer *This,VARIANT vtimeMin,VARIANT vtimeMax,VARIANT vtimeInterval,DWORD dwFlags,ITimerSink *pTimerSink,DWORD *pdwCookie);", "ITimer_Unadvise_Proxy": "HRESULT WINAPI ITimer_Unadvise_Proxy(ITimer *This,DWORD dwCookie);", "ITimer_Freeze_Proxy": "HRESULT WINAPI ITimer_Freeze_Proxy(ITimer *This,WINBOOL fFreeze);", "ITimer_GetTime_Proxy": "HRESULT WINAPI ITimer_GetTime_Proxy(ITimer *This,VARIANT *pvtime);", "ITimerSink_OnTimer_Proxy": "HRESULT WINAPI ITimerSink_OnTimer_Proxy(ITimerSink *This,VARIANT vtimeAdvise);", "IMapMIMEToCLSID_EnableDefaultMappings_Proxy": "HRESULT WINAPI IMapMIMEToCLSID_EnableDefaultMappings_Proxy(IMapMIMEToCLSID *This,WINBOOL bEnable);", "IMapMIMEToCLSID_MapMIMEToCLSID_Proxy": "HRESULT WINAPI IMapMIMEToCLSID_MapMIMEToCLSID_Proxy(IMapMIMEToCLSID *This,LPCOLESTR pszMIMEType,CLSID *pCLSID);", "IMapMIMEToCLSID_SetMapping_Proxy": "HRESULT WINAPI IMapMIMEToCLSID_SetMapping_Proxy(IMapMIMEToCLSID *This,LPCOLESTR pszMIMEType,DWORD dwMapMode,REFCLSID clsid);", "IImageDecodeFilter_Initialize_Proxy": "HRESULT WINAPI IImageDecodeFilter_Initialize_Proxy(IImageDecodeFilter *This,IImageDecodeEventSink *pEventSink);", "IImageDecodeFilter_Process_Proxy": "HRESULT WINAPI IImageDecodeFilter_Process_Proxy(IImageDecodeFilter *This,IStream *pStream);", "IImageDecodeFilter_Terminate_Proxy": "HRESULT WINAPI IImageDecodeFilter_Terminate_Proxy(IImageDecodeFilter *This,HRESULT hrStatus);", "IImageDecodeEventSink_GetSurface_Proxy": "HRESULT WINAPI IImageDecodeEventSink_GetSurface_Proxy(IImageDecodeEventSink *This,LONG nWidth,LONG nHeight,REFGUID bfid,ULONG nPasses,DWORD dwHints,IUnknown **ppSurface);", "IImageDecodeEventSink_OnBeginDecode_Proxy": "HRESULT WINAPI IImageDecodeEventSink_OnBeginDecode_Proxy(IImageDecodeEventSink *This,DWORD *pdwEvents,ULONG *pnFormats,BFID **ppFormats);", "IImageDecodeEventSink_OnBitsComplete_Proxy": "HRESULT WINAPI IImageDecodeEventSink_OnBitsComplete_Proxy(IImageDecodeEventSink *This);", "IImageDecodeEventSink_OnDecodeComplete_Proxy": "HRESULT WINAPI IImageDecodeEventSink_OnDecodeComplete_Proxy(IImageDecodeEventSink *This,HRESULT hrStatus);", "IImageDecodeEventSink_OnPalette_Proxy": "HRESULT WINAPI IImageDecodeEventSink_OnPalette_Proxy(IImageDecodeEventSink *This);", "IImageDecodeEventSink_OnProgress_Proxy": "HRESULT WINAPI IImageDecodeEventSink_OnProgress_Proxy(IImageDecodeEventSink *This,RECT *pBounds,WINBOOL bComplete);", "CardAcquireContext": "DWORD WINAPI CardAcquireContext(", "CardDeleteContainer": "DWORD WINAPI CardDeleteContainer(", "IMimeInfo_GetMimeCLSIDMapping_Proxy": "HRESULT WINAPI IMimeInfo_GetMimeCLSIDMapping_Proxy(IMimeInfo *This,UINT *pcTypes,LPCSTR **ppszTypes,CLSID **ppclsID);", "DCIOpenProvider": "extern HDC WINAPI DCIOpenProvider(void);", "DCICloseProvider": "extern void WINAPI DCICloseProvider(HDC hdc);", "DCICreatePrimary": "extern int WINAPI DCICreatePrimary(HDC hdc,LPDCISURFACEINFO *lplpSurface);", "DCICreateOffscreen": "extern int WINAPI DCICreateOffscreen(HDC hdc,DWORD dwCompression,DWORD dwRedMask,DWORD dwGreenMask,DWORD dwBlueMask,DWORD dwWidth,DWORD dwHeight,DWORD dwDCICaps,DWORD dwBitCount,LPDCIOFFSCREEN *lplpSurface);", "DCICreateOverlay": "extern int WINAPI DCICreateOverlay(HDC hdc,LPVOID lpOffscreenSurf,LPDCIOVERLAY *lplpSurface);", "DCIEnum": "extern int WINAPI DCIEnum(HDC hdc,LPRECT lprDst,LPRECT lprSrc,LPVOID lpFnCallback,LPVOID lpContext);", "DCISetSrcDestClip": "extern DCIRVAL WINAPI DCISetSrcDestClip(LPDCIOFFSCREEN pdci,LPRECT srcrc,LPRECT destrc,LPRGNDATA prd);", "WinWatchOpen": "extern HWINWATCH WINAPI WinWatchOpen(HWND hwnd);", "WinWatchClose": "extern void WINAPI WinWatchClose(HWINWATCH hWW);", "WinWatchGetClipList": "extern UINT WINAPI WinWatchGetClipList(HWINWATCH hWW,LPRECT prc,UINT size,LPRGNDATA prd);", "WinWatchDidStatusChange": "extern WINBOOL WINAPI WinWatchDidStatusChange(HWINWATCH hWW);", "GetWindowRegionData": "extern DWORD WINAPI GetWindowRegionData(HWND hwnd,DWORD size,LPRGNDATA prd);", "GetDCRegionData": "extern DWORD WINAPI GetDCRegionData(HDC hdc,DWORD size,LPRGNDATA prd);", "WinWatchNotify": "extern WINBOOL WINAPI WinWatchNotify(HWINWATCH hWW,WINWATCHNOTIFYPROC NotifyCallback,LPARAM NotifyParam);", "DCIEndAccess": "extern void WINAPI DCIEndAccess(LPDCISURFACEINFO pdci);", "DCIBeginAccess": "extern DCIRVAL WINAPI DCIBeginAccess(LPDCISURFACEINFO pdci,int x,int y,int dx,int dy);", "DCIDestroy": "extern void WINAPI DCIDestroy(LPDCISURFACEINFO pdci);", "DCIDraw": "extern DCIRVAL WINAPI DCIDraw(LPDCIOFFSCREEN pdci);", "DCISetClipList": "extern DCIRVAL WINAPI DCISetClipList(LPDCIOFFSCREEN pdci,LPRGNDATA prd);", "DCISetDestination": "extern DCIRVAL WINAPI DCISetDestination(LPDCIOFFSCREEN pdci,LPRECT dst,LPRECT src);", "LsnEqual": "WINBOOL WINAPI LsnEqual(", "LsnGreater": "WINBOOL WINAPI LsnGreater(", "LsnLess": "WINBOOL WINAPI LsnLess(", "LsnNull": "WINBOOL WINAPI LsnNull(", "CommitComplete": "WINBOOL WINAPI CommitComplete(HANDLE EnlistmentHandle,PLARGE_INTEGER TmVirtualClock);", "CommitEnlistment": "WINBOOL WINAPI CommitEnlistment(HANDLE EnlistmentHandle,PLARGE_INTEGER TmVirtualClock);", "CommitTransaction": "WINBOOL WINAPI CommitTransaction(HANDLE TransactionHandle);", "CommitTransactionAsync": "WINBOOL WINAPI CommitTransactionAsync(HANDLE TransactionHandle);", "CreateEnlistment": "HANDLE WINAPI CreateEnlistment(LPSECURITY_ATTRIBUTES lpEnlistmentrAttributes,HANDLE ResourceManagerHandle,HANDLE TransactionHandle,NOTIFICATION_MASK NotificationMask,DWORD CreateOptions,PVOID EnlistmentKey);", "CreateTransaction": "HANDLE WINAPI CreateTransaction (LPSECURITY_ATTRIBUTES lpTransactionAttributes, LPGUID UOW, DWORD CreateOptions, DWORD IsolationLevel, DWORD IsolationFlags, DWORD Timeout, LPWSTR Description);", "SinglePhaseReject": "WINBOOL WINAPI SinglePhaseReject(HANDLE EnlistmentHandle,PLARGE_INTEGER TmVirtualClock);", "CreateResourceManager": "HANDLE WINAPI CreateResourceManager(LPSECURITY_ATTRIBUTES lpResourceManagerAttributes,LPGUID ResourceManagerID,DWORD CreateOptions,HANDLE TmHandle,LPWSTR Description);", "CreateTransactionManager": "HANDLE WINAPI CreateTransactionManager(LPSECURITY_ATTRIBUTES lpTransactionAttributes,LPWSTR LogFileName,ULONG CreateOptions,ULONG CommitStrength);", "GetCurrentClockTransactionManager": "WINBOOL WINAPI GetCurrentClockTransactionManager(HANDLE TransactionManagerHandle,PLARGE_INTEGER TmVirtualClock);", "GetEnlistmentId": "WINBOOL WINAPI GetEnlistmentId(HANDLE EnlistmentHandle,LPGUID EnlistmentId);", "GetEnlistmentRecoveryInformation": "WINBOOL WINAPI GetEnlistmentRecoveryInformation(HANDLE EnlistmentHandle,ULONG BufferSize,PVOID Buffer,PULONG BufferUsed);", "GetNotificationResourceManager": "WINBOOL WINAPI GetNotificationResourceManager(HANDLE ResourceManagerHandle,PTRANSACTION_NOTIFICATION TransactionNotification,ULONG NotificationLength,DWORD dwMilliseconds,PULONG ReturnLength);", "GetNotificationResourceManagerAsync": "WINBOOL WINAPI GetNotificationResourceManagerAsync(HANDLE ResourceManagerHandle,PTRANSACTION_NOTIFICATION TransactionNotification,ULONG TransactionNotificationLength,PULONG ReturnLength,LPOVERLAPPED pOverlapped);", "SetResourceManagerCompletionPort": "WINBOOL WINAPI SetResourceManagerCompletionPort(HANDLE ResourceManagerHandle,HANDLE IoCompletionPortHandle,ULONG_PTR CompletionKey);", "GetTransactionId": "WINBOOL WINAPI GetTransactionId(HANDLE TransactionHandle,LPGUID TransactionId);", "GetTransactionInformation": "WINBOOL WINAPI GetTransactionInformation(HANDLE TransactionHandle,PDWORD Outcome,PDWORD IsolationLevel,PDWORD IsolationFlags,PDWORD Timeout,DWORD BufferLength,LPWSTR Description);", "GetTransactionManagerId": "WINBOOL WINAPI GetTransactionManagerId(HANDLE TransactionManagerHandle,LPGUID TransactionManagerId);", "OpenEnlistment": "HANDLE WINAPI OpenEnlistment(DWORD dwDesiredAccess,HANDLE ResourceManagerHandle,LPGUID EnlistmentId);", "OpenResourceManager": "HANDLE WINAPI OpenResourceManager(DWORD dwDesiredAccess,HANDLE TmHandle,LPGUID RmGuid);", "OpenTransaction": "HANDLE WINAPI OpenTransaction(DWORD dwDesiredAccess,LPGUID TransactionId);", "OpenTransactionManager": "HANDLE WINAPI OpenTransactionManager(LPWSTR LogFileName,ACCESS_MASK DesiredAccess,ULONG OpenOptions);", "OpenTransactionManagerById": "HANDLE WINAPI OpenTransactionManagerById(LPGUID TransactionManagerId,ACCESS_MASK DesiredAccess,ULONG OpenOptions);", "PrepareComplete": "WINBOOL WINAPI PrepareComplete(HANDLE EnlistmentHandle,PLARGE_INTEGER TmVirtualClock);", "PrepareEnlistment": "WINBOOL WINAPI PrepareEnlistment(HANDLE EnlistmentHandle,PLARGE_INTEGER TmVirtualClock);", "PrePrepareComplete": "WINBOOL WINAPI PrePrepareComplete(HANDLE EnlistmentHandle,PLARGE_INTEGER TmVirtualClock);", "PrePrepareEnlistment": "WINBOOL WINAPI PrePrepareEnlistment(HANDLE EnlistmentHandle,PLARGE_INTEGER TmVirtualClock);", "ReadOnlyEnlistment": "WINBOOL WINAPI ReadOnlyEnlistment(HANDLE EnlistmentHandle,PLARGE_INTEGER TmVirtualClock);", "RecoverEnlistment": "WINBOOL WINAPI RecoverEnlistment(HANDLE EnlistmentHandle,PVOID EnlistmentKey);", "RecoverResourceManager": "WINBOOL WINAPI RecoverResourceManager(HANDLE ResourceManagerHandle);", "RecoverTransactionManager": "WINBOOL WINAPI RecoverTransactionManager(HANDLE TransactionManagerHandle);", "RenameTransactionManager": "WINBOOL WINAPI RenameTransactionManager(LPWSTR LogFileName,LPGUID ExistingTransactionManagerGuid);", "RollbackComplete": "WINBOOL WINAPI RollbackComplete(HANDLE EnlistmentHandle,PLARGE_INTEGER TmVirtualClock);", "RollbackEnlistment": "WINBOOL WINAPI RollbackEnlistment(HANDLE EnlistmentHandle,PLARGE_INTEGER TmVirtualClock);", "RollbackTransaction": "WINBOOL WINAPI RollbackTransaction(HANDLE TransactionHandle);", "RollbackTransactionAsync": "WINBOOL WINAPI RollbackTransactionAsync(HANDLE TransactionHandle);", "RollforwardTransactionManager": "WINBOOL WINAPI RollforwardTransactionManager(HANDLE TransactionManagerHandle,PLARGE_INTEGER TmVirtualClock);", "SetEnlistmentRecoveryInformation": "WINBOOL WINAPI SetEnlistmentRecoveryInformation(HANDLE EnlistmentHandle,ULONG BufferSize,PVOID Buffer);", "SetTransactionInformation": "WINBOOL WINAPI SetTransactionInformation(HANDLE TransactionHandle,DWORD IsolationLevel,DWORD IsolationFlags,DWORD Timeout,LPWSTR Description);", "InitCommonControls": "WINCOMMCTRLAPI void WINAPI InitCommonControls(void);", "InitCommonControlsEx": "WINCOMMCTRLAPI WINBOOL WINAPI InitCommonControlsEx(const INITCOMMONCONTROLSEX *);", "ImageList_Create": "WINCOMMCTRLAPI HIMAGELIST WINAPI ImageList_Create(int cx,int cy,UINT flags,int cInitial,int cGrow);", "ImageList_Destroy": "WINCOMMCTRLAPI WINBOOL WINAPI ImageList_Destroy(HIMAGELIST himl);", "ImageList_GetImageCount": "WINCOMMCTRLAPI int WINAPI ImageList_GetImageCount(HIMAGELIST himl);", "ImageList_SetImageCount": "WINCOMMCTRLAPI WINBOOL WINAPI ImageList_SetImageCount(HIMAGELIST himl,UINT uNewCount);", "ImageList_Add": "WINCOMMCTRLAPI int WINAPI ImageList_Add(HIMAGELIST himl,HBITMAP hbmImage,HBITMAP hbmMask);", "ImageList_ReplaceIcon": "WINCOMMCTRLAPI int WINAPI ImageList_ReplaceIcon(HIMAGELIST himl,int i,HICON hicon);", "ImageList_SetBkColor": "WINCOMMCTRLAPI COLORREF WINAPI ImageList_SetBkColor(HIMAGELIST himl,COLORREF clrBk);", "ImageList_GetBkColor": "WINCOMMCTRLAPI COLORREF WINAPI ImageList_GetBkColor(HIMAGELIST himl);", "ImageList_SetOverlayImage": "WINCOMMCTRLAPI WINBOOL WINAPI ImageList_SetOverlayImage(HIMAGELIST himl,int iImage,int iOverlay);", "ImageList_Draw": "WINCOMMCTRLAPI WINBOOL WINAPI ImageList_Draw(HIMAGELIST himl,int i,HDC hdcDst,int x,int y,UINT fStyle);", "ImageList_Replace": "WINCOMMCTRLAPI WINBOOL WINAPI ImageList_Replace(HIMAGELIST himl,int i,HBITMAP hbmImage,HBITMAP hbmMask);", "ImageList_AddMasked": "WINCOMMCTRLAPI int WINAPI ImageList_AddMasked(HIMAGELIST himl,HBITMAP hbmImage,COLORREF crMask);", "ImageList_DrawEx": "WINCOMMCTRLAPI WINBOOL WINAPI ImageList_DrawEx(HIMAGELIST himl,int i,HDC hdcDst,int x,int y,int dx,int dy,COLORREF rgbBk,COLORREF rgbFg,UINT fStyle);", "ImageList_DrawIndirect": "WINCOMMCTRLAPI WINBOOL WINAPI ImageList_DrawIndirect(IMAGELISTDRAWPARAMS *pimldp);", "ImageList_Remove": "WINCOMMCTRLAPI WINBOOL WINAPI ImageList_Remove(HIMAGELIST himl,int i);", "ImageList_GetIcon": "WINCOMMCTRLAPI HICON WINAPI ImageList_GetIcon(HIMAGELIST himl,int i,UINT flags);", "ImageList_LoadImageA": "WINCOMMCTRLAPI HIMAGELIST WINAPI ImageList_LoadImageA(HINSTANCE hi,LPCSTR lpbmp,int cx,int cGrow,COLORREF crMask,UINT uType,UINT uFlags);", "ImageList_LoadImageW": "WINCOMMCTRLAPI HIMAGELIST WINAPI ImageList_LoadImageW(HINSTANCE hi,LPCWSTR lpbmp,int cx,int cGrow,COLORREF crMask,UINT uType,UINT uFlags);", "ImageList_Copy": "WINCOMMCTRLAPI WINBOOL WINAPI ImageList_Copy(HIMAGELIST himlDst,int iDst,HIMAGELIST himlSrc,int iSrc,UINT uFlags);", "ImageList_BeginDrag": "WINCOMMCTRLAPI WINBOOL WINAPI ImageList_BeginDrag(HIMAGELIST himlTrack,int iTrack,int dxHotspot,int dyHotspot);", "ImageList_EndDrag": "WINCOMMCTRLAPI void WINAPI ImageList_EndDrag(void);", "ImageList_DragEnter": "WINCOMMCTRLAPI WINBOOL WINAPI ImageList_DragEnter(HWND hwndLock,int x,int y);", "ImageList_DragLeave": "WINCOMMCTRLAPI WINBOOL WINAPI ImageList_DragLeave(HWND hwndLock);", "ImageList_DragMove": "WINCOMMCTRLAPI WINBOOL WINAPI ImageList_DragMove(int x,int y);", "ImageList_SetDragCursorImage": "WINCOMMCTRLAPI WINBOOL WINAPI ImageList_SetDragCursorImage(HIMAGELIST himlDrag,int iDrag,int dxHotspot,int dyHotspot);", "ImageList_DragShowNolock": "WINCOMMCTRLAPI WINBOOL WINAPI ImageList_DragShowNolock(WINBOOL fShow);", "ImageList_GetDragImage": "WINCOMMCTRLAPI HIMAGELIST WINAPI ImageList_GetDragImage(POINT *ppt,POINT *pptHotspot);", "ImageList_Read": "WINCOMMCTRLAPI HIMAGELIST WINAPI ImageList_Read(LPSTREAM pstm);", "ImageList_Write": "WINCOMMCTRLAPI WINBOOL WINAPI ImageList_Write(HIMAGELIST himl,LPSTREAM pstm);", "ImageList_ReadEx": "WINCOMMCTRLAPI HRESULT WINAPI ImageList_ReadEx(DWORD dwFlags,LPSTREAM pstm,REFIID riid,PVOID *ppv);", "ImageList_WriteEx": "WINCOMMCTRLAPI HRESULT WINAPI ImageList_WriteEx(HIMAGELIST himl,DWORD dwFlags,LPSTREAM pstm);", "ImageList_GetIconSize": "WINCOMMCTRLAPI WINBOOL WINAPI ImageList_GetIconSize(HIMAGELIST himl,int *cx,int *cy);", "ImageList_SetIconSize": "WINCOMMCTRLAPI WINBOOL WINAPI ImageList_SetIconSize(HIMAGELIST himl,int cx,int cy);", "ImageList_GetImageInfo": "WINCOMMCTRLAPI WINBOOL WINAPI ImageList_GetImageInfo(HIMAGELIST himl,int i,IMAGEINFO *pImageInfo);", "ImageList_Merge": "WINCOMMCTRLAPI HIMAGELIST WINAPI ImageList_Merge(HIMAGELIST himl1,int i1,HIMAGELIST himl2,int i2,int dx,int dy);", "ImageList_Duplicate": "WINCOMMCTRLAPI HIMAGELIST WINAPI ImageList_Duplicate(HIMAGELIST himl);", "HIMAGELIST_QueryInterface": "WINCOMMCTRLAPI HRESULT WINAPI HIMAGELIST_QueryInterface (HIMAGELIST himl, REFIID riid, void **ppv);", "CreateToolbarEx": "WINCOMMCTRLAPI HWND WINAPI CreateToolbarEx(HWND hwnd,DWORD ws,UINT wID,int nBitmaps,HINSTANCE hBMInst,UINT_PTR wBMID,LPCTBBUTTON lpButtons,int iNumButtons,int dxButton,int dyButton,int dxBitmap,int dyBitmap,UINT uStructSize);", "CreateMappedBitmap": "WINCOMMCTRLAPI HBITMAP WINAPI CreateMappedBitmap(HINSTANCE hInstance,INT_PTR idBitmap,UINT wFlags,LPCOLORMAP lpColorMap,int iNumMaps);", "DrawStatusTextA": "WINCOMMCTRLAPI void WINAPI DrawStatusTextA(HDC hDC,LPCRECT lprc,LPCSTR pszText,UINT uFlags);", "DrawStatusTextW": "WINCOMMCTRLAPI void WINAPI DrawStatusTextW(HDC hDC,LPCRECT lprc,LPCWSTR pszText,UINT uFlags);", "CreateStatusWindowA": "WINCOMMCTRLAPI HWND WINAPI CreateStatusWindowA(LONG style,LPCSTR lpszText,HWND hwndParent,UINT wID);", "CreateStatusWindowW": "WINCOMMCTRLAPI HWND WINAPI CreateStatusWindowW(LONG style,LPCWSTR lpszText,HWND hwndParent,UINT wID);", "MenuHelp": "WINCOMMCTRLAPI void WINAPI MenuHelp(UINT uMsg,WPARAM wParam,LPARAM lParam,HMENU hMainMenu,HINSTANCE hInst,HWND hwndStatus,UINT *lpwIDs);", "ShowHideMenuCtl": "WINCOMMCTRLAPI WINBOOL WINAPI ShowHideMenuCtl(HWND hWnd,UINT_PTR uFlags,LPINT lpInfo);", "GetEffectiveClientRect": "WINCOMMCTRLAPI void WINAPI GetEffectiveClientRect(HWND hWnd,LPRECT lprc,const INT *lpInfo);", "MakeDragList": "WINCOMMCTRLAPI WINBOOL WINAPI MakeDragList(HWND hLB);", "DrawInsert": "WINCOMMCTRLAPI void WINAPI DrawInsert(HWND handParent,HWND hLB,int nItem);", "LBItemFromPt": "WINCOMMCTRLAPI int WINAPI LBItemFromPt(HWND hLB,POINT pt,WINBOOL bAutoScroll);", "CreateUpDownControl": "WINCOMMCTRLAPI HWND WINAPI CreateUpDownControl(DWORD dwStyle,int x,int y,int cx,int cy,HWND hParent,int nID,HINSTANCE hInst,HWND hBuddy,int nUpper,int nLower,int nPos);", "TaskDialogIndirect": "WINCOMMCTRLAPI HRESULT WINAPI TaskDialogIndirect (const TASKDIALOGCONFIG *pTaskConfig, int *pnButton, int *pnRadioButton, WINBOOL *pfVerificationFlagChecked);", "TaskDialog": "WINCOMMCTRLAPI HRESULT WINAPI TaskDialog (HWND hwndOwner, HINSTANCE hInstance, PCWSTR pszWindowTitle, PCWSTR pszMainInstruction, PCWSTR pszContent, TASKDIALOG_COMMON_BUTTON_FLAGS dwCommonButtons, PCWSTR pszIcon, int *pnButton);", "InitMUILanguage": "void WINAPI InitMUILanguage(LANGID uiLang);", "GetMUILanguage": "LANGID WINAPI GetMUILanguage(void);", "DSA_Create": "WINCOMMCTRLAPI HDSA WINAPI DSA_Create (int cbItem, int cItemGrow);", "DSA_Destroy": "WINCOMMCTRLAPI WINBOOL WINAPI DSA_Destroy (HDSA hdsa);", "DSA_DestroyCallback": "WINCOMMCTRLAPI void WINAPI DSA_DestroyCallback (HDSA hdsa, PFNDAENUMCALLBACK pfnCB, void *pData);", "DSA_DeleteItem": "WINCOMMCTRLAPI WINBOOL WINAPI DSA_DeleteItem (HDSA hdsa, int i);", "DSA_DeleteAllItems": "WINCOMMCTRLAPI WINBOOL WINAPI DSA_DeleteAllItems (HDSA hdsa);", "DSA_EnumCallback": "WINCOMMCTRLAPI void WINAPI DSA_EnumCallback (HDSA hdsa, PFNDAENUMCALLBACK pfnCB, void *pData);", "DSA_InsertItem": "WINCOMMCTRLAPI int WINAPI DSA_InsertItem (HDSA hdsa, int i, const void *pitem);", "DSA_GetItemPtr": "WINCOMMCTRLAPI PVOID WINAPI DSA_GetItemPtr (HDSA hdsa, int i);", "DSA_GetItem": "WINCOMMCTRLAPI WINBOOL WINAPI DSA_GetItem (HDSA hdsa, int i, void *pitem);", "DSA_SetItem": "WINCOMMCTRLAPI WINBOOL WINAPI DSA_SetItem (HDSA hdsa, int i, const void *pitem);", "DSA_Clone": "WINCOMMCTRLAPI HDSA WINAPI DSA_Clone (HDSA hdsa);", "DSA_GetSize": "WINCOMMCTRLAPI ULONGLONG WINAPI DSA_GetSize (HDSA hdsa);", "DSA_Sort": "WINCOMMCTRLAPI WINBOOL WINAPI DSA_Sort (HDSA pdsa, PFNDACOMPARE pfnCompare, LPARAM lParam);", "DPA_Create": "WINCOMMCTRLAPI HDPA WINAPI DPA_Create (int cItemGrow);", "DPA_CreateEx": "WINCOMMCTRLAPI HDPA WINAPI DPA_CreateEx (int cpGrow, HANDLE hheap);", "DPA_Clone": "WINCOMMCTRLAPI HDPA WINAPI DPA_Clone (const HDPA hdpa, HDPA hdpaNew);", "DPA_Destroy": "WINCOMMCTRLAPI WINBOOL WINAPI DPA_Destroy (HDPA hdpa);", "DPA_DestroyCallback": "WINCOMMCTRLAPI void WINAPI DPA_DestroyCallback (HDPA hdpa, PFNDAENUMCALLBACK pfnCB, void *pData);", "DPA_DeletePtr": "WINCOMMCTRLAPI PVOID WINAPI DPA_DeletePtr (HDPA hdpa, int i);", "DPA_DeleteAllPtrs": "WINCOMMCTRLAPI WINBOOL WINAPI DPA_DeleteAllPtrs (HDPA hdpa);", "DPA_EnumCallback": "WINCOMMCTRLAPI void WINAPI DPA_EnumCallback (HDPA hdpa, PFNDAENUMCALLBACK pfnCB, void *pData);", "DPA_Grow": "WINCOMMCTRLAPI WINBOOL WINAPI DPA_Grow (HDPA pdpa, int cp);", "DPA_InsertPtr": "WINCOMMCTRLAPI int WINAPI DPA_InsertPtr (HDPA hdpa, int i, void *p);", "DPA_SetPtr": "WINCOMMCTRLAPI WINBOOL WINAPI DPA_SetPtr (HDPA hdpa, int i, void *p);", "DPA_GetPtr": "WINCOMMCTRLAPI PVOID WINAPI DPA_GetPtr (HDPA hdpa, INT_PTR i);", "DPA_GetPtrIndex": "WINCOMMCTRLAPI int WINAPI DPA_GetPtrIndex (HDPA hdpa, const void *p);", "DPA_GetSize": "WINCOMMCTRLAPI ULONGLONG WINAPI DPA_GetSize (HDPA hdpa);", "DPA_Sort": "WINCOMMCTRLAPI WINBOOL WINAPI DPA_Sort (HDPA hdpa, PFNDACOMPARE pfnCompare, LPARAM lParam);", "DPA_LoadStream": "WINCOMMCTRLAPI HRESULT WINAPI DPA_LoadStream (HDPA *phdpa, PFNDPASTREAM pfn, struct IStream *pstream, void *pvInstData);", "DPA_SaveStream": "WINCOMMCTRLAPI HRESULT WINAPI DPA_SaveStream (HDPA hdpa, PFNDPASTREAM pfn, struct IStream *pstream, void *pvInstData);", "DPA_Merge": "WINCOMMCTRLAPI WINBOOL WINAPI DPA_Merge (HDPA hdpaDest, HDPA hdpaSrc, DWORD dwFlags, PFNDACOMPARE pfnCompare, PFNDPAMERGE pfnMerge, LPARAM lParam);", "DPA_Search": "WINCOMMCTRLAPI int WINAPI DPA_Search (HDPA hdpa, void *pFind, int iStart, PFNDACOMPARE pfnCompare, LPARAM lParam, UINT options);", "Str_SetPtrW": "WINCOMMCTRLAPI WINBOOL WINAPI Str_SetPtrW (LPWSTR *ppsz, LPCWSTR psz);", "_TrackMouseEvent": "WINCOMMCTRLAPI WINBOOL WINAPI _TrackMouseEvent(LPTRACKMOUSEEVENT lpEventTrack);", "FlatSB_EnableScrollBar": "WINCOMMCTRLAPI WINBOOL WINAPI FlatSB_EnableScrollBar(HWND,int,UINT);", "FlatSB_ShowScrollBar": "WINCOMMCTRLAPI WINBOOL WINAPI FlatSB_ShowScrollBar(HWND,int code,WINBOOL);", "FlatSB_GetScrollRange": "WINCOMMCTRLAPI WINBOOL WINAPI FlatSB_GetScrollRange(HWND,int code,LPINT,LPINT);", "FlatSB_GetScrollInfo": "WINCOMMCTRLAPI WINBOOL WINAPI FlatSB_GetScrollInfo(HWND,int code,LPSCROLLINFO);", "FlatSB_GetScrollPos": "WINCOMMCTRLAPI int WINAPI FlatSB_GetScrollPos(HWND,int code);", "FlatSB_GetScrollProp": "WINCOMMCTRLAPI WINBOOL WINAPI FlatSB_GetScrollProp(HWND,int propIndex,LPINT);", "FlatSB_GetScrollPropPtr": "WINCOMMCTRLAPI WINBOOL WINAPI FlatSB_GetScrollPropPtr(HWND,int propIndex,PINT_PTR);", "FlatSB_SetScrollPos": "WINCOMMCTRLAPI int WINAPI FlatSB_SetScrollPos(HWND,int code,int pos,WINBOOL fRedraw);", "FlatSB_SetScrollInfo": "WINCOMMCTRLAPI int WINAPI FlatSB_SetScrollInfo(HWND,int code,LPSCROLLINFO,WINBOOL fRedraw);", "FlatSB_SetScrollRange": "WINCOMMCTRLAPI int WINAPI FlatSB_SetScrollRange(HWND,int code,int min,int max,WINBOOL fRedraw);", "FlatSB_SetScrollProp": "WINCOMMCTRLAPI WINBOOL WINAPI FlatSB_SetScrollProp(HWND,UINT index,INT_PTR newValue,WINBOOL);", "InitializeFlatSB": "WINCOMMCTRLAPI WINBOOL WINAPI InitializeFlatSB(HWND);", "UninitializeFlatSB": "WINCOMMCTRLAPI HRESULT WINAPI UninitializeFlatSB(HWND);", "SetWindowSubclass": "WINBOOL WINAPI SetWindowSubclass(HWND hWnd,SUBCLASSPROC pfnSubclass,UINT_PTR uIdSubclass,DWORD_PTR dwRefData);", "GetWindowSubclass": "WINBOOL WINAPI GetWindowSubclass(HWND hWnd,SUBCLASSPROC pfnSubclass,UINT_PTR uIdSubclass,DWORD_PTR *pdwRefData);", "RemoveWindowSubclass": "WINBOOL WINAPI RemoveWindowSubclass(HWND hWnd,SUBCLASSPROC pfnSubclass,UINT_PTR uIdSubclass);", "DefSubclassProc": "LRESULT WINAPI DefSubclassProc(HWND hWnd,UINT uMsg,WPARAM wParam,LPARAM lParam);", "DrawShadowText": "int WINAPI DrawShadowText(HDC hdc,LPCWSTR pszText,UINT cch,RECT *prc,DWORD dwFlags,COLORREF crText,COLORREF crShadow,int ixOffset,int iyOffset);", "LoadIconMetric": "WINCOMMCTRLAPI HRESULT WINAPI LoadIconMetric (HINSTANCE hinst, PCWSTR pszName, int lims, HICON *phico);", "LoadIconWithScaleDown": "WINCOMMCTRLAPI HRESULT WINAPI LoadIconWithScaleDown (HINSTANCE hinst, PCWSTR pszName, int cx, int cy, HICON *phico);", "RmStartSession": "DWORD WINAPI RmStartSession(DWORD *pSessionHandle, DWORD dwSessionFlags, WCHAR strSessionKey[]);", "RmJoinSession": "DWORD WINAPI RmJoinSession(DWORD *pSessionHandle, const WCHAR strSessionKey[]);", "RmEndSession": "DWORD WINAPI RmEndSession(DWORD dwSessionHandle);", "RmRegisterResources": "DWORD WINAPI RmRegisterResources(DWORD dwSessionHandle, UINT nFiles, LPCWSTR rgsFileNames[], UINT nApplications, RM_UNIQUE_PROCESS rgApplications[], UINT nServices, LPCWSTR rgsServiceNames[]);", "RmGetList": "DWORD WINAPI RmGetList(DWORD dwSessionHandle, UINT *pnProcInfoNeeded, UINT *pnProcInfo, RM_PROCESS_INFO rgAffectedApps[], LPDWORD lpdwRebootReasons);", "RmShutdown": "DWORD WINAPI RmShutdown(DWORD dwSessionHandle, ULONG lActionFlags, RM_WRITE_STATUS_CALLBACK fnStatus);", "RmRestart": "DWORD WINAPI RmRestart(DWORD dwSessionHandle, DWORD dwRestartFlags, RM_WRITE_STATUS_CALLBACK fnStatus);", "RmCancelCurrentTask": "DWORD WINAPI RmCancelCurrentTask(DWORD dwSessionHandle);", "RmAddFilter": "DWORD WINAPI RmAddFilter(DWORD dwSessionHandle, LPCWSTR strModuleName, RM_UNIQUE_PROCESS *pProcess, LPCWSTR strServiceShortName, RM_FILTER_ACTION FilterAction);", "RmRemoveFilter": "DWORD WINAPI RmRemoveFilter(DWORD dwSessionHandle, LPCWSTR strModuleName, RM_UNIQUE_PROCESS *pProcess, LPCWSTR strServiceShortName);", "RmGetFilterList": "DWORD WINAPI RmGetFilterList(DWORD dwSessionHandle, PBYTE pbFilterBuf, DWORD cbFilterBuf, LPDWORD cbFilterBufNeeded);", "ScreenSaverProcW": "LRESULT WINAPI ScreenSaverProcW(HWND hWnd,UINT message,WPARAM wParam,LPARAM lParam);", "ScreenSaverProc": "LRESULT WINAPI ScreenSaverProc(HWND hWnd,UINT message,WPARAM wParam,LPARAM lParam);", "DefScreenSaverProc": "LRESULT WINAPI DefScreenSaverProc(HWND hWnd,UINT msg,WPARAM wParam,LPARAM lParam);", "ScreenSaverConfigureDialog": "WINBOOL WINAPI ScreenSaverConfigureDialog(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);", "RegisterDialogClasses": "WINBOOL WINAPI RegisterDialogClasses(HANDLE hInst);", "ScreenSaverChangePassword": "void WINAPI ScreenSaverChangePassword(HWND hParent);", "CryptCATAdminAcquireContext": "WINBOOL   WINAPI CryptCATAdminAcquireContext(HCATADMIN*,const GUID*,DWORD);", "CryptCATAdminAcquireContext2": "WINBOOL   WINAPI CryptCATAdminAcquireContext2(HCATADMIN*,const GUID*,const WCHAR*,const CERT_STRONG_SIGN_PARA*,DWORD);", "CryptCATAdminAddCatalog": "HCATINFO  WINAPI CryptCATAdminAddCatalog(HCATADMIN,PWSTR,PWSTR,DWORD);", "CryptCATAdminCalcHashFromFileHandle": "WINBOOL   WINAPI CryptCATAdminCalcHashFromFileHandle(HANDLE,DWORD*,BYTE*,DWORD);", "CryptCATAdminCalcHashFromFileHandle2": "WINBOOL   WINAPI CryptCATAdminCalcHashFromFileHandle2(HCATADMIN,HANDLE,DWORD*,BYTE*,DWORD);", "CryptCATAdminEnumCatalogFromHash": "HCATINFO  WINAPI CryptCATAdminEnumCatalogFromHash(HCATADMIN,BYTE*,DWORD,DWORD,HCATINFO*);", "CryptCATAdminReleaseCatalogContext": "WINBOOL   WINAPI CryptCATAdminReleaseCatalogContext(HCATADMIN,HCATINFO,DWORD);", "CryptCATAdminReleaseContext": "WINBOOL   WINAPI CryptCATAdminReleaseContext(HCATADMIN,DWORD);", "CryptCATAdminRemoveCatalog": "WINBOOL   WINAPI CryptCATAdminRemoveCatalog(HCATADMIN,LPCWSTR,DWORD);", "CryptCATAdminResolveCatalogPath": "WINBOOL   WINAPI CryptCATAdminResolveCatalogPath(HCATADMIN, WCHAR *, CATALOG_INFO *, DWORD);", "CryptCATCatalogInfoFromContext": "WINBOOL   WINAPI CryptCATCatalogInfoFromContext(HCATINFO, CATALOG_INFO *, DWORD);", "CryptCATCDFClose": "WINBOOL   WINAPI CryptCATCDFClose(CRYPTCATCDF *);", "CryptCATCDFEnumCatAttributes": "CRYPTCATATTRIBUTE * WINAPI CryptCATCDFEnumCatAttributes(CRYPTCATCDF *, CRYPTCATATTRIBUTE *,", "CryptCATCDFEnumMembersByCDFTagEx": "LPWSTR              WINAPI CryptCATCDFEnumMembersByCDFTagEx(CRYPTCATCDF *, LPWSTR,", "CryptCATCDFOpen": "CRYPTCATCDF       * WINAPI CryptCATCDFOpen(LPWSTR, PFN_CDF_PARSE_ERROR_CALLBACK);", "CryptCATClose": "WINBOOL             WINAPI CryptCATClose(HANDLE);", "CryptCATEnumerateAttr": "CRYPTCATATTRIBUTE * WINAPI CryptCATEnumerateAttr(HANDLE, CRYPTCATMEMBER *, CRYPTCATATTRIBUTE *);", "CryptCATEnumerateCatAttr": "CRYPTCATATTRIBUTE * WINAPI CryptCATEnumerateCatAttr(HANDLE, CRYPTCATATTRIBUTE *);", "CryptCATEnumerateMember": "CRYPTCATMEMBER    * WINAPI CryptCATEnumerateMember(HANDLE,CRYPTCATMEMBER *);", "CryptCATGetAttrInfo": "CRYPTCATATTRIBUTE * WINAPI CryptCATGetAttrInfo(HANDLE, CRYPTCATMEMBER *, LPWSTR);", "CryptCATGetCatAttrInfo": "CRYPTCATATTRIBUTE * WINAPI CryptCATGetCatAttrInfo(HANDLE, LPWSTR);", "CryptCATGetMemberInfo": "CRYPTCATMEMBER    * WINAPI CryptCATGetMemberInfo(HANDLE, LPWSTR);", "CryptCATOpen": "HANDLE    WINAPI CryptCATOpen(LPWSTR,DWORD,HCRYPTPROV,DWORD,DWORD);", "CryptCATPersistStore": "WINBOOL   WINAPI CryptCATPersistStore(HANDLE catalog);", "CryptCATPutAttrInfo": "CRYPTCATATTRIBUTE * WINAPI CryptCATPutAttrInfo(HANDLE catalog, CRYPTCATMEMBER *member, WCHAR *name, DWORD flags, DWORD size, BYTE *data);", "CryptCATPutCatAttrInfo": "CRYPTCATATTRIBUTE * WINAPI CryptCATPutCatAttrInfo(HANDLE catalog, WCHAR *name, DWORD flags, DWORD size, BYTE *data);", "CryptCATPutMemberInfo": "CRYPTCATMEMBER    * WINAPI CryptCATPutMemberInfo(HANDLE catalog, WCHAR *filename, WCHAR *member, GUID *subject, DWORD version, DWORD size, BYTE *data);", "GetNumberOfInterfaces": "DWORD WINAPI GetNumberOfInterfaces (PDWORD pdwNumIf);", "GetIfEntry": "DWORD WINAPI GetIfEntry (PMIB_IFROW pIfRow);", "GetIfTable": "DWORD WINAPI GetIfTable (PMIB_IFTABLE pIfTable, PULONG pdwSize, WINBOOL bOrder);", "GetIpAddrTable": "DWORD WINAPI GetIpAddrTable (PMIB_IPADDRTABLE pIpAddrTable, PULONG pdwSize, WINBOOL bOrder);", "GetIpNetTable": "ULONG WINAPI GetIpNetTable (PMIB_IPNETTABLE IpNetTable, PULONG SizePointer, WINBOOL Order);", "GetIpForwardTable": "DWORD WINAPI GetIpForwardTable (PMIB_IPFORWARDTABLE pIpForwardTable, PULONG pdwSize, WINBOOL bOrder);", "GetTcpTable": "ULONG WINAPI GetTcpTable (PMIB_TCPTABLE TcpTable, PULONG SizePointer, WINBOOL Order);", "GetExtendedTcpTable": "DWORD WINAPI GetExtendedTcpTable (PVOID pTcpTable, PDWORD pdwSize, WINBOOL bOrder, ULONG ulAf, TCP_TABLE_CLASS TableClass, ULONG Reserved);", "GetOwnerModuleFromTcpEntry": "DWORD WINAPI GetOwnerModuleFromTcpEntry (PMIB_TCPROW_OWNER_MODULE pTcpEntry, TCPIP_OWNER_MODULE_INFO_CLASS Class, PVOID pBuffer, PDWORD pdwSize);", "GetUdpTable": "ULONG WINAPI GetUdpTable (PMIB_UDPTABLE UdpTable, PULONG SizePointer, WINBOOL Order);", "GetExtendedUdpTable": "DWORD WINAPI GetExtendedUdpTable (PVOID pUdpTable, PDWORD pdwSize, WINBOOL bOrder, ULONG ulAf, UDP_TABLE_CLASS TableClass, ULONG Reserved);", "GetOwnerModuleFromUdpEntry": "DWORD WINAPI GetOwnerModuleFromUdpEntry (PMIB_UDPROW_OWNER_MODULE pUdpEntry, TCPIP_OWNER_MODULE_INFO_CLASS Class, PVOID pBuffer, PDWORD pdwSize);", "GetTcpTable2": "ULONG WINAPI GetTcpTable2 (PMIB_TCPTABLE2 TcpTable, PULONG SizePointer, WINBOOL Order);", "GetTcp6Table": "ULONG WINAPI GetTcp6Table (PMIB_TCP6TABLE TcpTable, PULONG SizePointer, WINBOOL Order);", "GetTcp6Table2": "ULONG WINAPI GetTcp6Table2 (PMIB_TCP6TABLE2 TcpTable, PULONG SizePointer, WINBOOL Order);", "GetPerTcpConnectionEStats": "ULONG WINAPI GetPerTcpConnectionEStats (PMIB_TCPROW Row, TCP_ESTATS_TYPE EstatsType, PUCHAR Rw, ULONG RwVersion, ULONG RwSize, PUCHAR Ros, ULONG RosVersion, ULONG RosSize, PUCHAR Rod, ULONG RodVersion, ULONG RodSize);", "SetPerTcpConnectionEStats": "ULONG WINAPI SetPerTcpConnectionEStats (PMIB_TCPROW Row, TCP_ESTATS_TYPE EstatsType, PUCHAR Rw, ULONG RwVersion, ULONG RwSize, ULONG Offset);", "GetPerTcp6ConnectionEStats": "ULONG WINAPI GetPerTcp6ConnectionEStats (PMIB_TCP6ROW Row, TCP_ESTATS_TYPE EstatsType, PUCHAR Rw, ULONG RwVersion, ULONG RwSize, PUCHAR Ros, ULONG RosVersion, ULONG RosSize, PUCHAR Rod, ULONG RodVersion, ULONG RodSize);", "SetPerTcp6ConnectionEStats": "ULONG WINAPI SetPerTcp6ConnectionEStats (PMIB_TCP6ROW Row, TCP_ESTATS_TYPE EstatsType, PUCHAR Rw, ULONG RwVersion, ULONG RwSize, ULONG Offset);", "GetUdp6Table": "ULONG WINAPI GetUdp6Table (PMIB_UDP6TABLE Udp6Table, PULONG SizePointer, WINBOOL Order);", "GetOwnerModuleFromTcp6Entry": "DWORD WINAPI GetOwnerModuleFromTcp6Entry (PMIB_TCP6ROW_OWNER_MODULE pTcpEntry, TCPIP_OWNER_MODULE_INFO_CLASS Class, PVOID pBuffer, PDWORD pdwSize);", "GetOwnerModuleFromUdp6Entry": "DWORD WINAPI GetOwnerModuleFromUdp6Entry (PMIB_UDP6ROW_OWNER_MODULE pUdpEntry, TCPIP_OWNER_MODULE_INFO_CLASS Class, PVOID pBuffer, PDWORD pdwSize);", "GetIpStatistics": "ULONG WINAPI GetIpStatistics (PMIB_IPSTATS Statistics);", "GetIcmpStatistics": "ULONG WINAPI GetIcmpStatistics (PMIB_ICMP Statistics);", "GetTcpStatistics": "ULONG WINAPI GetTcpStatistics (PMIB_TCPSTATS Statistics);", "GetUdpStatistics": "ULONG WINAPI GetUdpStatistics (PMIB_UDPSTATS Stats);", "GetIpStatisticsEx": "ULONG WINAPI GetIpStatisticsEx (PMIB_IPSTATS Statistics, ULONG Family);", "SetIpStatisticsEx": "ULONG WINAPI SetIpStatisticsEx (PMIB_IPSTATS Statistics, ULONG Family);", "GetIcmpStatisticsEx": "ULONG WINAPI GetIcmpStatisticsEx (PMIB_ICMP_EX Statistics, ULONG Family);", "GetTcpStatisticsEx": "ULONG WINAPI GetTcpStatisticsEx (PMIB_TCPSTATS Statistics, ULONG Family);", "GetUdpStatisticsEx": "ULONG WINAPI GetUdpStatisticsEx (PMIB_UDPSTATS Statistics, ULONG Family);", "SetIfEntry": "DWORD WINAPI SetIfEntry (PMIB_IFROW pIfRow);", "CreateIpForwardEntry": "DWORD WINAPI CreateIpForwardEntry (PMIB_IPFORWARDROW pRoute);", "SetIpForwardEntry": "DWORD WINAPI SetIpForwardEntry (PMIB_IPFORWARDROW pRoute);", "DeleteIpForwardEntry": "DWORD WINAPI DeleteIpForwardEntry (PMIB_IPFORWARDROW pRoute);", "SetIpStatistics": "DWORD WINAPI SetIpStatistics (PMIB_IPSTATS pIpStats);", "SetIpTTL": "DWORD WINAPI SetIpTTL (UINT nTTL);", "CreateIpNetEntry": "DWORD WINAPI CreateIpNetEntry (PMIB_IPNETROW pArpEntry);", "SetIpNetEntry": "DWORD WINAPI SetIpNetEntry (PMIB_IPNETROW pArpEntry);", "DeleteIpNetEntry": "DWORD WINAPI DeleteIpNetEntry (PMIB_IPNETROW pArpEntry);", "FlushIpNetTable": "DWORD WINAPI FlushIpNetTable (DWORD dwIfIndex);", "CreateProxyArpEntry": "DWORD WINAPI CreateProxyArpEntry (DWORD dwAddress, DWORD dwMask, DWORD dwIfIndex);", "DeleteProxyArpEntry": "DWORD WINAPI DeleteProxyArpEntry (DWORD dwAddress, DWORD dwMask, DWORD dwIfIndex);", "SetTcpEntry": "DWORD WINAPI SetTcpEntry (PMIB_TCPROW pTcpRow);", "GetInterfaceInfo": "DWORD WINAPI GetInterfaceInfo (PIP_INTERFACE_INFO pIfTable, PULONG dwOutBufLen);", "GetUniDirectionalAdapterInfo": "DWORD WINAPI GetUniDirectionalAdapterInfo (PIP_UNIDIRECTIONAL_ADAPTER_ADDRESS pIPIfInfo, PULONG dwOutBufLen);", "NhpAllocateAndGetInterfaceInfoFromStack": "DWORD WINAPI NhpAllocateAndGetInterfaceInfoFromStack (IP_INTERFACE_NAME_INFO **ppTable, PDWORD pdwCount, WINBOOL bOrder, HANDLE hHeap, DWORD dwFlags);", "GetBestInterface": "DWORD WINAPI GetBestInterface (IPAddr dwDestAddr, PDWORD pdwBestIfIndex);", "GetBestInterfaceEx": "DWORD WINAPI GetBestInterfaceEx (struct sockaddr *pDestAddr, PDWORD pdwBestIfIndex);", "GetBestRoute": "DWORD WINAPI GetBestRoute (DWORD dwDestAddr, DWORD dwSourceAddr, PMIB_IPFORWARDROW pBestRoute);", "NotifyAddrChange": "DWORD WINAPI NotifyAddrChange (PHANDLE Handle, LPOVERLAPPED overlapped);", "NotifyRouteChange": "DWORD WINAPI NotifyRouteChange (PHANDLE Handle, LPOVERLAPPED overlapped);", "CancelIPChangeNotify": "WINBOOL WINAPI CancelIPChangeNotify (LPOVERLAPPED notifyOverlapped);", "GetAdapterIndex": "DWORD WINAPI GetAdapterIndex (LPWSTR AdapterName, PULONG IfIndex);", "AddIPAddress": "DWORD WINAPI AddIPAddress (IPAddr Address, IPMask IpMask, DWORD IfIndex, PULONG NTEContext, PULONG NTEInstance);", "DeleteIPAddress": "DWORD WINAPI DeleteIPAddress (ULONG NTEContext);", "GetNetworkParams": "DWORD WINAPI GetNetworkParams (PFIXED_INFO pFixedInfo, PULONG pOutBufLen);", "GetAdaptersInfo": "ULONG WINAPI GetAdaptersInfo (PIP_ADAPTER_INFO AdapterInfo, PULONG SizePointer);", "GetAdapterOrderMap": "PIP_ADAPTER_ORDER_MAP WINAPI GetAdapterOrderMap (VOID);", "GetAdaptersAddresses": "ULONG WINAPI GetAdaptersAddresses (ULONG Family, ULONG Flags, PVOID Reserved, PIP_ADAPTER_ADDRESSES AdapterAddresses, PULONG SizePointer);", "GetPerAdapterInfo": "DWORD WINAPI GetPerAdapterInfo (ULONG IfIndex, PIP_PER_ADAPTER_INFO pPerAdapterInfo, PULONG pOutBufLen);", "IpReleaseAddress": "DWORD WINAPI IpReleaseAddress (PIP_ADAPTER_INDEX_MAP AdapterInfo);", "IpRenewAddress": "DWORD WINAPI IpRenewAddress (PIP_ADAPTER_INDEX_MAP AdapterInfo);", "SendARP": "DWORD WINAPI SendARP (IPAddr DestIP, IPAddr SrcIP, PVOID pMacAddr, PULONG PhyAddrLen);", "GetRTTAndHopCount": "WINBOOL WINAPI GetRTTAndHopCount (IPAddr DestIpAddress, PULONG HopCount, ULONG MaxHops, PULONG RTT);", "GetFriendlyIfIndex": "DWORD WINAPI GetFriendlyIfIndex (DWORD IfIndex);", "EnableRouter": "DWORD WINAPI EnableRouter (HANDLE *pHandle, OVERLAPPED *pOverlapped);", "UnenableRouter": "DWORD WINAPI UnenableRouter (OVERLAPPED *pOverlapped, LPDWORD lpdwEnableCount);", "DisableMediaSense": "DWORD WINAPI DisableMediaSense (HANDLE *pHandle, OVERLAPPED *pOverLapped);", "RestoreMediaSense": "DWORD WINAPI RestoreMediaSense (OVERLAPPED *pOverlapped, LPDWORD lpdwEnableCount);", "ParseNetworkString": "DWORD WINAPI ParseNetworkString (CONST WCHAR *NetworkString, DWORD Types, PNET_ADDRESS_INFO AddressInfo, USHORT *PortNumber, BYTE *PrefixLength);", "GetIpErrorString": "DWORD WINAPI GetIpErrorString (IP_STATUS ErrorCode, PWSTR Buffer, PDWORD Size);", "ResolveNeighbor": "ULONG WINAPI ResolveNeighbor (SOCKADDR *NetworkAddress, PVOID PhysicalAddress, PULONG PhysicalAddressLength);", "CreatePersistentTcpPortReservation": "ULONG WINAPI CreatePersistentTcpPortReservation (USHORT StartPort, USHORT NumberOfPorts, PULONG64 Token);", "CreatePersistentUdpPortReservation": "ULONG WINAPI CreatePersistentUdpPortReservation (USHORT StartPort, USHORT NumberOfPorts, PULONG64 Token);", "DeletePersistentTcpPortReservation": "ULONG WINAPI DeletePersistentTcpPortReservation (USHORT StartPort, USHORT NumberOfPorts);", "DeletePersistentUdpPortReservation": "ULONG WINAPI DeletePersistentUdpPortReservation (USHORT StartPort, USHORT NumberOfPorts);", "LookupPersistentTcpPortReservation": "ULONG WINAPI LookupPersistentTcpPortReservation (USHORT StartPort, USHORT NumberOfPorts, PULONG64 Token);", "LookupPersistentUdpPortReservation": "ULONG WINAPI LookupPersistentUdpPortReservation (USHORT StartPort, USHORT NumberOfPorts, PULONG64 Token);", "McastApiStartup": "DWORD WINAPI McastApiStartup(PDWORD Version);", "McastApiCleanup": "VOID WINAPI McastApiCleanup(VOID);", "McastGenUID": "DWORD WINAPI McastGenUID(LPMCAST_CLIENT_UID pRequestID);", "McastEnumerateScopes": "DWORD WINAPI McastEnumerateScopes(IP_ADDR_FAMILY AddrFamily,WINBOOL ReQuery,PMCAST_SCOPE_ENTRY pScopeList,PDWORD pScopeLen,PDWORD pScopeCount);", "McastRequestAddress": "DWORD WINAPI McastRequestAddress(IP_ADDR_FAMILY AddrFamily,LPMCAST_CLIENT_UID pRequestID,PMCAST_SCOPE_CTX pScopeCtx,PMCAST_LEASE_REQUEST pAddrRequest,PMCAST_LEASE_RESPONSE pAddrResponse);", "McastRenewAddress": "DWORD WINAPI McastRenewAddress(IP_ADDR_FAMILY AddrFamily,LPMCAST_CLIENT_UID pRequestID,PMCAST_LEASE_REQUEST pRenewRequest,PMCAST_LEASE_RESPONSE pRenewResponse);", "McastReleaseAddress": "DWORD WINAPI McastReleaseAddress(IP_ADDR_FAMILY AddrFamily,LPMCAST_CLIENT_UID pRequestID,PMCAST_LEASE_REQUEST pReleaseRequest);", "EapHostPeerQueryUserBlobFromCredentialInputFields": "DWORD WINAPI EapHostPeerQueryUserBlobFromCredentialInputFields(", "EapHostPeerFreeErrorMemory": "VOID WINAPI EapHostPeerFreeErrorMemory(", "EapHostPeerConfigBlob2Xml": "DWORD WINAPI EapHostPeerConfigBlob2Xml(", "EapHostPeerInvokeInteractiveUI": "DWORD WINAPI EapHostPeerInvokeInteractiveUI(", "EapHostPeerQueryInteractiveUIInputFields": "DWORD WINAPI EapHostPeerQueryInteractiveUIInputFields(", "EapHostPeerQueryUIBlobFromInteractiveUIInputFields": "DWORD WINAPI EapHostPeerQueryUIBlobFromInteractiveUIInputFields(", "EapHostPeerConfigXml2Blob": "DWORD WINAPI EapHostPeerConfigXml2Blob(", "EapHostPeerCredentialsXml2Blob": "DWORD WINAPI EapHostPeerCredentialsXml2Blob(", "EapHostPeerInvokeConfigUI": "DWORD WINAPI EapHostPeerInvokeConfigUI(", "EapHostPeerFreeMemory": "VOID WINAPI EapHostPeerFreeMemory(", "EapHostPeerQueryCredentialInputFields": "DWORD WINAPI EapHostPeerQueryCredentialInputFields(", "EapHostPeerGetMethods": "DWORD WINAPI EapHostPeerGetMethods(", "EapHostPeerInvokeIdentityUI": "DWORD WINAPI EapHostPeerInvokeIdentityUI(", "DXGIGetDebugInterface": "HRESULT WINAPI DXGIGetDebugInterface(REFIID riid, void **ppDebug);", "SendSAS": "VOID WINAPI SendSAS (WINBOOL AsUser);", "NetRemoteTOD": "NET_API_STATUS WINAPI NetRemoteTOD(LPCWSTR UncServerName,LPBYTE *BufferPtr);", "NetRemoteComputerSupports": "NET_API_STATUS WINAPI NetRemoteComputerSupports(LPCWSTR UncServerName,DWORD OptionsWanted,LPDWORD OptionsSupported);", "OpenThreadWaitChainSession": "HWCT WINAPI OpenThreadWaitChainSession(DWORD Flags,PWAITCHAINCALLBACK callback);", "CloseThreadWaitChainSession": "VOID WINAPI CloseThreadWaitChainSession(HWCT WctHandle);", "GetThreadWaitChain": "WINBOOL WINAPI GetThreadWaitChain(HWCT WctHandle,DWORD_PTR Context,DWORD Flags,DWORD ThreadId,LPDWORD NodeCount,PWAITCHAIN_NODE_INFO NodeInfoArray,LPBOOL IsCycle);", "RegisterWaitChainCOMCallback": "VOID WINAPI RegisterWaitChainCOMCallback(PCOGETCALLSTATE CallStateCallback,PCOGETACTIVATIONSTATE ActivationStateCallback);", "NtGdiInit": "W32KAPI WINBOOL WINAPI NtGdiInit();", "NtGdiSetDIBitsToDeviceInternal": "W32KAPI int WINAPI NtGdiSetDIBitsToDeviceInternal(HDC hdcDest,int xDst,int yDst,DWORD cx,DWORD cy,int xSrc,int ySrc,DWORD iStartScan,DWORD cNumScan,LPBYTE pInitBits,LPBITMAPINFO pbmi,DWORD iUsage,UINT cjMaxBits,UINT cjMaxInfo,WINBOOL bTransformCoordinates,HANDLE hcmXform);", "NtGdiGetFontResourceInfoInternalW": "W32KAPI WINBOOL WINAPI NtGdiGetFontResourceInfoInternalW(LPWSTR pwszFiles,ULONG cwc,ULONG cFiles,UINT cjIn,LPDWORD pdwBytes,LPVOID pvBuf,DWORD iType);", "NtGdiGetGlyphIndicesW": "W32KAPI DWORD WINAPI NtGdiGetGlyphIndicesW(HDC hdc,LPWSTR pwc,int cwc,LPWORD pgi,DWORD iMode);", "NtGdiGetGlyphIndicesWInternal": "W32KAPI DWORD WINAPI NtGdiGetGlyphIndicesWInternal(HDC hdc,LPWSTR pwc,int cwc,LPWORD pgi,DWORD iMode,WINBOOL bSubset);", "NtGdiCreatePaletteInternal": "W32KAPI HPALETTE WINAPI NtGdiCreatePaletteInternal(LPLOGPALETTE pLogPal,UINT cEntries);", "NtGdiArcInternal": "W32KAPI WINBOOL WINAPI NtGdiArcInternal(ARCTYPE arctype,HDC hdc,int x1,int y1,int x2,int y2,int x3,int y3,int x4,int y4);", "NtGdiStretchDIBitsInternal": "W32KAPI int WINAPI NtGdiStretchDIBitsInternal(HDC hdc,int xDst,int yDst,int cxDst,int cyDst,int xSrc,int ySrc,int cxSrc,int cySrc,LPBYTE pjInit,LPBITMAPINFO pbmi,DWORD dwUsage,DWORD dwRop4,UINT cjMaxInfo,UINT cjMaxBits,HANDLE hcmXform);", "NtGdiGetOutlineTextMetricsInternalW": "W32KAPI ULONG WINAPI NtGdiGetOutlineTextMetricsInternalW(HDC hdc,ULONG cjotm,OUTLINETEXTMETRICW *potmw,TMDIFF *ptmd);", "NtGdiGetAndSetDCDword": "W32KAPI WINBOOL WINAPI NtGdiGetAndSetDCDword(HDC hdc,UINT u,DWORD dwIn,DWORD *pdwResult);", "NtGdiGetDCObject": "W32KAPI HANDLE WINAPI NtGdiGetDCObject(HDC hdc,int itype);", "NtGdiGetDCforBitmap": "W32KAPI HDC WINAPI NtGdiGetDCforBitmap(HBITMAP hsurf);", "NtGdiGetMonitorID": "W32KAPI WINBOOL WINAPI NtGdiGetMonitorID(HDC hdc,DWORD dwSize,LPWSTR pszMonitorID);", "NtGdiGetLinkedUFIs": "W32KAPI INT WINAPI NtGdiGetLinkedUFIs(HDC hdc,PUNIVERSAL_FONT_ID pufiLinkedUFIs,INT BufferSize);", "NtGdiSetLinkedUFIs": "W32KAPI WINBOOL WINAPI NtGdiSetLinkedUFIs(HDC hdc,PUNIVERSAL_FONT_ID pufiLinks,ULONG uNumUFIs);", "NtGdiGetUFI": "W32KAPI WINBOOL WINAPI NtGdiGetUFI(HDC hdc,PUNIVERSAL_FONT_ID pufi,DESIGNVECTOR *pdv,ULONG *pcjDV,ULONG *pulBaseCheckSum,FLONG *pfl);", "NtGdiForceUFIMapping": "W32KAPI WINBOOL WINAPI NtGdiForceUFIMapping(HDC hdc,PUNIVERSAL_FONT_ID pufi);", "NtGdiGetUFIPathname": "W32KAPI WINBOOL WINAPI NtGdiGetUFIPathname(PUNIVERSAL_FONT_ID pufi,ULONG *pcwc,LPWSTR pwszPathname,ULONG *pcNumFiles,FLONG fl,WINBOOL *pbMemFont,ULONG *pcjView,PVOID pvView,WINBOOL *pbTTC,ULONG *piTTC);", "NtGdiAddRemoteFontToDC": "W32KAPI WINBOOL WINAPI NtGdiAddRemoteFontToDC(HDC hdc,PVOID pvBuffer,ULONG cjBuffer,PUNIVERSAL_FONT_ID pufi);", "NtGdiAddFontMemResourceEx": "W32KAPI HANDLE WINAPI NtGdiAddFontMemResourceEx(PVOID pvBuffer,DWORD cjBuffer,DESIGNVECTOR *pdv,ULONG cjDV,DWORD *pNumFonts);", "NtGdiRemoveFontMemResourceEx": "W32KAPI WINBOOL WINAPI NtGdiRemoveFontMemResourceEx(HANDLE hMMFont);", "NtGdiUnmapMemFont": "W32KAPI WINBOOL WINAPI NtGdiUnmapMemFont(PVOID pvView);", "NtGdiRemoveMergeFont": "W32KAPI WINBOOL WINAPI NtGdiRemoveMergeFont(HDC hdc,UNIVERSAL_FONT_ID *pufi);", "NtGdiAnyLinkedFonts": "W32KAPI WINBOOL WINAPI NtGdiAnyLinkedFonts();", "NtGdiGetEmbUFI": "W32KAPI WINBOOL WINAPI NtGdiGetEmbUFI(HDC hdc,PUNIVERSAL_FONT_ID pufi,DESIGNVECTOR *pdv,ULONG *pcjDV,ULONG *pulBaseCheckSum,FLONG *pfl,KERNEL_PVOID *embFontID);", "NtGdiGetEmbedFonts": "W32KAPI ULONG WINAPI NtGdiGetEmbedFonts();", "NtGdiChangeGhostFont": "W32KAPI WINBOOL WINAPI NtGdiChangeGhostFont(KERNEL_PVOID *pfontID,WINBOOL bLoad);", "NtGdiAddEmbFontToDC": "W32KAPI WINBOOL WINAPI NtGdiAddEmbFontToDC(HDC hdc,VOID **pFontID);", "NtGdiFontIsLinked": "W32KAPI WINBOOL WINAPI NtGdiFontIsLinked(HDC hdc);", "NtGdiPolyPolyDraw": "W32KAPI ULONG_PTR WINAPI NtGdiPolyPolyDraw(HDC hdc,PPOINT ppt,PULONG pcpt,ULONG ccpt,int iFunc);", "NtGdiDoPalette": "W32KAPI LONG WINAPI NtGdiDoPalette(HPALETTE hpal,WORD iStart,WORD cEntries,PALETTEENTRY *pPalEntries,DWORD iFunc,WINBOOL bInbound);", "NtGdiComputeXformCoefficients": "W32KAPI WINBOOL WINAPI NtGdiComputeXformCoefficients(HDC hdc);", "NtGdiGetWidthTable": "W32KAPI WINBOOL WINAPI NtGdiGetWidthTable(HDC hdc,ULONG cSpecial,WCHAR *pwc,ULONG cwc,USHORT *psWidth,WIDTHDATA *pwd,FLONG *pflInfo);", "NtGdiDescribePixelFormat": "W32KAPI int WINAPI NtGdiDescribePixelFormat(HDC hdc,int ipfd,UINT cjpfd,PPIXELFORMATDESCRIPTOR ppfd);", "NtGdiSetPixelFormat": "W32KAPI WINBOOL WINAPI NtGdiSetPixelFormat(HDC hdc,int ipfd);", "NtGdiSwapBuffers": "W32KAPI WINBOOL WINAPI NtGdiSwapBuffers(HDC hdc);", "NtGdiSetupPublicCFONT": "W32KAPI int WINAPI NtGdiSetupPublicCFONT(HDC hdc,HFONT hf,ULONG ulAve);", "NtGdiDxgGenericThunk": "W32KAPI DWORD WINAPI NtGdiDxgGenericThunk(ULONG_PTR ulIndex,ULONG_PTR ulHandle,SIZE_T *pdwSizeOfPtr1,PVOID pvPtr1,SIZE_T *pdwSizeOfPtr2,PVOID pvPtr2);", "NtGdiDdAddAttachedSurface": "W32KAPI DWORD WINAPI NtGdiDdAddAttachedSurface(HANDLE hSurface,HANDLE hSurfaceAttached,PDD_ADDATTACHEDSURFACEDATA puAddAttachedSurfaceData);", "NtGdiDdAttachSurface": "W32KAPI WINBOOL WINAPI NtGdiDdAttachSurface(HANDLE hSurfaceFrom,HANDLE hSurfaceTo);", "NtGdiDdBlt": "W32KAPI DWORD WINAPI NtGdiDdBlt(HANDLE hSurfaceDest,HANDLE hSurfaceSrc,PDD_BLTDATA puBltData);", "NtGdiDdCanCreateSurface": "W32KAPI DWORD WINAPI NtGdiDdCanCreateSurface(HANDLE hDirectDraw,PDD_CANCREATESURFACEDATA puCanCreateSurfaceData);", "NtGdiDdColorControl": "W32KAPI DWORD WINAPI NtGdiDdColorControl(HANDLE hSurface,PDD_COLORCONTROLDATA puColorControlData);", "NtGdiDdCreateDirectDrawObject": "W32KAPI HANDLE WINAPI NtGdiDdCreateDirectDrawObject(HDC hdc);", "NtGdiDdCreateSurface": "W32KAPI DWORD WINAPI NtGdiDdCreateSurface(HANDLE hDirectDraw,HANDLE *hSurface,DDSURFACEDESC *puSurfaceDescription,DD_SURFACE_GLOBAL *puSurfaceGlobalData,DD_SURFACE_LOCAL *puSurfaceLocalData,DD_SURFACE_MORE *puSurfaceMoreData,DD_CREATESURFACEDATA *puCreateSurfaceData,HANDLE *puhSurface);", "NtGdiDdCreateSurfaceObject": "W32KAPI HANDLE WINAPI NtGdiDdCreateSurfaceObject(HANDLE hDirectDrawLocal,HANDLE hSurface,PDD_SURFACE_LOCAL puSurfaceLocal,PDD_SURFACE_MORE puSurfaceMore,PDD_SURFACE_GLOBAL puSurfaceGlobal,WINBOOL bComplete);", "NtGdiDdDeleteSurfaceObject": "W32KAPI WINBOOL WINAPI NtGdiDdDeleteSurfaceObject(HANDLE hSurface);", "NtGdiDdDeleteDirectDrawObject": "W32KAPI WINBOOL WINAPI NtGdiDdDeleteDirectDrawObject(HANDLE hDirectDrawLocal);", "NtGdiDdDestroySurface": "W32KAPI DWORD WINAPI NtGdiDdDestroySurface(HANDLE hSurface,WINBOOL bRealDestroy);", "NtGdiDdFlip": "W32KAPI DWORD WINAPI NtGdiDdFlip(HANDLE hSurfaceCurrent,HANDLE hSurfaceTarget,HANDLE hSurfaceCurrentLeft,HANDLE hSurfaceTargetLeft,PDD_FLIPDATA puFlipData);", "NtGdiDdGetAvailDriverMemory": "W32KAPI DWORD WINAPI NtGdiDdGetAvailDriverMemory(HANDLE hDirectDraw,PDD_GETAVAILDRIVERMEMORYDATA puGetAvailDriverMemoryData);", "NtGdiDdGetBltStatus": "W32KAPI DWORD WINAPI NtGdiDdGetBltStatus(HANDLE hSurface,PDD_GETBLTSTATUSDATA puGetBltStatusData);", "NtGdiDdGetDC": "W32KAPI HDC WINAPI NtGdiDdGetDC(HANDLE hSurface,PALETTEENTRY *puColorTable);", "NtGdiDdGetDriverInfo": "W32KAPI DWORD WINAPI NtGdiDdGetDriverInfo(HANDLE hDirectDraw,PDD_GETDRIVERINFODATA puGetDriverInfoData);", "NtGdiDdGetFlipStatus": "W32KAPI DWORD WINAPI NtGdiDdGetFlipStatus(HANDLE hSurface,PDD_GETFLIPSTATUSDATA puGetFlipStatusData);", "NtGdiDdGetScanLine": "W32KAPI DWORD WINAPI NtGdiDdGetScanLine(HANDLE hDirectDraw,PDD_GETSCANLINEDATA puGetScanLineData);", "NtGdiDdSetExclusiveMode": "W32KAPI DWORD WINAPI NtGdiDdSetExclusiveMode(HANDLE hDirectDraw,PDD_SETEXCLUSIVEMODEDATA puSetExclusiveModeData);", "NtGdiDdFlipToGDISurface": "W32KAPI DWORD WINAPI NtGdiDdFlipToGDISurface(HANDLE hDirectDraw,PDD_FLIPTOGDISURFACEDATA puFlipToGDISurfaceData);", "NtGdiDdLock": "W32KAPI DWORD WINAPI NtGdiDdLock(HANDLE hSurface,PDD_LOCKDATA puLockData,HDC hdcClip);", "NtGdiDdQueryDirectDrawObject": "W32KAPI WINBOOL WINAPI NtGdiDdQueryDirectDrawObject(HANDLE hDirectDrawLocal,PDD_HALINFO pHalInfo,DWORD *pCallBackFlags,LPD3DNTHAL_CALLBACKS puD3dCallbacks,LPD3DNTHAL_GLOBALDRIVERDATA puD3dDriverData,PDD_D3DBUFCALLBACKS puD3dBufferCallbacks,LPDDSURFACEDESC puD3dTextureFormats,DWORD *puNumHeaps,VIDEOMEMORY *puvmList,DWORD *puNumFourCC,DWORD *puFourCC);", "NtGdiDdReenableDirectDrawObject": "W32KAPI WINBOOL WINAPI NtGdiDdReenableDirectDrawObject(HANDLE hDirectDrawLocal,WINBOOL *pubNewMode);", "NtGdiDdReleaseDC": "W32KAPI WINBOOL WINAPI NtGdiDdReleaseDC(HANDLE hSurface);", "NtGdiDdResetVisrgn": "W32KAPI WINBOOL WINAPI NtGdiDdResetVisrgn(HANDLE hSurface,HWND hwnd);", "NtGdiDdSetColorKey": "W32KAPI DWORD WINAPI NtGdiDdSetColorKey(HANDLE hSurface,PDD_SETCOLORKEYDATA puSetColorKeyData);", "NtGdiDdSetOverlayPosition": "W32KAPI DWORD WINAPI NtGdiDdSetOverlayPosition(HANDLE hSurfaceSource,HANDLE hSurfaceDestination,PDD_SETOVERLAYPOSITIONDATA puSetOverlayPositionData);", "NtGdiDdUnattachSurface": "W32KAPI VOID WINAPI NtGdiDdUnattachSurface(HANDLE hSurface,HANDLE hSurfaceAttached);", "NtGdiDdUnlock": "W32KAPI DWORD WINAPI NtGdiDdUnlock(HANDLE hSurface,PDD_UNLOCKDATA puUnlockData);", "NtGdiDdUpdateOverlay": "W32KAPI DWORD WINAPI NtGdiDdUpdateOverlay(HANDLE hSurfaceDestination,HANDLE hSurfaceSource,PDD_UPDATEOVERLAYDATA puUpdateOverlayData);", "NtGdiDdWaitForVerticalBlank": "W32KAPI DWORD WINAPI NtGdiDdWaitForVerticalBlank(HANDLE hDirectDraw,PDD_WAITFORVERTICALBLANKDATA puWaitForVerticalBlankData);", "NtGdiDdGetDxHandle": "W32KAPI HANDLE WINAPI NtGdiDdGetDxHandle(HANDLE hDirectDraw,HANDLE hSurface,WINBOOL bRelease);", "NtGdiDdSetGammaRamp": "W32KAPI WINBOOL WINAPI NtGdiDdSetGammaRamp(HANDLE hDirectDraw,HDC hdc,LPVOID lpGammaRamp);", "NtGdiDdLockD3D": "W32KAPI DWORD WINAPI NtGdiDdLockD3D(HANDLE hSurface,PDD_LOCKDATA puLockData);", "NtGdiDdUnlockD3D": "W32KAPI DWORD WINAPI NtGdiDdUnlockD3D(HANDLE hSurface,PDD_UNLOCKDATA puUnlockData);", "NtGdiDdCreateD3DBuffer": "W32KAPI DWORD WINAPI NtGdiDdCreateD3DBuffer(HANDLE hDirectDraw,HANDLE *hSurface,DDSURFACEDESC *puSurfaceDescription,DD_SURFACE_GLOBAL *puSurfaceGlobalData,DD_SURFACE_LOCAL *puSurfaceLocalData,DD_SURFACE_MORE *puSurfaceMoreData,DD_CREATESURFACEDATA *puCreateSurfaceData,HANDLE *puhSurface);", "NtGdiDdCanCreateD3DBuffer": "W32KAPI DWORD WINAPI NtGdiDdCanCreateD3DBuffer(HANDLE hDirectDraw,PDD_CANCREATESURFACEDATA puCanCreateSurfaceData);", "NtGdiDdDestroyD3DBuffer": "W32KAPI DWORD WINAPI NtGdiDdDestroyD3DBuffer(HANDLE hSurface);", "NtGdiD3dContextCreate": "W32KAPI DWORD WINAPI NtGdiD3dContextCreate(HANDLE hDirectDrawLocal,HANDLE hSurfColor,HANDLE hSurfZ,D3DNTHAL_CONTEXTCREATEI *pdcci);", "NtGdiD3dContextDestroy": "W32KAPI DWORD WINAPI NtGdiD3dContextDestroy(LPD3DNTHAL_CONTEXTDESTROYDATA);", "NtGdiD3dContextDestroyAll": "W32KAPI DWORD WINAPI NtGdiD3dContextDestroyAll(LPD3DNTHAL_CONTEXTDESTROYALLDATA pdcdad);", "NtGdiD3dValidateTextureStageState": "W32KAPI DWORD WINAPI NtGdiD3dValidateTextureStageState(LPD3DNTHAL_VALIDATETEXTURESTAGESTATEDATA pData);", "NtGdiD3dDrawPrimitives2": "W32KAPI DWORD WINAPI NtGdiD3dDrawPrimitives2(HANDLE hCmdBuf,HANDLE hVBuf,LPD3DNTHAL_DRAWPRIMITIVES2DATA pded,FLATPTR *pfpVidMemCmd,DWORD *pdwSizeCmd,FLATPTR *pfpVidMemVtx,DWORD *pdwSizeVtx);", "NtGdiDdGetDriverState": "W32KAPI DWORD WINAPI NtGdiDdGetDriverState(PDD_GETDRIVERSTATEDATA pdata);", "NtGdiDdCreateSurfaceEx": "W32KAPI DWORD WINAPI NtGdiDdCreateSurfaceEx(HANDLE hDirectDraw,HANDLE hSurface,DWORD dwSurfaceHandle);", "NtGdiDvpCanCreateVideoPort": "W32KAPI DWORD WINAPI NtGdiDvpCanCreateVideoPort(HANDLE hDirectDraw,PDD_CANCREATEVPORTDATA puCanCreateVPortData);", "NtGdiDvpColorControl": "W32KAPI DWORD WINAPI NtGdiDvpColorControl(HANDLE hVideoPort,PDD_VPORTCOLORDATA puVPortColorData);", "NtGdiDvpCreateVideoPort": "W32KAPI HANDLE WINAPI NtGdiDvpCreateVideoPort(HANDLE hDirectDraw,PDD_CREATEVPORTDATA puCreateVPortData);", "NtGdiDvpDestroyVideoPort": "W32KAPI DWORD WINAPI NtGdiDvpDestroyVideoPort(HANDLE hVideoPort,PDD_DESTROYVPORTDATA puDestroyVPortData);", "NtGdiDvpFlipVideoPort": "W32KAPI DWORD WINAPI NtGdiDvpFlipVideoPort(HANDLE hVideoPort,HANDLE hDDSurfaceCurrent,HANDLE hDDSurfaceTarget,PDD_FLIPVPORTDATA puFlipVPortData);", "NtGdiDvpGetVideoPortBandwidth": "W32KAPI DWORD WINAPI NtGdiDvpGetVideoPortBandwidth(HANDLE hVideoPort,PDD_GETVPORTBANDWIDTHDATA puGetVPortBandwidthData);", "NtGdiDvpGetVideoPortField": "W32KAPI DWORD WINAPI NtGdiDvpGetVideoPortField(HANDLE hVideoPort,PDD_GETVPORTFIELDDATA puGetVPortFieldData);", "NtGdiDvpGetVideoPortFlipStatus": "W32KAPI DWORD WINAPI NtGdiDvpGetVideoPortFlipStatus(HANDLE hDirectDraw,PDD_GETVPORTFLIPSTATUSDATA puGetVPortFlipStatusData);", "NtGdiDvpGetVideoPortInputFormats": "W32KAPI DWORD WINAPI NtGdiDvpGetVideoPortInputFormats(HANDLE hVideoPort,PDD_GETVPORTINPUTFORMATDATA puGetVPortInputFormatData);", "NtGdiDvpGetVideoPortLine": "W32KAPI DWORD WINAPI NtGdiDvpGetVideoPortLine(HANDLE hVideoPort,PDD_GETVPORTLINEDATA puGetVPortLineData);", "NtGdiDvpGetVideoPortOutputFormats": "W32KAPI DWORD WINAPI NtGdiDvpGetVideoPortOutputFormats(HANDLE hVideoPort,PDD_GETVPORTOUTPUTFORMATDATA puGetVPortOutputFormatData);", "NtGdiDvpGetVideoPortConnectInfo": "W32KAPI DWORD WINAPI NtGdiDvpGetVideoPortConnectInfo(HANDLE hDirectDraw,PDD_GETVPORTCONNECTDATA puGetVPortConnectData);", "NtGdiDvpGetVideoSignalStatus": "W32KAPI DWORD WINAPI NtGdiDvpGetVideoSignalStatus(HANDLE hVideoPort,PDD_GETVPORTSIGNALDATA puGetVPortSignalData);", "NtGdiDvpUpdateVideoPort": "W32KAPI DWORD WINAPI NtGdiDvpUpdateVideoPort(HANDLE hVideoPort,HANDLE *phSurfaceVideo,HANDLE *phSurfaceVbi,PDD_UPDATEVPORTDATA puUpdateVPortData);", "NtGdiDvpWaitForVideoPortSync": "W32KAPI DWORD WINAPI NtGdiDvpWaitForVideoPortSync(HANDLE hVideoPort,PDD_WAITFORVPORTSYNCDATA puWaitForVPortSyncData);", "NtGdiDvpAcquireNotification": "W32KAPI DWORD WINAPI NtGdiDvpAcquireNotification(HANDLE hVideoPort,HANDLE *hEvent,LPDDVIDEOPORTNOTIFY pNotify);", "NtGdiDvpReleaseNotification": "W32KAPI DWORD WINAPI NtGdiDvpReleaseNotification(HANDLE hVideoPort,HANDLE hEvent);", "NtGdiDdGetMoCompGuids": "W32KAPI DWORD WINAPI NtGdiDdGetMoCompGuids(HANDLE hDirectDraw,PDD_GETMOCOMPGUIDSDATA puGetMoCompGuidsData);", "NtGdiDdGetMoCompFormats": "W32KAPI DWORD WINAPI NtGdiDdGetMoCompFormats(HANDLE hDirectDraw,PDD_GETMOCOMPFORMATSDATA puGetMoCompFormatsData);", "NtGdiDdGetMoCompBuffInfo": "W32KAPI DWORD WINAPI NtGdiDdGetMoCompBuffInfo(HANDLE hDirectDraw,PDD_GETMOCOMPCOMPBUFFDATA puGetBuffData);", "NtGdiDdGetInternalMoCompInfo": "W32KAPI DWORD WINAPI NtGdiDdGetInternalMoCompInfo(HANDLE hDirectDraw,PDD_GETINTERNALMOCOMPDATA puGetInternalData);", "NtGdiDdCreateMoComp": "W32KAPI HANDLE WINAPI NtGdiDdCreateMoComp(HANDLE hDirectDraw,PDD_CREATEMOCOMPDATA puCreateMoCompData);", "NtGdiDdDestroyMoComp": "W32KAPI DWORD WINAPI NtGdiDdDestroyMoComp(HANDLE hMoComp,PDD_DESTROYMOCOMPDATA puDestroyMoCompData);", "NtGdiDdBeginMoCompFrame": "W32KAPI DWORD WINAPI NtGdiDdBeginMoCompFrame(HANDLE hMoComp,PDD_BEGINMOCOMPFRAMEDATA puBeginFrameData);", "NtGdiDdEndMoCompFrame": "W32KAPI DWORD WINAPI NtGdiDdEndMoCompFrame(HANDLE hMoComp,PDD_ENDMOCOMPFRAMEDATA puEndFrameData);", "NtGdiDdRenderMoComp": "W32KAPI DWORD WINAPI NtGdiDdRenderMoComp(HANDLE hMoComp,PDD_RENDERMOCOMPDATA puRenderMoCompData);", "NtGdiDdQueryMoCompStatus": "W32KAPI DWORD WINAPI NtGdiDdQueryMoCompStatus(HANDLE hMoComp,PDD_QUERYMOCOMPSTATUSDATA puQueryMoCompStatusData);", "NtGdiDdAlphaBlt": "W32KAPI DWORD WINAPI NtGdiDdAlphaBlt(HANDLE hSurfaceDest,HANDLE hSurfaceSrc,PDD_BLTDATA puBltData);", "NtGdiAlphaBlend": "W32KAPI WINBOOL WINAPI NtGdiAlphaBlend(HDC hdcDst,LONG DstX,LONG DstY,LONG DstCx,LONG DstCy,HDC hdcSrc,LONG SrcX,LONG SrcY,LONG SrcCx,LONG SrcCy,BLENDFUNCTION BlendFunction,HANDLE hcmXform);", "NtGdiGradientFill": "W32KAPI WINBOOL WINAPI NtGdiGradientFill(HDC hdc,PTRIVERTEX pVertex,ULONG nVertex,PVOID pMesh,ULONG nMesh,ULONG ulMode);", "NtGdiSetIcmMode": "W32KAPI WINBOOL WINAPI NtGdiSetIcmMode(HDC hdc,ULONG nCommand,ULONG ulMode);", "NtGdiCreateColorSpace": "W32KAPI HANDLE WINAPI NtGdiCreateColorSpace(PLOGCOLORSPACEEXW pLogColorSpace);", "NtGdiDeleteColorSpace": "W32KAPI WINBOOL WINAPI NtGdiDeleteColorSpace(HANDLE hColorSpace);", "NtGdiSetColorSpace": "W32KAPI WINBOOL WINAPI NtGdiSetColorSpace(HDC hdc,HCOLORSPACE hColorSpace);", "NtGdiCreateColorTransform": "W32KAPI HANDLE WINAPI NtGdiCreateColorTransform(HDC hdc,LPLOGCOLORSPACEW pLogColorSpaceW,PVOID pvSrcProfile,ULONG cjSrcProfile,PVOID pvDestProfile,ULONG cjDestProfile,PVOID pvTargetProfile,ULONG cjTargetProfile);", "NtGdiDeleteColorTransform": "W32KAPI WINBOOL WINAPI NtGdiDeleteColorTransform(HDC hdc,HANDLE hColorTransform);", "NtGdiCheckBitmapBits": "W32KAPI WINBOOL WINAPI NtGdiCheckBitmapBits(HDC hdc,HANDLE hColorTransform,PVOID pvBits,ULONG bmFormat,DWORD dwWidth,DWORD dwHeight,DWORD dwStride,PBYTE paResults);", "NtGdiColorCorrectPalette": "W32KAPI ULONG WINAPI NtGdiColorCorrectPalette(HDC hdc,HPALETTE hpal,ULONG FirstEntry,ULONG NumberOfEntries,PALETTEENTRY *ppalEntry,ULONG Command);", "NtGdiGetColorSpaceforBitmap": "W32KAPI ULONG_PTR WINAPI NtGdiGetColorSpaceforBitmap(HBITMAP hsurf);", "NtGdiGetDeviceGammaRamp": "W32KAPI WINBOOL WINAPI NtGdiGetDeviceGammaRamp(HDC hdc,LPVOID lpGammaRamp);", "NtGdiSetDeviceGammaRamp": "W32KAPI WINBOOL WINAPI NtGdiSetDeviceGammaRamp(HDC hdc,LPVOID lpGammaRamp);", "NtGdiIcmBrushInfo": "W32KAPI WINBOOL WINAPI NtGdiIcmBrushInfo(HDC hdc,HBRUSH hbrush,PBITMAPINFO pbmiDIB,PVOID pvBits,ULONG *pulBits,DWORD *piUsage,WINBOOL *pbAlreadyTran,ULONG Command);", "NtGdiFlush": "W32KAPI VOID WINAPI NtGdiFlush();", "NtGdiCreateMetafileDC": "W32KAPI HDC WINAPI NtGdiCreateMetafileDC(HDC hdc);", "NtGdiMakeInfoDC": "W32KAPI WINBOOL WINAPI NtGdiMakeInfoDC(HDC hdc,WINBOOL bSet);", "NtGdiCreateClientObj": "W32KAPI HANDLE WINAPI NtGdiCreateClientObj(ULONG ulType);", "NtGdiDeleteClientObj": "W32KAPI WINBOOL WINAPI NtGdiDeleteClientObj(HANDLE h);", "NtGdiGetBitmapBits": "W32KAPI LONG WINAPI NtGdiGetBitmapBits(HBITMAP hbm,ULONG cjMax,PBYTE pjOut);", "NtGdiDeleteObjectApp": "W32KAPI WINBOOL WINAPI NtGdiDeleteObjectApp(HANDLE hobj);", "NtGdiGetPath": "W32KAPI int WINAPI NtGdiGetPath(HDC hdc,LPPOINT pptlBuf,LPBYTE pjTypes,int cptBuf);", "NtGdiCreateCompatibleDC": "W32KAPI HDC WINAPI NtGdiCreateCompatibleDC(HDC hdc);", "NtGdiCreateDIBitmapInternal": "W32KAPI HBITMAP WINAPI NtGdiCreateDIBitmapInternal(HDC hdc,INT cx,INT cy,DWORD fInit,LPBYTE pjInit,LPBITMAPINFO pbmi,DWORD iUsage,UINT cjMaxInitInfo,UINT cjMaxBits,FLONG f,HANDLE hcmXform);", "NtGdiCreateDIBSection": "W32KAPI HBITMAP WINAPI NtGdiCreateDIBSection(HDC hdc,HANDLE hSectionApp,DWORD dwOffset,LPBITMAPINFO pbmi,DWORD iUsage,UINT cjHeader,FLONG fl,ULONG_PTR dwColorSpace,PVOID *ppvBits);", "NtGdiCreateSolidBrush": "W32KAPI HBRUSH WINAPI NtGdiCreateSolidBrush(COLORREF cr,HBRUSH hbr);", "NtGdiCreateDIBBrush": "W32KAPI HBRUSH WINAPI NtGdiCreateDIBBrush(PVOID pv,FLONG fl,UINT cj,WINBOOL b8X8,WINBOOL bPen,PVOID pClient);", "NtGdiCreatePatternBrushInternal": "W32KAPI HBRUSH WINAPI NtGdiCreatePatternBrushInternal(HBITMAP hbm,WINBOOL bPen,WINBOOL b8X8);", "NtGdiCreateHatchBrushInternal": "W32KAPI HBRUSH WINAPI NtGdiCreateHatchBrushInternal(ULONG ulStyle,COLORREF clrr,WINBOOL bPen);", "NtGdiExtCreatePen": "W32KAPI HPEN WINAPI NtGdiExtCreatePen(ULONG flPenStyle,ULONG ulWidth,ULONG iBrushStyle,ULONG ulColor,ULONG_PTR lClientHatch,ULONG_PTR lHatch,ULONG cstyle,PULONG pulStyle,ULONG cjDIB,WINBOOL bOldStylePen,HBRUSH hbrush);", "NtGdiCreateEllipticRgn": "W32KAPI HRGN WINAPI NtGdiCreateEllipticRgn(int xLeft,int yTop,int xRight,int yBottom);", "NtGdiCreateRoundRectRgn": "W32KAPI HRGN WINAPI NtGdiCreateRoundRectRgn(int xLeft,int yTop,int xRight,int yBottom,int xWidth,int yHeight);", "NtGdiCreateServerMetaFile": "W32KAPI HANDLE WINAPI NtGdiCreateServerMetaFile(DWORD iType,ULONG cjData,LPBYTE pjData,DWORD mm,DWORD xExt,DWORD yExt);", "NtGdiExtCreateRegion": "W32KAPI HRGN WINAPI NtGdiExtCreateRegion(LPXFORM px,DWORD cj,LPRGNDATA prgn);", "NtGdiMakeFontDir": "W32KAPI ULONG WINAPI NtGdiMakeFontDir(FLONG flEmbed,PBYTE pjFontDir,unsigned cjFontDir,LPWSTR pwszPathname,unsigned cjPathname);", "NtGdiPolyDraw": "W32KAPI WINBOOL WINAPI NtGdiPolyDraw(HDC hdc,LPPOINT ppt,LPBYTE pjAttr,ULONG cpt);", "NtGdiPolyTextOutW": "W32KAPI WINBOOL WINAPI NtGdiPolyTextOutW(HDC hdc,POLYTEXTW *pptw,UINT cStr,DWORD dwCodePage);", "NtGdiGetServerMetaFileBits": "W32KAPI ULONG WINAPI NtGdiGetServerMetaFileBits(HANDLE hmo,ULONG cjData,LPBYTE pjData,PDWORD piType,PDWORD pmm,PDWORD pxExt,PDWORD pyExt);", "NtGdiEqualRgn": "W32KAPI WINBOOL WINAPI NtGdiEqualRgn(HRGN hrgn1,HRGN hrgn2);", "NtGdiGetBitmapDimension": "W32KAPI WINBOOL WINAPI NtGdiGetBitmapDimension(HBITMAP hbm,LPSIZE psize);", "NtGdiGetNearestPaletteIndex": "W32KAPI UINT WINAPI NtGdiGetNearestPaletteIndex(HPALETTE hpal,COLORREF crColor);", "NtGdiPtVisible": "W32KAPI WINBOOL WINAPI NtGdiPtVisible(HDC hdc,int x,int y);", "NtGdiRectVisible": "W32KAPI WINBOOL WINAPI NtGdiRectVisible(HDC hdc,LPRECT prc);", "NtGdiRemoveFontResourceW": "W32KAPI WINBOOL WINAPI NtGdiRemoveFontResourceW(WCHAR *pwszFiles,ULONG cwc,ULONG cFiles,ULONG fl,DWORD dwPidTid,DESIGNVECTOR *pdv);", "NtGdiResizePalette": "W32KAPI WINBOOL WINAPI NtGdiResizePalette(HPALETTE hpal,UINT cEntry);", "NtGdiSetBitmapDimension": "W32KAPI WINBOOL WINAPI NtGdiSetBitmapDimension(HBITMAP hbm,int cx,int cy,LPSIZE psizeOut);", "NtGdiOffsetClipRgn": "W32KAPI int WINAPI NtGdiOffsetClipRgn(HDC hdc,int x,int y);", "NtGdiSetMetaRgn": "W32KAPI int WINAPI NtGdiSetMetaRgn(HDC hdc);", "NtGdiSetTextJustification": "W32KAPI WINBOOL WINAPI NtGdiSetTextJustification(HDC hdc,int lBreakExtra,int cBreak);", "NtGdiGetAppClipBox": "W32KAPI int WINAPI NtGdiGetAppClipBox(HDC hdc,LPRECT prc);", "NtGdiGetTextExtentExW": "W32KAPI WINBOOL WINAPI NtGdiGetTextExtentExW(HDC hdc,LPWSTR lpwsz,ULONG cwc,ULONG dxMax,ULONG *pcCh,PULONG pdxOut,LPSIZE psize,FLONG fl);", "NtGdiGetCharABCWidthsW": "W32KAPI WINBOOL WINAPI NtGdiGetCharABCWidthsW(HDC hdc,UINT wchFirst,ULONG cwch,PWCHAR pwch,FLONG fl,PVOID pvBuf);", "NtGdiGetCharacterPlacementW": "W32KAPI DWORD WINAPI NtGdiGetCharacterPlacementW(HDC hdc,LPWSTR pwsz,int nCount,int nMaxExtent,LPGCP_RESULTSW pgcpw,DWORD dwFlags);", "NtGdiAngleArc": "W32KAPI WINBOOL WINAPI NtGdiAngleArc(HDC hdc,int x,int y,DWORD dwRadius,DWORD dwStartAngle,DWORD dwSweepAngle);", "NtGdiBeginPath": "W32KAPI WINBOOL WINAPI NtGdiBeginPath(HDC hdc);", "NtGdiSelectClipPath": "W32KAPI WINBOOL WINAPI NtGdiSelectClipPath(HDC hdc,int iMode);", "NtGdiCloseFigure": "W32KAPI WINBOOL WINAPI NtGdiCloseFigure(HDC hdc);", "NtGdiEndPath": "W32KAPI WINBOOL WINAPI NtGdiEndPath(HDC hdc);", "NtGdiAbortPath": "W32KAPI WINBOOL WINAPI NtGdiAbortPath(HDC hdc);", "NtGdiFillPath": "W32KAPI WINBOOL WINAPI NtGdiFillPath(HDC hdc);", "NtGdiStrokeAndFillPath": "W32KAPI WINBOOL WINAPI NtGdiStrokeAndFillPath(HDC hdc);", "NtGdiStrokePath": "W32KAPI WINBOOL WINAPI NtGdiStrokePath(HDC hdc);", "NtGdiWidenPath": "W32KAPI WINBOOL WINAPI NtGdiWidenPath(HDC hdc);", "NtGdiFlattenPath": "W32KAPI WINBOOL WINAPI NtGdiFlattenPath(HDC hdc);", "NtGdiPathToRegion": "W32KAPI HRGN WINAPI NtGdiPathToRegion(HDC hdc);", "NtGdiSetMiterLimit": "W32KAPI WINBOOL WINAPI NtGdiSetMiterLimit(HDC hdc,DWORD dwNew,PDWORD pdwOut);", "NtGdiSetFontXform": "W32KAPI WINBOOL WINAPI NtGdiSetFontXform(HDC hdc,DWORD dwxScale,DWORD dwyScale);", "NtGdiGetMiterLimit": "W32KAPI WINBOOL WINAPI NtGdiGetMiterLimit(HDC hdc,PDWORD pdwOut);", "NtGdiEllipse": "W32KAPI WINBOOL WINAPI NtGdiEllipse(HDC hdc,int xLeft,int yTop,int xRight,int yBottom);", "NtGdiRectangle": "W32KAPI WINBOOL WINAPI NtGdiRectangle(HDC hdc,int xLeft,int yTop,int xRight,int yBottom);", "NtGdiRoundRect": "W32KAPI WINBOOL WINAPI NtGdiRoundRect(HDC hdc,int x1,int y1,int x2,int y2,int x3,int y3);", "NtGdiPlgBlt": "W32KAPI WINBOOL WINAPI NtGdiPlgBlt(HDC hdcTrg,LPPOINT pptlTrg,HDC hdcSrc,int xSrc,int ySrc,int cxSrc,int cySrc,HBITMAP hbmMask,int xMask,int yMask,DWORD crBackColor);", "NtGdiMaskBlt": "W32KAPI WINBOOL WINAPI NtGdiMaskBlt(HDC hdc,int xDst,int yDst,int cx,int cy,HDC hdcSrc,int xSrc,int ySrc,HBITMAP hbmMask,int xMask,int yMask,DWORD dwRop4,DWORD crBackColor);", "NtGdiExtFloodFill": "W32KAPI WINBOOL WINAPI NtGdiExtFloodFill(HDC hdc,INT x,INT y,COLORREF crColor,UINT iFillType);", "NtGdiFillRgn": "W32KAPI WINBOOL WINAPI NtGdiFillRgn(HDC hdc,HRGN hrgn,HBRUSH hbrush);", "NtGdiFrameRgn": "W32KAPI WINBOOL WINAPI NtGdiFrameRgn(HDC hdc,HRGN hrgn,HBRUSH hbrush,int xWidth,int yHeight);", "NtGdiSetPixel": "W32KAPI COLORREF WINAPI NtGdiSetPixel(HDC hdcDst,int x,int y,COLORREF crColor);", "NtGdiGetPixel": "W32KAPI DWORD WINAPI NtGdiGetPixel(HDC hdc,int x,int y);", "NtGdiStartPage": "W32KAPI WINBOOL WINAPI NtGdiStartPage(HDC hdc);", "NtGdiEndPage": "W32KAPI WINBOOL WINAPI NtGdiEndPage(HDC hdc);", "NtGdiStartDoc": "W32KAPI int WINAPI NtGdiStartDoc(HDC hdc,DOCINFOW *pdi,WINBOOL *pbBanding,INT iJob);", "NtGdiEndDoc": "W32KAPI WINBOOL WINAPI NtGdiEndDoc(HDC hdc);", "NtGdiAbortDoc": "W32KAPI WINBOOL WINAPI NtGdiAbortDoc(HDC hdc);", "NtGdiUpdateColors": "W32KAPI WINBOOL WINAPI NtGdiUpdateColors(HDC hdc);", "NtGdiGetCharWidthW": "W32KAPI WINBOOL WINAPI NtGdiGetCharWidthW(HDC hdc,UINT wcFirst,UINT cwc,PWCHAR pwc,FLONG fl,PVOID pvBuf);", "NtGdiGetCharWidthInfo": "W32KAPI WINBOOL WINAPI NtGdiGetCharWidthInfo(HDC hdc,PCHWIDTHINFO pChWidthInfo);", "NtGdiDrawEscape": "W32KAPI int WINAPI NtGdiDrawEscape(HDC hdc,int iEsc,int cjIn,LPSTR pjIn);", "NtGdiExtEscape": "W32KAPI int WINAPI NtGdiExtEscape(HDC hdc,PWCHAR pDriver,int nDriver,int iEsc,int cjIn,LPSTR pjIn,int cjOut,LPSTR pjOut);", "NtGdiGetFontData": "W32KAPI ULONG WINAPI NtGdiGetFontData(HDC hdc,DWORD dwTable,DWORD dwOffset,PVOID pvBuf,ULONG cjBuf);", "NtGdiGetGlyphOutline": "W32KAPI ULONG WINAPI NtGdiGetGlyphOutline(HDC hdc,WCHAR wch,UINT iFormat,LPGLYPHMETRICS pgm,ULONG cjBuf,PVOID pvBuf,LPMAT2 pmat2,WINBOOL bIgnoreRotation);", "NtGdiGetETM": "W32KAPI WINBOOL WINAPI NtGdiGetETM(HDC hdc,EXTTEXTMETRIC *petm);", "NtGdiGetRasterizerCaps": "W32KAPI WINBOOL WINAPI NtGdiGetRasterizerCaps(LPRASTERIZER_STATUS praststat,ULONG cjBytes);", "NtGdiGetKerningPairs": "W32KAPI ULONG WINAPI NtGdiGetKerningPairs(HDC hdc,ULONG cPairs,KERNINGPAIR *pkpDst);", "NtGdiMonoBitmap": "W32KAPI WINBOOL WINAPI NtGdiMonoBitmap(HBITMAP hbm);", "NtGdiGetObjectBitmapHandle": "W32KAPI HBITMAP WINAPI NtGdiGetObjectBitmapHandle(HBRUSH hbr,UINT *piUsage);", "NtGdiEnumObjects": "W32KAPI ULONG WINAPI NtGdiEnumObjects(HDC hdc,int iObjectType,ULONG cjBuf,PVOID pvBuf);", "NtGdiResetDC": "W32KAPI WINBOOL WINAPI NtGdiResetDC(HDC hdc,LPDEVMODEW pdm,PBOOL pbBanding,VOID *pDriverInfo2,VOID *ppUMdhpdev);", "NtGdiSetBoundsRect": "W32KAPI DWORD WINAPI NtGdiSetBoundsRect(HDC hdc,LPRECT prc,DWORD f);", "NtGdiGetColorAdjustment": "W32KAPI WINBOOL WINAPI NtGdiGetColorAdjustment(HDC hdc,PCOLORADJUSTMENT pcaOut);", "NtGdiSetColorAdjustment": "W32KAPI WINBOOL WINAPI NtGdiSetColorAdjustment(HDC hdc,PCOLORADJUSTMENT pca);", "NtGdiCancelDC": "W32KAPI WINBOOL WINAPI NtGdiCancelDC(HDC hdc);", "NtGdiOpenDCW": "W32KAPI HDC WINAPI NtGdiOpenDCW(PUNICODE_STRING pustrDevice,DEVMODEW *pdm,PUNICODE_STRING pustrLogAddr,ULONG iType,HANDLE hspool,VOID *pDriverInfo2,VOID *pUMdhpdev);", "NtGdiGetDCDword": "W32KAPI WINBOOL WINAPI NtGdiGetDCDword(HDC hdc,UINT u,DWORD *Result);", "NtGdiGetDCPoint": "W32KAPI WINBOOL WINAPI NtGdiGetDCPoint(HDC hdc,UINT iPoint,PPOINTL pptOut);", "NtGdiScaleViewportExtEx": "W32KAPI WINBOOL WINAPI NtGdiScaleViewportExtEx(HDC hdc,int xNum,int xDenom,int yNum,int yDenom,LPSIZE pszOut);", "NtGdiScaleWindowExtEx": "W32KAPI WINBOOL WINAPI NtGdiScaleWindowExtEx(HDC hdc,int xNum,int xDenom,int yNum,int yDenom,LPSIZE pszOut);", "NtGdiSetVirtualResolution": "W32KAPI WINBOOL WINAPI NtGdiSetVirtualResolution(HDC hdc,int cxVirtualDevicePixel,int cyVirtualDevicePixel,int cxVirtualDeviceMm,int cyVirtualDeviceMm);", "NtGdiSetSizeDevice": "W32KAPI WINBOOL WINAPI NtGdiSetSizeDevice(HDC hdc,int cxVirtualDevice,int cyVirtualDevice);", "NtGdiGetTransform": "W32KAPI WINBOOL WINAPI NtGdiGetTransform(HDC hdc,DWORD iXform,LPXFORM pxf);", "NtGdiModifyWorldTransform": "W32KAPI WINBOOL WINAPI NtGdiModifyWorldTransform(HDC hdc,LPXFORM pxf,DWORD iXform);", "NtGdiCombineTransform": "W32KAPI WINBOOL WINAPI NtGdiCombineTransform(LPXFORM pxfDst,LPXFORM pxfSrc1,LPXFORM pxfSrc2);", "NtGdiTransformPoints": "W32KAPI WINBOOL WINAPI NtGdiTransformPoints(HDC hdc,PPOINT pptIn,PPOINT pptOut,int c,int iMode);", "NtGdiConvertMetafileRect": "W32KAPI LONG WINAPI NtGdiConvertMetafileRect(HDC hdc,PRECTL prect);", "NtGdiGetTextCharsetInfo": "W32KAPI int WINAPI NtGdiGetTextCharsetInfo(HDC hdc,LPFONTSIGNATURE lpSig,DWORD dwFlags);", "NtGdiDoBanding": "W32KAPI WINBOOL WINAPI NtGdiDoBanding(HDC hdc,WINBOOL bStart,POINTL *pptl,PSIZE pSize);", "NtGdiGetPerBandInfo": "W32KAPI ULONG WINAPI NtGdiGetPerBandInfo(HDC hdc,PERBANDINFO *ppbi);", "NtGdiGetStats": "W32KAPI NTSTATUS WINAPI NtGdiGetStats(HANDLE hProcess,int iIndex,int iPidType,PVOID pResults,UINT cjResultSize);", "NtGdiSetMagicColors": "W32KAPI WINBOOL WINAPI NtGdiSetMagicColors(HDC hdc,PALETTEENTRY peMagic,ULONG Index);", "NtGdiSelectBrush": "W32KAPI HBRUSH WINAPI NtGdiSelectBrush(HDC hdc,HBRUSH hbrush);", "NtGdiSelectPen": "W32KAPI HPEN WINAPI NtGdiSelectPen(HDC hdc,HPEN hpen);", "NtGdiSelectBitmap": "W32KAPI HBITMAP WINAPI NtGdiSelectBitmap(HDC hdc,HBITMAP hbm);", "NtGdiSelectFont": "W32KAPI HFONT WINAPI NtGdiSelectFont(HDC hdc,HFONT hf);", "NtGdiExtSelectClipRgn": "W32KAPI int WINAPI NtGdiExtSelectClipRgn(HDC hdc,HRGN hrgn,int iMode);", "NtGdiCreatePen": "W32KAPI HPEN WINAPI NtGdiCreatePen(int iPenStyle,int iPenWidth,COLORREF cr,HBRUSH hbr);", "NtGdiBitBlt": "W32KAPI WINBOOL WINAPI NtGdiBitBlt(HDC hdcDst,int x,int y,int cx,int cy,HDC hdcSrc,int xSrc,int ySrc,DWORD rop4,DWORD crBackColor,FLONG fl);", "NtGdiTileBitBlt": "W32KAPI WINBOOL WINAPI NtGdiTileBitBlt(HDC hdcDst,RECTL *prectDst,HDC hdcSrc,RECTL *prectSrc,POINTL *pptlOrigin,DWORD rop4,DWORD crBackColor);", "NtGdiTransparentBlt": "W32KAPI WINBOOL WINAPI NtGdiTransparentBlt(HDC hdcDst,int xDst,int yDst,int cxDst,int cyDst,HDC hdcSrc,int xSrc,int ySrc,int cxSrc,int cySrc,COLORREF TransColor);", "NtGdiGetTextExtent": "W32KAPI WINBOOL WINAPI NtGdiGetTextExtent(HDC hdc,LPWSTR lpwsz,int cwc,LPSIZE psize,UINT flOpts);", "NtGdiGetTextMetricsW": "W32KAPI WINBOOL WINAPI NtGdiGetTextMetricsW(HDC hdc,TMW_INTERNAL *ptm,ULONG cj);", "NtGdiGetTextFaceW": "W32KAPI int WINAPI NtGdiGetTextFaceW(HDC hdc,int cChar,LPWSTR pszOut,WINBOOL bAliasName);", "NtGdiGetRandomRgn": "W32KAPI int WINAPI NtGdiGetRandomRgn(HDC hdc,HRGN hrgn,int iRgn);", "NtGdiExtTextOutW": "W32KAPI WINBOOL WINAPI NtGdiExtTextOutW(HDC hdc,int x,int y,UINT flOpts,LPRECT prcl,LPWSTR pwsz,int cwc,LPINT pdx,DWORD dwCodePage);", "NtGdiIntersectClipRect": "W32KAPI int WINAPI NtGdiIntersectClipRect(HDC hdc,int xLeft,int yTop,int xRight,int yBottom);", "NtGdiCreateRectRgn": "W32KAPI HRGN WINAPI NtGdiCreateRectRgn(int xLeft,int yTop,int xRight,int yBottom);", "NtGdiPatBlt": "W32KAPI WINBOOL WINAPI NtGdiPatBlt(HDC hdcDst,int x,int y,int cx,int cy,DWORD rop4);", "NtGdiPolyPatBlt": "W32KAPI WINBOOL WINAPI NtGdiPolyPatBlt(HDC hdc,DWORD rop4,PPOLYPATBLT pPoly,DWORD Count,DWORD Mode);", "NtGdiUnrealizeObject": "W32KAPI WINBOOL WINAPI NtGdiUnrealizeObject(HANDLE h);", "NtGdiGetStockObject": "W32KAPI HANDLE WINAPI NtGdiGetStockObject(int iObject);", "NtGdiCreateCompatibleBitmap": "W32KAPI HBITMAP WINAPI NtGdiCreateCompatibleBitmap(HDC hdc,int cx,int cy);", "NtGdiLineTo": "W32KAPI WINBOOL WINAPI NtGdiLineTo(HDC hdc,int x,int y);", "NtGdiMoveTo": "W32KAPI WINBOOL WINAPI NtGdiMoveTo(HDC hdc,int x,int y,LPPOINT pptOut);", "NtGdiExtGetObjectW": "W32KAPI int WINAPI NtGdiExtGetObjectW(HANDLE h,int cj,LPVOID pvOut);", "NtGdiGetDeviceCaps": "W32KAPI int WINAPI NtGdiGetDeviceCaps(HDC hdc,int i);", "NtGdiGetDeviceCapsAll": "W32KAPI WINBOOL WINAPI NtGdiGetDeviceCapsAll (HDC hdc,PDEVCAPS pDevCaps);", "NtGdiStretchBlt": "W32KAPI WINBOOL WINAPI NtGdiStretchBlt(HDC hdcDst,int xDst,int yDst,int cxDst,int cyDst,HDC hdcSrc,int xSrc,int ySrc,int cxSrc,int cySrc,DWORD dwRop,DWORD dwBackColor);", "NtGdiSetBrushOrg": "W32KAPI WINBOOL WINAPI NtGdiSetBrushOrg(HDC hdc,int x,int y,LPPOINT pptOut);", "NtGdiCreateBitmap": "W32KAPI HBITMAP WINAPI NtGdiCreateBitmap(int cx,int cy,UINT cPlanes,UINT cBPP,LPBYTE pjInit);", "NtGdiCreateHalftonePalette": "W32KAPI HPALETTE WINAPI NtGdiCreateHalftonePalette(HDC hdc);", "NtGdiRestoreDC": "W32KAPI WINBOOL WINAPI NtGdiRestoreDC(HDC hdc,int iLevel);", "NtGdiExcludeClipRect": "W32KAPI int WINAPI NtGdiExcludeClipRect(HDC hdc,int xLeft,int yTop,int xRight,int yBottom);", "NtGdiSaveDC": "W32KAPI int WINAPI NtGdiSaveDC(HDC hdc);", "NtGdiCombineRgn": "W32KAPI int WINAPI NtGdiCombineRgn(HRGN hrgnDst,HRGN hrgnSrc1,HRGN hrgnSrc2,int iMode);", "NtGdiSetRectRgn": "W32KAPI WINBOOL WINAPI NtGdiSetRectRgn(HRGN hrgn,int xLeft,int yTop,int xRight,int yBottom);", "NtGdiSetBitmapBits": "W32KAPI LONG WINAPI NtGdiSetBitmapBits(HBITMAP hbm,ULONG cj,PBYTE pjInit);", "NtGdiGetDIBitsInternal": "W32KAPI int WINAPI NtGdiGetDIBitsInternal(HDC hdc,HBITMAP hbm,UINT iStartScan,UINT cScans,LPBYTE pBits,LPBITMAPINFO pbmi,UINT iUsage,UINT cjMaxBits,UINT cjMaxInfo);", "NtGdiOffsetRgn": "W32KAPI int WINAPI NtGdiOffsetRgn(HRGN hrgn,int cx,int cy);", "NtGdiGetRgnBox": "W32KAPI int WINAPI NtGdiGetRgnBox(HRGN hrgn,LPRECT prcOut);", "NtGdiRectInRegion": "W32KAPI WINBOOL WINAPI NtGdiRectInRegion(HRGN hrgn,LPRECT prcl);", "NtGdiGetBoundsRect": "W32KAPI DWORD WINAPI NtGdiGetBoundsRect(HDC hdc,LPRECT prc,DWORD f);", "NtGdiPtInRegion": "W32KAPI WINBOOL WINAPI NtGdiPtInRegion(HRGN hrgn,int x,int y);", "NtGdiGetNearestColor": "W32KAPI COLORREF WINAPI NtGdiGetNearestColor(HDC hdc,COLORREF cr);", "NtGdiGetSystemPaletteUse": "W32KAPI UINT WINAPI NtGdiGetSystemPaletteUse(HDC hdc);", "NtGdiSetSystemPaletteUse": "W32KAPI UINT WINAPI NtGdiSetSystemPaletteUse(HDC hdc,UINT ui);", "NtGdiGetRegionData": "W32KAPI DWORD WINAPI NtGdiGetRegionData(HRGN hrgn,DWORD nCount,LPRGNDATA lpRgnData);", "NtGdiInvertRgn": "W32KAPI WINBOOL WINAPI NtGdiInvertRgn(HDC hdc,HRGN hrgn);", "NtGdiAddFontResourceW": "int W32KAPI WINAPI NtGdiAddFontResourceW(WCHAR *pwszFiles,ULONG cwc,ULONG cFiles,FLONG f,DWORD dwPidTid,DESIGNVECTOR *pdv);", "NtGdiHfontCreate": "W32KAPI HFONT WINAPI NtGdiHfontCreate(ENUMLOGFONTEXDVW *pelfw,ULONG cjElfw,LFTYPE lft,FLONG fl,PVOID pvCliData);", "NtGdiSetFontEnumeration": "W32KAPI ULONG WINAPI NtGdiSetFontEnumeration(ULONG ulType);", "NtGdiEnumFontClose": "W32KAPI WINBOOL WINAPI NtGdiEnumFontClose(ULONG_PTR idEnum);", "NtGdiEnumFontChunk": "W32KAPI WINBOOL WINAPI NtGdiEnumFontChunk(HDC hdc,ULONG_PTR idEnum,ULONG cjEfdw,ULONG *pcjEfdw,PENUMFONTDATAW pefdw);", "NtGdiEnumFontOpen": "W32KAPI ULONG_PTR WINAPI NtGdiEnumFontOpen(HDC hdc,ULONG iEnumType,FLONG flWin31Compat,ULONG cwchMax,LPWSTR pwszFaceName,ULONG lfCharSet,ULONG *pulCount);", "NtGdiQueryFonts": "W32KAPI INT WINAPI NtGdiQueryFonts(PUNIVERSAL_FONT_ID pufiFontList,ULONG nBufferSize,PLARGE_INTEGER pTimeStamp);", "NtGdiConsoleTextOut": "W32KAPI WINBOOL WINAPI NtGdiConsoleTextOut(HDC hdc,POLYTEXTW *lpto,UINT nStrings,RECTL *prclBounds);", "NtGdiFullscreenControl": "W32KAPI NTSTATUS WINAPI NtGdiFullscreenControl(FULLSCREENCONTROL FullscreenCommand,PVOID FullscreenInput,DWORD FullscreenInputLength,PVOID FullscreenOutput,PULONG FullscreenOutputLength);", "NtGdiEnableEudc": "W32KAPI WINBOOL WINAPI NtGdiEnableEudc(WINBOOL);", "NtGdiEudcLoadUnloadLink": "W32KAPI WINBOOL WINAPI NtGdiEudcLoadUnloadLink(LPCWSTR pBaseFaceName,UINT cwcBaseFaceName,LPCWSTR pEudcFontPath,UINT cwcEudcFontPath,INT iPriority,INT iFontLinkType,WINBOOL bLoadLin);", "NtGdiGetStringBitmapW": "W32KAPI UINT WINAPI NtGdiGetStringBitmapW(HDC hdc,LPWSTR pwsz,UINT cwc,BYTE *lpSB,UINT cj);", "NtGdiGetEudcTimeStampEx": "W32KAPI ULONG WINAPI NtGdiGetEudcTimeStampEx(LPWSTR lpBaseFaceName,ULONG cwcBaseFaceName,WINBOOL bSystemTimeStamp);", "NtGdiQueryFontAssocInfo": "W32KAPI ULONG WINAPI NtGdiQueryFontAssocInfo(HDC hdc);", "NtGdiUnloadPrinterDriver": "W32KAPI WINBOOL WINAPI NtGdiUnloadPrinterDriver(LPWSTR pDriverName,ULONG cbDriverName);", "NtGdiEngAssociateSurface": "W32KAPI WINBOOL WINAPI NtGdiEngAssociateSurface(HSURF hsurf,HDEV hdev,FLONG flHooks);", "NtGdiEngEraseSurface": "W32KAPI WINBOOL WINAPI NtGdiEngEraseSurface(SURFOBJ *pso,RECTL *prcl,ULONG iColor);", "NtGdiEngCreateBitmap": "W32KAPI HBITMAP WINAPI NtGdiEngCreateBitmap(SIZEL sizl,LONG lWidth,ULONG iFormat,FLONG fl,PVOID pvBits);", "NtGdiEngDeleteSurface": "W32KAPI WINBOOL WINAPI NtGdiEngDeleteSurface(HSURF hsurf);", "NtGdiEngLockSurface": "W32KAPI SURFOBJ *WINAPI NtGdiEngLockSurface(HSURF hsurf);", "NtGdiEngUnlockSurface": "W32KAPI VOID WINAPI NtGdiEngUnlockSurface(SURFOBJ *);", "NtGdiEngMarkBandingSurface": "W32KAPI WINBOOL WINAPI NtGdiEngMarkBandingSurface(HSURF hsurf);", "NtGdiEngCreateDeviceSurface": "W32KAPI HSURF WINAPI NtGdiEngCreateDeviceSurface(DHSURF dhsurf,SIZEL sizl,ULONG iFormatCompat);", "NtGdiEngCreateDeviceBitmap": "W32KAPI HBITMAP WINAPI NtGdiEngCreateDeviceBitmap(DHSURF dhsurf,SIZEL sizl,ULONG iFormatCompat);", "NtGdiEngCopyBits": "W32KAPI WINBOOL WINAPI NtGdiEngCopyBits(SURFOBJ *psoDst,SURFOBJ *psoSrc,CLIPOBJ *pco,XLATEOBJ *pxlo,RECTL *prclDst,POINTL *pptlSrc);", "NtGdiEngStretchBlt": "W32KAPI WINBOOL WINAPI NtGdiEngStretchBlt(SURFOBJ *psoDest,SURFOBJ *psoSrc,SURFOBJ *psoMask,CLIPOBJ *pco,XLATEOBJ *pxlo,COLORADJUSTMENT *pca,POINTL *pptlHTOrg,RECTL *prclDest,RECTL *prclSrc,POINTL *pptlMask,ULONG iMode);", "NtGdiEngBitBlt": "W32KAPI WINBOOL WINAPI NtGdiEngBitBlt(SURFOBJ *psoDst,SURFOBJ *psoSrc,SURFOBJ *psoMask,CLIPOBJ *pco,XLATEOBJ *pxlo,RECTL *prclDst,POINTL *pptlSrc,POINTL *pptlMask,BRUSHOBJ *pbo,POINTL *pptlBrush,ROP4 rop4);", "NtGdiEngPlgBlt": "W32KAPI WINBOOL WINAPI NtGdiEngPlgBlt(SURFOBJ *psoTrg,SURFOBJ *psoSrc,SURFOBJ *psoMsk,CLIPOBJ *pco,XLATEOBJ *pxlo,COLORADJUSTMENT *pca,POINTL *pptlBrushOrg,POINTFIX *pptfxDest,RECTL *prclSrc,POINTL *pptlMask,ULONG iMode);", "NtGdiEngCreatePalette": "W32KAPI HPALETTE WINAPI NtGdiEngCreatePalette(ULONG iMode,ULONG cColors,ULONG *pulColors,FLONG flRed,FLONG flGreen,FLONG flBlue);", "NtGdiEngDeletePalette": "W32KAPI WINBOOL WINAPI NtGdiEngDeletePalette(HPALETTE hPal);", "NtGdiEngStrokePath": "W32KAPI WINBOOL WINAPI NtGdiEngStrokePath(SURFOBJ *pso,PATHOBJ *ppo,CLIPOBJ *pco,XFORMOBJ *pxo,BRUSHOBJ *pbo,POINTL *pptlBrushOrg,LINEATTRS *plineattrs,MIX mix);", "NtGdiEngFillPath": "W32KAPI WINBOOL WINAPI NtGdiEngFillPath(SURFOBJ *pso,PATHOBJ *ppo,CLIPOBJ *pco,BRUSHOBJ *pbo,POINTL *pptlBrushOrg,MIX mix,FLONG flOptions);", "NtGdiEngStrokeAndFillPath": "W32KAPI WINBOOL WINAPI NtGdiEngStrokeAndFillPath(SURFOBJ *pso,PATHOBJ *ppo,CLIPOBJ *pco,XFORMOBJ *pxo,BRUSHOBJ *pboStroke,LINEATTRS *plineattrs,BRUSHOBJ *pboFill,POINTL *pptlBrushOrg,MIX mix,FLONG flOptions);", "NtGdiEngPaint": "W32KAPI WINBOOL WINAPI NtGdiEngPaint(SURFOBJ *pso,CLIPOBJ *pco,BRUSHOBJ *pbo,POINTL *pptlBrushOrg,MIX mix);", "NtGdiEngLineTo": "W32KAPI WINBOOL WINAPI NtGdiEngLineTo(SURFOBJ *pso,CLIPOBJ *pco,BRUSHOBJ *pbo,LONG x1,LONG y1,LONG x2,LONG y2,RECTL *prclBounds,MIX mix);", "NtGdiEngAlphaBlend": "W32KAPI WINBOOL WINAPI NtGdiEngAlphaBlend(SURFOBJ *psoDest,SURFOBJ *psoSrc,CLIPOBJ *pco,XLATEOBJ *pxlo,RECTL *prclDest,RECTL *prclSrc,BLENDOBJ *pBlendObj);", "NtGdiEngGradientFill": "W32KAPI WINBOOL WINAPI NtGdiEngGradientFill(SURFOBJ *psoDest,CLIPOBJ *pco,XLATEOBJ *pxlo,TRIVERTEX *pVertex,ULONG nVertex,PVOID pMesh,ULONG nMesh,RECTL *prclExtents,POINTL *pptlDitherOrg,ULONG ulMode);", "NtGdiEngTransparentBlt": "W32KAPI WINBOOL WINAPI NtGdiEngTransparentBlt(SURFOBJ *psoDst,SURFOBJ *psoSrc,CLIPOBJ *pco,XLATEOBJ *pxlo,RECTL *prclDst,RECTL *prclSrc,ULONG iTransColor,ULONG ulReserved);", "NtGdiEngTextOut": "W32KAPI WINBOOL WINAPI NtGdiEngTextOut(SURFOBJ *pso,STROBJ *pstro,FONTOBJ *pfo,CLIPOBJ *pco,RECTL *prclExtra,RECTL *prclOpaque,BRUSHOBJ *pboFore,BRUSHOBJ *pboOpaque,POINTL *pptlOrg,MIX mix);", "NtGdiEngStretchBltROP": "W32KAPI WINBOOL WINAPI NtGdiEngStretchBltROP(SURFOBJ *psoTrg,SURFOBJ *psoSrc,SURFOBJ *psoMask,CLIPOBJ *pco,XLATEOBJ *pxlo,COLORADJUSTMENT *pca,POINTL *pptlBrushOrg,RECTL *prclTrg,RECTL *prclSrc,POINTL *pptlMask,ULONG iMode,BRUSHOBJ *pbo,ROP4 rop4);", "NtGdiXLATEOBJ_cGetPalette": "W32KAPI ULONG WINAPI NtGdiXLATEOBJ_cGetPalette(XLATEOBJ *pxlo,ULONG iPal,ULONG cPal,ULONG *pPal);", "NtGdiCLIPOBJ_cEnumStart": "W32KAPI ULONG WINAPI NtGdiCLIPOBJ_cEnumStart(CLIPOBJ *pco,WINBOOL bAll,ULONG iType,ULONG iDirection,ULONG cLimit);", "NtGdiCLIPOBJ_bEnum": "W32KAPI WINBOOL WINAPI NtGdiCLIPOBJ_bEnum(CLIPOBJ *pco,ULONG cj,ULONG *pul);", "NtGdiCLIPOBJ_ppoGetPath": "W32KAPI PATHOBJ *WINAPI NtGdiCLIPOBJ_ppoGetPath(CLIPOBJ *pco);", "NtGdiEngCreateClip": "W32KAPI CLIPOBJ *WINAPI NtGdiEngCreateClip();", "NtGdiEngDeleteClip": "W32KAPI VOID WINAPI NtGdiEngDeleteClip(CLIPOBJ*pco);", "NtGdiBRUSHOBJ_pvAllocRbrush": "W32KAPI PVOID WINAPI NtGdiBRUSHOBJ_pvAllocRbrush(BRUSHOBJ *pbo,ULONG cj);", "NtGdiBRUSHOBJ_pvGetRbrush": "W32KAPI PVOID WINAPI NtGdiBRUSHOBJ_pvGetRbrush(BRUSHOBJ *pbo);", "NtGdiBRUSHOBJ_ulGetBrushColor": "W32KAPI ULONG WINAPI NtGdiBRUSHOBJ_ulGetBrushColor(BRUSHOBJ *pbo);", "NtGdiBRUSHOBJ_hGetColorTransform": "W32KAPI HANDLE WINAPI NtGdiBRUSHOBJ_hGetColorTransform(BRUSHOBJ *pbo);", "NtGdiXFORMOBJ_bApplyXform": "W32KAPI WINBOOL WINAPI NtGdiXFORMOBJ_bApplyXform(XFORMOBJ *pxo,ULONG iMode,ULONG cPoints,PVOID pvIn,PVOID pvOut);", "NtGdiXFORMOBJ_iGetXform": "W32KAPI ULONG WINAPI NtGdiXFORMOBJ_iGetXform(XFORMOBJ *pxo,XFORML *pxform);", "NtGdiFONTOBJ_vGetInfo": "W32KAPI VOID WINAPI NtGdiFONTOBJ_vGetInfo(FONTOBJ *pfo,ULONG cjSize,FONTINFO *pfi);", "NtGdiFONTOBJ_cGetGlyphs": "W32KAPI ULONG WINAPI NtGdiFONTOBJ_cGetGlyphs(FONTOBJ *pfo,ULONG iMode,ULONG cGlyph,HGLYPH *phg,PVOID *ppvGlyph);", "NtGdiFONTOBJ_pxoGetXform": "W32KAPI XFORMOBJ *WINAPI NtGdiFONTOBJ_pxoGetXform(FONTOBJ *pfo);", "NtGdiFONTOBJ_pifi": "W32KAPI IFIMETRICS *WINAPI NtGdiFONTOBJ_pifi(FONTOBJ *pfo);", "NtGdiFONTOBJ_pfdg": "W32KAPI FD_GLYPHSET *WINAPI NtGdiFONTOBJ_pfdg(FONTOBJ *pfo);", "NtGdiFONTOBJ_cGetAllGlyphHandles": "W32KAPI ULONG WINAPI NtGdiFONTOBJ_cGetAllGlyphHandles(FONTOBJ *pfo,HGLYPH *phg);", "NtGdiFONTOBJ_pvTrueTypeFontFile": "W32KAPI PVOID WINAPI NtGdiFONTOBJ_pvTrueTypeFontFile(FONTOBJ *pfo,ULONG *pcjFile);", "NtGdiFONTOBJ_pQueryGlyphAttrs": "W32KAPI PFD_GLYPHATTR WINAPI NtGdiFONTOBJ_pQueryGlyphAttrs(FONTOBJ *pfo,ULONG iMode);", "NtGdiSTROBJ_bEnum": "W32KAPI WINBOOL WINAPI NtGdiSTROBJ_bEnum(STROBJ *pstro,ULONG *pc,PGLYPHPOS *ppgpos);", "NtGdiSTROBJ_bEnumPositionsOnly": "W32KAPI WINBOOL WINAPI NtGdiSTROBJ_bEnumPositionsOnly(STROBJ *pstro,ULONG *pc,PGLYPHPOS *ppgpos);", "NtGdiSTROBJ_vEnumStart": "W32KAPI VOID WINAPI NtGdiSTROBJ_vEnumStart(STROBJ *pstro);", "NtGdiSTROBJ_dwGetCodePage": "W32KAPI DWORD WINAPI NtGdiSTROBJ_dwGetCodePage(STROBJ *pstro);", "NtGdiSTROBJ_bGetAdvanceWidths": "W32KAPI WINBOOL WINAPI NtGdiSTROBJ_bGetAdvanceWidths(STROBJ*pstro,ULONG iFirst,ULONG c,POINTQF*pptqD);", "NtGdiEngComputeGlyphSet": "W32KAPI FD_GLYPHSET *WINAPI NtGdiEngComputeGlyphSet(INT nCodePage,INT nFirstChar,INT cChars);", "NtGdiXLATEOBJ_iXlate": "W32KAPI ULONG WINAPI NtGdiXLATEOBJ_iXlate(XLATEOBJ *pxlo,ULONG iColor);", "NtGdiXLATEOBJ_hGetColorTransform": "W32KAPI HANDLE WINAPI NtGdiXLATEOBJ_hGetColorTransform(XLATEOBJ *pxlo);", "NtGdiPATHOBJ_vGetBounds": "W32KAPI VOID WINAPI NtGdiPATHOBJ_vGetBounds(PATHOBJ *ppo,PRECTFX prectfx);", "NtGdiPATHOBJ_bEnum": "W32KAPI WINBOOL WINAPI NtGdiPATHOBJ_bEnum(PATHOBJ *ppo,PATHDATA *ppd);", "NtGdiPATHOBJ_vEnumStart": "W32KAPI VOID WINAPI NtGdiPATHOBJ_vEnumStart(PATHOBJ *ppo);", "NtGdiEngDeletePath": "W32KAPI VOID WINAPI NtGdiEngDeletePath(PATHOBJ *ppo);", "NtGdiPATHOBJ_vEnumStartClipLines": "W32KAPI VOID WINAPI NtGdiPATHOBJ_vEnumStartClipLines(PATHOBJ *ppo,CLIPOBJ *pco,SURFOBJ *pso,LINEATTRS *pla);", "NtGdiPATHOBJ_bEnumClipLines": "W32KAPI WINBOOL WINAPI NtGdiPATHOBJ_bEnumClipLines(PATHOBJ *ppo,ULONG cb,CLIPLINE *pcl);", "NtGdiEngCheckAbort": "W32KAPI WINBOOL WINAPI NtGdiEngCheckAbort(SURFOBJ *pso);", "NtGdiHT_Get8BPPFormatPalette": "W32KAPI LONG WINAPI NtGdiHT_Get8BPPFormatPalette(LPPALETTEENTRY pPaletteEntry,USHORT RedGamma,USHORT GreenGamma,USHORT BlueGamma);", "NtGdiHT_Get8BPPMaskPalette": "W32KAPI LONG WINAPI NtGdiHT_Get8BPPMaskPalette(LPPALETTEENTRY pPaletteEntry,WINBOOL Use8BPPMaskPal,BYTE CMYMask,USHORT RedGamma,USHORT GreenGamma,USHORT BlueGamma);", "NtGdiSetLayout": "W32KAPI DWORD WINAPI NtGdiSetLayout(HDC hdc,LONG wox,DWORD dwLayout);", "NtGdiMirrorWindowOrg": "W32KAPI WINBOOL WINAPI NtGdiMirrorWindowOrg(HDC hdc);", "NtGdiGetDeviceWidth": "W32KAPI LONG WINAPI NtGdiGetDeviceWidth(HDC hdc);", "NtGdiSetBitmapAttributes": "W32KAPI HBITMAP WINAPI NtGdiSetBitmapAttributes(HBITMAP hbm,DWORD dwFlags);", "NtGdiClearBitmapAttributes": "W32KAPI HBITMAP WINAPI NtGdiClearBitmapAttributes(HBITMAP hbm,DWORD dwFlags);", "NtGdiSetBrushAttributes": "W32KAPI HBRUSH WINAPI NtGdiSetBrushAttributes(HBRUSH hbm,DWORD dwFlags);", "NtGdiClearBrushAttributes": "W32KAPI HBRUSH WINAPI NtGdiClearBrushAttributes(HBRUSH hbm,DWORD dwFlags);", "NtGdiDrawStream": "W32KAPI WINBOOL WINAPI NtGdiDrawStream(HDC hdcDst,ULONG cjIn,VOID *pvIn);", "NtGdiMakeObjectXferable": "W32KAPI WINBOOL WINAPI NtGdiMakeObjectXferable(HANDLE h,DWORD dwProcessId);", "NtGdiMakeObjectUnXferable": "W32KAPI WINBOOL WINAPI NtGdiMakeObjectUnXferable(HANDLE h);", "TimeProvOpen": "HRESULT WINAPI TimeProvOpen(WCHAR *wszName,TimeProvSysCallbacks *pSysCallbacks,TimeProvHandle *phTimeProv);", "TimeProvCommand": "HRESULT WINAPI TimeProvCommand(TimeProvHandle hTimeProv,TimeProvCmd eCmd,TimeProvArgs pvArgs);", "TimeProvClose": "HRESULT WINAPI TimeProvClose(TimeProvHandle hTimeProv);", "TcRegisterClient": "ULONG WINAPI TcRegisterClient(ULONG TciVersion,HANDLE ClRegCtx,PTCI_CLIENT_FUNC_LIST ClientHandlerList,PHANDLE pClientHandle);", "TcEnumerateInterfaces": "ULONG WINAPI TcEnumerateInterfaces(HANDLE ClientHandle,PULONG pBufferSize,PTC_IFC_DESCRIPTOR InterfaceBuffer);", "TcOpenInterfaceA": "ULONG WINAPI TcOpenInterfaceA(LPSTR pInterfaceName,HANDLE ClientHandle,HANDLE ClIfcCtx,PHANDLE pIfcHandle);", "TcOpenInterfaceW": "ULONG WINAPI TcOpenInterfaceW(LPWSTR pInterfaceName,HANDLE ClientHandle,HANDLE ClIfcCtx,PHANDLE pIfcHandle);", "TcCloseInterface": "ULONG WINAPI TcCloseInterface(HANDLE IfcHandle);", "TcQueryInterface": "ULONG WINAPI TcQueryInterface(HANDLE IfcHandle,LPGUID pGuidParam,BOOLEAN NotifyChange,PULONG pBufferSize,PVOID Buffer);", "TcSetInterface": "ULONG WINAPI TcSetInterface(HANDLE IfcHandle,LPGUID pGuidParam,ULONG BufferSize,PVOID Buffer);", "TcQueryFlowA": "ULONG WINAPI TcQueryFlowA(LPSTR pFlowName,LPGUID pGuidParam,PULONG pBufferSize,PVOID Buffer);", "TcQueryFlowW": "ULONG WINAPI TcQueryFlowW(LPWSTR pFlowName,LPGUID pGuidParam,PULONG pBufferSize,PVOID Buffer);", "TcSetFlowA": "ULONG WINAPI TcSetFlowA(LPSTR pFlowName,LPGUID pGuidParam,ULONG BufferSize,PVOID Buffer);", "TcSetFlowW": "ULONG WINAPI TcSetFlowW(LPWSTR pFlowName,LPGUID pGuidParam,ULONG BufferSize,PVOID Buffer);", "TcAddFlow": "ULONG WINAPI TcAddFlow(HANDLE IfcHandle,HANDLE ClFlowCtx,ULONG Flags,PTC_GEN_FLOW pGenericFlow,PHANDLE pFlowHandle);", "TcGetFlowNameA": "ULONG WINAPI TcGetFlowNameA(HANDLE FlowHandle,ULONG StrSize,LPSTR pFlowName);", "TcGetFlowNameW": "ULONG WINAPI TcGetFlowNameW(HANDLE FlowHandle,ULONG StrSize,LPWSTR pFlowName);", "TcModifyFlow": "ULONG WINAPI TcModifyFlow(HANDLE FlowHandle,PTC_GEN_FLOW pGenericFlow);", "TcAddFilter": "ULONG WINAPI TcAddFilter(HANDLE FlowHandle,PTC_GEN_FILTER pGenericFilter,PHANDLE pFilterHandle);", "TcDeregisterClient": "ULONG WINAPI TcDeregisterClient(HANDLE ClientHandle);", "TcDeleteFlow": "ULONG WINAPI TcDeleteFlow(HANDLE FlowHandle);", "TcDeleteFilter": "ULONG WINAPI TcDeleteFilter(HANDLE FilterHandle);", "TcEnumerateFlows": "ULONG WINAPI TcEnumerateFlows(HANDLE IfcHandle,PHANDLE pEnumHandle,PULONG pFlowCount,PULONG pBufSize,PENUMERATION_BUFFER Buffer);", "IWmiXMLTransformer_get_XMLEncodingType_Proxy": "HRESULT WINAPI IWmiXMLTransformer_get_XMLEncodingType_Proxy(IWmiXMLTransformer *This,WmiXMLEncoding *piEncoding);", "IWmiXMLTransformer_put_XMLEncodingType_Proxy": "HRESULT WINAPI IWmiXMLTransformer_put_XMLEncodingType_Proxy(IWmiXMLTransformer *This,WmiXMLEncoding iEncoding);", "IWmiXMLTransformer_get_QualifierFilter_Proxy": "HRESULT WINAPI IWmiXMLTransformer_get_QualifierFilter_Proxy(IWmiXMLTransformer *This,VARIANT_BOOL *bQualifierFilter);", "IWmiXMLTransformer_put_QualifierFilter_Proxy": "HRESULT WINAPI IWmiXMLTransformer_put_QualifierFilter_Proxy(IWmiXMLTransformer *This,VARIANT_BOOL bQualifierFilter);", "IWmiXMLTransformer_get_ClassOriginFilter_Proxy": "HRESULT WINAPI IWmiXMLTransformer_get_ClassOriginFilter_Proxy(IWmiXMLTransformer *This,VARIANT_BOOL *bClassOriginFilter);", "IWmiXMLTransformer_put_ClassOriginFilter_Proxy": "HRESULT WINAPI IWmiXMLTransformer_put_ClassOriginFilter_Proxy(IWmiXMLTransformer *This,VARIANT_BOOL bClassOriginFilter);", "IWmiXMLTransformer_get_User_Proxy": "HRESULT WINAPI IWmiXMLTransformer_get_User_Proxy(IWmiXMLTransformer *This,BSTR *strUser);", "IWmiXMLTransformer_put_User_Proxy": "HRESULT WINAPI IWmiXMLTransformer_put_User_Proxy(IWmiXMLTransformer *This,BSTR strUser);", "IWmiXMLTransformer_get_Password_Proxy": "HRESULT WINAPI IWmiXMLTransformer_get_Password_Proxy(IWmiXMLTransformer *This,BSTR *strPassword);", "IWmiXMLTransformer_put_Password_Proxy": "HRESULT WINAPI IWmiXMLTransformer_put_Password_Proxy(IWmiXMLTransformer *This,BSTR strPassword);", "IWmiXMLTransformer_get_Authority_Proxy": "HRESULT WINAPI IWmiXMLTransformer_get_Authority_Proxy(IWmiXMLTransformer *This,BSTR *strAuthority);", "IWmiXMLTransformer_put_Authority_Proxy": "HRESULT WINAPI IWmiXMLTransformer_put_Authority_Proxy(IWmiXMLTransformer *This,BSTR strAuthority);", "IWmiXMLTransformer_get_ImpersonationLevel_Proxy": "HRESULT WINAPI IWmiXMLTransformer_get_ImpersonationLevel_Proxy(IWmiXMLTransformer *This,DWORD *pdwImpersonationLevel);", "IWmiXMLTransformer_put_ImpersonationLevel_Proxy": "HRESULT WINAPI IWmiXMLTransformer_put_ImpersonationLevel_Proxy(IWmiXMLTransformer *This,DWORD dwImpersonationLevel);", "IWmiXMLTransformer_get_AuthenticationLevel_Proxy": "HRESULT WINAPI IWmiXMLTransformer_get_AuthenticationLevel_Proxy(IWmiXMLTransformer *This,DWORD *pdwAuthenticationLevel);", "IWmiXMLTransformer_put_AuthenticationLevel_Proxy": "HRESULT WINAPI IWmiXMLTransformer_put_AuthenticationLevel_Proxy(IWmiXMLTransformer *This,DWORD dwAuthenticationLevel);", "IWmiXMLTransformer_get_Locale_Proxy": "HRESULT WINAPI IWmiXMLTransformer_get_Locale_Proxy(IWmiXMLTransformer *This,BSTR *strLocale);", "IWmiXMLTransformer_put_Locale_Proxy": "HRESULT WINAPI IWmiXMLTransformer_put_Locale_Proxy(IWmiXMLTransformer *This,BSTR strLocale);", "IWmiXMLTransformer_get_LocalOnly_Proxy": "HRESULT WINAPI IWmiXMLTransformer_get_LocalOnly_Proxy(IWmiXMLTransformer *This,VARIANT_BOOL *bLocalOnly);", "IWmiXMLTransformer_put_LocalOnly_Proxy": "HRESULT WINAPI IWmiXMLTransformer_put_LocalOnly_Proxy(IWmiXMLTransformer *This,VARIANT_BOOL bLocalOnly);", "IWmiXMLTransformer_GetObject_Proxy": "HRESULT WINAPI IWmiXMLTransformer_GetObject_Proxy(IWmiXMLTransformer *This,BSTR strObjectPath,IDispatch *pCtx,IXMLDOMDocument **ppXMLDocument);", "IWmiXMLTransformer_ExecQuery_Proxy": "HRESULT WINAPI IWmiXMLTransformer_ExecQuery_Proxy(IWmiXMLTransformer *This,BSTR strNamespacePath,BSTR strQuery,BSTR strQueryLanguage,IDispatch *pCtx,ISWbemXMLDocumentSet **ppXMLDocumentSet);", "IWmiXMLTransformer_EnumClasses_Proxy": "HRESULT WINAPI IWmiXMLTransformer_EnumClasses_Proxy(IWmiXMLTransformer *This,BSTR strSuperClassPath,VARIANT_BOOL bDeep,IDispatch *pCtx,ISWbemXMLDocumentSet **ppXMLDocumentSet);", "IWmiXMLTransformer_EnumInstances_Proxy": "HRESULT WINAPI IWmiXMLTransformer_EnumInstances_Proxy(IWmiXMLTransformer *This,BSTR strClassPath,VARIANT_BOOL bDeep,IDispatch *pCtx,ISWbemXMLDocumentSet **ppXMLDocumentSet);", "IWmiXMLTransformer_EnumClassNames_Proxy": "HRESULT WINAPI IWmiXMLTransformer_EnumClassNames_Proxy(IWmiXMLTransformer *This,BSTR strSuperClassPath,VARIANT_BOOL bDeep,IDispatch *pCtx,ISWbemXMLDocumentSet **ppXMLDocumentSet);", "IWmiXMLTransformer_EnumInstanceNames_Proxy": "HRESULT WINAPI IWmiXMLTransformer_EnumInstanceNames_Proxy(IWmiXMLTransformer *This,BSTR strClassPath,IDispatch *pCtx,ISWbemXMLDocumentSet **ppXMLDocumentSet);", "IWmiXMLTransformer_Compile_Proxy": "HRESULT WINAPI IWmiXMLTransformer_Compile_Proxy(IWmiXMLTransformer *This,VARIANT *pvInputSource,BSTR strNamespacePath,LONG lClassFlags,LONG lInstanceFlags,WmiXMLCompilationTypeEnum iOperation,IDispatch *pCtx,VARIANT_BOOL *pStatus);", "IWmiXMLTransformer_get_Privileges_Proxy": "HRESULT WINAPI IWmiXMLTransformer_get_Privileges_Proxy(IWmiXMLTransformer *This,ISWbemPrivilegeSet **objWbemPrivilegeSet);", "IWmiXMLTransformer_get_CompilationErrors_Proxy": "HRESULT WINAPI IWmiXMLTransformer_get_CompilationErrors_Proxy(IWmiXMLTransformer *This,BSTR *pstrErrors);", "ISWbemXMLDocumentSet_get__NewEnum_Proxy": "HRESULT WINAPI ISWbemXMLDocumentSet_get__NewEnum_Proxy(ISWbemXMLDocumentSet *This,IUnknown **pUnk);", "ISWbemXMLDocumentSet_Item_Proxy": "HRESULT WINAPI ISWbemXMLDocumentSet_Item_Proxy(ISWbemXMLDocumentSet *This,BSTR strObjectPath,__LONG32 iFlags,IXMLDOMDocument **ppXMLDocument);", "ISWbemXMLDocumentSet_get_Count_Proxy": "HRESULT WINAPI ISWbemXMLDocumentSet_get_Count_Proxy(ISWbemXMLDocumentSet *This,__LONG32 *iCount);", "ISWbemXMLDocumentSet_NextDocument_Proxy": "HRESULT WINAPI ISWbemXMLDocumentSet_NextDocument_Proxy(ISWbemXMLDocumentSet *This,IXMLDOMDocument **ppDoc);", "ISWbemXMLDocumentSet_SkipNextDocument_Proxy": "HRESULT WINAPI ISWbemXMLDocumentSet_SkipNextDocument_Proxy(ISWbemXMLDocumentSet *This);", "HyphenateProc": "void WINAPI HyphenateProc (WCHAR *pszWord, LANGID langid, __LONG32 ichExceed, HYPHRESULT *phyphresult);", "QueryUsersOnEncryptedFile": "WINADVAPI DWORD WINAPI QueryUsersOnEncryptedFile(LPCWSTR lpFileName,PENCRYPTION_CERTIFICATE_HASH_LIST *pUsers);", "QueryRecoveryAgentsOnEncryptedFile": "WINADVAPI DWORD WINAPI QueryRecoveryAgentsOnEncryptedFile(LPCWSTR lpFileName,PENCRYPTION_CERTIFICATE_HASH_LIST *pRecoveryAgents);", "RemoveUsersFromEncryptedFile": "WINADVAPI DWORD WINAPI RemoveUsersFromEncryptedFile(LPCWSTR lpFileName,PENCRYPTION_CERTIFICATE_HASH_LIST pHashes);", "AddUsersToEncryptedFile": "WINADVAPI DWORD WINAPI AddUsersToEncryptedFile(LPCWSTR lpFileName,PENCRYPTION_CERTIFICATE_LIST pUsers);", "SetUserFileEncryptionKey": "WINADVAPI DWORD WINAPI SetUserFileEncryptionKey(PENCRYPTION_CERTIFICATE pEncryptionCertificate);", "FreeEncryptionCertificateHashList": "WINADVAPI VOID WINAPI FreeEncryptionCertificateHashList(PENCRYPTION_CERTIFICATE_HASH_LIST pHashes);", "EncryptionDisable": "WINADVAPI WINBOOL WINAPI EncryptionDisable(LPCWSTR DirPath,WINBOOL Disable);", "DuplicateEncryptionInfoFile": "WINADVAPI DWORD WINAPI DuplicateEncryptionInfoFile(LPCWSTR SrcFileName,LPCWSTR DstFileName,DWORD dwCreationDistribution,DWORD dwAttributes,CONST LPSECURITY_ATTRIBUTES lpSecurityAttributes);", "NetShareDelEx": "NET_API_STATUS WINAPI NetShareDelEx(", "NetDfsAdd": "NET_API_STATUS WINAPI NetDfsAdd(LPWSTR DfsEntryPath,LPWSTR ServerName,LPWSTR ShareName,LPWSTR Comment,DWORD Flags);", "NetDfsAddStdRoot": "NET_API_STATUS WINAPI NetDfsAddStdRoot(LPWSTR ServerName,LPWSTR RootShare,LPWSTR Comment,DWORD Flags);", "NetDfsRemoveStdRoot": "NET_API_STATUS WINAPI NetDfsRemoveStdRoot(LPWSTR ServerName,LPWSTR RootShare,DWORD Flags);", "NetDfsAddFtRoot": "NET_API_STATUS WINAPI NetDfsAddFtRoot(LPWSTR ServerName,LPWSTR RootShare,LPWSTR FtDfsName,LPWSTR Comment,DWORD Flags);", "NetDfsRemoveFtRoot": "NET_API_STATUS WINAPI NetDfsRemoveFtRoot(LPWSTR ServerName,LPWSTR RootShare,LPWSTR FtDfsName,DWORD Flags);", "NetDfsRemoveFtRootForced": "NET_API_STATUS WINAPI NetDfsRemoveFtRootForced(LPWSTR DomainName,LPWSTR ServerName,LPWSTR RootShare,LPWSTR FtDfsName,DWORD Flags);", "NetDfsManagerInitialize": "NET_API_STATUS WINAPI NetDfsManagerInitialize(LPWSTR ServerName,DWORD Flags);", "NetDfsAddStdRootForced": "NET_API_STATUS WINAPI NetDfsAddStdRootForced(LPWSTR ServerName,LPWSTR RootShare,LPWSTR Comment,LPWSTR Store);", "NetDfsGetDcAddress": "NET_API_STATUS WINAPI NetDfsGetDcAddress(LPWSTR ServerName,LPWSTR *DcIpAddress,BOOLEAN *IsRoot,ULONG *Timeout);", "NetDfsRemove": "NET_API_STATUS WINAPI NetDfsRemove(LPWSTR DfsEntryPath,LPWSTR ServerName,LPWSTR ShareName);", "NetDfsEnum": "NET_API_STATUS WINAPI NetDfsEnum(LPWSTR DfsName,DWORD Level,DWORD PrefMaxLen,LPBYTE *Buffer,LPDWORD EntriesRead,LPDWORD ResumeHandle);", "NetDfsGetInfo": "NET_API_STATUS WINAPI NetDfsGetInfo(LPWSTR DfsEntryPath,LPWSTR ServerName,LPWSTR ShareName,DWORD Level,LPBYTE *Buffer);", "NetDfsSetInfo": "NET_API_STATUS WINAPI NetDfsSetInfo(LPWSTR DfsEntryPath,LPWSTR ServerName,LPWSTR ShareName,DWORD Level,LPBYTE Buffer);", "NetDfsGetClientInfo": "NET_API_STATUS WINAPI NetDfsGetClientInfo(LPWSTR DfsEntryPath,LPWSTR ServerName,LPWSTR ShareName,DWORD Level,LPBYTE *Buffer);", "NetDfsSetClientInfo": "NET_API_STATUS WINAPI NetDfsSetClientInfo(LPWSTR DfsEntryPath,LPWSTR ServerName,LPWSTR ShareName,DWORD Level,LPBYTE Buffer);", "NetDfsMove": "NET_API_STATUS WINAPI NetDfsMove(LPWSTR DfsEntryPath,LPWSTR DfsNewEntryPath,ULONG Flags);", "NetDfsRename": "NET_API_STATUS WINAPI NetDfsRename(LPWSTR Path,LPWSTR NewPath);", "NetDfsGetSecurity": "NET_API_STATUS WINAPI NetDfsGetSecurity(LPWSTR DfsEntryPath,SECURITY_INFORMATION SecurityInformation,PSECURITY_DESCRIPTOR *ppSecurityDescriptor,LPDWORD lpcbSecurityDescriptor);", "NetDfsSetSecurity": "NET_API_STATUS WINAPI NetDfsSetSecurity(LPWSTR DfsEntryPath,SECURITY_INFORMATION SecurityInformation,PSECURITY_DESCRIPTOR pSecurityDescriptor);", "NetDfsGetStdContainerSecurity": "NET_API_STATUS WINAPI NetDfsGetStdContainerSecurity(LPWSTR MachineName,SECURITY_INFORMATION SecurityInformation,PSECURITY_DESCRIPTOR *ppSecurityDescriptor,LPDWORD lpcbSecurityDescriptor);", "NetDfsSetStdContainerSecurity": "NET_API_STATUS WINAPI NetDfsSetStdContainerSecurity(LPWSTR MachineName,SECURITY_INFORMATION SecurityInformation,PSECURITY_DESCRIPTOR pSecurityDescriptor);", "NetDfsGetFtContainerSecurity": "NET_API_STATUS WINAPI NetDfsGetFtContainerSecurity(LPWSTR DomainName,SECURITY_INFORMATION SecurityInformation,PSECURITY_DESCRIPTOR *ppSecurityDescriptor,LPDWORD lpcbSecurityDescriptor);", "NetDfsSetFtContainerSecurity": "NET_API_STATUS WINAPI NetDfsSetFtContainerSecurity(LPWSTR DomainName,SECURITY_INFORMATION SecurityInformation,PSECURITY_DESCRIPTOR pSecurityDescriptor);", "timeGetSystemTime": "WINMMAPI MMRESULT WINAPI timeGetSystemTime(LPMMTIME pmmt, UINT cbmmt);", "timeGetTime": "WINMMAPI DWORD WINAPI timeGetTime(void);", "timeGetDevCaps": "WINMMAPI MMRESULT WINAPI timeGetDevCaps(LPTIMECAPS ptc, UINT cbtc);", "timeBeginPeriod": "WINMMAPI MMRESULT WINAPI timeBeginPeriod(UINT uPeriod);", "timeEndPeriod": "WINMMAPI MMRESULT WINAPI timeEndPeriod(UINT uPeriod);", "HtmlHelpA": "HWND WINAPI HtmlHelpA(HWND hwndCaller,LPCSTR pszFile,UINT uCommand,DWORD_PTR dwData);", "HtmlHelpW": "HWND WINAPI HtmlHelpW(HWND hwndCaller,LPCWSTR pszFile,UINT uCommand,DWORD_PTR dwData);", "mciSendCommandA": "WINMMAPI MCIERROR WINAPI mciSendCommandA(MCIDEVICEID mciId, UINT uMsg, DWORD_PTR dwParam1, DWORD_PTR dwParam2);", "mciSendCommandW": "WINMMAPI MCIERROR WINAPI mciSendCommandW(MCIDEVICEID mciId, UINT uMsg, DWORD_PTR dwParam1, DWORD_PTR dwParam2);", "mciSendStringA": "WINMMAPI MCIERROR WINAPI mciSendStringA(LPCSTR lpstrCommand, LPSTR lpstrReturnString, UINT uReturnLength, HWND hwndCallback);", "mciSendStringW": "WINMMAPI MCIERROR WINAPI mciSendStringW(LPCWSTR lpstrCommand, LPWSTR lpstrReturnString, UINT uReturnLength, HWND hwndCallback);", "mciGetDeviceIDA": "WINMMAPI MCIDEVICEID WINAPI mciGetDeviceIDA(LPCSTR pszDevice);", "mciGetDeviceIDW": "WINMMAPI MCIDEVICEID WINAPI mciGetDeviceIDW(LPCWSTR pszDevice);", "mciGetDeviceIDFromElementIDA": "WINMMAPI MCIDEVICEID WINAPI mciGetDeviceIDFromElementIDA(DWORD dwElementID, LPCSTR lpstrType);", "mciGetDeviceIDFromElementIDW": "WINMMAPI MCIDEVICEID WINAPI mciGetDeviceIDFromElementIDW(DWORD dwElementID, LPCWSTR lpstrType);", "mciGetErrorStringA": "WINMMAPI WINBOOL WINAPI mciGetErrorStringA(MCIERROR mcierr, LPSTR pszText, UINT cchText);", "mciGetErrorStringW": "WINMMAPI WINBOOL WINAPI mciGetErrorStringW(MCIERROR mcierr, LPWSTR pszText, UINT cchText);", "mciSetYieldProc": "WINMMAPI WINBOOL WINAPI mciSetYieldProc(MCIDEVICEID mciId, YIELDPROC fpYieldProc, DWORD dwYieldData);", "mciGetCreatorTask": "WINMMAPI HTASK WINAPI mciGetCreatorTask(MCIDEVICEID mciId);", "mciGetYieldProc": "WINMMAPI YIELDPROC WINAPI mciGetYieldProc(MCIDEVICEID mciId, LPDWORD pdwYieldData);", "mciExecute": "WINMMAPI WINBOOL WINAPI mciExecute(LPCSTR pszCommand);", "ITaskTrigger_SetTrigger_Proxy": "HRESULT WINAPI ITaskTrigger_SetTrigger_Proxy(ITaskTrigger *This,const PTASK_TRIGGER pTrigger);", "ITaskTrigger_GetTrigger_Proxy": "HRESULT WINAPI ITaskTrigger_GetTrigger_Proxy(ITaskTrigger *This,PTASK_TRIGGER pTrigger);", "ITaskTrigger_GetTriggerString_Proxy": "HRESULT WINAPI ITaskTrigger_GetTriggerString_Proxy(ITaskTrigger *This,LPWSTR *ppwszTrigger);", "IScheduledWorkItem_CreateTrigger_Proxy": "HRESULT WINAPI IScheduledWorkItem_CreateTrigger_Proxy(IScheduledWorkItem *This,WORD *piNewTrigger,ITaskTrigger **ppTrigger);", "IScheduledWorkItem_DeleteTrigger_Proxy": "HRESULT WINAPI IScheduledWorkItem_DeleteTrigger_Proxy(IScheduledWorkItem *This,WORD iTrigger);", "IScheduledWorkItem_GetTriggerCount_Proxy": "HRESULT WINAPI IScheduledWorkItem_GetTriggerCount_Proxy(IScheduledWorkItem *This,WORD *pwCount);", "IScheduledWorkItem_GetTrigger_Proxy": "HRESULT WINAPI IScheduledWorkItem_GetTrigger_Proxy(IScheduledWorkItem *This,WORD iTrigger,ITaskTrigger **ppTrigger);", "IScheduledWorkItem_GetTriggerString_Proxy": "HRESULT WINAPI IScheduledWorkItem_GetTriggerString_Proxy(IScheduledWorkItem *This,WORD iTrigger,LPWSTR *ppwszTrigger);", "IScheduledWorkItem_GetRunTimes_Proxy": "HRESULT WINAPI IScheduledWorkItem_GetRunTimes_Proxy(IScheduledWorkItem *This,const LPSYSTEMTIME pstBegin,const LPSYSTEMTIME pstEnd,WORD *pCount,LPSYSTEMTIME *rgstTaskTimes);", "IScheduledWorkItem_GetNextRunTime_Proxy": "HRESULT WINAPI IScheduledWorkItem_GetNextRunTime_Proxy(IScheduledWorkItem *This,SYSTEMTIME *pstNextRun);", "IScheduledWorkItem_SetIdleWait_Proxy": "HRESULT WINAPI IScheduledWorkItem_SetIdleWait_Proxy(IScheduledWorkItem *This,WORD wIdleMinutes,WORD wDeadlineMinutes);", "IScheduledWorkItem_GetIdleWait_Proxy": "HRESULT WINAPI IScheduledWorkItem_GetIdleWait_Proxy(IScheduledWorkItem *This,WORD *pwIdleMinutes,WORD *pwDeadlineMinutes);", "IScheduledWorkItem_Run_Proxy": "HRESULT WINAPI IScheduledWorkItem_Run_Proxy(IScheduledWorkItem *This);", "IScheduledWorkItem_Terminate_Proxy": "HRESULT WINAPI IScheduledWorkItem_Terminate_Proxy(IScheduledWorkItem *This);", "IScheduledWorkItem_EditWorkItem_Proxy": "HRESULT WINAPI IScheduledWorkItem_EditWorkItem_Proxy(IScheduledWorkItem *This,HWND hParent,DWORD dwReserved);", "IScheduledWorkItem_GetMostRecentRunTime_Proxy": "HRESULT WINAPI IScheduledWorkItem_GetMostRecentRunTime_Proxy(IScheduledWorkItem *This,SYSTEMTIME *pstLastRun);", "IScheduledWorkItem_GetStatus_Proxy": "HRESULT WINAPI IScheduledWorkItem_GetStatus_Proxy(IScheduledWorkItem *This,HRESULT *phrStatus);", "IScheduledWorkItem_GetExitCode_Proxy": "HRESULT WINAPI IScheduledWorkItem_GetExitCode_Proxy(IScheduledWorkItem *This,DWORD *pdwExitCode);", "IScheduledWorkItem_SetComment_Proxy": "HRESULT WINAPI IScheduledWorkItem_SetComment_Proxy(IScheduledWorkItem *This,LPCWSTR pwszComment);", "IScheduledWorkItem_GetComment_Proxy": "HRESULT WINAPI IScheduledWorkItem_GetComment_Proxy(IScheduledWorkItem *This,LPWSTR *ppwszComment);", "IScheduledWorkItem_SetCreator_Proxy": "HRESULT WINAPI IScheduledWorkItem_SetCreator_Proxy(IScheduledWorkItem *This,LPCWSTR pwszCreator);", "IScheduledWorkItem_GetCreator_Proxy": "HRESULT WINAPI IScheduledWorkItem_GetCreator_Proxy(IScheduledWorkItem *This,LPWSTR *ppwszCreator);", "IScheduledWorkItem_SetWorkItemData_Proxy": "HRESULT WINAPI IScheduledWorkItem_SetWorkItemData_Proxy(IScheduledWorkItem *This,WORD cbData,BYTE rgbData[]);", "IScheduledWorkItem_GetWorkItemData_Proxy": "HRESULT WINAPI IScheduledWorkItem_GetWorkItemData_Proxy(IScheduledWorkItem *This,WORD *pcbData,BYTE **prgbData);", "IScheduledWorkItem_SetErrorRetryCount_Proxy": "HRESULT WINAPI IScheduledWorkItem_SetErrorRetryCount_Proxy(IScheduledWorkItem *This,WORD wRetryCount);", "IScheduledWorkItem_GetErrorRetryCount_Proxy": "HRESULT WINAPI IScheduledWorkItem_GetErrorRetryCount_Proxy(IScheduledWorkItem *This,WORD *pwRetryCount);", "IScheduledWorkItem_SetErrorRetryInterval_Proxy": "HRESULT WINAPI IScheduledWorkItem_SetErrorRetryInterval_Proxy(IScheduledWorkItem *This,WORD wRetryInterval);", "IScheduledWorkItem_GetErrorRetryInterval_Proxy": "HRESULT WINAPI IScheduledWorkItem_GetErrorRetryInterval_Proxy(IScheduledWorkItem *This,WORD *pwRetryInterval);", "IScheduledWorkItem_SetFlags_Proxy": "HRESULT WINAPI IScheduledWorkItem_SetFlags_Proxy(IScheduledWorkItem *This,DWORD dwFlags);", "IScheduledWorkItem_GetFlags_Proxy": "HRESULT WINAPI IScheduledWorkItem_GetFlags_Proxy(IScheduledWorkItem *This,DWORD *pdwFlags);", "IScheduledWorkItem_SetAccountInformation_Proxy": "HRESULT WINAPI IScheduledWorkItem_SetAccountInformation_Proxy(IScheduledWorkItem *This,LPCWSTR pwszAccountName,LPCWSTR pwszPassword);", "IScheduledWorkItem_GetAccountInformation_Proxy": "HRESULT WINAPI IScheduledWorkItem_GetAccountInformation_Proxy(IScheduledWorkItem *This,LPWSTR *ppwszAccountName);", "ITask_SetApplicationName_Proxy": "HRESULT WINAPI ITask_SetApplicationName_Proxy(ITask *This,LPCWSTR pwszApplicationName);", "ITask_GetApplicationName_Proxy": "HRESULT WINAPI ITask_GetApplicationName_Proxy(ITask *This,LPWSTR *ppwszApplicationName);", "ITask_SetParameters_Proxy": "HRESULT WINAPI ITask_SetParameters_Proxy(ITask *This,LPCWSTR pwszParameters);", "ITask_GetParameters_Proxy": "HRESULT WINAPI ITask_GetParameters_Proxy(ITask *This,LPWSTR *ppwszParameters);", "ITask_SetWorkingDirectory_Proxy": "HRESULT WINAPI ITask_SetWorkingDirectory_Proxy(ITask *This,LPCWSTR pwszWorkingDirectory);", "ITask_GetWorkingDirectory_Proxy": "HRESULT WINAPI ITask_GetWorkingDirectory_Proxy(ITask *This,LPWSTR *ppwszWorkingDirectory);", "ITask_SetPriority_Proxy": "HRESULT WINAPI ITask_SetPriority_Proxy(ITask *This,DWORD dwPriority);", "ITask_GetPriority_Proxy": "HRESULT WINAPI ITask_GetPriority_Proxy(ITask *This,DWORD *pdwPriority);", "ITask_SetTaskFlags_Proxy": "HRESULT WINAPI ITask_SetTaskFlags_Proxy(ITask *This,DWORD dwFlags);", "ITask_GetTaskFlags_Proxy": "HRESULT WINAPI ITask_GetTaskFlags_Proxy(ITask *This,DWORD *pdwFlags);", "ITask_SetMaxRunTime_Proxy": "HRESULT WINAPI ITask_SetMaxRunTime_Proxy(ITask *This,DWORD dwMaxRunTimeMS);", "ITask_GetMaxRunTime_Proxy": "HRESULT WINAPI ITask_GetMaxRunTime_Proxy(ITask *This,DWORD *pdwMaxRunTimeMS);", "IEnumWorkItems_Next_Proxy": "HRESULT WINAPI IEnumWorkItems_Next_Proxy(IEnumWorkItems *This,ULONG celt,LPWSTR **rgpwszNames,ULONG *pceltFetched);", "IEnumWorkItems_Skip_Proxy": "HRESULT WINAPI IEnumWorkItems_Skip_Proxy(IEnumWorkItems *This,ULONG celt);", "IEnumWorkItems_Reset_Proxy": "HRESULT WINAPI IEnumWorkItems_Reset_Proxy(IEnumWorkItems *This);", "IEnumWorkItems_Clone_Proxy": "HRESULT WINAPI IEnumWorkItems_Clone_Proxy(IEnumWorkItems *This,IEnumWorkItems **ppEnumWorkItems);", "ITaskScheduler_SetTargetComputer_Proxy": "HRESULT WINAPI ITaskScheduler_SetTargetComputer_Proxy(ITaskScheduler *This,LPCWSTR pwszComputer);", "ITaskScheduler_GetTargetComputer_Proxy": "HRESULT WINAPI ITaskScheduler_GetTargetComputer_Proxy(ITaskScheduler *This,LPWSTR *ppwszComputer);", "ITaskScheduler_Enum_Proxy": "HRESULT WINAPI ITaskScheduler_Enum_Proxy(ITaskScheduler *This,IEnumWorkItems **ppEnumWorkItems);", "ITaskScheduler_Activate_Proxy": "HRESULT WINAPI ITaskScheduler_Activate_Proxy(ITaskScheduler *This,LPCWSTR pwszName,REFIID riid,IUnknown **ppUnk);", "ITaskScheduler_Delete_Proxy": "HRESULT WINAPI ITaskScheduler_Delete_Proxy(ITaskScheduler *This,LPCWSTR pwszName);", "ITaskScheduler_NewWorkItem_Proxy": "HRESULT WINAPI ITaskScheduler_NewWorkItem_Proxy(ITaskScheduler *This,LPCWSTR pwszTaskName,REFCLSID rclsid,REFIID riid,IUnknown **ppUnk);", "ITaskScheduler_AddWorkItem_Proxy": "HRESULT WINAPI ITaskScheduler_AddWorkItem_Proxy(ITaskScheduler *This,LPCWSTR pwszTaskName,IScheduledWorkItem *pWorkItem);", "ITaskScheduler_IsOfType_Proxy": "HRESULT WINAPI ITaskScheduler_IsOfType_Proxy(ITaskScheduler *This,LPCWSTR pwszName,REFIID riid);", "IProvideTaskPage_GetPage_Proxy": "HRESULT WINAPI IProvideTaskPage_GetPage_Proxy(IProvideTaskPage *This,TASKPAGE tpType,WINBOOL fPersistChanges,HPROPSHEETPAGE *phPage);", "TSPI_lineAccept": "LONG WINAPI TSPI_lineAccept(DRV_REQUESTID dwRequestID,HDRVCALL hdCall,LPCSTR lpsUserUserInfo,DWORD dwSize);", "TSPI_lineAddToConference": "LONG WINAPI TSPI_lineAddToConference(DRV_REQUESTID dwRequestID,HDRVCALL hdConfCall,HDRVCALL hdConsultCall);", "TSPI_lineAnswer": "LONG WINAPI TSPI_lineAnswer(DRV_REQUESTID dwRequestID,HDRVCALL hdCall,LPCSTR lpsUserUserInfo,DWORD dwSize);", "TSPI_lineBlindTransfer": "LONG WINAPI TSPI_lineBlindTransfer(DRV_REQUESTID dwRequestID,HDRVCALL hdCall,LPCWSTR lpszDestAddress,DWORD dwCountryCode);", "TSPI_lineClose": "LONG WINAPI TSPI_lineClose(HDRVLINE hdLine);", "TSPI_lineCloseCall": "LONG WINAPI TSPI_lineCloseCall(HDRVCALL hdCall);", "TSPI_lineCompleteCall": "LONG WINAPI TSPI_lineCompleteCall(DRV_REQUESTID dwRequestID,HDRVCALL hdCall,LPDWORD lpdwCompletionID,DWORD dwCompletionMode,DWORD dwMessageID);", "TSPI_lineCompleteTransfer": "LONG WINAPI TSPI_lineCompleteTransfer(DRV_REQUESTID dwRequestID,HDRVCALL hdCall,HDRVCALL hdConsultCall,HTAPICALL htConfCall,LPHDRVCALL lphdConfCall,DWORD dwTransferMode);", "TSPI_lineConditionalMediaDetection": "LONG WINAPI TSPI_lineConditionalMediaDetection(HDRVLINE hdLine,DWORD dwMediaModes,LPLINECALLPARAMS const lpCallParams);", "TSPI_lineDevSpecific": "LONG WINAPI TSPI_lineDevSpecific(DRV_REQUESTID dwRequestID,HDRVLINE hdLine,DWORD dwAddressID,HDRVCALL hdCall,LPVOID lpParams,DWORD dwSize);", "TSPI_lineDevSpecificFeature": "LONG WINAPI TSPI_lineDevSpecificFeature(DRV_REQUESTID dwRequestID,HDRVLINE hdLine,DWORD dwFeature,LPVOID lpParams,DWORD dwSize);", "TSPI_lineDial": "LONG WINAPI TSPI_lineDial(DRV_REQUESTID dwRequestID,HDRVCALL hdCall,LPCWSTR lpszDestAddress,DWORD dwCountryCode);", "TSPI_lineDrop": "LONG WINAPI TSPI_lineDrop(DRV_REQUESTID dwRequestID,HDRVCALL hdCall,LPCSTR lpsUserUserInfo,DWORD dwSize);", "TSPI_lineDropOnClose": "LONG WINAPI TSPI_lineDropOnClose(HDRVCALL hdCall);", "TSPI_lineDropNoOwner": "LONG WINAPI TSPI_lineDropNoOwner(HDRVCALL hdCall);", "TSPI_lineForward": "LONG WINAPI TSPI_lineForward(DRV_REQUESTID dwRequestID,HDRVLINE hdLine,DWORD bAllAddresses,DWORD dwAddressID,LPLINEFORWARDLIST const lpForwardList,DWORD dwNumRingsNoAnswer,HTAPICALL htConsultCall,LPHDRVCALL lphdConsultCall,LPLINECALLPARAMS const lpCallParams);", "TSPI_lineGatherDigits": "LONG WINAPI TSPI_lineGatherDigits(HDRVCALL hdCall,DWORD dwEndToEndID,DWORD dwDigitModes,LPWSTR lpsDigits,DWORD dwNumDigits,LPCWSTR lpszTerminationDigits,DWORD dwFirstDigitTimeout,DWORD dwInterDigitTimeout);", "TSPI_lineGenerateDigits": "LONG WINAPI TSPI_lineGenerateDigits(HDRVCALL hdCall,DWORD dwEndToEndID,DWORD dwDigitMode,LPCWSTR lpszDigits,DWORD dwDuration);", "TSPI_lineGenerateTone": "LONG WINAPI TSPI_lineGenerateTone(HDRVCALL hdCall,DWORD dwEndToEndID,DWORD dwToneMode,DWORD dwDuration,DWORD dwNumTones,LPLINEGENERATETONE const lpTones);", "TSPI_lineGetAddressCaps": "LONG WINAPI TSPI_lineGetAddressCaps(DWORD dwDeviceID,DWORD dwAddressID,DWORD dwTSPIVersion,DWORD dwExtVersion,LPLINEADDRESSCAPS lpAddressCaps);", "TSPI_lineGetAddressID": "LONG WINAPI TSPI_lineGetAddressID(HDRVLINE hdLine,LPDWORD lpdwAddressID,DWORD dwAddressMode,LPCWSTR lpsAddress,DWORD dwSize);", "TSPI_lineGetAddressStatus": "LONG WINAPI TSPI_lineGetAddressStatus(HDRVLINE hdLine,DWORD dwAddressID,LPLINEADDRESSSTATUS lpAddressStatus);", "TSPI_lineGetCallAddressID": "LONG WINAPI TSPI_lineGetCallAddressID(HDRVCALL hdCall,LPDWORD lpdwAddressID);", "TSPI_lineGetCallHubTracking": "LONG WINAPI TSPI_lineGetCallHubTracking(HDRVLINE hdLine,LPLINECALLHUBTRACKINGINFO lpTrackingInfo);", "TSPI_lineGetCallIDs": "LONG WINAPI TSPI_lineGetCallIDs(HDRVCALL hdCall,LPDWORD lpdwAddressID,LPDWORD lpdwCallID,LPDWORD lpdwRelatedCallID);", "TSPI_lineGetCallInfo": "LONG WINAPI TSPI_lineGetCallInfo(HDRVCALL hdCall,LPLINECALLINFO lpCallInfo);", "TSPI_lineGetCallStatus": "LONG WINAPI TSPI_lineGetCallStatus(HDRVCALL hdCall,LPLINECALLSTATUS lpCallStatus);", "TSPI_lineGetDevCaps": "LONG WINAPI TSPI_lineGetDevCaps(DWORD dwDeviceID,DWORD dwTSPIVersion,DWORD dwExtVersion,LPLINEDEVCAPS lpLineDevCaps);", "TSPI_lineGetDevConfig": "LONG WINAPI TSPI_lineGetDevConfig(DWORD dwDeviceID,LPVARSTRING lpDeviceConfig,LPCWSTR lpszDeviceClass);", "TSPI_lineGetExtensionID": "LONG WINAPI TSPI_lineGetExtensionID(DWORD dwDeviceID,DWORD dwTSPIVersion,LPLINEEXTENSIONID lpExtensionID);", "TSPI_lineGetIcon": "LONG WINAPI TSPI_lineGetIcon(DWORD dwDeviceID,LPCWSTR lpszDeviceClass,LPHICON lphIcon);", "TSPI_lineGetID": "LONG WINAPI TSPI_lineGetID(HDRVLINE hdLine,DWORD dwAddressID,HDRVCALL hdCall,DWORD dwSelect,LPVARSTRING lpDeviceID,LPCWSTR lpszDeviceClass,HANDLE hTargetProcess);", "TSPI_lineGetLineDevStatus": "LONG WINAPI TSPI_lineGetLineDevStatus(HDRVLINE hdLine,LPLINEDEVSTATUS lpLineDevStatus);", "TSPI_lineGetNumAddressIDs": "LONG WINAPI TSPI_lineGetNumAddressIDs(HDRVLINE hdLine,LPDWORD lpdwNumAddressIDs);", "TSPI_lineHold": "LONG WINAPI TSPI_lineHold(DRV_REQUESTID dwRequestID,HDRVCALL hdCall);", "TSPI_lineMakeCall": "LONG WINAPI TSPI_lineMakeCall(DRV_REQUESTID dwRequestID,HDRVLINE hdLine,HTAPICALL htCall,LPHDRVCALL lphdCall,LPCWSTR lpszDestAddress,DWORD dwCountryCode,LPLINECALLPARAMS const lpCallParams);", "TSPI_lineMonitorDigits": "LONG WINAPI TSPI_lineMonitorDigits(HDRVCALL hdCall,DWORD dwDigitModes);", "TSPI_lineMonitorMedia": "LONG WINAPI TSPI_lineMonitorMedia(HDRVCALL hdCall,DWORD dwMediaModes);", "TSPI_lineMonitorTones": "LONG WINAPI TSPI_lineMonitorTones(HDRVCALL hdCall,DWORD dwToneListID,LPLINEMONITORTONE const lpToneList,DWORD dwNumEntries);", "TSPI_lineNegotiateExtVersion": "LONG WINAPI TSPI_lineNegotiateExtVersion(DWORD dwDeviceID,DWORD dwTSPIVersion,DWORD dwLowVersion,DWORD dwHighVersion,LPDWORD lpdwExtVersion);", "TSPI_lineNegotiateTSPIVersion": "LONG WINAPI TSPI_lineNegotiateTSPIVersion(DWORD dwDeviceID,DWORD dwLowVersion,DWORD dwHighVersion,LPDWORD lpdwTSPIVersion);", "TSPI_lineOpen": "LONG WINAPI TSPI_lineOpen(DWORD dwDeviceID,HTAPILINE htLine,LPHDRVLINE lphdLine,DWORD dwTSPIVersion,LINEEVENT lpfnEventProc);", "TSPI_linePark": "LONG WINAPI TSPI_linePark(DRV_REQUESTID dwRequestID,HDRVCALL hdCall,DWORD dwParkMode,LPCWSTR lpszDirAddress,LPVARSTRING lpNonDirAddress);", "TSPI_linePickup": "LONG WINAPI TSPI_linePickup(DRV_REQUESTID dwRequestID,HDRVLINE hdLine,DWORD dwAddressID,HTAPICALL htCall,LPHDRVCALL lphdCall,LPCWSTR lpszDestAddress,LPCWSTR lpszGroupID);", "TSPI_linePrepareAddToConference": "LONG WINAPI TSPI_linePrepareAddToConference(DRV_REQUESTID dwRequestID,HDRVCALL hdConfCall,HTAPICALL htConsultCall,LPHDRVCALL lphdConsultCall,LPLINECALLPARAMS const lpCallParams);", "TSPI_lineRedirect": "LONG WINAPI TSPI_lineRedirect(DRV_REQUESTID dwRequestID,HDRVCALL hdCall,LPCWSTR lpszDestAddress,DWORD dwCountryCode);", "TSPI_lineReleaseUserUserInfo": "LONG WINAPI TSPI_lineReleaseUserUserInfo(DRV_REQUESTID dwRequestID,HDRVCALL hdCall);", "TSPI_lineRemoveFromConference": "LONG WINAPI TSPI_lineRemoveFromConference(DRV_REQUESTID dwRequestID,HDRVCALL hdCall);", "TSPI_lineSecureCall": "LONG WINAPI TSPI_lineSecureCall(DRV_REQUESTID dwRequestID,HDRVCALL hdCall);", "TSPI_lineSelectExtVersion": "LONG WINAPI TSPI_lineSelectExtVersion(HDRVLINE hdLine,DWORD dwExtVersion);", "TSPI_lineSendUserUserInfo": "LONG WINAPI TSPI_lineSendUserUserInfo(DRV_REQUESTID dwRequestID,HDRVCALL hdCall,LPCSTR lpsUserUserInfo,DWORD dwSize);", "TSPI_lineSetAppSpecific": "LONG WINAPI TSPI_lineSetAppSpecific(HDRVCALL hdCall,DWORD dwAppSpecific);", "TSPI_lineSetCallData": "LONG WINAPI TSPI_lineSetCallData(DRV_REQUESTID dwRequestID,HDRVCALL hdCall,LPVOID lpCallData,DWORD dwSize);", "TSPI_lineSetCallHubTracking": "LONG WINAPI TSPI_lineSetCallHubTracking(HDRVLINE hdLine,LPLINECALLHUBTRACKINGINFO lpTrackingInfo);", "TSPI_lineSetCallParams": "LONG WINAPI TSPI_lineSetCallParams(DRV_REQUESTID dwRequestID,HDRVCALL hdCall,DWORD dwBearerMode,DWORD dwMinRate,DWORD dwMaxRate,LPLINEDIALPARAMS const lpDialParams);", "TSPI_lineSetCallQualityOfService": "LONG WINAPI TSPI_lineSetCallQualityOfService(DRV_REQUESTID dwRequestID,HDRVCALL hdCall,LPVOID lpSendingFlowspec,DWORD dwSendingFlowspecSize,LPVOID lpReceivingFlowspec,DWORD dwReceivingFlowspecSize);", "TSPI_lineSetCallTreatment": "LONG WINAPI TSPI_lineSetCallTreatment(DRV_REQUESTID dwRequestID,HDRVCALL hdCall,DWORD dwTreatment);", "TSPI_lineSetCurrentLocation": "LONG WINAPI TSPI_lineSetCurrentLocation(DWORD dwLocation);", "TSPI_lineSetDefaultMediaDetection": "LONG WINAPI TSPI_lineSetDefaultMediaDetection(HDRVLINE hdLine,DWORD dwMediaModes);", "TSPI_lineSetDevConfig": "LONG WINAPI TSPI_lineSetDevConfig(DWORD dwDeviceID,LPVOID const lpDeviceConfig,DWORD dwSize,LPCWSTR lpszDeviceClass);", "TSPI_lineSetLineDevStatus": "LONG WINAPI TSPI_lineSetLineDevStatus(DRV_REQUESTID dwRequestID,HDRVLINE hdLine,DWORD dwStatusToChange,DWORD fStatus);", "TSPI_lineSetMediaControl": "LONG WINAPI TSPI_lineSetMediaControl(HDRVLINE hdLine,DWORD dwAddressID,HDRVCALL hdCall,DWORD dwSelect,LPLINEMEDIACONTROLDIGIT const lpDigitList,DWORD dwDigitNumEntries,LPLINEMEDIACONTROLMEDIA const lpMediaList,DWORD dwMediaNumEntries,LPLINEMEDIACONTROLTONE const lpToneList,DWORD dwToneNumEntries,LPLINEMEDIACONTROLCALLSTATE const lpCallStateList,DWORD dwCallStateNumEntries);", "TSPI_lineSetMediaMode": "LONG WINAPI TSPI_lineSetMediaMode(HDRVCALL hdCall,DWORD dwMediaMode);", "TSPI_lineSetStatusMessages": "LONG WINAPI TSPI_lineSetStatusMessages(HDRVLINE hdLine,DWORD dwLineStates,DWORD dwAddressStates);", "TSPI_lineSetTerminal": "LONG WINAPI TSPI_lineSetTerminal(DRV_REQUESTID dwRequestID,HDRVLINE hdLine,DWORD dwAddressID,HDRVCALL hdCall,DWORD dwSelect,DWORD dwTerminalModes,DWORD dwTerminalID,DWORD bEnable);", "TSPI_lineSetupConference": "LONG WINAPI TSPI_lineSetupConference(DRV_REQUESTID dwRequestID,HDRVCALL hdCall,HDRVLINE hdLine,HTAPICALL htConfCall,LPHDRVCALL lphdConfCall,HTAPICALL htConsultCall,LPHDRVCALL lphdConsultCall,DWORD dwNumParties,LPLINECALLPARAMS const lpCallParams);", "TSPI_lineSetupTransfer": "LONG WINAPI TSPI_lineSetupTransfer(DRV_REQUESTID dwRequestID,HDRVCALL hdCall,HTAPICALL htConsultCall,LPHDRVCALL lphdConsultCall,LPLINECALLPARAMS const lpCallParams);", "TSPI_lineSwapHold": "LONG WINAPI TSPI_lineSwapHold(DRV_REQUESTID dwRequestID,HDRVCALL hdActiveCall,HDRVCALL hdHeldCall);", "TSPI_lineUncompleteCall": "LONG WINAPI TSPI_lineUncompleteCall(DRV_REQUESTID dwRequestID,HDRVLINE hdLine,DWORD dwCompletionID);", "TSPI_lineUnhold": "LONG WINAPI TSPI_lineUnhold(DRV_REQUESTID dwRequestID,HDRVCALL hdCall);", "TSPI_lineUnpark": "LONG WINAPI TSPI_lineUnpark(DRV_REQUESTID dwRequestID,HDRVLINE hdLine,DWORD dwAddressID,HTAPICALL htCall,LPHDRVCALL lphdCall,LPCWSTR lpszDestAddress);", "TSPI_phoneClose": "LONG WINAPI TSPI_phoneClose(HDRVPHONE hdPhone);", "TSPI_phoneDevSpecific": "LONG WINAPI TSPI_phoneDevSpecific(DRV_REQUESTID dwRequestID,HDRVPHONE hdPhone,LPVOID lpParams,DWORD dwSize);", "TSPI_phoneGetButtonInfo": "LONG WINAPI TSPI_phoneGetButtonInfo(HDRVPHONE hdPhone,DWORD dwButtonLampID,LPPHONEBUTTONINFO lpButtonInfo);", "TSPI_phoneGetData": "LONG WINAPI TSPI_phoneGetData(HDRVPHONE hdPhone,DWORD dwDataID,LPVOID lpData,DWORD dwSize);", "TSPI_phoneGetDevCaps": "LONG WINAPI TSPI_phoneGetDevCaps(DWORD dwDeviceID,DWORD dwTSPIVersion,DWORD dwExtVersion,LPPHONECAPS lpPhoneCaps);", "TSPI_phoneGetDisplay": "LONG WINAPI TSPI_phoneGetDisplay(HDRVPHONE hdPhone,LPVARSTRING lpDisplay);", "TSPI_phoneGetExtensionID": "LONG WINAPI TSPI_phoneGetExtensionID(DWORD dwDeviceID,DWORD dwTSPIVersion,LPPHONEEXTENSIONID lpExtensionID);", "TSPI_phoneGetGain": "LONG WINAPI TSPI_phoneGetGain(HDRVPHONE hdPhone,DWORD dwHookSwitchDev,LPDWORD lpdwGain);", "TSPI_phoneGetHookSwitch": "LONG WINAPI TSPI_phoneGetHookSwitch(HDRVPHONE hdPhone,LPDWORD lpdwHookSwitchDevs);", "TSPI_phoneGetIcon": "LONG WINAPI TSPI_phoneGetIcon(DWORD dwDeviceID,LPCWSTR lpszDeviceClass,LPHICON lphIcon);", "TSPI_phoneGetID": "LONG WINAPI TSPI_phoneGetID(HDRVPHONE hdPhone,LPVARSTRING lpDeviceID,LPCWSTR lpszDeviceClass,HANDLE hTargetProcess);", "TSPI_phoneGetLamp": "LONG WINAPI TSPI_phoneGetLamp(HDRVPHONE hdPhone,DWORD dwButtonLampID,LPDWORD lpdwLampMode);", "TSPI_phoneGetRing": "LONG WINAPI TSPI_phoneGetRing(HDRVPHONE hdPhone,LPDWORD lpdwRingMode,LPDWORD lpdwVolume);", "TSPI_phoneGetStatus": "LONG WINAPI TSPI_phoneGetStatus(HDRVPHONE hdPhone,LPPHONESTATUS lpPhoneStatus);", "TSPI_phoneGetVolume": "LONG WINAPI TSPI_phoneGetVolume(HDRVPHONE hdPhone,DWORD dwHookSwitchDev,LPDWORD lpdwVolume);", "TSPI_phoneNegotiateExtVersion": "LONG WINAPI TSPI_phoneNegotiateExtVersion(DWORD dwDeviceID,DWORD dwTSPIVersion,DWORD dwLowVersion,DWORD dwHighVersion,LPDWORD lpdwExtVersion);", "TSPI_phoneNegotiateTSPIVersion": "LONG WINAPI TSPI_phoneNegotiateTSPIVersion(DWORD dwDeviceID,DWORD dwLowVersion,DWORD dwHighVersion,LPDWORD lpdwTSPIVersion);", "TSPI_phoneOpen": "LONG WINAPI TSPI_phoneOpen(DWORD dwDeviceID,HTAPIPHONE htPhone,LPHDRVPHONE lphdPhone,DWORD dwTSPIVersion,PHONEEVENT lpfnEventProc);", "TSPI_phoneSelectExtVersion": "LONG WINAPI TSPI_phoneSelectExtVersion(HDRVPHONE hdPhone,DWORD dwExtVersion);", "TSPI_phoneSetButtonInfo": "LONG WINAPI TSPI_phoneSetButtonInfo(DRV_REQUESTID dwRequestID,HDRVPHONE hdPhone,DWORD dwButtonLampID,LPPHONEBUTTONINFO const lpButtonInfo);", "TSPI_phoneSetData": "LONG WINAPI TSPI_phoneSetData(DRV_REQUESTID dwRequestID,HDRVPHONE hdPhone,DWORD dwDataID,LPVOID const lpData,DWORD dwSize);", "TSPI_phoneSetDisplay": "LONG WINAPI TSPI_phoneSetDisplay(DRV_REQUESTID dwRequestID,HDRVPHONE hdPhone,DWORD dwRow,DWORD dwColumn,LPCWSTR lpsDisplay,DWORD dwSize);", "TSPI_phoneSetGain": "LONG WINAPI TSPI_phoneSetGain(DRV_REQUESTID dwRequestID,HDRVPHONE hdPhone,DWORD dwHookSwitchDev,DWORD dwGain);", "TSPI_phoneSetHookSwitch": "LONG WINAPI TSPI_phoneSetHookSwitch(DRV_REQUESTID dwRequestID,HDRVPHONE hdPhone,DWORD dwHookSwitchDevs,DWORD dwHookSwitchMode);", "TSPI_phoneSetLamp": "LONG WINAPI TSPI_phoneSetLamp(DRV_REQUESTID dwRequestID,HDRVPHONE hdPhone,DWORD dwButtonLampID,DWORD dwLampMode);", "TSPI_phoneSetRing": "LONG WINAPI TSPI_phoneSetRing(DRV_REQUESTID dwRequestID,HDRVPHONE hdPhone,DWORD dwRingMode,DWORD dwVolume);", "TSPI_phoneSetStatusMessages": "LONG WINAPI TSPI_phoneSetStatusMessages(HDRVPHONE hdPhone,DWORD dwPhoneStates,DWORD dwButtonModes,DWORD dwButtonStates);", "TSPI_phoneSetVolume": "LONG WINAPI TSPI_phoneSetVolume(DRV_REQUESTID dwRequestID,HDRVPHONE hdPhone,DWORD dwHookSwitchDev,DWORD dwVolume);", "TSPI_providerConfig": "LONG WINAPI TSPI_providerConfig(HWND hwndOwner,DWORD dwPermanentProviderID);", "TSPI_providerCreateLineDevice": "LONG WINAPI TSPI_providerCreateLineDevice(DWORD_PTR dwTempID,DWORD dwDeviceID);", "TSPI_providerCreatePhoneDevice": "LONG WINAPI TSPI_providerCreatePhoneDevice(DWORD_PTR dwTempID,DWORD dwDeviceID);", "TSPI_providerEnumDevices": "LONG WINAPI TSPI_providerEnumDevices(DWORD dwPermanentProviderID,LPDWORD lpdwNumLines,LPDWORD lpdwNumPhones,HPROVIDER hProvider,LINEEVENT lpfnLineCreateProc,PHONEEVENT lpfnPhoneCreateProc);", "TSPI_providerFreeDialogInstance": "LONG WINAPI TSPI_providerFreeDialogInstance(HDRVDIALOGINSTANCE hdDlgInst);", "TSPI_providerGenericDialogData": "LONG WINAPI TSPI_providerGenericDialogData(DWORD_PTR dwObjectID,DWORD dwObjectType,LPVOID lpParams,DWORD dwSize);", "TSPI_providerInit": "LONG WINAPI TSPI_providerInit(DWORD dwTSPIVersion,DWORD dwPermanentProviderID,DWORD dwLineDeviceIDBase,DWORD dwPhoneDeviceIDBase,DWORD_PTR dwNumLines,DWORD_PTR dwNumPhones,ASYNC_COMPLETION lpfnCompletionProc,LPDWORD lpdwTSPIOptions);", "TSPI_providerInstall": "LONG WINAPI TSPI_providerInstall(HWND hwndOwner,DWORD dwPermanentProviderID);", "TSPI_providerRemove": "LONG WINAPI TSPI_providerRemove(HWND hwndOwner,DWORD dwPermanentProviderID);", "TSPI_providerShutdown": "LONG WINAPI TSPI_providerShutdown(DWORD dwTSPIVersion,DWORD dwPermanentProviderID);", "TSPI_providerUIIdentify": "LONG WINAPI TSPI_providerUIIdentify(LPWSTR lpszUIDLLName);", "TSPI_lineMSPIdentify": "LONG WINAPI TSPI_lineMSPIdentify(DWORD dwDeviceID,GUID *pCLSID);", "TSPI_lineCreateMSPInstance": "LONG WINAPI TSPI_lineCreateMSPInstance(HDRVLINE hdLine,DWORD dwAddressID,HTAPIMSPLINE htMSPLine,LPHDRVMSPLINE lphdMSPLine);", "TSPI_lineCloseMSPInstance": "LONG WINAPI TSPI_lineCloseMSPInstance(HDRVMSPLINE hdMSPLine);", "TSPI_lineReceiveMSPData": "LONG WINAPI TSPI_lineReceiveMSPData(HDRVLINE hdLine,HDRVCALL hdCall,HDRVMSPLINE hdMSPLine,LPVOID pBuffer,DWORD dwSize);", "TUISPI_lineConfigDialog": "LONG WINAPI TUISPI_lineConfigDialog(TUISPIDLLCALLBACK lpfnUIDLLCallback,DWORD dwDeviceID,HWND hwndOwner,LPCWSTR lpszDeviceClass);", "TUISPI_lineConfigDialogEdit": "LONG WINAPI TUISPI_lineConfigDialogEdit(TUISPIDLLCALLBACK lpfnUIDLLCallback,DWORD dwDeviceID,HWND hwndOwner,LPCWSTR lpszDeviceClass,LPVOID const lpDeviceConfigIn,DWORD dwSize,LPVARSTRING lpDeviceConfigOut);", "TUISPI_phoneConfigDialog": "LONG WINAPI TUISPI_phoneConfigDialog(TUISPIDLLCALLBACK lpfnUIDLLCallback,DWORD dwDeviceID,HWND hwndOwner,LPCWSTR lpszDeviceClass);", "TUISPI_providerConfig": "LONG WINAPI TUISPI_providerConfig(TUISPIDLLCALLBACK lpfnUIDLLCallback,HWND hwndOwner,DWORD dwPermanentProviderID);", "TUISPI_providerGenericDialog": "LONG WINAPI TUISPI_providerGenericDialog(TUISPIDLLCALLBACK lpfnUIDLLCallback,HTAPIDIALOGINSTANCE htDlgInst,LPVOID lpParams,DWORD dwSize,HANDLE hEvent);", "TUISPI_providerGenericDialogData": "LONG WINAPI TUISPI_providerGenericDialogData(HTAPIDIALOGINSTANCE htDlgInst,LPVOID lpParams,DWORD dwSize);", "TUISPI_providerInstall": "LONG WINAPI TUISPI_providerInstall(TUISPIDLLCALLBACK lpfnUIDLLCallback,HWND hwndOwner,DWORD dwPermanentProviderID);", "TUISPI_providerRemove": "LONG WINAPI TUISPI_providerRemove(TUISPIDLLCALLBACK lpfnUIDLLCallback,HWND hwndOwner,DWORD dwPermanentProviderID);", "xGetSystemMetrics": "extern int WINAPI xGetSystemMetrics (int);", "xMonitorFromPoint": "extern HMONITOR WINAPI xMonitorFromPoint (POINT, DWORD);", "xMonitorFromRect": "extern HMONITOR WINAPI xMonitorFromRect (LPCRECT, DWORD);", "xMonitorFromWindow": "extern HMONITOR WINAPI xMonitorFromWindow (HWND, DWORD);", "xGetMonitorInfo": "extern WINBOOL WINAPI xGetMonitorInfo (HMONITOR, LPMONITORINFO);", "xEnumDisplayMonitors": "extern WINBOOL WINAPI xEnumDisplayMonitors (HDC, LPCRECT, MONITORENUMPROC, LPARAM);", "xEnumDisplayDevices": "extern WINBOOL WINAPI xEnumDisplayDevices (PVOID, DWORD, PDISPLAY_DEVICE, DWORD);", "KsResolveRequiredAttributes": "KSDDKAPI HRESULT WINAPI KsResolveRequiredAttributes(PKSDATARANGE DataRange,PKSMULTIPLE_ITEM Attributes);", "KsOpenDefaultDevice": "KSDDKAPI HRESULT WINAPI KsOpenDefaultDevice(REFGUID Category,ACCESS_MASK Access,PHANDLE DeviceHandle);", "KsSynchronousDeviceControl": "KSDDKAPI HRESULT WINAPI KsSynchronousDeviceControl(HANDLE Handle,ULONG IoControl,PVOID InBuffer,ULONG InLength,PVOID OutBuffer,ULONG OutLength,PULONG BytesReturned);", "KsGetMultiplePinFactoryItems": "KSDDKAPI HRESULT WINAPI KsGetMultiplePinFactoryItems(HANDLE FilterHandle,ULONG PinFactoryId,ULONG PropertyId,PVOID *Items);", "KsGetMediaTypeCount": "KSDDKAPI HRESULT WINAPI KsGetMediaTypeCount(HANDLE FilterHandle,ULONG PinFactoryId,ULONG *MediaTypeCount);", "KsGetMediaType": "KSDDKAPI HRESULT WINAPI KsGetMediaType(int Position,AM_MEDIA_TYPE *AmMediaType,HANDLE FilterHandle,ULONG PinFactoryId);", "CStdStubBuffer_QueryInterface": "HRESULT WINAPI CStdStubBuffer_QueryInterface(IRpcStubBuffer *This,REFIID riid,void **ppvObject);", "CStdStubBuffer_AddRef": "ULONG WINAPI CStdStubBuffer_AddRef(IRpcStubBuffer *This);", "CStdStubBuffer_Release": "ULONG WINAPI CStdStubBuffer_Release(IRpcStubBuffer *This);", "NdrCStdStubBuffer_Release": "ULONG WINAPI NdrCStdStubBuffer_Release(IRpcStubBuffer *This,IPSFactoryBuffer *pPSF);", "CStdStubBuffer_Connect": "HRESULT WINAPI CStdStubBuffer_Connect(IRpcStubBuffer *This,IUnknown *pUnkServer);", "CStdStubBuffer_Disconnect": "void WINAPI CStdStubBuffer_Disconnect(IRpcStubBuffer *This);", "CStdStubBuffer_Invoke": "HRESULT WINAPI CStdStubBuffer_Invoke(IRpcStubBuffer *This,RPCOLEMESSAGE *pRpcMsg,IRpcChannelBuffer *pRpcChannelBuffer);", "CStdStubBuffer_IsIIDSupported": "IRpcStubBuffer *WINAPI CStdStubBuffer_IsIIDSupported(IRpcStubBuffer *This,REFIID riid);", "CStdStubBuffer_CountRefs": "ULONG WINAPI CStdStubBuffer_CountRefs(IRpcStubBuffer *This);", "CStdStubBuffer_DebugServerQueryInterface": "HRESULT WINAPI CStdStubBuffer_DebugServerQueryInterface(IRpcStubBuffer *This,void **ppv);", "CStdStubBuffer_DebugServerRelease": "void WINAPI CStdStubBuffer_DebugServerRelease(IRpcStubBuffer *This,void *pv);", "CStdStubBuffer2_Release": "ULONG WINAPI CStdStubBuffer2_Release(IRpcStubBuffer *This);", "NdrCStdStubBuffer2_Release": "ULONG WINAPI NdrCStdStubBuffer2_Release(IRpcStubBuffer *This,IPSFactoryBuffer *pPSF);", "WspiapiStrdup": "char *WINAPI WspiapiStrdup (const char *pszString);", "WspiapiParseV4Address": "WINBOOL WINAPI WspiapiParseV4Address (const char *pszAddress,PDWORD pdwAddress);", "WspiapiNewAddrInfo": "struct addrinfo * WINAPI WspiapiNewAddrInfo (int iSocketType,int iProtocol,WORD wPort,DWORD dwAddress);", "WspiapiQueryDNS": "int WINAPI WspiapiQueryDNS (const char *pszNodeName,int iSocketType,int iProtocol,WORD wPort,char pszAlias[NI_MAXHOST],struct addrinfo **pptResult);", "WspiapiLookupNode": "int WINAPI WspiapiLookupNode (const char *pszNodeName,int iSocketType,int iProtocol,WORD wPort,WINBOOL bAI_CANONNAME,struct addrinfo **pptResult);", "WspiapiClone": "int WINAPI WspiapiClone (WORD wPort,struct addrinfo *ptResult);", "WspiapiLegacyFreeAddrInfo": "void WINAPI WspiapiLegacyFreeAddrInfo (struct addrinfo *ptHead);", "WspiapiLegacyGetAddrInfo": "int WINAPI WspiapiLegacyGetAddrInfo(const char *pszNodeName,const char *pszServiceName,const struct addrinfo *ptHints,struct addrinfo **pptResult);", "WspiapiLegacyGetNameInfo": "int WINAPI WspiapiLegacyGetNameInfo(const struct sockaddr *ptSocketAddress,socklen_t tSocketLength,char *pszNodeName,size_t tNodeLength,char *pszServiceName,size_t tServiceLength,int iFlags);", "WspiapiLoad": "FARPROC WINAPI WspiapiLoad(WORD wFunction);", "WspiapiGetAddrInfo": "int WINAPI WspiapiGetAddrInfo(const char *nodename,const char *servname,const struct addrinfo *hints,struct addrinfo **res);", "WspiapiGetNameInfo": "int WINAPI WspiapiGetNameInfo (const struct sockaddr *sa,socklen_t salen,char *host,size_t hostlen,char *serv,size_t servlen,int flags);", "WspiapiFreeAddrInfo": "void WINAPI WspiapiFreeAddrInfo (struct addrinfo *ai);", "MappingRecognizeText": "ELSCOREAPI HRESULT WINAPI MappingRecognizeText(", "MappingDoAction": "ELSCOREAPI HRESULT WINAPI MappingDoAction(", "MappingFreePropertyBag": "ELSCOREAPI HRESULT WINAPI MappingFreePropertyBag(", "MappingFreeServices": "ELSCOREAPI HRESULT WINAPI MappingFreeServices(", "MappingGetServices": "ELSCOREAPI HRESULT WINAPI MappingGetServices(", "Netbios": "UCHAR WINAPI Netbios(PNCB pncb);", "SystemTimeToTzSpecificLocalTime": "WINBASEAPI WINBOOL WINAPI SystemTimeToTzSpecificLocalTime (CONST TIME_ZONE_INFORMATION *lpTimeZoneInformation, CONST SYSTEMTIME *lpUniversalTime, LPSYSTEMTIME lpLocalTime);", "TzSpecificLocalTimeToSystemTime": "WINBASEAPI WINBOOL WINAPI TzSpecificLocalTimeToSystemTime (CONST TIME_ZONE_INFORMATION *lpTimeZoneInformation, CONST SYSTEMTIME *lpLocalTime, LPSYSTEMTIME lpUniversalTime);", "FileTimeToSystemTime": "WINBASEAPI WINBOOL WINAPI FileTimeToSystemTime (CONST FILETIME *lpFileTime, LPSYSTEMTIME lpSystemTime);", "SystemTimeToFileTime": "WINBASEAPI WINBOOL WINAPI SystemTimeToFileTime (CONST SYSTEMTIME *lpSystemTime, LPFILETIME lpFileTime);", "GetTimeZoneInformation": "WINBASEAPI DWORD WINAPI GetTimeZoneInformation (LPTIME_ZONE_INFORMATION lpTimeZoneInformation);", "GetDynamicTimeZoneInformation": "WINBASEAPI DWORD WINAPI GetDynamicTimeZoneInformation (PDYNAMIC_TIME_ZONE_INFORMATION pTimeZoneInformation);", "GetTimeZoneInformationForYear": "WINBOOL WINAPI GetTimeZoneInformationForYear (USHORT wYear, PDYNAMIC_TIME_ZONE_INFORMATION pdtzi, LPTIME_ZONE_INFORMATION ptzi);", "EnumDynamicTimeZoneInformation": "WINBASEAPI DWORD WINAPI EnumDynamicTimeZoneInformation (CONST DWORD dwIndex, PDYNAMIC_TIME_ZONE_INFORMATION lpTimeZoneInformation);", "GetDynamicTimeZoneInformationEffectiveYears": "WINBASEAPI DWORD WINAPI GetDynamicTimeZoneInformationEffectiveYears (CONST PDYNAMIC_TIME_ZONE_INFORMATION lpTimeZoneInformation, LPDWORD FirstYear, LPDWORD LastYear);", "SystemTimeToTzSpecificLocalTimeEx": "WINBASEAPI WINBOOL WINAPI SystemTimeToTzSpecificLocalTimeEx (CONST DYNAMIC_TIME_ZONE_INFORMATION *lpTimeZoneInformation, CONST SYSTEMTIME *lpUniversalTime, LPSYSTEMTIME lpLocalTime);", "TzSpecificLocalTimeToSystemTimeEx": "WINBASEAPI WINBOOL WINAPI TzSpecificLocalTimeToSystemTimeEx (CONST DYNAMIC_TIME_ZONE_INFORMATION *lpTimeZoneInformation, CONST SYSTEMTIME *lpLocalTime, LPSYSTEMTIME lpUniversalTime);", "SetTimeZoneInformation": "WINBASEAPI WINBOOL WINAPI SetTimeZoneInformation (CONST TIME_ZONE_INFORMATION *lpTimeZoneInformation);", "SetDynamicTimeZoneInformation": "WINBASEAPI WINBOOL WINAPI SetDynamicTimeZoneInformation (CONST DYNAMIC_TIME_ZONE_INFORMATION *lpTimeZoneInformation);", "FindResourceW": "WINBASEAPI HRSRC WINAPI FindResourceW (HMODULE hModule, LPCWSTR lpName, LPCWSTR lpType);", "EnumResourceNamesW": "WINBASEAPI WINBOOL WINAPI EnumResourceNamesW (HMODULE hModule, LPCWSTR lpType, ENUMRESNAMEPROCW lpEnumFunc, LONG_PTR lParam);", "FreeResource": "WINBASEAPI WINBOOL WINAPI FreeResource (HGLOBAL hResData);", "LoadResource": "WINBASEAPI HGLOBAL WINAPI LoadResource (HMODULE hModule, HRSRC hResInfo);", "LockResource": "WINBASEAPI LPVOID WINAPI LockResource (HGLOBAL hResData);", "AddDllDirectory": "WINBASEAPI DLL_DIRECTORY_COOKIE WINAPI AddDllDirectory (PCWSTR NewDirectory);", "RemoveDllDirectory": "WINBASEAPI WINBOOL WINAPI RemoveDllDirectory (DLL_DIRECTORY_COOKIE Cookie);", "SetDefaultDllDirectories": "WINBASEAPI WINBOOL WINAPI SetDefaultDllDirectories (DWORD DirectoryFlags);", "EnumResourceLanguagesA": "WINBASEAPI WINBOOL WINAPI EnumResourceLanguagesA (HMODULE hModule, LPCSTR lpType, LPCSTR lpName, ENUMRESLANGPROCA lpEnumFunc, LONG_PTR lParam);", "EnumResourceLanguagesW": "WINBASEAPI WINBOOL WINAPI EnumResourceLanguagesW (HMODULE hModule, LPCWSTR lpType, LPCWSTR lpName, ENUMRESLANGPROCW lpEnumFunc, LONG_PTR lParam);", "EnumResourceNamesExA": "WINBASEAPI WINBOOL WINAPI EnumResourceNamesExA (HMODULE hModule, LPCSTR lpType, ENUMRESNAMEPROCA lpEnumFunc, LONG_PTR lParam, DWORD dwFlags, LANGID LangId);", "EnumResourceNamesExW": "WINBASEAPI WINBOOL WINAPI EnumResourceNamesExW (HMODULE hModule, LPCWSTR lpType, ENUMRESNAMEPROCW lpEnumFunc, LONG_PTR lParam, DWORD dwFlags, LANGID LangId);", "EnumResourceTypesExA": "WINBASEAPI WINBOOL WINAPI EnumResourceTypesExA (HMODULE hModule, ENUMRESTYPEPROCA lpEnumFunc, LONG_PTR lParam, DWORD dwFlags, LANGID LangId);", "EnumResourceTypesExW": "WINBASEAPI WINBOOL WINAPI EnumResourceTypesExW (HMODULE hModule, ENUMRESTYPEPROCW lpEnumFunc, LONG_PTR lParam, DWORD dwFlags, LANGID LangId);", "QueryOptionalDelayLoadedAPI": "WINBASEAPI WINBOOL WINAPI QueryOptionalDelayLoadedAPI(HMODULE hParentModule, LPCSTR lpDllName, LPCSTR lpProcName, DWORD Reserved);", "LoadLibraryA": "WINBASEAPI HMODULE WINAPI LoadLibraryA (LPCSTR lpLibFileName);", "LoadLibraryW": "WINBASEAPI HMODULE WINAPI LoadLibraryW (LPCWSTR lpLibFileName);", "FreeLibraryAndExitThread": "WINBASEAPI DECLSPEC_NORETURN VOID WINAPI FreeLibraryAndExitThread (HMODULE hLibModule, DWORD dwExitCode);", "DisableThreadLibraryCalls": "WINBASEAPI WINBOOL WINAPI DisableThreadLibraryCalls (HMODULE hLibModule);", "FreeLibrary": "WINBASEAPI WINBOOL WINAPI FreeLibrary (HMODULE hLibModule);", "GetProcAddress": "WINBASEAPI FARPROC WINAPI GetProcAddress (HMODULE hModule, LPCSTR lpProcName);", "GetModuleFileNameA": "WINBASEAPI DWORD WINAPI GetModuleFileNameA (HMODULE hModule, LPSTR lpFilename, DWORD nSize);", "GetModuleFileNameW": "WINBASEAPI DWORD WINAPI GetModuleFileNameW (HMODULE hModule, LPWSTR lpFilename, DWORD nSize);", "FindStringOrdinal": "WINBASEAPI int WINAPI FindStringOrdinal (DWORD dwFindStringOrdinalFlags, LPCWSTR lpStringSource, int cchSource, LPCWSTR lpStringValue, int cchValue, WINBOOL bIgnoreCase);", "FindResourceExW": "WINBASEAPI HRSRC WINAPI FindResourceExW (HMODULE hModule, LPCWSTR lpType, LPCWSTR lpName, WORD wLanguage);", "GetModuleHandleA": "WINBASEAPI HMODULE WINAPI GetModuleHandleA (LPCSTR lpModuleName);", "GetModuleHandleW": "WINBASEAPI HMODULE WINAPI GetModuleHandleW (LPCWSTR lpModuleName);", "GetModuleHandleExA": "WINBASEAPI WINBOOL WINAPI GetModuleHandleExA (DWORD dwFlags, LPCSTR lpModuleName, HMODULE *phModule);", "GetModuleHandleExW": "WINBASEAPI WINBOOL WINAPI GetModuleHandleExW (DWORD dwFlags, LPCWSTR lpModuleName, HMODULE *phModule);", "LoadLibraryExA": "WINBASEAPI HMODULE WINAPI LoadLibraryExA (LPCSTR lpLibFileName, HANDLE hFile, DWORD dwFlags);", "LoadLibraryExW": "WINBASEAPI HMODULE WINAPI LoadLibraryExW (LPCWSTR lpLibFileName, HANDLE hFile, DWORD dwFlags);", "SizeofResource": "WINBASEAPI DWORD WINAPI SizeofResource (HMODULE hModule, HRSRC hResInfo);", "ceDbgPrintf": "int WINAPIV ceDbgPrintf(WINBOOL fDebug,char const *pszfmt,...);", "D2D1ComputeMaximumScaleFactor": "FLOAT WINAPI D2D1ComputeMaximumScaleFactor(CONST D2D1_MATRIX_3X2_F *matrix);", "DirectPlayLobbyCreateW": "extern HRESULT WINAPI DirectPlayLobbyCreateW(LPGUID, LPDIRECTPLAYLOBBY*,  IUnknown*, LPVOID, DWORD );", "DirectPlayLobbyCreateA": "extern HRESULT WINAPI DirectPlayLobbyCreateA(LPGUID, LPDIRECTPLAYLOBBYA*, IUnknown*, LPVOID, DWORD );", "TxfLogCreateFileReadContext": "WINBOOL WINAPI TxfLogCreateFileReadContext(", "TxfLogDestroyReadContext": "WINBOOL WINAPI TxfLogDestroyReadContext(", "TxfLogReadRecords": "WINBOOL WINAPI TxfLogReadRecords(", "SetUnhandledExceptionFilter": "WINBASEAPI LPTOP_LEVEL_EXCEPTION_FILTER WINAPI SetUnhandledExceptionFilter (LPTOP_LEVEL_EXCEPTION_FILTER lpTopLevelExceptionFilter);", "UnhandledExceptionFilter": "WINBASEAPI LONG WINAPI UnhandledExceptionFilter (struct _EXCEPTION_POINTERS *ExceptionInfo);", "AddVectoredExceptionHandler": "WINBASEAPI PVOID WINAPI AddVectoredExceptionHandler (ULONG First, PVECTORED_EXCEPTION_HANDLER Handler);", "RemoveVectoredExceptionHandler": "WINBASEAPI ULONG WINAPI RemoveVectoredExceptionHandler (PVOID Handle);", "AddVectoredContinueHandler": "WINBASEAPI PVOID WINAPI AddVectoredContinueHandler (ULONG First, PVECTORED_EXCEPTION_HANDLER Handler);", "RemoveVectoredContinueHandler": "WINBASEAPI ULONG WINAPI RemoveVectoredContinueHandler (PVOID Handle);", "RestoreLastError": "WINBASEAPI VOID WINAPI RestoreLastError (DWORD dwErrCode);", "GetErrorMode": "WINBASEAPI UINT WINAPI GetErrorMode (VOID);", "RaiseException": "WINBASEAPI VOID WINAPI RaiseException (DWORD dwExceptionCode, DWORD dwExceptionFlags, DWORD nNumberOfArguments, CONST ULONG_PTR *lpArguments);", "SetErrorMode": "WINBASEAPI UINT WINAPI SetErrorMode (UINT uMode);", "GetLastError": "WINBASEAPI DWORD WINAPI GetLastError (VOID);", "SetLastError": "WINBASEAPI VOID WINAPI SetLastError (DWORD dwErrCode);", "DirectPlay8Create": "HRESULT WINAPI DirectPlay8Create(const CLSID* pcIID, LPVOID* ppvInterface, IUnknown* pUnknown);", "IAgentCtlRequest_get_ID_Proxy": "HRESULT WINAPI IAgentCtlRequest_get_ID_Proxy(IAgentCtlRequest *This,__LONG32 *ID);", "IAgentCtlRequest_get_Status_Proxy": "HRESULT WINAPI IAgentCtlRequest_get_Status_Proxy(IAgentCtlRequest *This,__LONG32 *Status);", "IAgentCtlRequest_get_Description_Proxy": "HRESULT WINAPI IAgentCtlRequest_get_Description_Proxy(IAgentCtlRequest *This,BSTR *Description);", "IAgentCtlRequest_get_Number_Proxy": "HRESULT WINAPI IAgentCtlRequest_get_Number_Proxy(IAgentCtlRequest *This,__LONG32 *Number);", "IAgentCtlUserInput_get_Count_Proxy": "HRESULT WINAPI IAgentCtlUserInput_get_Count_Proxy(IAgentCtlUserInput *This,short *pCount);", "IAgentCtlUserInput_get_Name_Proxy": "HRESULT WINAPI IAgentCtlUserInput_get_Name_Proxy(IAgentCtlUserInput *This,BSTR *pName);", "IAgentCtlUserInput_get_CharacterID_Proxy": "HRESULT WINAPI IAgentCtlUserInput_get_CharacterID_Proxy(IAgentCtlUserInput *This,BSTR *pCharacterID);", "IAgentCtlUserInput_get_Confidence_Proxy": "HRESULT WINAPI IAgentCtlUserInput_get_Confidence_Proxy(IAgentCtlUserInput *This,__LONG32 *pConfidence);", "IAgentCtlUserInput_get_Voice_Proxy": "HRESULT WINAPI IAgentCtlUserInput_get_Voice_Proxy(IAgentCtlUserInput *This,BSTR *pVoice);", "IAgentCtlUserInput_get_Alt1Name_Proxy": "HRESULT WINAPI IAgentCtlUserInput_get_Alt1Name_Proxy(IAgentCtlUserInput *This,BSTR *pAlt1Name);", "IAgentCtlUserInput_get_Alt1Confidence_Proxy": "HRESULT WINAPI IAgentCtlUserInput_get_Alt1Confidence_Proxy(IAgentCtlUserInput *This,__LONG32 *pAlt1Confidence);", "IAgentCtlUserInput_get_Alt1Voice_Proxy": "HRESULT WINAPI IAgentCtlUserInput_get_Alt1Voice_Proxy(IAgentCtlUserInput *This,BSTR *pAlt1Voice);", "IAgentCtlUserInput_get_Alt2Name_Proxy": "HRESULT WINAPI IAgentCtlUserInput_get_Alt2Name_Proxy(IAgentCtlUserInput *This,BSTR *pAlt2Name);", "IAgentCtlUserInput_get_Alt2Confidence_Proxy": "HRESULT WINAPI IAgentCtlUserInput_get_Alt2Confidence_Proxy(IAgentCtlUserInput *This,__LONG32 *pAlt2Confidence);", "IAgentCtlUserInput_get_Alt2Voice_Proxy": "HRESULT WINAPI IAgentCtlUserInput_get_Alt2Voice_Proxy(IAgentCtlUserInput *This,BSTR *pAlt2Voice);", "IAgentCtlBalloon_get_Enabled_Proxy": "HRESULT WINAPI IAgentCtlBalloon_get_Enabled_Proxy(IAgentCtlBalloon *This,VARIANT_BOOL *Enabled);", "IAgentCtlBalloon_get_NumberOfLines_Proxy": "HRESULT WINAPI IAgentCtlBalloon_get_NumberOfLines_Proxy(IAgentCtlBalloon *This,__LONG32 *Lines);", "IAgentCtlBalloon_get_CharsPerLine_Proxy": "HRESULT WINAPI IAgentCtlBalloon_get_CharsPerLine_Proxy(IAgentCtlBalloon *This,__LONG32 *CharsPerLine);", "IAgentCtlBalloon_get_FontName_Proxy": "HRESULT WINAPI IAgentCtlBalloon_get_FontName_Proxy(IAgentCtlBalloon *This,BSTR *FontName);", "IAgentCtlBalloon_get_FontSize_Proxy": "HRESULT WINAPI IAgentCtlBalloon_get_FontSize_Proxy(IAgentCtlBalloon *This,__LONG32 *FontSize);", "IAgentCtlBalloon_get_FontBold_Proxy": "HRESULT WINAPI IAgentCtlBalloon_get_FontBold_Proxy(IAgentCtlBalloon *This,VARIANT_BOOL *FontBold);", "IAgentCtlBalloon_get_FontItalic_Proxy": "HRESULT WINAPI IAgentCtlBalloon_get_FontItalic_Proxy(IAgentCtlBalloon *This,VARIANT_BOOL *FontItalic);", "IAgentCtlBalloon_get_FontStrikethru_Proxy": "HRESULT WINAPI IAgentCtlBalloon_get_FontStrikethru_Proxy(IAgentCtlBalloon *This,VARIANT_BOOL *FontStrikethru);", "IAgentCtlBalloon_get_FontUnderline_Proxy": "HRESULT WINAPI IAgentCtlBalloon_get_FontUnderline_Proxy(IAgentCtlBalloon *This,VARIANT_BOOL *FontUnderline);", "IAgentCtlBalloon_get_ForeColor_Proxy": "HRESULT WINAPI IAgentCtlBalloon_get_ForeColor_Proxy(IAgentCtlBalloon *This,__LONG32 *ForeColor);", "IAgentCtlBalloon_get_BackColor_Proxy": "HRESULT WINAPI IAgentCtlBalloon_get_BackColor_Proxy(IAgentCtlBalloon *This,__LONG32 *BackColor);", "IAgentCtlBalloon_get_BorderColor_Proxy": "HRESULT WINAPI IAgentCtlBalloon_get_BorderColor_Proxy(IAgentCtlBalloon *This,__LONG32 *BorderColor);", "IAgentCtlBalloon_put_Visible_Proxy": "HRESULT WINAPI IAgentCtlBalloon_put_Visible_Proxy(IAgentCtlBalloon *This,VARIANT_BOOL Visible);", "IAgentCtlBalloon_get_Visible_Proxy": "HRESULT WINAPI IAgentCtlBalloon_get_Visible_Proxy(IAgentCtlBalloon *This,VARIANT_BOOL *Visible);", "IAgentCtlBalloon_put_FontName_Proxy": "HRESULT WINAPI IAgentCtlBalloon_put_FontName_Proxy(IAgentCtlBalloon *This,BSTR FontName);", "IAgentCtlBalloon_put_FontSize_Proxy": "HRESULT WINAPI IAgentCtlBalloon_put_FontSize_Proxy(IAgentCtlBalloon *This,__LONG32 FontSize);", "IAgentCtlBalloon_put_FontCharSet_Proxy": "HRESULT WINAPI IAgentCtlBalloon_put_FontCharSet_Proxy(IAgentCtlBalloon *This,short FontCharSet);", "IAgentCtlBalloon_get_FontCharSet_Proxy": "HRESULT WINAPI IAgentCtlBalloon_get_FontCharSet_Proxy(IAgentCtlBalloon *This,short *FontCharSet);", "IAgentCtlBalloonEx_put_Style_Proxy": "HRESULT WINAPI IAgentCtlBalloonEx_put_Style_Proxy(IAgentCtlBalloonEx *This,__LONG32 Style);", "IAgentCtlBalloonEx_get_Style_Proxy": "HRESULT WINAPI IAgentCtlBalloonEx_get_Style_Proxy(IAgentCtlBalloonEx *This,__LONG32 *Style);", "IAgentCtlCommand_get_Voice_Proxy": "HRESULT WINAPI IAgentCtlCommand_get_Voice_Proxy(IAgentCtlCommand *This,BSTR *Voice);", "IAgentCtlCommand_put_Voice_Proxy": "HRESULT WINAPI IAgentCtlCommand_put_Voice_Proxy(IAgentCtlCommand *This,BSTR Voice);", "IAgentCtlCommand_get_Caption_Proxy": "HRESULT WINAPI IAgentCtlCommand_get_Caption_Proxy(IAgentCtlCommand *This,BSTR *Caption);", "IAgentCtlCommand_put_Caption_Proxy": "HRESULT WINAPI IAgentCtlCommand_put_Caption_Proxy(IAgentCtlCommand *This,BSTR Caption);", "IAgentCtlCommand_get_Enabled_Proxy": "HRESULT WINAPI IAgentCtlCommand_get_Enabled_Proxy(IAgentCtlCommand *This,VARIANT_BOOL *Enabled);", "IAgentCtlCommand_put_Enabled_Proxy": "HRESULT WINAPI IAgentCtlCommand_put_Enabled_Proxy(IAgentCtlCommand *This,VARIANT_BOOL Enabled);", "IAgentCtlCommand_get_Visible_Proxy": "HRESULT WINAPI IAgentCtlCommand_get_Visible_Proxy(IAgentCtlCommand *This,VARIANT_BOOL *Visible);", "IAgentCtlCommand_put_Visible_Proxy": "HRESULT WINAPI IAgentCtlCommand_put_Visible_Proxy(IAgentCtlCommand *This,VARIANT_BOOL Visible);", "IAgentCtlCommand_get_Confidence_Proxy": "HRESULT WINAPI IAgentCtlCommand_get_Confidence_Proxy(IAgentCtlCommand *This,__LONG32 *Confidence);", "IAgentCtlCommand_put_Confidence_Proxy": "HRESULT WINAPI IAgentCtlCommand_put_Confidence_Proxy(IAgentCtlCommand *This,__LONG32 Confidence);", "IAgentCtlCommand_get_ConfidenceText_Proxy": "HRESULT WINAPI IAgentCtlCommand_get_ConfidenceText_Proxy(IAgentCtlCommand *This,BSTR *Text);", "IAgentCtlCommand_put_ConfidenceText_Proxy": "HRESULT WINAPI IAgentCtlCommand_put_ConfidenceText_Proxy(IAgentCtlCommand *This,BSTR Text);", "IAgentCtlCommandEx_put_HelpContextID_Proxy": "HRESULT WINAPI IAgentCtlCommandEx_put_HelpContextID_Proxy(IAgentCtlCommandEx *This,__LONG32 ID);", "IAgentCtlCommandEx_get_HelpContextID_Proxy": "HRESULT WINAPI IAgentCtlCommandEx_get_HelpContextID_Proxy(IAgentCtlCommandEx *This,__LONG32 *ID);", "IAgentCtlCommandEx_put_VoiceCaption_Proxy": "HRESULT WINAPI IAgentCtlCommandEx_put_VoiceCaption_Proxy(IAgentCtlCommandEx *This,BSTR VoiceCaption);", "IAgentCtlCommandEx_get_VoiceCaption_Proxy": "HRESULT WINAPI IAgentCtlCommandEx_get_VoiceCaption_Proxy(IAgentCtlCommandEx *This,BSTR *VoiceCaption);", "IAgentCtlCommands_get_Item_Proxy": "HRESULT WINAPI IAgentCtlCommands_get_Item_Proxy(IAgentCtlCommands *This,BSTR Name,IAgentCtlCommandEx **Item);", "IAgentCtlCommands_Command_Proxy": "HRESULT WINAPI IAgentCtlCommands_Command_Proxy(IAgentCtlCommands *This,BSTR Name,IAgentCtlCommandEx **Item);", "IAgentCtlCommands_get_Count_Proxy": "HRESULT WINAPI IAgentCtlCommands_get_Count_Proxy(IAgentCtlCommands *This,__LONG32 *Count);", "IAgentCtlCommands_get_Caption_Proxy": "HRESULT WINAPI IAgentCtlCommands_get_Caption_Proxy(IAgentCtlCommands *This,BSTR *Caption);", "IAgentCtlCommands_put_Caption_Proxy": "HRESULT WINAPI IAgentCtlCommands_put_Caption_Proxy(IAgentCtlCommands *This,BSTR Caption);", "IAgentCtlCommands_get_Voice_Proxy": "HRESULT WINAPI IAgentCtlCommands_get_Voice_Proxy(IAgentCtlCommands *This,BSTR *Voice);", "IAgentCtlCommands_put_Voice_Proxy": "HRESULT WINAPI IAgentCtlCommands_put_Voice_Proxy(IAgentCtlCommands *This,BSTR Voice);", "IAgentCtlCommands_get_Visible_Proxy": "HRESULT WINAPI IAgentCtlCommands_get_Visible_Proxy(IAgentCtlCommands *This,VARIANT_BOOL *Visible);", "IAgentCtlCommands_put_Visible_Proxy": "HRESULT WINAPI IAgentCtlCommands_put_Visible_Proxy(IAgentCtlCommands *This,VARIANT_BOOL Visible);", "IAgentCtlCommands_get_Enum_Proxy": "HRESULT WINAPI IAgentCtlCommands_get_Enum_Proxy(IAgentCtlCommands *This,IUnknown **ppunkEnum);", "IAgentCtlCommands_Add_Proxy": "HRESULT WINAPI IAgentCtlCommands_Add_Proxy(IAgentCtlCommands *This,BSTR Name,VARIANT Caption,VARIANT Voice,VARIANT Enabled,VARIANT Visible,IAgentCtlCommand **Command);", "IAgentCtlCommands_Insert_Proxy": "HRESULT WINAPI IAgentCtlCommands_Insert_Proxy(IAgentCtlCommands *This,BSTR Name,BSTR RefName,VARIANT Before,VARIANT Caption,VARIANT Voice,VARIANT Enabled,VARIANT Visible,IAgentCtlCommand **Command);", "IAgentCtlCommands_Remove_Proxy": "HRESULT WINAPI IAgentCtlCommands_Remove_Proxy(IAgentCtlCommands *This,BSTR Name);", "IAgentCtlCommands_RemoveAll_Proxy": "HRESULT WINAPI IAgentCtlCommands_RemoveAll_Proxy(IAgentCtlCommands *This);", "IAgentCtlCommandsEx_put_DefaultCommand_Proxy": "HRESULT WINAPI IAgentCtlCommandsEx_put_DefaultCommand_Proxy(IAgentCtlCommandsEx *This,BSTR Name);", "IAgentCtlCommandsEx_get_DefaultCommand_Proxy": "HRESULT WINAPI IAgentCtlCommandsEx_get_DefaultCommand_Proxy(IAgentCtlCommandsEx *This,BSTR *Name);", "IAgentCtlCommandsEx_put_HelpContextID_Proxy": "HRESULT WINAPI IAgentCtlCommandsEx_put_HelpContextID_Proxy(IAgentCtlCommandsEx *This,__LONG32 ID);", "IAgentCtlCommandsEx_get_HelpContextID_Proxy": "HRESULT WINAPI IAgentCtlCommandsEx_get_HelpContextID_Proxy(IAgentCtlCommandsEx *This,__LONG32 *ID);", "IAgentCtlCommandsEx_put_FontName_Proxy": "HRESULT WINAPI IAgentCtlCommandsEx_put_FontName_Proxy(IAgentCtlCommandsEx *This,BSTR FontName);", "IAgentCtlCommandsEx_get_FontName_Proxy": "HRESULT WINAPI IAgentCtlCommandsEx_get_FontName_Proxy(IAgentCtlCommandsEx *This,BSTR *FontName);", "IAgentCtlCommandsEx_get_FontSize_Proxy": "HRESULT WINAPI IAgentCtlCommandsEx_get_FontSize_Proxy(IAgentCtlCommandsEx *This,__LONG32 *FontSize);", "IAgentCtlCommandsEx_put_FontSize_Proxy": "HRESULT WINAPI IAgentCtlCommandsEx_put_FontSize_Proxy(IAgentCtlCommandsEx *This,__LONG32 FontSize);", "IAgentCtlCommandsEx_put_VoiceCaption_Proxy": "HRESULT WINAPI IAgentCtlCommandsEx_put_VoiceCaption_Proxy(IAgentCtlCommandsEx *This,BSTR VoiceCaption);", "IAgentCtlCommandsEx_get_VoiceCaption_Proxy": "HRESULT WINAPI IAgentCtlCommandsEx_get_VoiceCaption_Proxy(IAgentCtlCommandsEx *This,BSTR *VoiceCaption);", "IAgentCtlCommandsEx_put_GlobalVoiceCommandsEnabled_Proxy": "HRESULT WINAPI IAgentCtlCommandsEx_put_GlobalVoiceCommandsEnabled_Proxy(IAgentCtlCommandsEx *This,VARIANT_BOOL Enable);", "IAgentCtlCommandsEx_get_GlobalVoiceCommandsEnabled_Proxy": "HRESULT WINAPI IAgentCtlCommandsEx_get_GlobalVoiceCommandsEnabled_Proxy(IAgentCtlCommandsEx *This,VARIANT_BOOL *Enable);", "IAgentCtlCharacter_get_Balloon_Proxy": "HRESULT WINAPI IAgentCtlCharacter_get_Balloon_Proxy(IAgentCtlCharacter *This,IAgentCtlBalloonEx **ppidBalloon);", "IAgentCtlCharacter_get_Commands_Proxy": "HRESULT WINAPI IAgentCtlCharacter_get_Commands_Proxy(IAgentCtlCharacter *This,IAgentCtlCommandsEx **ppidCommands);", "IAgentCtlCharacter_get_Name_Proxy": "HRESULT WINAPI IAgentCtlCharacter_get_Name_Proxy(IAgentCtlCharacter *This,BSTR *Name);", "IAgentCtlCharacter_get_Description_Proxy": "HRESULT WINAPI IAgentCtlCharacter_get_Description_Proxy(IAgentCtlCharacter *This,BSTR *Description);", "IAgentCtlCharacter_get_Visible_Proxy": "HRESULT WINAPI IAgentCtlCharacter_get_Visible_Proxy(IAgentCtlCharacter *This,VARIANT_BOOL *Visible);", "IAgentCtlCharacter_put_Left_Proxy": "HRESULT WINAPI IAgentCtlCharacter_put_Left_Proxy(IAgentCtlCharacter *This,short Left);", "IAgentCtlCharacter_get_Left_Proxy": "HRESULT WINAPI IAgentCtlCharacter_get_Left_Proxy(IAgentCtlCharacter *This,short *Left);", "IAgentCtlCharacter_put_Top_Proxy": "HRESULT WINAPI IAgentCtlCharacter_put_Top_Proxy(IAgentCtlCharacter *This,short Top);", "IAgentCtlCharacter_get_Top_Proxy": "HRESULT WINAPI IAgentCtlCharacter_get_Top_Proxy(IAgentCtlCharacter *This,short *Top);", "IAgentCtlCharacter_put_Height_Proxy": "HRESULT WINAPI IAgentCtlCharacter_put_Height_Proxy(IAgentCtlCharacter *This,short Height);", "IAgentCtlCharacter_get_Height_Proxy": "HRESULT WINAPI IAgentCtlCharacter_get_Height_Proxy(IAgentCtlCharacter *This,short *Height);", "IAgentCtlCharacter_put_Width_Proxy": "HRESULT WINAPI IAgentCtlCharacter_put_Width_Proxy(IAgentCtlCharacter *This,short Width);", "IAgentCtlCharacter_get_Width_Proxy": "HRESULT WINAPI IAgentCtlCharacter_get_Width_Proxy(IAgentCtlCharacter *This,short *Width);", "IAgentCtlCharacter_get_Speed_Proxy": "HRESULT WINAPI IAgentCtlCharacter_get_Speed_Proxy(IAgentCtlCharacter *This,__LONG32 *Speed);", "IAgentCtlCharacter_get_Pitch_Proxy": "HRESULT WINAPI IAgentCtlCharacter_get_Pitch_Proxy(IAgentCtlCharacter *This,__LONG32 *Pitch);", "IAgentCtlCharacter_put_IdleOn_Proxy": "HRESULT WINAPI IAgentCtlCharacter_put_IdleOn_Proxy(IAgentCtlCharacter *This,VARIANT_BOOL On);", "IAgentCtlCharacter_get_IdleOn_Proxy": "HRESULT WINAPI IAgentCtlCharacter_get_IdleOn_Proxy(IAgentCtlCharacter *This,VARIANT_BOOL *On);", "IAgentCtlCharacter_Activate_Proxy": "HRESULT WINAPI IAgentCtlCharacter_Activate_Proxy(IAgentCtlCharacter *This,VARIANT State,VARIANT_BOOL *Success);", "IAgentCtlCharacter_Play_Proxy": "HRESULT WINAPI IAgentCtlCharacter_Play_Proxy(IAgentCtlCharacter *This,BSTR Animation,IAgentCtlRequest **Request);", "IAgentCtlCharacter_Get_Proxy": "HRESULT WINAPI IAgentCtlCharacter_Get_Proxy(IAgentCtlCharacter *This,BSTR Type,BSTR Name,VARIANT Queue,IAgentCtlRequest **Request);", "IAgentCtlCharacter_Stop_Proxy": "HRESULT WINAPI IAgentCtlCharacter_Stop_Proxy(IAgentCtlCharacter *This,VARIANT Request);", "IAgentCtlCharacter_Wait_Proxy": "HRESULT WINAPI IAgentCtlCharacter_Wait_Proxy(IAgentCtlCharacter *This,IDispatch *WaitForRequest,IAgentCtlRequest **Request);", "IAgentCtlCharacter_Interrupt_Proxy": "HRESULT WINAPI IAgentCtlCharacter_Interrupt_Proxy(IAgentCtlCharacter *This,IDispatch *InterruptRequest,IAgentCtlRequest **Request);", "IAgentCtlCharacter_Speak_Proxy": "HRESULT WINAPI IAgentCtlCharacter_Speak_Proxy(IAgentCtlCharacter *This,VARIANT Text,VARIANT Url,IAgentCtlRequest **Request);", "IAgentCtlCharacter_GestureAt_Proxy": "HRESULT WINAPI IAgentCtlCharacter_GestureAt_Proxy(IAgentCtlCharacter *This,short x,short y,IAgentCtlRequest **Request);", "IAgentCtlCharacter_MoveTo_Proxy": "HRESULT WINAPI IAgentCtlCharacter_MoveTo_Proxy(IAgentCtlCharacter *This,short x,short y,VARIANT Speed,IAgentCtlRequest **Request);", "IAgentCtlCharacter_Hide_Proxy": "HRESULT WINAPI IAgentCtlCharacter_Hide_Proxy(IAgentCtlCharacter *This,VARIANT Fast,IAgentCtlRequest **Request);", "IAgentCtlCharacter_Show_Proxy": "HRESULT WINAPI IAgentCtlCharacter_Show_Proxy(IAgentCtlCharacter *This,VARIANT Fast,IAgentCtlRequest **Request);", "IAgentCtlCharacter_StopAll_Proxy": "HRESULT WINAPI IAgentCtlCharacter_StopAll_Proxy(IAgentCtlCharacter *This,VARIANT Types);", "IAgentCtlCharacter_get_MoveCause_Proxy": "HRESULT WINAPI IAgentCtlCharacter_get_MoveCause_Proxy(IAgentCtlCharacter *This,short *MoveCause);", "IAgentCtlCharacter_get_VisibilityCause_Proxy": "HRESULT WINAPI IAgentCtlCharacter_get_VisibilityCause_Proxy(IAgentCtlCharacter *This,short *VisibilityCause);", "IAgentCtlCharacter_get_HasOtherClients_Proxy": "HRESULT WINAPI IAgentCtlCharacter_get_HasOtherClients_Proxy(IAgentCtlCharacter *This,VARIANT_BOOL *HasOtherClients);", "IAgentCtlCharacter_put_SoundEffectsOn_Proxy": "HRESULT WINAPI IAgentCtlCharacter_put_SoundEffectsOn_Proxy(IAgentCtlCharacter *This,VARIANT_BOOL On);", "IAgentCtlCharacter_get_SoundEffectsOn_Proxy": "HRESULT WINAPI IAgentCtlCharacter_get_SoundEffectsOn_Proxy(IAgentCtlCharacter *This,VARIANT_BOOL *On);", "IAgentCtlCharacter_put_Name_Proxy": "HRESULT WINAPI IAgentCtlCharacter_put_Name_Proxy(IAgentCtlCharacter *This,BSTR Name);", "IAgentCtlCharacter_put_Description_Proxy": "HRESULT WINAPI IAgentCtlCharacter_put_Description_Proxy(IAgentCtlCharacter *This,BSTR Description);", "IAgentCtlCharacter_get_ExtraData_Proxy": "HRESULT WINAPI IAgentCtlCharacter_get_ExtraData_Proxy(IAgentCtlCharacter *This,BSTR *ExtraData);", "IAgentCtlAnimationNames_get_Enum_Proxy": "HRESULT WINAPI IAgentCtlAnimationNames_get_Enum_Proxy(IAgentCtlAnimationNames *This,IUnknown **ppunkEnum);", "IAgentCtlCharacterEx_ShowPopupMenu_Proxy": "HRESULT WINAPI IAgentCtlCharacterEx_ShowPopupMenu_Proxy(IAgentCtlCharacterEx *This,short x,short y,VARIANT_BOOL *Showed);", "IAgentCtlCharacterEx_put_AutoPopupMenu_Proxy": "HRESULT WINAPI IAgentCtlCharacterEx_put_AutoPopupMenu_Proxy(IAgentCtlCharacterEx *This,VARIANT_BOOL On);", "IAgentCtlCharacterEx_get_AutoPopupMenu_Proxy": "HRESULT WINAPI IAgentCtlCharacterEx_get_AutoPopupMenu_Proxy(IAgentCtlCharacterEx *This,VARIANT_BOOL *On);", "IAgentCtlCharacterEx_put_HelpModeOn_Proxy": "HRESULT WINAPI IAgentCtlCharacterEx_put_HelpModeOn_Proxy(IAgentCtlCharacterEx *This,VARIANT_BOOL On);", "IAgentCtlCharacterEx_get_HelpModeOn_Proxy": "HRESULT WINAPI IAgentCtlCharacterEx_get_HelpModeOn_Proxy(IAgentCtlCharacterEx *This,VARIANT_BOOL *On);", "IAgentCtlCharacterEx_put_HelpContextID_Proxy": "HRESULT WINAPI IAgentCtlCharacterEx_put_HelpContextID_Proxy(IAgentCtlCharacterEx *This,__LONG32 ID);", "IAgentCtlCharacterEx_get_HelpContextID_Proxy": "HRESULT WINAPI IAgentCtlCharacterEx_get_HelpContextID_Proxy(IAgentCtlCharacterEx *This,__LONG32 *ID);", "IAgentCtlCharacterEx_get_Active_Proxy": "HRESULT WINAPI IAgentCtlCharacterEx_get_Active_Proxy(IAgentCtlCharacterEx *This,short *State);", "IAgentCtlCharacterEx_Listen_Proxy": "HRESULT WINAPI IAgentCtlCharacterEx_Listen_Proxy(IAgentCtlCharacterEx *This,VARIANT_BOOL Listen,VARIANT_BOOL *StartedListening);", "IAgentCtlCharacterEx_put_LanguageID_Proxy": "HRESULT WINAPI IAgentCtlCharacterEx_put_LanguageID_Proxy(IAgentCtlCharacterEx *This,__LONG32 LanguageID);", "IAgentCtlCharacterEx_get_LanguageID_Proxy": "HRESULT WINAPI IAgentCtlCharacterEx_get_LanguageID_Proxy(IAgentCtlCharacterEx *This,__LONG32 *LanguageID);", "IAgentCtlCharacterEx_get_SRModeID_Proxy": "HRESULT WINAPI IAgentCtlCharacterEx_get_SRModeID_Proxy(IAgentCtlCharacterEx *This,BSTR *EngineModeId);", "IAgentCtlCharacterEx_put_SRModeID_Proxy": "HRESULT WINAPI IAgentCtlCharacterEx_put_SRModeID_Proxy(IAgentCtlCharacterEx *This,BSTR EngineModeId);", "IAgentCtlCharacterEx_get_TTSModeID_Proxy": "HRESULT WINAPI IAgentCtlCharacterEx_get_TTSModeID_Proxy(IAgentCtlCharacterEx *This,BSTR *EngineModeId);", "IAgentCtlCharacterEx_put_TTSModeID_Proxy": "HRESULT WINAPI IAgentCtlCharacterEx_put_TTSModeID_Proxy(IAgentCtlCharacterEx *This,BSTR EngineModeId);", "IAgentCtlCharacterEx_get_HelpFile_Proxy": "HRESULT WINAPI IAgentCtlCharacterEx_get_HelpFile_Proxy(IAgentCtlCharacterEx *This,BSTR *File);", "IAgentCtlCharacterEx_put_HelpFile_Proxy": "HRESULT WINAPI IAgentCtlCharacterEx_put_HelpFile_Proxy(IAgentCtlCharacterEx *This,BSTR File);", "IAgentCtlCharacterEx_get_GUID_Proxy": "HRESULT WINAPI IAgentCtlCharacterEx_get_GUID_Proxy(IAgentCtlCharacterEx *This,BSTR *GUID);", "IAgentCtlCharacterEx_get_OriginalHeight_Proxy": "HRESULT WINAPI IAgentCtlCharacterEx_get_OriginalHeight_Proxy(IAgentCtlCharacterEx *This,short *Height);", "IAgentCtlCharacterEx_get_OriginalWidth_Proxy": "HRESULT WINAPI IAgentCtlCharacterEx_get_OriginalWidth_Proxy(IAgentCtlCharacterEx *This,short *Width);", "IAgentCtlCharacterEx_Think_Proxy": "HRESULT WINAPI IAgentCtlCharacterEx_Think_Proxy(IAgentCtlCharacterEx *This,BSTR Text,IAgentCtlRequest **Request);", "IAgentCtlCharacterEx_get_Version_Proxy": "HRESULT WINAPI IAgentCtlCharacterEx_get_Version_Proxy(IAgentCtlCharacterEx *This,BSTR *Version);", "IAgentCtlCharacterEx_get_AnimationNames_Proxy": "HRESULT WINAPI IAgentCtlCharacterEx_get_AnimationNames_Proxy(IAgentCtlCharacterEx *This,IAgentCtlAnimationNames **Names);", "IAgentCtlCharacterEx_get_SRStatus_Proxy": "HRESULT WINAPI IAgentCtlCharacterEx_get_SRStatus_Proxy(IAgentCtlCharacterEx *This,__LONG32 *Status);", "IAgentCtlCharacters_get_Item_Proxy": "HRESULT WINAPI IAgentCtlCharacters_get_Item_Proxy(IAgentCtlCharacters *This,BSTR CharacterID,IAgentCtlCharacterEx **ppidItem);", "IAgentCtlCharacters_Character_Proxy": "HRESULT WINAPI IAgentCtlCharacters_Character_Proxy(IAgentCtlCharacters *This,BSTR CharacterID,IAgentCtlCharacterEx **ppidItem);", "IAgentCtlCharacters_get_Enum_Proxy": "HRESULT WINAPI IAgentCtlCharacters_get_Enum_Proxy(IAgentCtlCharacters *This,IUnknown **ppunkEnum);", "IAgentCtlCharacters_Unload_Proxy": "HRESULT WINAPI IAgentCtlCharacters_Unload_Proxy(IAgentCtlCharacters *This,BSTR CharacterID);", "IAgentCtlCharacters_Load_Proxy": "HRESULT WINAPI IAgentCtlCharacters_Load_Proxy(IAgentCtlCharacters *This,BSTR CharacterID,VARIANT LoadKey,IAgentCtlRequest **ppidRequest);", "IAgentCtlAudioObject_get_Enabled_Proxy": "HRESULT WINAPI IAgentCtlAudioObject_get_Enabled_Proxy(IAgentCtlAudioObject *This,VARIANT_BOOL *AudioEnabled);", "IAgentCtlAudioObject_get_SoundEffects_Proxy": "HRESULT WINAPI IAgentCtlAudioObject_get_SoundEffects_Proxy(IAgentCtlAudioObject *This,VARIANT_BOOL *SoundEffects);", "IAgentCtlAudioObjectEx_get_Status_Proxy": "HRESULT WINAPI IAgentCtlAudioObjectEx_get_Status_Proxy(IAgentCtlAudioObjectEx *This,short *Available);", "IAgentCtlSpeechInput_get_Enabled_Proxy": "HRESULT WINAPI IAgentCtlSpeechInput_get_Enabled_Proxy(IAgentCtlSpeechInput *This,VARIANT_BOOL *VoiceEnabled);", "IAgentCtlSpeechInput_get_Language_Proxy": "HRESULT WINAPI IAgentCtlSpeechInput_get_Language_Proxy(IAgentCtlSpeechInput *This,BSTR *Language);", "IAgentCtlSpeechInput_get_HotKey_Proxy": "HRESULT WINAPI IAgentCtlSpeechInput_get_HotKey_Proxy(IAgentCtlSpeechInput *This,BSTR *HotKey);", "IAgentCtlSpeechInput_get_Installed_Proxy": "HRESULT WINAPI IAgentCtlSpeechInput_get_Installed_Proxy(IAgentCtlSpeechInput *This,VARIANT_BOOL *VoiceInstalled);", "IAgentCtlSpeechInput_get_Engine_Proxy": "HRESULT WINAPI IAgentCtlSpeechInput_get_Engine_Proxy(IAgentCtlSpeechInput *This,BSTR *Engine);", "IAgentCtlSpeechInput_put_Engine_Proxy": "HRESULT WINAPI IAgentCtlSpeechInput_put_Engine_Proxy(IAgentCtlSpeechInput *This,BSTR Engine);", "IAgentCtlSpeechInput_get_ListeningTip_Proxy": "HRESULT WINAPI IAgentCtlSpeechInput_get_ListeningTip_Proxy(IAgentCtlSpeechInput *This,VARIANT_BOOL *ListeningTip);", "IAgentCtlPropertySheet_get_Left_Proxy": "HRESULT WINAPI IAgentCtlPropertySheet_get_Left_Proxy(IAgentCtlPropertySheet *This,short *Left);", "IAgentCtlPropertySheet_get_Top_Proxy": "HRESULT WINAPI IAgentCtlPropertySheet_get_Top_Proxy(IAgentCtlPropertySheet *This,short *Top);", "IAgentCtlPropertySheet_get_Height_Proxy": "HRESULT WINAPI IAgentCtlPropertySheet_get_Height_Proxy(IAgentCtlPropertySheet *This,short *Height);", "IAgentCtlPropertySheet_get_Width_Proxy": "HRESULT WINAPI IAgentCtlPropertySheet_get_Width_Proxy(IAgentCtlPropertySheet *This,short *Width);", "IAgentCtlPropertySheet_put_Visible_Proxy": "HRESULT WINAPI IAgentCtlPropertySheet_put_Visible_Proxy(IAgentCtlPropertySheet *This,VARIANT_BOOL Visible);", "IAgentCtlPropertySheet_get_Visible_Proxy": "HRESULT WINAPI IAgentCtlPropertySheet_get_Visible_Proxy(IAgentCtlPropertySheet *This,VARIANT_BOOL *Visible);", "IAgentCtlPropertySheet_put_Page_Proxy": "HRESULT WINAPI IAgentCtlPropertySheet_put_Page_Proxy(IAgentCtlPropertySheet *This,BSTR Page);", "IAgentCtlPropertySheet_get_Page_Proxy": "HRESULT WINAPI IAgentCtlPropertySheet_get_Page_Proxy(IAgentCtlPropertySheet *This,BSTR *Page);", "IAgentCtlCommandsWindow_get_Visible_Proxy": "HRESULT WINAPI IAgentCtlCommandsWindow_get_Visible_Proxy(IAgentCtlCommandsWindow *This,VARIANT_BOOL *Visible);", "IAgentCtlCommandsWindow_put_Visible_Proxy": "HRESULT WINAPI IAgentCtlCommandsWindow_put_Visible_Proxy(IAgentCtlCommandsWindow *This,VARIANT_BOOL Visible);", "IAgentCtlCommandsWindow_get_Left_Proxy": "HRESULT WINAPI IAgentCtlCommandsWindow_get_Left_Proxy(IAgentCtlCommandsWindow *This,short *Left);", "IAgentCtlCommandsWindow_get_Top_Proxy": "HRESULT WINAPI IAgentCtlCommandsWindow_get_Top_Proxy(IAgentCtlCommandsWindow *This,short *Top);", "IAgentCtlCommandsWindow_get_Height_Proxy": "HRESULT WINAPI IAgentCtlCommandsWindow_get_Height_Proxy(IAgentCtlCommandsWindow *This,short *Height);", "IAgentCtlCommandsWindow_get_Width_Proxy": "HRESULT WINAPI IAgentCtlCommandsWindow_get_Width_Proxy(IAgentCtlCommandsWindow *This,short *Width);", "IAgentCtl_get_Characters_Proxy": "HRESULT WINAPI IAgentCtl_get_Characters_Proxy(IAgentCtl *This,IAgentCtlCharacters **Characters);", "IAgentCtl_get_AudioOutput_Proxy": "HRESULT WINAPI IAgentCtl_get_AudioOutput_Proxy(IAgentCtl *This,IAgentCtlAudioObjectEx **AudioOutput);", "IAgentCtl_get_SpeechInput_Proxy": "HRESULT WINAPI IAgentCtl_get_SpeechInput_Proxy(IAgentCtl *This,IAgentCtlSpeechInput **SpeechInput);", "IAgentCtl_get_PropertySheet_Proxy": "HRESULT WINAPI IAgentCtl_get_PropertySheet_Proxy(IAgentCtl *This,IAgentCtlPropertySheet **PropSheet);", "IAgentCtl_get_CommandsWindow_Proxy": "HRESULT WINAPI IAgentCtl_get_CommandsWindow_Proxy(IAgentCtl *This,IAgentCtlCommandsWindow **CommandsWindow);", "IAgentCtl_get_Connected_Proxy": "HRESULT WINAPI IAgentCtl_get_Connected_Proxy(IAgentCtl *This,VARIANT_BOOL *Connected);", "IAgentCtl_put_Connected_Proxy": "HRESULT WINAPI IAgentCtl_put_Connected_Proxy(IAgentCtl *This,VARIANT_BOOL Connected);", "IAgentCtl_get_Suspended_Proxy": "HRESULT WINAPI IAgentCtl_get_Suspended_Proxy(IAgentCtl *This,VARIANT_BOOL *Suspended);", "IAgentCtlEx_ShowDefaultCharacterProperties_Proxy": "HRESULT WINAPI IAgentCtlEx_ShowDefaultCharacterProperties_Proxy(IAgentCtlEx *This,VARIANT x,VARIANT y);", "IAgentCtlEx_get_RaiseRequestErrors_Proxy": "HRESULT WINAPI IAgentCtlEx_get_RaiseRequestErrors_Proxy(IAgentCtlEx *This,VARIANT_BOOL *RaiseErrors);", "IAgentCtlEx_put_RaiseRequestErrors_Proxy": "HRESULT WINAPI IAgentCtlEx_put_RaiseRequestErrors_Proxy(IAgentCtlEx *This,VARIANT_BOOL RaiseErrors);", "NetWkstaGetInfo": "NET_API_STATUS WINAPI NetWkstaGetInfo(LMSTR servername,DWORD level,LPBYTE *bufptr);", "NetWkstaSetInfo": "NET_API_STATUS WINAPI NetWkstaSetInfo(LMSTR servername,DWORD level,LPBYTE buffer,LPDWORD parm_err);", "NetWkstaUserGetInfo": "NET_API_STATUS WINAPI NetWkstaUserGetInfo(LMSTR reserved,DWORD level,LPBYTE *bufptr);", "NetWkstaUserSetInfo": "NET_API_STATUS WINAPI NetWkstaUserSetInfo(LMSTR reserved,DWORD level,LPBYTE buf,LPDWORD parm_err);", "NetWkstaUserEnum": "NET_API_STATUS WINAPI NetWkstaUserEnum(LMSTR servername,DWORD level,LPBYTE *bufptr,DWORD prefmaxlen,LPDWORD entriesread,LPDWORD totalentries,LPDWORD resumehandle);", "NetWkstaTransportAdd": "NET_API_STATUS WINAPI NetWkstaTransportAdd(LMSTR servername,DWORD level,LPBYTE buf,LPDWORD parm_err);", "NetWkstaTransportDel": "NET_API_STATUS WINAPI NetWkstaTransportDel(LMSTR servername,LMSTR transportname,DWORD ucond);", "NetWkstaTransportEnum": "NET_API_STATUS WINAPI NetWkstaTransportEnum(LMSTR servername,DWORD level,LPBYTE *bufptr,DWORD prefmaxlen,LPDWORD entriesread,LPDWORD totalentries,LPDWORD resumehandle);", "DXVA2CreateDirect3DDeviceManager9": "HRESULT WINAPI DXVA2CreateDirect3DDeviceManager9(UINT *pResetToken,IDirect3DDeviceManager9 **ppDXVAManager);", "DXVA2CreateVideoService": "HRESULT WINAPI DXVA2CreateVideoService(IDirect3DDevice9 *pDD,REFIID riid,void **ppService);", "GetOpenFileNameA": "WINCOMMDLGAPI WINBOOL WINAPI GetOpenFileNameA(LPOPENFILENAMEA);", "GetOpenFileNameW": "WINCOMMDLGAPI WINBOOL WINAPI GetOpenFileNameW(LPOPENFILENAMEW);", "GetSaveFileNameA": "WINCOMMDLGAPI WINBOOL WINAPI GetSaveFileNameA(LPOPENFILENAMEA);", "GetSaveFileNameW": "WINCOMMDLGAPI WINBOOL WINAPI GetSaveFileNameW(LPOPENFILENAMEW);", "GetFileTitleA": "WINCOMMDLGAPI short WINAPI GetFileTitleA(LPCSTR,LPSTR,WORD);", "GetFileTitleW": "WINCOMMDLGAPI short WINAPI GetFileTitleW(LPCWSTR,LPWSTR,WORD);", "ChooseColorA": "WINCOMMDLGAPI WINBOOL WINAPI ChooseColorA(LPCHOOSECOLORA);", "ChooseColorW": "WINCOMMDLGAPI WINBOOL WINAPI ChooseColorW(LPCHOOSECOLORW);", "FindTextA": "WINCOMMDLGAPI HWND WINAPI FindTextA(LPFINDREPLACEA);", "FindTextW": "WINCOMMDLGAPI HWND WINAPI FindTextW(LPFINDREPLACEW);", "ReplaceTextA": "WINCOMMDLGAPI HWND WINAPI ReplaceTextA(LPFINDREPLACEA);", "ReplaceTextW": "WINCOMMDLGAPI HWND WINAPI ReplaceTextW(LPFINDREPLACEW);", "ChooseFontA": "WINCOMMDLGAPI WINBOOL WINAPI ChooseFontA(LPCHOOSEFONTA);", "ChooseFontW": "WINCOMMDLGAPI WINBOOL WINAPI ChooseFontW(LPCHOOSEFONTW);", "PrintDlgA": "WINCOMMDLGAPI WINBOOL WINAPI PrintDlgA(LPPRINTDLGA);", "PrintDlgW": "WINCOMMDLGAPI WINBOOL WINAPI PrintDlgW(LPPRINTDLGW);", "PrintDlgExA": "WINCOMMDLGAPI HRESULT WINAPI PrintDlgExA(LPPRINTDLGEXA);", "PrintDlgExW": "WINCOMMDLGAPI HRESULT WINAPI PrintDlgExW(LPPRINTDLGEXW);", "CommDlgExtendedError": "WINCOMMDLGAPI DWORD WINAPI CommDlgExtendedError(VOID);", "PageSetupDlgA": "WINCOMMDLGAPI WINBOOL WINAPI PageSetupDlgA(LPPAGESETUPDLGA);", "PageSetupDlgW": "WINCOMMDLGAPI WINBOOL WINAPI PageSetupDlgW(LPPAGESETUPDLGW);", "Direct3DRMCreate": "HRESULT WINAPI Direct3DRMCreate(struct IDirect3DRM **d3drm);", "GetVCPFeatureAndVCPFeatureReply": "_BOOL WINAPI GetVCPFeatureAndVCPFeatureReply(HANDLE hMonitor, BYTE bVCPCode, LPMC_VCP_CODE_TYPE pvct, LPDWORD pdwCurrentValue, LPDWORD pdwMaximumValue);", "SetVCPFeature": "_BOOL WINAPI SetVCPFeature(HANDLE hMonitor, BYTE bVCPCode, DWORD dwNewValue);", "SaveCurrentSettings": "_BOOL WINAPI SaveCurrentSettings(HANDLE hMonitor);", "GetCapabilitiesStringLength": "_BOOL WINAPI GetCapabilitiesStringLength(HANDLE hMonitor, LPDWORD pdwCapabilitiesStringLengthInCharacters);", "CapabilitiesRequestAndCapabilitiesReply": "_BOOL WINAPI CapabilitiesRequestAndCapabilitiesReply(HANDLE hMonitor, LPSTR pszASCIICapabilitiesString, DWORD dwCapabilitiesStringLengthInCharacters);", "GetTimingReport": "_BOOL WINAPI GetTimingReport(HANDLE hMonitor, LPMC_TIMING_REPORT pmtrMonitorTimingReport);", "VideoForWindowsVersion": "DWORD WINAPI VideoForWindowsVersion(void);", "InitVFW": "LONG WINAPI InitVFW(void);", "TermVFW": "LONG WINAPI TermVFW(void);", "ICInfo": "WINBOOL WINAPI ICInfo(DWORD fccType,DWORD fccHandler,ICINFO *lpicinfo);", "ICInstall": "WINBOOL WINAPI ICInstall(DWORD fccType,DWORD fccHandler,LPARAM lParam,LPSTR szDesc,UINT wFlags);", "ICRemove": "WINBOOL WINAPI ICRemove(DWORD fccType,DWORD fccHandler,UINT wFlags);", "ICGetInfo": "LRESULT WINAPI ICGetInfo(HIC hic,ICINFO *picinfo,DWORD cb);", "ICOpen": "HIC WINAPI ICOpen(DWORD fccType,DWORD fccHandler,UINT wMode);", "ICOpenFunction": "HIC WINAPI ICOpenFunction(DWORD fccType,DWORD fccHandler,UINT wMode,FARPROC lpfnHandler);", "ICClose": "LRESULT WINAPI ICClose(HIC hic);", "ICSendMessage": "LRESULT WINAPI ICSendMessage(HIC hic,UINT msg,DWORD_PTR dw1,DWORD_PTR dw2);", "ICCompress": "DWORD WINAPIV ICCompress(HIC hic,DWORD dwFlags,LPBITMAPINFOHEADER lpbiOutput,LPVOID lpData,LPBITMAPINFOHEADER lpbiInput,LPVOID lpBits,LPDWORD lpckid,LPDWORD lpdwFlags,LONG lFrameNum,DWORD dwFrameSize,DWORD dwQuality,LPBITMAPINFOHEADER lpbiPrev,LPVOID lpPrev);", "ICDecompress": "DWORD WINAPIV ICDecompress(HIC hic,DWORD dwFlags,LPBITMAPINFOHEADER lpbiFormat,LPVOID lpData,LPBITMAPINFOHEADER lpbi,LPVOID lpBits);", "ICDecompressEx": "__CRT_INLINE LRESULT WINAPI ICDecompressEx(HIC hic,DWORD dwFlags,LPBITMAPINFOHEADER lpbiSrc,LPVOID lpSrc,int xSrc,int ySrc,int dxSrc,int dySrc,LPBITMAPINFOHEADER lpbiDst,LPVOID lpDst,int xDst,int yDst,int dxDst,int dyDst) {", "ICDecompressExBegin": "__CRT_INLINE LRESULT WINAPI ICDecompressExBegin(HIC hic,DWORD dwFlags,LPBITMAPINFOHEADER lpbiSrc,LPVOID lpSrc,int xSrc,int ySrc,int dxSrc,int dySrc,LPBITMAPINFOHEADER lpbiDst,LPVOID lpDst,int xDst,int yDst,int dxDst,int dyDst) {", "ICDecompressExQuery": "__CRT_INLINE LRESULT WINAPI ICDecompressExQuery(HIC hic,DWORD dwFlags,LPBITMAPINFOHEADER lpbiSrc,LPVOID lpSrc,int xSrc,int ySrc,int dxSrc,int dySrc,LPBITMAPINFOHEADER lpbiDst,LPVOID lpDst,int xDst,int yDst,int dxDst,int dyDst) {", "ICDrawBegin": "DWORD WINAPIV ICDrawBegin(HIC hic,DWORD dwFlags,HPALETTE hpal,HWND hwnd,HDC hdc,int xDst,int yDst,int dxDst,int dyDst,LPBITMAPINFOHEADER lpbi,int xSrc,int ySrc,int dxSrc,int dySrc,DWORD dwRate,DWORD dwScale);", "ICDraw": "DWORD WINAPIV ICDraw(HIC hic,DWORD dwFlags,LPVOID lpFormat,LPVOID lpData,DWORD cbData,LONG lTime);", "ICDrawSuggestFormat": "__CRT_INLINE LRESULT WINAPI ICDrawSuggestFormat(HIC hic,LPBITMAPINFOHEADER lpbiIn,LPBITMAPINFOHEADER lpbiOut,int dxSrc,int dySrc,int dxDst,int dyDst,HIC hicDecomp) {", "ICLocate": "HIC WINAPI ICLocate(DWORD fccType,DWORD fccHandler,LPBITMAPINFOHEADER lpbiIn,LPBITMAPINFOHEADER lpbiOut,WORD wFlags);", "ICGetDisplayFormat": "HIC WINAPI ICGetDisplayFormat(HIC hic,LPBITMAPINFOHEADER lpbiIn,LPBITMAPINFOHEADER lpbiOut,int BitDepth,int dx,int dy);", "ICImageCompress": "HANDLE WINAPI ICImageCompress(HIC hic,UINT uiFlags,LPBITMAPINFO lpbiIn,LPVOID lpBits,LPBITMAPINFO lpbiOut,LONG lQuality,LONG *plSize);", "ICImageDecompress": "HANDLE WINAPI ICImageDecompress(HIC hic,UINT uiFlags,LPBITMAPINFO lpbiIn,LPVOID lpBits,LPBITMAPINFO lpbiOut);", "ICCompressorChoose": "WINBOOL WINAPI ICCompressorChoose(HWND hwnd,UINT uiFlags,LPVOID pvIn,LPVOID lpData,PCOMPVARS pc,LPSTR lpszTitle);", "ICSeqCompressFrameStart": "WINBOOL WINAPI ICSeqCompressFrameStart(PCOMPVARS pc,LPBITMAPINFO lpbiIn);", "ICSeqCompressFrameEnd": "void WINAPI ICSeqCompressFrameEnd(PCOMPVARS pc);", "ICSeqCompressFrame": "LPVOID WINAPI ICSeqCompressFrame(PCOMPVARS pc,UINT uiFlags,LPVOID lpBits,WINBOOL *pfKey,LONG *plSize);", "ICCompressorFree": "void WINAPI ICCompressorFree(PCOMPVARS pc);", "DrawDibInit": "extern WINBOOL WINAPI DrawDibInit(void);", "DrawDibOpen": "extern HDRAWDIB WINAPI DrawDibOpen(void);", "DrawDibClose": "extern WINBOOL WINAPI DrawDibClose(HDRAWDIB hdd);", "DrawDibGetBuffer": "extern LPVOID WINAPI DrawDibGetBuffer(HDRAWDIB hdd,LPBITMAPINFOHEADER lpbi,DWORD dwSize,DWORD dwFlags);", "DrawDibError": "extern UINT WINAPI DrawDibError(HDRAWDIB hdd);", "DrawDibGetPalette": "extern HPALETTE WINAPI DrawDibGetPalette(HDRAWDIB hdd);", "DrawDibSetPalette": "extern WINBOOL WINAPI DrawDibSetPalette(HDRAWDIB hdd,HPALETTE hpal);", "DrawDibChangePalette": "extern WINBOOL WINAPI DrawDibChangePalette(HDRAWDIB hdd,int iStart,int iLen,LPPALETTEENTRY lppe);", "DrawDibRealize": "extern UINT WINAPI DrawDibRealize(HDRAWDIB hdd,HDC hdc,WINBOOL fBackground);", "DrawDibStart": "extern WINBOOL WINAPI DrawDibStart(HDRAWDIB hdd,DWORD rate);", "DrawDibStop": "extern WINBOOL WINAPI DrawDibStop(HDRAWDIB hdd);", "DrawDibBegin": "extern WINBOOL WINAPI DrawDibBegin(HDRAWDIB hdd,HDC hdc,int dxDst,int dyDst,LPBITMAPINFOHEADER lpbi,int dxSrc,int dySrc,UINT wFlags);", "DrawDibDraw": "extern WINBOOL WINAPI DrawDibDraw(HDRAWDIB hdd,HDC hdc,int xDst,int yDst,int dxDst,int dyDst,LPBITMAPINFOHEADER lpbi,LPVOID lpBits,int xSrc,int ySrc,int dxSrc,int dySrc,UINT wFlags);", "DrawDibEnd": "extern WINBOOL WINAPI DrawDibEnd(HDRAWDIB hdd);", "DrawDibTime": "WINBOOL WINAPI DrawDibTime(HDRAWDIB hdd,LPDRAWDIBTIME lpddtime);", "DrawDibProfileDisplay": "LRESULT WINAPI DrawDibProfileDisplay(LPBITMAPINFOHEADER lpbi);", "StretchDIB": "void WINAPI StretchDIB(LPBITMAPINFOHEADER biDst,LPVOID lpDst,int DstX,int DstY,int DstXE,int DstYE,LPBITMAPINFOHEADER biSrc,LPVOID lpSrc,int SrcX,int SrcY,int SrcXE,int SrcYE);", "MCIWndCreateA": "HWND WINAPIV MCIWndCreateA(HWND hwndParent,HINSTANCE hInstance,DWORD dwStyle,LPCSTR szFile);", "MCIWndCreateW": "HWND WINAPIV MCIWndCreateW(HWND hwndParent,HINSTANCE hInstance,DWORD dwStyle,LPCWSTR szFile);", "MCIWndRegisterClass": "WINBOOL WINAPIV MCIWndRegisterClass(void);", "capCreateCaptureWindowA": "HWND WINAPI capCreateCaptureWindowA (LPCSTR lpszWindowName,DWORD dwStyle,int x,int y,int nWidth,int nHeight,HWND hwndParent,int nID);", "capGetDriverDescriptionA": "WINBOOL WINAPI capGetDriverDescriptionA (UINT wDriverIndex,LPSTR lpszName,int cbName,LPSTR lpszVer,int cbVer);", "capCreateCaptureWindowW": "HWND WINAPI capCreateCaptureWindowW (LPCWSTR lpszWindowName,DWORD dwStyle,int x,int y,int nWidth,int nHeight,HWND hwndParent,int nID);", "capGetDriverDescriptionW": "WINBOOL WINAPI capGetDriverDescriptionW (UINT wDriverIndex,LPWSTR lpszName,int cbName,LPWSTR lpszVer,int cbVer);", "GetOpenFileNamePreviewA": "WINBOOL WINAPI GetOpenFileNamePreviewA(LPOPENFILENAMEA lpofn);", "GetSaveFileNamePreviewA": "WINBOOL WINAPI GetSaveFileNamePreviewA(LPOPENFILENAMEA lpofn);", "GetOpenFileNamePreviewW": "WINBOOL WINAPI GetOpenFileNamePreviewW(LPOPENFILENAMEW lpofn);", "GetSaveFileNamePreviewW": "WINBOOL WINAPI GetSaveFileNamePreviewW(LPOPENFILENAMEW lpofn);", "LoadPackagedLibrary": "WINBASEAPI HMODULE WINAPI LoadPackagedLibrary (LPCWSTR lpwLibFileName, DWORD Reserved);", "IADsTSUserEx_get_TerminalServicesProfilePath_Proxy": "HRESULT WINAPI IADsTSUserEx_get_TerminalServicesProfilePath_Proxy(IADsTSUserEx *This,BSTR *pVal);", "IADsTSUserEx_put_TerminalServicesProfilePath_Proxy": "HRESULT WINAPI IADsTSUserEx_put_TerminalServicesProfilePath_Proxy(IADsTSUserEx *This,BSTR pNewVal);", "IADsTSUserEx_get_TerminalServicesHomeDirectory_Proxy": "HRESULT WINAPI IADsTSUserEx_get_TerminalServicesHomeDirectory_Proxy(IADsTSUserEx *This,BSTR *pVal);", "IADsTSUserEx_put_TerminalServicesHomeDirectory_Proxy": "HRESULT WINAPI IADsTSUserEx_put_TerminalServicesHomeDirectory_Proxy(IADsTSUserEx *This,BSTR pNewVal);", "IADsTSUserEx_get_TerminalServicesHomeDrive_Proxy": "HRESULT WINAPI IADsTSUserEx_get_TerminalServicesHomeDrive_Proxy(IADsTSUserEx *This,BSTR *pVal);", "IADsTSUserEx_put_TerminalServicesHomeDrive_Proxy": "HRESULT WINAPI IADsTSUserEx_put_TerminalServicesHomeDrive_Proxy(IADsTSUserEx *This,BSTR pNewVal);", "IADsTSUserEx_get_AllowLogon_Proxy": "HRESULT WINAPI IADsTSUserEx_get_AllowLogon_Proxy(IADsTSUserEx *This,LONG *pVal);", "IADsTSUserEx_put_AllowLogon_Proxy": "HRESULT WINAPI IADsTSUserEx_put_AllowLogon_Proxy(IADsTSUserEx *This,LONG NewVal);", "IADsTSUserEx_get_EnableRemoteControl_Proxy": "HRESULT WINAPI IADsTSUserEx_get_EnableRemoteControl_Proxy(IADsTSUserEx *This,LONG *pVal);", "IADsTSUserEx_put_EnableRemoteControl_Proxy": "HRESULT WINAPI IADsTSUserEx_put_EnableRemoteControl_Proxy(IADsTSUserEx *This,LONG NewVal);", "IADsTSUserEx_get_MaxDisconnectionTime_Proxy": "HRESULT WINAPI IADsTSUserEx_get_MaxDisconnectionTime_Proxy(IADsTSUserEx *This,LONG *pVal);", "IADsTSUserEx_put_MaxDisconnectionTime_Proxy": "HRESULT WINAPI IADsTSUserEx_put_MaxDisconnectionTime_Proxy(IADsTSUserEx *This,LONG NewVal);", "IADsTSUserEx_get_MaxConnectionTime_Proxy": "HRESULT WINAPI IADsTSUserEx_get_MaxConnectionTime_Proxy(IADsTSUserEx *This,LONG *pVal);", "IADsTSUserEx_put_MaxConnectionTime_Proxy": "HRESULT WINAPI IADsTSUserEx_put_MaxConnectionTime_Proxy(IADsTSUserEx *This,LONG NewVal);", "IADsTSUserEx_get_MaxIdleTime_Proxy": "HRESULT WINAPI IADsTSUserEx_get_MaxIdleTime_Proxy(IADsTSUserEx *This,LONG *pVal);", "IADsTSUserEx_put_MaxIdleTime_Proxy": "HRESULT WINAPI IADsTSUserEx_put_MaxIdleTime_Proxy(IADsTSUserEx *This,LONG NewVal);", "IADsTSUserEx_get_ReconnectionAction_Proxy": "HRESULT WINAPI IADsTSUserEx_get_ReconnectionAction_Proxy(IADsTSUserEx *This,LONG *pNewVal);", "IADsTSUserEx_put_ReconnectionAction_Proxy": "HRESULT WINAPI IADsTSUserEx_put_ReconnectionAction_Proxy(IADsTSUserEx *This,LONG NewVal);", "IADsTSUserEx_get_BrokenConnectionAction_Proxy": "HRESULT WINAPI IADsTSUserEx_get_BrokenConnectionAction_Proxy(IADsTSUserEx *This,LONG *pNewVal);", "IADsTSUserEx_put_BrokenConnectionAction_Proxy": "HRESULT WINAPI IADsTSUserEx_put_BrokenConnectionAction_Proxy(IADsTSUserEx *This,LONG NewVal);", "IADsTSUserEx_get_ConnectClientDrivesAtLogon_Proxy": "HRESULT WINAPI IADsTSUserEx_get_ConnectClientDrivesAtLogon_Proxy(IADsTSUserEx *This,LONG *pNewVal);", "IADsTSUserEx_put_ConnectClientDrivesAtLogon_Proxy": "HRESULT WINAPI IADsTSUserEx_put_ConnectClientDrivesAtLogon_Proxy(IADsTSUserEx *This,LONG NewVal);", "IADsTSUserEx_get_ConnectClientPrintersAtLogon_Proxy": "HRESULT WINAPI IADsTSUserEx_get_ConnectClientPrintersAtLogon_Proxy(IADsTSUserEx *This,LONG *pVal);", "IADsTSUserEx_put_ConnectClientPrintersAtLogon_Proxy": "HRESULT WINAPI IADsTSUserEx_put_ConnectClientPrintersAtLogon_Proxy(IADsTSUserEx *This,LONG NewVal);", "IADsTSUserEx_get_DefaultToMainPrinter_Proxy": "HRESULT WINAPI IADsTSUserEx_get_DefaultToMainPrinter_Proxy(IADsTSUserEx *This,LONG *pVal);", "IADsTSUserEx_put_DefaultToMainPrinter_Proxy": "HRESULT WINAPI IADsTSUserEx_put_DefaultToMainPrinter_Proxy(IADsTSUserEx *This,LONG NewVal);", "IADsTSUserEx_get_TerminalServicesWorkDirectory_Proxy": "HRESULT WINAPI IADsTSUserEx_get_TerminalServicesWorkDirectory_Proxy(IADsTSUserEx *This,BSTR *pVal);", "IADsTSUserEx_put_TerminalServicesWorkDirectory_Proxy": "HRESULT WINAPI IADsTSUserEx_put_TerminalServicesWorkDirectory_Proxy(IADsTSUserEx *This,BSTR pNewVal);", "IADsTSUserEx_get_TerminalServicesInitialProgram_Proxy": "HRESULT WINAPI IADsTSUserEx_get_TerminalServicesInitialProgram_Proxy(IADsTSUserEx *This,BSTR *pVal);", "IADsTSUserEx_put_TerminalServicesInitialProgram_Proxy": "HRESULT WINAPI IADsTSUserEx_put_TerminalServicesInitialProgram_Proxy(IADsTSUserEx *This,BSTR pNewVal);", "_com_issue_errorex": "void WINAPI _com_issue_errorex(HRESULT,IUnknown*,REFIID);", "_com_dispatch_propget": "HRESULT WINAPI _com_dispatch_propget(IDispatch*,DISPID,VARTYPE,void*);", "_com_raise_error": "inline void WINAPI _com_raise_error(HRESULT hr, IErrorInfo *perrinfo = 0) {", "_com_issue_error": "void WINAPI _com_issue_error(HRESULT);", "BhAllocSystemMemory": "extern LPVOID WINAPI BhAllocSystemMemory(DWORD nBytes);", "BhFreeSystemMemory": "extern LPVOID WINAPI BhFreeSystemMemory(LPVOID ptr);", "BhGetNetworkRequestAddress": "extern LPVOID WINAPI BhGetNetworkRequestAddress(DWORD NalRequestType);", "CreatePassword": "extern HPASSWORD WINAPI CreatePassword(LPSTR password);", "DestroyPassword": "extern VOID WINAPI DestroyPassword(HPASSWORD hPassword);", "ValidatePassword": "extern ACCESSRIGHTS WINAPI ValidatePassword(HPASSWORD hPassword);", "BhOpenService": "extern HANDLE WINAPI BhOpenService(LPSTR ServiceName);", "BhCloseService": "extern VOID WINAPI BhCloseService(HANDLE ServiceHandle);", "BhStartService": "extern DWORD WINAPI BhStartService(HANDLE ServiceHandle);", "BhStopService": "extern DWORD WINAPI BhStopService(HANDLE ServiceHandle);", "RegOverridePredefKey": "WINADVAPI LONG WINAPI RegOverridePredefKey(HKEY hKey,HKEY hNewHKey);", "RegOpenUserClassesRoot": "WINADVAPI LONG WINAPI RegOpenUserClassesRoot(HANDLE hToken,DWORD dwOptions,REGSAM samDesired,PHKEY phkResult);", "RegOpenCurrentUser": "WINADVAPI LONG WINAPI RegOpenCurrentUser(REGSAM samDesired,PHKEY phkResult);", "RegDisablePredefinedCache": "WINADVAPI LONG WINAPI RegDisablePredefinedCache(void);", "RegDisablePredefinedCacheEx": "WINADVAPI LONG WINAPI RegDisablePredefinedCacheEx(void);", "RegConnectRegistryA": "WINADVAPI LONG WINAPI RegConnectRegistryA(LPCSTR lpMachineName,HKEY hKey,PHKEY phkResult);", "RegConnectRegistryW": "WINADVAPI LONG WINAPI RegConnectRegistryW(LPCWSTR lpMachineName,HKEY hKey,PHKEY phkResult);", "RegConnectRegistryExA": "WINADVAPI LONG WINAPI RegConnectRegistryExA(LPCSTR lpMachineName,HKEY hKey,ULONG Flags,PHKEY phkResult);", "RegConnectRegistryExW": "WINADVAPI LONG WINAPI RegConnectRegistryExW(LPCWSTR lpMachineName,HKEY hKey,ULONG Flags,PHKEY phkResult);", "RegCreateKeyA": "WINADVAPI LONG WINAPI RegCreateKeyA(HKEY hKey,LPCSTR lpSubKey,PHKEY phkResult);", "RegCreateKeyW": "WINADVAPI LONG WINAPI RegCreateKeyW(HKEY hKey,LPCWSTR lpSubKey,PHKEY phkResult);", "RegDeleteKeyA": "WINADVAPI LONG WINAPI RegDeleteKeyA(HKEY hKey,LPCSTR lpSubKey);", "RegDeleteKeyW": "WINADVAPI LONG WINAPI RegDeleteKeyW(HKEY hKey,LPCWSTR lpSubKey);", "RegDisableReflectionKey": "WINADVAPI LONG WINAPI RegDisableReflectionKey(HKEY hBase);", "RegEnableReflectionKey": "WINADVAPI LONG WINAPI RegEnableReflectionKey(HKEY hBase);", "RegQueryReflectionKey": "WINADVAPI LONG WINAPI RegQueryReflectionKey(HKEY hBase,WINBOOL *bIsReflectionDisabled);", "RegEnumKeyA": "WINADVAPI LONG WINAPI RegEnumKeyA(HKEY hKey,DWORD dwIndex,LPSTR lpName,DWORD cchName);", "RegEnumKeyW": "WINADVAPI LONG WINAPI RegEnumKeyW(HKEY hKey,DWORD dwIndex,LPWSTR lpName,DWORD cchName);", "RegFlushKey": "WINADVAPI LONG WINAPI RegFlushKey(HKEY hKey);", "RegGetKeySecurity": "WINADVAPI LONG WINAPI RegGetKeySecurity(HKEY hKey,SECURITY_INFORMATION SecurityInformation,PSECURITY_DESCRIPTOR pSecurityDescriptor,LPDWORD lpcbSecurityDescriptor);", "RegLoadKeyA": "WINADVAPI LONG WINAPI RegLoadKeyA(HKEY hKey,LPCSTR lpSubKey,LPCSTR lpFile);", "RegLoadKeyW": "WINADVAPI LONG WINAPI RegLoadKeyW(HKEY hKey,LPCWSTR lpSubKey,LPCWSTR lpFile);", "RegOpenKeyA": "WINADVAPI LONG WINAPI RegOpenKeyA(HKEY hKey,LPCSTR lpSubKey,PHKEY phkResult);", "RegOpenKeyW": "WINADVAPI LONG WINAPI RegOpenKeyW(HKEY hKey,LPCWSTR lpSubKey,PHKEY phkResult);", "RegQueryValueA": "WINADVAPI LONG WINAPI RegQueryValueA(HKEY hKey,LPCSTR lpSubKey,LPSTR lpData,PLONG lpcbData);", "RegQueryValueW": "WINADVAPI LONG WINAPI RegQueryValueW(HKEY hKey,LPCWSTR lpSubKey,LPWSTR lpData,PLONG lpcbData);", "RegQueryMultipleValuesA": "WINADVAPI LONG WINAPI RegQueryMultipleValuesA(HKEY hKey,PVALENTA val_list,DWORD num_vals,LPSTR lpValueBuf,LPDWORD ldwTotsize);", "RegQueryMultipleValuesW": "WINADVAPI LONG WINAPI RegQueryMultipleValuesW(HKEY hKey,PVALENTW val_list,DWORD num_vals,LPWSTR lpValueBuf,LPDWORD ldwTotsize);", "RegReplaceKeyA": "WINADVAPI LONG WINAPI RegReplaceKeyA(HKEY hKey,LPCSTR lpSubKey,LPCSTR lpNewFile,LPCSTR lpOldFile);", "RegReplaceKeyW": "WINADVAPI LONG WINAPI RegReplaceKeyW(HKEY hKey,LPCWSTR lpSubKey,LPCWSTR lpNewFile,LPCWSTR lpOldFile);", "RegRestoreKeyA": "WINADVAPI LONG WINAPI RegRestoreKeyA(HKEY hKey,LPCSTR lpFile,DWORD dwFlags);", "RegRestoreKeyW": "WINADVAPI LONG WINAPI RegRestoreKeyW(HKEY hKey,LPCWSTR lpFile,DWORD dwFlags);", "RegSaveKeyA": "WINADVAPI LONG WINAPI RegSaveKeyA(HKEY hKey,LPCSTR lpFile,LPSECURITY_ATTRIBUTES lpSecurityAttributes);", "RegSaveKeyW": "WINADVAPI LONG WINAPI RegSaveKeyW(HKEY hKey,LPCWSTR lpFile,LPSECURITY_ATTRIBUTES lpSecurityAttributes);", "RegSetKeySecurity": "WINADVAPI LONG WINAPI RegSetKeySecurity(HKEY hKey,SECURITY_INFORMATION SecurityInformation,PSECURITY_DESCRIPTOR pSecurityDescriptor);", "RegSetValueA": "WINADVAPI LONG WINAPI RegSetValueA(HKEY hKey,LPCSTR lpSubKey,DWORD dwType,LPCSTR lpData,DWORD cbData);", "RegSetValueW": "WINADVAPI LONG WINAPI RegSetValueW(HKEY hKey,LPCWSTR lpSubKey,DWORD dwType,LPCWSTR lpData,DWORD cbData);", "RegUnLoadKeyA": "WINADVAPI LONG WINAPI RegUnLoadKeyA(HKEY hKey,LPCSTR lpSubKey);", "RegUnLoadKeyW": "WINADVAPI LONG WINAPI RegUnLoadKeyW(HKEY hKey,LPCWSTR lpSubKey);", "InitiateSystemShutdownA": "WINADVAPI WINBOOL WINAPI InitiateSystemShutdownA(LPSTR lpMachineName,LPSTR lpMessage,DWORD dwTimeout,WINBOOL bForceAppsClosed,WINBOOL bRebootAfterShutdown);", "InitiateSystemShutdownW": "WINADVAPI WINBOOL WINAPI InitiateSystemShutdownW(LPWSTR lpMachineName,LPWSTR lpMessage,DWORD dwTimeout,WINBOOL bForceAppsClosed,WINBOOL bRebootAfterShutdown);", "AbortSystemShutdownA": "WINADVAPI WINBOOL WINAPI AbortSystemShutdownA(LPSTR lpMachineName);", "AbortSystemShutdownW": "WINADVAPI WINBOOL WINAPI AbortSystemShutdownW(LPWSTR lpMachineName);", "InitiateSystemShutdownExA": "WINADVAPI WINBOOL WINAPI InitiateSystemShutdownExA(LPSTR lpMachineName,LPSTR lpMessage,DWORD dwTimeout,WINBOOL bForceAppsClosed,WINBOOL bRebootAfterShutdown,DWORD dwReason);", "InitiateSystemShutdownExW": "WINADVAPI WINBOOL WINAPI InitiateSystemShutdownExW(LPWSTR lpMachineName,LPWSTR lpMessage,DWORD dwTimeout,WINBOOL bForceAppsClosed,WINBOOL bRebootAfterShutdown,DWORD dwReason);", "RegSaveKeyExA": "WINADVAPI LONG WINAPI RegSaveKeyExA(HKEY hKey,LPCSTR lpFile,LPSECURITY_ATTRIBUTES lpSecurityAttributes,DWORD Flags);", "RegSaveKeyExW": "WINADVAPI LONG WINAPI RegSaveKeyExW(HKEY hKey,LPCWSTR lpFile,LPSECURITY_ATTRIBUTES lpSecurityAttributes,DWORD Flags);", "Wow64Win32ApiEntry": "WINADVAPI LONG WINAPI Wow64Win32ApiEntry (DWORD dwFuncNumber,DWORD dwFlag,DWORD dwRes);", "RegCopyTreeA": "WINADVAPI LONG WINAPI RegCopyTreeA(", "RegCopyTreeW": "WINADVAPI LONG WINAPI RegCopyTreeW(", "RegCreateKeyTransactedA": "WINADVAPI LONG WINAPI RegCreateKeyTransactedA(", "RegCreateKeyTransactedW": "WINADVAPI LONG WINAPI RegCreateKeyTransactedW(", "RegDeleteKeyTransactedA": "WINADVAPI LONG WINAPI RegDeleteKeyTransactedA(", "RegDeleteKeyTransactedW": "WINADVAPI LONG WINAPI RegDeleteKeyTransactedW(", "RegDeleteKeyValueA": "WINADVAPI LONG WINAPI RegDeleteKeyValueA(", "RegDeleteKeyValueW": "WINADVAPI LONG WINAPI RegDeleteKeyValueW(", "RegLoadAppKeyA": "WINADVAPI LONG WINAPI RegLoadAppKeyA(", "RegLoadAppKeyW": "WINADVAPI LONG WINAPI RegLoadAppKeyW(", "RegLoadMUIStringA": "WINADVAPI LONG WINAPI RegLoadMUIStringA(HKEY hKey, LPCSTR pszValue, LPSTR pszOutBuf, DWORD cbOutBuf, LPDWORD pcbData, DWORD Flags, LPCSTR pszDirectory);", "RegLoadMUIStringW": "WINADVAPI LONG WINAPI RegLoadMUIStringW(HKEY hKey, LPCWSTR pszValue, LPWSTR pszOutBuf, DWORD cbOutBuf, LPDWORD pcbData, DWORD Flags, LPCWSTR pszDirectory);", "RegOpenKeyTransactedA": "WINADVAPI LONG WINAPI RegOpenKeyTransactedA(", "RegOpenKeyTransactedW": "WINADVAPI LONG WINAPI RegOpenKeyTransactedW(", "RegRenameKey": "WINADVAPI LONG WINAPI RegRenameKey(", "RegSetKeyValueA": "WINADVAPI LONG WINAPI RegSetKeyValueA(", "RegSetKeyValueW": "WINADVAPI LONG WINAPI RegSetKeyValueW(", "InitiateShutdownA": "WINADVAPI DWORD WINAPI InitiateShutdownA(", "InitiateShutdownW": "WINADVAPI DWORD WINAPI InitiateShutdownW(", "CheckForHiberboot": "WINADVAPI DWORD WINAPI CheckForHiberboot(", "RegCloseKey": "WINADVAPI LONG WINAPI RegCloseKey(HKEY hKey);", "RegCreateKeyExA": "WINADVAPI LONG WINAPI RegCreateKeyExA(HKEY hKey,LPCSTR lpSubKey,DWORD Reserved,LPSTR lpClass,DWORD dwOptions,REGSAM samDesired,LPSECURITY_ATTRIBUTES lpSecurityAttributes,PHKEY phkResult,LPDWORD lpdwDisposition);", "RegCreateKeyExW": "WINADVAPI LONG WINAPI RegCreateKeyExW(HKEY hKey,LPCWSTR lpSubKey,DWORD Reserved,LPWSTR lpClass,DWORD dwOptions,REGSAM samDesired,LPSECURITY_ATTRIBUTES lpSecurityAttributes,PHKEY phkResult,LPDWORD lpdwDisposition);", "RegDeleteKeyExA": "WINADVAPI LONG WINAPI RegDeleteKeyExA(HKEY hKey,LPCSTR lpSubKey,REGSAM samDesired,DWORD Reserved);", "RegDeleteKeyExW": "WINADVAPI LONG WINAPI RegDeleteKeyExW(HKEY hKey,LPCWSTR lpSubKey,REGSAM samDesired,DWORD Reserved);", "RegDeleteValueA": "WINADVAPI LONG WINAPI RegDeleteValueA(HKEY hKey,LPCSTR lpValueName);", "RegDeleteValueW": "WINADVAPI LONG WINAPI RegDeleteValueW(HKEY hKey,LPCWSTR lpValueName);", "RegEnumKeyExA": "WINADVAPI LONG WINAPI RegEnumKeyExA(HKEY hKey,DWORD dwIndex,LPSTR lpName,LPDWORD lpcchName,LPDWORD lpReserved,LPSTR lpClass,LPDWORD lpcchClass,PFILETIME lpftLastWriteTime);", "RegEnumKeyExW": "WINADVAPI LONG WINAPI RegEnumKeyExW(HKEY hKey,DWORD dwIndex,LPWSTR lpName,LPDWORD lpcchName,LPDWORD lpReserved,LPWSTR lpClass,LPDWORD lpcchClass,PFILETIME lpftLastWriteTime);", "RegEnumValueA": "WINADVAPI LONG WINAPI RegEnumValueA(HKEY hKey,DWORD dwIndex,LPSTR lpValueName,LPDWORD lpcchValueName,LPDWORD lpReserved,LPDWORD lpType,LPBYTE lpData,LPDWORD lpcbData);", "RegEnumValueW": "WINADVAPI LONG WINAPI RegEnumValueW(HKEY hKey,DWORD dwIndex,LPWSTR lpValueName,LPDWORD lpcchValueName,LPDWORD lpReserved,LPDWORD lpType,LPBYTE lpData,LPDWORD lpcbData);", "RegGetValueA": "WINADVAPI LONG WINAPI RegGetValueA(HKEY hkey,LPCSTR lpSubKey,LPCSTR lpValue,DWORD dwFlags,LPDWORD pdwType,PVOID pvData,LPDWORD pcbData);", "RegGetValueW": "WINADVAPI LONG WINAPI RegGetValueW(HKEY hkey,LPCWSTR lpSubKey,LPCWSTR lpValue,DWORD dwFlags,LPDWORD pdwType,PVOID pvData,LPDWORD pcbData);", "RegNotifyChangeKeyValue": "WINADVAPI LONG WINAPI RegNotifyChangeKeyValue(HKEY hKey,WINBOOL bWatchSubtree,DWORD dwNotifyFilter,HANDLE hEvent,WINBOOL fAsynchronous);", "RegOpenKeyExA": "WINADVAPI LONG WINAPI RegOpenKeyExA(HKEY hKey,LPCSTR lpSubKey,DWORD ulOptions,REGSAM samDesired,PHKEY phkResult);", "RegOpenKeyExW": "WINADVAPI LONG WINAPI RegOpenKeyExW(HKEY hKey,LPCWSTR lpSubKey,DWORD ulOptions,REGSAM samDesired,PHKEY phkResult);", "RegQueryInfoKeyA": "WINADVAPI LONG WINAPI RegQueryInfoKeyA(HKEY hKey,LPSTR lpClass,LPDWORD lpcchClass,LPDWORD lpReserved,LPDWORD lpcSubKeys,LPDWORD lpcbMaxSubKeyLen,LPDWORD lpcbMaxClassLen,LPDWORD lpcValues,LPDWORD lpcbMaxValueNameLen,LPDWORD lpcbMaxValueLen,LPDWORD lpcbSecurityDescriptor,PFILETIME lpftLastWriteTime);", "RegQueryInfoKeyW": "WINADVAPI LONG WINAPI RegQueryInfoKeyW(HKEY hKey,LPWSTR lpClass,LPDWORD lpcchClass,LPDWORD lpReserved,LPDWORD lpcSubKeys,LPDWORD lpcbMaxSubKeyLen,LPDWORD lpcbMaxClassLen,LPDWORD lpcValues,LPDWORD lpcbMaxValueNameLen,LPDWORD lpcbMaxValueLen,LPDWORD lpcbSecurityDescriptor,PFILETIME lpftLastWriteTime);", "RegQueryValueExA": "WINADVAPI LONG WINAPI RegQueryValueExA(HKEY hKey,LPCSTR lpValueName,LPDWORD lpReserved,LPDWORD lpType,LPBYTE lpData,LPDWORD lpcbData);", "RegQueryValueExW": "WINADVAPI LONG WINAPI RegQueryValueExW(HKEY hKey,LPCWSTR lpValueName,LPDWORD lpReserved,LPDWORD lpType,LPBYTE lpData,LPDWORD lpcbData);", "RegSetValueExA": "WINADVAPI LONG WINAPI RegSetValueExA(HKEY hKey,LPCSTR lpValueName,DWORD Reserved,DWORD dwType,CONST BYTE *lpData,DWORD cbData);", "RegSetValueExW": "WINADVAPI LONG WINAPI RegSetValueExW(HKEY hKey,LPCWSTR lpValueName,DWORD Reserved,DWORD dwType,CONST BYTE *lpData,DWORD cbData);", "RegDeleteTreeA": "WINADVAPI LONG WINAPI RegDeleteTreeA(HKEY hKey,LPCSTR lpSubKey);", "RegDeleteTreeW": "WINADVAPI LONG WINAPI RegDeleteTreeW(HKEY hKey,LPCWSTR lpSubKey);", "CreateDispatcherQueueController": "EXTERN_C HRESULT WINAPI CreateDispatcherQueueController(DispatcherQueueOptions options, PDISPATCHERQUEUECONTROLLER *dispatcherQueueController);", "CompareStringW": "WINBASEAPI int WINAPI CompareStringW (LCID Locale, DWORD dwCmpFlags, PCNZWCH lpString1, int cchCount1, PCNZWCH lpString2, int cchCount2);", "FoldStringW": "WINBASEAPI int WINAPI FoldStringW (DWORD dwMapFlags, LPCWCH lpSrcStr, int cchSrc, LPWSTR lpDestStr, int cchDest);", "GetStringTypeExW": "WINBASEAPI WINBOOL WINAPI GetStringTypeExW (LCID Locale, DWORD dwInfoType, LPCWCH lpSrcStr, int cchSrc, LPWORD lpCharType);", "CompareStringEx": "WINBASEAPI int WINAPI CompareStringEx (LPCWSTR lpLocaleName, DWORD dwCmpFlags, LPCWCH lpString1, int cchCount1, LPCWCH lpString2, int cchCount2, LPNLSVERSIONINFO lpVersionInformation, LPVOID lpReserved, LPARAM lParam);", "CompareStringOrdinal": "WINBASEAPI int WINAPI CompareStringOrdinal (LPCWCH lpString1, int cchCount1, LPCWCH lpString2, int cchCount2, WINBOOL bIgnoreCase);", "GetStringTypeW": "WINBASEAPI WINBOOL WINAPI GetStringTypeW (DWORD dwInfoType, LPCWCH lpSrcStr, int cchSrc, LPWORD lpCharType);", "MultiByteToWideChar": "WINBASEAPI int WINAPI MultiByteToWideChar (UINT CodePage, DWORD dwFlags, LPCCH lpMultiByteStr, int cbMultiByte, LPWSTR lpWideCharStr, int cchWideChar);", "WideCharToMultiByte": "WINBASEAPI int WINAPI WideCharToMultiByte (UINT CodePage, DWORD dwFlags, LPCWCH lpWideCharStr, int cchWideChar, LPSTR lpMultiByteStr, int cbMultiByte, LPCCH lpDefaultChar, LPBOOL lpUsedDefaultChar);", "SendIMEMessageExA": "LRESULT WINAPI SendIMEMessageExA(HWND,LPARAM);", "SendIMEMessageExW": "LRESULT WINAPI SendIMEMessageExW(HWND,LPARAM);", "IIisServiceControl_Stop_Proxy": "HRESULT WINAPI IIisServiceControl_Stop_Proxy(IIisServiceControl *This,DWORD dwTimeoutMsecs,DWORD dwForce);", "IIisServiceControl_Start_Proxy": "HRESULT WINAPI IIisServiceControl_Start_Proxy(IIisServiceControl *This,DWORD dwTimeoutMsecs);", "IIisServiceControl_Reboot_Proxy": "HRESULT WINAPI IIisServiceControl_Reboot_Proxy(IIisServiceControl *This,DWORD dwTimeouMsecs,DWORD dwForceAppsClosed);", "IIisServiceControl_Status_Proxy": "HRESULT WINAPI IIisServiceControl_Status_Proxy(IIisServiceControl *This,DWORD dwBufferSize,unsigned char *pbBuffer,DWORD *pdwMDRequiredBufferSize,DWORD *pdwNumServices);", "IIisServiceControl_Kill_Proxy": "HRESULT WINAPI IIisServiceControl_Kill_Proxy(IIisServiceControl *This);", "WinVerifyTrust": "extern LONG WINAPI WinVerifyTrust(HWND hwnd,GUID *pgActionID,LPVOID pWVTData);", "WinVerifyTrustEx": "extern HRESULT WINAPI WinVerifyTrustEx(HWND hwnd,GUID *pgActionID,WINTRUST_DATA *pWinTrustData);", "WintrustGetRegPolicyFlags": "extern void WINAPI WintrustGetRegPolicyFlags(DWORD *pdwPolicyFlags);", "WintrustSetRegPolicyFlags": "extern WINBOOL WINAPI WintrustSetRegPolicyFlags(DWORD dwPolicyFlags);", "WintrustAddActionID": "extern WINBOOL WINAPI WintrustAddActionID(GUID *pgActionID,DWORD fdwFlags,CRYPT_REGISTER_ACTIONID *psProvInfo);", "WintrustRemoveActionID": "extern WINBOOL WINAPI WintrustRemoveActionID(GUID *pgActionID);", "WintrustLoadFunctionPointers": "extern WINBOOL WINAPI WintrustLoadFunctionPointers(GUID *pgActionID,CRYPT_PROVIDER_FUNCTIONS *pPfns);", "WintrustAddDefaultForUsage": "extern WINBOOL WINAPI WintrustAddDefaultForUsage(const char *pszUsageOID,CRYPT_PROVIDER_REGDEFUSAGE *psDefUsage);", "WintrustGetDefaultForUsage": "extern WINBOOL WINAPI WintrustGetDefaultForUsage(DWORD dwAction,const char *pszUsageOID,CRYPT_PROVIDER_DEFUSAGE *psUsage);", "WTHelperGetProvSignerFromChain": "extern CRYPT_PROVIDER_SGNR *WINAPI WTHelperGetProvSignerFromChain(CRYPT_PROVIDER_DATA *pProvData,DWORD idxSigner,WINBOOL fCounterSigner,DWORD idxCounterSigner);", "WTHelperGetProvCertFromChain": "extern CRYPT_PROVIDER_CERT *WINAPI WTHelperGetProvCertFromChain(CRYPT_PROVIDER_SGNR *pSgnr,DWORD idxCert);", "WTHelperProvDataFromStateData": "extern CRYPT_PROVIDER_DATA *WINAPI WTHelperProvDataFromStateData(HANDLE hStateData);", "WTHelperGetProvPrivateDataFromChain": "extern CRYPT_PROVIDER_PRIVDATA *WINAPI WTHelperGetProvPrivateDataFromChain(CRYPT_PROVIDER_DATA *pProvData,GUID *pgProviderID);", "WTHelperCertIsSelfSigned": "extern WINBOOL WINAPI WTHelperCertIsSelfSigned(DWORD dwEncoding,CERT_INFO *pCert);", "WTHelperCertCheckValidSignature": "extern HRESULT WINAPI WTHelperCertCheckValidSignature(CRYPT_PROVIDER_DATA *pProvData);", "WintrustSetDefaultIncludePEPageHashes": "void WINAPI WintrustSetDefaultIncludePEPageHashes(WINBOOL fIncludePEPageHashes);", "MFCreateSinkWriterFromMediaSink": "HRESULT WINAPI MFCreateSinkWriterFromMediaSink(IMFMediaSink *sink, IMFAttributes *attributes,", "MFCreateSinkWriterFromURL": "HRESULT WINAPI MFCreateSinkWriterFromURL(const WCHAR *url, IMFByteStream *bytestream,", "MFCreateSourceReaderFromByteStream": "HRESULT WINAPI MFCreateSourceReaderFromByteStream(IMFByteStream *stream, IMFAttributes *attributes,", "MFCreateSourceReaderFromMediaSource": "HRESULT WINAPI MFCreateSourceReaderFromMediaSource(IMFMediaSource *source, IMFAttributes *attributes,", "MFCreateSourceReaderFromURL": "HRESULT WINAPI MFCreateSourceReaderFromURL(const WCHAR *url, IMFAttributes *attributes, IMFSourceReader **reader);", "IWiaDevMgr_EnumDeviceInfo_Proxy": "HRESULT WINAPI IWiaDevMgr_EnumDeviceInfo_Proxy(IWiaDevMgr *This,LONG lFlag,IEnumWIA_DEV_INFO **ppIEnum);", "IWiaDevMgr_LocalCreateDevice_Proxy": "HRESULT WINAPI IWiaDevMgr_LocalCreateDevice_Proxy(IWiaDevMgr *This,BSTR bstrDeviceID,IWiaItem **ppWiaItemRoot);", "IWiaDevMgr_LocalSelectDeviceDlg_Proxy": "HRESULT WINAPI IWiaDevMgr_LocalSelectDeviceDlg_Proxy(IWiaDevMgr *This,HWND hwndParent,LONG lDeviceType,LONG lFlags,BSTR *pbstrDeviceID,IWiaItem **ppItemRoot);", "IWiaDevMgr_LocalSelectDeviceDlgID_Proxy": "HRESULT WINAPI IWiaDevMgr_LocalSelectDeviceDlgID_Proxy(IWiaDevMgr *This,HWND hwndParent,LONG lDeviceType,LONG lFlags,BSTR *pbstrDeviceID);", "IWiaDevMgr_LocalGetImageDlg_Proxy": "HRESULT WINAPI IWiaDevMgr_LocalGetImageDlg_Proxy(IWiaDevMgr *This,HWND hwndParent,LONG lDeviceType,LONG lFlags,LONG lIntent,IWiaItem *pItemRoot,BSTR bstrFilename,GUID *pguidFormat);", "IWiaDevMgr_LocalRegisterEventCallbackProgram_Proxy": "HRESULT WINAPI IWiaDevMgr_LocalRegisterEventCallbackProgram_Proxy(IWiaDevMgr *This,LONG lFlags,BSTR bstrDeviceID,const GUID *pEventGUID,BSTR bstrCommandline,BSTR bstrName,BSTR bstrDescription,BSTR bstrIcon);", "IWiaDevMgr_LocalRegisterEventCallbackInterface_Proxy": "HRESULT WINAPI IWiaDevMgr_LocalRegisterEventCallbackInterface_Proxy(IWiaDevMgr *This,LONG lFlags,BSTR bstrDeviceID,const GUID *pEventGUID,IWiaEventCallback *pIWiaEventCallback,IUnknown **pEventObject);", "IWiaDevMgr_LocalRegisterEventCallbackCLSID_Proxy": "HRESULT WINAPI IWiaDevMgr_LocalRegisterEventCallbackCLSID_Proxy(IWiaDevMgr *This,LONG lFlags,BSTR bstrDeviceID,const GUID *pEventGUID,const GUID *pClsID,BSTR bstrName,BSTR bstrDescription,BSTR bstrIcon);", "IWiaDevMgr_AddDeviceDlg_Proxy": "HRESULT WINAPI IWiaDevMgr_AddDeviceDlg_Proxy(IWiaDevMgr *This,HWND hwndParent,LONG lFlags);", "IEnumWIA_DEV_INFO_RemoteNext_Proxy": "HRESULT WINAPI IEnumWIA_DEV_INFO_RemoteNext_Proxy(IEnumWIA_DEV_INFO *This,ULONG celt,IWiaPropertyStorage **rgelt,ULONG *pceltFetched);", "IEnumWIA_DEV_INFO_Skip_Proxy": "HRESULT WINAPI IEnumWIA_DEV_INFO_Skip_Proxy(IEnumWIA_DEV_INFO *This,ULONG celt);", "IEnumWIA_DEV_INFO_Reset_Proxy": "HRESULT WINAPI IEnumWIA_DEV_INFO_Reset_Proxy(IEnumWIA_DEV_INFO *This);", "IEnumWIA_DEV_INFO_Clone_Proxy": "HRESULT WINAPI IEnumWIA_DEV_INFO_Clone_Proxy(IEnumWIA_DEV_INFO *This,IEnumWIA_DEV_INFO **ppIEnum);", "IEnumWIA_DEV_INFO_GetCount_Proxy": "HRESULT WINAPI IEnumWIA_DEV_INFO_GetCount_Proxy(IEnumWIA_DEV_INFO *This,ULONG *celt);", "IWiaEventCallback_ImageEventCallback_Proxy": "HRESULT WINAPI IWiaEventCallback_ImageEventCallback_Proxy(IWiaEventCallback *This,const GUID *pEventGUID,BSTR bstrEventDescription,BSTR bstrDeviceID,BSTR bstrDeviceDescription,DWORD dwDeviceType,BSTR bstrFullItemName,ULONG *pulEventType,ULONG ulReserved);", "IWiaDataCallback_RemoteBandedDataCallback_Proxy": "HRESULT WINAPI IWiaDataCallback_RemoteBandedDataCallback_Proxy(IWiaDataCallback *This,LONG lMessage,LONG lStatus,LONG lPercentComplete,LONG lOffset,LONG lLength,LONG lReserved,LONG lResLength,BYTE *pbBuffer);", "IWiaDataTransfer_idtGetDataEx_Proxy": "HRESULT WINAPI IWiaDataTransfer_idtGetDataEx_Proxy(IWiaDataTransfer *This,LPSTGMEDIUM pMedium,IWiaDataCallback *pIWiaDataCallback);", "IWiaDataTransfer_idtGetBandedDataEx_Proxy": "HRESULT WINAPI IWiaDataTransfer_idtGetBandedDataEx_Proxy(IWiaDataTransfer *This,PWIA_DATA_TRANSFER_INFO pWiaDataTransInfo,IWiaDataCallback *pIWiaDataCallback);", "IWiaDataTransfer_idtQueryGetData_Proxy": "HRESULT WINAPI IWiaDataTransfer_idtQueryGetData_Proxy(IWiaDataTransfer *This,WIA_FORMAT_INFO *pfe);", "IWiaDataTransfer_idtEnumWIA_FORMAT_INFO_Proxy": "HRESULT WINAPI IWiaDataTransfer_idtEnumWIA_FORMAT_INFO_Proxy(IWiaDataTransfer *This,IEnumWIA_FORMAT_INFO **ppEnum);", "IWiaDataTransfer_idtGetExtendedTransferInfo_Proxy": "HRESULT WINAPI IWiaDataTransfer_idtGetExtendedTransferInfo_Proxy(IWiaDataTransfer *This,PWIA_EXTENDED_TRANSFER_INFO pExtendedTransferInfo);", "IWiaItem_GetItemType_Proxy": "HRESULT WINAPI IWiaItem_GetItemType_Proxy(IWiaItem *This,LONG *pItemType);", "IWiaItem_AnalyzeItem_Proxy": "HRESULT WINAPI IWiaItem_AnalyzeItem_Proxy(IWiaItem *This,LONG lFlags);", "IWiaItem_EnumChildItems_Proxy": "HRESULT WINAPI IWiaItem_EnumChildItems_Proxy(IWiaItem *This,IEnumWiaItem **ppIEnumWiaItem);", "IWiaItem_DeleteItem_Proxy": "HRESULT WINAPI IWiaItem_DeleteItem_Proxy(IWiaItem *This,LONG lFlags);", "IWiaItem_CreateChildItem_Proxy": "HRESULT WINAPI IWiaItem_CreateChildItem_Proxy(IWiaItem *This,LONG lFlags,BSTR bstrItemName,BSTR bstrFullItemName,IWiaItem **ppIWiaItem);", "IWiaItem_EnumRegisterEventInfo_Proxy": "HRESULT WINAPI IWiaItem_EnumRegisterEventInfo_Proxy(IWiaItem *This,LONG lFlags,const GUID *pEventGUID,IEnumWIA_DEV_CAPS **ppIEnum);", "IWiaItem_FindItemByName_Proxy": "HRESULT WINAPI IWiaItem_FindItemByName_Proxy(IWiaItem *This,LONG lFlags,BSTR bstrFullItemName,IWiaItem **ppIWiaItem);", "IWiaItem_LocalDeviceDlg_Proxy": "HRESULT WINAPI IWiaItem_LocalDeviceDlg_Proxy(IWiaItem *This,HWND hwndParent,LONG lFlags,LONG lIntent,LONG *plItemCount,IWiaItem ***pIWiaItem);", "IWiaItem_DeviceCommand_Proxy": "HRESULT WINAPI IWiaItem_DeviceCommand_Proxy(IWiaItem *This,LONG lFlags,const GUID *pCmdGUID,IWiaItem **pIWiaItem);", "IWiaItem_GetRootItem_Proxy": "HRESULT WINAPI IWiaItem_GetRootItem_Proxy(IWiaItem *This,IWiaItem **ppIWiaItem);", "IWiaItem_EnumDeviceCapabilities_Proxy": "HRESULT WINAPI IWiaItem_EnumDeviceCapabilities_Proxy(IWiaItem *This,LONG lFlags,IEnumWIA_DEV_CAPS **ppIEnumWIA_DEV_CAPS);", "IWiaItem_DumpItemData_Proxy": "HRESULT WINAPI IWiaItem_DumpItemData_Proxy(IWiaItem *This,BSTR *bstrData);", "IWiaItem_DumpDrvItemData_Proxy": "HRESULT WINAPI IWiaItem_DumpDrvItemData_Proxy(IWiaItem *This,BSTR *bstrData);", "IWiaItem_DumpTreeItemData_Proxy": "HRESULT WINAPI IWiaItem_DumpTreeItemData_Proxy(IWiaItem *This,BSTR *bstrData);", "IWiaItem_Diagnostic_Proxy": "HRESULT WINAPI IWiaItem_Diagnostic_Proxy(IWiaItem *This,ULONG ulSize,BYTE *pBuffer);", "IWiaPropertyStorage_ReadMultiple_Proxy": "HRESULT WINAPI IWiaPropertyStorage_ReadMultiple_Proxy(IWiaPropertyStorage *This,ULONG cpspec,const PROPSPEC rgpspec[],PROPVARIANT rgpropvar[]);", "IWiaPropertyStorage_RemoteWriteMultiple_Proxy": "HRESULT WINAPI IWiaPropertyStorage_RemoteWriteMultiple_Proxy(IWiaPropertyStorage *This,ULONG cpspec,const PROPSPEC *rgpspec,const PROPVARIANT *rgpropvar,PROPID propidNameFirst);", "IWiaPropertyStorage_DeleteMultiple_Proxy": "HRESULT WINAPI IWiaPropertyStorage_DeleteMultiple_Proxy(IWiaPropertyStorage *This,ULONG cpspec,const PROPSPEC rgpspec[]);", "IWiaPropertyStorage_ReadPropertyNames_Proxy": "HRESULT WINAPI IWiaPropertyStorage_ReadPropertyNames_Proxy(IWiaPropertyStorage *This,ULONG cpropid,const PROPID rgpropid[],LPOLESTR rglpwstrName[]);", "IWiaPropertyStorage_WritePropertyNames_Proxy": "HRESULT WINAPI IWiaPropertyStorage_WritePropertyNames_Proxy(IWiaPropertyStorage *This,ULONG cpropid,const PROPID rgpropid[],const LPOLESTR rglpwstrName[]);", "IWiaPropertyStorage_DeletePropertyNames_Proxy": "HRESULT WINAPI IWiaPropertyStorage_DeletePropertyNames_Proxy(IWiaPropertyStorage *This,ULONG cpropid,const PROPID rgpropid[]);", "IWiaPropertyStorage_Commit_Proxy": "HRESULT WINAPI IWiaPropertyStorage_Commit_Proxy(IWiaPropertyStorage *This,DWORD grfCommitFlags);", "IWiaPropertyStorage_Revert_Proxy": "HRESULT WINAPI IWiaPropertyStorage_Revert_Proxy(IWiaPropertyStorage *This);", "IWiaPropertyStorage_Enum_Proxy": "HRESULT WINAPI IWiaPropertyStorage_Enum_Proxy(IWiaPropertyStorage *This,IEnumSTATPROPSTG **ppenum);", "IWiaPropertyStorage_SetTimes_Proxy": "HRESULT WINAPI IWiaPropertyStorage_SetTimes_Proxy(IWiaPropertyStorage *This,const FILETIME *pctime,const FILETIME *patime,const FILETIME *pmtime);", "IWiaPropertyStorage_SetClass_Proxy": "HRESULT WINAPI IWiaPropertyStorage_SetClass_Proxy(IWiaPropertyStorage *This,REFCLSID clsid);", "IWiaPropertyStorage_Stat_Proxy": "HRESULT WINAPI IWiaPropertyStorage_Stat_Proxy(IWiaPropertyStorage *This,STATPROPSETSTG *pstatpsstg);", "IWiaPropertyStorage_GetPropertyAttributes_Proxy": "HRESULT WINAPI IWiaPropertyStorage_GetPropertyAttributes_Proxy(IWiaPropertyStorage *This,ULONG cpspec,PROPSPEC rgpspec[],ULONG rgflags[],PROPVARIANT rgpropvar[]);", "IWiaPropertyStorage_GetCount_Proxy": "HRESULT WINAPI IWiaPropertyStorage_GetCount_Proxy(IWiaPropertyStorage *This,ULONG *pulNumProps);", "IWiaPropertyStorage_GetPropertyStream_Proxy": "HRESULT WINAPI IWiaPropertyStorage_GetPropertyStream_Proxy(IWiaPropertyStorage *This,GUID *pCompatibilityId,IStream **ppIStream);", "IWiaPropertyStorage_RemoteSetPropertyStream_Proxy": "HRESULT WINAPI IWiaPropertyStorage_RemoteSetPropertyStream_Proxy(IWiaPropertyStorage *This,GUID *pCompatibilityId,IStream *pIStream);", "IEnumWiaItem_RemoteNext_Proxy": "HRESULT WINAPI IEnumWiaItem_RemoteNext_Proxy(IEnumWiaItem *This,ULONG celt,IWiaItem **ppIWiaItem,ULONG *pceltFetched);", "IEnumWiaItem_Skip_Proxy": "HRESULT WINAPI IEnumWiaItem_Skip_Proxy(IEnumWiaItem *This,ULONG celt);", "IEnumWiaItem_Reset_Proxy": "HRESULT WINAPI IEnumWiaItem_Reset_Proxy(IEnumWiaItem *This);", "IEnumWiaItem_Clone_Proxy": "HRESULT WINAPI IEnumWiaItem_Clone_Proxy(IEnumWiaItem *This,IEnumWiaItem **ppIEnum);", "IEnumWiaItem_GetCount_Proxy": "HRESULT WINAPI IEnumWiaItem_GetCount_Proxy(IEnumWiaItem *This,ULONG *celt);", "IEnumWIA_DEV_CAPS_RemoteNext_Proxy": "HRESULT WINAPI IEnumWIA_DEV_CAPS_RemoteNext_Proxy(IEnumWIA_DEV_CAPS *This,ULONG celt,WIA_DEV_CAP *rgelt,ULONG *pceltFetched);", "IEnumWIA_DEV_CAPS_Skip_Proxy": "HRESULT WINAPI IEnumWIA_DEV_CAPS_Skip_Proxy(IEnumWIA_DEV_CAPS *This,ULONG celt);", "IEnumWIA_DEV_CAPS_Reset_Proxy": "HRESULT WINAPI IEnumWIA_DEV_CAPS_Reset_Proxy(IEnumWIA_DEV_CAPS *This);", "IEnumWIA_DEV_CAPS_Clone_Proxy": "HRESULT WINAPI IEnumWIA_DEV_CAPS_Clone_Proxy(IEnumWIA_DEV_CAPS *This,IEnumWIA_DEV_CAPS **ppIEnum);", "IEnumWIA_DEV_CAPS_GetCount_Proxy": "HRESULT WINAPI IEnumWIA_DEV_CAPS_GetCount_Proxy(IEnumWIA_DEV_CAPS *This,ULONG *pcelt);", "IEnumWIA_FORMAT_INFO_RemoteNext_Proxy": "HRESULT WINAPI IEnumWIA_FORMAT_INFO_RemoteNext_Proxy(IEnumWIA_FORMAT_INFO *This,ULONG celt,WIA_FORMAT_INFO *rgelt,ULONG *pceltFetched);", "IEnumWIA_FORMAT_INFO_Skip_Proxy": "HRESULT WINAPI IEnumWIA_FORMAT_INFO_Skip_Proxy(IEnumWIA_FORMAT_INFO *This,ULONG celt);", "IEnumWIA_FORMAT_INFO_Reset_Proxy": "HRESULT WINAPI IEnumWIA_FORMAT_INFO_Reset_Proxy(IEnumWIA_FORMAT_INFO *This);", "IEnumWIA_FORMAT_INFO_Clone_Proxy": "HRESULT WINAPI IEnumWIA_FORMAT_INFO_Clone_Proxy(IEnumWIA_FORMAT_INFO *This,IEnumWIA_FORMAT_INFO **ppIEnum);", "IEnumWIA_FORMAT_INFO_GetCount_Proxy": "HRESULT WINAPI IEnumWIA_FORMAT_INFO_GetCount_Proxy(IEnumWIA_FORMAT_INFO *This,ULONG *pcelt);", "IWiaLog_InitializeLog_Proxy": "HRESULT WINAPI IWiaLog_InitializeLog_Proxy(IWiaLog *This,LONG hInstance);", "IWiaLog_hResult_Proxy": "HRESULT WINAPI IWiaLog_hResult_Proxy(IWiaLog *This,HRESULT hResult);", "IWiaLog_Log_Proxy": "HRESULT WINAPI IWiaLog_Log_Proxy(IWiaLog *This,LONG lFlags,LONG lResID,LONG lDetail,BSTR bstrText);", "IWiaLogEx_InitializeLogEx_Proxy": "HRESULT WINAPI IWiaLogEx_InitializeLogEx_Proxy(IWiaLogEx *This,BYTE *hInstance);", "IWiaLogEx_hResult_Proxy": "HRESULT WINAPI IWiaLogEx_hResult_Proxy(IWiaLogEx *This,HRESULT hResult);", "IWiaLogEx_Log_Proxy": "HRESULT WINAPI IWiaLogEx_Log_Proxy(IWiaLogEx *This,LONG lFlags,LONG lResID,LONG lDetail,BSTR bstrText);", "IWiaLogEx_hResultEx_Proxy": "HRESULT WINAPI IWiaLogEx_hResultEx_Proxy(IWiaLogEx *This,LONG lMethodId,HRESULT hResult);", "IWiaLogEx_LogEx_Proxy": "HRESULT WINAPI IWiaLogEx_LogEx_Proxy(IWiaLogEx *This,LONG lMethodId,LONG lFlags,LONG lResID,LONG lDetail,BSTR bstrText);", "IWiaNotifyDevMgr_NewDeviceArrival_Proxy": "HRESULT WINAPI IWiaNotifyDevMgr_NewDeviceArrival_Proxy(IWiaNotifyDevMgr *This);", "IWiaItemExtras_GetExtendedErrorInfo_Proxy": "HRESULT WINAPI IWiaItemExtras_GetExtendedErrorInfo_Proxy(IWiaItemExtras *This,BSTR *bstrErrorText);", "IWiaItemExtras_Escape_Proxy": "HRESULT WINAPI IWiaItemExtras_Escape_Proxy(IWiaItemExtras *This,DWORD dwEscapeCode,BYTE *lpInData,DWORD cbInDataSize,BYTE *pOutData,DWORD dwOutDataSize,DWORD *pdwActualDataSize);", "IWiaItemExtras_CancelPendingIO_Proxy": "HRESULT WINAPI IWiaItemExtras_CancelPendingIO_Proxy(IWiaItemExtras *This);", "IWiaDevMgr_CreateDevice_Proxy": "HRESULT WINAPI IWiaDevMgr_CreateDevice_Proxy(IWiaDevMgr *This,BSTR bstrDeviceID,IWiaItem **ppWiaItemRoot);", "IWiaDevMgr_CreateDevice_Stub": "HRESULT WINAPI IWiaDevMgr_CreateDevice_Stub(IWiaDevMgr *This,BSTR bstrDeviceID,IWiaItem **ppWiaItemRoot);", "IWiaDevMgr_SelectDeviceDlg_Proxy": "HRESULT WINAPI IWiaDevMgr_SelectDeviceDlg_Proxy(IWiaDevMgr *This,HWND hwndParent,LONG lDeviceType,LONG lFlags,BSTR *pbstrDeviceID,IWiaItem **ppItemRoot);", "IWiaDevMgr_SelectDeviceDlg_Stub": "HRESULT WINAPI IWiaDevMgr_SelectDeviceDlg_Stub(IWiaDevMgr *This,HWND hwndParent,LONG lDeviceType,LONG lFlags,BSTR *pbstrDeviceID,IWiaItem **ppItemRoot);", "IWiaDevMgr_SelectDeviceDlgID_Proxy": "HRESULT WINAPI IWiaDevMgr_SelectDeviceDlgID_Proxy(IWiaDevMgr *This,HWND hwndParent,LONG lDeviceType,LONG lFlags,BSTR *pbstrDeviceID);", "IWiaDevMgr_SelectDeviceDlgID_Stub": "HRESULT WINAPI IWiaDevMgr_SelectDeviceDlgID_Stub(IWiaDevMgr *This,HWND hwndParent,LONG lDeviceType,LONG lFlags,BSTR *pbstrDeviceID);", "IWiaDevMgr_GetImageDlg_Proxy": "HRESULT WINAPI IWiaDevMgr_GetImageDlg_Proxy(IWiaDevMgr *This,HWND hwndParent,LONG lDeviceType,LONG lFlags,LONG lIntent,IWiaItem *pItemRoot,BSTR bstrFilename,GUID *pguidFormat);", "IWiaDevMgr_GetImageDlg_Stub": "HRESULT WINAPI IWiaDevMgr_GetImageDlg_Stub(IWiaDevMgr *This,HWND hwndParent,LONG lDeviceType,LONG lFlags,LONG lIntent,IWiaItem *pItemRoot,BSTR bstrFilename,GUID *pguidFormat);", "IWiaDevMgr_RegisterEventCallbackProgram_Proxy": "HRESULT WINAPI IWiaDevMgr_RegisterEventCallbackProgram_Proxy(IWiaDevMgr *This,LONG lFlags,BSTR bstrDeviceID,const GUID *pEventGUID,BSTR bstrCommandline,BSTR bstrName,BSTR bstrDescription,BSTR bstrIcon);", "IWiaDevMgr_RegisterEventCallbackProgram_Stub": "HRESULT WINAPI IWiaDevMgr_RegisterEventCallbackProgram_Stub(IWiaDevMgr *This,LONG lFlags,BSTR bstrDeviceID,const GUID *pEventGUID,BSTR bstrCommandline,BSTR bstrName,BSTR bstrDescription,BSTR bstrIcon);", "IWiaDevMgr_RegisterEventCallbackInterface_Proxy": "HRESULT WINAPI IWiaDevMgr_RegisterEventCallbackInterface_Proxy(IWiaDevMgr *This,LONG lFlags,BSTR bstrDeviceID,const GUID *pEventGUID,IWiaEventCallback *pIWiaEventCallback,IUnknown **pEventObject);", "IWiaDevMgr_RegisterEventCallbackInterface_Stub": "HRESULT WINAPI IWiaDevMgr_RegisterEventCallbackInterface_Stub(IWiaDevMgr *This,LONG lFlags,BSTR bstrDeviceID,const GUID *pEventGUID,IWiaEventCallback *pIWiaEventCallback,IUnknown **pEventObject);", "IWiaDevMgr_RegisterEventCallbackCLSID_Proxy": "HRESULT WINAPI IWiaDevMgr_RegisterEventCallbackCLSID_Proxy(IWiaDevMgr *This,LONG lFlags,BSTR bstrDeviceID,const GUID *pEventGUID,const GUID *pClsID,BSTR bstrName,BSTR bstrDescription,BSTR bstrIcon);", "IWiaDevMgr_RegisterEventCallbackCLSID_Stub": "HRESULT WINAPI IWiaDevMgr_RegisterEventCallbackCLSID_Stub(IWiaDevMgr *This,LONG lFlags,BSTR bstrDeviceID,const GUID *pEventGUID,const GUID *pClsID,BSTR bstrName,BSTR bstrDescription,BSTR bstrIcon);", "IEnumWIA_DEV_INFO_Next_Proxy": "HRESULT WINAPI IEnumWIA_DEV_INFO_Next_Proxy(IEnumWIA_DEV_INFO *This,ULONG celt,IWiaPropertyStorage **rgelt,ULONG *pceltFetched);", "IEnumWIA_DEV_INFO_Next_Stub": "HRESULT WINAPI IEnumWIA_DEV_INFO_Next_Stub(IEnumWIA_DEV_INFO *This,ULONG celt,IWiaPropertyStorage **rgelt,ULONG *pceltFetched);", "IWiaDataCallback_BandedDataCallback_Proxy": "HRESULT WINAPI IWiaDataCallback_BandedDataCallback_Proxy(IWiaDataCallback *This,LONG lMessage,LONG lStatus,LONG lPercentComplete,LONG lOffset,LONG lLength,LONG lReserved,LONG lResLength,BYTE *pbBuffer);", "IWiaDataCallback_BandedDataCallback_Stub": "HRESULT WINAPI IWiaDataCallback_BandedDataCallback_Stub(IWiaDataCallback *This,LONG lMessage,LONG lStatus,LONG lPercentComplete,LONG lOffset,LONG lLength,LONG lReserved,LONG lResLength,BYTE *pbBuffer);", "IWiaDataTransfer_idtGetData_Proxy": "HRESULT WINAPI IWiaDataTransfer_idtGetData_Proxy(IWiaDataTransfer *This,LPSTGMEDIUM pMedium,IWiaDataCallback *pIWiaDataCallback);", "IWiaDataTransfer_idtGetData_Stub": "HRESULT WINAPI IWiaDataTransfer_idtGetData_Stub(IWiaDataTransfer *This,LPSTGMEDIUM pMedium,IWiaDataCallback *pIWiaDataCallback);", "IWiaDataTransfer_idtGetBandedData_Proxy": "HRESULT WINAPI IWiaDataTransfer_idtGetBandedData_Proxy(IWiaDataTransfer *This,PWIA_DATA_TRANSFER_INFO pWiaDataTransInfo,IWiaDataCallback *pIWiaDataCallback);", "IWiaDataTransfer_idtGetBandedData_Stub": "HRESULT WINAPI IWiaDataTransfer_idtGetBandedData_Stub(IWiaDataTransfer *This,PWIA_DATA_TRANSFER_INFO pWiaDataTransInfo,IWiaDataCallback *pIWiaDataCallback);", "IWiaItem_DeviceDlg_Proxy": "HRESULT WINAPI IWiaItem_DeviceDlg_Proxy(IWiaItem *This,HWND hwndParent,LONG lFlags,LONG lIntent,LONG *plItemCount,IWiaItem ***ppIWiaItem);", "IWiaItem_DeviceDlg_Stub": "HRESULT WINAPI IWiaItem_DeviceDlg_Stub(IWiaItem *This,HWND hwndParent,LONG lFlags,LONG lIntent,LONG *plItemCount,IWiaItem ***pIWiaItem);", "IWiaPropertyStorage_WriteMultiple_Proxy": "HRESULT WINAPI IWiaPropertyStorage_WriteMultiple_Proxy(IWiaPropertyStorage *This,ULONG cpspec,const PROPSPEC rgpspec[],const PROPVARIANT rgpropvar[],PROPID propidNameFirst);", "IWiaPropertyStorage_WriteMultiple_Stub": "HRESULT WINAPI IWiaPropertyStorage_WriteMultiple_Stub(IWiaPropertyStorage *This,ULONG cpspec,const PROPSPEC *rgpspec,const PROPVARIANT *rgpropvar,PROPID propidNameFirst);", "IWiaPropertyStorage_SetPropertyStream_Proxy": "HRESULT WINAPI IWiaPropertyStorage_SetPropertyStream_Proxy(IWiaPropertyStorage *This,GUID *pCompatibilityId,IStream *pIStream);", "IWiaPropertyStorage_SetPropertyStream_Stub": "HRESULT WINAPI IWiaPropertyStorage_SetPropertyStream_Stub(IWiaPropertyStorage *This,GUID *pCompatibilityId,IStream *pIStream);", "IEnumWiaItem_Next_Proxy": "HRESULT WINAPI IEnumWiaItem_Next_Proxy(IEnumWiaItem *This,ULONG celt,IWiaItem **ppIWiaItem,ULONG *pceltFetched);", "IEnumWiaItem_Next_Stub": "HRESULT WINAPI IEnumWiaItem_Next_Stub(IEnumWiaItem *This,ULONG celt,IWiaItem **ppIWiaItem,ULONG *pceltFetched);", "IEnumWIA_DEV_CAPS_Next_Proxy": "HRESULT WINAPI IEnumWIA_DEV_CAPS_Next_Proxy(IEnumWIA_DEV_CAPS *This,ULONG celt,WIA_DEV_CAP *rgelt,ULONG *pceltFetched);", "IEnumWIA_DEV_CAPS_Next_Stub": "HRESULT WINAPI IEnumWIA_DEV_CAPS_Next_Stub(IEnumWIA_DEV_CAPS *This,ULONG celt,WIA_DEV_CAP *rgelt,ULONG *pceltFetched);", "IEnumWIA_FORMAT_INFO_Next_Proxy": "HRESULT WINAPI IEnumWIA_FORMAT_INFO_Next_Proxy(IEnumWIA_FORMAT_INFO *This,ULONG celt,WIA_FORMAT_INFO *rgelt,ULONG *pceltFetched);", "IEnumWIA_FORMAT_INFO_Next_Stub": "HRESULT WINAPI IEnumWIA_FORMAT_INFO_Next_Stub(IEnumWIA_FORMAT_INFO *This,ULONG celt,WIA_FORMAT_INFO *rgelt,ULONG *pceltFetched);", "D3D10CreateDevice": "HRESULT WINAPI D3D10CreateDevice(IDXGIAdapter *adapter, D3D10_DRIVER_TYPE driver_type,", "D3D10CreateDeviceAndSwapChain": "HRESULT WINAPI D3D10CreateDeviceAndSwapChain(IDXGIAdapter *adapter, D3D10_DRIVER_TYPE driver_type,", "D3D10CreateBlob": "HRESULT WINAPI D3D10CreateBlob(SIZE_T data_size, ID3D10Blob **blob);", "HcsEnumerateComputeSystems": "HRESULT WINAPI HcsEnumerateComputeSystems (PCWSTR query, HCS_OPERATION operation);", "HcsEnumerateComputeSystemsInNamespace": "HRESULT WINAPI HcsEnumerateComputeSystemsInNamespace (PCWSTR idNamespace, PCWSTR query, HCS_OPERATION operation);", "HcsCreateOperation": "HCS_OPERATION WINAPI HcsCreateOperation (const void *context, HCS_OPERATION_COMPLETION callback);", "HcsCreateOperationWithNotifications": "HCS_OPERATION WINAPI HcsCreateOperationWithNotifications (HCS_OPERATION_OPTIONS eventTypes, const void *context, HCS_EVENT_CALLBACK callback);", "HcsCloseOperation": "void WINAPI HcsCloseOperation (HCS_OPERATION operation);", "HcsGetOperationContext": "void* WINAPI HcsGetOperationContext (HCS_OPERATION operation);", "HcsSetOperationContext": "HRESULT WINAPI HcsSetOperationContext (HCS_OPERATION operation, const void *context);", "HcsGetComputeSystemFromOperation": "HCS_SYSTEM WINAPI HcsGetComputeSystemFromOperation (HCS_OPERATION operation);", "HcsGetProcessFromOperation": "HCS_PROCESS WINAPI HcsGetProcessFromOperation (HCS_OPERATION operation);", "HcsGetOperationType": "HCS_OPERATION_TYPE WINAPI HcsGetOperationType (HCS_OPERATION operation);", "HcsGetOperationId": "UINT64 WINAPI HcsGetOperationId (HCS_OPERATION operation);", "HcsGetOperationResult": "HRESULT WINAPI HcsGetOperationResult (HCS_OPERATION operation, PWSTR *resultDocument);", "HcsGetOperationResultAndProcessInfo": "HRESULT WINAPI HcsGetOperationResultAndProcessInfo (HCS_OPERATION operation, HCS_PROCESS_INFORMATION *processInformation, PWSTR *resultDocument);", "HcsAddResourceToOperation": "HRESULT WINAPI HcsAddResourceToOperation (HCS_OPERATION operation, HCS_RESOURCE_TYPE type, PCWSTR uri, HANDLE handle);", "HcsGetProcessorCompatibilityFromSavedState": "HRESULT WINAPI HcsGetProcessorCompatibilityFromSavedState (PCWSTR RuntimeFileName, PCWSTR *ProcessorFeaturesString);", "HcsWaitForOperationResult": "HRESULT WINAPI HcsWaitForOperationResult (HCS_OPERATION operation, DWORD timeoutMs, PWSTR *resultDocument);", "HcsWaitForOperationResultAndProcessInfo": "HRESULT WINAPI HcsWaitForOperationResultAndProcessInfo (HCS_OPERATION operation, DWORD timeoutMs, HCS_PROCESS_INFORMATION *processInformation, PWSTR *resultDocument);", "HcsSetOperationCallback": "HRESULT WINAPI HcsSetOperationCallback (HCS_OPERATION operation, const void *context, HCS_OPERATION_COMPLETION callback);", "HcsCancelOperation": "HRESULT WINAPI HcsCancelOperation (HCS_OPERATION operation);", "HcsCreateComputeSystem": "HRESULT WINAPI HcsCreateComputeSystem (PCWSTR id, PCWSTR configuration, HCS_OPERATION operation, const SECURITY_DESCRIPTOR *securityDescriptor, HCS_SYSTEM *computeSystem);", "HcsCreateComputeSystemInNamespace": "HRESULT WINAPI HcsCreateComputeSystemInNamespace (PCWSTR idNamespace, PCWSTR id, PCWSTR configuration, HCS_OPERATION operation, const HCS_CREATE_OPTIONS *options, HCS_SYSTEM *computeSystem);", "HcsOpenComputeSystem": "HRESULT WINAPI HcsOpenComputeSystem (PCWSTR id, DWORD requestedAccess, HCS_SYSTEM *computeSystem);", "HcsOpenComputeSystemInNamespace": "HRESULT WINAPI HcsOpenComputeSystemInNamespace (PCWSTR idNamespace, PCWSTR id, DWORD requestedAccess, HCS_SYSTEM *computeSystem);", "HcsCloseComputeSystem": "void WINAPI HcsCloseComputeSystem (HCS_SYSTEM computeSystem);", "HcsStartComputeSystem": "HRESULT WINAPI HcsStartComputeSystem (HCS_SYSTEM computeSystem, HCS_OPERATION operation, PCWSTR options);", "HcsShutDownComputeSystem": "HRESULT WINAPI HcsShutDownComputeSystem (HCS_SYSTEM computeSystem, HCS_OPERATION operation, PCWSTR options);", "HcsTerminateComputeSystem": "HRESULT WINAPI HcsTerminateComputeSystem (HCS_SYSTEM computeSystem, HCS_OPERATION operation, PCWSTR options);", "HcsCrashComputeSystem": "HRESULT WINAPI HcsCrashComputeSystem (HCS_SYSTEM computeSystem, HCS_OPERATION operation, PCWSTR options);", "HcsPauseComputeSystem": "HRESULT WINAPI HcsPauseComputeSystem (HCS_SYSTEM computeSystem, HCS_OPERATION operation, PCWSTR options);", "HcsResumeComputeSystem": "HRESULT WINAPI HcsResumeComputeSystem (HCS_SYSTEM computeSystem, HCS_OPERATION operation, PCWSTR options);", "HcsSaveComputeSystem": "HRESULT WINAPI HcsSaveComputeSystem (HCS_SYSTEM computeSystem, HCS_OPERATION operation, PCWSTR options);", "HcsGetComputeSystemProperties": "HRESULT WINAPI HcsGetComputeSystemProperties (HCS_SYSTEM computeSystem, HCS_OPERATION operation, PCWSTR propertyQuery);", "HcsModifyComputeSystem": "HRESULT WINAPI HcsModifyComputeSystem (HCS_SYSTEM computeSystem, HCS_OPERATION operation, PCWSTR configuration, HANDLE identity);", "HcsWaitForComputeSystemExit": "HRESULT WINAPI HcsWaitForComputeSystemExit (HCS_SYSTEM computeSystem, DWORD timeoutMs, PWSTR *result);", "HcsSetComputeSystemCallback": "HRESULT WINAPI HcsSetComputeSystemCallback (HCS_SYSTEM computeSystem, HCS_EVENT_OPTIONS callbackOptions, const void *context, HCS_EVENT_CALLBACK callback);", "HcsCreateProcess": "HRESULT WINAPI HcsCreateProcess (HCS_SYSTEM computeSystem, PCWSTR processParameters, HCS_OPERATION operation, const SECURITY_DESCRIPTOR *securityDescriptor, HCS_PROCESS *process);", "HcsOpenProcess": "HRESULT WINAPI HcsOpenProcess (HCS_SYSTEM computeSystem, DWORD processId, DWORD requestedAccess, HCS_PROCESS *process);", "HcsCloseProcess": "void WINAPI HcsCloseProcess (HCS_PROCESS process);", "HcsTerminateProcess": "HRESULT WINAPI HcsTerminateProcess (HCS_PROCESS process, HCS_OPERATION operation, PCWSTR options);", "HcsSignalProcess": "HRESULT WINAPI HcsSignalProcess (HCS_PROCESS process, HCS_OPERATION operation, PCWSTR options);", "HcsGetProcessInfo": "HRESULT WINAPI HcsGetProcessInfo (HCS_PROCESS process, HCS_OPERATION operation);", "HcsGetProcessProperties": "HRESULT WINAPI HcsGetProcessProperties (HCS_PROCESS process, HCS_OPERATION operation, PCWSTR propertyQuery);", "HcsModifyProcess": "HRESULT WINAPI HcsModifyProcess (HCS_PROCESS process, HCS_OPERATION operation, PCWSTR settings);", "HcsSetProcessCallback": "HRESULT WINAPI HcsSetProcessCallback (HCS_PROCESS process, HCS_EVENT_OPTIONS callbackOptions, void *context, HCS_EVENT_CALLBACK callback);", "HcsWaitForProcessExit": "HRESULT WINAPI HcsWaitForProcessExit (HCS_PROCESS computeSystem, DWORD timeoutMs, PWSTR *result);", "HcsGetServiceProperties": "HRESULT WINAPI HcsGetServiceProperties (PCWSTR propertyQuery, PWSTR *result);", "HcsModifyServiceSettings": "HRESULT WINAPI HcsModifyServiceSettings (PCWSTR settings, PWSTR *result);", "HcsSubmitWerReport": "HRESULT WINAPI HcsSubmitWerReport (PCWSTR settings);", "HcsCreateEmptyGuestStateFile": "HRESULT WINAPI HcsCreateEmptyGuestStateFile (PCWSTR guestStateFilePath);", "HcsCreateEmptyRuntimeStateFile": "HRESULT WINAPI HcsCreateEmptyRuntimeStateFile (PCWSTR runtimeStateFilePath);", "HcsGrantVmAccess": "HRESULT WINAPI HcsGrantVmAccess (PCWSTR vmId, PCWSTR filePath);", "HcsRevokeVmAccess": "HRESULT WINAPI HcsRevokeVmAccess (PCWSTR vmId, PCWSTR filePath);", "HcsGrantVmGroupAccess": "HRESULT WINAPI HcsGrantVmGroupAccess (PCWSTR filePath);", "HcsRevokeVmGroupAccess": "HRESULT WINAPI HcsRevokeVmGroupAccess (PCWSTR filePath);", "NPAddConnection": "DWORD WINAPI NPAddConnection(LPNETRESOURCEW lpNetResource,LPWSTR lpPassword,LPWSTR lpUserName);", "NPAddConnection3": "DWORD WINAPI NPAddConnection3(HWND hwndOwner,LPNETRESOURCEW lpNetResource,LPTSTR lpPassword,LPTSTR lpUserName,DWORD dwFlags);", "NPCancelConnection": "DWORD WINAPI NPCancelConnection(LPWSTR lpName,WINBOOL fForce);", "NPGetConnection": "DWORD WINAPI NPGetConnection(LPWSTR lpLocalName,LPWSTR lpRemoteName,LPDWORD lpnBufferLen);", "NPGetConnection3": "DWORD WINAPI NPGetConnection3(LPCWSTR lpLocalName,DWORD dwLevel,LPVOID lpBuffer,LPDWORD lpBufferSize);", "NPGetConnectionPerformance": "DWORD WINAPI NPGetConnectionPerformance(LPCWSTR lpRemoteName,LPNETCONNECTINFOSTRUCT lpNetConnectInfo);", "NPGetUniversalName": "DWORD WINAPI NPGetUniversalName(LPWSTR lpLocalPath,DWORD dwInfoLevel,LPVOID lpBuffer,LPDWORD lpBufferSize);", "NPOpenEnum": "DWORD WINAPI NPOpenEnum(DWORD dwScope,DWORD dwType,DWORD dwUsage,LPNETRESOURCEW lpNetResource,LPHANDLE lphEnum);", "NPEnumResource": "DWORD WINAPI NPEnumResource(HANDLE hEnum,LPDWORD lpcCount,LPVOID lpBuffer,LPDWORD lpBufferSize);", "NPCloseEnum": "DWORD WINAPI NPCloseEnum(HANDLE hEnum);", "NPGetCaps": "DWORD WINAPI NPGetCaps (DWORD ndex);", "NPGetUser": "DWORD WINAPI NPGetUser(LPWSTR lpName,LPWSTR lpUserName,LPDWORD lpnBufferLen);", "NPDeviceMode": "DWORD WINAPI NPDeviceMode(HWND hParent);", "NPSearchDialog": "DWORD WINAPI NPSearchDialog(HWND hwndParent,LPNETRESOURCEW lpNetResource,LPVOID lpBuffer,DWORD cbBuffer,LPDWORD lpnFlags);", "NPGetResourceParent": "DWORD WINAPI NPGetResourceParent(LPNETRESOURCEW lpNetResource,LPVOID lpBuffer,LPDWORD lpBufferSize);", "NPGetResourceInformation": "DWORD WINAPI NPGetResourceInformation(LPNETRESOURCEW lpNetResource,LPVOID lpBuffer,LPDWORD lpBufferSize,LPWSTR *lplpSystem);", "NPFormatNetworkName": "DWORD WINAPI NPFormatNetworkName(LPWSTR lpRemoteName,LPWSTR lpFormattedName,LPDWORD lpnLength,DWORD dwFlags,DWORD dwAveCharPerLine);", "NPGetPropertyText": "DWORD WINAPI NPGetPropertyText(DWORD iButton,DWORD nPropSel,LPWSTR lpName,LPWSTR lpButtonName,DWORD nButtonNameLen,DWORD nType);", "NPPropertyDialog": "DWORD WINAPI NPPropertyDialog(HWND hwndParent,DWORD iButtonDlg,DWORD nPropSel,LPWSTR lpFileName,DWORD nType);", "NPGetDirectoryType": "DWORD WINAPI NPGetDirectoryType(LPWSTR lpName,LPINT lpType,WINBOOL bFlushCache);", "NPDirectoryNotify": "DWORD WINAPI NPDirectoryNotify(HWND hwnd,LPWSTR lpDir,DWORD dwOper);", "NPLogonNotify": "DWORD WINAPI NPLogonNotify (PLUID lpLogonId,LPCWSTR lpAuthentInfoType,LPVOID lpAuthentInfo,LPCWSTR lpPreviousAuthentInfoType,LPVOID lpPreviousAuthentInfo,LPWSTR lpStationName,LPVOID StationHandle,LPWSTR *lpLogonScript);", "NPPasswordChangeNotify": "DWORD WINAPI NPPasswordChangeNotify (LPCWSTR lpAuthentInfoType,LPVOID lpAuthentInfo,LPCWSTR lpPreviousAuthentInfoType,LPVOID lpPreviousAuthentInfo,LPWSTR lpStationName,LPVOID StationHandle,DWORD dwChangeInfo);", "AddConnectNotify": "DWORD WINAPI AddConnectNotify (LPNOTIFYINFO lpNotifyInfo,LPNOTIFYADD lpAddInfo);", "CancelConnectNotify": "DWORD WINAPI CancelConnectNotify (LPNOTIFYINFO lpNotifyInfo,LPNOTIFYCANCEL lpCancelInfo);", "NPFMXGetPermCaps": "DWORD WINAPI NPFMXGetPermCaps(LPWSTR lpDriveName);", "NPFMXEditPerm": "DWORD WINAPI NPFMXEditPerm(LPWSTR lpDriveName,HWND hwndFMX,DWORD nDialogType);", "NPFMXGetPermHelp": "DWORD WINAPI NPFMXGetPermHelp(LPWSTR lpDriveName,DWORD nDialogType,WINBOOL fDirectory,LPVOID lpFileNameBuffer,LPDWORD lpBufferSize,LPDWORD lpnHelpContext);", "MSChapSrvChangePassword": "extern WINADVAPI DWORD WINAPI MSChapSrvChangePassword(LPWSTR ServerName,LPWSTR UserName,BOOLEAN LmOldPresent,PLM_OWF_PASSWORD LmOldOwfPassword,PLM_OWF_PASSWORD LmNewOwfPassword,PNT_OWF_PASSWORD NtOldOwfPassword,PNT_OWF_PASSWORD NtNewOwfPassword);", "MSChapSrvChangePassword2": "extern WINADVAPI DWORD WINAPI MSChapSrvChangePassword2(LPWSTR ServerName,LPWSTR UserName,PSAMPR_ENCRYPTED_USER_PASSWORD NewPasswordEncryptedWithOldNt,PENCRYPTED_NT_OWF_PASSWORD OldNtOwfPasswordEncryptedWithNewNt,BOOLEAN LmPresent,PSAMPR_ENCRYPTED_USER_PASSWORD NewPasswordEncryptedWithOldLm,PENCRYPTED_LM_OWF_PASSWORD OldLmOwfPasswordEncryptedWithNewLmOrNt);", "NetConfigGet": "NET_API_STATUS WINAPI NetConfigGet(LPCWSTR server,LPCWSTR component,LPCWSTR parameter,LPBYTE *bufptr);", "NetConfigGetAll": "NET_API_STATUS WINAPI NetConfigGetAll(LPCWSTR server,LPCWSTR component,LPBYTE *bufptr);", "NetConfigSet": "NET_API_STATUS WINAPI NetConfigSet(LPCWSTR server,LPCWSTR reserved1,LPCWSTR component,DWORD level,DWORD reserved2,LPBYTE buf,DWORD reserved3);", "NetRegisterDomainNameChangeNotification": "NET_API_STATUS WINAPI NetRegisterDomainNameChangeNotification(PHANDLE NotificationEventHandle);", "NetUnregisterDomainNameChangeNotification": "NET_API_STATUS WINAPI NetUnregisterDomainNameChangeNotification(HANDLE NotificationEventHandle);", "WNetAddConnectionA": "DWORD WINAPI WNetAddConnectionA(LPCSTR lpRemoteName,LPCSTR lpPassword,LPCSTR lpLocalName);", "WNetAddConnectionW": "DWORD WINAPI WNetAddConnectionW(LPCWSTR lpRemoteName,LPCWSTR lpPassword,LPCWSTR lpLocalName);", "WNetAddConnection2A": "DWORD WINAPI WNetAddConnection2A(LPNETRESOURCEA lpNetResource,LPCSTR lpPassword,LPCSTR lpUserName,DWORD dwFlags);", "WNetAddConnection2W": "DWORD WINAPI WNetAddConnection2W(LPNETRESOURCEW lpNetResource,LPCWSTR lpPassword,LPCWSTR lpUserName,DWORD dwFlags);", "WNetAddConnection3A": "DWORD WINAPI WNetAddConnection3A(HWND hwndOwner,LPNETRESOURCEA lpNetResource,LPCSTR lpPassword,LPCSTR lpUserName,DWORD dwFlags);", "WNetAddConnection3W": "DWORD WINAPI WNetAddConnection3W(HWND hwndOwner,LPNETRESOURCEW lpNetResource,LPCWSTR lpPassword,LPCWSTR lpUserName,DWORD dwFlags);", "WNetCancelConnectionA": "DWORD WINAPI WNetCancelConnectionA(LPCSTR lpName,WINBOOL fForce);", "WNetCancelConnectionW": "DWORD WINAPI WNetCancelConnectionW(LPCWSTR lpName,WINBOOL fForce);", "WNetCancelConnection2A": "DWORD WINAPI WNetCancelConnection2A(LPCSTR lpName,DWORD dwFlags,WINBOOL fForce);", "WNetCancelConnection2W": "DWORD WINAPI WNetCancelConnection2W(LPCWSTR lpName,DWORD dwFlags,WINBOOL fForce);", "WNetGetConnectionA": "DWORD WINAPI WNetGetConnectionA(LPCSTR lpLocalName,LPSTR lpRemoteName,LPDWORD lpnLength);", "WNetGetConnectionW": "DWORD WINAPI WNetGetConnectionW(LPCWSTR lpLocalName,LPWSTR lpRemoteName,LPDWORD lpnLength);", "WNetRestoreConnectionA": "DWORD WINAPI WNetRestoreConnectionA(HWND hwndParent,LPCSTR lpDevice);", "WNetUseConnectionA": "DWORD WINAPI WNetUseConnectionA(HWND hwndOwner,LPNETRESOURCEA lpNetResource,LPCSTR lpPassword,LPCSTR lpUserID,DWORD dwFlags,LPSTR lpAccessName,LPDWORD lpBufferSize,LPDWORD lpResult);", "WNetUseConnectionW": "DWORD WINAPI WNetUseConnectionW(HWND hwndOwner,LPNETRESOURCEW lpNetResource,LPCWSTR lpPassword,LPCWSTR lpUserID,DWORD dwFlags,LPWSTR lpAccessName,LPDWORD lpBufferSize,LPDWORD lpResult);", "WNetConnectionDialog": "DWORD WINAPI WNetConnectionDialog(HWND hwnd,DWORD dwType);", "WNetDisconnectDialog": "DWORD WINAPI WNetDisconnectDialog(HWND hwnd,DWORD dwType);", "WNetRestoreSingleConnectionW": "DWORD WINAPI WNetRestoreSingleConnectionW(HWND hwndParent, LPCWSTR lpDevice, WINBOOL fUseUI);", "WNetRestoreConnectionW": "DWORD WINAPI WNetRestoreConnectionW(HWND hwndParent,LPCWSTR lpDevice);", "WNetConnectionDialog1A": "DWORD WINAPI WNetConnectionDialog1A(LPCONNECTDLGSTRUCTA lpConnDlgStruct);", "WNetConnectionDialog1W": "DWORD WINAPI WNetConnectionDialog1W(LPCONNECTDLGSTRUCTW lpConnDlgStruct);", "WNetDisconnectDialog1A": "DWORD WINAPI WNetDisconnectDialog1A(LPDISCDLGSTRUCTA lpConnDlgStruct);", "WNetDisconnectDialog1W": "DWORD WINAPI WNetDisconnectDialog1W(LPDISCDLGSTRUCTW lpConnDlgStruct);", "WNetOpenEnumA": "DWORD WINAPI WNetOpenEnumA(DWORD dwScope,DWORD dwType,DWORD dwUsage,LPNETRESOURCEA lpNetResource,LPHANDLE lphEnum);", "WNetOpenEnumW": "DWORD WINAPI WNetOpenEnumW(DWORD dwScope,DWORD dwType,DWORD dwUsage,LPNETRESOURCEW lpNetResource,LPHANDLE lphEnum);", "WNetEnumResourceA": "DWORD WINAPI WNetEnumResourceA(HANDLE hEnum,LPDWORD lpcCount,LPVOID lpBuffer,LPDWORD lpBufferSize);", "WNetEnumResourceW": "DWORD WINAPI WNetEnumResourceW(HANDLE hEnum,LPDWORD lpcCount,LPVOID lpBuffer,LPDWORD lpBufferSize);", "WNetCloseEnum": "DWORD WINAPI WNetCloseEnum(HANDLE hEnum);", "WNetGetResourceParentA": "DWORD WINAPI WNetGetResourceParentA(LPNETRESOURCEA lpNetResource,LPVOID lpBuffer,LPDWORD lpcbBuffer);", "WNetGetResourceParentW": "DWORD WINAPI WNetGetResourceParentW(LPNETRESOURCEW lpNetResource,LPVOID lpBuffer,LPDWORD lpcbBuffer);", "WNetGetResourceInformationA": "DWORD WINAPI WNetGetResourceInformationA(LPNETRESOURCEA lpNetResource,LPVOID lpBuffer,LPDWORD lpcbBuffer,LPSTR *lplpSystem);", "WNetGetResourceInformationW": "DWORD WINAPI WNetGetResourceInformationW(LPNETRESOURCEW lpNetResource,LPVOID lpBuffer,LPDWORD lpcbBuffer,LPWSTR *lplpSystem);", "WNetGetUniversalNameA": "DWORD WINAPI WNetGetUniversalNameA(LPCSTR lpLocalPath,DWORD dwInfoLevel,LPVOID lpBuffer,LPDWORD lpBufferSize);", "WNetGetUniversalNameW": "DWORD WINAPI WNetGetUniversalNameW(LPCWSTR lpLocalPath,DWORD dwInfoLevel,LPVOID lpBuffer,LPDWORD lpBufferSize);", "WNetGetUserA": "DWORD WINAPI WNetGetUserA(LPCSTR lpName,LPSTR lpUserName,LPDWORD lpnLength);", "WNetGetUserW": "DWORD WINAPI WNetGetUserW(LPCWSTR lpName,LPWSTR lpUserName,LPDWORD lpnLength);", "WNetGetProviderNameA": "DWORD WINAPI WNetGetProviderNameA(DWORD dwNetType,LPSTR lpProviderName,LPDWORD lpBufferSize);", "WNetGetProviderNameW": "DWORD WINAPI WNetGetProviderNameW(DWORD dwNetType,LPWSTR lpProviderName,LPDWORD lpBufferSize);", "WNetGetNetworkInformationA": "DWORD WINAPI WNetGetNetworkInformationA(LPCSTR lpProvider,LPNETINFOSTRUCT lpNetInfoStruct);", "WNetGetNetworkInformationW": "DWORD WINAPI WNetGetNetworkInformationW(LPCWSTR lpProvider,LPNETINFOSTRUCT lpNetInfoStruct);", "WNetGetLastErrorA": "DWORD WINAPI WNetGetLastErrorA(LPDWORD lpError,LPSTR lpErrorBuf,DWORD nErrorBufSize,LPSTR lpNameBuf,DWORD nNameBufSize);", "WNetGetLastErrorW": "DWORD WINAPI WNetGetLastErrorW(LPDWORD lpError,LPWSTR lpErrorBuf,DWORD nErrorBufSize,LPWSTR lpNameBuf,DWORD nNameBufSize);", "MultinetGetConnectionPerformanceA": "DWORD WINAPI MultinetGetConnectionPerformanceA(LPNETRESOURCEA lpNetResource,LPNETCONNECTINFOSTRUCT lpNetConnectInfoStruct);", "MultinetGetConnectionPerformanceW": "DWORD WINAPI MultinetGetConnectionPerformanceW(LPNETRESOURCEW lpNetResource,LPNETCONNECTINFOSTRUCT lpNetConnectInfoStruct);", "CreatePrivateNamespaceW": "WINBASEAPI HANDLE WINAPI CreatePrivateNamespaceW (LPSECURITY_ATTRIBUTES lpPrivateNamespaceAttributes, LPVOID lpBoundaryDescriptor, LPCWSTR lpAliasPrefix);", "OpenPrivateNamespaceW": "WINBASEAPI HANDLE WINAPI OpenPrivateNamespaceW (LPVOID lpBoundaryDescriptor, LPCWSTR lpAliasPrefix);", "ClosePrivateNamespace": "WINBASEAPI BOOLEAN WINAPI ClosePrivateNamespace (HANDLE Handle, ULONG Flags);", "CreateBoundaryDescriptorW": "WINBASEAPI HANDLE WINAPI CreateBoundaryDescriptorW (LPCWSTR Name, ULONG Flags);", "AddSIDToBoundaryDescriptor": "WINBASEAPI WINBOOL WINAPI AddSIDToBoundaryDescriptor (HANDLE *BoundaryDescriptor, PSID RequiredSid);", "DeleteBoundaryDescriptor": "WINBASEAPI VOID WINAPI DeleteBoundaryDescriptor (HANDLE BoundaryDescriptor);", "EnumProcesses": "WINBOOL WINAPI EnumProcesses(DWORD *lpidProcess,DWORD cb,DWORD *cbNeeded);", "EnumProcessModules": "WINBOOL WINAPI EnumProcessModules(HANDLE hProcess,HMODULE *lphModule,DWORD cb,LPDWORD lpcbNeeded);", "GetModuleBaseNameA": "DWORD WINAPI GetModuleBaseNameA(HANDLE hProcess,HMODULE hModule,LPSTR lpBaseName,DWORD nSize);", "GetModuleBaseNameW": "DWORD WINAPI GetModuleBaseNameW(HANDLE hProcess,HMODULE hModule,LPWSTR lpBaseName,DWORD nSize);", "GetModuleFileNameExA": "DWORD WINAPI GetModuleFileNameExA(HANDLE hProcess,HMODULE hModule,LPSTR lpFilename,DWORD nSize);", "GetModuleFileNameExW": "DWORD WINAPI GetModuleFileNameExW(HANDLE hProcess,HMODULE hModule,LPWSTR lpFilename,DWORD nSize);", "GetModuleInformation": "WINBOOL WINAPI GetModuleInformation(HANDLE hProcess,HMODULE hModule,LPMODULEINFO lpmodinfo,DWORD cb);", "EmptyWorkingSet": "WINBOOL WINAPI EmptyWorkingSet(HANDLE hProcess);", "QueryWorkingSet": "WINBOOL WINAPI QueryWorkingSet(HANDLE hProcess,PVOID pv,DWORD cb);", "QueryWorkingSetEx": "WINBOOL WINAPI QueryWorkingSetEx(HANDLE hProcess,PVOID pv,DWORD cb);", "InitializeProcessForWsWatch": "WINBOOL WINAPI InitializeProcessForWsWatch(HANDLE hProcess);", "GetWsChanges": "WINBOOL WINAPI GetWsChanges(HANDLE hProcess,PPSAPI_WS_WATCH_INFORMATION lpWatchInfo,DWORD cb);", "GetMappedFileNameW": "DWORD WINAPI GetMappedFileNameW(HANDLE hProcess,LPVOID lpv,LPWSTR lpFilename,DWORD nSize);", "GetMappedFileNameA": "DWORD WINAPI GetMappedFileNameA(HANDLE hProcess,LPVOID lpv,LPSTR lpFilename,DWORD nSize);", "EnumDeviceDrivers": "WINBOOL WINAPI EnumDeviceDrivers(LPVOID *lpImageBase,DWORD cb,LPDWORD lpcbNeeded);", "GetDeviceDriverBaseNameA": "DWORD WINAPI GetDeviceDriverBaseNameA(LPVOID ImageBase,LPSTR lpBaseName,DWORD nSize);", "GetDeviceDriverBaseNameW": "DWORD WINAPI GetDeviceDriverBaseNameW(LPVOID ImageBase,LPWSTR lpBaseName,DWORD nSize);", "GetDeviceDriverFileNameA": "DWORD WINAPI GetDeviceDriverFileNameA(LPVOID ImageBase,LPSTR lpFilename,DWORD nSize);", "GetDeviceDriverFileNameW": "DWORD WINAPI GetDeviceDriverFileNameW(LPVOID ImageBase,LPWSTR lpFilename,DWORD nSize);", "GetProcessMemoryInfo": "WINBOOL WINAPI GetProcessMemoryInfo(HANDLE Process,PPROCESS_MEMORY_COUNTERS ppsmemCounters,DWORD cb);", "GetPerformanceInfo": "WINBOOL WINAPI GetPerformanceInfo (PPERFORMACE_INFORMATION pPerformanceInformation,DWORD cb);", "EnumPageFilesW": "WINBOOL WINAPI EnumPageFilesW (PENUM_PAGE_FILE_CALLBACKW pCallBackRoutine,LPVOID pContext);", "EnumPageFilesA": "WINBOOL WINAPI EnumPageFilesA (PENUM_PAGE_FILE_CALLBACKA pCallBackRoutine,LPVOID pContext);", "GetProcessImageFileNameA": "DWORD WINAPI GetProcessImageFileNameA(HANDLE hProcess,LPSTR lpImageFileName,DWORD nSize);", "GetProcessImageFileNameW": "DWORD WINAPI GetProcessImageFileNameW(HANDLE hProcess,LPWSTR lpImageFileName,DWORD nSize);", "GetWsChangesEx": "WINBOOL WINAPI GetWsChangesEx(", "EnumProcessModulesEx": "WINBOOL WINAPI EnumProcessModulesEx(", "NetUseAdd": "NET_API_STATUS WINAPI NetUseAdd(LMSTR UncServerName,DWORD Level,LPBYTE Buf,LPDWORD ParmError);", "NetUseDel": "NET_API_STATUS WINAPI NetUseDel(LMSTR UncServerName,LMSTR UseName,DWORD ForceCond);", "NetUseEnum": "NET_API_STATUS WINAPI NetUseEnum(LMSTR UncServerName,DWORD Level,LPBYTE *BufPtr,DWORD PreferedMaximumSize,LPDWORD EntriesRead,LPDWORD TotalEntries,LPDWORD ResumeHandle);", "NetUseGetInfo": "NET_API_STATUS WINAPI NetUseGetInfo(LMSTR UncServerName,LMSTR UseName,DWORD Level,LPBYTE *BufPtr);", "WICConvertBitmapSource": "HRESULT WINAPI WICConvertBitmapSource(REFWICPixelFormatGUID dstFormat, IWICBitmapSource *pISrc, IWICBitmapSource **ppIDst);", "WICCreateBitmapFromSection": "HRESULT WINAPI WICCreateBitmapFromSection(UINT width, UINT height, REFWICPixelFormatGUID format, HANDLE section, UINT stride, UINT offset, IWICBitmap **bitmap);", "WICCreateBitmapFromSectionEx": "HRESULT WINAPI WICCreateBitmapFromSectionEx(UINT width, UINT height, REFWICPixelFormatGUID format, HANDLE section, UINT stride, UINT offset, WICSectionAccessLevel access, IWICBitmap **bitmap);", "WICMapGuidToShortName": "HRESULT WINAPI WICMapGuidToShortName(REFGUID,UINT,WCHAR *,UINT *);", "WICMapShortNameToGuid": "HRESULT WINAPI WICMapShortNameToGuid(PCWSTR,GUID *);", "WICMapSchemaToName": "HRESULT WINAPI WICMapSchemaToName(REFGUID,LPWSTR,UINT,WCHAR *,UINT *);", "DeviceDialog": "HRESULT WINAPI DeviceDialog(PDEVICEDIALOGDATA pDeviceDialogData);", "NetErrorLogClear": "NET_API_STATUS WINAPI NetErrorLogClear(LPCWSTR server,LPCWSTR backupfile,LPBYTE reserved);", "NetErrorLogRead": "NET_API_STATUS WINAPI NetErrorLogRead(LPCWSTR server,LPWSTR reserved1,LPHLOG errloghandle,DWORD offset,LPDWORD reserved2,DWORD reserved3,DWORD offsetflag,LPBYTE *bufptr,DWORD prefmaxlen,LPDWORD bytesread,LPDWORD totalbytes);", "NetErrorLogWrite": "NET_API_STATUS WINAPI NetErrorLogWrite(LPBYTE reserved1,DWORD code,LPCWSTR component,LPBYTE buffer,DWORD numbytes,LPBYTE msgbuf,DWORD strcount,LPBYTE reserved2);", "ITargetNotify_OnCreate_Proxy": "HRESULT WINAPI ITargetNotify_OnCreate_Proxy(ITargetNotify *This,IUnknown *pUnkDestination,ULONG cbCookie);", "ITargetNotify_OnReuse_Proxy": "HRESULT WINAPI ITargetNotify_OnReuse_Proxy(ITargetNotify *This,IUnknown *pUnkDestination);", "ITargetNotify2_GetOptionString_Proxy": "HRESULT WINAPI ITargetNotify2_GetOptionString_Proxy(ITargetNotify2 *This,BSTR *pbstrOptions);", "ITargetFrame2_SetFrameName_Proxy": "HRESULT WINAPI ITargetFrame2_SetFrameName_Proxy(ITargetFrame2 *This,LPCWSTR pszFrameName);", "ITargetFrame2_GetFrameName_Proxy": "HRESULT WINAPI ITargetFrame2_GetFrameName_Proxy(ITargetFrame2 *This,LPWSTR *ppszFrameName);", "ITargetFrame2_GetParentFrame_Proxy": "HRESULT WINAPI ITargetFrame2_GetParentFrame_Proxy(ITargetFrame2 *This,IUnknown **ppunkParent);", "ITargetFrame2_SetFrameSrc_Proxy": "HRESULT WINAPI ITargetFrame2_SetFrameSrc_Proxy(ITargetFrame2 *This,LPCWSTR pszFrameSrc);", "ITargetFrame2_GetFrameSrc_Proxy": "HRESULT WINAPI ITargetFrame2_GetFrameSrc_Proxy(ITargetFrame2 *This,LPWSTR *ppszFrameSrc);", "ITargetFrame2_GetFramesContainer_Proxy": "HRESULT WINAPI ITargetFrame2_GetFramesContainer_Proxy(ITargetFrame2 *This,IOleContainer **ppContainer);", "ITargetFrame2_SetFrameOptions_Proxy": "HRESULT WINAPI ITargetFrame2_SetFrameOptions_Proxy(ITargetFrame2 *This,DWORD dwFlags);", "ITargetFrame2_GetFrameOptions_Proxy": "HRESULT WINAPI ITargetFrame2_GetFrameOptions_Proxy(ITargetFrame2 *This,DWORD *pdwFlags);", "ITargetFrame2_SetFrameMargins_Proxy": "HRESULT WINAPI ITargetFrame2_SetFrameMargins_Proxy(ITargetFrame2 *This,DWORD dwWidth,DWORD dwHeight);", "ITargetFrame2_GetFrameMargins_Proxy": "HRESULT WINAPI ITargetFrame2_GetFrameMargins_Proxy(ITargetFrame2 *This,DWORD *pdwWidth,DWORD *pdwHeight);", "ITargetFrame2_FindFrame_Proxy": "HRESULT WINAPI ITargetFrame2_FindFrame_Proxy(ITargetFrame2 *This,LPCWSTR pszTargetName,DWORD dwFlags,IUnknown **ppunkTargetFrame);", "ITargetFrame2_GetTargetAlias_Proxy": "HRESULT WINAPI ITargetFrame2_GetTargetAlias_Proxy(ITargetFrame2 *This,LPCWSTR pszTargetName,LPWSTR *ppszTargetAlias);", "ITargetContainer_GetFrameUrl_Proxy": "HRESULT WINAPI ITargetContainer_GetFrameUrl_Proxy(ITargetContainer *This,LPWSTR *ppszFrameSrc);", "ITargetContainer_GetFramesContainer_Proxy": "HRESULT WINAPI ITargetContainer_GetFramesContainer_Proxy(ITargetContainer *This,IOleContainer **ppContainer);", "_com_handle_excepinfo": "HRESULT WINAPI _com_handle_excepinfo(EXCEPINFO& excepInfo,IErrorInfo **pperrinfo);", "IGetClusterUIInfo_GetClusterName_Proxy": "HRESULT WINAPI IGetClusterUIInfo_GetClusterName_Proxy(IGetClusterUIInfo *This,BSTR lpszName,LONG *pcchName);", "IGetClusterUIInfo_GetLocale_Proxy": "LCID WINAPI IGetClusterUIInfo_GetLocale_Proxy(IGetClusterUIInfo *This);", "IGetClusterUIInfo_GetFont_Proxy": "HFONT WINAPI IGetClusterUIInfo_GetFont_Proxy(IGetClusterUIInfo *This);", "IGetClusterUIInfo_GetIcon_Proxy": "HICON WINAPI IGetClusterUIInfo_GetIcon_Proxy(IGetClusterUIInfo *This);", "IGetClusterDataInfo_GetClusterName_Proxy": "HRESULT WINAPI IGetClusterDataInfo_GetClusterName_Proxy(IGetClusterDataInfo *This,BSTR lpszName,LONG *pcchName);", "IGetClusterDataInfo_GetClusterHandle_Proxy": "HCLUSTER WINAPI IGetClusterDataInfo_GetClusterHandle_Proxy(IGetClusterDataInfo *This);", "IGetClusterDataInfo_GetObjectCount_Proxy": "LONG WINAPI IGetClusterDataInfo_GetObjectCount_Proxy(IGetClusterDataInfo *This);", "IGetClusterObjectInfo_GetObjectName_Proxy": "HRESULT WINAPI IGetClusterObjectInfo_GetObjectName_Proxy(IGetClusterObjectInfo *This,LONG lObjIndex,BSTR lpszName,LONG *pcchName);", "IGetClusterObjectInfo_GetObjectType_Proxy": "CLUADMEX_OBJECT_TYPE WINAPI IGetClusterObjectInfo_GetObjectType_Proxy(IGetClusterObjectInfo *This,LONG lObjIndex);", "IGetClusterNodeInfo_GetNodeHandle_Proxy": "HNODE WINAPI IGetClusterNodeInfo_GetNodeHandle_Proxy(IGetClusterNodeInfo *This,LONG lObjIndex);", "IGetClusterGroupInfo_GetGroupHandle_Proxy": "HGROUP WINAPI IGetClusterGroupInfo_GetGroupHandle_Proxy(IGetClusterGroupInfo *This,LONG lObjIndex);", "IGetClusterResourceInfo_GetResourceHandle_Proxy": "HRESOURCE WINAPI IGetClusterResourceInfo_GetResourceHandle_Proxy(IGetClusterResourceInfo *This,LONG lObjIndex);", "IGetClusterResourceInfo_GetResourceTypeName_Proxy": "HRESULT WINAPI IGetClusterResourceInfo_GetResourceTypeName_Proxy(IGetClusterResourceInfo *This,LONG lObjIndex,BSTR lpszResTypeName,LONG *pcchResTypeName);", "IGetClusterResourceInfo_GetResourceNetworkName_Proxy": "WINBOOL WINAPI IGetClusterResourceInfo_GetResourceNetworkName_Proxy(IGetClusterResourceInfo *This,LONG lObjIndex,BSTR lpszNetName,ULONG *pcchNetName);", "IGetClusterNetworkInfo_GetNetworkHandle_Proxy": "HNETWORK WINAPI IGetClusterNetworkInfo_GetNetworkHandle_Proxy(IGetClusterNetworkInfo *This,LONG lObjIndex);", "IGetClusterNetInterfaceInfo_GetNetInterfaceHandle_Proxy": "HNETINTERFACE WINAPI IGetClusterNetInterfaceInfo_GetNetInterfaceHandle_Proxy(IGetClusterNetInterfaceInfo *This,LONG lObjIndex);", "IWCPropertySheetCallback_AddPropertySheetPage_Proxy": "HRESULT WINAPI IWCPropertySheetCallback_AddPropertySheetPage_Proxy(IWCPropertySheetCallback *This,LONG *hpage);", "IWEExtendPropertySheet_CreatePropertySheetPages_Proxy": "HRESULT WINAPI IWEExtendPropertySheet_CreatePropertySheetPages_Proxy(IWEExtendPropertySheet *This,IUnknown *piData,IWCPropertySheetCallback *piCallback);", "IWCWizardCallback_AddWizardPage_Proxy": "HRESULT WINAPI IWCWizardCallback_AddWizardPage_Proxy(IWCWizardCallback *This,LONG *hpage);", "IWCWizardCallback_EnableNext_Proxy": "HRESULT WINAPI IWCWizardCallback_EnableNext_Proxy(IWCWizardCallback *This,LONG *hpage,WINBOOL bEnable);", "IWEExtendWizard_CreateWizardPages_Proxy": "HRESULT WINAPI IWEExtendWizard_CreateWizardPages_Proxy(IWEExtendWizard *This,IUnknown *piData,IWCWizardCallback *piCallback);", "IWCContextMenuCallback_AddExtensionMenuItem_Proxy": "HRESULT WINAPI IWCContextMenuCallback_AddExtensionMenuItem_Proxy(IWCContextMenuCallback *This,BSTR lpszName,BSTR lpszStatusBarText,ULONG nCommandID,ULONG nSubmenuCommandID,ULONG uFlags);", "IWEExtendContextMenu_AddContextMenuItems_Proxy": "HRESULT WINAPI IWEExtendContextMenu_AddContextMenuItems_Proxy(IWEExtendContextMenu *This,IUnknown *piData,IWCContextMenuCallback *piCallback);", "IWEInvokeCommand_InvokeCommand_Proxy": "HRESULT WINAPI IWEInvokeCommand_InvokeCommand_Proxy(IWEInvokeCommand *This,ULONG nCommandID,IUnknown *piData);", "IWCWizard97Callback_AddWizard97Page_Proxy": "HRESULT WINAPI IWCWizard97Callback_AddWizard97Page_Proxy(IWCWizard97Callback *This,LONG *hpage);", "IWCWizard97Callback_EnableNext_Proxy": "HRESULT WINAPI IWCWizard97Callback_EnableNext_Proxy(IWCWizard97Callback *This,LONG *hpage,WINBOOL bEnable);", "IWEExtendWizard97_CreateWizard97Pages_Proxy": "HRESULT WINAPI IWEExtendWizard97_CreateWizard97Pages_Proxy(IWEExtendWizard97 *This,IUnknown *piData,IWCWizard97Callback *piCallback);", "RtmRegisterEntity": "DWORD WINAPI RtmRegisterEntity(PRTM_ENTITY_INFO RtmEntityInfo,PRTM_ENTITY_EXPORT_METHODS ExportMethods,RTM_EVENT_CALLBACK EventCallback,WINBOOL ReserveOpaquePointer,PRTM_REGN_PROFILE RtmRegProfile,PRTM_ENTITY_HANDLE RtmRegHandle);", "RtmDeregisterEntity": "DWORD WINAPI RtmDeregisterEntity(RTM_ENTITY_HANDLE RtmRegHandle);", "RtmGetRegisteredEntities": "DWORD WINAPI RtmGetRegisteredEntities(RTM_ENTITY_HANDLE RtmRegHandle,PUINT NumEntities,PRTM_ENTITY_HANDLE EntityHandles,PRTM_ENTITY_INFO EntityInfos);", "RtmReleaseEntities": "DWORD WINAPI RtmReleaseEntities(RTM_ENTITY_HANDLE RtmRegHandle,UINT NumEntities,PRTM_ENTITY_HANDLE EntityHandles);", "RtmLockDestination": "DWORD WINAPI RtmLockDestination(RTM_ENTITY_HANDLE RtmRegHandle,RTM_DEST_HANDLE DestHandle,WINBOOL Exclusive,WINBOOL LockDest);", "RtmGetOpaqueInformationPointer": "DWORD WINAPI RtmGetOpaqueInformationPointer(RTM_ENTITY_HANDLE RtmRegHandle,RTM_DEST_HANDLE DestHandle,PVOID *OpaqueInfoPointer);", "RtmGetEntityMethods": "DWORD WINAPI RtmGetEntityMethods(RTM_ENTITY_HANDLE RtmRegHandle,RTM_ENTITY_HANDLE EntityHandle,PUINT NumMethods,PRTM_ENTITY_EXPORT_METHOD ExptMethods);", "RtmInvokeMethod": "DWORD WINAPI RtmInvokeMethod(RTM_ENTITY_HANDLE RtmRegHandle,RTM_ENTITY_HANDLE EntityHandle,PRTM_ENTITY_METHOD_INPUT Input,PUINT OutputSize,PRTM_ENTITY_METHOD_OUTPUT Output);", "RtmBlockMethods": "DWORD WINAPI RtmBlockMethods(RTM_ENTITY_HANDLE RtmRegHandle,HANDLE TargetHandle,UCHAR TargetType,DWORD BlockingFlag);", "RtmGetEntityInfo": "DWORD WINAPI RtmGetEntityInfo(RTM_ENTITY_HANDLE RtmRegHandle,RTM_ENTITY_HANDLE EntityHandle,PRTM_ENTITY_INFO EntityInfo);", "RtmGetDestInfo": "DWORD WINAPI RtmGetDestInfo(RTM_ENTITY_HANDLE RtmRegHandle,RTM_DEST_HANDLE DestHandle,ULONG ProtocolId,RTM_VIEW_SET TargetViews,PRTM_DEST_INFO DestInfo);", "RtmGetRouteInfo": "DWORD WINAPI RtmGetRouteInfo(RTM_ENTITY_HANDLE RtmRegHandle,RTM_ROUTE_HANDLE RouteHandle,PRTM_ROUTE_INFO RouteInfo,PRTM_NET_ADDRESS DestAddress);", "RtmGetNextHopInfo": "DWORD WINAPI RtmGetNextHopInfo(RTM_ENTITY_HANDLE RtmRegHandle,RTM_NEXTHOP_HANDLE NextHopHandle,PRTM_NEXTHOP_INFO NextHopInfo);", "RtmReleaseEntityInfo": "DWORD WINAPI RtmReleaseEntityInfo(RTM_ENTITY_HANDLE RtmRegHandle,PRTM_ENTITY_INFO EntityInfo);", "RtmReleaseDestInfo": "DWORD WINAPI RtmReleaseDestInfo(RTM_ENTITY_HANDLE RtmRegHandle,PRTM_DEST_INFO DestInfo);", "RtmReleaseRouteInfo": "DWORD WINAPI RtmReleaseRouteInfo(RTM_ENTITY_HANDLE RtmRegHandle,PRTM_ROUTE_INFO RouteInfo);", "RtmReleaseNextHopInfo": "DWORD WINAPI RtmReleaseNextHopInfo(RTM_ENTITY_HANDLE RtmRegHandle,PRTM_NEXTHOP_INFO NextHopInfo);", "RtmAddRouteToDest": "DWORD WINAPI RtmAddRouteToDest(RTM_ENTITY_HANDLE RtmRegHandle,PRTM_ROUTE_HANDLE RouteHandle,PRTM_NET_ADDRESS DestAddress,PRTM_ROUTE_INFO RouteInfo,ULONG TimeToLive,RTM_ROUTE_LIST_HANDLE RouteListHandle,RTM_NOTIFY_FLAGS NotifyType,RTM_NOTIFY_HANDLE NotifyHandle,PRTM_ROUTE_CHANGE_FLAGS ChangeFlags);", "RtmDeleteRouteToDest": "DWORD WINAPI RtmDeleteRouteToDest(RTM_ENTITY_HANDLE RtmRegHandle,RTM_ROUTE_HANDLE RouteHandle,PRTM_ROUTE_CHANGE_FLAGS ChangeFlags);", "RtmHoldDestination": "DWORD WINAPI RtmHoldDestination(RTM_ENTITY_HANDLE RtmRegHandle,RTM_DEST_HANDLE DestHandle,RTM_VIEW_SET TargetViews,ULONG HoldTime);", "RtmGetRoutePointer": "DWORD WINAPI RtmGetRoutePointer(RTM_ENTITY_HANDLE RtmRegHandle,RTM_ROUTE_HANDLE RouteHandle,PRTM_ROUTE_INFO *RoutePointer);", "RtmLockRoute": "DWORD WINAPI RtmLockRoute(RTM_ENTITY_HANDLE RtmRegHandle,RTM_ROUTE_HANDLE RouteHandle,WINBOOL Exclusive,WINBOOL LockRoute,PRTM_ROUTE_INFO *RoutePointer);", "RtmUpdateAndUnlockRoute": "DWORD WINAPI RtmUpdateAndUnlockRoute(RTM_ENTITY_HANDLE RtmRegHandle,RTM_ROUTE_HANDLE RouteHandle,ULONG TimeToLive,RTM_ROUTE_LIST_HANDLE RouteListHandle,RTM_NOTIFY_FLAGS NotifyType,RTM_NOTIFY_HANDLE NotifyHandle,PRTM_ROUTE_CHANGE_FLAGS ChangeFlags);", "RtmGetExactMatchDestination": "DWORD WINAPI RtmGetExactMatchDestination(RTM_ENTITY_HANDLE RtmRegHandle,PRTM_NET_ADDRESS DestAddress,ULONG ProtocolId,RTM_VIEW_SET TargetViews,PRTM_DEST_INFO DestInfo);", "RtmGetMostSpecificDestination": "DWORD WINAPI RtmGetMostSpecificDestination(RTM_ENTITY_HANDLE RtmRegHandle,PRTM_NET_ADDRESS DestAddress,ULONG ProtocolId,RTM_VIEW_SET TargetViews,PRTM_DEST_INFO DestInfo);", "RtmGetLessSpecificDestination": "DWORD WINAPI RtmGetLessSpecificDestination(RTM_ENTITY_HANDLE RtmRegHandle,RTM_DEST_HANDLE DestHandle,ULONG ProtocolId,RTM_VIEW_SET TargetViews,PRTM_DEST_INFO DestInfo);", "RtmGetExactMatchRoute": "DWORD WINAPI RtmGetExactMatchRoute(RTM_ENTITY_HANDLE RtmRegHandle,PRTM_NET_ADDRESS DestAddress,RTM_MATCH_FLAGS MatchingFlags,PRTM_ROUTE_INFO RouteInfo,ULONG InterfaceIndex,RTM_VIEW_SET TargetViews,PRTM_ROUTE_HANDLE RouteHandle);", "RtmIsBestRoute": "DWORD WINAPI RtmIsBestRoute(RTM_ENTITY_HANDLE RtmRegHandle,RTM_ROUTE_HANDLE RouteHandle,PRTM_VIEW_SET BestInViews);", "RtmAddNextHop": "DWORD WINAPI RtmAddNextHop(RTM_ENTITY_HANDLE RtmRegHandle,PRTM_NEXTHOP_INFO NextHopInfo,PRTM_NEXTHOP_HANDLE NextHopHandle,PRTM_NEXTHOP_CHANGE_FLAGS ChangeFlags);", "RtmFindNextHop": "DWORD WINAPI RtmFindNextHop(RTM_ENTITY_HANDLE RtmRegHandle,PRTM_NEXTHOP_INFO NextHopInfo,PRTM_NEXTHOP_HANDLE NextHopHandle,PRTM_NEXTHOP_INFO *NextHopPointer);", "RtmDeleteNextHop": "DWORD WINAPI RtmDeleteNextHop(RTM_ENTITY_HANDLE RtmRegHandle,RTM_NEXTHOP_HANDLE NextHopHandle,PRTM_NEXTHOP_INFO NextHopInfo);", "RtmGetNextHopPointer": "DWORD WINAPI RtmGetNextHopPointer(RTM_ENTITY_HANDLE RtmRegHandle,RTM_NEXTHOP_HANDLE NextHopHandle,PRTM_NEXTHOP_INFO *NextHopPointer);", "RtmLockNextHop": "DWORD WINAPI RtmLockNextHop(RTM_ENTITY_HANDLE RtmRegHandle,RTM_NEXTHOP_HANDLE NextHopHandle,WINBOOL Exclusive,WINBOOL LockNextHop,PRTM_NEXTHOP_INFO *NextHopPointer);", "RtmCreateDestEnum": "DWORD WINAPI RtmCreateDestEnum(RTM_ENTITY_HANDLE RtmRegHandle,RTM_VIEW_SET TargetViews,RTM_ENUM_FLAGS EnumFlags,PRTM_NET_ADDRESS NetAddress,ULONG ProtocolId,PRTM_ENUM_HANDLE RtmEnumHandle);", "RtmGetEnumDests": "DWORD WINAPI RtmGetEnumDests(RTM_ENTITY_HANDLE RtmRegHandle,RTM_ENUM_HANDLE EnumHandle,PUINT NumDests,PRTM_DEST_INFO DestInfos);", "RtmReleaseDests": "DWORD WINAPI RtmReleaseDests(RTM_ENTITY_HANDLE RtmRegHandle,UINT NumDests,PRTM_DEST_INFO DestInfos);", "RtmCreateRouteEnum": "DWORD WINAPI RtmCreateRouteEnum(RTM_ENTITY_HANDLE RtmRegHandle,RTM_DEST_HANDLE DestHandle,RTM_VIEW_SET TargetViews,RTM_ENUM_FLAGS EnumFlags,PRTM_NET_ADDRESS StartDest,RTM_MATCH_FLAGS MatchingFlags,PRTM_ROUTE_INFO CriteriaRoute,ULONG CriteriaInterface,PRTM_ENUM_HANDLE RtmEnumHandle);", "RtmGetEnumRoutes": "DWORD WINAPI RtmGetEnumRoutes(RTM_ENTITY_HANDLE RtmRegHandle,RTM_ENUM_HANDLE EnumHandle,PUINT NumRoutes,PRTM_ROUTE_HANDLE RouteHandles);", "RtmReleaseRoutes": "DWORD WINAPI RtmReleaseRoutes(RTM_ENTITY_HANDLE RtmRegHandle,UINT NumRoutes,PRTM_ROUTE_HANDLE RouteHandles);", "RtmCreateNextHopEnum": "DWORD WINAPI RtmCreateNextHopEnum(RTM_ENTITY_HANDLE RtmRegHandle,RTM_ENUM_FLAGS EnumFlags,PRTM_NET_ADDRESS NetAddress,PRTM_ENUM_HANDLE RtmEnumHandle);", "RtmGetEnumNextHops": "DWORD WINAPI RtmGetEnumNextHops(RTM_ENTITY_HANDLE RtmRegHandle,RTM_ENUM_HANDLE EnumHandle,PUINT NumNextHops,PRTM_NEXTHOP_HANDLE NextHopHandles);", "RtmReleaseNextHops": "DWORD WINAPI RtmReleaseNextHops(RTM_ENTITY_HANDLE RtmRegHandle,UINT NumNextHops,PRTM_NEXTHOP_HANDLE NextHopHandles);", "RtmDeleteEnumHandle": "DWORD WINAPI RtmDeleteEnumHandle(RTM_ENTITY_HANDLE RtmRegHandle,RTM_ENUM_HANDLE EnumHandle);", "RtmRegisterForChangeNotification": "DWORD WINAPI RtmRegisterForChangeNotification(RTM_ENTITY_HANDLE RtmRegHandle,RTM_VIEW_SET TargetViews,RTM_NOTIFY_FLAGS NotifyFlags,PVOID NotifyContext,PRTM_NOTIFY_HANDLE NotifyHandle);", "RtmGetChangedDests": "DWORD WINAPI RtmGetChangedDests(RTM_ENTITY_HANDLE RtmRegHandle,RTM_NOTIFY_HANDLE NotifyHandle,PUINT NumDests,PRTM_DEST_INFO ChangedDests);", "RtmReleaseChangedDests": "DWORD WINAPI RtmReleaseChangedDests(RTM_ENTITY_HANDLE RtmRegHandle,RTM_NOTIFY_HANDLE NotifyHandle,UINT NumDests,PRTM_DEST_INFO ChangedDests);", "RtmIgnoreChangedDests": "DWORD WINAPI RtmIgnoreChangedDests(RTM_ENTITY_HANDLE RtmRegHandle,RTM_NOTIFY_HANDLE NotifyHandle,UINT NumDests,PRTM_DEST_HANDLE ChangedDests);", "RtmGetChangeStatus": "DWORD WINAPI RtmGetChangeStatus(RTM_ENTITY_HANDLE RtmRegHandle,RTM_NOTIFY_HANDLE NotifyHandle,RTM_DEST_HANDLE DestHandle,PBOOL ChangeStatus);", "RtmMarkDestForChangeNotification": "DWORD WINAPI RtmMarkDestForChangeNotification(RTM_ENTITY_HANDLE RtmRegHandle,RTM_NOTIFY_HANDLE NotifyHandle,RTM_DEST_HANDLE DestHandle,WINBOOL MarkDest);", "RtmIsMarkedForChangeNotification": "DWORD WINAPI RtmIsMarkedForChangeNotification(RTM_ENTITY_HANDLE RtmRegHandle,RTM_NOTIFY_HANDLE NotifyHandle,RTM_DEST_HANDLE DestHandle,PBOOL DestMarked);", "RtmDeregisterFromChangeNotification": "DWORD WINAPI RtmDeregisterFromChangeNotification(RTM_ENTITY_HANDLE RtmRegHandle,RTM_NOTIFY_HANDLE NotifyHandle);", "RtmCreateRouteList": "DWORD WINAPI RtmCreateRouteList(RTM_ENTITY_HANDLE RtmRegHandle,PRTM_ROUTE_LIST_HANDLE RouteListHandle);", "RtmInsertInRouteList": "DWORD WINAPI RtmInsertInRouteList(RTM_ENTITY_HANDLE RtmRegHandle,RTM_ROUTE_LIST_HANDLE RouteListHandle,UINT NumRoutes,PRTM_ROUTE_HANDLE RouteHandles);", "RtmCreateRouteListEnum": "DWORD WINAPI RtmCreateRouteListEnum(RTM_ENTITY_HANDLE RtmRegHandle,RTM_ROUTE_LIST_HANDLE RouteListHandle,PRTM_ENUM_HANDLE RtmEnumHandle);", "RtmGetListEnumRoutes": "DWORD WINAPI RtmGetListEnumRoutes(RTM_ENTITY_HANDLE RtmRegHandle,RTM_ENUM_HANDLE EnumHandle,PUINT NumRoutes,PRTM_ROUTE_HANDLE RouteHandles);", "RtmDeleteRouteList": "DWORD WINAPI RtmDeleteRouteList(RTM_ENTITY_HANDLE RtmRegHandle,RTM_ROUTE_LIST_HANDLE RouteListHandle);", "RtmReferenceHandles": "DWORD WINAPI RtmReferenceHandles(RTM_ENTITY_HANDLE RtmRegHandle,UINT NumHandles,HANDLE *RtmHandles);", "lineAccept": "LONG WINAPI lineAccept(HCALL hCall,LPCSTR lpsUserUserInfo,DWORD dwSize);", "lineAddProvider": "LONG WINAPI lineAddProvider(LPCSTR lpszProviderFilename,HWND hwndOwner,LPDWORD lpdwPermanentProviderID);", "lineAddProviderA": "LONG WINAPI lineAddProviderA(LPCSTR lpszProviderFilename,HWND hwndOwner,LPDWORD lpdwPermanentProviderID);", "lineAddProviderW": "LONG WINAPI lineAddProviderW(LPCWSTR lpszProviderFilename,HWND hwndOwner,LPDWORD lpdwPermanentProviderID);", "lineAddToConference": "LONG WINAPI lineAddToConference(HCALL hConfCall,HCALL hConsultCall);", "lineAgentSpecific": "LONG WINAPI lineAgentSpecific(HLINE hLine,DWORD dwAddressID,DWORD dwAgentExtensionIDIndex,LPVOID lpParams,DWORD dwSize);", "lineAnswer": "LONG WINAPI lineAnswer(HCALL hCall,LPCSTR lpsUserUserInfo,DWORD dwSize);", "lineBlindTransfer": "LONG WINAPI lineBlindTransfer(HCALL hCall,LPCSTR lpszDestAddress,DWORD dwCountryCode);", "lineBlindTransferA": "LONG WINAPI lineBlindTransferA(HCALL hCall,LPCSTR lpszDestAddress,DWORD dwCountryCode);", "lineBlindTransferW": "LONG WINAPI lineBlindTransferW(HCALL hCall,LPCWSTR lpszDestAddressW,DWORD dwCountryCode);", "lineClose": "LONG WINAPI lineClose(HLINE hLine);", "lineCompleteCall": "LONG WINAPI lineCompleteCall(HCALL hCall,LPDWORD lpdwCompletionID,DWORD dwCompletionMode,DWORD dwMessageID);", "lineCompleteTransfer": "LONG WINAPI lineCompleteTransfer(HCALL hCall,HCALL hConsultCall,LPHCALL lphConfCall,DWORD dwTransferMode);", "lineConfigDialog": "LONG WINAPI lineConfigDialog(DWORD dwDeviceID,HWND hwndOwner,LPCSTR lpszDeviceClass);", "lineConfigDialogA": "LONG WINAPI lineConfigDialogA(DWORD dwDeviceID,HWND hwndOwner,LPCSTR lpszDeviceClass);", "lineConfigDialogW": "LONG WINAPI lineConfigDialogW(DWORD dwDeviceID,HWND hwndOwner,LPCWSTR lpszDeviceClass);", "lineConfigDialogEdit": "LONG WINAPI lineConfigDialogEdit(DWORD dwDeviceID,HWND hwndOwner,LPCSTR lpszDeviceClass,LPVOID const lpDeviceConfigIn,DWORD dwSize,LPVARSTRING lpDeviceConfigOut);", "lineConfigDialogEditA": "LONG WINAPI lineConfigDialogEditA(DWORD dwDeviceID,HWND hwndOwner,LPCSTR lpszDeviceClass,LPVOID const lpDeviceConfigIn,DWORD dwSize,LPVARSTRING lpDeviceConfigOut);", "lineConfigDialogEditW": "LONG WINAPI lineConfigDialogEditW(DWORD dwDeviceID,HWND hwndOwner,LPCWSTR lpszDeviceClass,LPVOID const lpDeviceConfigIn,DWORD dwSize,LPVARSTRING lpDeviceConfigOut);", "lineConfigProvider": "LONG WINAPI lineConfigProvider(HWND hwndOwner,DWORD dwPermanentProviderID);", "lineCreateAgentW": "LONG WINAPI lineCreateAgentW(HLINE hLine,LPWSTR lpszAgentID,LPWSTR lpszAgentPIN,LPHAGENT lphAgent);", "lineCreateAgentA": "LONG WINAPI lineCreateAgentA(HLINE hLine,LPSTR lpszAgentID,LPSTR lpszAgentPIN,LPHAGENT lphAgent);", "lineCreateAgentSessionW": "LONG WINAPI lineCreateAgentSessionW(HLINE hLine,HAGENT hAgent,LPWSTR lpszAgentPIN,DWORD dwWorkingAddressID,LPGUID lpGroupID,LPHAGENTSESSION lphAgentSession);", "lineCreateAgentSessionA": "LONG WINAPI lineCreateAgentSessionA(HLINE hLine,HAGENT hAgent,LPSTR lpszAgentPIN,DWORD dwWorkingAddressID,LPGUID lpGroupID,LPHAGENTSESSION lphAgentSession);", "lineDeallocateCall": "LONG WINAPI lineDeallocateCall(HCALL hCall);", "lineDevSpecific": "LONG WINAPI lineDevSpecific(HLINE hLine,DWORD dwAddressID,HCALL hCall,LPVOID lpParams,DWORD dwSize);", "lineDevSpecificFeature": "LONG WINAPI lineDevSpecificFeature(HLINE hLine,DWORD dwFeature,LPVOID lpParams,DWORD dwSize);", "lineDial": "LONG WINAPI lineDial(HCALL hCall,LPCSTR lpszDestAddress,DWORD dwCountryCode);", "lineDialA": "LONG WINAPI lineDialA(HCALL hCall,LPCSTR lpszDestAddress,DWORD dwCountryCode);", "lineDialW": "LONG WINAPI lineDialW(HCALL hCall,LPCWSTR lpszDestAddress,DWORD dwCountryCode);", "lineDrop": "LONG WINAPI lineDrop(HCALL hCall,LPCSTR lpsUserUserInfo,DWORD dwSize);", "lineForward": "LONG WINAPI lineForward(HLINE hLine,DWORD bAllAddresses,DWORD dwAddressID,LPLINEFORWARDLIST const lpForwardList,DWORD dwNumRingsNoAnswer,LPHCALL lphConsultCall,LPLINECALLPARAMS const lpCallParams);", "lineForwardA": "LONG WINAPI lineForwardA(HLINE hLine,DWORD bAllAddresses,DWORD dwAddressID,LPLINEFORWARDLIST const lpForwardList,DWORD dwNumRingsNoAnswer,LPHCALL lphConsultCall,LPLINECALLPARAMS const lpCallParams);", "lineForwardW": "LONG WINAPI lineForwardW(HLINE hLine,DWORD bAllAddresses,DWORD dwAddressID,LPLINEFORWARDLIST const lpForwardList,DWORD dwNumRingsNoAnswer,LPHCALL lphConsultCall,LPLINECALLPARAMS const lpCallParams);", "lineGatherDigits": "LONG WINAPI lineGatherDigits(HCALL hCall,DWORD dwDigitModes,LPSTR lpsDigits,DWORD dwNumDigits,LPCSTR lpszTerminationDigits,DWORD dwFirstDigitTimeout,DWORD dwInterDigitTimeout);", "lineGatherDigitsA": "LONG WINAPI lineGatherDigitsA(HCALL hCall,DWORD dwDigitModes,LPSTR lpsDigits,DWORD dwNumDigits,LPCSTR lpszTerminationDigits,DWORD dwFirstDigitTimeout,DWORD dwInterDigitTimeout);", "lineGatherDigitsW": "LONG WINAPI lineGatherDigitsW(HCALL hCall,DWORD dwDigitModes,LPWSTR lpsDigits,DWORD dwNumDigits,LPCWSTR lpszTerminationDigits,DWORD dwFirstDigitTimeout,DWORD dwInterDigitTimeout);", "lineGenerateDigits": "LONG WINAPI lineGenerateDigits(HCALL hCall,DWORD dwDigitMode,LPCSTR lpszDigits,DWORD dwDuration);", "lineGenerateDigitsA": "LONG WINAPI lineGenerateDigitsA(HCALL hCall,DWORD dwDigitMode,LPCSTR lpszDigits,DWORD dwDuration);", "lineGenerateDigitsW": "LONG WINAPI lineGenerateDigitsW(HCALL hCall,DWORD dwDigitMode,LPCWSTR lpszDigits,DWORD dwDuration);", "lineGenerateTone": "LONG WINAPI lineGenerateTone(HCALL hCall,DWORD dwToneMode,DWORD dwDuration,DWORD dwNumTones,LPLINEGENERATETONE const lpTones);", "lineGetAddressCaps": "LONG WINAPI lineGetAddressCaps(HLINEAPP hLineApp,DWORD dwDeviceID,DWORD dwAddressID,DWORD dwAPIVersion,DWORD dwExtVersion,LPLINEADDRESSCAPS lpAddressCaps);", "lineGetAddressCapsA": "LONG WINAPI lineGetAddressCapsA(HLINEAPP hLineApp,DWORD dwDeviceID,DWORD dwAddressID,DWORD dwAPIVersion,DWORD dwExtVersion,LPLINEADDRESSCAPS lpAddressCaps);", "lineGetAddressCapsW": "LONG WINAPI lineGetAddressCapsW(HLINEAPP hLineApp,DWORD dwDeviceID,DWORD dwAddressID,DWORD dwAPIVersion,DWORD dwExtVersion,LPLINEADDRESSCAPS lpAddressCaps);", "lineGetAddressID": "LONG WINAPI lineGetAddressID(HLINE hLine,LPDWORD lpdwAddressID,DWORD dwAddressMode,LPCSTR lpsAddress,DWORD dwSize);", "lineGetAddressIDA": "LONG WINAPI lineGetAddressIDA(HLINE hLine,LPDWORD lpdwAddressID,DWORD dwAddressMode,LPCSTR lpsAddress,DWORD dwSize);", "lineGetAddressIDW": "LONG WINAPI lineGetAddressIDW(HLINE hLine,LPDWORD lpdwAddressID,DWORD dwAddressMode,LPCWSTR lpsAddress,DWORD dwSize);", "lineGetAddressStatus": "LONG WINAPI lineGetAddressStatus(HLINE hLine,DWORD dwAddressID,LPLINEADDRESSSTATUS lpAddressStatus);", "lineGetAddressStatusA": "LONG WINAPI lineGetAddressStatusA(HLINE hLine,DWORD dwAddressID,LPLINEADDRESSSTATUS lpAddressStatus);", "lineGetAddressStatusW": "LONG WINAPI lineGetAddressStatusW(HLINE hLine,DWORD dwAddressID,LPLINEADDRESSSTATUS lpAddressStatus);", "lineGetAgentActivityListA": "LONG WINAPI lineGetAgentActivityListA(HLINE hLine,DWORD dwAddressID,LPLINEAGENTACTIVITYLIST lpAgentActivityList);", "lineGetAgentActivityListW": "LONG WINAPI lineGetAgentActivityListW(HLINE hLine,DWORD dwAddressID,LPLINEAGENTACTIVITYLIST lpAgentActivityList);", "lineGetAgentCapsA": "LONG WINAPI lineGetAgentCapsA(HLINEAPP hLineApp,DWORD dwDeviceID,DWORD dwAddressID,DWORD dwAppAPIVersion,LPLINEAGENTCAPS lpAgentCaps);", "lineGetAgentCapsW": "LONG WINAPI lineGetAgentCapsW(HLINEAPP hLineApp,DWORD dwDeviceID,DWORD dwAddressID,DWORD dwAppAPIVersion,LPLINEAGENTCAPS lpAgentCaps);", "lineGetAgentGroupListA": "LONG WINAPI lineGetAgentGroupListA(HLINE hLine,DWORD dwAddressID,LPLINEAGENTGROUPLIST lpAgentGroupList);", "lineGetAgentGroupListW": "LONG WINAPI lineGetAgentGroupListW(HLINE hLine,DWORD dwAddressID,LPLINEAGENTGROUPLIST lpAgentGroupList);", "lineGetAgentInfo": "LONG WINAPI lineGetAgentInfo(HLINE hLine,HAGENT hAgent,LPLINEAGENTINFO lpAgentInfo);", "lineGetAgentSessionInfo": "LONG WINAPI lineGetAgentSessionInfo(HLINE hLine,HAGENTSESSION hAgentSession,LPLINEAGENTSESSIONINFO lpAgentSessionInfo);", "lineGetAgentSessionList": "LONG WINAPI lineGetAgentSessionList(HLINE hLine,HAGENT hAgent,LPLINEAGENTSESSIONLIST lpAgentSessionList);", "lineGetAgentStatusA": "LONG WINAPI lineGetAgentStatusA(HLINE hLine,DWORD dwAddressID,LPLINEAGENTSTATUS lpAgentStatus);", "lineGetAgentStatusW": "LONG WINAPI lineGetAgentStatusW(HLINE hLine,DWORD dwAddressID,LPLINEAGENTSTATUS lpAgentStatus);", "lineGetAppPriority": "LONG WINAPI lineGetAppPriority(LPCSTR lpszAppFilename,DWORD dwMediaMode,LPLINEEXTENSIONID lpExtensionID,DWORD dwRequestMode,LPVARSTRING lpExtensionName,LPDWORD lpdwPriority);", "lineGetAppPriorityA": "LONG WINAPI lineGetAppPriorityA(LPCSTR lpszAppFilename,DWORD dwMediaMode,LPLINEEXTENSIONID lpExtensionID,DWORD dwRequestMode,LPVARSTRING lpExtensionName,LPDWORD lpdwPriority);", "lineGetAppPriorityW": "LONG WINAPI lineGetAppPriorityW(LPCWSTR lpszAppFilename,DWORD dwMediaMode,LPLINEEXTENSIONID lpExtensionID,DWORD dwRequestMode,LPVARSTRING lpExtensionName,LPDWORD lpdwPriority);", "lineGetCallInfo": "LONG WINAPI lineGetCallInfo(HCALL hCall,LPLINECALLINFO lpCallInfo);", "lineGetCallInfoA": "LONG WINAPI lineGetCallInfoA(HCALL hCall,LPLINECALLINFO lpCallInfo);", "lineGetCallInfoW": "LONG WINAPI lineGetCallInfoW(HCALL hCall,LPLINECALLINFO lpCallInfo);", "lineGetCallStatus": "LONG WINAPI lineGetCallStatus(HCALL hCall,LPLINECALLSTATUS lpCallStatus);", "lineGetConfRelatedCalls": "LONG WINAPI lineGetConfRelatedCalls(HCALL hCall,LPLINECALLLIST lpCallList);", "lineGetCountry": "LONG WINAPI lineGetCountry(DWORD dwCountryID,DWORD dwAPIVersion,LPLINECOUNTRYLIST lpLineCountryList);", "lineGetCountryA": "LONG WINAPI lineGetCountryA(DWORD dwCountryID,DWORD dwAPIVersion,LPLINECOUNTRYLIST lpLineCountryList);", "lineGetCountryW": "LONG WINAPI lineGetCountryW(DWORD dwCountryID,DWORD dwAPIVersion,LPLINECOUNTRYLIST lpLineCountryList);", "lineGetDevCaps": "LONG WINAPI lineGetDevCaps(HLINEAPP hLineApp,DWORD dwDeviceID,DWORD dwAPIVersion,DWORD dwExtVersion,LPLINEDEVCAPS lpLineDevCaps);", "lineGetDevCapsA": "LONG WINAPI lineGetDevCapsA(HLINEAPP hLineApp,DWORD dwDeviceID,DWORD dwAPIVersion,DWORD dwExtVersion,LPLINEDEVCAPS lpLineDevCaps);", "lineGetDevCapsW": "LONG WINAPI lineGetDevCapsW(HLINEAPP hLineApp,DWORD dwDeviceID,DWORD dwAPIVersion,DWORD dwExtVersion,LPLINEDEVCAPS lpLineDevCaps);", "lineGetDevConfig": "LONG WINAPI lineGetDevConfig(DWORD dwDeviceID,LPVARSTRING lpDeviceConfig,LPCSTR lpszDeviceClass);", "lineGetDevConfigA": "LONG WINAPI lineGetDevConfigA(DWORD dwDeviceID,LPVARSTRING lpDeviceConfig,LPCSTR lpszDeviceClass);", "lineGetDevConfigW": "LONG WINAPI lineGetDevConfigW(DWORD dwDeviceID,LPVARSTRING lpDeviceConfig,LPCWSTR lpszDeviceClass);", "lineGetGroupListA": "LONG WINAPI lineGetGroupListA(HLINE hLine,LPLINEAGENTGROUPLIST lpGroupList);", "lineGetGroupListW": "LONG WINAPI lineGetGroupListW(HLINE hLine,LPLINEAGENTGROUPLIST lpGroupList);", "lineGetIcon": "LONG WINAPI lineGetIcon(DWORD dwDeviceID,LPCSTR lpszDeviceClass,LPHICON lphIcon);", "lineGetIconA": "LONG WINAPI lineGetIconA(DWORD dwDeviceID,LPCSTR lpszDeviceClass,LPHICON lphIcon);", "lineGetIconW": "LONG WINAPI lineGetIconW(DWORD dwDeviceID,LPCWSTR lpszDeviceClass,LPHICON lphIcon);", "lineGetID": "LONG WINAPI lineGetID(HLINE hLine,DWORD dwAddressID,HCALL hCall,DWORD dwSelect,LPVARSTRING lpDeviceID,LPCSTR lpszDeviceClass);", "lineGetIDA": "LONG WINAPI lineGetIDA(HLINE hLine,DWORD dwAddressID,HCALL hCall,DWORD dwSelect,LPVARSTRING lpDeviceID,LPCSTR lpszDeviceClass);", "lineGetIDW": "LONG WINAPI lineGetIDW(HLINE hLine,DWORD dwAddressID,HCALL hCall,DWORD dwSelect,LPVARSTRING lpDeviceID,LPCWSTR lpszDeviceClass);", "lineGetLineDevStatus": "LONG WINAPI lineGetLineDevStatus(HLINE hLine,LPLINEDEVSTATUS lpLineDevStatus);", "lineGetLineDevStatusA": "LONG WINAPI lineGetLineDevStatusA(HLINE hLine,LPLINEDEVSTATUS lpLineDevStatus);", "lineGetLineDevStatusW": "LONG WINAPI lineGetLineDevStatusW(HLINE hLine,LPLINEDEVSTATUS lpLineDevStatus);", "lineGetMessage": "LONG WINAPI lineGetMessage(HLINEAPP hLineApp,LPLINEMESSAGE lpMessage,DWORD dwTimeout);", "lineGetNewCalls": "LONG WINAPI lineGetNewCalls(HLINE hLine,DWORD dwAddressID,DWORD dwSelect,LPLINECALLLIST lpCallList);", "lineGetNumRings": "LONG WINAPI lineGetNumRings(HLINE hLine,DWORD dwAddressID,LPDWORD lpdwNumRings);", "lineGetProviderList": "LONG WINAPI lineGetProviderList(DWORD dwAPIVersion,LPLINEPROVIDERLIST lpProviderList);", "lineGetProviderListA": "LONG WINAPI lineGetProviderListA(DWORD dwAPIVersion,LPLINEPROVIDERLIST lpProviderList);", "lineGetProviderListW": "LONG WINAPI lineGetProviderListW(DWORD dwAPIVersion,LPLINEPROVIDERLIST lpProviderList);", "lineGetProxyStatus": "LONG WINAPI lineGetProxyStatus(HLINEAPP hLineApp,DWORD dwDeviceID,DWORD dwAppAPIVersion,LPLINEPROXYREQUESTLIST lpLineProxyReqestList);", "lineGetQueueInfo": "LONG WINAPI lineGetQueueInfo(HLINE hLine,DWORD dwQueueID,LPLINEQUEUEINFO lpLineQueueInfo);", "lineGetQueueListA": "LONG WINAPI lineGetQueueListA(HLINE hLine,LPGUID lpGroupID,LPLINEQUEUELIST lpQueueList);", "lineGetQueueListW": "LONG WINAPI lineGetQueueListW(HLINE hLine,LPGUID lpGroupID,LPLINEQUEUELIST lpQueueList);", "lineGetRequest": "LONG WINAPI lineGetRequest(HLINEAPP hLineApp,DWORD dwRequestMode,LPVOID lpRequestBuffer);", "lineGetRequestA": "LONG WINAPI lineGetRequestA(HLINEAPP hLineApp,DWORD dwRequestMode,LPVOID lpRequestBuffer);", "lineGetRequestW": "LONG WINAPI lineGetRequestW(HLINEAPP hLineApp,DWORD dwRequestMode,LPVOID lpRequestBuffer);", "lineGetStatusMessages": "LONG WINAPI lineGetStatusMessages(HLINE hLine,LPDWORD lpdwLineStates,LPDWORD lpdwAddressStates);", "lineGetTranslateCaps": "LONG WINAPI lineGetTranslateCaps(HLINEAPP hLineApp,DWORD dwAPIVersion,LPLINETRANSLATECAPS lpTranslateCaps);", "lineGetTranslateCapsA": "LONG WINAPI lineGetTranslateCapsA(HLINEAPP hLineApp,DWORD dwAPIVersion,LPLINETRANSLATECAPS lpTranslateCaps);", "lineGetTranslateCapsW": "LONG WINAPI lineGetTranslateCapsW(HLINEAPP hLineApp,DWORD dwAPIVersion,LPLINETRANSLATECAPS lpTranslateCaps);", "lineHandoff": "LONG WINAPI lineHandoff(HCALL hCall,LPCSTR lpszFileName,DWORD dwMediaMode);", "lineHandoffA": "LONG WINAPI lineHandoffA(HCALL hCall,LPCSTR lpszFileName,DWORD dwMediaMode);", "lineHandoffW": "LONG WINAPI lineHandoffW(HCALL hCall,LPCWSTR lpszFileName,DWORD dwMediaMode);", "lineHold": "LONG WINAPI lineHold(HCALL hCall);", "lineInitialize": "LONG WINAPI lineInitialize(LPHLINEAPP lphLineApp,HINSTANCE hInstance,LINECALLBACK lpfnCallback,LPCSTR lpszAppName,LPDWORD lpdwNumDevs);", "lineInitializeExA": "LONG WINAPI lineInitializeExA(LPHLINEAPP lphLineApp,HINSTANCE hInstance,LINECALLBACK lpfnCallback,LPCSTR lpszFriendlyAppName,LPDWORD lpdwNumDevs,LPDWORD lpdwAPIVersion,LPLINEINITIALIZEEXPARAMS lpLineInitializeExParams);", "lineInitializeExW": "LONG WINAPI lineInitializeExW(LPHLINEAPP lphLineApp,HINSTANCE hInstance,LINECALLBACK lpfnCallback,LPCWSTR lpszFriendlyAppName,LPDWORD lpdwNumDevs,LPDWORD lpdwAPIVersion,LPLINEINITIALIZEEXPARAMS lpLineInitializeExParams);", "lineMakeCall": "LONG WINAPI lineMakeCall(HLINE hLine,LPHCALL lphCall,LPCSTR lpszDestAddress,DWORD dwCountryCode,LPLINECALLPARAMS const lpCallParams);", "lineMakeCallA": "LONG WINAPI lineMakeCallA(HLINE hLine,LPHCALL lphCall,LPCSTR lpszDestAddress,DWORD dwCountryCode,LPLINECALLPARAMS const lpCallParams);", "lineMakeCallW": "LONG WINAPI lineMakeCallW(HLINE hLine,LPHCALL lphCall,LPCWSTR lpszDestAddress,DWORD dwCountryCode,LPLINECALLPARAMS const lpCallParams);", "lineMonitorDigits": "LONG WINAPI lineMonitorDigits(HCALL hCall,DWORD dwDigitModes);", "lineMonitorMedia": "LONG WINAPI lineMonitorMedia(HCALL hCall,DWORD dwMediaModes);", "lineMonitorTones": "LONG WINAPI lineMonitorTones(HCALL hCall,LPLINEMONITORTONE const lpToneList,DWORD dwNumEntries);", "lineNegotiateAPIVersion": "LONG WINAPI lineNegotiateAPIVersion(HLINEAPP hLineApp,DWORD dwDeviceID,DWORD dwAPILowVersion,DWORD dwAPIHighVersion,LPDWORD lpdwAPIVersion,LPLINEEXTENSIONID lpExtensionID);", "lineNegotiateExtVersion": "LONG WINAPI lineNegotiateExtVersion(HLINEAPP hLineApp,DWORD dwDeviceID,DWORD dwAPIVersion,DWORD dwExtLowVersion,DWORD dwExtHighVersion,LPDWORD lpdwExtVersion);", "lineOpen": "LONG WINAPI lineOpen(HLINEAPP hLineApp,DWORD dwDeviceID,LPHLINE lphLine,DWORD dwAPIVersion,DWORD dwExtVersion,DWORD_PTR dwCallbackInstance,DWORD dwPrivileges,DWORD dwMediaModes,LPLINECALLPARAMS const lpCallParams);", "lineOpenA": "LONG WINAPI lineOpenA(HLINEAPP hLineApp,DWORD dwDeviceID,LPHLINE lphLine,DWORD dwAPIVersion,DWORD dwExtVersion,DWORD_PTR dwCallbackInstance,DWORD dwPrivileges,DWORD dwMediaModes,LPLINECALLPARAMS const lpCallParams);", "lineOpenW": "LONG WINAPI lineOpenW(HLINEAPP hLineApp,DWORD dwDeviceID,LPHLINE lphLine,DWORD dwAPIVersion,DWORD dwExtVersion,DWORD_PTR dwCallbackInstance,DWORD dwPrivileges,DWORD dwMediaModes,LPLINECALLPARAMS const lpCallParams);", "linePark": "LONG WINAPI linePark(HCALL hCall,DWORD dwParkMode,LPCSTR lpszDirAddress,LPVARSTRING lpNonDirAddress);", "lineParkA": "LONG WINAPI lineParkA(HCALL hCall,DWORD dwParkMode,LPCSTR lpszDirAddress,LPVARSTRING lpNonDirAddress);", "lineParkW": "LONG WINAPI lineParkW(HCALL hCall,DWORD dwParkMode,LPCWSTR lpszDirAddress,LPVARSTRING lpNonDirAddress);", "linePickup": "LONG WINAPI linePickup(HLINE hLine,DWORD dwAddressID,LPHCALL lphCall,LPCSTR lpszDestAddress,LPCSTR lpszGroupID);", "linePickupA": "LONG WINAPI linePickupA(HLINE hLine,DWORD dwAddressID,LPHCALL lphCall,LPCSTR lpszDestAddress,LPCSTR lpszGroupID);", "linePickupW": "LONG WINAPI linePickupW(HLINE hLine,DWORD dwAddressID,LPHCALL lphCall,LPCWSTR lpszDestAddress,LPCWSTR lpszGroupID);", "linePrepareAddToConference": "LONG WINAPI linePrepareAddToConference(HCALL hConfCall,LPHCALL lphConsultCall,LPLINECALLPARAMS const lpCallParams);", "linePrepareAddToConferenceA": "LONG WINAPI linePrepareAddToConferenceA(HCALL hConfCall,LPHCALL lphConsultCall,LPLINECALLPARAMS const lpCallParams);", "linePrepareAddToConferenceW": "LONG WINAPI linePrepareAddToConferenceW(HCALL hConfCall,LPHCALL lphConsultCall,LPLINECALLPARAMS const lpCallParams);", "lineProxyMessage": "LONG WINAPI lineProxyMessage(HLINE hLine,HCALL hCall,DWORD dwMsg,DWORD dwParam1,DWORD dwParam2,DWORD dwParam3);", "lineProxyResponse": "LONG WINAPI lineProxyResponse(HLINE hLine,LPLINEPROXYREQUEST lpProxyRequest,DWORD dwResult);", "lineRedirect": "LONG WINAPI lineRedirect(HCALL hCall,LPCSTR lpszDestAddress,DWORD dwCountryCode);", "lineRedirectA": "LONG WINAPI lineRedirectA(HCALL hCall,LPCSTR lpszDestAddress,DWORD dwCountryCode);", "lineRedirectW": "LONG WINAPI lineRedirectW(HCALL hCall,LPCWSTR lpszDestAddress,DWORD dwCountryCode);", "lineRegisterRequestRecipient": "LONG WINAPI lineRegisterRequestRecipient(HLINEAPP hLineApp,DWORD dwRegistrationInstance,DWORD dwRequestMode,DWORD bEnable);", "lineReleaseUserUserInfo": "LONG WINAPI lineReleaseUserUserInfo(HCALL hCall);", "lineRemoveFromConference": "LONG WINAPI lineRemoveFromConference(HCALL hCall);", "lineRemoveProvider": "LONG WINAPI lineRemoveProvider(DWORD dwPermanentProviderID,HWND hwndOwner);", "lineSecureCall": "LONG WINAPI lineSecureCall(HCALL hCall);", "lineSendUserUserInfo": "LONG WINAPI lineSendUserUserInfo(HCALL hCall,LPCSTR lpsUserUserInfo,DWORD dwSize);", "lineSetAgentActivity": "LONG WINAPI lineSetAgentActivity(HLINE hLine,DWORD dwAddressID,DWORD dwActivityID);", "lineSetAgentGroup": "LONG WINAPI lineSetAgentGroup(HLINE hLine,DWORD dwAddressID,LPLINEAGENTGROUPLIST lpAgentGroupList);", "lineSetAgentMeasurementPeriod": "LONG WINAPI lineSetAgentMeasurementPeriod(HLINE hLine,HAGENT hAgent,DWORD dwMeasurementPeriod);", "lineSetAgentSessionState": "LONG WINAPI lineSetAgentSessionState(HLINE hLine,HAGENTSESSION hAgentSession,DWORD dwAgentSessionState,DWORD dwNextAgentSessionState);", "lineSetAgentStateEx": "LONG WINAPI lineSetAgentStateEx(HLINE hLine,HAGENT hAgent,DWORD dwAgentState,DWORD dwNextAgentState);", "lineSetAgentState": "LONG WINAPI lineSetAgentState(HLINE hLine,DWORD dwAddressID,DWORD dwAgentState,DWORD dwNextAgentState);", "lineSetAppPriority": "LONG WINAPI lineSetAppPriority(LPCSTR lpszAppFilename,DWORD dwMediaMode,LPLINEEXTENSIONID lpExtensionID,DWORD dwRequestMode,LPCSTR lpszExtensionName,DWORD dwPriority);", "lineSetAppPriorityA": "LONG WINAPI lineSetAppPriorityA(LPCSTR lpszAppFilename,DWORD dwMediaMode,LPLINEEXTENSIONID lpExtensionID,DWORD dwRequestMode,LPCSTR lpszExtensionName,DWORD dwPriority);", "lineSetAppPriorityW": "LONG WINAPI lineSetAppPriorityW(LPCWSTR lpszAppFilename,DWORD dwMediaMode,LPLINEEXTENSIONID lpExtensionID,DWORD dwRequestMode,LPCWSTR lpszExtensionName,DWORD dwPriority);", "lineSetAppSpecific": "LONG WINAPI lineSetAppSpecific(HCALL hCall,DWORD dwAppSpecific);", "lineSetCallData": "LONG WINAPI lineSetCallData(HCALL hCall,LPVOID lpCallData,DWORD dwSize);", "lineSetCallParams": "LONG WINAPI lineSetCallParams(HCALL hCall,DWORD dwBearerMode,DWORD dwMinRate,DWORD dwMaxRate,LPLINEDIALPARAMS const lpDialParams);", "lineSetCallPrivilege": "LONG WINAPI lineSetCallPrivilege(HCALL hCall,DWORD dwCallPrivilege);", "lineSetCallQualityOfService": "LONG WINAPI lineSetCallQualityOfService(HCALL hCall,LPVOID lpSendingFlowspec,DWORD dwSendingFlowspecSize,LPVOID lpReceivingFlowspec,DWORD dwReceivingFlowspecSize);", "lineSetCallTreatment": "LONG WINAPI lineSetCallTreatment(HCALL hCall,DWORD dwTreatment);", "lineSetCurrentLocation": "LONG WINAPI lineSetCurrentLocation(HLINEAPP hLineApp,DWORD dwLocation);", "lineSetDevConfig": "LONG WINAPI lineSetDevConfig(DWORD dwDeviceID,LPVOID const lpDeviceConfig,DWORD dwSize,LPCSTR lpszDeviceClass);", "lineSetDevConfigA": "LONG WINAPI lineSetDevConfigA(DWORD dwDeviceID,LPVOID const lpDeviceConfig,DWORD dwSize,LPCSTR lpszDeviceClass);", "lineSetDevConfigW": "LONG WINAPI lineSetDevConfigW(DWORD dwDeviceID,LPVOID const lpDeviceConfig,DWORD dwSize,LPCWSTR lpszDeviceClass);", "lineSetLineDevStatus": "LONG WINAPI lineSetLineDevStatus(HLINE hLine,DWORD dwStatusToChange,DWORD fStatus);", "lineSetMediaControl": "LONG WINAPI lineSetMediaControl(HLINE hLine,DWORD dwAddressID,HCALL hCall,DWORD dwSelect,LPLINEMEDIACONTROLDIGIT const lpDigitList,DWORD dwDigitNumEntries,LPLINEMEDIACONTROLMEDIA const lpMediaList,DWORD dwMediaNumEntries,LPLINEMEDIACONTROLTONE const lpToneList,DWORD dwToneNumEntries,LPLINEMEDIACONTROLCALLSTATE const lpCallStateList,DWORD dwCallStateNumEntries);", "lineSetMediaMode": "LONG WINAPI lineSetMediaMode(HCALL hCall,DWORD dwMediaModes);", "lineSetQueueMeasurementPeriod": "LONG WINAPI lineSetQueueMeasurementPeriod(HLINE hLine,DWORD dwQueueID,DWORD dwMeasurementPeriod);", "lineSetNumRings": "LONG WINAPI lineSetNumRings(HLINE hLine,DWORD dwAddressID,DWORD dwNumRings);", "lineSetStatusMessages": "LONG WINAPI lineSetStatusMessages(HLINE hLine,DWORD dwLineStates,DWORD dwAddressStates);", "lineSetTerminal": "LONG WINAPI lineSetTerminal(HLINE hLine,DWORD dwAddressID,HCALL hCall,DWORD dwSelect,DWORD dwTerminalModes,DWORD dwTerminalID,DWORD bEnable);", "lineSetTollList": "LONG WINAPI lineSetTollList(HLINEAPP hLineApp,DWORD dwDeviceID,LPCSTR lpszAddressIn,DWORD dwTollListOption);", "lineSetTollListA": "LONG WINAPI lineSetTollListA(HLINEAPP hLineApp,DWORD dwDeviceID,LPCSTR lpszAddressIn,DWORD dwTollListOption);", "lineSetTollListW": "LONG WINAPI lineSetTollListW(HLINEAPP hLineApp,DWORD dwDeviceID,LPCWSTR lpszAddressInW,DWORD dwTollListOption);", "lineSetupConference": "LONG WINAPI lineSetupConference(HCALL hCall,HLINE hLine,LPHCALL lphConfCall,LPHCALL lphConsultCall,DWORD dwNumParties,LPLINECALLPARAMS const lpCallParams);", "lineSetupConferenceA": "LONG WINAPI lineSetupConferenceA(HCALL hCall,HLINE hLine,LPHCALL lphConfCall,LPHCALL lphConsultCall,DWORD dwNumParties,LPLINECALLPARAMS const lpCallParams);", "lineSetupConferenceW": "LONG WINAPI lineSetupConferenceW(HCALL hCall,HLINE hLine,LPHCALL lphConfCall,LPHCALL lphConsultCall,DWORD dwNumParties,LPLINECALLPARAMS const lpCallParams);", "lineSetupTransfer": "LONG WINAPI lineSetupTransfer(HCALL hCall,LPHCALL lphConsultCall,LPLINECALLPARAMS const lpCallParams);", "lineSetupTransferA": "LONG WINAPI lineSetupTransferA(HCALL hCall,LPHCALL lphConsultCall,LPLINECALLPARAMS const lpCallParams);", "lineSetupTransferW": "LONG WINAPI lineSetupTransferW(HCALL hCall,LPHCALL lphConsultCall,LPLINECALLPARAMS const lpCallParams);", "lineShutdown": "LONG WINAPI lineShutdown(HLINEAPP hLineApp);", "lineSwapHold": "LONG WINAPI lineSwapHold(HCALL hActiveCall,HCALL hHeldCall);", "lineTranslateAddress": "LONG WINAPI lineTranslateAddress(HLINEAPP hLineApp,DWORD dwDeviceID,DWORD dwAPIVersion,LPCSTR lpszAddressIn,DWORD dwCard,DWORD dwTranslateOptions,LPLINETRANSLATEOUTPUT lpTranslateOutput);", "lineTranslateAddressA": "LONG WINAPI lineTranslateAddressA(HLINEAPP hLineApp,DWORD dwDeviceID,DWORD dwAPIVersion,LPCSTR lpszAddressIn,DWORD dwCard,DWORD dwTranslateOptions,LPLINETRANSLATEOUTPUT lpTranslateOutput);", "lineTranslateAddressW": "LONG WINAPI lineTranslateAddressW(HLINEAPP hLineApp,DWORD dwDeviceID,DWORD dwAPIVersion,LPCWSTR lpszAddressIn,DWORD dwCard,DWORD dwTranslateOptions,LPLINETRANSLATEOUTPUT lpTranslateOutput);", "lineTranslateDialog": "LONG WINAPI lineTranslateDialog(HLINEAPP hLineApp,DWORD dwDeviceID,DWORD dwAPIVersion,HWND hwndOwner,LPCSTR lpszAddressIn);", "lineTranslateDialogA": "LONG WINAPI lineTranslateDialogA(HLINEAPP hLineApp,DWORD dwDeviceID,DWORD dwAPIVersion,HWND hwndOwner,LPCSTR lpszAddressIn);", "lineTranslateDialogW": "LONG WINAPI lineTranslateDialogW(HLINEAPP hLineApp,DWORD dwDeviceID,DWORD dwAPIVersion,HWND hwndOwner,LPCWSTR lpszAddressIn);", "lineUncompleteCall": "LONG WINAPI lineUncompleteCall(HLINE hLine,DWORD dwCompletionID);", "lineUnhold": "LONG WINAPI lineUnhold(HCALL hCall);", "lineUnpark": "LONG WINAPI lineUnpark(HLINE hLine,DWORD dwAddressID,LPHCALL lphCall,LPCSTR lpszDestAddress);", "lineUnparkA": "LONG WINAPI lineUnparkA(HLINE hLine,DWORD dwAddressID,LPHCALL lphCall,LPCSTR lpszDestAddress);", "lineUnparkW": "LONG WINAPI lineUnparkW(HLINE hLine,DWORD dwAddressID,LPHCALL lphCall,LPCWSTR lpszDestAddress);", "phoneClose": "LONG WINAPI phoneClose(HPHONE hPhone);", "phoneConfigDialog": "LONG WINAPI phoneConfigDialog(DWORD dwDeviceID,HWND hwndOwner,LPCSTR lpszDeviceClass);", "phoneConfigDialogA": "LONG WINAPI phoneConfigDialogA(DWORD dwDeviceID,HWND hwndOwner,LPCSTR lpszDeviceClass);", "phoneConfigDialogW": "LONG WINAPI phoneConfigDialogW(DWORD dwDeviceID,HWND hwndOwner,LPCWSTR lpszDeviceClass);", "phoneDevSpecific": "LONG WINAPI phoneDevSpecific(HPHONE hPhone,LPVOID lpParams,DWORD dwSize);", "phoneGetButtonInfo": "LONG WINAPI phoneGetButtonInfo(HPHONE hPhone,DWORD dwButtonLampID,LPPHONEBUTTONINFO lpButtonInfo);", "phoneGetButtonInfoA": "LONG WINAPI phoneGetButtonInfoA(HPHONE hPhone,DWORD dwButtonLampID,LPPHONEBUTTONINFO lpButtonInfo);", "phoneGetButtonInfoW": "LONG WINAPI phoneGetButtonInfoW(HPHONE hPhone,DWORD dwButtonLampID,LPPHONEBUTTONINFO lpButtonInfo);", "phoneGetData": "LONG WINAPI phoneGetData(HPHONE hPhone,DWORD dwDataID,LPVOID lpData,DWORD dwSize);", "phoneGetDevCaps": "LONG WINAPI phoneGetDevCaps(HPHONEAPP hPhoneApp,DWORD dwDeviceID,DWORD dwAPIVersion,DWORD dwExtVersion,LPPHONECAPS lpPhoneCaps);", "phoneGetDevCapsA": "LONG WINAPI phoneGetDevCapsA(HPHONEAPP hPhoneApp,DWORD dwDeviceID,DWORD dwAPIVersion,DWORD dwExtVersion,LPPHONECAPS lpPhoneCaps);", "phoneGetDevCapsW": "LONG WINAPI phoneGetDevCapsW(HPHONEAPP hPhoneApp,DWORD dwDeviceID,DWORD dwAPIVersion,DWORD dwExtVersion,LPPHONECAPS lpPhoneCaps);", "phoneGetDisplay": "LONG WINAPI phoneGetDisplay(HPHONE hPhone,LPVARSTRING lpDisplay);", "phoneGetGain": "LONG WINAPI phoneGetGain(HPHONE hPhone,DWORD dwHookSwitchDev,LPDWORD lpdwGain);", "phoneGetHookSwitch": "LONG WINAPI phoneGetHookSwitch(HPHONE hPhone,LPDWORD lpdwHookSwitchDevs);", "phoneGetIcon": "LONG WINAPI phoneGetIcon(DWORD dwDeviceID,LPCSTR lpszDeviceClass,LPHICON lphIcon);", "phoneGetIconA": "LONG WINAPI phoneGetIconA(DWORD dwDeviceID,LPCSTR lpszDeviceClass,LPHICON lphIcon);", "phoneGetIconW": "LONG WINAPI phoneGetIconW(DWORD dwDeviceID,LPCWSTR lpszDeviceClass,LPHICON lphIcon);", "phoneGetID": "LONG WINAPI phoneGetID(HPHONE hPhone,LPVARSTRING lpDeviceID,LPCSTR lpszDeviceClass);", "phoneGetIDA": "LONG WINAPI phoneGetIDA(HPHONE hPhone,LPVARSTRING lpDeviceID,LPCSTR lpszDeviceClass);", "phoneGetIDW": "LONG WINAPI phoneGetIDW(HPHONE hPhone,LPVARSTRING lpDeviceID,LPCWSTR lpszDeviceClass);", "phoneGetLamp": "LONG WINAPI phoneGetLamp(HPHONE hPhone,DWORD dwButtonLampID,LPDWORD lpdwLampMode);", "phoneGetMessage": "LONG WINAPI phoneGetMessage(HPHONEAPP hPhoneApp,LPPHONEMESSAGE lpMessage,DWORD dwTimeout);", "phoneGetRing": "LONG WINAPI phoneGetRing(HPHONE hPhone,LPDWORD lpdwRingMode,LPDWORD lpdwVolume);", "phoneGetStatus": "LONG WINAPI phoneGetStatus(HPHONE hPhone,LPPHONESTATUS lpPhoneStatus);", "phoneGetStatusA": "LONG WINAPI phoneGetStatusA(HPHONE hPhone,LPPHONESTATUS lpPhoneStatus);", "phoneGetStatusW": "LONG WINAPI phoneGetStatusW(HPHONE hPhone,LPPHONESTATUS lpPhoneStatus);", "phoneGetStatusMessages": "LONG WINAPI phoneGetStatusMessages(HPHONE hPhone,LPDWORD lpdwPhoneStates,LPDWORD lpdwButtonModes,LPDWORD lpdwButtonStates);", "phoneGetVolume": "LONG WINAPI phoneGetVolume(HPHONE hPhone,DWORD dwHookSwitchDev,LPDWORD lpdwVolume);", "phoneInitialize": "LONG WINAPI phoneInitialize(LPHPHONEAPP lphPhoneApp,HINSTANCE hInstance,PHONECALLBACK lpfnCallback,LPCSTR lpszAppName,LPDWORD lpdwNumDevs);", "phoneInitializeExA": "LONG WINAPI phoneInitializeExA(LPHPHONEAPP lphPhoneApp,HINSTANCE hInstance,PHONECALLBACK lpfnCallback,LPCSTR lpszFriendlyAppName,LPDWORD lpdwNumDevs,LPDWORD lpdwAPIVersion,LPPHONEINITIALIZEEXPARAMS lpPhoneInitializeExParams);", "phoneInitializeExW": "LONG WINAPI phoneInitializeExW(LPHPHONEAPP lphPhoneApp,HINSTANCE hInstance,PHONECALLBACK lpfnCallback,LPCWSTR lpszFriendlyAppName,LPDWORD lpdwNumDevs,LPDWORD lpdwAPIVersion,LPPHONEINITIALIZEEXPARAMS lpPhoneInitializeExParams);", "phoneNegotiateAPIVersion": "LONG WINAPI phoneNegotiateAPIVersion(HPHONEAPP hPhoneApp,DWORD dwDeviceID,DWORD dwAPILowVersion,DWORD dwAPIHighVersion,LPDWORD lpdwAPIVersion,LPPHONEEXTENSIONID lpExtensionID);", "phoneNegotiateExtVersion": "LONG WINAPI phoneNegotiateExtVersion(HPHONEAPP hPhoneApp,DWORD dwDeviceID,DWORD dwAPIVersion,DWORD dwExtLowVersion,DWORD dwExtHighVersion,LPDWORD lpdwExtVersion);", "phoneOpen": "LONG WINAPI phoneOpen(HPHONEAPP hPhoneApp,DWORD dwDeviceID,LPHPHONE lphPhone,DWORD dwAPIVersion,DWORD dwExtVersion,DWORD_PTR dwCallbackInstance,DWORD dwPrivilege);", "phoneSetButtonInfo": "LONG WINAPI phoneSetButtonInfo(HPHONE hPhone,DWORD dwButtonLampID,LPPHONEBUTTONINFO const lpButtonInfo);", "phoneSetButtonInfoA": "LONG WINAPI phoneSetButtonInfoA(HPHONE hPhone,DWORD dwButtonLampID,LPPHONEBUTTONINFO const lpButtonInfo);", "phoneSetButtonInfoW": "LONG WINAPI phoneSetButtonInfoW(HPHONE hPhone,DWORD dwButtonLampID,LPPHONEBUTTONINFO const lpButtonInfo);", "phoneSetData": "LONG WINAPI phoneSetData(HPHONE hPhone,DWORD dwDataID,LPVOID const lpData,DWORD dwSize);", "phoneSetDisplay": "LONG WINAPI phoneSetDisplay(HPHONE hPhone,DWORD dwRow,DWORD dwColumn,LPCSTR lpsDisplay,DWORD dwSize);", "phoneSetGain": "LONG WINAPI phoneSetGain(HPHONE hPhone,DWORD dwHookSwitchDev,DWORD dwGain);", "phoneSetHookSwitch": "LONG WINAPI phoneSetHookSwitch(HPHONE hPhone,DWORD dwHookSwitchDevs,DWORD dwHookSwitchMode);", "phoneSetLamp": "LONG WINAPI phoneSetLamp(HPHONE hPhone,DWORD dwButtonLampID,DWORD dwLampMode);", "phoneSetRing": "LONG WINAPI phoneSetRing(HPHONE hPhone,DWORD dwRingMode,DWORD dwVolume);", "phoneSetStatusMessages": "LONG WINAPI phoneSetStatusMessages(HPHONE hPhone,DWORD dwPhoneStates,DWORD dwButtonModes,DWORD dwButtonStates);", "phoneSetVolume": "LONG WINAPI phoneSetVolume(HPHONE hPhone,DWORD dwHookSwitchDev,DWORD dwVolume);", "phoneShutdown": "LONG WINAPI phoneShutdown(HPHONEAPP hPhoneApp);", "tapiGetLocationInfo": "LONG WINAPI tapiGetLocationInfo(LPSTR lpszCountryCode,LPSTR lpszCityCode);", "tapiGetLocationInfoA": "LONG WINAPI tapiGetLocationInfoA(LPSTR lpszCountryCode,LPSTR lpszCityCode);", "tapiGetLocationInfoW": "LONG WINAPI tapiGetLocationInfoW(LPWSTR lpszCountryCodeW,LPWSTR lpszCityCodeW);", "tapiRequestDrop": "LONG WINAPI tapiRequestDrop(HWND hwnd,WPARAM wRequestID);", "tapiRequestMakeCall": "LONG WINAPI tapiRequestMakeCall(LPCSTR lpszDestAddress,LPCSTR lpszAppName,LPCSTR lpszCalledParty,LPCSTR lpszComment);", "tapiRequestMakeCallA": "LONG WINAPI tapiRequestMakeCallA(LPCSTR lpszDestAddress,LPCSTR lpszAppName,LPCSTR lpszCalledParty,LPCSTR lpszComment);", "tapiRequestMakeCallW": "LONG WINAPI tapiRequestMakeCallW(LPCWSTR lpszDestAddress,LPCWSTR lpszAppName,LPCWSTR lpszCalledParty,LPCWSTR lpszComment);", "tapiRequestMediaCall": "LONG WINAPI tapiRequestMediaCall(HWND hwnd,WPARAM wRequestID,LPCSTR lpszDeviceClass,LPCSTR lpDeviceID,DWORD dwSize,DWORD dwSecure,LPCSTR lpszDestAddress,LPCSTR lpszAppName,LPCSTR lpszCalledParty,LPCSTR lpszComment);", "tapiRequestMediaCallA": "LONG WINAPI tapiRequestMediaCallA(HWND hwnd,WPARAM wRequestID,LPCSTR lpszDeviceClass,LPCSTR lpDeviceID,DWORD dwSize,DWORD dwSecure,LPCSTR lpszDestAddress,LPCSTR lpszAppName,LPCSTR lpszCalledParty,LPCSTR lpszComment);", "tapiRequestMediaCallW": "LONG WINAPI tapiRequestMediaCallW(HWND hwnd,WPARAM wRequestID,LPCWSTR lpszDeviceClass,LPCWSTR lpDeviceID,DWORD dwSize,DWORD dwSecure,LPCWSTR lpszDestAddress,LPCWSTR lpszAppName,LPCWSTR lpszCalledParty,LPCWSTR lpszComment);", "IWamAdmin_AppCreate_Proxy": "HRESULT WINAPI IWamAdmin_AppCreate_Proxy(IWamAdmin *This,LPCWSTR szMDPath,WINBOOL fInProc);", "IWamAdmin_AppDelete_Proxy": "HRESULT WINAPI IWamAdmin_AppDelete_Proxy(IWamAdmin *This,LPCWSTR szMDPath,WINBOOL fRecursive);", "IWamAdmin_AppUnLoad_Proxy": "HRESULT WINAPI IWamAdmin_AppUnLoad_Proxy(IWamAdmin *This,LPCWSTR szMDPath,WINBOOL fRecursive);", "IWamAdmin_AppGetStatus_Proxy": "HRESULT WINAPI IWamAdmin_AppGetStatus_Proxy(IWamAdmin *This,LPCWSTR szMDPath,DWORD *pdwAppStatus);", "IWamAdmin_AppDeleteRecoverable_Proxy": "HRESULT WINAPI IWamAdmin_AppDeleteRecoverable_Proxy(IWamAdmin *This,LPCWSTR szMDPath,WINBOOL fRecursive);", "IWamAdmin_AppRecover_Proxy": "HRESULT WINAPI IWamAdmin_AppRecover_Proxy(IWamAdmin *This,LPCWSTR szMDPath,WINBOOL fRecursive);", "IWamAdmin2_AppCreate2_Proxy": "HRESULT WINAPI IWamAdmin2_AppCreate2_Proxy(IWamAdmin2 *This,LPCWSTR szMDPath,DWORD dwAppMode);", "IIISApplicationAdmin_CreateApplication_Proxy": "HRESULT WINAPI IIISApplicationAdmin_CreateApplication_Proxy(IIISApplicationAdmin *This,LPCWSTR szMDPath,DWORD dwAppMode,LPCWSTR szAppPoolId,WINBOOL fCreatePool);", "IIISApplicationAdmin_DeleteApplication_Proxy": "HRESULT WINAPI IIISApplicationAdmin_DeleteApplication_Proxy(IIISApplicationAdmin *This,LPCWSTR szMDPath,WINBOOL fRecursive);", "IIISApplicationAdmin_CreateApplicationPool_Proxy": "HRESULT WINAPI IIISApplicationAdmin_CreateApplicationPool_Proxy(IIISApplicationAdmin *This,LPCWSTR szPool);", "IIISApplicationAdmin_DeleteApplicationPool_Proxy": "HRESULT WINAPI IIISApplicationAdmin_DeleteApplicationPool_Proxy(IIISApplicationAdmin *This,LPCWSTR szPool);", "IIISApplicationAdmin_EnumerateApplicationsInPool_Proxy": "HRESULT WINAPI IIISApplicationAdmin_EnumerateApplicationsInPool_Proxy(IIISApplicationAdmin *This,LPCWSTR szPool,BSTR *bstrBuffer);", "IIISApplicationAdmin_RecycleApplicationPool_Proxy": "HRESULT WINAPI IIISApplicationAdmin_RecycleApplicationPool_Proxy(IIISApplicationAdmin *This,LPCWSTR szPool);", "IIISApplicationAdmin_GetProcessMode_Proxy": "HRESULT WINAPI IIISApplicationAdmin_GetProcessMode_Proxy(IIISApplicationAdmin *This,DWORD *pdwMode);", "ISnapinProperties_Initialize_Proxy": "HRESULT WINAPI ISnapinProperties_Initialize_Proxy(ISnapinProperties *This,Properties *pProperties);", "ISnapinProperties_QueryPropertyNames_Proxy": "HRESULT WINAPI ISnapinProperties_QueryPropertyNames_Proxy(ISnapinProperties *This,ISnapinPropertiesCallback *pCallback);", "ISnapinProperties_PropertiesChanged_Proxy": "HRESULT WINAPI ISnapinProperties_PropertiesChanged_Proxy(ISnapinProperties *This,__LONG32 cProperties,MMC_SNAPIN_PROPERTY *pProperties);", "ISnapinPropertiesCallback_AddPropertyName_Proxy": "HRESULT WINAPI ISnapinPropertiesCallback_AddPropertyName_Proxy(ISnapinPropertiesCallback *This,LPCOLESTR pszPropName,DWORD dwFlags);", "_Application_Help_Proxy": "void WINAPI _Application_Help_Proxy(_Application *This);", "_Application_Quit_Proxy": "void WINAPI _Application_Quit_Proxy(_Application *This);", "_Application_get_Document_Proxy": "HRESULT WINAPI _Application_get_Document_Proxy(_Application *This,PPDOCUMENT Document);", "_Application_Load_Proxy": "HRESULT WINAPI _Application_Load_Proxy(_Application *This,BSTR Filename);", "_Application_get_Frame_Proxy": "HRESULT WINAPI _Application_get_Frame_Proxy(_Application *This,PPFRAME Frame);", "_Application_get_Visible_Proxy": "HRESULT WINAPI _Application_get_Visible_Proxy(_Application *This,PBOOL Visible);", "_Application_Show_Proxy": "HRESULT WINAPI _Application_Show_Proxy(_Application *This);", "_Application_Hide_Proxy": "HRESULT WINAPI _Application_Hide_Proxy(_Application *This);", "_Application_get_UserControl_Proxy": "HRESULT WINAPI _Application_get_UserControl_Proxy(_Application *This,PBOOL UserControl);", "_Application_put_UserControl_Proxy": "HRESULT WINAPI _Application_put_UserControl_Proxy(_Application *This,WINBOOL UserControl);", "_Application_get_VersionMajor_Proxy": "HRESULT WINAPI _Application_get_VersionMajor_Proxy(_Application *This,PLONG VersionMajor);", "_Application_get_VersionMinor_Proxy": "HRESULT WINAPI _Application_get_VersionMinor_Proxy(_Application *This,PLONG VersionMinor);", "_AppEvents_OnQuit_Proxy": "HRESULT WINAPI _AppEvents_OnQuit_Proxy(_AppEvents *This,PAPPLICATION Application);", "_AppEvents_OnDocumentOpen_Proxy": "HRESULT WINAPI _AppEvents_OnDocumentOpen_Proxy(_AppEvents *This,PDOCUMENT Document,WINBOOL New);", "_AppEvents_OnDocumentClose_Proxy": "HRESULT WINAPI _AppEvents_OnDocumentClose_Proxy(_AppEvents *This,PDOCUMENT Document);", "_AppEvents_OnSnapInAdded_Proxy": "HRESULT WINAPI _AppEvents_OnSnapInAdded_Proxy(_AppEvents *This,PDOCUMENT Document,PSNAPIN SnapIn);", "_AppEvents_OnSnapInRemoved_Proxy": "HRESULT WINAPI _AppEvents_OnSnapInRemoved_Proxy(_AppEvents *This,PDOCUMENT Document,PSNAPIN SnapIn);", "_AppEvents_OnNewView_Proxy": "HRESULT WINAPI _AppEvents_OnNewView_Proxy(_AppEvents *This,PVIEW View);", "_AppEvents_OnViewClose_Proxy": "HRESULT WINAPI _AppEvents_OnViewClose_Proxy(_AppEvents *This,PVIEW View);", "_AppEvents_OnViewChange_Proxy": "HRESULT WINAPI _AppEvents_OnViewChange_Proxy(_AppEvents *This,PVIEW View,PNODE NewOwnerNode);", "_AppEvents_OnSelectionChange_Proxy": "HRESULT WINAPI _AppEvents_OnSelectionChange_Proxy(_AppEvents *This,PVIEW View,PNODES NewNodes);", "_AppEvents_OnContextMenuExecuted_Proxy": "HRESULT WINAPI _AppEvents_OnContextMenuExecuted_Proxy(_AppEvents *This,PMENUITEM MenuItem);", "_AppEvents_OnToolbarButtonClicked_Proxy": "HRESULT WINAPI _AppEvents_OnToolbarButtonClicked_Proxy(_AppEvents *This);", "_AppEvents_OnListUpdated_Proxy": "HRESULT WINAPI _AppEvents_OnListUpdated_Proxy(_AppEvents *This,PVIEW View);", "_EventConnector_ConnectTo_Proxy": "HRESULT WINAPI _EventConnector_ConnectTo_Proxy(_EventConnector *This,PAPPLICATION Application);", "_EventConnector_Disconnect_Proxy": "HRESULT WINAPI _EventConnector_Disconnect_Proxy(_EventConnector *This);", "Frame_Maximize_Proxy": "HRESULT WINAPI Frame_Maximize_Proxy(Frame *This);", "Frame_Minimize_Proxy": "HRESULT WINAPI Frame_Minimize_Proxy(Frame *This);", "Frame_Restore_Proxy": "HRESULT WINAPI Frame_Restore_Proxy(Frame *This);", "Frame_get_Top_Proxy": "HRESULT WINAPI Frame_get_Top_Proxy(Frame *This,PINT Top);", "Frame_put_Top_Proxy": "HRESULT WINAPI Frame_put_Top_Proxy(Frame *This,int top);", "Frame_get_Bottom_Proxy": "HRESULT WINAPI Frame_get_Bottom_Proxy(Frame *This,PINT Bottom);", "Frame_put_Bottom_Proxy": "HRESULT WINAPI Frame_put_Bottom_Proxy(Frame *This,int bottom);", "Frame_get_Left_Proxy": "HRESULT WINAPI Frame_get_Left_Proxy(Frame *This,PINT Left);", "Frame_put_Left_Proxy": "HRESULT WINAPI Frame_put_Left_Proxy(Frame *This,int left);", "Frame_get_Right_Proxy": "HRESULT WINAPI Frame_get_Right_Proxy(Frame *This,PINT Right);", "Frame_put_Right_Proxy": "HRESULT WINAPI Frame_put_Right_Proxy(Frame *This,int right);", "Node_get_Name_Proxy": "HRESULT WINAPI Node_get_Name_Proxy(Node *This,PBSTR Name);", "Node_get_Property_Proxy": "HRESULT WINAPI Node_get_Property_Proxy(Node *This,BSTR PropertyName,PBSTR PropertyValue);", "Node_get_Bookmark_Proxy": "HRESULT WINAPI Node_get_Bookmark_Proxy(Node *This,PBSTR Bookmark);", "Node_IsScopeNode_Proxy": "HRESULT WINAPI Node_IsScopeNode_Proxy(Node *This,PBOOL IsScopeNode);", "Node_get_Nodetype_Proxy": "HRESULT WINAPI Node_get_Nodetype_Proxy(Node *This,PBSTR Nodetype);", "ScopeNamespace_GetParent_Proxy": "HRESULT WINAPI ScopeNamespace_GetParent_Proxy(ScopeNamespace *This,PNODE Node,PPNODE Parent);", "ScopeNamespace_GetChild_Proxy": "HRESULT WINAPI ScopeNamespace_GetChild_Proxy(ScopeNamespace *This,PNODE Node,PPNODE Child);", "ScopeNamespace_GetNext_Proxy": "HRESULT WINAPI ScopeNamespace_GetNext_Proxy(ScopeNamespace *This,PNODE Node,PPNODE Next);", "ScopeNamespace_GetRoot_Proxy": "HRESULT WINAPI ScopeNamespace_GetRoot_Proxy(ScopeNamespace *This,PPNODE Root);", "ScopeNamespace_Expand_Proxy": "HRESULT WINAPI ScopeNamespace_Expand_Proxy(ScopeNamespace *This,PNODE Node);", "Document_Save_Proxy": "HRESULT WINAPI Document_Save_Proxy(Document *This);", "Document_SaveAs_Proxy": "HRESULT WINAPI Document_SaveAs_Proxy(Document *This,BSTR Filename);", "Document_Close_Proxy": "HRESULT WINAPI Document_Close_Proxy(Document *This,WINBOOL SaveChanges);", "Document_get_Views_Proxy": "HRESULT WINAPI Document_get_Views_Proxy(Document *This,PPVIEWS Views);", "Document_get_SnapIns_Proxy": "HRESULT WINAPI Document_get_SnapIns_Proxy(Document *This,PPSNAPINS SnapIns);", "Document_get_ActiveView_Proxy": "HRESULT WINAPI Document_get_ActiveView_Proxy(Document *This,PPVIEW View);", "Document_get_Name_Proxy": "HRESULT WINAPI Document_get_Name_Proxy(Document *This,PBSTR Name);", "Document_put_Name_Proxy": "HRESULT WINAPI Document_put_Name_Proxy(Document *This,BSTR Name);", "Document_get_Location_Proxy": "HRESULT WINAPI Document_get_Location_Proxy(Document *This,PBSTR Location);", "Document_get_IsSaved_Proxy": "HRESULT WINAPI Document_get_IsSaved_Proxy(Document *This,PBOOL IsSaved);", "Document_get_Mode_Proxy": "HRESULT WINAPI Document_get_Mode_Proxy(Document *This,PDOCUMENTMODE Mode);", "Document_put_Mode_Proxy": "HRESULT WINAPI Document_put_Mode_Proxy(Document *This,DOCUMENTMODE Mode);", "Document_get_RootNode_Proxy": "HRESULT WINAPI Document_get_RootNode_Proxy(Document *This,PPNODE Node);", "Document_get_ScopeNamespace_Proxy": "HRESULT WINAPI Document_get_ScopeNamespace_Proxy(Document *This,PPSCOPENAMESPACE ScopeNamespace);", "Document_CreateProperties_Proxy": "HRESULT WINAPI Document_CreateProperties_Proxy(Document *This,PPPROPERTIES Properties);", "Document_get_Application_Proxy": "HRESULT WINAPI Document_get_Application_Proxy(Document *This,PPAPPLICATION Application);", "SnapIn_get_Name_Proxy": "HRESULT WINAPI SnapIn_get_Name_Proxy(SnapIn *This,PBSTR Name);", "SnapIn_get_Vendor_Proxy": "HRESULT WINAPI SnapIn_get_Vendor_Proxy(SnapIn *This,PBSTR Vendor);", "SnapIn_get_Version_Proxy": "HRESULT WINAPI SnapIn_get_Version_Proxy(SnapIn *This,PBSTR Version);", "SnapIn_get_Extensions_Proxy": "HRESULT WINAPI SnapIn_get_Extensions_Proxy(SnapIn *This,PPEXTENSIONS Extensions);", "SnapIn_get_SnapinCLSID_Proxy": "HRESULT WINAPI SnapIn_get_SnapinCLSID_Proxy(SnapIn *This,PBSTR SnapinCLSID);", "SnapIn_get_Properties_Proxy": "HRESULT WINAPI SnapIn_get_Properties_Proxy(SnapIn *This,PPPROPERTIES Properties);", "SnapIn_EnableAllExtensions_Proxy": "HRESULT WINAPI SnapIn_EnableAllExtensions_Proxy(SnapIn *This,WINBOOL Enable);", "SnapIns_get__NewEnum_Proxy": "HRESULT WINAPI SnapIns_get__NewEnum_Proxy(SnapIns *This,IUnknown **retval);", "SnapIns_Item_Proxy": "HRESULT WINAPI SnapIns_Item_Proxy(SnapIns *This,__LONG32 Index,PPSNAPIN SnapIn);", "SnapIns_get_Count_Proxy": "HRESULT WINAPI SnapIns_get_Count_Proxy(SnapIns *This,PLONG Count);", "SnapIns_Add_Proxy": "HRESULT WINAPI SnapIns_Add_Proxy(SnapIns *This,BSTR SnapinNameOrCLSID,VARIANT ParentSnapin,VARIANT Properties,PPSNAPIN SnapIn);", "SnapIns_Remove_Proxy": "HRESULT WINAPI SnapIns_Remove_Proxy(SnapIns *This,PSNAPIN SnapIn);", "Extension_get_Name_Proxy": "HRESULT WINAPI Extension_get_Name_Proxy(Extension *This,PBSTR Name);", "Extension_get_Vendor_Proxy": "HRESULT WINAPI Extension_get_Vendor_Proxy(Extension *This,PBSTR Vendor);", "Extension_get_Version_Proxy": "HRESULT WINAPI Extension_get_Version_Proxy(Extension *This,PBSTR Version);", "Extension_get_Extensions_Proxy": "HRESULT WINAPI Extension_get_Extensions_Proxy(Extension *This,PPEXTENSIONS Extensions);", "Extension_get_SnapinCLSID_Proxy": "HRESULT WINAPI Extension_get_SnapinCLSID_Proxy(Extension *This,PBSTR SnapinCLSID);", "Extension_EnableAllExtensions_Proxy": "HRESULT WINAPI Extension_EnableAllExtensions_Proxy(Extension *This,WINBOOL Enable);", "Extension_Enable_Proxy": "HRESULT WINAPI Extension_Enable_Proxy(Extension *This,WINBOOL Enable);", "Extensions_get__NewEnum_Proxy": "HRESULT WINAPI Extensions_get__NewEnum_Proxy(Extensions *This,IUnknown **retval);", "Extensions_Item_Proxy": "HRESULT WINAPI Extensions_Item_Proxy(Extensions *This,__LONG32 Index,PPEXTENSION Extension);", "Extensions_get_Count_Proxy": "HRESULT WINAPI Extensions_get_Count_Proxy(Extensions *This,PLONG Count);", "Columns_Item_Proxy": "HRESULT WINAPI Columns_Item_Proxy(Columns *This,__LONG32 Index,PPCOLUMN Column);", "Columns_get_Count_Proxy": "HRESULT WINAPI Columns_get_Count_Proxy(Columns *This,PLONG Count);", "Columns_get__NewEnum_Proxy": "HRESULT WINAPI Columns_get__NewEnum_Proxy(Columns *This,IUnknown **retval);", "Column_Name_Proxy": "HRESULT WINAPI Column_Name_Proxy(Column *This,BSTR *Name);", "Column_get_Width_Proxy": "HRESULT WINAPI Column_get_Width_Proxy(Column *This,PLONG Width);", "Column_put_Width_Proxy": "HRESULT WINAPI Column_put_Width_Proxy(Column *This,__LONG32 Width);", "Column_get_DisplayPosition_Proxy": "HRESULT WINAPI Column_get_DisplayPosition_Proxy(Column *This,PLONG DisplayPosition);", "Column_put_DisplayPosition_Proxy": "HRESULT WINAPI Column_put_DisplayPosition_Proxy(Column *This,__LONG32 Index);", "Column_get_Hidden_Proxy": "HRESULT WINAPI Column_get_Hidden_Proxy(Column *This,PBOOL Hidden);", "Column_put_Hidden_Proxy": "HRESULT WINAPI Column_put_Hidden_Proxy(Column *This,WINBOOL Hidden);", "Column_SetAsSortColumn_Proxy": "HRESULT WINAPI Column_SetAsSortColumn_Proxy(Column *This,COLUMNSORTORDER SortOrder);", "Column_IsSortColumn_Proxy": "HRESULT WINAPI Column_IsSortColumn_Proxy(Column *This,PBOOL IsSortColumn);", "Views_Item_Proxy": "HRESULT WINAPI Views_Item_Proxy(Views *This,__LONG32 Index,PPVIEW View);", "Views_get_Count_Proxy": "HRESULT WINAPI Views_get_Count_Proxy(Views *This,PLONG Count);", "Views_Add_Proxy": "HRESULT WINAPI Views_Add_Proxy(Views *This,PNODE Node,VIEWOPTIONS viewOptions);", "Views_get__NewEnum_Proxy": "HRESULT WINAPI Views_get__NewEnum_Proxy(Views *This,IUnknown **retval);", "View_get_ActiveScopeNode_Proxy": "HRESULT WINAPI View_get_ActiveScopeNode_Proxy(View *This,PPNODE Node);", "View_put_ActiveScopeNode_Proxy": "HRESULT WINAPI View_put_ActiveScopeNode_Proxy(View *This,PNODE Node);", "View_get_Selection_Proxy": "HRESULT WINAPI View_get_Selection_Proxy(View *This,PPNODES Nodes);", "View_get_ListItems_Proxy": "HRESULT WINAPI View_get_ListItems_Proxy(View *This,PPNODES Nodes);", "View_SnapinScopeObject_Proxy": "HRESULT WINAPI View_SnapinScopeObject_Proxy(View *This,VARIANT ScopeNode,PPDISPATCH ScopeNodeObject);", "View_SnapinSelectionObject_Proxy": "HRESULT WINAPI View_SnapinSelectionObject_Proxy(View *This,PPDISPATCH SelectionObject);", "View_Is_Proxy": "HRESULT WINAPI View_Is_Proxy(View *This,PVIEW View,VARIANT_BOOL *TheSame);", "View_get_Document_Proxy": "HRESULT WINAPI View_get_Document_Proxy(View *This,PPDOCUMENT Document);", "View_SelectAll_Proxy": "HRESULT WINAPI View_SelectAll_Proxy(View *This);", "View_Select_Proxy": "HRESULT WINAPI View_Select_Proxy(View *This,PNODE Node);", "View_Deselect_Proxy": "HRESULT WINAPI View_Deselect_Proxy(View *This,PNODE Node);", "View_IsSelected_Proxy": "HRESULT WINAPI View_IsSelected_Proxy(View *This,PNODE Node,PBOOL IsSelected);", "View_DisplayScopeNodePropertySheet_Proxy": "HRESULT WINAPI View_DisplayScopeNodePropertySheet_Proxy(View *This,VARIANT ScopeNode);", "View_DisplaySelectionPropertySheet_Proxy": "HRESULT WINAPI View_DisplaySelectionPropertySheet_Proxy(View *This);", "View_CopyScopeNode_Proxy": "HRESULT WINAPI View_CopyScopeNode_Proxy(View *This,VARIANT ScopeNode);", "View_CopySelection_Proxy": "HRESULT WINAPI View_CopySelection_Proxy(View *This);", "View_DeleteScopeNode_Proxy": "HRESULT WINAPI View_DeleteScopeNode_Proxy(View *This,VARIANT ScopeNode);", "View_DeleteSelection_Proxy": "HRESULT WINAPI View_DeleteSelection_Proxy(View *This);", "View_RenameScopeNode_Proxy": "HRESULT WINAPI View_RenameScopeNode_Proxy(View *This,BSTR NewName,VARIANT ScopeNode);", "View_RenameSelectedItem_Proxy": "HRESULT WINAPI View_RenameSelectedItem_Proxy(View *This,BSTR NewName);", "View_get_ScopeNodeContextMenu_Proxy": "HRESULT WINAPI View_get_ScopeNodeContextMenu_Proxy(View *This,VARIANT ScopeNode,PPCONTEXTMENU ContextMenu);", "View_get_SelectionContextMenu_Proxy": "HRESULT WINAPI View_get_SelectionContextMenu_Proxy(View *This,PPCONTEXTMENU ContextMenu);", "View_RefreshScopeNode_Proxy": "HRESULT WINAPI View_RefreshScopeNode_Proxy(View *This,VARIANT ScopeNode);", "View_RefreshSelection_Proxy": "HRESULT WINAPI View_RefreshSelection_Proxy(View *This);", "View_ExecuteSelectionMenuItem_Proxy": "HRESULT WINAPI View_ExecuteSelectionMenuItem_Proxy(View *This,BSTR MenuItemPath);", "View_ExecuteScopeNodeMenuItem_Proxy": "HRESULT WINAPI View_ExecuteScopeNodeMenuItem_Proxy(View *This,BSTR MenuItemPath,VARIANT ScopeNode);", "View_ExecuteShellCommand_Proxy": "HRESULT WINAPI View_ExecuteShellCommand_Proxy(View *This,BSTR Command,BSTR Directory,BSTR Parameters,BSTR WindowState);", "View_get_Frame_Proxy": "HRESULT WINAPI View_get_Frame_Proxy(View *This,PPFRAME Frame);", "View_Close_Proxy": "HRESULT WINAPI View_Close_Proxy(View *This);", "View_get_ScopeTreeVisible_Proxy": "HRESULT WINAPI View_get_ScopeTreeVisible_Proxy(View *This,PBOOL Visible);", "View_put_ScopeTreeVisible_Proxy": "HRESULT WINAPI View_put_ScopeTreeVisible_Proxy(View *This,WINBOOL Visible);", "View_Back_Proxy": "HRESULT WINAPI View_Back_Proxy(View *This);", "View_Forward_Proxy": "HRESULT WINAPI View_Forward_Proxy(View *This);", "View_put_StatusBarText_Proxy": "HRESULT WINAPI View_put_StatusBarText_Proxy(View *This,BSTR StatusBarText);", "View_get_Memento_Proxy": "HRESULT WINAPI View_get_Memento_Proxy(View *This,PBSTR Memento);", "View_ViewMemento_Proxy": "HRESULT WINAPI View_ViewMemento_Proxy(View *This,BSTR Memento);", "View_get_Columns_Proxy": "HRESULT WINAPI View_get_Columns_Proxy(View *This,PPCOLUMNS Columns);", "View_get_CellContents_Proxy": "HRESULT WINAPI View_get_CellContents_Proxy(View *This,PNODE Node,__LONG32 Column,PBSTR CellContents);", "View_ExportList_Proxy": "HRESULT WINAPI View_ExportList_Proxy(View *This,BSTR File,EXPORTLISTOPTIONS exportoptions);", "View_get_ListViewMode_Proxy": "HRESULT WINAPI View_get_ListViewMode_Proxy(View *This,PLISTVIEWMODE Mode);", "View_put_ListViewMode_Proxy": "HRESULT WINAPI View_put_ListViewMode_Proxy(View *This,LISTVIEWMODE mode);", "View_get_ControlObject_Proxy": "HRESULT WINAPI View_get_ControlObject_Proxy(View *This,PPDISPATCH Control);", "Nodes_get__NewEnum_Proxy": "HRESULT WINAPI Nodes_get__NewEnum_Proxy(Nodes *This,IUnknown **retval);", "Nodes_Item_Proxy": "HRESULT WINAPI Nodes_Item_Proxy(Nodes *This,__LONG32 Index,PPNODE Node);", "Nodes_get_Count_Proxy": "HRESULT WINAPI Nodes_get_Count_Proxy(Nodes *This,PLONG Count);", "ContextMenu_get__NewEnum_Proxy": "HRESULT WINAPI ContextMenu_get__NewEnum_Proxy(ContextMenu *This,IUnknown **retval);", "ContextMenu_get_Item_Proxy": "HRESULT WINAPI ContextMenu_get_Item_Proxy(ContextMenu *This,VARIANT IndexOrPath,PPMENUITEM MenuItem);", "ContextMenu_get_Count_Proxy": "HRESULT WINAPI ContextMenu_get_Count_Proxy(ContextMenu *This,PLONG Count);", "MenuItem_get_DisplayName_Proxy": "HRESULT WINAPI MenuItem_get_DisplayName_Proxy(MenuItem *This,PBSTR DisplayName);", "MenuItem_get_LanguageIndependentName_Proxy": "HRESULT WINAPI MenuItem_get_LanguageIndependentName_Proxy(MenuItem *This,PBSTR LanguageIndependentName);", "MenuItem_get_Path_Proxy": "HRESULT WINAPI MenuItem_get_Path_Proxy(MenuItem *This,PBSTR Path);", "MenuItem_get_LanguageIndependentPath_Proxy": "HRESULT WINAPI MenuItem_get_LanguageIndependentPath_Proxy(MenuItem *This,PBSTR LanguageIndependentPath);", "MenuItem_Execute_Proxy": "HRESULT WINAPI MenuItem_Execute_Proxy(MenuItem *This);", "MenuItem_get_Enabled_Proxy": "HRESULT WINAPI MenuItem_get_Enabled_Proxy(MenuItem *This,PBOOL Enabled);", "Properties_get__NewEnum_Proxy": "HRESULT WINAPI Properties_get__NewEnum_Proxy(Properties *This,IUnknown **retval);", "Properties_Item_Proxy": "HRESULT WINAPI Properties_Item_Proxy(Properties *This,BSTR Name,PPPROPERTY Property);", "Properties_get_Count_Proxy": "HRESULT WINAPI Properties_get_Count_Proxy(Properties *This,PLONG Count);", "Properties_Remove_Proxy": "HRESULT WINAPI Properties_Remove_Proxy(Properties *This,BSTR Name);", "Property_get_Value_Proxy": "HRESULT WINAPI Property_get_Value_Proxy(Property *This,PVARIANT Value);", "Property_put_Value_Proxy": "HRESULT WINAPI Property_put_Value_Proxy(Property *This,VARIANT Value);", "Property_get_Name_Proxy": "HRESULT WINAPI Property_get_Name_Proxy(Property *This,PBSTR Name);", "QueryPerformanceCounter": "WINBASEAPI WINBOOL WINAPI QueryPerformanceCounter (LARGE_INTEGER *lpPerformanceCount);", "QueryPerformanceFrequency": "WINBASEAPI WINBOOL WINAPI QueryPerformanceFrequency (LARGE_INTEGER *lpFrequency);", "LocalAlloc": "WINBASEAPI HLOCAL WINAPI LocalAlloc (UINT uFlags, SIZE_T uBytes);", "LocalFree": "WINBASEAPI HLOCAL WINAPI LocalFree (HLOCAL hMem);", "WinMain": "int WINAPI WinMain (HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nShowCmd);", "wWinMain": "int WINAPI wWinMain (HINSTANCE hInstance, HINSTANCE hPrevInstance, LPWSTR lpCmdLine, int nShowCmd);", "GlobalFlags": "WINBASEAPI UINT WINAPI GlobalFlags (HGLOBAL hMem);", "GlobalHandle": "WINBASEAPI HGLOBAL WINAPI GlobalHandle (LPCVOID pMem);", "GlobalCompact": "WINBASEAPI SIZE_T WINAPI GlobalCompact (DWORD dwMinFree);", "GlobalFix": "WINBASEAPI VOID WINAPI GlobalFix (HGLOBAL hMem);", "GlobalUnfix": "WINBASEAPI VOID WINAPI GlobalUnfix (HGLOBAL hMem);", "GlobalWire": "WINBASEAPI LPVOID WINAPI GlobalWire (HGLOBAL hMem);", "GlobalUnWire": "WINBASEAPI WINBOOL WINAPI GlobalUnWire (HGLOBAL hMem);", "GlobalMemoryStatus": "WINBASEAPI VOID WINAPI GlobalMemoryStatus (LPMEMORYSTATUS lpBuffer);", "LocalLock": "WINBASEAPI LPVOID WINAPI LocalLock (HLOCAL hMem);", "LocalHandle": "WINBASEAPI HLOCAL WINAPI LocalHandle (LPCVOID pMem);", "LocalUnlock": "WINBASEAPI WINBOOL WINAPI LocalUnlock (HLOCAL hMem);", "LocalSize": "WINBASEAPI SIZE_T WINAPI LocalSize (HLOCAL hMem);", "LocalFlags": "WINBASEAPI UINT WINAPI LocalFlags (HLOCAL hMem);", "LocalShrink": "WINBASEAPI SIZE_T WINAPI LocalShrink (HLOCAL hMem, UINT cbNewSize);", "LocalCompact": "WINBASEAPI SIZE_T WINAPI LocalCompact (UINT uMinFree);", "VirtualAllocExNuma": "WINBASEAPI LPVOID WINAPI VirtualAllocExNuma(HANDLE hProcess, LPVOID lpAddress, SIZE_T dwSize, DWORD flAllocationType, DWORD flProtect, DWORD nndPreferred);", "GetProcessorSystemCycleTime": "WINBASEAPI WINBOOL WINAPI GetProcessorSystemCycleTime (USHORT Group, PSYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION Buffer, PDWORD ReturnedLength);", "GetPhysicallyInstalledSystemMemory": "WINBASEAPI WINBOOL WINAPI GetPhysicallyInstalledSystemMemory (PULONGLONG TotalMemoryInKilobytes);", "GetBinaryTypeA": "WINBASEAPI WINBOOL WINAPI GetBinaryTypeA (LPCSTR lpApplicationName, LPDWORD lpBinaryType);", "GetBinaryTypeW": "WINBASEAPI WINBOOL WINAPI GetBinaryTypeW (LPCWSTR lpApplicationName, LPDWORD lpBinaryType);", "GetShortPathNameA": "WINBASEAPI DWORD WINAPI GetShortPathNameA (LPCSTR lpszLongPath, LPSTR lpszShortPath, DWORD cchBuffer);", "GetLongPathNameTransactedA": "WINBASEAPI DWORD WINAPI GetLongPathNameTransactedA (LPCSTR lpszShortPath, LPSTR lpszLongPath, DWORD cchBuffer, HANDLE hTransaction);", "GetLongPathNameTransactedW": "WINBASEAPI DWORD WINAPI GetLongPathNameTransactedW (LPCWSTR lpszShortPath, LPWSTR lpszLongPath, DWORD cchBuffer, HANDLE hTransaction);", "GetProcessIoCounters": "WINBASEAPI WINBOOL WINAPI GetProcessIoCounters (HANDLE hProcess, PIO_COUNTERS lpIoCounters);", "GetProcessWorkingSetSize": "WINBASEAPI WINBOOL WINAPI GetProcessWorkingSetSize (HANDLE hProcess, PSIZE_T lpMinimumWorkingSetSize, PSIZE_T lpMaximumWorkingSetSize);", "SetProcessWorkingSetSize": "WINBASEAPI WINBOOL WINAPI SetProcessWorkingSetSize (HANDLE hProcess, SIZE_T dwMinimumWorkingSetSize, SIZE_T dwMaximumWorkingSetSize);", "FatalExit": "WINBASEAPI VOID WINAPI FatalExit (int ExitCode);", "SetEnvironmentStringsA": "WINBASEAPI WINBOOL WINAPI SetEnvironmentStringsA (LPCH NewEnvironment);", "GlobalAlloc": "WINBASEAPI HGLOBAL WINAPI GlobalAlloc (UINT uFlags, SIZE_T dwBytes);", "GlobalReAlloc": "WINBASEAPI HGLOBAL WINAPI GlobalReAlloc (HGLOBAL hMem, SIZE_T dwBytes, UINT uFlags);", "GlobalSize": "WINBASEAPI SIZE_T WINAPI GlobalSize (HGLOBAL hMem);", "GlobalLock": "WINBASEAPI LPVOID WINAPI GlobalLock (HGLOBAL hMem);", "GlobalUnlock": "WINBASEAPI WINBOOL WINAPI GlobalUnlock (HGLOBAL hMem);", "GlobalFree": "WINBASEAPI HGLOBAL WINAPI GlobalFree (HGLOBAL hMem);", "LocalReAlloc": "WINBASEAPI HLOCAL WINAPI LocalReAlloc (HLOCAL hMem, SIZE_T uBytes, UINT uFlags);", "GetProcessAffinityMask": "WINBASEAPI WINBOOL WINAPI GetProcessAffinityMask (HANDLE hProcess, PDWORD_PTR lpProcessAffinityMask, PDWORD_PTR lpSystemAffinityMask);", "SetProcessAffinityMask": "WINBASEAPI WINBOOL WINAPI SetProcessAffinityMask (HANDLE hProcess, DWORD_PTR dwProcessAffinityMask);", "SetThreadAffinityMask": "WINBASEAPI DWORD_PTR WINAPI SetThreadAffinityMask (HANDLE hThread, DWORD_PTR dwThreadAffinityMask);", "RaiseFailFastException": "WINBASEAPI VOID WINAPI RaiseFailFastException (PEXCEPTION_RECORD pExceptionRecord, PCONTEXT pContextRecord, DWORD dwFlags);", "SetThreadIdealProcessor": "WINBASEAPI DWORD WINAPI SetThreadIdealProcessor (HANDLE hThread, DWORD dwIdealProcessor);", "CreateFiberEx": "WINBASEAPI LPVOID WINAPI CreateFiberEx (SIZE_T dwStackCommitSize, SIZE_T dwStackReserveSize, DWORD dwFlags, LPFIBER_START_ROUTINE lpStartAddress, LPVOID lpParameter);", "DeleteFiber": "WINBASEAPI VOID WINAPI DeleteFiber (LPVOID lpFiber);", "SwitchToFiber": "WINBASEAPI VOID WINAPI SwitchToFiber (LPVOID lpFiber);", "ConvertFiberToThread": "WINBASEAPI WINBOOL WINAPI ConvertFiberToThread (VOID);", "ConvertThreadToFiberEx": "WINBASEAPI LPVOID WINAPI ConvertThreadToFiberEx (LPVOID lpParameter, DWORD dwFlags);", "CreateFiber": "WINBASEAPI LPVOID WINAPI CreateFiber (SIZE_T dwStackSize, LPFIBER_START_ROUTINE lpStartAddress, LPVOID lpParameter);", "ConvertThreadToFiber": "WINBASEAPI LPVOID WINAPI ConvertThreadToFiber (LPVOID lpParameter);", "CreateUmsCompletionList": "WINBASEAPI WINBOOL WINAPI CreateUmsCompletionList(PUMS_COMPLETION_LIST *UmsCompletionList);", "DequeueUmsCompletionListItems": "WINBASEAPI WINBOOL WINAPI DequeueUmsCompletionListItems(PUMS_COMPLETION_LIST UmsCompletionList, DWORD WaitTimeOut, PUMS_CONTEXT *UmsThreadList);", "GetUmsCompletionListEvent": "WINBASEAPI WINBOOL WINAPI GetUmsCompletionListEvent(PUMS_COMPLETION_LIST UmsCompletionList, PHANDLE UmsCompletionEvent);", "ExecuteUmsThread": "WINBASEAPI WINBOOL WINAPI ExecuteUmsThread(PUMS_CONTEXT UmsThread);", "UmsThreadYield": "WINBASEAPI WINBOOL WINAPI UmsThreadYield(PVOID SchedulerParam);", "DeleteUmsCompletionList": "WINBASEAPI WINBOOL WINAPI DeleteUmsCompletionList(PUMS_COMPLETION_LIST UmsCompletionList);", "GetCurrentUmsThread": "WINBASEAPI PUMS_CONTEXT WINAPI GetCurrentUmsThread(VOID);", "GetNextUmsListItem": "WINBASEAPI PUMS_CONTEXT WINAPI GetNextUmsListItem(PUMS_CONTEXT UmsContext);", "QueryUmsThreadInformation": "WINBASEAPI WINBOOL WINAPI QueryUmsThreadInformation(PUMS_CONTEXT UmsThread, UMS_THREAD_INFO_CLASS UmsThreadInfoClass, PVOID UmsThreadInformation, ULONG UmsThreadInformationLength, PULONG ReturnLength);", "SetUmsThreadInformation": "WINBASEAPI WINBOOL WINAPI SetUmsThreadInformation(PUMS_CONTEXT UmsThread, UMS_THREAD_INFO_CLASS UmsThreadInfoClass, PVOID UmsThreadInformation, ULONG UmsThreadInformationLength);", "DeleteUmsThreadContext": "WINBASEAPI WINBOOL WINAPI DeleteUmsThreadContext(PUMS_CONTEXT UmsThread);", "CreateUmsThreadContext": "WINBASEAPI WINBOOL WINAPI CreateUmsThreadContext(PUMS_CONTEXT *lpUmsThread);", "EnterUmsSchedulingMode": "WINBASEAPI WINBOOL WINAPI EnterUmsSchedulingMode(PUMS_SCHEDULER_STARTUP_INFO SchedulerStartupInfo);", "GetUmsSystemThreadInformation": "WINBASEAPI WINBOOL WINAPI GetUmsSystemThreadInformation(HANDLE ThreadHandle, PUMS_SYSTEM_THREAD_INFORMATION SystemThreadInfo);", "GetThreadInformation": "WINBASEAPI WINBOOL WINAPI GetThreadInformation (HANDLE hThread, THREAD_INFORMATION_CLASS ThreadInformationClass, LPVOID ThreadInformation, DWORD ThreadInformationSize);", "SetProcessDEPPolicy": "WINBASEAPI WINBOOL WINAPI SetProcessDEPPolicy (DWORD dwFlags);", "GetProcessDEPPolicy": "WINBASEAPI WINBOOL WINAPI GetProcessDEPPolicy (HANDLE hProcess, LPDWORD lpFlags, PBOOL lpPermanent);", "RequestWakeupLatency": "WINBASEAPI WINBOOL WINAPI RequestWakeupLatency (LATENCY_TIME latency);", "IsSystemResumeAutomatic": "WINBASEAPI WINBOOL WINAPI IsSystemResumeAutomatic (VOID);", "GetThreadIOPendingFlag": "WINBASEAPI WINBOOL WINAPI GetThreadIOPendingFlag (HANDLE hThread, PBOOL lpIOIsPending);", "GetThreadSelectorEntry": "WINBASEAPI WINBOOL WINAPI GetThreadSelectorEntry (HANDLE hThread, DWORD dwSelector, LPLDT_ENTRY lpSelectorEntry);", "SetThreadExecutionState": "WINBASEAPI EXECUTION_STATE WINAPI SetThreadExecutionState (EXECUTION_STATE esFlags);", "PowerCreateRequest": "WINBASEAPI HANDLE WINAPI PowerCreateRequest (PREASON_CONTEXT Context);", "PowerSetRequest": "WINBASEAPI WINBOOL WINAPI PowerSetRequest (HANDLE PowerRequest, POWER_REQUEST_TYPE RequestType);", "PowerClearRequest": "WINBASEAPI WINBOOL WINAPI PowerClearRequest (HANDLE PowerRequest, POWER_REQUEST_TYPE RequestType);", "SetFileCompletionNotificationModes": "WINBASEAPI WINBOOL WINAPI SetFileCompletionNotificationModes (HANDLE FileHandle, UCHAR Flags);", "SetThreadInformation": "WINBASEAPI WINBOOL WINAPI SetThreadInformation (HANDLE hThread, THREAD_INFORMATION_CLASS ThreadInformationClass, LPVOID ThreadInformation, DWORD ThreadInformationSize);", "SetFileIoOverlappedRange": "WINBASEAPI WINBOOL WINAPI SetFileIoOverlappedRange (HANDLE FileHandle, PUCHAR OverlappedRangeStart, ULONG Length);", "Wow64GetThreadSelectorEntry": "WINBASEAPI WINBOOL WINAPI Wow64GetThreadSelectorEntry (HANDLE hThread, DWORD dwSelector, PWOW64_LDT_ENTRY lpSelectorEntry);", "DebugSetProcessKillOnExit": "WINBASEAPI WINBOOL WINAPI DebugSetProcessKillOnExit (WINBOOL KillOnExit);", "DebugBreakProcess": "WINBASEAPI WINBOOL WINAPI DebugBreakProcess (HANDLE Process);", "WaitForMultipleObjects": "WINBASEAPI DWORD WINAPI WaitForMultipleObjects (DWORD nCount, CONST HANDLE *lpHandles, WINBOOL bWaitAll, DWORD dwMilliseconds);", "PulseEvent": "WINBASEAPI WINBOOL WINAPI PulseEvent (HANDLE hEvent);", "GlobalDeleteAtom": "WINBASEAPI ATOM WINAPI GlobalDeleteAtom (ATOM nAtom);", "InitAtomTable": "WINBASEAPI WINBOOL WINAPI InitAtomTable (DWORD nSize);", "DeleteAtom": "WINBASEAPI ATOM WINAPI DeleteAtom (ATOM nAtom);", "SetHandleCount": "WINBASEAPI UINT WINAPI SetHandleCount (UINT uNumber);", "RequestDeviceWakeup": "WINBASEAPI WINBOOL WINAPI RequestDeviceWakeup (HANDLE hDevice);", "CancelDeviceWakeupRequest": "WINBASEAPI WINBOOL WINAPI CancelDeviceWakeupRequest (HANDLE hDevice);", "GetDevicePowerState": "WINBASEAPI WINBOOL WINAPI GetDevicePowerState (HANDLE hDevice, WINBOOL *pfOn);", "SetMessageWaitingIndicator": "WINBASEAPI WINBOOL WINAPI SetMessageWaitingIndicator (HANDLE hMsgIndicator, ULONG ulMsgCount);", "SetFileShortNameA": "WINBASEAPI WINBOOL WINAPI SetFileShortNameA (HANDLE hFile, LPCSTR lpShortName);", "SetFileShortNameW": "WINBASEAPI WINBOOL WINAPI SetFileShortNameW (HANDLE hFile, LPCWSTR lpShortName);", "LoadModule": "WINBASEAPI DWORD WINAPI LoadModule (LPCSTR lpModuleName, LPVOID lpParameterBlock);", "WinExec": "WINBASEAPI UINT WINAPI WinExec (LPCSTR lpCmdLine, UINT uCmdShow);", "SetTapePosition": "WINBASEAPI DWORD WINAPI SetTapePosition (HANDLE hDevice, DWORD dwPositionMethod, DWORD dwPartition, DWORD dwOffsetLow, DWORD dwOffsetHigh, WINBOOL bImmediate);", "GetTapePosition": "WINBASEAPI DWORD WINAPI GetTapePosition (HANDLE hDevice, DWORD dwPositionType, LPDWORD lpdwPartition, LPDWORD lpdwOffsetLow, LPDWORD lpdwOffsetHigh);", "PrepareTape": "WINBASEAPI DWORD WINAPI PrepareTape (HANDLE hDevice, DWORD dwOperation, WINBOOL bImmediate);", "EraseTape": "WINBASEAPI DWORD WINAPI EraseTape (HANDLE hDevice, DWORD dwEraseType, WINBOOL bImmediate);", "CreateTapePartition": "WINBASEAPI DWORD WINAPI CreateTapePartition (HANDLE hDevice, DWORD dwPartitionMethod, DWORD dwCount, DWORD dwSize);", "WriteTapemark": "WINBASEAPI DWORD WINAPI WriteTapemark (HANDLE hDevice, DWORD dwTapemarkType, DWORD dwTapemarkCount, WINBOOL bImmediate);", "GetTapeStatus": "WINBASEAPI DWORD WINAPI GetTapeStatus (HANDLE hDevice);", "GetTapeParameters": "WINBASEAPI DWORD WINAPI GetTapeParameters (HANDLE hDevice, DWORD dwOperation, LPDWORD lpdwSize, LPVOID lpTapeInformation);", "SetTapeParameters": "WINBASEAPI DWORD WINAPI SetTapeParameters (HANDLE hDevice, DWORD dwOperation, LPVOID lpTapeInformation);", "GetSystemDEPPolicy": "WINBASEAPI DEP_SYSTEM_POLICY_TYPE WINAPI GetSystemDEPPolicy (VOID);", "GetSystemRegistryQuota": "WINBASEAPI WINBOOL WINAPI GetSystemRegistryQuota (PDWORD pdwQuotaAllowed, PDWORD pdwQuotaUsed);", "FileTimeToDosDateTime": "WINBASEAPI WINBOOL WINAPI FileTimeToDosDateTime (CONST FILETIME *lpFileTime, LPWORD lpFatDate, LPWORD lpFatTime);", "DosDateTimeToFileTime": "WINBASEAPI WINBOOL WINAPI DosDateTimeToFileTime (WORD wFatDate, WORD wFatTime, LPFILETIME lpFileTime);", "SetSystemTimeAdjustment": "WINBASEAPI WINBOOL WINAPI SetSystemTimeAdjustment (DWORD dwTimeAdjustment, WINBOOL bTimeAdjustmentDisabled);", "GetThreadErrorMode": "WINBASEAPI DWORD WINAPI GetThreadErrorMode (VOID);", "SetThreadErrorMode": "WINBASEAPI WINBOOL WINAPI SetThreadErrorMode (DWORD dwNewMode, LPDWORD lpOldMode);", "ClearCommBreak": "WINBASEAPI WINBOOL WINAPI ClearCommBreak (HANDLE hFile);", "ClearCommError": "WINBASEAPI WINBOOL WINAPI ClearCommError (HANDLE hFile, LPDWORD lpErrors, LPCOMSTAT lpStat);", "SetupComm": "WINBASEAPI WINBOOL WINAPI SetupComm (HANDLE hFile, DWORD dwInQueue, DWORD dwOutQueue);", "EscapeCommFunction": "WINBASEAPI WINBOOL WINAPI EscapeCommFunction (HANDLE hFile, DWORD dwFunc);", "GetCommConfig": "WINBASEAPI WINBOOL WINAPI GetCommConfig (HANDLE hCommDev, LPCOMMCONFIG lpCC, LPDWORD lpdwSize);", "GetCommMask": "WINBASEAPI WINBOOL WINAPI GetCommMask (HANDLE hFile, LPDWORD lpEvtMask);", "GetCommProperties": "WINBASEAPI WINBOOL WINAPI GetCommProperties (HANDLE hFile, LPCOMMPROP lpCommProp);", "GetCommModemStatus": "WINBASEAPI WINBOOL WINAPI GetCommModemStatus (HANDLE hFile, LPDWORD lpModemStat);", "GetCommState": "WINBASEAPI WINBOOL WINAPI GetCommState (HANDLE hFile, LPDCB lpDCB);", "GetCommTimeouts": "WINBASEAPI WINBOOL WINAPI GetCommTimeouts (HANDLE hFile, LPCOMMTIMEOUTS lpCommTimeouts);", "PurgeComm": "WINBASEAPI WINBOOL WINAPI PurgeComm (HANDLE hFile, DWORD dwFlags);", "SetCommBreak": "WINBASEAPI WINBOOL WINAPI SetCommBreak (HANDLE hFile);", "SetCommConfig": "WINBASEAPI WINBOOL WINAPI SetCommConfig (HANDLE hCommDev, LPCOMMCONFIG lpCC, DWORD dwSize);", "SetCommMask": "WINBASEAPI WINBOOL WINAPI SetCommMask (HANDLE hFile, DWORD dwEvtMask);", "SetCommState": "WINBASEAPI WINBOOL WINAPI SetCommState (HANDLE hFile, LPDCB lpDCB);", "SetCommTimeouts": "WINBASEAPI WINBOOL WINAPI SetCommTimeouts (HANDLE hFile, LPCOMMTIMEOUTS lpCommTimeouts);", "TransmitCommChar": "WINBASEAPI WINBOOL WINAPI TransmitCommChar (HANDLE hFile, char cChar);", "WaitCommEvent": "WINBASEAPI WINBOOL WINAPI WaitCommEvent (HANDLE hFile, LPDWORD lpEvtMask, LPOVERLAPPED lpOverlapped);", "OpenCommPort": "WINBASEAPI HANDLE WINAPI OpenCommPort (ULONG uPortNumber, DWORD dwDesiredAccess, DWORD dwFlagsAndAttributes);", "GetCommPorts": "WINBASEAPI ULONG WINAPI GetCommPorts (PULONG lpPortNumbers, ULONG uPortNumbersCount, PULONG puPortNumbersFound);", "GetProcessPriorityBoost": "WINBASEAPI WINBOOL WINAPI GetProcessPriorityBoost (HANDLE hProcess, PBOOL pDisablePriorityBoost);", "SetProcessPriorityBoost": "WINBASEAPI WINBOOL WINAPI SetProcessPriorityBoost (HANDLE hProcess, WINBOOL bDisablePriorityBoost);", "MulDiv": "WINBASEAPI int WINAPI MulDiv (int nNumber, int nNumerator, int nDenominator);", "FormatMessageA": "WINBASEAPI DWORD WINAPI FormatMessageA (DWORD dwFlags, LPCVOID lpSource, DWORD dwMessageId, DWORD dwLanguageId, LPSTR lpBuffer, DWORD nSize, va_list *Arguments);", "FormatMessageW": "WINBASEAPI DWORD WINAPI FormatMessageW (DWORD dwFlags, LPCVOID lpSource, DWORD dwMessageId, DWORD dwLanguageId, LPWSTR lpBuffer, DWORD nSize, va_list *Arguments);", "GetNamedPipeInfo": "WINBASEAPI WINBOOL WINAPI GetNamedPipeInfo (HANDLE hNamedPipe, LPDWORD lpFlags, LPDWORD lpOutBufferSize, LPDWORD lpInBufferSize, LPDWORD lpMaxInstances);", "CreateMailslotA": "WINBASEAPI HANDLE WINAPI CreateMailslotA (LPCSTR lpName, DWORD nMaxMessageSize, DWORD lReadTimeout, LPSECURITY_ATTRIBUTES lpSecurityAttributes);", "CreateMailslotW": "WINBASEAPI HANDLE WINAPI CreateMailslotW (LPCWSTR lpName, DWORD nMaxMessageSize, DWORD lReadTimeout, LPSECURITY_ATTRIBUTES lpSecurityAttributes);", "GetMailslotInfo": "WINBASEAPI WINBOOL WINAPI GetMailslotInfo (HANDLE hMailslot, LPDWORD lpMaxMessageSize, LPDWORD lpNextSize, LPDWORD lpMessageCount, LPDWORD lpReadTimeout);", "SetMailslotInfo": "WINBASEAPI WINBOOL WINAPI SetMailslotInfo (HANDLE hMailslot, DWORD lReadTimeout);", "EncryptFileA": "WINADVAPI WINBOOL WINAPI EncryptFileA (LPCSTR lpFileName);", "EncryptFileW": "WINADVAPI WINBOOL WINAPI EncryptFileW (LPCWSTR lpFileName);", "DecryptFileA": "WINADVAPI WINBOOL WINAPI DecryptFileA (LPCSTR lpFileName, DWORD dwReserved);", "DecryptFileW": "WINADVAPI WINBOOL WINAPI DecryptFileW (LPCWSTR lpFileName, DWORD dwReserved);", "FileEncryptionStatusA": "WINADVAPI WINBOOL WINAPI FileEncryptionStatusA (LPCSTR lpFileName, LPDWORD lpStatus);", "FileEncryptionStatusW": "WINADVAPI WINBOOL WINAPI FileEncryptionStatusW (LPCWSTR lpFileName, LPDWORD lpStatus);", "OpenEncryptedFileRawA": "WINADVAPI DWORD WINAPI OpenEncryptedFileRawA (LPCSTR lpFileName, ULONG ulFlags, PVOID *pvContext);", "OpenEncryptedFileRawW": "WINADVAPI DWORD WINAPI OpenEncryptedFileRawW (LPCWSTR lpFileName, ULONG ulFlags, PVOID *pvContext);", "ReadEncryptedFileRaw": "WINADVAPI DWORD WINAPI ReadEncryptedFileRaw (PFE_EXPORT_FUNC pfExportCallback, PVOID pvCallbackContext, PVOID pvContext);", "WriteEncryptedFileRaw": "WINADVAPI DWORD WINAPI WriteEncryptedFileRaw (PFE_IMPORT_FUNC pfImportCallback, PVOID pvCallbackContext, PVOID pvContext);", "CloseEncryptedFileRaw": "WINADVAPI VOID WINAPI CloseEncryptedFileRaw (PVOID pvContext);", "lstrcmpA": "WINBASEAPI int WINAPI lstrcmpA (LPCSTR lpString1, LPCSTR lpString2);", "lstrcmpW": "WINBASEAPI int WINAPI lstrcmpW (LPCWSTR lpString1, LPCWSTR lpString2);", "lstrcmpiA": "WINBASEAPI int WINAPI lstrcmpiA (LPCSTR lpString1, LPCSTR lpString2);", "lstrcmpiW": "WINBASEAPI int WINAPI lstrcmpiW (LPCWSTR lpString1, LPCWSTR lpString2);", "lstrcpynA": "WINBASEAPI LPSTR WINAPI lstrcpynA (LPSTR lpString1, LPCSTR lpString2, int iMaxLength);", "lstrcpynW": "WINBASEAPI LPWSTR WINAPI lstrcpynW (LPWSTR lpString1, LPCWSTR lpString2, int iMaxLength);", "lstrcpyA": "WINBASEAPI LPSTR WINAPI lstrcpyA (LPSTR lpString1, LPCSTR lpString2);", "lstrcpyW": "WINBASEAPI LPWSTR WINAPI lstrcpyW (LPWSTR lpString1, LPCWSTR lpString2);", "lstrcatA": "WINBASEAPI LPSTR WINAPI lstrcatA (LPSTR lpString1, LPCSTR lpString2);", "lstrcatW": "WINBASEAPI LPWSTR WINAPI lstrcatW (LPWSTR lpString1, LPCWSTR lpString2);", "lstrlenA": "WINBASEAPI int WINAPI lstrlenA (LPCSTR lpString);", "lstrlenW": "WINBASEAPI int WINAPI lstrlenW (LPCWSTR lpString);", "OpenFile": "WINBASEAPI HFILE WINAPI OpenFile (LPCSTR lpFileName, LPOFSTRUCT lpReOpenBuff, UINT uStyle);", "_lopen": "WINBASEAPI HFILE WINAPI _lopen (LPCSTR lpPathName, int iReadWrite);", "_lcreat": "WINBASEAPI HFILE WINAPI _lcreat (LPCSTR lpPathName, int iAttribute);", "_lread": "WINBASEAPI UINT WINAPI _lread (HFILE hFile, LPVOID lpBuffer, UINT uBytes);", "_lwrite": "WINBASEAPI UINT WINAPI _lwrite (HFILE hFile, LPCCH lpBuffer, UINT uBytes);", "_hread": "WINBASEAPI __LONG32 WINAPI _hread (HFILE hFile, LPVOID lpBuffer, __LONG32 lBytes);", "_hwrite": "WINBASEAPI __LONG32 WINAPI _hwrite (HFILE hFile, LPCCH lpBuffer, __LONG32 lBytes);", "_lclose": "WINBASEAPI HFILE WINAPI _lclose (HFILE hFile);", "_llseek": "WINBASEAPI LONG WINAPI _llseek (HFILE hFile, LONG lOffset, int iOrigin);", "IsTextUnicode": "WINADVAPI WINBOOL WINAPI IsTextUnicode (CONST VOID *lpv, int iSize, LPINT lpiResult);", "SignalObjectAndWait": "WINBASEAPI DWORD WINAPI SignalObjectAndWait (HANDLE hObjectToSignal, HANDLE hObjectToWaitOn, DWORD dwMilliseconds, WINBOOL bAlertable);", "BackupRead": "WINBASEAPI WINBOOL WINAPI BackupRead (HANDLE hFile, LPBYTE lpBuffer, DWORD nNumberOfBytesToRead, LPDWORD lpNumberOfBytesRead, WINBOOL bAbort, WINBOOL bProcessSecurity, LPVOID *lpContext);", "BackupSeek": "WINBASEAPI WINBOOL WINAPI BackupSeek (HANDLE hFile, DWORD dwLowBytesToSeek, DWORD dwHighBytesToSeek, LPDWORD lpdwLowByteSeeked, LPDWORD lpdwHighByteSeeked, LPVOID *lpContext);", "BackupWrite": "WINBASEAPI WINBOOL WINAPI BackupWrite (HANDLE hFile, LPBYTE lpBuffer, DWORD nNumberOfBytesToWrite, LPDWORD lpNumberOfBytesWritten, WINBOOL bAbort, WINBOOL bProcessSecurity, LPVOID *lpContext);", "GetSystemTimes": "WINBOOL WINAPI GetSystemTimes (LPFILETIME lpIdleTime, LPFILETIME lpKernelTime, LPFILETIME lpUserTime);", "CreateSemaphoreW": "WINBASEAPI HANDLE WINAPI CreateSemaphoreW (LPSECURITY_ATTRIBUTES lpSemaphoreAttributes, LONG lInitialCount, LONG lMaximumCount, LPCWSTR lpName);", "CreateWaitableTimerW": "WINBASEAPI HANDLE WINAPI CreateWaitableTimerW (LPSECURITY_ATTRIBUTES lpTimerAttributes, WINBOOL bManualReset, LPCWSTR lpTimerName);", "OpenMutexA": "WINBASEAPI HANDLE WINAPI OpenMutexA (DWORD dwDesiredAccess, WINBOOL bInheritHandle, LPCSTR lpName);", "OpenSemaphoreA": "WINBASEAPI HANDLE WINAPI OpenSemaphoreA (DWORD dwDesiredAccess, WINBOOL bInheritHandle, LPCSTR lpName);", "CreateWaitableTimerA": "WINBASEAPI HANDLE WINAPI CreateWaitableTimerA (LPSECURITY_ATTRIBUTES lpTimerAttributes, WINBOOL bManualReset, LPCSTR lpTimerName);", "OpenWaitableTimerA": "WINBASEAPI HANDLE WINAPI OpenWaitableTimerA (DWORD dwDesiredAccess, WINBOOL bInheritHandle, LPCSTR lpTimerName);", "CreateFileMappingA": "WINBASEAPI HANDLE WINAPI CreateFileMappingA (HANDLE hFile, LPSECURITY_ATTRIBUTES lpFileMappingAttributes, DWORD flProtect, DWORD dwMaximumSizeHigh, DWORD dwMaximumSizeLow, LPCSTR lpName);", "CreateWaitableTimerExA": "WINBASEAPI HANDLE WINAPI CreateWaitableTimerExA (LPSECURITY_ATTRIBUTES lpTimerAttributes, LPCSTR lpTimerName, DWORD dwFlags, DWORD dwDesiredAccess);", "CreateFileMappingNumaA": "WINBASEAPI HANDLE WINAPI CreateFileMappingNumaA (HANDLE hFile, LPSECURITY_ATTRIBUTES lpFileMappingAttributes, DWORD flProtect, DWORD dwMaximumSizeHigh, DWORD dwMaximumSizeLow, LPCSTR lpName, DWORD nndPreferred);", "OpenFileMappingA": "WINBASEAPI HANDLE WINAPI OpenFileMappingA (DWORD dwDesiredAccess, WINBOOL bInheritHandle, LPCSTR lpName);", "GetLogicalDriveStringsA": "WINBASEAPI DWORD WINAPI GetLogicalDriveStringsA (DWORD nBufferLength, LPSTR lpBuffer);", "CreateSemaphoreA": "WINBASEAPI HANDLE WINAPI CreateSemaphoreA (LPSECURITY_ATTRIBUTES lpSemaphoreAttributes, LONG lInitialCount, LONG lMaximumCount, LPCSTR lpName);", "CreateSemaphoreExA": "WINBASEAPI HANDLE WINAPI CreateSemaphoreExA (LPSECURITY_ATTRIBUTES lpSemaphoreAttributes, LONG lInitialCount, LONG lMaximumCount, LPCSTR lpName, DWORD dwFlags, DWORD dwDesiredAccess);", "QueryFullProcessImageNameA": "WINBASEAPI WINBOOL WINAPI QueryFullProcessImageNameA (HANDLE hProcess, DWORD dwFlags, LPSTR lpExeName, PDWORD lpdwSize);", "QueryFullProcessImageNameW": "WINBASEAPI WINBOOL WINAPI QueryFullProcessImageNameW (HANDLE hProcess, DWORD dwFlags, LPWSTR lpExeName, PDWORD lpdwSize);", "GetProcessShutdownParameters": "WINBASEAPI WINBOOL WINAPI GetProcessShutdownParameters (LPDWORD lpdwLevel, LPDWORD lpdwFlags);", "FatalAppExitA": "WINBASEAPI VOID WINAPI FatalAppExitA (UINT uAction, LPCSTR lpMessageText);", "FatalAppExitW": "WINBASEAPI VOID WINAPI FatalAppExitW (UINT uAction, LPCWSTR lpMessageText);", "GetStartupInfoA": "WINBASEAPI VOID WINAPI GetStartupInfoA (LPSTARTUPINFOA lpStartupInfo);", "FindResourceA": "WINBASEAPI HRSRC WINAPI FindResourceA (HMODULE hModule, LPCSTR lpName, LPCSTR lpType);", "FindResourceExA": "WINBASEAPI HRSRC WINAPI FindResourceExA (HMODULE hModule, LPCSTR lpType, LPCSTR lpName, WORD wLanguage);", "EnumResourceTypesA": "WINBASEAPI WINBOOL WINAPI EnumResourceTypesA (HMODULE hModule, ENUMRESTYPEPROCA lpEnumFunc, LONG_PTR lParam);", "EnumResourceTypesW": "WINBASEAPI WINBOOL WINAPI EnumResourceTypesW (HMODULE hModule, ENUMRESTYPEPROCW lpEnumFunc, LONG_PTR lParam);", "EnumResourceNamesA": "WINBASEAPI WINBOOL WINAPI EnumResourceNamesA (HMODULE hModule, LPCSTR lpType, ENUMRESNAMEPROCA lpEnumFunc, LONG_PTR lParam);", "BeginUpdateResourceA": "WINBASEAPI HANDLE WINAPI BeginUpdateResourceA (LPCSTR pFileName, WINBOOL bDeleteExistingResources);", "BeginUpdateResourceW": "WINBASEAPI HANDLE WINAPI BeginUpdateResourceW (LPCWSTR pFileName, WINBOOL bDeleteExistingResources);", "UpdateResourceA": "WINBASEAPI WINBOOL WINAPI UpdateResourceA (HANDLE hUpdate, LPCSTR lpType, LPCSTR lpName, WORD wLanguage, LPVOID lpData, DWORD cb);", "UpdateResourceW": "WINBASEAPI WINBOOL WINAPI UpdateResourceW (HANDLE hUpdate, LPCWSTR lpType, LPCWSTR lpName, WORD wLanguage, LPVOID lpData, DWORD cb);", "EndUpdateResourceA": "WINBASEAPI WINBOOL WINAPI EndUpdateResourceA (HANDLE hUpdate, WINBOOL fDiscard);", "EndUpdateResourceW": "WINBASEAPI WINBOOL WINAPI EndUpdateResourceW (HANDLE hUpdate, WINBOOL fDiscard);", "GetFirmwareType": "WINBASEAPI WINBOOL WINAPI GetFirmwareType (PFIRMWARE_TYPE FirmwareType);", "IsNativeVhdBoot": "WINBASEAPI WINBOOL WINAPI IsNativeVhdBoot (PBOOL NativeVhdBoot);", "GlobalAddAtomA": "WINBASEAPI ATOM WINAPI GlobalAddAtomA (LPCSTR lpString);", "GlobalAddAtomW": "WINBASEAPI ATOM WINAPI GlobalAddAtomW (LPCWSTR lpString);", "GlobalAddAtomExA": "WINBASEAPI ATOM WINAPI GlobalAddAtomExA (LPCSTR lpString, DWORD Flags);", "GlobalAddAtomExW": "WINBASEAPI ATOM WINAPI GlobalAddAtomExW (LPCWSTR lpString, DWORD Flags);", "GlobalFindAtomA": "WINBASEAPI ATOM WINAPI GlobalFindAtomA (LPCSTR lpString);", "GlobalFindAtomW": "WINBASEAPI ATOM WINAPI GlobalFindAtomW (LPCWSTR lpString);", "GlobalGetAtomNameA": "WINBASEAPI UINT WINAPI GlobalGetAtomNameA (ATOM nAtom, LPSTR lpBuffer, int nSize);", "GlobalGetAtomNameW": "WINBASEAPI UINT WINAPI GlobalGetAtomNameW (ATOM nAtom, LPWSTR lpBuffer, int nSize);", "AddAtomA": "WINBASEAPI ATOM WINAPI AddAtomA (LPCSTR lpString);", "AddAtomW": "WINBASEAPI ATOM WINAPI AddAtomW (LPCWSTR lpString);", "FindAtomA": "WINBASEAPI ATOM WINAPI FindAtomA (LPCSTR lpString);", "FindAtomW": "WINBASEAPI ATOM WINAPI FindAtomW (LPCWSTR lpString);", "GetAtomNameA": "WINBASEAPI UINT WINAPI GetAtomNameA (ATOM nAtom, LPSTR lpBuffer, int nSize);", "GetAtomNameW": "WINBASEAPI UINT WINAPI GetAtomNameW (ATOM nAtom, LPWSTR lpBuffer, int nSize);", "GetProfileIntA": "WINBASEAPI UINT WINAPI GetProfileIntA (LPCSTR lpAppName, LPCSTR lpKeyName, INT nDefault);", "GetProfileIntW": "WINBASEAPI UINT WINAPI GetProfileIntW (LPCWSTR lpAppName, LPCWSTR lpKeyName, INT nDefault);", "GetProfileStringA": "WINBASEAPI DWORD WINAPI GetProfileStringA (LPCSTR lpAppName, LPCSTR lpKeyName, LPCSTR lpDefault, LPSTR lpReturnedString, DWORD nSize);", "GetProfileStringW": "WINBASEAPI DWORD WINAPI GetProfileStringW (LPCWSTR lpAppName, LPCWSTR lpKeyName, LPCWSTR lpDefault, LPWSTR lpReturnedString, DWORD nSize);", "WriteProfileStringA": "WINBASEAPI WINBOOL WINAPI WriteProfileStringA (LPCSTR lpAppName, LPCSTR lpKeyName, LPCSTR lpString);", "WriteProfileStringW": "WINBASEAPI WINBOOL WINAPI WriteProfileStringW (LPCWSTR lpAppName, LPCWSTR lpKeyName, LPCWSTR lpString);", "GetProfileSectionA": "WINBASEAPI DWORD WINAPI GetProfileSectionA (LPCSTR lpAppName, LPSTR lpReturnedString, DWORD nSize);", "GetProfileSectionW": "WINBASEAPI DWORD WINAPI GetProfileSectionW (LPCWSTR lpAppName, LPWSTR lpReturnedString, DWORD nSize);", "WriteProfileSectionA": "WINBASEAPI WINBOOL WINAPI WriteProfileSectionA (LPCSTR lpAppName, LPCSTR lpString);", "WriteProfileSectionW": "WINBASEAPI WINBOOL WINAPI WriteProfileSectionW (LPCWSTR lpAppName, LPCWSTR lpString);", "GetPrivateProfileIntA": "WINBASEAPI UINT WINAPI GetPrivateProfileIntA (LPCSTR lpAppName, LPCSTR lpKeyName, INT nDefault, LPCSTR lpFileName);", "GetPrivateProfileIntW": "WINBASEAPI UINT WINAPI GetPrivateProfileIntW (LPCWSTR lpAppName, LPCWSTR lpKeyName, INT nDefault, LPCWSTR lpFileName);", "GetPrivateProfileStringA": "WINBASEAPI DWORD WINAPI GetPrivateProfileStringA (LPCSTR lpAppName, LPCSTR lpKeyName, LPCSTR lpDefault, LPSTR lpReturnedString, DWORD nSize, LPCSTR lpFileName);", "GetPrivateProfileStringW": "WINBASEAPI DWORD WINAPI GetPrivateProfileStringW (LPCWSTR lpAppName, LPCWSTR lpKeyName, LPCWSTR lpDefault, LPWSTR lpReturnedString, DWORD nSize, LPCWSTR lpFileName);", "WritePrivateProfileStringA": "WINBASEAPI WINBOOL WINAPI WritePrivateProfileStringA (LPCSTR lpAppName, LPCSTR lpKeyName, LPCSTR lpString, LPCSTR lpFileName);", "WritePrivateProfileStringW": "WINBASEAPI WINBOOL WINAPI WritePrivateProfileStringW (LPCWSTR lpAppName, LPCWSTR lpKeyName, LPCWSTR lpString, LPCWSTR lpFileName);", "GetPrivateProfileSectionA": "WINBASEAPI DWORD WINAPI GetPrivateProfileSectionA (LPCSTR lpAppName, LPSTR lpReturnedString, DWORD nSize, LPCSTR lpFileName);", "GetPrivateProfileSectionW": "WINBASEAPI DWORD WINAPI GetPrivateProfileSectionW (LPCWSTR lpAppName, LPWSTR lpReturnedString, DWORD nSize, LPCWSTR lpFileName);", "WritePrivateProfileSectionA": "WINBASEAPI WINBOOL WINAPI WritePrivateProfileSectionA (LPCSTR lpAppName, LPCSTR lpString, LPCSTR lpFileName);", "WritePrivateProfileSectionW": "WINBASEAPI WINBOOL WINAPI WritePrivateProfileSectionW (LPCWSTR lpAppName, LPCWSTR lpString, LPCWSTR lpFileName);", "GetPrivateProfileSectionNamesA": "WINBASEAPI DWORD WINAPI GetPrivateProfileSectionNamesA (LPSTR lpszReturnBuffer, DWORD nSize, LPCSTR lpFileName);", "GetPrivateProfileSectionNamesW": "WINBASEAPI DWORD WINAPI GetPrivateProfileSectionNamesW (LPWSTR lpszReturnBuffer, DWORD nSize, LPCWSTR lpFileName);", "GetPrivateProfileStructA": "WINBASEAPI WINBOOL WINAPI GetPrivateProfileStructA (LPCSTR lpszSection, LPCSTR lpszKey, LPVOID lpStruct, UINT uSizeStruct, LPCSTR szFile);", "GetPrivateProfileStructW": "WINBASEAPI WINBOOL WINAPI GetPrivateProfileStructW (LPCWSTR lpszSection, LPCWSTR lpszKey, LPVOID lpStruct, UINT uSizeStruct, LPCWSTR szFile);", "WritePrivateProfileStructA": "WINBASEAPI WINBOOL WINAPI WritePrivateProfileStructA (LPCSTR lpszSection, LPCSTR lpszKey, LPVOID lpStruct, UINT uSizeStruct, LPCSTR szFile);", "WritePrivateProfileStructW": "WINBASEAPI WINBOOL WINAPI WritePrivateProfileStructW (LPCWSTR lpszSection, LPCWSTR lpszKey, LPVOID lpStruct, UINT uSizeStruct, LPCWSTR szFile);", "Wow64EnableWow64FsRedirection": "WINBASEAPI BOOLEAN WINAPI Wow64EnableWow64FsRedirection (BOOLEAN Wow64FsEnableRedirection);", "GetDllDirectoryA": "WINBASEAPI DWORD WINAPI GetDllDirectoryA (DWORD nBufferLength, LPSTR lpBuffer);", "GetDllDirectoryW": "WINBASEAPI DWORD WINAPI GetDllDirectoryW (DWORD nBufferLength, LPWSTR lpBuffer);", "SetSearchPathMode": "WINBASEAPI WINBOOL WINAPI SetSearchPathMode (DWORD Flags);", "GetFirmwareEnvironmentVariableA": "WINBASEAPI DWORD WINAPI GetFirmwareEnvironmentVariableA (LPCSTR lpName, LPCSTR lpGuid, PVOID pBuffer, DWORD nSize);", "GetFirmwareEnvironmentVariableW": "WINBASEAPI DWORD WINAPI GetFirmwareEnvironmentVariableW (LPCWSTR lpName, LPCWSTR lpGuid, PVOID pBuffer, DWORD nSize);", "SetFirmwareEnvironmentVariableA": "WINBASEAPI WINBOOL WINAPI SetFirmwareEnvironmentVariableA (LPCSTR lpName, LPCSTR lpGuid, PVOID pValue, DWORD nSize);", "SetFirmwareEnvironmentVariableW": "WINBASEAPI WINBOOL WINAPI SetFirmwareEnvironmentVariableW (LPCWSTR lpName, LPCWSTR lpGuid, PVOID pValue, DWORD nSize);", "GetFirmwareEnvironmentVariableExA": "WINBASEAPI DWORD WINAPI GetFirmwareEnvironmentVariableExA (LPCSTR lpName, LPCSTR lpGuid, PVOID pBuffer, DWORD nSize, PDWORD pdwAttribubutes);", "GetFirmwareEnvironmentVariableExW": "WINBASEAPI DWORD WINAPI GetFirmwareEnvironmentVariableExW (LPCWSTR lpName, LPCWSTR lpGuid, PVOID pBuffer, DWORD nSize, PDWORD pdwAttribubutes);", "SetFirmwareEnvironmentVariableExA": "WINBASEAPI WINBOOL WINAPI SetFirmwareEnvironmentVariableExA (LPCSTR lpName, LPCSTR lpGuid, PVOID pValue, DWORD nSize, DWORD dwAttributes);", "SetFirmwareEnvironmentVariableExW": "WINBASEAPI WINBOOL WINAPI SetFirmwareEnvironmentVariableExW (LPCWSTR lpName, LPCWSTR lpGuid, PVOID pValue, DWORD nSize, DWORD dwAttributes);", "SetDllDirectoryA": "WINBASEAPI WINBOOL WINAPI SetDllDirectoryA (LPCSTR lpPathName);", "SetDllDirectoryW": "WINBASEAPI WINBOOL WINAPI SetDllDirectoryW (LPCWSTR lpPathName);", "CreateDirectoryExA": "WINBASEAPI WINBOOL WINAPI CreateDirectoryExA (LPCSTR lpTemplateDirectory, LPCSTR lpNewDirectory, LPSECURITY_ATTRIBUTES lpSecurityAttributes);", "CreateDirectoryExW": "WINBASEAPI WINBOOL WINAPI CreateDirectoryExW (LPCWSTR lpTemplateDirectory, LPCWSTR lpNewDirectory, LPSECURITY_ATTRIBUTES lpSecurityAttributes);", "CreateDirectoryTransactedA": "WINBASEAPI WINBOOL WINAPI CreateDirectoryTransactedA (LPCSTR lpTemplateDirectory, LPCSTR lpNewDirectory, LPSECURITY_ATTRIBUTES lpSecurityAttributes, HANDLE hTransaction);", "CreateDirectoryTransactedW": "WINBASEAPI WINBOOL WINAPI CreateDirectoryTransactedW (LPCWSTR lpTemplateDirectory, LPCWSTR lpNewDirectory, LPSECURITY_ATTRIBUTES lpSecurityAttributes, HANDLE hTransaction);", "RemoveDirectoryTransactedA": "WINBASEAPI WINBOOL WINAPI RemoveDirectoryTransactedA (LPCSTR lpPathName, HANDLE hTransaction);", "RemoveDirectoryTransactedW": "WINBASEAPI WINBOOL WINAPI RemoveDirectoryTransactedW (LPCWSTR lpPathName, HANDLE hTransaction);", "GetFullPathNameTransactedA": "WINBASEAPI DWORD WINAPI GetFullPathNameTransactedA (LPCSTR lpFileName, DWORD nBufferLength, LPSTR lpBuffer, LPSTR *lpFilePart, HANDLE hTransaction);", "GetFullPathNameTransactedW": "WINBASEAPI DWORD WINAPI GetFullPathNameTransactedW (LPCWSTR lpFileName, DWORD nBufferLength, LPWSTR lpBuffer, LPWSTR *lpFilePart, HANDLE hTransaction);", "DefineDosDeviceA": "WINBASEAPI WINBOOL WINAPI DefineDosDeviceA (DWORD dwFlags, LPCSTR lpDeviceName, LPCSTR lpTargetPath);", "QueryDosDeviceA": "WINBASEAPI DWORD WINAPI QueryDosDeviceA (LPCSTR lpDeviceName, LPSTR lpTargetPath, DWORD ucchMax);", "CreateFileTransactedA": "WINBASEAPI HANDLE WINAPI CreateFileTransactedA (LPCSTR lpFileName, DWORD dwDesiredAccess, DWORD dwShareMode, LPSECURITY_ATTRIBUTES lpSecurityAttributes, DWORD dwCreationDisposition, DWORD dwFlagsAndAttributes, HANDLE hTemplateFile, HANDLE hTransaction, PUSHORT pusMiniVersion, PVOID lpExtendedParameter);", "CreateFileTransactedW": "WINBASEAPI HANDLE WINAPI CreateFileTransactedW (LPCWSTR lpFileName, DWORD dwDesiredAccess, DWORD dwShareMode, LPSECURITY_ATTRIBUTES lpSecurityAttributes, DWORD dwCreationDisposition, DWORD dwFlagsAndAttributes, HANDLE hTemplateFile, HANDLE hTransaction, PUSHORT pusMiniVersion, PVOID lpExtendedParameter);", "ReOpenFile": "WINBASEAPI HANDLE WINAPI ReOpenFile (HANDLE hOriginalFile, DWORD dwDesiredAccess, DWORD dwShareMode, DWORD dwFlagsAndAttributes);", "SetFileAttributesTransactedA": "WINBASEAPI WINBOOL WINAPI SetFileAttributesTransactedA (LPCSTR lpFileName, DWORD dwFileAttributes, HANDLE hTransaction);", "SetFileAttributesTransactedW": "WINBASEAPI WINBOOL WINAPI SetFileAttributesTransactedW (LPCWSTR lpFileName, DWORD dwFileAttributes, HANDLE hTransaction);", "GetFileAttributesTransactedA": "WINBASEAPI WINBOOL WINAPI GetFileAttributesTransactedA (LPCSTR lpFileName, GET_FILEEX_INFO_LEVELS fInfoLevelId, LPVOID lpFileInformation, HANDLE hTransaction);", "GetFileAttributesTransactedW": "WINBASEAPI WINBOOL WINAPI GetFileAttributesTransactedW (LPCWSTR lpFileName, GET_FILEEX_INFO_LEVELS fInfoLevelId, LPVOID lpFileInformation, HANDLE hTransaction);", "GetCompressedFileSizeA": "WINBASEAPI DWORD WINAPI GetCompressedFileSizeA (LPCSTR lpFileName, LPDWORD lpFileSizeHigh);", "GetCompressedFileSizeW": "WINBASEAPI DWORD WINAPI GetCompressedFileSizeW (LPCWSTR lpFileName, LPDWORD lpFileSizeHigh);", "GetCompressedFileSizeTransactedA": "WINBASEAPI DWORD WINAPI GetCompressedFileSizeTransactedA (LPCSTR lpFileName, LPDWORD lpFileSizeHigh, HANDLE hTransaction);", "GetCompressedFileSizeTransactedW": "WINBASEAPI DWORD WINAPI GetCompressedFileSizeTransactedW (LPCWSTR lpFileName, LPDWORD lpFileSizeHigh, HANDLE hTransaction);", "DeleteFileTransactedA": "WINBASEAPI WINBOOL WINAPI DeleteFileTransactedA (LPCSTR lpFileName, HANDLE hTransaction);", "DeleteFileTransactedW": "WINBASEAPI WINBOOL WINAPI DeleteFileTransactedW (LPCWSTR lpFileName, HANDLE hTransaction);", "CopyFileExA": "WINBASEAPI WINBOOL WINAPI CopyFileExA (LPCSTR lpExistingFileName, LPCSTR lpNewFileName, LPPROGRESS_ROUTINE lpProgressRoutine, LPVOID lpData, LPBOOL pbCancel, DWORD dwCopyFlags);", "CopyFileExW": "WINBASEAPI WINBOOL WINAPI CopyFileExW (LPCWSTR lpExistingFileName, LPCWSTR lpNewFileName, LPPROGRESS_ROUTINE lpProgressRoutine, LPVOID lpData, LPBOOL pbCancel, DWORD dwCopyFlags);", "CheckNameLegalDOS8Dot3A": "WINBASEAPI WINBOOL WINAPI CheckNameLegalDOS8Dot3A (LPCSTR lpName, LPSTR lpOemName, DWORD OemNameSize, PBOOL pbNameContainsSpaces, PBOOL pbNameLegal);", "CheckNameLegalDOS8Dot3W": "WINBASEAPI WINBOOL WINAPI CheckNameLegalDOS8Dot3W (LPCWSTR lpName, LPSTR lpOemName, DWORD OemNameSize, PBOOL pbNameContainsSpaces, PBOOL pbNameLegal);", "FindFirstFileTransactedA": "WINBASEAPI HANDLE WINAPI FindFirstFileTransactedA (LPCSTR lpFileName, FINDEX_INFO_LEVELS fInfoLevelId, LPVOID lpFindFileData, FINDEX_SEARCH_OPS fSearchOp, LPVOID lpSearchFilter, DWORD dwAdditionalFlags, HANDLE hTransaction);", "FindFirstFileTransactedW": "WINBASEAPI HANDLE WINAPI FindFirstFileTransactedW (LPCWSTR lpFileName, FINDEX_INFO_LEVELS fInfoLevelId, LPVOID lpFindFileData, FINDEX_SEARCH_OPS fSearchOp, LPVOID lpSearchFilter, DWORD dwAdditionalFlags, HANDLE hTransaction);", "CopyFileTransactedA": "WINBASEAPI WINBOOL WINAPI CopyFileTransactedA (LPCSTR lpExistingFileName, LPCSTR lpNewFileName, LPPROGRESS_ROUTINE lpProgressRoutine, LPVOID lpData, LPBOOL pbCancel, DWORD dwCopyFlags, HANDLE hTransaction);", "CopyFileTransactedW": "WINBASEAPI WINBOOL WINAPI CopyFileTransactedW (LPCWSTR lpExistingFileName, LPCWSTR lpNewFileName, LPPROGRESS_ROUTINE lpProgressRoutine, LPVOID lpData, LPBOOL pbCancel, DWORD dwCopyFlags, HANDLE hTransaction);", "CopyFileA": "WINBASEAPI WINBOOL WINAPI CopyFileA (LPCSTR lpExistingFileName, LPCSTR lpNewFileName, WINBOOL bFailIfExists);", "CopyFileW": "WINBASEAPI WINBOOL WINAPI CopyFileW (LPCWSTR lpExistingFileName, LPCWSTR lpNewFileName, WINBOOL bFailIfExists);", "CopyFile2": "WINBASEAPI HRESULT WINAPI CopyFile2 (PCWSTR pwszExistingFileName, PCWSTR pwszNewFileName, COPYFILE2_EXTENDED_PARAMETERS *pExtendedParameters);", "MoveFileA": "WINBASEAPI WINBOOL WINAPI MoveFileA (LPCSTR lpExistingFileName, LPCSTR lpNewFileName);", "MoveFileW": "WINBASEAPI WINBOOL WINAPI MoveFileW (LPCWSTR lpExistingFileName, LPCWSTR lpNewFileName);", "MoveFileExA": "WINBASEAPI WINBOOL WINAPI MoveFileExA (LPCSTR lpExistingFileName, LPCSTR lpNewFileName, DWORD dwFlags);", "MoveFileExW": "WINBASEAPI WINBOOL WINAPI MoveFileExW (LPCWSTR lpExistingFileName, LPCWSTR lpNewFileName, DWORD dwFlags);", "MoveFileWithProgressA": "WINBASEAPI WINBOOL WINAPI MoveFileWithProgressA (LPCSTR lpExistingFileName, LPCSTR lpNewFileName, LPPROGRESS_ROUTINE lpProgressRoutine, LPVOID lpData, DWORD dwFlags);", "MoveFileWithProgressW": "WINBASEAPI WINBOOL WINAPI MoveFileWithProgressW (LPCWSTR lpExistingFileName, LPCWSTR lpNewFileName, LPPROGRESS_ROUTINE lpProgressRoutine, LPVOID lpData, DWORD dwFlags);", "MoveFileTransactedA": "WINBASEAPI WINBOOL WINAPI MoveFileTransactedA (LPCSTR lpExistingFileName, LPCSTR lpNewFileName, LPPROGRESS_ROUTINE lpProgressRoutine, LPVOID lpData, DWORD dwFlags, HANDLE hTransaction);", "MoveFileTransactedW": "WINBASEAPI WINBOOL WINAPI MoveFileTransactedW (LPCWSTR lpExistingFileName, LPCWSTR lpNewFileName, LPPROGRESS_ROUTINE lpProgressRoutine, LPVOID lpData, DWORD dwFlags, HANDLE hTransaction);", "GetNamedPipeClientComputerNameA": "WINBASEAPI WINBOOL WINAPI GetNamedPipeClientComputerNameA (HANDLE Pipe, LPSTR ClientComputerName, ULONG ClientComputerNameLength);", "WaitNamedPipeA": "WINBASEAPI WINBOOL WINAPI WaitNamedPipeA (LPCSTR lpNamedPipeName, DWORD nTimeOut);", "CallNamedPipeA": "WINBASEAPI WINBOOL WINAPI CallNamedPipeA (LPCSTR lpNamedPipeName, LPVOID lpInBuffer, DWORD nInBufferSize, LPVOID lpOutBuffer, DWORD nOutBufferSize, LPDWORD lpBytesRead, DWORD nTimeOut);", "CallNamedPipeW": "WINBASEAPI WINBOOL WINAPI CallNamedPipeW (LPCWSTR lpNamedPipeName, LPVOID lpInBuffer, DWORD nInBufferSize, LPVOID lpOutBuffer, DWORD nOutBufferSize, LPDWORD lpBytesRead, DWORD nTimeOut);", "CreateNamedPipeA": "WINBASEAPI HANDLE WINAPI CreateNamedPipeA (LPCSTR lpName, DWORD dwOpenMode, DWORD dwPipeMode, DWORD nMaxInstances, DWORD nOutBufferSize, DWORD nInBufferSize, DWORD nDefaultTimeOut, LPSECURITY_ATTRIBUTES lpSecurityAttributes);", "GetNamedPipeHandleStateA": "WINBASEAPI WINBOOL WINAPI GetNamedPipeHandleStateA (HANDLE hNamedPipe, LPDWORD lpState, LPDWORD lpCurInstances, LPDWORD lpMaxCollectionCount, LPDWORD lpCollectDataTimeout, LPSTR lpUserName, DWORD nMaxUserNameSize);", "GetNamedPipeHandleStateW": "WINBASEAPI WINBOOL WINAPI GetNamedPipeHandleStateW (HANDLE hNamedPipe, LPDWORD lpState, LPDWORD lpCurInstances, LPDWORD lpMaxCollectionCount, LPDWORD lpCollectDataTimeout, LPWSTR lpUserName, DWORD nMaxUserNameSize);", "ReplaceFileA": "WINBASEAPI WINBOOL WINAPI ReplaceFileA (LPCSTR lpReplacedFileName, LPCSTR lpReplacementFileName, LPCSTR lpBackupFileName, DWORD dwReplaceFlags, LPVOID lpExclude, LPVOID lpReserved);", "ReplaceFileW": "WINBASEAPI WINBOOL WINAPI ReplaceFileW (LPCWSTR lpReplacedFileName, LPCWSTR lpReplacementFileName, LPCWSTR lpBackupFileName, DWORD dwReplaceFlags, LPVOID lpExclude, LPVOID lpReserved);", "CreateHardLinkW": "WINBASEAPI WINBOOL WINAPI CreateHardLinkW (LPCWSTR lpFileName, LPCWSTR lpExistingFileName, LPSECURITY_ATTRIBUTES lpSecurityAttributes);", "CreateHardLinkA": "WINBASEAPI WINBOOL WINAPI CreateHardLinkA (LPCSTR lpFileName, LPCSTR lpExistingFileName, LPSECURITY_ATTRIBUTES lpSecurityAttributes);", "CreateHardLinkTransactedA": "WINBASEAPI WINBOOL WINAPI CreateHardLinkTransactedA (LPCSTR lpFileName, LPCSTR lpExistingFileName, LPSECURITY_ATTRIBUTES lpSecurityAttributes, HANDLE hTransaction);", "CreateHardLinkTransactedW": "WINBASEAPI WINBOOL WINAPI CreateHardLinkTransactedW (LPCWSTR lpFileName, LPCWSTR lpExistingFileName, LPSECURITY_ATTRIBUTES lpSecurityAttributes, HANDLE hTransaction);", "FindFirstStreamW": "WINBASEAPI HANDLE WINAPI FindFirstStreamW (LPCWSTR lpFileName, STREAM_INFO_LEVELS InfoLevel, LPVOID lpFindStreamData, DWORD dwFlags);", "FindFirstStreamTransactedW": "WINBASEAPI HANDLE WINAPI FindFirstStreamTransactedW (LPCWSTR lpFileName, STREAM_INFO_LEVELS InfoLevel, LPVOID lpFindStreamData, DWORD dwFlags, HANDLE hTransaction);", "FindFirstFileNameW": "WINBASEAPI HANDLE WINAPI FindFirstFileNameW (LPCWSTR lpFileName, DWORD dwFlags, LPDWORD StringLength, PWSTR LinkName);", "FindFirstFileNameTransactedW": "WINBASEAPI HANDLE WINAPI FindFirstFileNameTransactedW (LPCWSTR lpFileName, DWORD dwFlags, LPDWORD StringLength, PWSTR LinkName, HANDLE hTransaction);", "GetNamedPipeClientProcessId": "WINBASEAPI WINBOOL WINAPI GetNamedPipeClientProcessId (HANDLE Pipe, PULONG ClientProcessId);", "GetNamedPipeClientSessionId": "WINBASEAPI WINBOOL WINAPI GetNamedPipeClientSessionId (HANDLE Pipe, PULONG ClientSessionId);", "GetNamedPipeServerProcessId": "WINBASEAPI WINBOOL WINAPI GetNamedPipeServerProcessId (HANDLE Pipe, PULONG ServerProcessId);", "GetNamedPipeServerSessionId": "WINBASEAPI WINBOOL WINAPI GetNamedPipeServerSessionId (HANDLE Pipe, PULONG ServerSessionId);", "SetFileBandwidthReservation": "WINBASEAPI WINBOOL WINAPI SetFileBandwidthReservation (HANDLE hFile, DWORD nPeriodMilliseconds, DWORD nBytesPerPeriod, WINBOOL bDiscardable, LPDWORD lpTransferSize, LPDWORD lpNumOutstandingRequests);", "GetFileBandwidthReservation": "WINBASEAPI WINBOOL WINAPI GetFileBandwidthReservation (HANDLE hFile, LPDWORD lpPeriodMilliseconds, LPDWORD lpBytesPerPeriod, LPBOOL pDiscardable, LPDWORD lpTransferSize, LPDWORD lpNumOutstandingRequests);", "SetFileApisToOEM": "WINBASEAPI VOID WINAPI SetFileApisToOEM (VOID);", "SetFileApisToANSI": "WINBASEAPI VOID WINAPI SetFileApisToANSI (VOID);", "AreFileApisANSI": "WINBASEAPI WINBOOL WINAPI AreFileApisANSI (VOID);", "ClearEventLogA": "WINADVAPI WINBOOL WINAPI ClearEventLogA (HANDLE hEventLog, LPCSTR lpBackupFileName);", "ClearEventLogW": "WINADVAPI WINBOOL WINAPI ClearEventLogW (HANDLE hEventLog, LPCWSTR lpBackupFileName);", "BackupEventLogA": "WINADVAPI WINBOOL WINAPI BackupEventLogA (HANDLE hEventLog, LPCSTR lpBackupFileName);", "BackupEventLogW": "WINADVAPI WINBOOL WINAPI BackupEventLogW (HANDLE hEventLog, LPCWSTR lpBackupFileName);", "CloseEventLog": "WINADVAPI WINBOOL WINAPI CloseEventLog (HANDLE hEventLog);", "DeregisterEventSource": "WINADVAPI WINBOOL WINAPI DeregisterEventSource (HANDLE hEventLog);", "NotifyChangeEventLog": "WINADVAPI WINBOOL WINAPI NotifyChangeEventLog (HANDLE hEventLog, HANDLE hEvent);", "GetNumberOfEventLogRecords": "WINADVAPI WINBOOL WINAPI GetNumberOfEventLogRecords (HANDLE hEventLog, PDWORD NumberOfRecords);", "GetOldestEventLogRecord": "WINADVAPI WINBOOL WINAPI GetOldestEventLogRecord (HANDLE hEventLog, PDWORD OldestRecord);", "OpenEventLogA": "WINADVAPI HANDLE WINAPI OpenEventLogA (LPCSTR lpUNCServerName, LPCSTR lpSourceName);", "OpenEventLogW": "WINADVAPI HANDLE WINAPI OpenEventLogW (LPCWSTR lpUNCServerName, LPCWSTR lpSourceName);", "RegisterEventSourceA": "WINADVAPI HANDLE WINAPI RegisterEventSourceA (LPCSTR lpUNCServerName, LPCSTR lpSourceName);", "RegisterEventSourceW": "WINADVAPI HANDLE WINAPI RegisterEventSourceW (LPCWSTR lpUNCServerName, LPCWSTR lpSourceName);", "OpenBackupEventLogA": "WINADVAPI HANDLE WINAPI OpenBackupEventLogA (LPCSTR lpUNCServerName, LPCSTR lpFileName);", "OpenBackupEventLogW": "WINADVAPI HANDLE WINAPI OpenBackupEventLogW (LPCWSTR lpUNCServerName, LPCWSTR lpFileName);", "ReadEventLogA": "WINADVAPI WINBOOL WINAPI ReadEventLogA (HANDLE hEventLog, DWORD dwReadFlags, DWORD dwRecordOffset, LPVOID lpBuffer, DWORD nNumberOfBytesToRead, DWORD *pnBytesRead, DWORD *pnMinNumberOfBytesNeeded);", "ReadEventLogW": "WINADVAPI WINBOOL WINAPI ReadEventLogW (HANDLE hEventLog, DWORD dwReadFlags, DWORD dwRecordOffset, LPVOID lpBuffer, DWORD nNumberOfBytesToRead, DWORD *pnBytesRead, DWORD *pnMinNumberOfBytesNeeded);", "ReportEventA": "WINADVAPI WINBOOL WINAPI ReportEventA (HANDLE hEventLog, WORD wType, WORD wCategory, DWORD dwEventID, PSID lpUserSid, WORD wNumStrings, DWORD dwDataSize, LPCSTR *lpStrings, LPVOID lpRawData);", "ReportEventW": "WINADVAPI WINBOOL WINAPI ReportEventW (HANDLE hEventLog, WORD wType, WORD wCategory, DWORD dwEventID, PSID lpUserSid, WORD wNumStrings, DWORD dwDataSize, LPCWSTR *lpStrings, LPVOID lpRawData);", "GetEventLogInformation": "WINADVAPI WINBOOL WINAPI GetEventLogInformation (HANDLE hEventLog, DWORD dwInfoLevel, LPVOID lpBuffer, DWORD cbBufSize, LPDWORD pcbBytesNeeded);", "OperationStart": "WINADVAPI WINBOOL WINAPI OperationStart (OPERATION_START_PARAMETERS *OperationStartParams);", "OperationEnd": "WINADVAPI WINBOOL WINAPI OperationEnd (OPERATION_END_PARAMETERS *OperationEndParams);", "GetVolumeInformationA": "WINBASEAPI WINBOOL WINAPI GetVolumeInformationA (LPCSTR lpRootPathName, LPSTR lpVolumeNameBuffer, DWORD nVolumeNameSize, LPDWORD lpVolumeSerialNumber, LPDWORD lpMaximumComponentLength, LPDWORD lpFileSystemFlags, LPSTR lpFileSystemNameBuffer, DWORD nFileSystemNameSize);", "ReadDirectoryChangesW": "WINBASEAPI WINBOOL WINAPI ReadDirectoryChangesW (HANDLE hDirectory, LPVOID lpBuffer, DWORD nBufferLength, WINBOOL bWatchSubtree, DWORD dwNotifyFilter, LPDWORD lpBytesReturned, LPOVERLAPPED lpOverlapped, LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine);", "ReadDirectoryChangesExW": "WINBASEAPI WINBOOL WINAPI ReadDirectoryChangesExW (HANDLE hDirectory, LPVOID lpBuffer, DWORD nBufferLength, WINBOOL bWatchSubtree, DWORD dwNotifyFilter, LPDWORD lpBytesReturned, LPOVERLAPPED lpOverlapped, LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine, READ_DIRECTORY_NOTIFY_INFORMATION_CLASS ReadDirectoryNotifyInformationClass);", "AccessCheckAndAuditAlarmA": "WINADVAPI WINBOOL WINAPI AccessCheckAndAuditAlarmA (LPCSTR SubsystemName, LPVOID HandleId, LPSTR ObjectTypeName, LPSTR ObjectName, PSECURITY_DESCRIPTOR SecurityDescriptor, DWORD DesiredAccess, PGENERIC_MAPPING GenericMapping, WINBOOL ObjectCreation, LPDWORD GrantedAccess, LPBOOL AccessStatus, LPBOOL pfGenerateOnClose);", "AccessCheckByTypeAndAuditAlarmA": "WINADVAPI WINBOOL WINAPI AccessCheckByTypeAndAuditAlarmA (LPCSTR SubsystemName, LPVOID HandleId, LPCSTR ObjectTypeName, LPCSTR ObjectName, PSECURITY_DESCRIPTOR SecurityDescriptor, PSID PrincipalSelfSid, DWORD DesiredAccess, AUDIT_EVENT_TYPE AuditType, DWORD Flags, POBJECT_TYPE_LIST ObjectTypeList, DWORD ObjectTypeListLength, PGENERIC_MAPPING GenericMapping, WINBOOL ObjectCreation, LPDWORD GrantedAccess, LPBOOL AccessStatus, LPBOOL pfGenerateOnClose);", "AccessCheckByTypeResultListAndAuditAlarmA": "WINADVAPI WINBOOL WINAPI AccessCheckByTypeResultListAndAuditAlarmA (LPCSTR SubsystemName, LPVOID HandleId, LPCSTR ObjectTypeName, LPCSTR ObjectName, PSECURITY_DESCRIPTOR SecurityDescriptor, PSID PrincipalSelfSid, DWORD DesiredAccess, AUDIT_EVENT_TYPE AuditType, DWORD Flags, POBJECT_TYPE_LIST ObjectTypeList, DWORD ObjectTypeListLength, PGENERIC_MAPPING GenericMapping, WINBOOL ObjectCreation, LPDWORD GrantedAccess, LPDWORD AccessStatusList, LPBOOL pfGenerateOnClose);", "AccessCheckByTypeResultListAndAuditAlarmByHandleA": "WINADVAPI WINBOOL WINAPI AccessCheckByTypeResultListAndAuditAlarmByHandleA (LPCSTR SubsystemName, LPVOID HandleId, HANDLE ClientToken, LPCSTR ObjectTypeName, LPCSTR ObjectName, PSECURITY_DESCRIPTOR SecurityDescriptor, PSID PrincipalSelfSid, DWORD DesiredAccess, AUDIT_EVENT_TYPE AuditType, DWORD Flags, POBJECT_TYPE_LIST ObjectTypeList, DWORD ObjectTypeListLength, PGENERIC_MAPPING GenericMapping, WINBOOL ObjectCreation, LPDWORD GrantedAccess, LPDWORD AccessStatusList, LPBOOL pfGenerateOnClose);", "ObjectOpenAuditAlarmA": "WINADVAPI WINBOOL WINAPI ObjectOpenAuditAlarmA (LPCSTR SubsystemName, LPVOID HandleId, LPSTR ObjectTypeName, LPSTR ObjectName, PSECURITY_DESCRIPTOR pSecurityDescriptor, HANDLE ClientToken, DWORD DesiredAccess, DWORD GrantedAccess, PPRIVILEGE_SET Privileges, WINBOOL ObjectCreation, WINBOOL AccessGranted, LPBOOL GenerateOnClose);", "ObjectPrivilegeAuditAlarmA": "WINADVAPI WINBOOL WINAPI ObjectPrivilegeAuditAlarmA (LPCSTR SubsystemName, LPVOID HandleId, HANDLE ClientToken, DWORD DesiredAccess, PPRIVILEGE_SET Privileges, WINBOOL AccessGranted);", "ObjectCloseAuditAlarmA": "WINADVAPI WINBOOL WINAPI ObjectCloseAuditAlarmA (LPCSTR SubsystemName, LPVOID HandleId, WINBOOL GenerateOnClose);", "ObjectDeleteAuditAlarmA": "WINADVAPI WINBOOL WINAPI ObjectDeleteAuditAlarmA (LPCSTR SubsystemName, LPVOID HandleId, WINBOOL GenerateOnClose);", "PrivilegedServiceAuditAlarmA": "WINADVAPI WINBOOL WINAPI PrivilegedServiceAuditAlarmA (LPCSTR SubsystemName, LPCSTR ServiceName, HANDLE ClientToken, PPRIVILEGE_SET Privileges, WINBOOL AccessGranted);", "SetFileSecurityA": "WINADVAPI WINBOOL WINAPI SetFileSecurityA (LPCSTR lpFileName, SECURITY_INFORMATION SecurityInformation, PSECURITY_DESCRIPTOR pSecurityDescriptor);", "GetFileSecurityA": "WINADVAPI WINBOOL WINAPI GetFileSecurityA (LPCSTR lpFileName, SECURITY_INFORMATION RequestedInformation, PSECURITY_DESCRIPTOR pSecurityDescriptor, DWORD nLength, LPDWORD lpnLengthNeeded);", "IsBadReadPtr": "WINBASEAPI WINBOOL WINAPI IsBadReadPtr (CONST VOID *lp, UINT_PTR ucb);", "IsBadWritePtr": "WINBASEAPI WINBOOL WINAPI IsBadWritePtr (LPVOID lp, UINT_PTR ucb);", "IsBadHugeReadPtr": "WINBASEAPI WINBOOL WINAPI IsBadHugeReadPtr (CONST VOID *lp, UINT_PTR ucb);", "IsBadHugeWritePtr": "WINBASEAPI WINBOOL WINAPI IsBadHugeWritePtr (LPVOID lp, UINT_PTR ucb);", "IsBadCodePtr": "WINBASEAPI WINBOOL WINAPI IsBadCodePtr (FARPROC lpfn);", "IsBadStringPtrA": "WINBASEAPI WINBOOL WINAPI IsBadStringPtrA (LPCSTR lpsz, UINT_PTR ucchMax);", "IsBadStringPtrW": "WINBASEAPI WINBOOL WINAPI IsBadStringPtrW (LPCWSTR lpsz, UINT_PTR ucchMax);", "MapViewOfFileExNuma": "WINBASEAPI LPVOID WINAPI MapViewOfFileExNuma (HANDLE hFileMappingObject, DWORD dwDesiredAccess, DWORD dwFileOffsetHigh, DWORD dwFileOffsetLow, SIZE_T dwNumberOfBytesToMap, LPVOID lpBaseAddress, DWORD nndPreferred);", "AddConditionalAce": "WINADVAPI WINBOOL WINAPI AddConditionalAce (PACL pAcl, DWORD dwAceRevision, DWORD AceFlags, UCHAR AceType, DWORD AccessMask, PSID pSid, PWCHAR ConditionStr, DWORD *ReturnLength);", "LookupAccountNameLocalA": "WINADVAPI WINBOOL WINAPI LookupAccountNameLocalA (LPCSTR lpAccountName, PSID Sid, LPDWORD cbSid, LPSTR ReferencedDomainName, LPDWORD cchReferencedDomainName, PSID_NAME_USE peUse);", "LookupAccountNameLocalW": "WINADVAPI WINBOOL WINAPI LookupAccountNameLocalW (LPCWSTR lpAccountName, PSID Sid, LPDWORD cbSid, LPWSTR ReferencedDomainName, LPDWORD cchReferencedDomainName, PSID_NAME_USE peUse);", "LookupAccountSidLocalA": "WINADVAPI WINBOOL WINAPI LookupAccountSidLocalA (PSID Sid, LPSTR Name, LPDWORD cchName, LPSTR ReferencedDomainName, LPDWORD cchReferencedDomainName, PSID_NAME_USE peUse);", "LookupAccountSidLocalW": "WINADVAPI WINBOOL WINAPI LookupAccountSidLocalW (PSID Sid, LPWSTR Name, LPDWORD cchName, LPWSTR ReferencedDomainName, LPDWORD cchReferencedDomainName, PSID_NAME_USE peUse);", "BuildCommDCBA": "WINBASEAPI WINBOOL WINAPI BuildCommDCBA (LPCSTR lpDef, LPDCB lpDCB);", "BuildCommDCBW": "WINBASEAPI WINBOOL WINAPI BuildCommDCBW (LPCWSTR lpDef, LPDCB lpDCB);", "BuildCommDCBAndTimeoutsA": "WINBASEAPI WINBOOL WINAPI BuildCommDCBAndTimeoutsA (LPCSTR lpDef, LPDCB lpDCB, LPCOMMTIMEOUTS lpCommTimeouts);", "BuildCommDCBAndTimeoutsW": "WINBASEAPI WINBOOL WINAPI BuildCommDCBAndTimeoutsW (LPCWSTR lpDef, LPDCB lpDCB, LPCOMMTIMEOUTS lpCommTimeouts);", "CommConfigDialogA": "WINBASEAPI WINBOOL WINAPI CommConfigDialogA (LPCSTR lpszName, HWND hWnd, LPCOMMCONFIG lpCC);", "CommConfigDialogW": "WINBASEAPI WINBOOL WINAPI CommConfigDialogW (LPCWSTR lpszName, HWND hWnd, LPCOMMCONFIG lpCC);", "GetDefaultCommConfigA": "WINBASEAPI WINBOOL WINAPI GetDefaultCommConfigA (LPCSTR lpszName, LPCOMMCONFIG lpCC, LPDWORD lpdwSize);", "GetDefaultCommConfigW": "WINBASEAPI WINBOOL WINAPI GetDefaultCommConfigW (LPCWSTR lpszName, LPCOMMCONFIG lpCC, LPDWORD lpdwSize);", "SetDefaultCommConfigA": "WINBASEAPI WINBOOL WINAPI SetDefaultCommConfigA (LPCSTR lpszName, LPCOMMCONFIG lpCC, DWORD dwSize);", "SetDefaultCommConfigW": "WINBASEAPI WINBOOL WINAPI SetDefaultCommConfigW (LPCWSTR lpszName, LPCOMMCONFIG lpCC, DWORD dwSize);", "SetComputerNameA": "WINBASEAPI WINBOOL WINAPI SetComputerNameA (LPCSTR lpComputerName);", "SetComputerNameW": "WINBASEAPI WINBOOL WINAPI SetComputerNameW (LPCWSTR lpComputerName);", "SetComputerNameExA": "WINBASEAPI WINBOOL WINAPI SetComputerNameExA (COMPUTER_NAME_FORMAT NameType, LPCTSTR lpBuffer);", "DnsHostnameToComputerNameA": "WINBASEAPI WINBOOL WINAPI DnsHostnameToComputerNameA (LPCSTR Hostname, LPSTR ComputerName, LPDWORD nSize);", "DnsHostnameToComputerNameW": "WINBASEAPI WINBOOL WINAPI DnsHostnameToComputerNameW (LPCWSTR Hostname, LPWSTR ComputerName, LPDWORD nSize);", "LogonUserA": "WINADVAPI WINBOOL WINAPI LogonUserA (LPCSTR lpszUsername, LPCSTR lpszDomain, LPCSTR lpszPassword, DWORD dwLogonType, DWORD dwLogonProvider, PHANDLE phToken);", "LogonUserW": "WINADVAPI WINBOOL WINAPI LogonUserW (LPCWSTR lpszUsername, LPCWSTR lpszDomain, LPCWSTR lpszPassword, DWORD dwLogonType, DWORD dwLogonProvider, PHANDLE phToken);", "LogonUserExA": "WINADVAPI WINBOOL WINAPI LogonUserExA (LPCSTR lpszUsername, LPCSTR lpszDomain, LPCSTR lpszPassword, DWORD dwLogonType, DWORD dwLogonProvider, PHANDLE phToken, PSID *ppLogonSid, PVOID *ppProfileBuffer, LPDWORD pdwProfileLength, PQUOTA_LIMITS pQuotaLimits);", "LogonUserExW": "WINADVAPI WINBOOL WINAPI LogonUserExW (LPCWSTR lpszUsername, LPCWSTR lpszDomain, LPCWSTR lpszPassword, DWORD dwLogonType, DWORD dwLogonProvider, PHANDLE phToken, PSID *ppLogonSid, PVOID *ppProfileBuffer, LPDWORD pdwProfileLength, PQUOTA_LIMITS pQuotaLimits);", "CreateProcessAsUserA": "WINADVAPI WINBOOL WINAPI CreateProcessAsUserA (HANDLE hToken, LPCSTR lpApplicationName, LPSTR lpCommandLine, LPSECURITY_ATTRIBUTES lpProcessAttributes, LPSECURITY_ATTRIBUTES lpThreadAttributes, WINBOOL bInheritHandles, DWORD dwCreationFlags, LPVOID lpEnvironment, LPCSTR lpCurrentDirectory, LPSTARTUPINFOA lpStartupInfo, LPPROCESS_INFORMATION lpProcessInformation);", "CreateProcessWithLogonW": "WINADVAPI WINBOOL WINAPI CreateProcessWithLogonW (LPCWSTR lpUsername, LPCWSTR lpDomain, LPCWSTR lpPassword, DWORD dwLogonFlags, LPCWSTR lpApplicationName, LPWSTR lpCommandLine, DWORD dwCreationFlags, LPVOID lpEnvironment, LPCWSTR lpCurrentDirectory, LPSTARTUPINFOW lpStartupInfo, LPPROCESS_INFORMATION lpProcessInformation);", "CreateProcessWithTokenW": "WINADVAPI WINBOOL WINAPI CreateProcessWithTokenW (HANDLE hToken, DWORD dwLogonFlags, LPCWSTR lpApplicationName, LPWSTR lpCommandLine, DWORD dwCreationFlags, LPVOID lpEnvironment, LPCWSTR lpCurrentDirectory, LPSTARTUPINFOW lpStartupInfo, LPPROCESS_INFORMATION lpProcessInformation);", "IsTokenUntrusted": "WINADVAPI WINBOOL WINAPI IsTokenUntrusted (HANDLE TokenHandle);", "RegisterWaitForSingleObject": "WINBASEAPI WINBOOL WINAPI RegisterWaitForSingleObject (PHANDLE phNewWaitObject, HANDLE hObject, WAITORTIMERCALLBACK Callback, PVOID Context, ULONG dwMilliseconds, ULONG dwFlags);", "UnregisterWait": "WINBASEAPI WINBOOL WINAPI UnregisterWait (HANDLE WaitHandle);", "BindIoCompletionCallback": "WINBASEAPI WINBOOL WINAPI BindIoCompletionCallback (HANDLE FileHandle, LPOVERLAPPED_COMPLETION_ROUTINE Function, ULONG Flags);", "SetTimerQueueTimer": "WINBASEAPI HANDLE WINAPI SetTimerQueueTimer (HANDLE TimerQueue, WAITORTIMERCALLBACK Callback, PVOID Parameter, DWORD DueTime, DWORD Period, WINBOOL PreferIo);", "CancelTimerQueueTimer": "WINBASEAPI WINBOOL WINAPI CancelTimerQueueTimer (HANDLE TimerQueue, HANDLE Timer);", "DeleteTimerQueue": "WINBASEAPI WINBOOL WINAPI DeleteTimerQueue (HANDLE TimerQueue);", "AddIntegrityLabelToBoundaryDescriptor": "WINBASEAPI WINBOOL WINAPI AddIntegrityLabelToBoundaryDescriptor (HANDLE *BoundaryDescriptor, PSID IntegrityLabel);", "GetCurrentHwProfileA": "WINADVAPI WINBOOL WINAPI GetCurrentHwProfileA (LPHW_PROFILE_INFOA lpHwProfileInfo);", "GetCurrentHwProfileW": "WINADVAPI WINBOOL WINAPI GetCurrentHwProfileW (LPHW_PROFILE_INFOW lpHwProfileInfo);", "VerifyVersionInfoA": "WINBASEAPI WINBOOL WINAPI VerifyVersionInfoA (LPOSVERSIONINFOEXA lpVersionInformation, DWORD dwTypeMask, DWORDLONG dwlConditionMask);", "VerifyVersionInfoW": "WINBASEAPI WINBOOL WINAPI VerifyVersionInfoW (LPOSVERSIONINFOEXW lpVersionInformation, DWORD dwTypeMask, DWORDLONG dwlConditionMask);", "GetUserNameA": "WINADVAPI WINBOOL WINAPI GetUserNameA (LPSTR lpBuffer, LPDWORD pcbBuffer);", "GetUserNameW": "WINADVAPI WINBOOL WINAPI GetUserNameW (LPWSTR lpBuffer, LPDWORD pcbBuffer);", "LookupAccountNameA": "WINADVAPI WINBOOL WINAPI LookupAccountNameA (LPCSTR lpSystemName, LPCSTR lpAccountName, PSID Sid, LPDWORD cbSid, LPSTR ReferencedDomainName, LPDWORD cchReferencedDomainName, PSID_NAME_USE peUse);", "LookupAccountNameW": "WINADVAPI WINBOOL WINAPI LookupAccountNameW (LPCWSTR lpSystemName, LPCWSTR lpAccountName, PSID Sid, LPDWORD cbSid, LPWSTR ReferencedDomainName, LPDWORD cchReferencedDomainName, PSID_NAME_USE peUse);", "LookupAccountSidA": "WINADVAPI WINBOOL WINAPI LookupAccountSidA (LPCSTR lpSystemName, PSID Sid, LPSTR Name, LPDWORD cchName, LPSTR ReferencedDomainName, LPDWORD cchReferencedDomainName, PSID_NAME_USE peUse);", "LookupAccountSidW": "WINADVAPI WINBOOL WINAPI LookupAccountSidW (LPCWSTR lpSystemName, PSID Sid, LPWSTR Name, LPDWORD cchName, LPWSTR ReferencedDomainName, LPDWORD cchReferencedDomainName, PSID_NAME_USE peUse);", "LookupPrivilegeDisplayNameA": "WINADVAPI WINBOOL WINAPI LookupPrivilegeDisplayNameA (LPCSTR lpSystemName, LPCSTR lpName, LPSTR lpDisplayName, LPDWORD cchDisplayName, LPDWORD lpLanguageId);", "LookupPrivilegeDisplayNameW": "WINADVAPI WINBOOL WINAPI LookupPrivilegeDisplayNameW (LPCWSTR lpSystemName, LPCWSTR lpName, LPWSTR lpDisplayName, LPDWORD cchDisplayName, LPDWORD lpLanguageId);", "LookupPrivilegeNameA": "WINADVAPI WINBOOL WINAPI LookupPrivilegeNameA (LPCSTR lpSystemName, PLUID lpLuid, LPSTR lpName, LPDWORD cchName);", "LookupPrivilegeNameW": "WINADVAPI WINBOOL WINAPI LookupPrivilegeNameW (LPCWSTR lpSystemName, PLUID lpLuid, LPWSTR lpName, LPDWORD cchName);", "LookupPrivilegeValueA": "WINADVAPI WINBOOL WINAPI LookupPrivilegeValueA (LPCSTR lpSystemName, LPCSTR lpName, PLUID lpLuid);", "LookupPrivilegeValueW": "WINADVAPI WINBOOL WINAPI LookupPrivilegeValueW (LPCWSTR lpSystemName, LPCWSTR lpName, PLUID lpLuid);", "SetVolumeLabelA": "WINBASEAPI WINBOOL WINAPI SetVolumeLabelA (LPCSTR lpRootPathName, LPCSTR lpVolumeName);", "CreatePrivateNamespaceA": "WINBASEAPI HANDLE WINAPI CreatePrivateNamespaceA (LPSECURITY_ATTRIBUTES lpPrivateNamespaceAttributes, LPVOID lpBoundaryDescriptor, LPCSTR lpAliasPrefix);", "OpenPrivateNamespaceA": "WINBASEAPI HANDLE WINAPI OpenPrivateNamespaceA (LPVOID lpBoundaryDescriptor, LPCSTR lpAliasPrefix);", "SetVolumeLabelW": "WINBASEAPI WINBOOL WINAPI SetVolumeLabelW (LPCWSTR lpRootPathName, LPCWSTR lpVolumeName);", "GetComputerNameA": "WINBASEAPI WINBOOL WINAPI GetComputerNameA (LPSTR lpBuffer, LPDWORD nSize);", "GetComputerNameW": "WINBASEAPI WINBOOL WINAPI GetComputerNameW (LPWSTR lpBuffer, LPDWORD nSize);", "GetSystemPowerStatus": "WINBASEAPI WINBOOL WINAPI GetSystemPowerStatus (LPSYSTEM_POWER_STATUS lpSystemPowerStatus);", "SetSystemPowerState": "WINBASEAPI WINBOOL WINAPI SetSystemPowerState (WINBOOL fSuspend, WINBOOL fForce);", "BAD_MEMORY_CALLBACK_ROUTINE": "typedef VOID WINAPI BAD_MEMORY_CALLBACK_ROUTINE(VOID);", "RegisterBadMemoryNotification": "WINBASEAPI PVOID WINAPI RegisterBadMemoryNotification(PBAD_MEMORY_CALLBACK_ROUTINE Callback);", "UnregisterBadMemoryNotification": "WINBASEAPI WINBOOL WINAPI UnregisterBadMemoryNotification(PVOID RegistrationHandle);", "GetMemoryErrorHandlingCapabilities": "WINBASEAPI WINBOOL WINAPI GetMemoryErrorHandlingCapabilities(PULONG Capabilities);", "AllocateUserPhysicalPages": "WINBASEAPI WINBOOL WINAPI AllocateUserPhysicalPages(HANDLE hProcess, PULONG_PTR NumberOfPages, PULONG_PTR PageArray);", "FreeUserPhysicalPages": "WINBASEAPI WINBOOL WINAPI FreeUserPhysicalPages(HANDLE hProcess, PULONG_PTR NumberOfPages, PULONG_PTR PageArray);", "MapUserPhysicalPages": "WINBASEAPI WINBOOL WINAPI MapUserPhysicalPages(PVOID VirtualAddress, ULONG_PTR NumberOfPages, PULONG_PTR PageArray);", "MapUserPhysicalPagesScatter": "WINBASEAPI WINBOOL WINAPI MapUserPhysicalPagesScatter (PVOID *VirtualAddresses, ULONG_PTR NumberOfPages, PULONG_PTR PageArray);", "CreateJobObjectA": "WINBASEAPI HANDLE WINAPI CreateJobObjectA (LPSECURITY_ATTRIBUTES lpJobAttributes, LPCSTR lpName);", "CreateJobObjectW": "WINBASEAPI HANDLE WINAPI CreateJobObjectW (LPSECURITY_ATTRIBUTES lpJobAttributes, LPCWSTR lpName);", "OpenJobObjectA": "WINBASEAPI HANDLE WINAPI OpenJobObjectA (DWORD dwDesiredAccess, WINBOOL bInheritHandle, LPCSTR lpName);", "OpenJobObjectW": "WINBASEAPI HANDLE WINAPI OpenJobObjectW (DWORD dwDesiredAccess, WINBOOL bInheritHandle, LPCWSTR lpName);", "AssignProcessToJobObject": "WINBASEAPI WINBOOL WINAPI AssignProcessToJobObject (HANDLE hJob, HANDLE hProcess);", "TerminateJobObject": "WINBASEAPI WINBOOL WINAPI TerminateJobObject (HANDLE hJob, UINT uExitCode);", "QueryInformationJobObject": "WINBASEAPI WINBOOL WINAPI QueryInformationJobObject (HANDLE hJob, JOBOBJECTINFOCLASS JobObjectInformationClass, LPVOID lpJobObjectInformation, DWORD cbJobObjectInformationLength, LPDWORD lpReturnLength);", "SetInformationJobObject": "WINBASEAPI WINBOOL WINAPI SetInformationJobObject (HANDLE hJob, JOBOBJECTINFOCLASS JobObjectInformationClass, LPVOID lpJobObjectInformation, DWORD cbJobObjectInformationLength);", "CreateJobSet": "WINBASEAPI WINBOOL WINAPI CreateJobSet (ULONG NumJob, PJOB_SET_ARRAY UserJobSet, ULONG Flags);", "FindFirstVolumeA": "WINBASEAPI HANDLE WINAPI FindFirstVolumeA (LPSTR lpszVolumeName, DWORD cchBufferLength);", "FindNextVolumeA": "WINBASEAPI WINBOOL WINAPI FindNextVolumeA (HANDLE hFindVolume, LPSTR lpszVolumeName, DWORD cchBufferLength);", "FindFirstVolumeMountPointA": "WINBASEAPI HANDLE WINAPI FindFirstVolumeMountPointA (LPCSTR lpszRootPathName, LPSTR lpszVolumeMountPoint, DWORD cchBufferLength);", "FindFirstVolumeMountPointW": "WINBASEAPI HANDLE WINAPI FindFirstVolumeMountPointW (LPCWSTR lpszRootPathName, LPWSTR lpszVolumeMountPoint, DWORD cchBufferLength);", "FindNextVolumeMountPointA": "WINBASEAPI WINBOOL WINAPI FindNextVolumeMountPointA (HANDLE hFindVolumeMountPoint, LPSTR lpszVolumeMountPoint, DWORD cchBufferLength);", "FindNextVolumeMountPointW": "WINBASEAPI WINBOOL WINAPI FindNextVolumeMountPointW (HANDLE hFindVolumeMountPoint, LPWSTR lpszVolumeMountPoint, DWORD cchBufferLength);", "FindVolumeMountPointClose": "WINBASEAPI WINBOOL WINAPI FindVolumeMountPointClose (HANDLE hFindVolumeMountPoint);", "SetVolumeMountPointA": "WINBASEAPI WINBOOL WINAPI SetVolumeMountPointA (LPCSTR lpszVolumeMountPoint, LPCSTR lpszVolumeName);", "SetVolumeMountPointW": "WINBASEAPI WINBOOL WINAPI SetVolumeMountPointW (LPCWSTR lpszVolumeMountPoint, LPCWSTR lpszVolumeName);", "GetVolumeNameForVolumeMountPointA": "WINBASEAPI WINBOOL WINAPI GetVolumeNameForVolumeMountPointA (LPCSTR lpszVolumeMountPoint, LPSTR lpszVolumeName, DWORD cchBufferLength);", "GetVolumePathNameA": "WINBASEAPI WINBOOL WINAPI GetVolumePathNameA (LPCSTR lpszFileName, LPSTR lpszVolumePathName, DWORD cchBufferLength);", "GetVolumePathNamesForVolumeNameA": "WINBASEAPI WINBOOL WINAPI GetVolumePathNamesForVolumeNameA (LPCSTR lpszVolumeName, LPCH lpszVolumePathNames, DWORD cchBufferLength, PDWORD lpcchReturnLength);", "AllocateUserPhysicalPagesNuma": "WINBASEAPI WINBOOL WINAPI AllocateUserPhysicalPagesNuma(HANDLE hProcess, PULONG_PTR NumberOfPages, PULONG_PTR PageArray, DWORD nndPreferred);", "CreateActCtxA": "WINBASEAPI HANDLE WINAPI CreateActCtxA (PCACTCTXA pActCtx);", "CreateActCtxW": "WINBASEAPI HANDLE WINAPI CreateActCtxW (PCACTCTXW pActCtx);", "AddRefActCtx": "WINBASEAPI VOID WINAPI AddRefActCtx (HANDLE hActCtx);", "ReleaseActCtx": "WINBASEAPI VOID WINAPI ReleaseActCtx (HANDLE hActCtx);", "ZombifyActCtx": "WINBASEAPI WINBOOL WINAPI ZombifyActCtx (HANDLE hActCtx);", "ActivateActCtx": "WINBASEAPI WINBOOL WINAPI ActivateActCtx (HANDLE hActCtx, ULONG_PTR *lpCookie);", "DeactivateActCtx": "WINBASEAPI WINBOOL WINAPI DeactivateActCtx (DWORD dwFlags, ULONG_PTR ulCookie);", "GetCurrentActCtx": "WINBASEAPI WINBOOL WINAPI GetCurrentActCtx (HANDLE *lphActCtx);", "FindActCtxSectionStringA": "WINBASEAPI WINBOOL WINAPI FindActCtxSectionStringA (DWORD dwFlags, const GUID *lpExtensionGuid, ULONG ulSectionId, LPCSTR lpStringToFind, PACTCTX_SECTION_KEYED_DATA ReturnedData);", "FindActCtxSectionStringW": "WINBASEAPI WINBOOL WINAPI FindActCtxSectionStringW (DWORD dwFlags, const GUID *lpExtensionGuid, ULONG ulSectionId, LPCWSTR lpStringToFind, PACTCTX_SECTION_KEYED_DATA ReturnedData);", "FindActCtxSectionGuid": "WINBASEAPI WINBOOL WINAPI FindActCtxSectionGuid (DWORD dwFlags, const GUID *lpExtensionGuid, ULONG ulSectionId, const GUID *lpGuidToFind, PACTCTX_SECTION_KEYED_DATA ReturnedData);", "QueryActCtxW": "WINBASEAPI WINBOOL WINAPI QueryActCtxW (DWORD dwFlags, HANDLE hActCtx, PVOID pvSubInstance, ULONG ulInfoClass, PVOID pvBuffer, SIZE_T cbBuffer, SIZE_T *pcbWrittenOrRequired);", "WTSGetActiveConsoleSessionId": "WINBASEAPI DWORD WINAPI WTSGetActiveConsoleSessionId (VOID);", "WTSGetServiceSessionId": "WINBASEAPI DWORD WINAPI WTSGetServiceSessionId (VOID);", "WTSIsServerContainer": "WINBASEAPI BOOLEAN WINAPI WTSIsServerContainer (VOID);", "GetNumaProcessorNode": "WINBASEAPI WINBOOL WINAPI GetNumaProcessorNode (UCHAR Processor, PUCHAR NodeNumber);", "GetNumaNodeProcessorMask": "WINBASEAPI WINBOOL WINAPI GetNumaNodeProcessorMask (UCHAR Node, PULONGLONG ProcessorMask);", "GetNumaAvailableMemoryNode": "WINBASEAPI WINBOOL WINAPI GetNumaAvailableMemoryNode (UCHAR Node, PULONGLONG AvailableBytes);", "GetNumaProximityNode": "WINBASEAPI WINBOOL WINAPI GetNumaProximityNode (ULONG ProximityId, PUCHAR NodeNumber);", "GetActiveProcessorGroupCount": "WINBASEAPI WORD WINAPI GetActiveProcessorGroupCount (VOID);", "GetMaximumProcessorGroupCount": "WINBASEAPI WORD WINAPI GetMaximumProcessorGroupCount (VOID);", "GetActiveProcessorCount": "WINBASEAPI DWORD WINAPI GetActiveProcessorCount (WORD GroupNumber);", "GetMaximumProcessorCount": "WINBASEAPI DWORD WINAPI GetMaximumProcessorCount (WORD GroupNumber);", "GetNumaNodeNumberFromHandle": "WINBASEAPI WINBOOL WINAPI GetNumaNodeNumberFromHandle (HANDLE hFile, PUSHORT NodeNumber);", "GetNumaProcessorNodeEx": "WINBASEAPI WINBOOL WINAPI GetNumaProcessorNodeEx (PPROCESSOR_NUMBER Processor, PUSHORT NodeNumber);", "GetNumaAvailableMemoryNodeEx": "WINBASEAPI WINBOOL WINAPI GetNumaAvailableMemoryNodeEx (USHORT Node, PULONGLONG AvailableBytes);", "GetNumaProximityNodeEx": "WINBASEAPI WINBOOL WINAPI GetNumaProximityNodeEx (ULONG ProximityId, PUSHORT NodeNumber);", "RegisterApplicationRecoveryCallback": "WINBASEAPI HRESULT WINAPI RegisterApplicationRecoveryCallback (APPLICATION_RECOVERY_CALLBACK pRecoveyCallback, PVOID pvParameter, DWORD dwPingInterval, DWORD dwFlags);", "UnregisterApplicationRecoveryCallback": "WINBASEAPI HRESULT WINAPI UnregisterApplicationRecoveryCallback (void);", "RegisterApplicationRestart": "WINBASEAPI HRESULT WINAPI RegisterApplicationRestart (PCWSTR pwzCommandline, DWORD dwFlags);", "UnregisterApplicationRestart": "WINBASEAPI HRESULT WINAPI UnregisterApplicationRestart (void);", "GetApplicationRecoveryCallback": "WINBASEAPI HRESULT WINAPI GetApplicationRecoveryCallback (HANDLE hProcess, APPLICATION_RECOVERY_CALLBACK *pRecoveryCallback, PVOID *ppvParameter, PDWORD pdwPingInterval, PDWORD pdwFlags);", "GetApplicationRestartSettings": "WINBASEAPI HRESULT WINAPI GetApplicationRestartSettings (HANDLE hProcess, PWSTR pwzCommandline, PDWORD pcchSize, PDWORD pdwFlags);", "ApplicationRecoveryInProgress": "WINBASEAPI HRESULT WINAPI ApplicationRecoveryInProgress (PBOOL pbCancelled);", "ApplicationRecoveryFinished": "WINBASEAPI VOID WINAPI ApplicationRecoveryFinished (WINBOOL bSuccess);", "DeleteVolumeMountPointA": "WINBASEAPI WINBOOL WINAPI DeleteVolumeMountPointA (LPCSTR lpszVolumeMountPoint);", "GetFileInformationByHandleEx": "WINBASEAPI WINBOOL WINAPI GetFileInformationByHandleEx (HANDLE hFile, FILE_INFO_BY_HANDLE_CLASS FileInformationClass, LPVOID lpFileInformation, DWORD dwBufferSize);", "OpenFileById": "WINBASEAPI HANDLE WINAPI OpenFileById (HANDLE hVolumeHint, LPFILE_ID_DESCRIPTOR lpFileId, DWORD dwDesiredAccess, DWORD dwShareMode, LPSECURITY_ATTRIBUTES lpSecurityAttributes, DWORD dwFlagsAndAttributes);", "QueryActCtxSettingsW": "WINBASEAPI WINBOOL WINAPI QueryActCtxSettingsW (DWORD dwFlags, HANDLE hActCtx, PCWSTR settingsNameSpace, PCWSTR settingName, PWSTR pvBuffer, SIZE_T dwBuffer, SIZE_T *pdwWrittenOrRequired);", "ReplacePartitionUnit": "WINBASEAPI WINBOOL WINAPI ReplacePartitionUnit (PWSTR TargetPartition, PWSTR SparePartition, ULONG Flags);", "AddSecureMemoryCacheCallback": "WINBASEAPI WINBOOL WINAPI AddSecureMemoryCacheCallback (PSECURE_MEMORY_CACHE_CALLBACK pfnCallBack);", "RemoveSecureMemoryCacheCallback": "WINBASEAPI WINBOOL WINAPI RemoveSecureMemoryCacheCallback (PSECURE_MEMORY_CACHE_CALLBACK pfnCallBack);", "CopyContext": "WINBASEAPI WINBOOL WINAPI CopyContext (PCONTEXT Destination, DWORD ContextFlags, PCONTEXT Source);", "InitializeContext": "WINBASEAPI WINBOOL WINAPI InitializeContext (PVOID Buffer, DWORD ContextFlags, PCONTEXT *Context, PDWORD ContextLength);", "InitializeContext2": "WINBASEAPI WINBOOL WINAPI InitializeContext2 (PVOID Buffer, DWORD ContextFlags, PCONTEXT *Context, PDWORD ContextLength, ULONG64 XStateCompactionMask);", "GetEnabledXStateFeatures": "WINBASEAPI DWORD64 WINAPI GetEnabledXStateFeatures (VOID);", "GetXStateFeaturesMask": "WINBASEAPI WINBOOL WINAPI GetXStateFeaturesMask (PCONTEXT Context, PDWORD64 FeatureMask);", "LocateXStateFeature": "WINBASEAPI PVOID WINAPI LocateXStateFeature (PCONTEXT Context, DWORD FeatureId, PDWORD Length);", "SetXStateFeaturesMask": "WINBASEAPI WINBOOL WINAPI SetXStateFeaturesMask (PCONTEXT Context, DWORD64 FeatureMask);", "GetThreadEnabledXStateFeatures": "WINBASEAPI DWORD64 WINAPI GetThreadEnabledXStateFeatures(VOID);", "EnableProcessOptionalXStateFeatures": "WINBASEAPI WINBOOL WINAPI EnableProcessOptionalXStateFeatures(DWORD64 Features);", "DirectDrawEnumerateA": "HRESULT WINAPI DirectDrawEnumerateA(LPDDENUMCALLBACKA,LPVOID);", "DirectDrawEnumerateW": "HRESULT WINAPI DirectDrawEnumerateW(LPDDENUMCALLBACKW,LPVOID);", "DirectDrawEnumerateExA": "HRESULT WINAPI DirectDrawEnumerateExA( LPDDENUMCALLBACKEXA lpCallback, LPVOID lpContext, DWORD dwFlags);", "DirectDrawEnumerateExW": "HRESULT WINAPI DirectDrawEnumerateExW( LPDDENUMCALLBACKEXW lpCallback, LPVOID lpContext, DWORD dwFlags);", "DirectDrawCreate": "HRESULT WINAPI DirectDrawCreate(GUID*,LPDIRECTDRAW*,IUnknown*);", "DirectDrawCreateEx": "HRESULT WINAPI DirectDrawCreateEx(GUID*,LPVOID*,REFIID,IUnknown*);", "DirectDrawCreateClipper": "HRESULT WINAPI DirectDrawCreateClipper(DWORD,LPDIRECTDRAWCLIPPER*,IUnknown*);", "NCryptOpenStorageProvider": "SECURITY_STATUS WINAPI NCryptOpenStorageProvider (NCRYPT_PROV_HANDLE *phProvider, LPCWSTR pszProviderName, DWORD dwFlags);", "NCryptEnumAlgorithms": "SECURITY_STATUS WINAPI NCryptEnumAlgorithms (NCRYPT_PROV_HANDLE hProvider, DWORD dwAlgOperations, DWORD *pdwAlgCount, NCryptAlgorithmName **ppAlgList, DWORD dwFlags);", "NCryptIsAlgSupported": "SECURITY_STATUS WINAPI NCryptIsAlgSupported (NCRYPT_PROV_HANDLE hProvider, LPCWSTR pszAlgId, DWORD dwFlags);", "NCryptEnumKeys": "SECURITY_STATUS WINAPI NCryptEnumKeys (NCRYPT_PROV_HANDLE hProvider, LPCWSTR pszScope, NCryptKeyName **ppKeyName, PVOID *ppEnumState, DWORD dwFlags);", "NCryptEnumStorageProviders": "SECURITY_STATUS WINAPI NCryptEnumStorageProviders (DWORD *pdwProviderCount, NCryptProviderName **ppProviderList, DWORD dwFlags);", "NCryptFreeBuffer": "SECURITY_STATUS WINAPI NCryptFreeBuffer (PVOID pvInput);", "NCryptOpenKey": "SECURITY_STATUS WINAPI NCryptOpenKey (NCRYPT_PROV_HANDLE hProvider, NCRYPT_KEY_HANDLE *phKey, LPCWSTR pszKeyName, DWORD dwLegacyKeySpec, DWORD dwFlags);", "NCryptCreatePersistedKey": "SECURITY_STATUS WINAPI NCryptCreatePersistedKey (NCRYPT_PROV_HANDLE hProvider, NCRYPT_KEY_HANDLE *phKey, LPCWSTR pszAlgId, LPCWSTR pszKeyName, DWORD dwLegacyKeySpec, DWORD dwFlags);", "NCryptGetProperty": "SECURITY_STATUS WINAPI NCryptGetProperty (NCRYPT_HANDLE hObject, LPCWSTR pszProperty, PBYTE pbOutput, DWORD cbOutput, DWORD *pcbResult, DWORD dwFlags);", "NCryptSetProperty": "SECURITY_STATUS WINAPI NCryptSetProperty (NCRYPT_HANDLE hObject, LPCWSTR pszProperty, PBYTE pbInput, DWORD cbInput, DWORD dwFlags);", "NCryptFinalizeKey": "SECURITY_STATUS WINAPI NCryptFinalizeKey (NCRYPT_KEY_HANDLE hKey, DWORD dwFlags);", "NCryptEncrypt": "SECURITY_STATUS WINAPI NCryptEncrypt (NCRYPT_KEY_HANDLE hKey, PBYTE pbInput, DWORD cbInput, VOID *pPaddingInfo, PBYTE pbOutput, DWORD cbOutput, DWORD *pcbResult, DWORD dwFlags);", "NCryptDecrypt": "SECURITY_STATUS WINAPI NCryptDecrypt (NCRYPT_KEY_HANDLE hKey, PBYTE pbInput, DWORD cbInput, VOID *pPaddingInfo, PBYTE pbOutput, DWORD cbOutput, DWORD *pcbResult, DWORD dwFlags);", "NCryptImportKey": "SECURITY_STATUS WINAPI NCryptImportKey (NCRYPT_PROV_HANDLE hProvider, NCRYPT_KEY_HANDLE hImportKey, LPCWSTR pszBlobType, NCryptBufferDesc *pParameterList, NCRYPT_KEY_HANDLE *phKey, PBYTE pbData, DWORD cbData, DWORD dwFlags);", "NCryptExportKey": "SECURITY_STATUS WINAPI NCryptExportKey (NCRYPT_KEY_HANDLE hKey, NCRYPT_KEY_HANDLE hExportKey, LPCWSTR pszBlobType, NCryptBufferDesc *pParameterList, PBYTE pbOutput, DWORD cbOutput, DWORD *pcbResult, DWORD dwFlags);", "NCryptSignHash": "SECURITY_STATUS WINAPI NCryptSignHash (NCRYPT_KEY_HANDLE hKey, VOID *pPaddingInfo, PBYTE pbHashValue, DWORD cbHashValue, PBYTE pbSignature, DWORD cbSignature, DWORD *pcbResult, DWORD dwFlags);", "NCryptVerifySignature": "SECURITY_STATUS WINAPI NCryptVerifySignature (NCRYPT_KEY_HANDLE hKey, VOID *pPaddingInfo, PBYTE pbHashValue, DWORD cbHashValue, PBYTE pbSignature, DWORD cbSignature, DWORD dwFlags);", "NCryptDeleteKey": "SECURITY_STATUS WINAPI NCryptDeleteKey (NCRYPT_KEY_HANDLE hKey, DWORD dwFlags);", "NCryptFreeObject": "SECURITY_STATUS WINAPI NCryptFreeObject (NCRYPT_HANDLE hObject);", "NCryptIsKeyHandle": "WINBOOL WINAPI NCryptIsKeyHandle (NCRYPT_KEY_HANDLE hKey);", "NCryptTranslateHandle": "SECURITY_STATUS WINAPI NCryptTranslateHandle (NCRYPT_PROV_HANDLE *phProvider, NCRYPT_KEY_HANDLE *phKey, HCRYPTPROV hLegacyProv, HCRYPTKEY hLegacyKey, DWORD dwLegacyKeySpec, DWORD dwFlags);", "NCryptNotifyChangeKey": "SECURITY_STATUS WINAPI NCryptNotifyChangeKey (NCRYPT_PROV_HANDLE hProvider, HANDLE *phEvent, DWORD dwFlags);", "NCryptSecretAgreement": "SECURITY_STATUS WINAPI NCryptSecretAgreement (NCRYPT_KEY_HANDLE hPrivKey, NCRYPT_KEY_HANDLE hPubKey, NCRYPT_SECRET_HANDLE *phAgreedSecret, DWORD dwFlags);", "NCryptDeriveKey": "SECURITY_STATUS WINAPI NCryptDeriveKey (NCRYPT_SECRET_HANDLE hSharedSecret, LPCWSTR pwszKDF, NCryptBufferDesc *pParameterList, PBYTE pbDerivedKey, DWORD cbDerivedKey, DWORD *pcbResult, ULONG dwFlags);", "NCryptKeyDerivation": "SECURITY_STATUS WINAPI NCryptKeyDerivation (NCRYPT_KEY_HANDLE hKey, NCryptBufferDesc *pParameterList, PUCHAR pbDerivedKey, DWORD cbDerivedKey, DWORD *pcbResult, ULONG dwFlags);", "NCryptCreateClaim": "SECURITY_STATUS WINAPI NCryptCreateClaim (NCRYPT_KEY_HANDLE hSubjectKey, NCRYPT_KEY_HANDLE hAuthorityKey, DWORD dwClaimType, NCryptBufferDesc *pParameterList, PBYTE pbClaimBlob, DWORD cbClaimBlob, DWORD *pcbResult, DWORD dwFlags);", "NCryptVerifyClaim": "SECURITY_STATUS WINAPI NCryptVerifyClaim (NCRYPT_KEY_HANDLE hSubjectKey, NCRYPT_KEY_HANDLE hAuthorityKey, DWORD dwClaimType, NCryptBufferDesc *pParameterList, PBYTE pbClaimBlob, DWORD cbClaimBlob, NCryptBufferDesc *pOutput, DWORD dwFlags);", "AcsLan": "ACSLAN_STATUS WINAPI AcsLan(PLLC_CCB pCcb,PLLC_CCB *ppBadCcb);", "GetAdapterNameFromNumber": "LLC_STATUS WINAPI GetAdapterNameFromNumber(UINT AdapterNumber,LPTSTR pNdisName);", "GetAdapterNumberFromName": "LLC_STATUS WINAPI GetAdapterNumberFromName(LPTSTR pNdisName,UINT *AdapterNumber);", "ReportFault": "EFaultRepRetVal WINAPI ReportFault(LPEXCEPTION_POINTERS pep,DWORD dwOpt);", "AddERExcludedApplicationA": "WINBOOL WINAPI AddERExcludedApplicationA(LPCSTR szApplication);", "AddERExcludedApplicationW": "WINBOOL WINAPI AddERExcludedApplicationW(LPCWSTR wszApplication);", "DsBindW": "NTDSAPI DWORD WINAPI DsBindW(LPCWSTR DomainControllerName,LPCWSTR DnsDomainName,HANDLE *phDS);", "DsBindA": "NTDSAPI DWORD WINAPI DsBindA(LPCSTR DomainControllerName,LPCSTR DnsDomainName,HANDLE *phDS);", "DsBindWithCredW": "NTDSAPI DWORD WINAPI DsBindWithCredW(LPCWSTR DomainControllerName,LPCWSTR DnsDomainName,RPC_AUTH_IDENTITY_HANDLE AuthIdentity,HANDLE *phDS);", "DsBindWithCredA": "NTDSAPI DWORD WINAPI DsBindWithCredA(LPCSTR DomainControllerName,LPCSTR DnsDomainName,RPC_AUTH_IDENTITY_HANDLE AuthIdentity,HANDLE *phDS);", "DsBindWithSpnW": "NTDSAPI DWORD WINAPI DsBindWithSpnW(LPCWSTR DomainControllerName,LPCWSTR DnsDomainName,RPC_AUTH_IDENTITY_HANDLE AuthIdentity,LPCWSTR ServicePrincipalName,HANDLE *phDS);", "DsBindWithSpnA": "NTDSAPI DWORD WINAPI DsBindWithSpnA(LPCSTR DomainControllerName,LPCSTR DnsDomainName,RPC_AUTH_IDENTITY_HANDLE AuthIdentity,LPCSTR ServicePrincipalName,HANDLE *phDS);", "DsBindWithSpnExW": "NTDSAPI_POSTXP DWORD WINAPI DsBindWithSpnExW(LPCWSTR DomainControllerName,LPCWSTR DnsDomainName,RPC_AUTH_IDENTITY_HANDLE AuthIdentity,LPCWSTR ServicePrincipalName,DWORD BindFlags,HANDLE *phDS);", "DsBindWithSpnExA": "NTDSAPI_POSTXP DWORD WINAPI DsBindWithSpnExA(LPCSTR DomainControllerName,LPCSTR DnsDomainName,RPC_AUTH_IDENTITY_HANDLE AuthIdentity,LPCSTR ServicePrincipalName,DWORD BindFlags,HANDLE *phDS);", "DsBindToISTGW": "NTDSAPI_POSTXP DWORD WINAPI DsBindToISTGW(LPCWSTR SiteName,HANDLE *phDS);", "DsBindToISTGA": "NTDSAPI_POSTXP DWORD WINAPI DsBindToISTGA(LPCSTR SiteName,HANDLE *phDS);", "DsBindingSetTimeout": "NTDSAPI_POSTXP DWORD WINAPI DsBindingSetTimeout(HANDLE hDS,ULONG cTimeoutSecs);", "DsUnBindW": "NTDSAPI DWORD WINAPI DsUnBindW(HANDLE *phDS);", "DsUnBindA": "NTDSAPI DWORD WINAPI DsUnBindA(HANDLE *phDS);", "DsMakePasswordCredentialsW": "NTDSAPI DWORD WINAPI DsMakePasswordCredentialsW(LPCWSTR User,LPCWSTR Domain,LPCWSTR Password,RPC_AUTH_IDENTITY_HANDLE *pAuthIdentity);", "DsMakePasswordCredentialsA": "NTDSAPI DWORD WINAPI DsMakePasswordCredentialsA(LPCSTR User,LPCSTR Domain,LPCSTR Password,RPC_AUTH_IDENTITY_HANDLE *pAuthIdentity);", "DsFreePasswordCredentials": "NTDSAPI VOID WINAPI DsFreePasswordCredentials(RPC_AUTH_IDENTITY_HANDLE AuthIdentity);", "DsCrackNamesW": "NTDSAPI DWORD WINAPI DsCrackNamesW(HANDLE hDS,DS_NAME_FLAGS flags,DS_NAME_FORMAT formatOffered,DS_NAME_FORMAT formatDesired,DWORD cNames,const LPCWSTR *rpNames,PDS_NAME_RESULTW *ppResult);", "DsCrackNamesA": "NTDSAPI DWORD WINAPI DsCrackNamesA(HANDLE hDS,DS_NAME_FLAGS flags,DS_NAME_FORMAT formatOffered,DS_NAME_FORMAT formatDesired,DWORD cNames,const LPCSTR *rpNames,PDS_NAME_RESULTA *ppResult);", "DsFreeNameResultW": "NTDSAPI void WINAPI DsFreeNameResultW(DS_NAME_RESULTW *pResult);", "DsFreeNameResultA": "NTDSAPI void WINAPI DsFreeNameResultA(DS_NAME_RESULTA *pResult);", "DsMakeSpnW": "NTDSAPI DWORD WINAPI DsMakeSpnW(LPCWSTR ServiceClass,LPCWSTR ServiceName,LPCWSTR InstanceName,USHORT InstancePort,LPCWSTR Referrer,DWORD *pcSpnLength,LPWSTR pszSpn);", "DsMakeSpnA": "NTDSAPI DWORD WINAPI DsMakeSpnA(LPCSTR ServiceClass,LPCSTR ServiceName,LPCSTR InstanceName,USHORT InstancePort,LPCSTR Referrer,DWORD *pcSpnLength,LPSTR pszSpn);", "DsGetSpnA": "NTDSAPI DWORD WINAPI DsGetSpnA(DS_SPN_NAME_TYPE ServiceType,LPCSTR ServiceClass,LPCSTR ServiceName,USHORT InstancePort,USHORT cInstanceNames,LPCSTR *pInstanceNames,const USHORT *pInstancePorts,DWORD *pcSpn,LPSTR **prpszSpn);", "DsGetSpnW": "NTDSAPI DWORD WINAPI DsGetSpnW(DS_SPN_NAME_TYPE ServiceType,LPCWSTR ServiceClass,LPCWSTR ServiceName,USHORT InstancePort,USHORT cInstanceNames,LPCWSTR *pInstanceNames,const USHORT *pInstancePorts,DWORD *pcSpn,LPWSTR **prpszSpn);", "DsFreeSpnArrayA": "NTDSAPI void WINAPI DsFreeSpnArrayA(DWORD cSpn,LPSTR *rpszSpn);", "DsFreeSpnArrayW": "NTDSAPI void WINAPI DsFreeSpnArrayW(DWORD cSpn,LPWSTR *rpszSpn);", "DsCrackSpnA": "NTDSAPI DWORD WINAPI DsCrackSpnA(LPCSTR pszSpn,LPDWORD pcServiceClass,LPSTR ServiceClass,LPDWORD pcServiceName,LPSTR ServiceName,LPDWORD pcInstanceName,LPSTR InstanceName,USHORT *pInstancePort);", "DsCrackSpnW": "NTDSAPI DWORD WINAPI DsCrackSpnW(LPCWSTR pszSpn,DWORD *pcServiceClass,LPWSTR ServiceClass,DWORD *pcServiceName,LPWSTR ServiceName,DWORD *pcInstanceName,LPWSTR InstanceName,USHORT *pInstancePort);", "DsWriteAccountSpnA": "NTDSAPI DWORD WINAPI DsWriteAccountSpnA(HANDLE hDS,DS_SPN_WRITE_OP Operation,LPCSTR pszAccount,DWORD cSpn,LPCSTR *rpszSpn);", "DsWriteAccountSpnW": "NTDSAPI DWORD WINAPI DsWriteAccountSpnW(HANDLE hDS,DS_SPN_WRITE_OP Operation,LPCWSTR pszAccount,DWORD cSpn,LPCWSTR *rpszSpn);", "DsClientMakeSpnForTargetServerW": "NTDSAPI DWORD WINAPI DsClientMakeSpnForTargetServerW(LPCWSTR ServiceClass,LPCWSTR ServiceName,DWORD *pcSpnLength,LPWSTR pszSpn);", "DsClientMakeSpnForTargetServerA": "NTDSAPI DWORD WINAPI DsClientMakeSpnForTargetServerA(LPCSTR ServiceClass,LPCSTR ServiceName,DWORD *pcSpnLength,LPSTR pszSpn);", "DsServerRegisterSpnA": "NTDSAPI DWORD WINAPI DsServerRegisterSpnA(DS_SPN_WRITE_OP Operation,LPCSTR ServiceClass,LPCSTR UserObjectDN);", "DsServerRegisterSpnW": "NTDSAPI DWORD WINAPI DsServerRegisterSpnW(DS_SPN_WRITE_OP Operation,LPCWSTR ServiceClass,LPCWSTR UserObjectDN);", "DsReplicaSyncA": "NTDSAPI DWORD WINAPI DsReplicaSyncA(HANDLE hDS,LPCSTR NameContext,const UUID *pUuidDsaSrc,ULONG Options);", "DsReplicaSyncW": "NTDSAPI DWORD WINAPI DsReplicaSyncW(HANDLE hDS,LPCWSTR NameContext,const UUID *pUuidDsaSrc,ULONG Options);", "DsReplicaAddA": "NTDSAPI DWORD WINAPI DsReplicaAddA(HANDLE hDS,LPCSTR NameContext,LPCSTR SourceDsaDn,LPCSTR TransportDn,LPCSTR SourceDsaAddress,const PSCHEDULE pSchedule,DWORD Options);", "DsReplicaAddW": "NTDSAPI DWORD WINAPI DsReplicaAddW(HANDLE hDS,LPCWSTR NameContext,LPCWSTR SourceDsaDn,LPCWSTR TransportDn,LPCWSTR SourceDsaAddress,const PSCHEDULE pSchedule,DWORD Options);", "DsReplicaDelA": "NTDSAPI DWORD WINAPI DsReplicaDelA(HANDLE hDS,LPCSTR NameContext,LPCSTR DsaSrc,ULONG Options);", "DsReplicaDelW": "NTDSAPI DWORD WINAPI DsReplicaDelW(HANDLE hDS,LPCWSTR NameContext,LPCWSTR DsaSrc,ULONG Options);", "DsReplicaModifyA": "NTDSAPI DWORD WINAPI DsReplicaModifyA(HANDLE hDS,LPCSTR NameContext,const UUID *pUuidSourceDsa,LPCSTR TransportDn,LPCSTR SourceDsaAddress,const PSCHEDULE pSchedule,DWORD ReplicaFlags,DWORD ModifyFields,DWORD Options);", "DsReplicaModifyW": "NTDSAPI DWORD WINAPI DsReplicaModifyW(HANDLE hDS,LPCWSTR NameContext,const UUID *pUuidSourceDsa,LPCWSTR TransportDn,LPCWSTR SourceDsaAddress,const PSCHEDULE pSchedule,DWORD ReplicaFlags,DWORD ModifyFields,DWORD Options);", "DsReplicaUpdateRefsA": "NTDSAPI DWORD WINAPI DsReplicaUpdateRefsA(HANDLE hDS,LPCSTR NameContext,LPCSTR DsaDest,const UUID *pUuidDsaDest,ULONG Options);", "DsReplicaUpdateRefsW": "NTDSAPI DWORD WINAPI DsReplicaUpdateRefsW(HANDLE hDS,LPCWSTR NameContext,LPCWSTR DsaDest,const UUID *pUuidDsaDest,ULONG Options);", "DsRemoveDsServerW": "NTDSAPI DWORD WINAPI DsRemoveDsServerW(HANDLE hDs,LPWSTR ServerDN,LPWSTR DomainDN,WINBOOL *fLastDcInDomain,WINBOOL fCommit);", "DsRemoveDsServerA": "NTDSAPI DWORD WINAPI DsRemoveDsServerA(HANDLE hDs,LPSTR ServerDN,LPSTR DomainDN,WINBOOL *fLastDcInDomain,WINBOOL fCommit);", "DsRemoveDsDomainW": "NTDSAPI DWORD WINAPI DsRemoveDsDomainW(HANDLE hDs,LPWSTR DomainDN);", "DsRemoveDsDomainA": "NTDSAPI DWORD WINAPI DsRemoveDsDomainA(HANDLE hDs,LPSTR DomainDN);", "DsListSitesA": "NTDSAPI DWORD WINAPI DsListSitesA(HANDLE hDs,PDS_NAME_RESULTA *ppSites);", "DsListSitesW": "NTDSAPI DWORD WINAPI DsListSitesW(HANDLE hDs,PDS_NAME_RESULTW *ppSites);", "DsListServersInSiteA": "NTDSAPI DWORD WINAPI DsListServersInSiteA(HANDLE hDs,LPCSTR site,PDS_NAME_RESULTA *ppServers);", "DsListServersInSiteW": "NTDSAPI DWORD WINAPI DsListServersInSiteW(HANDLE hDs,LPCWSTR site,PDS_NAME_RESULTW *ppServers);", "DsListDomainsInSiteA": "NTDSAPI DWORD WINAPI DsListDomainsInSiteA(HANDLE hDs,LPCSTR site,PDS_NAME_RESULTA *ppDomains);", "DsListDomainsInSiteW": "NTDSAPI DWORD WINAPI DsListDomainsInSiteW(HANDLE hDs,LPCWSTR site,PDS_NAME_RESULTW *ppDomains);", "DsListServersForDomainInSiteA": "NTDSAPI DWORD WINAPI DsListServersForDomainInSiteA(HANDLE hDs,LPCSTR domain,LPCSTR site,PDS_NAME_RESULTA *ppServers);", "DsListServersForDomainInSiteW": "NTDSAPI DWORD WINAPI DsListServersForDomainInSiteW(HANDLE hDs,LPCWSTR domain,LPCWSTR site,PDS_NAME_RESULTW *ppServers);", "DsListInfoForServerA": "NTDSAPI DWORD WINAPI DsListInfoForServerA(HANDLE hDs,LPCSTR server,PDS_NAME_RESULTA *ppInfo);", "DsListInfoForServerW": "NTDSAPI DWORD WINAPI DsListInfoForServerW(HANDLE hDs,LPCWSTR server,PDS_NAME_RESULTW *ppInfo);", "DsListRolesA": "NTDSAPI DWORD WINAPI DsListRolesA(HANDLE hDs,PDS_NAME_RESULTA *ppRoles);", "DsListRolesW": "NTDSAPI DWORD WINAPI DsListRolesW(HANDLE hDs,PDS_NAME_RESULTW *ppRoles);", "DsQuerySitesByCostW": "NTDSAPI_POSTXP DWORD WINAPI DsQuerySitesByCostW(HANDLE hDS,LPWSTR pwszFromSite,LPWSTR *rgwszToSites,DWORD cToSites,DWORD dwFlags,PDS_SITE_COST_INFO *prgSiteInfo);", "DsQuerySitesByCostA": "NTDSAPI_POSTXP DWORD WINAPI DsQuerySitesByCostA(HANDLE hDS,LPSTR pwszFromSite,LPSTR *rgwszToSites,DWORD cToSites,DWORD dwFlags,PDS_SITE_COST_INFO *prgSiteInfo);", "DsMapSchemaGuidsA": "NTDSAPI DWORD WINAPI DsMapSchemaGuidsA(HANDLE hDs,DWORD cGuids,GUID *rGuids,DS_SCHEMA_GUID_MAPA **ppGuidMap);", "DsFreeSchemaGuidMapA": "NTDSAPI VOID WINAPI DsFreeSchemaGuidMapA(PDS_SCHEMA_GUID_MAPA pGuidMap);", "DsMapSchemaGuidsW": "NTDSAPI DWORD WINAPI DsMapSchemaGuidsW(HANDLE hDs,DWORD cGuids,GUID *rGuids,DS_SCHEMA_GUID_MAPW **ppGuidMap);", "DsFreeSchemaGuidMapW": "NTDSAPI VOID WINAPI DsFreeSchemaGuidMapW(PDS_SCHEMA_GUID_MAPW pGuidMap);", "DsGetDomainControllerInfoA": "NTDSAPI DWORD WINAPI DsGetDomainControllerInfoA(HANDLE hDs,LPCSTR DomainName,DWORD InfoLevel,DWORD *pcOut,VOID **ppInfo);", "DsGetDomainControllerInfoW": "NTDSAPI DWORD WINAPI DsGetDomainControllerInfoW(HANDLE hDs,LPCWSTR DomainName,DWORD InfoLevel,DWORD *pcOut,VOID **ppInfo);", "DsFreeDomainControllerInfoA": "NTDSAPI VOID WINAPI DsFreeDomainControllerInfoA(DWORD InfoLevel,DWORD cInfo,VOID *pInfo);", "DsFreeDomainControllerInfoW": "NTDSAPI VOID WINAPI DsFreeDomainControllerInfoW(DWORD InfoLevel,DWORD cInfo,VOID *pInfo);", "DsReplicaConsistencyCheck": "NTDSAPI DWORD WINAPI DsReplicaConsistencyCheck(HANDLE hDS,DS_KCC_TASKID TaskID,DWORD dwFlags);", "DsReplicaVerifyObjectsW": "NTDSAPI DWORD WINAPI DsReplicaVerifyObjectsW(HANDLE hDS,LPCWSTR NameContext,const UUID *pUuidDsaSrc,ULONG ulOptions);", "DsReplicaVerifyObjectsA": "NTDSAPI DWORD WINAPI DsReplicaVerifyObjectsA(HANDLE hDS,LPCSTR NameContext,const UUID *pUuidDsaSrc,ULONG ulOptions);", "DsReplicaGetInfoW": "NTDSAPI DWORD WINAPI DsReplicaGetInfoW(HANDLE hDS,DS_REPL_INFO_TYPE InfoType,LPCWSTR pszObject,UUID *puuidForSourceDsaObjGuid,VOID **ppInfo);", "DsReplicaGetInfo2W": "NTDSAPI DWORD WINAPI DsReplicaGetInfo2W(HANDLE hDS,DS_REPL_INFO_TYPE InfoType,LPCWSTR pszObject,UUID *puuidForSourceDsaObjGuid,LPCWSTR pszAttributeName,LPCWSTR pszValue,DWORD dwFlags,DWORD dwEnumerationContext,VOID **ppInfo);", "DsReplicaFreeInfo": "NTDSAPI void WINAPI DsReplicaFreeInfo(DS_REPL_INFO_TYPE InfoType,VOID *pInfo);", "DsAddSidHistoryW": "NTDSAPI DWORD WINAPI DsAddSidHistoryW(HANDLE hDS,DWORD Flags,LPCWSTR SrcDomain,LPCWSTR SrcPrincipal,LPCWSTR SrcDomainController,RPC_AUTH_IDENTITY_HANDLE SrcDomainCreds,LPCWSTR DstDomain,LPCWSTR DstPrincipal);", "DsAddSidHistoryA": "NTDSAPI DWORD WINAPI DsAddSidHistoryA(HANDLE hDS,DWORD Flags,LPCSTR SrcDomain,LPCSTR SrcPrincipal,LPCSTR SrcDomainController,RPC_AUTH_IDENTITY_HANDLE SrcDomainCreds,LPCSTR DstDomain,LPCSTR DstPrincipal);", "DsInheritSecurityIdentityW": "NTDSAPI DWORD WINAPI DsInheritSecurityIdentityW(HANDLE hDS,DWORD Flags,LPCWSTR SrcPrincipal,LPCWSTR DstPrincipal);", "DsInheritSecurityIdentityA": "NTDSAPI DWORD WINAPI DsInheritSecurityIdentityA(HANDLE hDS,DWORD Flags,LPCSTR SrcPrincipal,LPCSTR DstPrincipal);", "DsQuoteRdnValueW": "NTDSAPI DWORD WINAPI DsQuoteRdnValueW(DWORD cUnquotedRdnValueLength,LPCWCH psUnquotedRdnValue,DWORD *pcQuotedRdnValueLength,LPWCH psQuotedRdnValue);", "DsQuoteRdnValueA": "NTDSAPI DWORD WINAPI DsQuoteRdnValueA(DWORD cUnquotedRdnValueLength,LPCCH psUnquotedRdnValue,DWORD *pcQuotedRdnValueLength,LPCH psQuotedRdnValue);", "DsUnquoteRdnValueW": "NTDSAPI DWORD WINAPI DsUnquoteRdnValueW(DWORD cQuotedRdnValueLength,LPCWCH psQuotedRdnValue,DWORD *pcUnquotedRdnValueLength,LPWCH psUnquotedRdnValue);", "DsUnquoteRdnValueA": "NTDSAPI DWORD WINAPI DsUnquoteRdnValueA(DWORD cQuotedRdnValueLength,LPCCH psQuotedRdnValue,DWORD *pcUnquotedRdnValueLength,LPCH psUnquotedRdnValue);", "DsGetRdnW": "NTDSAPI DWORD WINAPI DsGetRdnW(LPCWCH *ppDN,DWORD *pcDN,LPCWCH *ppKey,DWORD *pcKey,LPCWCH *ppVal,DWORD *pcVal);", "DsCrackUnquotedMangledRdnW": "NTDSAPI WINBOOL WINAPI DsCrackUnquotedMangledRdnW(LPCWSTR pszRDN,DWORD cchRDN,GUID *pGuid,DS_MANGLE_FOR *peDsMangleFor);", "DsCrackUnquotedMangledRdnA": "NTDSAPI WINBOOL WINAPI DsCrackUnquotedMangledRdnA(LPCSTR pszRDN,DWORD cchRDN,GUID *pGuid,DS_MANGLE_FOR *peDsMangleFor);", "DsIsMangledRdnValueW": "NTDSAPI WINBOOL WINAPI DsIsMangledRdnValueW(LPCWSTR pszRdn,DWORD cRdn,DS_MANGLE_FOR eDsMangleForDesired);", "DsIsMangledRdnValueA": "NTDSAPI WINBOOL WINAPI DsIsMangledRdnValueA(LPCSTR pszRdn,DWORD cRdn,DS_MANGLE_FOR eDsMangleForDesired);", "DsIsMangledDnA": "NTDSAPI WINBOOL WINAPI DsIsMangledDnA(LPCSTR pszDn,DS_MANGLE_FOR eDsMangleFor);", "DsIsMangledDnW": "NTDSAPI WINBOOL WINAPI DsIsMangledDnW(LPCWSTR pszDn,DS_MANGLE_FOR eDsMangleFor);", "WSDCreateDeviceProxy": "HRESULT WINAPI WSDCreateDeviceProxy(LPCWSTR pszDeviceId, LPCWSTR pszLocalId, IWSDXMLContext *pContext, IWSDDeviceProxy **ppDeviceProxy);", "WSDCreateDeviceProxyAdvanced": "HRESULT WINAPI WSDCreateDeviceProxyAdvanced(LPCWSTR pszDeviceId, IWSDAddress* pDeviceAddress, LPCWSTR pszLocalId, IWSDXMLContext *pContext, IWSDDeviceProxy **ppDeviceProxy);", "WSDCreateDeviceProxy2": "HRESULT WINAPI WSDCreateDeviceProxy2(LPCWSTR pszDeviceId, LPCWSTR pszLocalId, IWSDXMLContext *pContext, WSD_CONFIG_PARAM *pConfigParams, DWORD dwConfigParamCount, IWSDDeviceProxy **ppDeviceProxy);", "EvtArchiveExportedLog": "WINBOOL WINAPI EvtArchiveExportedLog(", "EvtCancel": "WINBOOL WINAPI EvtCancel(", "EvtClearLog": "WINBOOL WINAPI EvtClearLog(", "EvtClose": "WINBOOL WINAPI EvtClose(", "EvtCreateBookmark": "EVT_HANDLE WINAPI EvtCreateBookmark(", "EvtCreateRenderContext": "EVT_HANDLE WINAPI EvtCreateRenderContext(", "EvtExportLog": "WINBOOL WINAPI EvtExportLog(", "EvtFormatMessage": "WINBOOL WINAPI EvtFormatMessage(", "EvtGetChannelConfigProperty": "WINBOOL WINAPI EvtGetChannelConfigProperty(", "EvtGetEventInfo": "WINBOOL WINAPI EvtGetEventInfo(", "EvtGetEventMetadataProperty": "WINBOOL WINAPI EvtGetEventMetadataProperty(", "EvtGetExtendedStatus": "DWORD WINAPI EvtGetExtendedStatus(", "EvtGetLogInfo": "WINBOOL WINAPI EvtGetLogInfo(", "EvtGetObjectArrayProperty": "WINBOOL WINAPI EvtGetObjectArrayProperty(", "EvtGetObjectArraySize": "WINBOOL WINAPI EvtGetObjectArraySize(", "EvtGetPublisherMetadataProperty": "WINBOOL WINAPI EvtGetPublisherMetadataProperty(", "EvtGetQueryInfo": "WINBOOL WINAPI EvtGetQueryInfo(", "EvtNext": "WINBOOL WINAPI EvtNext(", "EvtNextChannelPath": "WINBOOL WINAPI EvtNextChannelPath(", "EvtNextEventMetadata": "EVT_HANDLE WINAPI EvtNextEventMetadata(", "EvtNextPublisherId": "WINBOOL WINAPI EvtNextPublisherId(", "EvtOpenChannelConfig": "EVT_HANDLE WINAPI EvtOpenChannelConfig(", "EvtOpenChannelEnum": "EVT_HANDLE WINAPI EvtOpenChannelEnum(", "EvtOpenEventMetadataEnum": "EVT_HANDLE WINAPI EvtOpenEventMetadataEnum(", "EvtOpenLog": "EVT_HANDLE WINAPI EvtOpenLog(", "EvtOpenPublisherEnum": "EVT_HANDLE WINAPI EvtOpenPublisherEnum(", "EvtOpenPublisherMetadata": "EVT_HANDLE WINAPI EvtOpenPublisherMetadata(", "EvtOpenSession": "EVT_HANDLE WINAPI EvtOpenSession(", "EvtQuery": "EVT_HANDLE WINAPI EvtQuery(", "EvtRender": "WINBOOL WINAPI EvtRender(", "EvtSaveChannelConfig": "WINBOOL WINAPI EvtSaveChannelConfig(", "EvtSeek": "WINBOOL WINAPI EvtSeek(", "EvtSetChannelConfigProperty": "WINBOOL WINAPI EvtSetChannelConfigProperty(", "EvtSubscribe": "EVT_HANDLE WINAPI EvtSubscribe(", "EvtUpdateBookmark": "WINBOOL WINAPI EvtUpdateBookmark(", "SetupGetInfInformationA": "WINSETUPAPI WINBOOL WINAPI SetupGetInfInformationA(LPCVOID InfSpec,DWORD SearchControl,PSP_INF_INFORMATION ReturnBuffer,DWORD ReturnBufferSize,PDWORD RequiredSize);", "SetupGetInfInformationW": "WINSETUPAPI WINBOOL WINAPI SetupGetInfInformationW(LPCVOID InfSpec,DWORD SearchControl,PSP_INF_INFORMATION ReturnBuffer,DWORD ReturnBufferSize,PDWORD RequiredSize);", "SetupQueryInfFileInformationA": "WINSETUPAPI WINBOOL WINAPI SetupQueryInfFileInformationA(PSP_INF_INFORMATION InfInformation,UINT InfIndex,PSTR ReturnBuffer,DWORD ReturnBufferSize,PDWORD RequiredSize);", "SetupQueryInfFileInformationW": "WINSETUPAPI WINBOOL WINAPI SetupQueryInfFileInformationW(PSP_INF_INFORMATION InfInformation,UINT InfIndex,PWSTR ReturnBuffer,DWORD ReturnBufferSize,PDWORD RequiredSize);", "SetupQueryInfOriginalFileInformationA": "WINSETUPAPI WINBOOL WINAPI SetupQueryInfOriginalFileInformationA(PSP_INF_INFORMATION InfInformation,UINT InfIndex,PSP_ALTPLATFORM_INFO AlternatePlatformInfo,PSP_ORIGINAL_FILE_INFO_A OriginalFileInfo);", "SetupQueryInfOriginalFileInformationW": "WINSETUPAPI WINBOOL WINAPI SetupQueryInfOriginalFileInformationW(PSP_INF_INFORMATION InfInformation,UINT InfIndex,PSP_ALTPLATFORM_INFO AlternatePlatformInfo,PSP_ORIGINAL_FILE_INFO_W OriginalFileInfo);", "SetupQueryInfVersionInformationA": "WINSETUPAPI WINBOOL WINAPI SetupQueryInfVersionInformationA(PSP_INF_INFORMATION InfInformation,UINT InfIndex,PCSTR Key,PSTR ReturnBuffer,DWORD ReturnBufferSize,PDWORD RequiredSize);", "SetupQueryInfVersionInformationW": "WINSETUPAPI WINBOOL WINAPI SetupQueryInfVersionInformationW(PSP_INF_INFORMATION InfInformation,UINT InfIndex,PCWSTR Key,PWSTR ReturnBuffer,DWORD ReturnBufferSize,PDWORD RequiredSize);", "SetupGetInfFileListA": "WINSETUPAPI WINBOOL WINAPI SetupGetInfFileListA(PCSTR DirectoryPath,DWORD InfStyle,PSTR ReturnBuffer,DWORD ReturnBufferSize,PDWORD RequiredSize);", "SetupGetInfFileListW": "WINSETUPAPI WINBOOL WINAPI SetupGetInfFileListW(PCWSTR DirectoryPath,DWORD InfStyle,PWSTR ReturnBuffer,DWORD ReturnBufferSize,PDWORD RequiredSize);", "SetupOpenInfFileW": "WINSETUPAPI HINF WINAPI SetupOpenInfFileW(PCWSTR FileName,PCWSTR InfClass,DWORD InfStyle,PUINT ErrorLine);", "SetupOpenInfFileA": "WINSETUPAPI HINF WINAPI SetupOpenInfFileA(PCSTR FileName,PCSTR InfClass,DWORD InfStyle,PUINT ErrorLine);", "SetupOpenMasterInf": "WINSETUPAPI HINF WINAPI SetupOpenMasterInf(VOID);", "SetupOpenAppendInfFileW": "WINSETUPAPI WINBOOL WINAPI SetupOpenAppendInfFileW(PCWSTR FileName,HINF InfHandle,PUINT ErrorLine);", "SetupOpenAppendInfFileA": "WINSETUPAPI WINBOOL WINAPI SetupOpenAppendInfFileA(PCSTR FileName,HINF InfHandle,PUINT ErrorLine);", "SetupCloseInfFile": "WINSETUPAPI VOID WINAPI SetupCloseInfFile(HINF InfHandle);", "SetupFindFirstLineA": "WINSETUPAPI WINBOOL WINAPI SetupFindFirstLineA(HINF InfHandle,PCSTR Section,PCSTR Key,PINFCONTEXT Context);", "SetupFindFirstLineW": "WINSETUPAPI WINBOOL WINAPI SetupFindFirstLineW(HINF InfHandle,PCWSTR Section,PCWSTR Key,PINFCONTEXT Context);", "SetupFindNextLine": "WINSETUPAPI WINBOOL WINAPI SetupFindNextLine(PINFCONTEXT ContextIn,PINFCONTEXT ContextOut);", "SetupFindNextMatchLineA": "WINSETUPAPI WINBOOL WINAPI SetupFindNextMatchLineA(PINFCONTEXT ContextIn,PCSTR Key,PINFCONTEXT ContextOut);", "SetupFindNextMatchLineW": "WINSETUPAPI WINBOOL WINAPI SetupFindNextMatchLineW(PINFCONTEXT ContextIn,PCWSTR Key,PINFCONTEXT ContextOut);", "SetupGetLineByIndexA": "WINSETUPAPI WINBOOL WINAPI SetupGetLineByIndexA(HINF InfHandle,PCSTR Section,DWORD Index,PINFCONTEXT Context);", "SetupGetLineByIndexW": "WINSETUPAPI WINBOOL WINAPI SetupGetLineByIndexW(HINF InfHandle,PCWSTR Section,DWORD Index,PINFCONTEXT Context);", "SetupGetLineCountA": "WINSETUPAPI LONG WINAPI SetupGetLineCountA(HINF InfHandle,PCSTR Section);", "SetupGetLineCountW": "WINSETUPAPI LONG WINAPI SetupGetLineCountW(HINF InfHandle,PCWSTR Section);", "SetupGetLineTextA": "WINSETUPAPI WINBOOL WINAPI SetupGetLineTextA(PINFCONTEXT Context,HINF InfHandle,PCSTR Section,PCSTR Key,PSTR ReturnBuffer,DWORD ReturnBufferSize,PDWORD RequiredSize);", "SetupGetLineTextW": "WINSETUPAPI WINBOOL WINAPI SetupGetLineTextW(PINFCONTEXT Context,HINF InfHandle,PCWSTR Section,PCWSTR Key,PWSTR ReturnBuffer,DWORD ReturnBufferSize,PDWORD RequiredSize);", "SetupGetFieldCount": "WINSETUPAPI DWORD WINAPI SetupGetFieldCount(PINFCONTEXT Context);", "SetupGetStringFieldA": "WINSETUPAPI WINBOOL WINAPI SetupGetStringFieldA(PINFCONTEXT Context,DWORD FieldIndex,PSTR ReturnBuffer,DWORD ReturnBufferSize,PDWORD RequiredSize);", "SetupGetStringFieldW": "WINSETUPAPI WINBOOL WINAPI SetupGetStringFieldW(PINFCONTEXT Context,DWORD FieldIndex,PWSTR ReturnBuffer,DWORD ReturnBufferSize,PDWORD RequiredSize);", "SetupGetIntField": "WINSETUPAPI WINBOOL WINAPI SetupGetIntField(PINFCONTEXT Context,DWORD FieldIndex,PINT IntegerValue);", "SetupGetMultiSzFieldA": "WINSETUPAPI WINBOOL WINAPI SetupGetMultiSzFieldA(PINFCONTEXT Context,DWORD FieldIndex,PSTR ReturnBuffer,DWORD ReturnBufferSize,LPDWORD RequiredSize);", "SetupGetMultiSzFieldW": "WINSETUPAPI WINBOOL WINAPI SetupGetMultiSzFieldW(PINFCONTEXT Context,DWORD FieldIndex,PWSTR ReturnBuffer,DWORD ReturnBufferSize,LPDWORD RequiredSize);", "SetupGetBinaryField": "WINSETUPAPI WINBOOL WINAPI SetupGetBinaryField(PINFCONTEXT Context,DWORD FieldIndex,PBYTE ReturnBuffer,DWORD ReturnBufferSize,LPDWORD RequiredSize);", "SetupGetFileCompressionInfoA": "WINSETUPAPI DWORD WINAPI SetupGetFileCompressionInfoA(PCSTR SourceFileName,PSTR *ActualSourceFileName,PDWORD SourceFileSize,PDWORD TargetFileSize,PUINT CompressionType);", "SetupGetFileCompressionInfoW": "WINSETUPAPI DWORD WINAPI SetupGetFileCompressionInfoW(PCWSTR SourceFileName,PWSTR *ActualSourceFileName,PDWORD SourceFileSize,PDWORD TargetFileSize,PUINT CompressionType);", "SetupGetFileCompressionInfoExA": "WINSETUPAPI WINBOOL WINAPI SetupGetFileCompressionInfoExA(PCSTR SourceFileName,PSTR ActualSourceFileNameBuffer,DWORD ActualSourceFileNameBufferLen,PDWORD RequiredBufferLen,PDWORD SourceFileSize,PDWORD TargetFileSize,PUINT CompressionType);", "SetupGetFileCompressionInfoExW": "WINSETUPAPI WINBOOL WINAPI SetupGetFileCompressionInfoExW(PCWSTR SourceFileName,PWSTR ActualSourceFileNameBuffer,DWORD ActualSourceFileNameBufferLen,PDWORD RequiredBufferLen,PDWORD SourceFileSize,PDWORD TargetFileSize,PUINT CompressionType);", "SetupDecompressOrCopyFileA": "WINSETUPAPI DWORD WINAPI SetupDecompressOrCopyFileA(PCSTR SourceFileName,PCSTR TargetFileName,PUINT CompressionType);", "SetupDecompressOrCopyFileW": "WINSETUPAPI DWORD WINAPI SetupDecompressOrCopyFileW(PCWSTR SourceFileName,PCWSTR TargetFileName,PUINT CompressionType);", "SetupGetSourceFileLocationA": "WINSETUPAPI WINBOOL WINAPI SetupGetSourceFileLocationA(HINF InfHandle,PINFCONTEXT InfContext,PCSTR FileName,PUINT SourceId,PSTR ReturnBuffer,DWORD ReturnBufferSize,PDWORD RequiredSize);", "SetupGetSourceFileLocationW": "WINSETUPAPI WINBOOL WINAPI SetupGetSourceFileLocationW(HINF InfHandle,PINFCONTEXT InfContext,PCWSTR FileName,PUINT SourceId,PWSTR ReturnBuffer,DWORD ReturnBufferSize,PDWORD RequiredSize);", "SetupGetSourceFileSizeA": "WINSETUPAPI WINBOOL WINAPI SetupGetSourceFileSizeA(HINF InfHandle,PINFCONTEXT InfContext,PCSTR FileName,PCSTR Section,PDWORD FileSize,UINT RoundingFactor);", "SetupGetSourceFileSizeW": "WINSETUPAPI WINBOOL WINAPI SetupGetSourceFileSizeW(HINF InfHandle,PINFCONTEXT InfContext,PCWSTR FileName,PCWSTR Section,PDWORD FileSize,UINT RoundingFactor);", "SetupGetTargetPathA": "WINSETUPAPI WINBOOL WINAPI SetupGetTargetPathA(HINF InfHandle,PINFCONTEXT InfContext,PCSTR Section,PSTR ReturnBuffer,DWORD ReturnBufferSize,PDWORD RequiredSize);", "SetupGetTargetPathW": "WINSETUPAPI WINBOOL WINAPI SetupGetTargetPathW(HINF InfHandle,PINFCONTEXT InfContext,PCWSTR Section,PWSTR ReturnBuffer,DWORD ReturnBufferSize,PDWORD RequiredSize);", "SetupSetSourceListA": "WINSETUPAPI WINBOOL WINAPI SetupSetSourceListA(DWORD Flags,PCSTR *SourceList,UINT SourceCount);", "SetupSetSourceListW": "WINSETUPAPI WINBOOL WINAPI SetupSetSourceListW(DWORD Flags,PCWSTR *SourceList,UINT SourceCount);", "SetupCancelTemporarySourceList": "WINSETUPAPI WINBOOL WINAPI SetupCancelTemporarySourceList(VOID);", "SetupAddToSourceListA": "WINSETUPAPI WINBOOL WINAPI SetupAddToSourceListA(DWORD Flags,PCSTR Source);", "SetupAddToSourceListW": "WINSETUPAPI WINBOOL WINAPI SetupAddToSourceListW(DWORD Flags,PCWSTR Source);", "SetupRemoveFromSourceListA": "WINSETUPAPI WINBOOL WINAPI SetupRemoveFromSourceListA(DWORD Flags,PCSTR Source);", "SetupRemoveFromSourceListW": "WINSETUPAPI WINBOOL WINAPI SetupRemoveFromSourceListW(DWORD Flags,PCWSTR Source);", "SetupQuerySourceListA": "WINSETUPAPI WINBOOL WINAPI SetupQuerySourceListA(DWORD Flags,PCSTR **List,PUINT Count);", "SetupQuerySourceListW": "WINSETUPAPI WINBOOL WINAPI SetupQuerySourceListW(DWORD Flags,PCWSTR **List,PUINT Count);", "SetupFreeSourceListA": "WINSETUPAPI WINBOOL WINAPI SetupFreeSourceListA(PCSTR **List,UINT Count);", "SetupFreeSourceListW": "WINSETUPAPI WINBOOL WINAPI SetupFreeSourceListW(PCWSTR **List,UINT Count);", "SetupPromptForDiskA": "WINSETUPAPI UINT WINAPI SetupPromptForDiskA(HWND hwndParent,PCSTR DialogTitle,PCSTR DiskName,PCSTR PathToSource,PCSTR FileSought,PCSTR TagFile,DWORD DiskPromptStyle,PSTR PathBuffer,DWORD PathBufferSize,PDWORD PathRequiredSize);", "SetupPromptForDiskW": "WINSETUPAPI UINT WINAPI SetupPromptForDiskW(HWND hwndParent,PCWSTR DialogTitle,PCWSTR DiskName,PCWSTR PathToSource,PCWSTR FileSought,PCWSTR TagFile,DWORD DiskPromptStyle,PWSTR PathBuffer,DWORD PathBufferSize,PDWORD PathRequiredSize);", "SetupCopyErrorA": "WINSETUPAPI UINT WINAPI SetupCopyErrorA(HWND hwndParent,PCSTR DialogTitle,PCSTR DiskName,PCSTR PathToSource,PCSTR SourceFile,PCSTR TargetPathFile,UINT Win32ErrorCode,DWORD Style,PSTR PathBuffer,DWORD PathBufferSize,PDWORD PathRequiredSize);", "SetupCopyErrorW": "WINSETUPAPI UINT WINAPI SetupCopyErrorW(HWND hwndParent,PCWSTR DialogTitle,PCWSTR DiskName,PCWSTR PathToSource,PCWSTR SourceFile,PCWSTR TargetPathFile,UINT Win32ErrorCode,DWORD Style,PWSTR PathBuffer,DWORD PathBufferSize,PDWORD PathRequiredSize);", "SetupRenameErrorA": "WINSETUPAPI UINT WINAPI SetupRenameErrorA(HWND hwndParent,PCSTR DialogTitle,PCSTR SourceFile,PCSTR TargetFile,UINT Win32ErrorCode,DWORD Style);", "SetupRenameErrorW": "WINSETUPAPI UINT WINAPI SetupRenameErrorW(HWND hwndParent,PCWSTR DialogTitle,PCWSTR SourceFile,PCWSTR TargetFile,UINT Win32ErrorCode,DWORD Style);", "SetupDeleteErrorA": "WINSETUPAPI UINT WINAPI SetupDeleteErrorA(HWND hwndParent,PCSTR DialogTitle,PCSTR File,UINT Win32ErrorCode,DWORD Style);", "SetupDeleteErrorW": "WINSETUPAPI UINT WINAPI SetupDeleteErrorW(HWND hwndParent,PCWSTR DialogTitle,PCWSTR File,UINT Win32ErrorCode,DWORD Style);", "SetupBackupErrorA": "WINSETUPAPI UINT WINAPI SetupBackupErrorA(HWND hwndParent,PCSTR DialogTitle,PCSTR SourceFile,PCSTR TargetFile,UINT Win32ErrorCode,DWORD Style);", "SetupBackupErrorW": "WINSETUPAPI UINT WINAPI SetupBackupErrorW(HWND hwndParent,PCWSTR DialogTitle,PCWSTR SourceFile,PCWSTR TargetFile,UINT Win32ErrorCode,DWORD Style);", "SetupSetDirectoryIdA": "WINSETUPAPI WINBOOL WINAPI SetupSetDirectoryIdA(HINF InfHandle,DWORD Id,PCSTR Directory);", "SetupSetDirectoryIdW": "WINSETUPAPI WINBOOL WINAPI SetupSetDirectoryIdW(HINF InfHandle,DWORD Id,PCWSTR Directory);", "SetupSetDirectoryIdExA": "WINSETUPAPI WINBOOL WINAPI SetupSetDirectoryIdExA(HINF InfHandle,DWORD Id,PCSTR Directory,DWORD Flags,DWORD Reserved1,PVOID Reserved2);", "SetupSetDirectoryIdExW": "WINSETUPAPI WINBOOL WINAPI SetupSetDirectoryIdExW(HINF InfHandle,DWORD Id,PCWSTR Directory,DWORD Flags,DWORD Reserved1,PVOID Reserved2);", "SetupGetSourceInfoA": "WINSETUPAPI WINBOOL WINAPI SetupGetSourceInfoA(HINF InfHandle,UINT SourceId,UINT InfoDesired,PSTR ReturnBuffer,DWORD ReturnBufferSize,PDWORD RequiredSize);", "SetupGetSourceInfoW": "WINSETUPAPI WINBOOL WINAPI SetupGetSourceInfoW(HINF InfHandle,UINT SourceId,UINT InfoDesired,PWSTR ReturnBuffer,DWORD ReturnBufferSize,PDWORD RequiredSize);", "SetupInstallFileA": "WINSETUPAPI WINBOOL WINAPI SetupInstallFileA(HINF InfHandle,PINFCONTEXT InfContext,PCSTR SourceFile,PCSTR SourcePathRoot,PCSTR DestinationName,DWORD CopyStyle,PSP_FILE_CALLBACK_A CopyMsgHandler,PVOID Context);", "SetupInstallFileW": "WINSETUPAPI WINBOOL WINAPI SetupInstallFileW(HINF InfHandle,PINFCONTEXT InfContext,PCWSTR SourceFile,PCWSTR SourcePathRoot,PCWSTR DestinationName,DWORD CopyStyle,PSP_FILE_CALLBACK_W CopyMsgHandler,PVOID Context);", "SetupInstallFileExA": "WINSETUPAPI WINBOOL WINAPI SetupInstallFileExA(HINF InfHandle,PINFCONTEXT InfContext,PCSTR SourceFile,PCSTR SourcePathRoot,PCSTR DestinationName,DWORD CopyStyle,PSP_FILE_CALLBACK_A CopyMsgHandler,PVOID Context,PBOOL FileWasInUse);", "SetupInstallFileExW": "WINSETUPAPI WINBOOL WINAPI SetupInstallFileExW(HINF InfHandle,PINFCONTEXT InfContext,PCWSTR SourceFile,PCWSTR SourcePathRoot,PCWSTR DestinationName,DWORD CopyStyle,PSP_FILE_CALLBACK_W CopyMsgHandler,PVOID Context,PBOOL FileWasInUse);", "SetupOpenFileQueue": "WINSETUPAPI HSPFILEQ WINAPI SetupOpenFileQueue(VOID);", "SetupCloseFileQueue": "WINSETUPAPI WINBOOL WINAPI SetupCloseFileQueue(HSPFILEQ QueueHandle);", "SetupSetFileQueueAlternatePlatformA": "WINSETUPAPI WINBOOL WINAPI SetupSetFileQueueAlternatePlatformA(HSPFILEQ QueueHandle,PSP_ALTPLATFORM_INFO AlternatePlatformInfo,PCSTR AlternateDefaultCatalogFile);", "SetupSetFileQueueAlternatePlatformW": "WINSETUPAPI WINBOOL WINAPI SetupSetFileQueueAlternatePlatformW(HSPFILEQ QueueHandle,PSP_ALTPLATFORM_INFO AlternatePlatformInfo,PCWSTR AlternateDefaultCatalogFile);", "SetupSetPlatformPathOverrideA": "WINSETUPAPI WINBOOL WINAPI SetupSetPlatformPathOverrideA(PCSTR Override);", "SetupSetPlatformPathOverrideW": "WINSETUPAPI WINBOOL WINAPI SetupSetPlatformPathOverrideW(PCWSTR Override);", "SetupQueueCopyA": "WINSETUPAPI WINBOOL WINAPI SetupQueueCopyA(HSPFILEQ QueueHandle,PCSTR SourceRootPath,PCSTR SourcePath,PCSTR SourceFilename,PCSTR SourceDescription,PCSTR SourceTagfile,PCSTR TargetDirectory,PCSTR TargetFilename,DWORD CopyStyle);", "SetupQueueCopyW": "WINSETUPAPI WINBOOL WINAPI SetupQueueCopyW(HSPFILEQ QueueHandle,PCWSTR SourceRootPath,PCWSTR SourcePath,PCWSTR SourceFilename,PCWSTR SourceDescription,PCWSTR SourceTagfile,PCWSTR TargetDirectory,PCWSTR TargetFilename,DWORD CopyStyle);", "SetupQueueCopyIndirectA": "WINSETUPAPI WINBOOL WINAPI SetupQueueCopyIndirectA(PSP_FILE_COPY_PARAMS_A CopyParams);", "SetupQueueCopyIndirectW": "WINSETUPAPI WINBOOL WINAPI SetupQueueCopyIndirectW(PSP_FILE_COPY_PARAMS_W CopyParams);", "SetupQueueDefaultCopyA": "WINSETUPAPI WINBOOL WINAPI SetupQueueDefaultCopyA(HSPFILEQ QueueHandle,HINF InfHandle,PCSTR SourceRootPath,PCSTR SourceFilename,PCSTR TargetFilename,DWORD CopyStyle);", "SetupQueueDefaultCopyW": "WINSETUPAPI WINBOOL WINAPI SetupQueueDefaultCopyW(HSPFILEQ QueueHandle,HINF InfHandle,PCWSTR SourceRootPath,PCWSTR SourceFilename,PCWSTR TargetFilename,DWORD CopyStyle);", "SetupQueueCopySectionA": "WINSETUPAPI WINBOOL WINAPI SetupQueueCopySectionA(HSPFILEQ QueueHandle,PCSTR SourceRootPath,HINF InfHandle,HINF ListInfHandle,PCSTR Section,DWORD CopyStyle);", "SetupQueueCopySectionW": "WINSETUPAPI WINBOOL WINAPI SetupQueueCopySectionW(HSPFILEQ QueueHandle,PCWSTR SourceRootPath,HINF InfHandle,HINF ListInfHandle,PCWSTR Section,DWORD CopyStyle);", "SetupQueueDeleteA": "WINSETUPAPI WINBOOL WINAPI SetupQueueDeleteA(HSPFILEQ QueueHandle,PCSTR PathPart1,PCSTR PathPart2);", "SetupQueueDeleteW": "WINSETUPAPI WINBOOL WINAPI SetupQueueDeleteW(HSPFILEQ QueueHandle,PCWSTR PathPart1,PCWSTR PathPart2);", "SetupQueueDeleteSectionA": "WINSETUPAPI WINBOOL WINAPI SetupQueueDeleteSectionA(HSPFILEQ QueueHandle,HINF InfHandle,HINF ListInfHandle,PCSTR Section);", "SetupQueueDeleteSectionW": "WINSETUPAPI WINBOOL WINAPI SetupQueueDeleteSectionW(HSPFILEQ QueueHandle,HINF InfHandle,HINF ListInfHandle,PCWSTR Section);", "SetupQueueRenameA": "WINSETUPAPI WINBOOL WINAPI SetupQueueRenameA(HSPFILEQ QueueHandle,PCSTR SourcePath,PCSTR SourceFilename,PCSTR TargetPath,PCSTR TargetFilename);", "SetupQueueRenameW": "WINSETUPAPI WINBOOL WINAPI SetupQueueRenameW(HSPFILEQ QueueHandle,PCWSTR SourcePath,PCWSTR SourceFilename,PCWSTR TargetPath,PCWSTR TargetFilename);", "SetupQueueRenameSectionA": "WINSETUPAPI WINBOOL WINAPI SetupQueueRenameSectionA(HSPFILEQ QueueHandle,HINF InfHandle,HINF ListInfHandle,PCSTR Section);", "SetupQueueRenameSectionW": "WINSETUPAPI WINBOOL WINAPI SetupQueueRenameSectionW(HSPFILEQ QueueHandle,HINF InfHandle,HINF ListInfHandle,PCWSTR Section);", "SetupCommitFileQueueA": "WINSETUPAPI WINBOOL WINAPI SetupCommitFileQueueA(HWND Owner,HSPFILEQ QueueHandle,PSP_FILE_CALLBACK_A MsgHandler,PVOID Context);", "SetupCommitFileQueueW": "WINSETUPAPI WINBOOL WINAPI SetupCommitFileQueueW(HWND Owner,HSPFILEQ QueueHandle,PSP_FILE_CALLBACK_W MsgHandler,PVOID Context);", "SetupScanFileQueueA": "WINSETUPAPI WINBOOL WINAPI SetupScanFileQueueA(HSPFILEQ FileQueue,DWORD Flags,HWND Window,PSP_FILE_CALLBACK_A CallbackRoutine,PVOID CallbackContext,PDWORD Result);", "SetupScanFileQueueW": "WINSETUPAPI WINBOOL WINAPI SetupScanFileQueueW(HSPFILEQ FileQueue,DWORD Flags,HWND Window,PSP_FILE_CALLBACK_W CallbackRoutine,PVOID CallbackContext,PDWORD Result);", "SetupGetFileQueueCount": "WINSETUPAPI WINBOOL WINAPI SetupGetFileQueueCount(HSPFILEQ FileQueue,UINT SubQueueFileOp,PUINT NumOperations);", "SetupGetFileQueueFlags": "WINSETUPAPI WINBOOL WINAPI SetupGetFileQueueFlags(HSPFILEQ FileQueue,PDWORD Flags);", "SetupSetFileQueueFlags": "WINSETUPAPI WINBOOL WINAPI SetupSetFileQueueFlags(HSPFILEQ FileQueue,DWORD FlagMask,DWORD Flags);", "SetupCopyOEMInfA": "WINSETUPAPI WINBOOL WINAPI SetupCopyOEMInfA(PCSTR SourceInfFileName,PCSTR OEMSourceMediaLocation,DWORD OEMSourceMediaType,DWORD CopyStyle,PSTR DestinationInfFileName,DWORD DestinationInfFileNameSize,PDWORD RequiredSize,PSTR *DestinationInfFileNameComponent);", "SetupCopyOEMInfW": "WINSETUPAPI WINBOOL WINAPI SetupCopyOEMInfW(PCWSTR SourceInfFileName,PCWSTR OEMSourceMediaLocation,DWORD OEMSourceMediaType,DWORD CopyStyle,PWSTR DestinationInfFileName,DWORD DestinationInfFileNameSize,PDWORD RequiredSize,PWSTR *DestinationInfFileNameComponent);", "SetupUninstallOEMInfA": "WINSETUPAPI WINBOOL WINAPI SetupUninstallOEMInfA(PCSTR InfFileName,DWORD Flags,PVOID Reserved);", "SetupUninstallOEMInfW": "WINSETUPAPI WINBOOL WINAPI SetupUninstallOEMInfW(PCWSTR InfFileName,DWORD Flags,PVOID Reserved);", "SetupUninstallNewlyCopiedInfs": "WINSETUPAPI WINBOOL WINAPI SetupUninstallNewlyCopiedInfs(HSPFILEQ FileQueue,DWORD Flags,PVOID Reserved);", "SetupCreateDiskSpaceListA": "WINSETUPAPI HDSKSPC WINAPI SetupCreateDiskSpaceListA(PVOID Reserved1,DWORD Reserved2,UINT Flags);", "SetupCreateDiskSpaceListW": "WINSETUPAPI HDSKSPC WINAPI SetupCreateDiskSpaceListW(PVOID Reserved1,DWORD Reserved2,UINT Flags);", "SetupDuplicateDiskSpaceListA": "WINSETUPAPI HDSKSPC WINAPI SetupDuplicateDiskSpaceListA(HDSKSPC DiskSpace,PVOID Reserved1,DWORD Reserved2,UINT Flags);", "SetupDuplicateDiskSpaceListW": "WINSETUPAPI HDSKSPC WINAPI SetupDuplicateDiskSpaceListW(HDSKSPC DiskSpace,PVOID Reserved1,DWORD Reserved2,UINT Flags);", "SetupDestroyDiskSpaceList": "WINSETUPAPI WINBOOL WINAPI SetupDestroyDiskSpaceList(HDSKSPC DiskSpace);", "SetupQueryDrivesInDiskSpaceListA": "WINSETUPAPI WINBOOL WINAPI SetupQueryDrivesInDiskSpaceListA(HDSKSPC DiskSpace,PSTR ReturnBuffer,DWORD ReturnBufferSize,PDWORD RequiredSize);", "SetupQueryDrivesInDiskSpaceListW": "WINSETUPAPI WINBOOL WINAPI SetupQueryDrivesInDiskSpaceListW(HDSKSPC DiskSpace,PWSTR ReturnBuffer,DWORD ReturnBufferSize,PDWORD RequiredSize);", "SetupQuerySpaceRequiredOnDriveA": "WINSETUPAPI WINBOOL WINAPI SetupQuerySpaceRequiredOnDriveA(HDSKSPC DiskSpace,PCSTR DriveSpec,LONGLONG *SpaceRequired,PVOID Reserved1,UINT Reserved2);", "SetupQuerySpaceRequiredOnDriveW": "WINSETUPAPI WINBOOL WINAPI SetupQuerySpaceRequiredOnDriveW(HDSKSPC DiskSpace,PCWSTR DriveSpec,LONGLONG *SpaceRequired,PVOID Reserved1,UINT Reserved2);", "SetupAdjustDiskSpaceListA": "WINSETUPAPI WINBOOL WINAPI SetupAdjustDiskSpaceListA(HDSKSPC DiskSpace,LPCSTR DriveRoot,LONGLONG Amount,PVOID Reserved1,UINT Reserved2);", "SetupAdjustDiskSpaceListW": "WINSETUPAPI WINBOOL WINAPI SetupAdjustDiskSpaceListW(HDSKSPC DiskSpace,LPCWSTR DriveRoot,LONGLONG Amount,PVOID Reserved1,UINT Reserved2);", "SetupAddToDiskSpaceListA": "WINSETUPAPI WINBOOL WINAPI SetupAddToDiskSpaceListA(HDSKSPC DiskSpace,PCSTR TargetFilespec,LONGLONG FileSize,UINT Operation,PVOID Reserved1,UINT Reserved2);", "SetupAddToDiskSpaceListW": "WINSETUPAPI WINBOOL WINAPI SetupAddToDiskSpaceListW(HDSKSPC DiskSpace,PCWSTR TargetFilespec,LONGLONG FileSize,UINT Operation,PVOID Reserved1,UINT Reserved2);", "SetupAddSectionToDiskSpaceListA": "WINSETUPAPI WINBOOL WINAPI SetupAddSectionToDiskSpaceListA(HDSKSPC DiskSpace,HINF InfHandle,HINF ListInfHandle,PCSTR SectionName,UINT Operation,PVOID Reserved1,UINT Reserved2);", "SetupAddSectionToDiskSpaceListW": "WINSETUPAPI WINBOOL WINAPI SetupAddSectionToDiskSpaceListW(HDSKSPC DiskSpace,HINF InfHandle,HINF ListInfHandle,PCWSTR SectionName,UINT Operation,PVOID Reserved1,UINT Reserved2);", "SetupAddInstallSectionToDiskSpaceListA": "WINSETUPAPI WINBOOL WINAPI SetupAddInstallSectionToDiskSpaceListA(HDSKSPC DiskSpace,HINF InfHandle,HINF LayoutInfHandle,PCSTR SectionName,PVOID Reserved1,UINT Reserved2);", "SetupAddInstallSectionToDiskSpaceListW": "WINSETUPAPI WINBOOL WINAPI SetupAddInstallSectionToDiskSpaceListW(HDSKSPC DiskSpace,HINF InfHandle,HINF LayoutInfHandle,PCWSTR SectionName,PVOID Reserved1,UINT Reserved2);", "SetupRemoveFromDiskSpaceListA": "WINSETUPAPI WINBOOL WINAPI SetupRemoveFromDiskSpaceListA(HDSKSPC DiskSpace,PCSTR TargetFilespec,UINT Operation,PVOID Reserved1,UINT Reserved2);", "SetupRemoveFromDiskSpaceListW": "WINSETUPAPI WINBOOL WINAPI SetupRemoveFromDiskSpaceListW(HDSKSPC DiskSpace,PCWSTR TargetFilespec,UINT Operation,PVOID Reserved1,UINT Reserved2);", "SetupRemoveSectionFromDiskSpaceListA": "WINSETUPAPI WINBOOL WINAPI SetupRemoveSectionFromDiskSpaceListA(HDSKSPC DiskSpace,HINF InfHandle,HINF ListInfHandle,PCSTR SectionName,UINT Operation,PVOID Reserved1,UINT Reserved2);", "SetupRemoveSectionFromDiskSpaceListW": "WINSETUPAPI WINBOOL WINAPI SetupRemoveSectionFromDiskSpaceListW(HDSKSPC DiskSpace,HINF InfHandle,HINF ListInfHandle,PCWSTR SectionName,UINT Operation,PVOID Reserved1,UINT Reserved2);", "SetupRemoveInstallSectionFromDiskSpaceListA": "WINSETUPAPI WINBOOL WINAPI SetupRemoveInstallSectionFromDiskSpaceListA(HDSKSPC DiskSpace,HINF InfHandle,HINF LayoutInfHandle,PCSTR SectionName,PVOID Reserved1,UINT Reserved2);", "SetupRemoveInstallSectionFromDiskSpaceListW": "WINSETUPAPI WINBOOL WINAPI SetupRemoveInstallSectionFromDiskSpaceListW(HDSKSPC DiskSpace,HINF InfHandle,HINF LayoutInfHandle,PCWSTR SectionName,PVOID Reserved1,UINT Reserved2);", "SetupIterateCabinetA": "WINSETUPAPI WINBOOL WINAPI SetupIterateCabinetA(PCSTR CabinetFile,DWORD Reserved,PSP_FILE_CALLBACK_A MsgHandler,PVOID Context);", "SetupIterateCabinetW": "WINSETUPAPI WINBOOL WINAPI SetupIterateCabinetW(PCWSTR CabinetFile,DWORD Reserved,PSP_FILE_CALLBACK_W MsgHandler,PVOID Context);", "SetupPromptReboot": "WINSETUPAPI INT WINAPI SetupPromptReboot(HSPFILEQ FileQueue,HWND Owner,WINBOOL ScanOnly);", "SetupInitDefaultQueueCallback": "WINSETUPAPI PVOID WINAPI SetupInitDefaultQueueCallback(HWND OwnerWindow);", "SetupInitDefaultQueueCallbackEx": "WINSETUPAPI PVOID WINAPI SetupInitDefaultQueueCallbackEx(HWND OwnerWindow,HWND AlternateProgressWindow,UINT ProgressMessage,DWORD Reserved1,PVOID Reserved2);", "SetupTermDefaultQueueCallback": "WINSETUPAPI VOID WINAPI SetupTermDefaultQueueCallback(PVOID Context);", "SetupDefaultQueueCallbackA": "WINSETUPAPI UINT WINAPI SetupDefaultQueueCallbackA(PVOID Context,UINT Notification,UINT_PTR Param1,UINT_PTR Param2);", "SetupDefaultQueueCallbackW": "WINSETUPAPI UINT WINAPI SetupDefaultQueueCallbackW(PVOID Context,UINT Notification,UINT_PTR Param1,UINT_PTR Param2);", "SetupInstallFromInfSectionA": "WINSETUPAPI WINBOOL WINAPI SetupInstallFromInfSectionA(HWND Owner,HINF InfHandle,PCSTR SectionName,UINT Flags,HKEY RelativeKeyRoot,PCSTR SourceRootPath,UINT CopyFlags,PSP_FILE_CALLBACK_A MsgHandler,PVOID Context,HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData);", "SetupInstallFromInfSectionW": "WINSETUPAPI WINBOOL WINAPI SetupInstallFromInfSectionW(HWND Owner,HINF InfHandle,PCWSTR SectionName,UINT Flags,HKEY RelativeKeyRoot,PCWSTR SourceRootPath,UINT CopyFlags,PSP_FILE_CALLBACK_W MsgHandler,PVOID Context,HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData);", "SetupInstallFilesFromInfSectionA": "WINSETUPAPI WINBOOL WINAPI SetupInstallFilesFromInfSectionA(HINF InfHandle,HINF LayoutInfHandle,HSPFILEQ FileQueue,PCSTR SectionName,PCSTR SourceRootPath,UINT CopyFlags);", "SetupInstallFilesFromInfSectionW": "WINSETUPAPI WINBOOL WINAPI SetupInstallFilesFromInfSectionW(HINF InfHandle,HINF LayoutInfHandle,HSPFILEQ FileQueue,PCWSTR SectionName,PCWSTR SourceRootPath,UINT CopyFlags);", "SetupInstallServicesFromInfSectionA": "WINSETUPAPI WINBOOL WINAPI SetupInstallServicesFromInfSectionA(HINF InfHandle,PCSTR SectionName,DWORD Flags);", "SetupInstallServicesFromInfSectionW": "WINSETUPAPI WINBOOL WINAPI SetupInstallServicesFromInfSectionW(HINF InfHandle,PCWSTR SectionName,DWORD Flags);", "SetupInstallServicesFromInfSectionExA": "WINSETUPAPI WINBOOL WINAPI SetupInstallServicesFromInfSectionExA(HINF InfHandle,PCSTR SectionName,DWORD Flags,HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,PVOID Reserved1,PVOID Reserved2);", "SetupInstallServicesFromInfSectionExW": "WINSETUPAPI WINBOOL WINAPI SetupInstallServicesFromInfSectionExW(HINF InfHandle,PCWSTR SectionName,DWORD Flags,HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,PVOID Reserved1,PVOID Reserved2);", "InstallHinfSectionA": "VOID WINAPI InstallHinfSectionA(HWND Window,HINSTANCE ModuleHandle,PCSTR CommandLine,INT ShowCommand);", "InstallHinfSectionW": "VOID WINAPI InstallHinfSectionW(HWND Window,HINSTANCE ModuleHandle,PCWSTR CommandLine,INT ShowCommand);", "SetupInitializeFileLogA": "WINSETUPAPI HSPFILELOG WINAPI SetupInitializeFileLogA(PCSTR LogFileName,DWORD Flags);", "SetupInitializeFileLogW": "WINSETUPAPI HSPFILELOG WINAPI SetupInitializeFileLogW(PCWSTR LogFileName,DWORD Flags);", "SetupTerminateFileLog": "WINSETUPAPI WINBOOL WINAPI SetupTerminateFileLog(HSPFILELOG FileLogHandle);", "SetupLogFileA": "WINSETUPAPI WINBOOL WINAPI SetupLogFileA(HSPFILELOG FileLogHandle,PCSTR LogSectionName,PCSTR SourceFilename,PCSTR TargetFilename,DWORD Checksum,PCSTR DiskTagfile,PCSTR DiskDescription,PCSTR OtherInfo,DWORD Flags);", "SetupLogFileW": "WINSETUPAPI WINBOOL WINAPI SetupLogFileW(HSPFILELOG FileLogHandle,PCWSTR LogSectionName,PCWSTR SourceFilename,PCWSTR TargetFilename,DWORD Checksum,PCWSTR DiskTagfile,PCWSTR DiskDescription,PCWSTR OtherInfo,DWORD Flags);", "SetupRemoveFileLogEntryA": "WINSETUPAPI WINBOOL WINAPI SetupRemoveFileLogEntryA(HSPFILELOG FileLogHandle,PCSTR LogSectionName,PCSTR TargetFilename);", "SetupRemoveFileLogEntryW": "WINSETUPAPI WINBOOL WINAPI SetupRemoveFileLogEntryW(HSPFILELOG FileLogHandle,PCWSTR LogSectionName,PCWSTR TargetFilename);", "SetupQueryFileLogA": "WINSETUPAPI WINBOOL WINAPI SetupQueryFileLogA(HSPFILELOG FileLogHandle,PCSTR LogSectionName,PCSTR TargetFilename,SetupFileLogInfo DesiredInfo,PSTR DataOut,DWORD ReturnBufferSize,PDWORD RequiredSize);", "SetupQueryFileLogW": "WINSETUPAPI WINBOOL WINAPI SetupQueryFileLogW(HSPFILELOG FileLogHandle,PCWSTR LogSectionName,PCWSTR TargetFilename,SetupFileLogInfo DesiredInfo,PWSTR DataOut,DWORD ReturnBufferSize,PDWORD RequiredSize);", "SetupOpenLog": "WINSETUPAPI WINBOOL WINAPI SetupOpenLog(WINBOOL Erase);", "SetupLogErrorA": "WINSETUPAPI WINBOOL WINAPI SetupLogErrorA(LPCSTR MessageString,LogSeverity Severity);", "SetupLogErrorW": "WINSETUPAPI WINBOOL WINAPI SetupLogErrorW(LPCWSTR MessageString,LogSeverity Severity);", "SetupCloseLog": "WINSETUPAPI VOID WINAPI SetupCloseLog(VOID);", "SetupGetBackupInformationA": "WINSETUPAPI WINBOOL WINAPI SetupGetBackupInformationA(HSPFILEQ QueueHandle,PSP_BACKUP_QUEUE_PARAMS_A BackupParams);", "SetupGetBackupInformationW": "WINSETUPAPI WINBOOL WINAPI SetupGetBackupInformationW(HSPFILEQ QueueHandle,PSP_BACKUP_QUEUE_PARAMS_W BackupParams);", "SetupPrepareQueueForRestoreA": "WINSETUPAPI WINBOOL WINAPI SetupPrepareQueueForRestoreA(HSPFILEQ QueueHandle,PCSTR BackupPath,DWORD RestoreFlags);", "SetupPrepareQueueForRestoreW": "WINSETUPAPI WINBOOL WINAPI SetupPrepareQueueForRestoreW(HSPFILEQ QueueHandle,PCWSTR BackupPath,DWORD RestoreFlags);", "SetupSetNonInteractiveMode": "WINSETUPAPI WINBOOL WINAPI SetupSetNonInteractiveMode(WINBOOL NonInteractiveFlag);", "SetupGetNonInteractiveMode": "WINSETUPAPI WINBOOL WINAPI SetupGetNonInteractiveMode(VOID);", "SetupDiCreateDeviceInfoList": "WINSETUPAPI HDEVINFO WINAPI SetupDiCreateDeviceInfoList(CONST GUID *ClassGuid,HWND hwndParent);", "SetupDiCreateDeviceInfoListExA": "WINSETUPAPI HDEVINFO WINAPI SetupDiCreateDeviceInfoListExA(CONST GUID *ClassGuid,HWND hwndParent,PCSTR MachineName,PVOID Reserved);", "SetupDiCreateDeviceInfoListExW": "WINSETUPAPI HDEVINFO WINAPI SetupDiCreateDeviceInfoListExW(CONST GUID *ClassGuid,HWND hwndParent,PCWSTR MachineName,PVOID Reserved);", "SetupDiGetDeviceInfoListClass": "WINSETUPAPI WINBOOL WINAPI SetupDiGetDeviceInfoListClass(HDEVINFO DeviceInfoSet,LPGUID ClassGuid);", "SetupDiGetDeviceInfoListDetailA": "WINSETUPAPI WINBOOL WINAPI SetupDiGetDeviceInfoListDetailA(HDEVINFO DeviceInfoSet,PSP_DEVINFO_LIST_DETAIL_DATA_A DeviceInfoSetDetailData);", "SetupDiGetDeviceInfoListDetailW": "WINSETUPAPI WINBOOL WINAPI SetupDiGetDeviceInfoListDetailW(HDEVINFO DeviceInfoSet,PSP_DEVINFO_LIST_DETAIL_DATA_W DeviceInfoSetDetailData);", "SetupDiCreateDeviceInfoA": "WINSETUPAPI WINBOOL WINAPI SetupDiCreateDeviceInfoA(HDEVINFO DeviceInfoSet,PCSTR DeviceName,CONST GUID *ClassGuid,PCSTR DeviceDescription,HWND hwndParent,DWORD CreationFlags,PSP_DEVINFO_DATA DeviceInfoData);", "SetupDiCreateDeviceInfoW": "WINSETUPAPI WINBOOL WINAPI SetupDiCreateDeviceInfoW(HDEVINFO DeviceInfoSet,PCWSTR DeviceName,CONST GUID *ClassGuid,PCWSTR DeviceDescription,HWND hwndParent,DWORD CreationFlags,PSP_DEVINFO_DATA DeviceInfoData);", "SetupDiOpenDeviceInfoA": "WINSETUPAPI WINBOOL WINAPI SetupDiOpenDeviceInfoA(HDEVINFO DeviceInfoSet,PCSTR DeviceInstanceId,HWND hwndParent,DWORD OpenFlags,PSP_DEVINFO_DATA DeviceInfoData);", "SetupDiOpenDeviceInfoW": "WINSETUPAPI WINBOOL WINAPI SetupDiOpenDeviceInfoW(HDEVINFO DeviceInfoSet,PCWSTR DeviceInstanceId,HWND hwndParent,DWORD OpenFlags,PSP_DEVINFO_DATA DeviceInfoData);", "SetupDiGetDeviceInstanceIdA": "WINSETUPAPI WINBOOL WINAPI SetupDiGetDeviceInstanceIdA(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,PSTR DeviceInstanceId,DWORD DeviceInstanceIdSize,PDWORD RequiredSize);", "SetupDiGetDeviceInstanceIdW": "WINSETUPAPI WINBOOL WINAPI SetupDiGetDeviceInstanceIdW(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,PWSTR DeviceInstanceId,DWORD DeviceInstanceIdSize,PDWORD RequiredSize);", "SetupDiDeleteDeviceInfo": "WINSETUPAPI WINBOOL WINAPI SetupDiDeleteDeviceInfo(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData);", "SetupDiEnumDeviceInfo": "WINSETUPAPI WINBOOL WINAPI SetupDiEnumDeviceInfo(HDEVINFO DeviceInfoSet,DWORD MemberIndex,PSP_DEVINFO_DATA DeviceInfoData);", "SetupDiDestroyDeviceInfoList": "WINSETUPAPI WINBOOL WINAPI SetupDiDestroyDeviceInfoList(HDEVINFO DeviceInfoSet);", "SetupDiEnumDeviceInterfaces": "WINSETUPAPI WINBOOL WINAPI SetupDiEnumDeviceInterfaces(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,CONST GUID *InterfaceClassGuid,DWORD MemberIndex,PSP_DEVICE_INTERFACE_DATA DeviceInterfaceData);", "SetupDiCreateDeviceInterfaceA": "WINSETUPAPI WINBOOL WINAPI SetupDiCreateDeviceInterfaceA(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,CONST GUID *InterfaceClassGuid,PCSTR ReferenceString,DWORD CreationFlags,PSP_DEVICE_INTERFACE_DATA DeviceInterfaceData);", "SetupDiCreateDeviceInterfaceW": "WINSETUPAPI WINBOOL WINAPI SetupDiCreateDeviceInterfaceW(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,CONST GUID *InterfaceClassGuid,PCWSTR ReferenceString,DWORD CreationFlags,PSP_DEVICE_INTERFACE_DATA DeviceInterfaceData);", "SetupDiOpenDeviceInterfaceA": "WINSETUPAPI WINBOOL WINAPI SetupDiOpenDeviceInterfaceA(HDEVINFO DeviceInfoSet,PCSTR DevicePath,DWORD OpenFlags,PSP_DEVICE_INTERFACE_DATA DeviceInterfaceData);", "SetupDiOpenDeviceInterfaceW": "WINSETUPAPI WINBOOL WINAPI SetupDiOpenDeviceInterfaceW(HDEVINFO DeviceInfoSet,PCWSTR DevicePath,DWORD OpenFlags,PSP_DEVICE_INTERFACE_DATA DeviceInterfaceData);", "SetupDiGetDeviceInterfaceAlias": "WINSETUPAPI WINBOOL WINAPI SetupDiGetDeviceInterfaceAlias(HDEVINFO DeviceInfoSet,PSP_DEVICE_INTERFACE_DATA DeviceInterfaceData,CONST GUID *AliasInterfaceClassGuid,PSP_DEVICE_INTERFACE_DATA AliasDeviceInterfaceData);", "SetupDiDeleteDeviceInterfaceData": "WINSETUPAPI WINBOOL WINAPI SetupDiDeleteDeviceInterfaceData(HDEVINFO DeviceInfoSet,PSP_DEVICE_INTERFACE_DATA DeviceInterfaceData);", "SetupDiRemoveDeviceInterface": "WINSETUPAPI WINBOOL WINAPI SetupDiRemoveDeviceInterface(HDEVINFO DeviceInfoSet,PSP_DEVICE_INTERFACE_DATA DeviceInterfaceData);", "SetupDiGetDeviceInterfaceDetailA": "WINSETUPAPI WINBOOL WINAPI SetupDiGetDeviceInterfaceDetailA(HDEVINFO DeviceInfoSet,PSP_DEVICE_INTERFACE_DATA DeviceInterfaceData,PSP_DEVICE_INTERFACE_DETAIL_DATA_A DeviceInterfaceDetailData,DWORD DeviceInterfaceDetailDataSize,PDWORD RequiredSize,PSP_DEVINFO_DATA DeviceInfoData);", "SetupDiGetDeviceInterfaceDetailW": "WINSETUPAPI WINBOOL WINAPI SetupDiGetDeviceInterfaceDetailW(HDEVINFO DeviceInfoSet,PSP_DEVICE_INTERFACE_DATA DeviceInterfaceData,PSP_DEVICE_INTERFACE_DETAIL_DATA_W DeviceInterfaceDetailData,DWORD DeviceInterfaceDetailDataSize,PDWORD RequiredSize,PSP_DEVINFO_DATA DeviceInfoData);", "SetupDiInstallDeviceInterfaces": "WINSETUPAPI WINBOOL WINAPI SetupDiInstallDeviceInterfaces(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData);", "SetupDiSetDeviceInterfaceDefault": "WINSETUPAPI WINBOOL WINAPI SetupDiSetDeviceInterfaceDefault(HDEVINFO DeviceInfoSet,PSP_DEVICE_INTERFACE_DATA DeviceInterfaceData,DWORD Flags,PVOID Reserved);", "SetupDiRegisterDeviceInfo": "WINSETUPAPI WINBOOL WINAPI SetupDiRegisterDeviceInfo(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,DWORD Flags,PSP_DETSIG_CMPPROC CompareProc,PVOID CompareContext,PSP_DEVINFO_DATA DupDeviceInfoData);", "SetupDiBuildDriverInfoList": "WINSETUPAPI WINBOOL WINAPI SetupDiBuildDriverInfoList(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,DWORD DriverType);", "SetupDiCancelDriverInfoSearch": "WINSETUPAPI WINBOOL WINAPI SetupDiCancelDriverInfoSearch(HDEVINFO DeviceInfoSet);", "SetupDiEnumDriverInfoA": "WINSETUPAPI WINBOOL WINAPI SetupDiEnumDriverInfoA(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,DWORD DriverType,DWORD MemberIndex,PSP_DRVINFO_DATA_A DriverInfoData);", "SetupDiEnumDriverInfoW": "WINSETUPAPI WINBOOL WINAPI SetupDiEnumDriverInfoW(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,DWORD DriverType,DWORD MemberIndex,PSP_DRVINFO_DATA_W DriverInfoData);", "SetupDiGetSelectedDriverA": "WINSETUPAPI WINBOOL WINAPI SetupDiGetSelectedDriverA(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,PSP_DRVINFO_DATA_A DriverInfoData);", "SetupDiGetSelectedDriverW": "WINSETUPAPI WINBOOL WINAPI SetupDiGetSelectedDriverW(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,PSP_DRVINFO_DATA_W DriverInfoData);", "SetupDiSetSelectedDriverA": "WINSETUPAPI WINBOOL WINAPI SetupDiSetSelectedDriverA(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,PSP_DRVINFO_DATA_A DriverInfoData);", "SetupDiSetSelectedDriverW": "WINSETUPAPI WINBOOL WINAPI SetupDiSetSelectedDriverW(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,PSP_DRVINFO_DATA_W DriverInfoData);", "SetupDiGetDriverInfoDetailA": "WINSETUPAPI WINBOOL WINAPI SetupDiGetDriverInfoDetailA(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,PSP_DRVINFO_DATA_A DriverInfoData,PSP_DRVINFO_DETAIL_DATA_A DriverInfoDetailData,DWORD DriverInfoDetailDataSize,PDWORD RequiredSize);", "SetupDiGetDriverInfoDetailW": "WINSETUPAPI WINBOOL WINAPI SetupDiGetDriverInfoDetailW(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,PSP_DRVINFO_DATA_W DriverInfoData,PSP_DRVINFO_DETAIL_DATA_W DriverInfoDetailData,DWORD DriverInfoDetailDataSize,PDWORD RequiredSize);", "SetupDiDestroyDriverInfoList": "WINSETUPAPI WINBOOL WINAPI SetupDiDestroyDriverInfoList(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,DWORD DriverType);", "SetupDiGetClassDevsA": "WINSETUPAPI HDEVINFO WINAPI SetupDiGetClassDevsA(CONST GUID *ClassGuid,PCSTR Enumerator,HWND hwndParent,DWORD Flags);", "SetupDiGetClassDevsW": "WINSETUPAPI HDEVINFO WINAPI SetupDiGetClassDevsW(CONST GUID *ClassGuid,PCWSTR Enumerator,HWND hwndParent,DWORD Flags);", "SetupDiGetClassDevsExA": "WINSETUPAPI HDEVINFO WINAPI SetupDiGetClassDevsExA(CONST GUID *ClassGuid,PCSTR Enumerator,HWND hwndParent,DWORD Flags,HDEVINFO DeviceInfoSet,PCSTR MachineName,PVOID Reserved);", "SetupDiGetClassDevsExW": "WINSETUPAPI HDEVINFO WINAPI SetupDiGetClassDevsExW(CONST GUID *ClassGuid,PCWSTR Enumerator,HWND hwndParent,DWORD Flags,HDEVINFO DeviceInfoSet,PCWSTR MachineName,PVOID Reserved);", "SetupDiGetINFClassA": "WINSETUPAPI WINBOOL WINAPI SetupDiGetINFClassA(PCSTR InfName,LPGUID ClassGuid,PSTR ClassName,DWORD ClassNameSize,PDWORD RequiredSize);", "SetupDiGetINFClassW": "WINSETUPAPI WINBOOL WINAPI SetupDiGetINFClassW(PCWSTR InfName,LPGUID ClassGuid,PWSTR ClassName,DWORD ClassNameSize,PDWORD RequiredSize);", "SetupDiBuildClassInfoList": "WINSETUPAPI WINBOOL WINAPI SetupDiBuildClassInfoList(DWORD Flags,LPGUID ClassGuidList,DWORD ClassGuidListSize,PDWORD RequiredSize);", "SetupDiBuildClassInfoListExA": "WINSETUPAPI WINBOOL WINAPI SetupDiBuildClassInfoListExA(DWORD Flags,LPGUID ClassGuidList,DWORD ClassGuidListSize,PDWORD RequiredSize,PCSTR MachineName,PVOID Reserved);", "SetupDiBuildClassInfoListExW": "WINSETUPAPI WINBOOL WINAPI SetupDiBuildClassInfoListExW(DWORD Flags,LPGUID ClassGuidList,DWORD ClassGuidListSize,PDWORD RequiredSize,PCWSTR MachineName,PVOID Reserved);", "SetupDiGetClassDescriptionA": "WINSETUPAPI WINBOOL WINAPI SetupDiGetClassDescriptionA(CONST GUID *ClassGuid,PSTR ClassDescription,DWORD ClassDescriptionSize,PDWORD RequiredSize);", "SetupDiGetClassDescriptionW": "WINSETUPAPI WINBOOL WINAPI SetupDiGetClassDescriptionW(CONST GUID *ClassGuid,PWSTR ClassDescription,DWORD ClassDescriptionSize,PDWORD RequiredSize);", "SetupDiGetClassDescriptionExA": "WINSETUPAPI WINBOOL WINAPI SetupDiGetClassDescriptionExA(CONST GUID *ClassGuid,PSTR ClassDescription,DWORD ClassDescriptionSize,PDWORD RequiredSize,PCSTR MachineName,PVOID Reserved);", "SetupDiGetClassDescriptionExW": "WINSETUPAPI WINBOOL WINAPI SetupDiGetClassDescriptionExW(CONST GUID *ClassGuid,PWSTR ClassDescription,DWORD ClassDescriptionSize,PDWORD RequiredSize,PCWSTR MachineName,PVOID Reserved);", "SetupDiCallClassInstaller": "WINSETUPAPI WINBOOL WINAPI SetupDiCallClassInstaller(DI_FUNCTION InstallFunction,HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData);", "SetupDiSelectDevice": "WINSETUPAPI WINBOOL WINAPI SetupDiSelectDevice(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData);", "SetupDiSelectBestCompatDrv": "WINSETUPAPI WINBOOL WINAPI SetupDiSelectBestCompatDrv(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData);", "SetupDiInstallDevice": "WINSETUPAPI WINBOOL WINAPI SetupDiInstallDevice(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData);", "SetupDiInstallDriverFiles": "WINSETUPAPI WINBOOL WINAPI SetupDiInstallDriverFiles(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData);", "SetupDiRegisterCoDeviceInstallers": "WINSETUPAPI WINBOOL WINAPI SetupDiRegisterCoDeviceInstallers(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData);", "SetupDiRemoveDevice": "WINSETUPAPI WINBOOL WINAPI SetupDiRemoveDevice(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData);", "SetupDiUnremoveDevice": "WINSETUPAPI WINBOOL WINAPI SetupDiUnremoveDevice(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData);", "SetupDiRestartDevices": "WINSETUPAPI WINBOOL WINAPI SetupDiRestartDevices(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData);", "SetupDiChangeState": "WINSETUPAPI WINBOOL WINAPI SetupDiChangeState(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData);", "SetupDiInstallClassA": "WINSETUPAPI WINBOOL WINAPI SetupDiInstallClassA(HWND hwndParent,PCSTR InfFileName,DWORD Flags,HSPFILEQ FileQueue);", "SetupDiInstallClassW": "WINSETUPAPI WINBOOL WINAPI SetupDiInstallClassW(HWND hwndParent,PCWSTR InfFileName,DWORD Flags,HSPFILEQ FileQueue);", "SetupDiInstallClassExA": "WINSETUPAPI WINBOOL WINAPI SetupDiInstallClassExA(HWND hwndParent,PCSTR InfFileName,DWORD Flags,HSPFILEQ FileQueue,CONST GUID *InterfaceClassGuid,PVOID Reserved1,PVOID Reserved2);", "SetupDiInstallClassExW": "WINSETUPAPI WINBOOL WINAPI SetupDiInstallClassExW(HWND hwndParent,PCWSTR InfFileName,DWORD Flags,HSPFILEQ FileQueue,CONST GUID *InterfaceClassGuid,PVOID Reserved1,PVOID Reserved2);", "SetupDiOpenClassRegKey": "WINSETUPAPI HKEY WINAPI SetupDiOpenClassRegKey(CONST GUID *ClassGuid,REGSAM samDesired);", "SetupDiOpenClassRegKeyExA": "WINSETUPAPI HKEY WINAPI SetupDiOpenClassRegKeyExA(CONST GUID *ClassGuid,REGSAM samDesired,DWORD Flags,PCSTR MachineName,PVOID Reserved);", "SetupDiOpenClassRegKeyExW": "WINSETUPAPI HKEY WINAPI SetupDiOpenClassRegKeyExW(CONST GUID *ClassGuid,REGSAM samDesired,DWORD Flags,PCWSTR MachineName,PVOID Reserved);", "SetupDiCreateDeviceInterfaceRegKeyA": "WINSETUPAPI HKEY WINAPI SetupDiCreateDeviceInterfaceRegKeyA(HDEVINFO DeviceInfoSet,PSP_DEVICE_INTERFACE_DATA DeviceInterfaceData,DWORD Reserved,REGSAM samDesired,HINF InfHandle,PCSTR InfSectionName);", "SetupDiCreateDeviceInterfaceRegKeyW": "WINSETUPAPI HKEY WINAPI SetupDiCreateDeviceInterfaceRegKeyW(HDEVINFO DeviceInfoSet,PSP_DEVICE_INTERFACE_DATA DeviceInterfaceData,DWORD Reserved,REGSAM samDesired,HINF InfHandle,PCWSTR InfSectionName);", "SetupDiOpenDeviceInterfaceRegKey": "WINSETUPAPI HKEY WINAPI SetupDiOpenDeviceInterfaceRegKey(HDEVINFO DeviceInfoSet,PSP_DEVICE_INTERFACE_DATA DeviceInterfaceData,DWORD Reserved,REGSAM samDesired);", "SetupDiDeleteDeviceInterfaceRegKey": "WINSETUPAPI WINBOOL WINAPI SetupDiDeleteDeviceInterfaceRegKey(HDEVINFO DeviceInfoSet,PSP_DEVICE_INTERFACE_DATA DeviceInterfaceData,DWORD Reserved);", "SetupDiCreateDevRegKeyA": "WINSETUPAPI HKEY WINAPI SetupDiCreateDevRegKeyA(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,DWORD Scope,DWORD HwProfile,DWORD KeyType,HINF InfHandle,PCSTR InfSectionName);", "SetupDiCreateDevRegKeyW": "WINSETUPAPI HKEY WINAPI SetupDiCreateDevRegKeyW(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,DWORD Scope,DWORD HwProfile,DWORD KeyType,HINF InfHandle,PCWSTR InfSectionName);", "SetupDiOpenDevRegKey": "WINSETUPAPI HKEY WINAPI SetupDiOpenDevRegKey(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,DWORD Scope,DWORD HwProfile,DWORD KeyType,REGSAM samDesired);", "SetupDiDeleteDevRegKey": "WINSETUPAPI WINBOOL WINAPI SetupDiDeleteDevRegKey(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,DWORD Scope,DWORD HwProfile,DWORD KeyType);", "SetupDiGetHwProfileList": "WINSETUPAPI WINBOOL WINAPI SetupDiGetHwProfileList(PDWORD HwProfileList,DWORD HwProfileListSize,PDWORD RequiredSize,PDWORD CurrentlyActiveIndex);", "SetupDiGetHwProfileListExA": "WINSETUPAPI WINBOOL WINAPI SetupDiGetHwProfileListExA(PDWORD HwProfileList,DWORD HwProfileListSize,PDWORD RequiredSize,PDWORD CurrentlyActiveIndex,PCSTR MachineName,PVOID Reserved);", "SetupDiGetHwProfileListExW": "WINSETUPAPI WINBOOL WINAPI SetupDiGetHwProfileListExW(PDWORD HwProfileList,DWORD HwProfileListSize,PDWORD RequiredSize,PDWORD CurrentlyActiveIndex,PCWSTR MachineName,PVOID Reserved);", "SetupDiGetDeviceRegistryPropertyA": "WINSETUPAPI WINBOOL WINAPI SetupDiGetDeviceRegistryPropertyA(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,DWORD Property,PDWORD PropertyRegDataType,PBYTE PropertyBuffer,DWORD PropertyBufferSize,PDWORD RequiredSize);", "SetupDiGetDeviceRegistryPropertyW": "WINSETUPAPI WINBOOL WINAPI SetupDiGetDeviceRegistryPropertyW(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,DWORD Property,PDWORD PropertyRegDataType,PBYTE PropertyBuffer,DWORD PropertyBufferSize,PDWORD RequiredSize);", "SetupDiGetClassRegistryPropertyA": "WINSETUPAPI WINBOOL WINAPI SetupDiGetClassRegistryPropertyA(CONST GUID *ClassGuid,DWORD Property,PDWORD PropertyRegDataType,PBYTE PropertyBuffer,DWORD PropertyBufferSize,PDWORD RequiredSize,PCSTR MachineName,PVOID Reserved);", "SetupDiGetClassRegistryPropertyW": "WINSETUPAPI WINBOOL WINAPI SetupDiGetClassRegistryPropertyW(CONST GUID *ClassGuid,DWORD Property,PDWORD PropertyRegDataType,PBYTE PropertyBuffer,DWORD PropertyBufferSize,PDWORD RequiredSize,PCWSTR MachineName,PVOID Reserved);", "SetupDiSetDeviceRegistryPropertyA": "WINSETUPAPI WINBOOL WINAPI SetupDiSetDeviceRegistryPropertyA(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,DWORD Property,CONST BYTE *PropertyBuffer,DWORD PropertyBufferSize);", "SetupDiSetDeviceRegistryPropertyW": "WINSETUPAPI WINBOOL WINAPI SetupDiSetDeviceRegistryPropertyW(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,DWORD Property,CONST BYTE *PropertyBuffer,DWORD PropertyBufferSize);", "SetupDiSetClassRegistryPropertyA": "WINSETUPAPI WINBOOL WINAPI SetupDiSetClassRegistryPropertyA(CONST GUID *ClassGuid,DWORD Property,CONST BYTE *PropertyBuffer,DWORD PropertyBufferSize,PCSTR MachineName,PVOID Reserved);", "SetupDiSetClassRegistryPropertyW": "WINSETUPAPI WINBOOL WINAPI SetupDiSetClassRegistryPropertyW(CONST GUID *ClassGuid,DWORD Property,CONST BYTE *PropertyBuffer,DWORD PropertyBufferSize,PCWSTR MachineName,PVOID Reserved);", "SetupDiGetDeviceInstallParamsA": "WINSETUPAPI WINBOOL WINAPI SetupDiGetDeviceInstallParamsA(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,PSP_DEVINSTALL_PARAMS_A DeviceInstallParams);", "SetupDiGetDeviceInstallParamsW": "WINSETUPAPI WINBOOL WINAPI SetupDiGetDeviceInstallParamsW(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,PSP_DEVINSTALL_PARAMS_W DeviceInstallParams);", "SetupDiGetClassInstallParamsA": "WINSETUPAPI WINBOOL WINAPI SetupDiGetClassInstallParamsA(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,PSP_CLASSINSTALL_HEADER ClassInstallParams,DWORD ClassInstallParamsSize,PDWORD RequiredSize);", "SetupDiGetClassInstallParamsW": "WINSETUPAPI WINBOOL WINAPI SetupDiGetClassInstallParamsW(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,PSP_CLASSINSTALL_HEADER ClassInstallParams,DWORD ClassInstallParamsSize,PDWORD RequiredSize);", "SetupDiSetDeviceInstallParamsA": "WINSETUPAPI WINBOOL WINAPI SetupDiSetDeviceInstallParamsA(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,PSP_DEVINSTALL_PARAMS_A DeviceInstallParams);", "SetupDiSetDeviceInstallParamsW": "WINSETUPAPI WINBOOL WINAPI SetupDiSetDeviceInstallParamsW(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,PSP_DEVINSTALL_PARAMS_W DeviceInstallParams);", "SetupDiSetClassInstallParamsA": "WINSETUPAPI WINBOOL WINAPI SetupDiSetClassInstallParamsA(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,PSP_CLASSINSTALL_HEADER ClassInstallParams,DWORD ClassInstallParamsSize);", "SetupDiSetClassInstallParamsW": "WINSETUPAPI WINBOOL WINAPI SetupDiSetClassInstallParamsW(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,PSP_CLASSINSTALL_HEADER ClassInstallParams,DWORD ClassInstallParamsSize);", "SetupDiGetDriverInstallParamsA": "WINSETUPAPI WINBOOL WINAPI SetupDiGetDriverInstallParamsA(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,PSP_DRVINFO_DATA_A DriverInfoData,PSP_DRVINSTALL_PARAMS DriverInstallParams);", "SetupDiGetDriverInstallParamsW": "WINSETUPAPI WINBOOL WINAPI SetupDiGetDriverInstallParamsW(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,PSP_DRVINFO_DATA_W DriverInfoData,PSP_DRVINSTALL_PARAMS DriverInstallParams);", "SetupDiSetDriverInstallParamsA": "WINSETUPAPI WINBOOL WINAPI SetupDiSetDriverInstallParamsA(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,PSP_DRVINFO_DATA_A DriverInfoData,PSP_DRVINSTALL_PARAMS DriverInstallParams);", "SetupDiSetDriverInstallParamsW": "WINSETUPAPI WINBOOL WINAPI SetupDiSetDriverInstallParamsW(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,PSP_DRVINFO_DATA_W DriverInfoData,PSP_DRVINSTALL_PARAMS DriverInstallParams);", "SetupDiLoadClassIcon": "WINSETUPAPI WINBOOL WINAPI SetupDiLoadClassIcon(CONST GUID *ClassGuid,HICON *LargeIcon,PINT MiniIconIndex);", "SetupDiDrawMiniIcon": "WINSETUPAPI INT WINAPI SetupDiDrawMiniIcon(HDC hdc,RECT rc,INT MiniIconIndex,DWORD Flags);", "SetupDiGetClassBitmapIndex": "WINSETUPAPI WINBOOL WINAPI SetupDiGetClassBitmapIndex(CONST GUID *ClassGuid,PINT MiniIconIndex);", "SetupDiGetClassImageList": "WINSETUPAPI WINBOOL WINAPI SetupDiGetClassImageList(PSP_CLASSIMAGELIST_DATA ClassImageListData);", "SetupDiGetClassImageListExA": "WINSETUPAPI WINBOOL WINAPI SetupDiGetClassImageListExA(PSP_CLASSIMAGELIST_DATA ClassImageListData,PCSTR MachineName,PVOID Reserved);", "SetupDiGetClassImageListExW": "WINSETUPAPI WINBOOL WINAPI SetupDiGetClassImageListExW(PSP_CLASSIMAGELIST_DATA ClassImageListData,PCWSTR MachineName,PVOID Reserved);", "SetupDiGetClassImageIndex": "WINSETUPAPI WINBOOL WINAPI SetupDiGetClassImageIndex(PSP_CLASSIMAGELIST_DATA ClassImageListData,CONST GUID *ClassGuid,PINT ImageIndex);", "SetupDiDestroyClassImageList": "WINSETUPAPI WINBOOL WINAPI SetupDiDestroyClassImageList(PSP_CLASSIMAGELIST_DATA ClassImageListData);", "SetupDiGetClassDevPropertySheetsA": "WINSETUPAPI WINBOOL WINAPI SetupDiGetClassDevPropertySheetsA(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,LPPROPSHEETHEADERA PropertySheetHeader,DWORD PropertySheetHeaderPageListSize,PDWORD RequiredSize,DWORD PropertySheetType);", "SetupDiGetClassDevPropertySheetsW": "WINSETUPAPI WINBOOL WINAPI SetupDiGetClassDevPropertySheetsW(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,LPPROPSHEETHEADERW PropertySheetHeader,DWORD PropertySheetHeaderPageListSize,PDWORD RequiredSize,DWORD PropertySheetType);", "SetupDiAskForOEMDisk": "WINSETUPAPI WINBOOL WINAPI SetupDiAskForOEMDisk(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData);", "SetupDiSelectOEMDrv": "WINSETUPAPI WINBOOL WINAPI SetupDiSelectOEMDrv(HWND hwndParent,HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData);", "SetupDiClassNameFromGuidA": "WINSETUPAPI WINBOOL WINAPI SetupDiClassNameFromGuidA(CONST GUID *ClassGuid,PSTR ClassName,DWORD ClassNameSize,PDWORD RequiredSize);", "SetupDiClassNameFromGuidW": "WINSETUPAPI WINBOOL WINAPI SetupDiClassNameFromGuidW(CONST GUID *ClassGuid,PWSTR ClassName,DWORD ClassNameSize,PDWORD RequiredSize);", "SetupDiClassNameFromGuidExA": "WINSETUPAPI WINBOOL WINAPI SetupDiClassNameFromGuidExA(CONST GUID *ClassGuid,PSTR ClassName,DWORD ClassNameSize,PDWORD RequiredSize,PCSTR MachineName,PVOID Reserved);", "SetupDiClassNameFromGuidExW": "WINSETUPAPI WINBOOL WINAPI SetupDiClassNameFromGuidExW(CONST GUID *ClassGuid,PWSTR ClassName,DWORD ClassNameSize,PDWORD RequiredSize,PCWSTR MachineName,PVOID Reserved);", "SetupDiClassGuidsFromNameA": "WINSETUPAPI WINBOOL WINAPI SetupDiClassGuidsFromNameA(PCSTR ClassName,LPGUID ClassGuidList,DWORD ClassGuidListSize,PDWORD RequiredSize);", "SetupDiClassGuidsFromNameW": "WINSETUPAPI WINBOOL WINAPI SetupDiClassGuidsFromNameW(PCWSTR ClassName,LPGUID ClassGuidList,DWORD ClassGuidListSize,PDWORD RequiredSize);", "SetupDiClassGuidsFromNameExA": "WINSETUPAPI WINBOOL WINAPI SetupDiClassGuidsFromNameExA(PCSTR ClassName,LPGUID ClassGuidList,DWORD ClassGuidListSize,PDWORD RequiredSize,PCSTR MachineName,PVOID Reserved);", "SetupDiClassGuidsFromNameExW": "WINSETUPAPI WINBOOL WINAPI SetupDiClassGuidsFromNameExW(PCWSTR ClassName,LPGUID ClassGuidList,DWORD ClassGuidListSize,PDWORD RequiredSize,PCWSTR MachineName,PVOID Reserved);", "SetupDiGetHwProfileFriendlyNameA": "WINSETUPAPI WINBOOL WINAPI SetupDiGetHwProfileFriendlyNameA(DWORD HwProfile,PSTR FriendlyName,DWORD FriendlyNameSize,PDWORD RequiredSize);", "SetupDiGetHwProfileFriendlyNameW": "WINSETUPAPI WINBOOL WINAPI SetupDiGetHwProfileFriendlyNameW(DWORD HwProfile,PWSTR FriendlyName,DWORD FriendlyNameSize,PDWORD RequiredSize);", "SetupDiGetHwProfileFriendlyNameExA": "WINSETUPAPI WINBOOL WINAPI SetupDiGetHwProfileFriendlyNameExA(DWORD HwProfile,PSTR FriendlyName,DWORD FriendlyNameSize,PDWORD RequiredSize,PCSTR MachineName,PVOID Reserved);", "SetupDiGetHwProfileFriendlyNameExW": "WINSETUPAPI WINBOOL WINAPI SetupDiGetHwProfileFriendlyNameExW(DWORD HwProfile,PWSTR FriendlyName,DWORD FriendlyNameSize,PDWORD RequiredSize,PCWSTR MachineName,PVOID Reserved);", "SetupDiGetWizardPage": "WINSETUPAPI HPROPSHEETPAGE WINAPI SetupDiGetWizardPage(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,PSP_INSTALLWIZARD_DATA InstallWizardData,DWORD PageType,DWORD Flags);", "SetupDiGetSelectedDevice": "WINSETUPAPI WINBOOL WINAPI SetupDiGetSelectedDevice(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData);", "SetupDiSetSelectedDevice": "WINSETUPAPI WINBOOL WINAPI SetupDiSetSelectedDevice(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData);", "SetupDiGetActualModelsSectionA": "WINSETUPAPI WINBOOL WINAPI SetupDiGetActualModelsSectionA(PINFCONTEXT Context,PSP_ALTPLATFORM_INFO AlternatePlatformInfo,PSTR InfSectionWithExt,DWORD InfSectionWithExtSize,PDWORD RequiredSize,PVOID Reserved);", "SetupDiGetActualModelsSectionW": "WINSETUPAPI WINBOOL WINAPI SetupDiGetActualModelsSectionW(PINFCONTEXT Context,PSP_ALTPLATFORM_INFO AlternatePlatformInfo,PWSTR InfSectionWithExt,DWORD InfSectionWithExtSize,PDWORD RequiredSize,PVOID Reserved);", "SetupDiGetActualSectionToInstallA": "WINSETUPAPI WINBOOL WINAPI SetupDiGetActualSectionToInstallA(HINF InfHandle,PCSTR InfSectionName,PSTR InfSectionWithExt,DWORD InfSectionWithExtSize,PDWORD RequiredSize,PSTR *Extension);", "SetupDiGetActualSectionToInstallW": "WINSETUPAPI WINBOOL WINAPI SetupDiGetActualSectionToInstallW(HINF InfHandle,PCWSTR InfSectionName,PWSTR InfSectionWithExt,DWORD InfSectionWithExtSize,PDWORD RequiredSize,PWSTR *Extension);", "SetupDiGetActualSectionToInstallExA": "WINSETUPAPI WINBOOL WINAPI SetupDiGetActualSectionToInstallExA(HINF InfHandle,PCSTR InfSectionName,PSP_ALTPLATFORM_INFO AlternatePlatformInfo,PSTR InfSectionWithExt,DWORD InfSectionWithExtSize,PDWORD RequiredSize,PSTR *Extension,PVOID Reserved);", "SetupDiGetActualSectionToInstallExW": "WINSETUPAPI WINBOOL WINAPI SetupDiGetActualSectionToInstallExW(HINF InfHandle,PCWSTR InfSectionName,PSP_ALTPLATFORM_INFO AlternatePlatformInfo,PWSTR InfSectionWithExt,DWORD InfSectionWithExtSize,PDWORD RequiredSize,PWSTR *Extension,PVOID Reserved);", "SetupEnumInfSectionsA": "WINSETUPAPI WINBOOL WINAPI SetupEnumInfSectionsA (HINF InfHandle,UINT Index,PSTR Buffer,UINT Size,UINT *SizeNeeded);", "SetupEnumInfSectionsW": "WINSETUPAPI WINBOOL WINAPI SetupEnumInfSectionsW (HINF InfHandle,UINT Index,PWSTR Buffer,UINT Size,UINT *SizeNeeded);", "SetupVerifyInfFileA": "WINSETUPAPI WINBOOL WINAPI SetupVerifyInfFileA(PCSTR InfName,PSP_ALTPLATFORM_INFO AltPlatformInfo,PSP_INF_SIGNER_INFO_A InfSignerInfo);", "SetupVerifyInfFileW": "WINSETUPAPI WINBOOL WINAPI SetupVerifyInfFileW(PCWSTR InfName,PSP_ALTPLATFORM_INFO AltPlatformInfo,PSP_INF_SIGNER_INFO_W InfSignerInfo);", "SetupDiGetCustomDevicePropertyA": "WINSETUPAPI WINBOOL WINAPI SetupDiGetCustomDevicePropertyA(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,PCSTR CustomPropertyName,DWORD Flags,PDWORD PropertyRegDataType,PBYTE PropertyBuffer,DWORD PropertyBufferSize,PDWORD RequiredSize);", "SetupDiGetCustomDevicePropertyW": "WINSETUPAPI WINBOOL WINAPI SetupDiGetCustomDevicePropertyW(HDEVINFO DeviceInfoSet,PSP_DEVINFO_DATA DeviceInfoData,PCWSTR CustomPropertyName,DWORD Flags,PDWORD PropertyRegDataType,PBYTE PropertyBuffer,DWORD PropertyBufferSize,PDWORD RequiredSize);", "SetupConfigureWmiFromInfSectionA": "WINSETUPAPI WINBOOL WINAPI SetupConfigureWmiFromInfSectionA(HINF InfHandle,PCSTR SectionName,DWORD Flags);", "SetupConfigureWmiFromInfSectionW": "WINSETUPAPI WINBOOL WINAPI SetupConfigureWmiFromInfSectionW(HINF InfHandle,PCWSTR SectionName,DWORD Flags);", "SetupDiGetDevicePropertyW": "WINSETUPAPI WINBOOL WINAPI SetupDiGetDevicePropertyW(HDEVINFO DeviceInfoSet, PSP_DEVINFO_DATA DeviceInfoData, const DEVPROPKEY *PropertyKey, DEVPROPTYPE *PropertyType, PBYTE PropertyBuffer, DWORD PropertyBufferSize, PDWORD RequiredSize, DWORD Flags);", "SetupDiGetDevicePropertyKeys": "WINSETUPAPI WINBOOL WINAPI SetupDiGetDevicePropertyKeys(HDEVINFO DeviceInfoSet, PSP_DEVINFO_DATA DeviceInfoData, DEVPROPKEY *PropertyKeyArray, DWORD PropertyKeyCount, PDWORD RequiredPropertyKeyCount, DWORD Flags);", "D3DPERF_BeginEvent": "int WINAPI D3DPERF_BeginEvent(D3DCOLOR color, const WCHAR *name);", "D3DPERF_EndEvent": "int WINAPI D3DPERF_EndEvent(void);", "D3DPERF_GetStatus": "DWORD WINAPI D3DPERF_GetStatus(void);", "D3DPERF_QueryRepeatFrame": "WINBOOL WINAPI D3DPERF_QueryRepeatFrame(void);", "D3DPERF_SetMarker": "void WINAPI D3DPERF_SetMarker(D3DCOLOR color, const WCHAR *name);", "D3DPERF_SetOptions": "void WINAPI D3DPERF_SetOptions(DWORD options);", "D3DPERF_SetRegion": "void WINAPI D3DPERF_SetRegion(D3DCOLOR color, const WCHAR *name);", "Direct3DCreate9": "IDirect3D9 * WINAPI Direct3DCreate9(UINT sdk_version);", "Direct3DCreate9Ex": "HRESULT WINAPI Direct3DCreate9Ex(UINT sdk_version, IDirect3D9Ex **d3d9ex);", "D3DXColorAdjustContrast": "D3DXCOLOR* WINAPI D3DXColorAdjustContrast(D3DXCOLOR *pout, const D3DXCOLOR *pc, FLOAT s);", "D3DXColorAdjustSaturation": "D3DXCOLOR* WINAPI D3DXColorAdjustSaturation(D3DXCOLOR *pout, const D3DXCOLOR *pc, FLOAT s);", "D3DXFresnelTerm": "FLOAT WINAPI D3DXFresnelTerm(FLOAT costheta, FLOAT refractionindex);", "D3DXMatrixAffineTransformation": "D3DXMATRIX* WINAPI D3DXMatrixAffineTransformation(D3DXMATRIX *pout, FLOAT scaling, const D3DXVECTOR3 *rotationcenter, const D3DXQUATERNION *rotation,", "D3DXMatrixAffineTransformation2D": "D3DXMATRIX* WINAPI D3DXMatrixAffineTransformation2D(D3DXMATRIX *pout, FLOAT scaling, const D3DXVECTOR2 *protationcenter, FLOAT rotation,", "D3DXMatrixDecompose": "HRESULT WINAPI D3DXMatrixDecompose(D3DXVECTOR3 *poutscale, D3DXQUATERNION *poutrotation, D3DXVECTOR3 *pouttranslation, const D3DXMATRIX *pm);", "D3DXMatrixDeterminant": "FLOAT WINAPI D3DXMatrixDeterminant(const D3DXMATRIX *pm);", "D3DXMatrixInverse": "D3DXMATRIX* WINAPI D3DXMatrixInverse(D3DXMATRIX *pout, FLOAT *pdeterminant, const D3DXMATRIX *pm);", "D3DXMatrixLookAtLH": "D3DXMATRIX* WINAPI D3DXMatrixLookAtLH(D3DXMATRIX *pout, const D3DXVECTOR3 *peye, const D3DXVECTOR3 *pat, const D3DXVECTOR3 *pup);", "D3DXMatrixLookAtRH": "D3DXMATRIX* WINAPI D3DXMatrixLookAtRH(D3DXMATRIX *pout, const D3DXVECTOR3 *peye, const D3DXVECTOR3 *pat, const D3DXVECTOR3 *pup);", "D3DXMatrixMultiply": "D3DXMATRIX* WINAPI D3DXMatrixMultiply(D3DXMATRIX *pout, const D3DXMATRIX *pm1, const D3DXMATRIX *pm2);", "D3DXMatrixMultiplyTranspose": "D3DXMATRIX* WINAPI D3DXMatrixMultiplyTranspose(D3DXMATRIX *pout, const D3DXMATRIX *pm1, const D3DXMATRIX *pm2);", "D3DXMatrixOrthoLH": "D3DXMATRIX* WINAPI D3DXMatrixOrthoLH(D3DXMATRIX *pout, FLOAT w, FLOAT h, FLOAT zn, FLOAT zf);", "D3DXMatrixOrthoOffCenterLH": "D3DXMATRIX* WINAPI D3DXMatrixOrthoOffCenterLH(D3DXMATRIX *pout, FLOAT l, FLOAT r, FLOAT b, FLOAT t, FLOAT zn, FLOAT zf);", "D3DXMatrixOrthoOffCenterRH": "D3DXMATRIX* WINAPI D3DXMatrixOrthoOffCenterRH(D3DXMATRIX *pout, FLOAT l, FLOAT r, FLOAT b, FLOAT t, FLOAT zn, FLOAT zf);", "D3DXMatrixOrthoRH": "D3DXMATRIX* WINAPI D3DXMatrixOrthoRH(D3DXMATRIX *pout, FLOAT w, FLOAT h, FLOAT zn, FLOAT zf);", "D3DXMatrixPerspectiveFovLH": "D3DXMATRIX* WINAPI D3DXMatrixPerspectiveFovLH(D3DXMATRIX *pout, FLOAT fovy, FLOAT aspect, FLOAT zn, FLOAT zf);", "D3DXMatrixPerspectiveFovRH": "D3DXMATRIX* WINAPI D3DXMatrixPerspectiveFovRH(D3DXMATRIX *pout, FLOAT fovy, FLOAT aspect, FLOAT zn, FLOAT zf);", "D3DXMatrixPerspectiveLH": "D3DXMATRIX* WINAPI D3DXMatrixPerspectiveLH(D3DXMATRIX *pout, FLOAT w, FLOAT h, FLOAT zn, FLOAT zf);", "D3DXMatrixPerspectiveOffCenterLH": "D3DXMATRIX* WINAPI D3DXMatrixPerspectiveOffCenterLH(D3DXMATRIX *pout, FLOAT l, FLOAT r, FLOAT b, FLOAT t, FLOAT zn, FLOAT zf);", "D3DXMatrixPerspectiveOffCenterRH": "D3DXMATRIX* WINAPI D3DXMatrixPerspectiveOffCenterRH(D3DXMATRIX *pout, FLOAT l, FLOAT r, FLOAT b, FLOAT t, FLOAT zn, FLOAT zf);", "D3DXMatrixPerspectiveRH": "D3DXMATRIX* WINAPI D3DXMatrixPerspectiveRH(D3DXMATRIX *pout, FLOAT w, FLOAT h, FLOAT zn, FLOAT zf);", "D3DXMatrixReflect": "D3DXMATRIX* WINAPI D3DXMatrixReflect(D3DXMATRIX *pout, const D3DXPLANE *pplane);", "D3DXMatrixRotationAxis": "D3DXMATRIX* WINAPI D3DXMatrixRotationAxis(D3DXMATRIX *pout, const D3DXVECTOR3 *pv, FLOAT angle);", "D3DXMatrixRotationQuaternion": "D3DXMATRIX* WINAPI D3DXMatrixRotationQuaternion(D3DXMATRIX *pout, const D3DXQUATERNION *pq);", "D3DXMatrixRotationX": "D3DXMATRIX* WINAPI D3DXMatrixRotationX(D3DXMATRIX *pout, FLOAT angle);", "D3DXMatrixRotationY": "D3DXMATRIX* WINAPI D3DXMatrixRotationY(D3DXMATRIX *pout, FLOAT angle);", "D3DXMatrixRotationYawPitchRoll": "D3DXMATRIX* WINAPI D3DXMatrixRotationYawPitchRoll(D3DXMATRIX *pout, FLOAT yaw, FLOAT pitch, FLOAT roll);", "D3DXMatrixRotationZ": "D3DXMATRIX* WINAPI D3DXMatrixRotationZ(D3DXMATRIX *pout, FLOAT angle);", "D3DXMatrixScaling": "D3DXMATRIX* WINAPI D3DXMatrixScaling(D3DXMATRIX *pout, FLOAT sx, FLOAT sy, FLOAT sz);", "D3DXMatrixShadow": "D3DXMATRIX* WINAPI D3DXMatrixShadow(D3DXMATRIX *pout, const D3DXVECTOR4 *plight, const D3DXPLANE *pPlane);", "D3DXMatrixTransformation": "D3DXMATRIX* WINAPI D3DXMatrixTransformation(D3DXMATRIX *pout, const D3DXVECTOR3 *pscalingcenter, const D3DXQUATERNION *pscalingrotation, const D3DXVECTOR3 *pscaling, const D3DXVECTOR3 *protationcenter,", "D3DXMatrixTransformation2D": "D3DXMATRIX* WINAPI D3DXMatrixTransformation2D(D3DXMATRIX *pout, const D3DXVECTOR2 *pscalingcenter, FLOAT scalingrotation, const D3DXVECTOR2 *pscaling,", "D3DXMatrixTranslation": "D3DXMATRIX* WINAPI D3DXMatrixTranslation(D3DXMATRIX *pout, FLOAT x, FLOAT y, FLOAT z);", "D3DXMatrixTranspose": "D3DXMATRIX* WINAPI D3DXMatrixTranspose(D3DXMATRIX *pout, const D3DXMATRIX *pm);", "D3DXPlaneFromPointNormal": "D3DXPLANE* WINAPI D3DXPlaneFromPointNormal(D3DXPLANE *pout, const D3DXVECTOR3 *pvpoint, const D3DXVECTOR3 *pvnormal);", "D3DXPlaneFromPoints": "D3DXPLANE* WINAPI D3DXPlaneFromPoints(D3DXPLANE *pout, const D3DXVECTOR3 *pv1, const D3DXVECTOR3 *pv2, const D3DXVECTOR3 *pv3);", "D3DXPlaneIntersectLine": "D3DXVECTOR3* WINAPI D3DXPlaneIntersectLine(D3DXVECTOR3 *pout, const D3DXPLANE *pp, const D3DXVECTOR3 *pv1, const D3DXVECTOR3 *pv2);", "D3DXPlaneNormalize": "D3DXPLANE* WINAPI D3DXPlaneNormalize(D3DXPLANE *pout, const D3DXPLANE *pp);", "D3DXPlaneTransform": "D3DXPLANE* WINAPI D3DXPlaneTransform(D3DXPLANE *pout, const D3DXPLANE *pplane, const D3DXMATRIX *pm);", "D3DXPlaneTransformArray": "D3DXPLANE* WINAPI D3DXPlaneTransformArray(D3DXPLANE *pout, UINT outstride, const D3DXPLANE *pplane, UINT pstride, const D3DXMATRIX *pm, UINT n);", "D3DXQuaternionBaryCentric": "D3DXQUATERNION* WINAPI D3DXQuaternionBaryCentric(D3DXQUATERNION *pout, const D3DXQUATERNION *pq1, const D3DXQUATERNION *pq2, const D3DXQUATERNION *pq3, FLOAT f, FLOAT g);", "D3DXQuaternionExp": "D3DXQUATERNION* WINAPI D3DXQuaternionExp(D3DXQUATERNION *pout, const D3DXQUATERNION *pq);", "D3DXQuaternionInverse": "D3DXQUATERNION* WINAPI D3DXQuaternionInverse(D3DXQUATERNION *pout, const D3DXQUATERNION *pq);", "D3DXQuaternionLn": "D3DXQUATERNION* WINAPI D3DXQuaternionLn(D3DXQUATERNION *pout, const D3DXQUATERNION *pq);", "D3DXQuaternionMultiply": "D3DXQUATERNION* WINAPI D3DXQuaternionMultiply(D3DXQUATERNION *pout, const D3DXQUATERNION *pq1, const D3DXQUATERNION *pq2);", "D3DXQuaternionNormalize": "D3DXQUATERNION* WINAPI D3DXQuaternionNormalize(D3DXQUATERNION *pout, const D3DXQUATERNION *pq);", "D3DXQuaternionRotationAxis": "D3DXQUATERNION* WINAPI D3DXQuaternionRotationAxis(D3DXQUATERNION *pout, const D3DXVECTOR3 *pv, FLOAT angle);", "D3DXQuaternionRotationMatrix": "D3DXQUATERNION* WINAPI D3DXQuaternionRotationMatrix(D3DXQUATERNION *pout, const D3DXMATRIX *pm);", "D3DXQuaternionRotationYawPitchRoll": "D3DXQUATERNION* WINAPI D3DXQuaternionRotationYawPitchRoll(D3DXQUATERNION *pout, FLOAT yaw, FLOAT pitch, FLOAT roll);", "D3DXQuaternionSlerp": "D3DXQUATERNION* WINAPI D3DXQuaternionSlerp(D3DXQUATERNION *pout, const D3DXQUATERNION *pq1, const D3DXQUATERNION *pq2, FLOAT t);", "D3DXQuaternionSquad": "D3DXQUATERNION* WINAPI D3DXQuaternionSquad(D3DXQUATERNION *pout, const D3DXQUATERNION *pq1, const D3DXQUATERNION *pq2, const D3DXQUATERNION *pq3,", "D3DXQuaternionSquadSetup": "void WINAPI D3DXQuaternionSquadSetup(D3DXQUATERNION *paout, D3DXQUATERNION *pbout, D3DXQUATERNION *pcout, const D3DXQUATERNION *pq0,", "D3DXQuaternionToAxisAngle": "void WINAPI D3DXQuaternionToAxisAngle(const D3DXQUATERNION *pq, D3DXVECTOR3 *paxis, FLOAT *pangle);", "D3DXVec2BaryCentric": "D3DXVECTOR2* WINAPI D3DXVec2BaryCentric(D3DXVECTOR2 *pout, const D3DXVECTOR2 *pv1, const D3DXVECTOR2 *pv2, const D3DXVECTOR2 *pv3, FLOAT f, FLOAT g);", "D3DXVec2CatmullRom": "D3DXVECTOR2* WINAPI D3DXVec2CatmullRom(D3DXVECTOR2 *pout, const D3DXVECTOR2 *pv0, const D3DXVECTOR2 *pv1, const D3DXVECTOR2 *pv2, const D3DXVECTOR2 *pv3, FLOAT s);", "D3DXVec2Hermite": "D3DXVECTOR2* WINAPI D3DXVec2Hermite(D3DXVECTOR2 *pout, const D3DXVECTOR2 *pv1, const D3DXVECTOR2 *pt1, const D3DXVECTOR2 *pv2, const D3DXVECTOR2 *pt2, FLOAT s);", "D3DXVec2Normalize": "D3DXVECTOR2* WINAPI D3DXVec2Normalize(D3DXVECTOR2 *pout, const D3DXVECTOR2 *pv);", "D3DXVec2Transform": "D3DXVECTOR4* WINAPI D3DXVec2Transform(D3DXVECTOR4 *pout, const D3DXVECTOR2 *pv, const D3DXMATRIX *pm);", "D3DXVec2TransformArray": "D3DXVECTOR4* WINAPI D3DXVec2TransformArray(D3DXVECTOR4 *pout, UINT outstride, const D3DXVECTOR2 *pv, UINT vstride, const D3DXMATRIX *pm, UINT n);", "D3DXVec2TransformCoord": "D3DXVECTOR2* WINAPI D3DXVec2TransformCoord(D3DXVECTOR2 *pout, const D3DXVECTOR2 *pv, const D3DXMATRIX *pm);", "D3DXVec2TransformCoordArray": "D3DXVECTOR2* WINAPI D3DXVec2TransformCoordArray(D3DXVECTOR2 *pout, UINT outstride, const D3DXVECTOR2 *pv, UINT vstride, const D3DXMATRIX *pm, UINT n);", "D3DXVec2TransformNormal": "D3DXVECTOR2* WINAPI D3DXVec2TransformNormal(D3DXVECTOR2 *pout, const D3DXVECTOR2 *pv, const D3DXMATRIX *pm);", "D3DXVec2TransformNormalArray": "D3DXVECTOR2* WINAPI D3DXVec2TransformNormalArray(D3DXVECTOR2 *pout, UINT outstride, const D3DXVECTOR2 *pv, UINT vstride, const D3DXMATRIX *pm, UINT n);", "D3DXVec3BaryCentric": "D3DXVECTOR3* WINAPI D3DXVec3BaryCentric(D3DXVECTOR3 *pout, const D3DXVECTOR3 *pv1, const D3DXVECTOR3 *pv2, const D3DXVECTOR3 *pv3, FLOAT f, FLOAT g);", "D3DXVec3CatmullRom": "D3DXVECTOR3* WINAPI D3DXVec3CatmullRom( D3DXVECTOR3 *pout, const D3DXVECTOR3 *pv0, const D3DXVECTOR3 *pv1, const D3DXVECTOR3 *pv2, const D3DXVECTOR3 *pv3, FLOAT s);", "D3DXVec3Hermite": "D3DXVECTOR3* WINAPI D3DXVec3Hermite(D3DXVECTOR3 *pout, const D3DXVECTOR3 *pv1, const D3DXVECTOR3 *pt1, const D3DXVECTOR3 *pv2, const D3DXVECTOR3 *pt2, FLOAT s);", "D3DXVec3Normalize": "D3DXVECTOR3* WINAPI D3DXVec3Normalize(D3DXVECTOR3 *pout, const D3DXVECTOR3 *pv);", "D3DXVec3Project": "D3DXVECTOR3* WINAPI D3DXVec3Project(D3DXVECTOR3 *pout, const D3DXVECTOR3 *pv, const D3DVIEWPORT9 *pviewport, const D3DXMATRIX *pprojection,", "D3DXVec3ProjectArray": "D3DXVECTOR3* WINAPI D3DXVec3ProjectArray(D3DXVECTOR3 *pout, UINT outstride, const D3DXVECTOR3 *pv, UINT vstride, const D3DVIEWPORT9 *pviewport,", "D3DXVec3Transform": "D3DXVECTOR4* WINAPI D3DXVec3Transform(D3DXVECTOR4 *pout, const D3DXVECTOR3 *pv, const D3DXMATRIX *pm);", "D3DXVec3TransformArray": "D3DXVECTOR4* WINAPI D3DXVec3TransformArray(D3DXVECTOR4 *pout, UINT outstride, const D3DXVECTOR3 *pv, UINT vstride, const D3DXMATRIX *pm, UINT n);", "D3DXVec3TransformCoord": "D3DXVECTOR3* WINAPI D3DXVec3TransformCoord(D3DXVECTOR3 *pout, const D3DXVECTOR3 *pv, const D3DXMATRIX *pm);", "D3DXVec3TransformCoordArray": "D3DXVECTOR3* WINAPI D3DXVec3TransformCoordArray(D3DXVECTOR3 *pout, UINT outstride, const D3DXVECTOR3 *pv, UINT vstride, const D3DXMATRIX *pm, UINT n);", "D3DXVec3TransformNormal": "D3DXVECTOR3* WINAPI D3DXVec3TransformNormal(D3DXVECTOR3 *pout, const D3DXVECTOR3 *pv, const D3DXMATRIX *pm);", "D3DXVec3TransformNormalArray": "D3DXVECTOR3* WINAPI D3DXVec3TransformNormalArray(D3DXVECTOR3 *pout, UINT outstride, const D3DXVECTOR3 *pv, UINT vstride, const D3DXMATRIX *pm, UINT n);", "D3DXVec3Unproject": "D3DXVECTOR3* WINAPI D3DXVec3Unproject(D3DXVECTOR3 *pout, const D3DXVECTOR3 *pv, const D3DVIEWPORT9 *pviewport, const D3DXMATRIX *pprojection,", "D3DXVec3UnprojectArray": "D3DXVECTOR3* WINAPI D3DXVec3UnprojectArray(D3DXVECTOR3 *pout, UINT outstride, const D3DXVECTOR3 *pv, UINT vstride, const D3DVIEWPORT9 *pviewport,", "D3DXVec4BaryCentric": "D3DXVECTOR4* WINAPI D3DXVec4BaryCentric(D3DXVECTOR4 *pout, const D3DXVECTOR4 *pv1, const D3DXVECTOR4 *pv2, const D3DXVECTOR4 *pv3, FLOAT f, FLOAT g);", "D3DXVec4CatmullRom": "D3DXVECTOR4* WINAPI D3DXVec4CatmullRom(D3DXVECTOR4 *pout, const D3DXVECTOR4 *pv0, const D3DXVECTOR4 *pv1, const D3DXVECTOR4 *pv2, const D3DXVECTOR4 *pv3, FLOAT s);", "D3DXVec4Cross": "D3DXVECTOR4* WINAPI D3DXVec4Cross(D3DXVECTOR4 *pout, const D3DXVECTOR4 *pv1, const D3DXVECTOR4 *pv2, const D3DXVECTOR4 *pv3);", "D3DXVec4Hermite": "D3DXVECTOR4* WINAPI D3DXVec4Hermite(D3DXVECTOR4 *pout, const D3DXVECTOR4 *pv1, const D3DXVECTOR4 *pt1, const D3DXVECTOR4 *pv2, const D3DXVECTOR4 *pt2, FLOAT s);", "D3DXVec4Normalize": "D3DXVECTOR4* WINAPI D3DXVec4Normalize(D3DXVECTOR4 *pout, const D3DXVECTOR4 *pv);", "D3DXVec4Transform": "D3DXVECTOR4* WINAPI D3DXVec4Transform(D3DXVECTOR4 *pout, const D3DXVECTOR4 *pv, const D3DXMATRIX *pm);", "D3DXVec4TransformArray": "D3DXVECTOR4* WINAPI D3DXVec4TransformArray(D3DXVECTOR4 *pout, UINT outstride, const D3DXVECTOR4 *pv, UINT vstride, const D3DXMATRIX *pm, UINT n);", "D3DXFloat32To16Array": "D3DXFLOAT16 *WINAPI D3DXFloat32To16Array(D3DXFLOAT16 *pout, const FLOAT *pin, UINT n);", "D3DXFloat16To32Array": "FLOAT *WINAPI D3DXFloat16To32Array(FLOAT *pout, const D3DXFLOAT16 *pin, UINT n);", "D3DXSHAdd": "FLOAT* WINAPI D3DXSHAdd(FLOAT *out, UINT order, const FLOAT *a, const FLOAT *b);", "D3DXSHDot": "FLOAT WINAPI D3DXSHDot(UINT order, const FLOAT *a, const FLOAT *b);", "D3DXSHEvalConeLight": "HRESULT WINAPI D3DXSHEvalConeLight(UINT order, const D3DXVECTOR3 *dir, FLOAT radius, FLOAT Rintensity, FLOAT Gintensity, FLOAT Bintensity, FLOAT *rout, FLOAT *gout, FLOAT *bout);", "D3DXSHEvalDirection": "FLOAT* WINAPI D3DXSHEvalDirection(FLOAT *out, UINT order, const D3DXVECTOR3 *dir);", "D3DXSHEvalDirectionalLight": "HRESULT WINAPI D3DXSHEvalDirectionalLight(UINT order, const D3DXVECTOR3 *dir, FLOAT Rintensity, FLOAT Gintensity, FLOAT Bintensity, FLOAT *rout, FLOAT *gout, FLOAT *bout);", "D3DXSHEvalHemisphereLight": "HRESULT WINAPI D3DXSHEvalHemisphereLight(UINT order, const D3DXVECTOR3 *dir, D3DXCOLOR top, D3DXCOLOR bottom, FLOAT *rout, FLOAT *gout, FLOAT *bout);", "D3DXSHEvalSphericalLight": "HRESULT WINAPI D3DXSHEvalSphericalLight(UINT order, const D3DXVECTOR3 *dir, FLOAT radius, FLOAT Rintensity, FLOAT Gintensity, FLOAT Bintensity, FLOAT *rout, FLOAT *gout, FLOAT *bout);", "D3DXSHMultiply2": "FLOAT* WINAPI D3DXSHMultiply2(FLOAT *out, const FLOAT *a, const FLOAT *b);", "D3DXSHMultiply3": "FLOAT* WINAPI D3DXSHMultiply3(FLOAT *out, const FLOAT *a, const FLOAT *b);", "D3DXSHMultiply4": "FLOAT* WINAPI D3DXSHMultiply4(FLOAT *out, const FLOAT *a, const FLOAT *b);", "D3DXSHProjectCubeMap": "HRESULT WINAPI D3DXSHProjectCubeMap(UINT order, IDirect3DCubeTexture9 *texture, FLOAT *red, FLOAT *green, FLOAT *blue);", "D3DXSHRotate": "FLOAT* WINAPI D3DXSHRotate(FLOAT *out, UINT order, const D3DXMATRIX *matrix, const FLOAT *in);", "D3DXSHRotateZ": "FLOAT* WINAPI D3DXSHRotateZ(FLOAT *out, UINT order, FLOAT angle, const FLOAT *in);", "D3DXSHScale": "FLOAT* WINAPI D3DXSHScale(FLOAT *out, UINT order, const FLOAT *a, const FLOAT scale);", "D3DXCreateMatrixStack": "HRESULT WINAPI D3DXCreateMatrixStack(DWORD flags, ID3DXMatrixStack **stack);", "GetdfDIJoystick": "extern LPCDIDATAFORMAT WINAPI GetdfDIJoystick(void);", "DirectInput8Create": "HRESULT WINAPI DirectInput8Create(HINSTANCE,DWORD,REFIID,LPVOID *,LPUNKNOWN);", "DirectInputCreateA": "HRESULT WINAPI DirectInputCreateA(HINSTANCE,DWORD,LPDIRECTINPUTA *,LPUNKNOWN);", "DirectInputCreateW": "HRESULT WINAPI DirectInputCreateW(HINSTANCE,DWORD,LPDIRECTINPUTW *,LPUNKNOWN);", "DirectInputCreateEx": "HRESULT WINAPI DirectInputCreateEx(HINSTANCE,DWORD,REFIID,LPVOID *,LPUNKNOWN);", "D3DXCheckVersion": "WINBOOL WINAPI D3DXCheckVersion(UINT d3dsdkvers, UINT d3dxsdkvers);", "D3DXCreateFontA": "HRESULT WINAPI D3DXCreateFontA(struct IDirect3DDevice9 *device, INT height, UINT width, UINT weight,", "D3DXCreateFontW": "HRESULT WINAPI D3DXCreateFontW(struct IDirect3DDevice9 *device, INT height, UINT width, UINT weight,", "D3DXCreateFontIndirectA": "HRESULT WINAPI D3DXCreateFontIndirectA(struct IDirect3DDevice9 *device,", "D3DXCreateFontIndirectW": "HRESULT WINAPI D3DXCreateFontIndirectW(struct IDirect3DDevice9 *device,", "D3DXCreateLine": "HRESULT WINAPI D3DXCreateLine(struct IDirect3DDevice9 *device, struct ID3DXLine **line);", "D3DXCreateRenderToEnvMap": "HRESULT WINAPI D3DXCreateRenderToEnvMap(struct IDirect3DDevice9 *device, UINT size, UINT miplevels,", "D3DXCreateRenderToSurface": "HRESULT WINAPI D3DXCreateRenderToSurface(struct IDirect3DDevice9 *device, UINT width, UINT height,", "D3DXCreateSprite": "HRESULT WINAPI D3DXCreateSprite(struct IDirect3DDevice9 *device, struct ID3DXSprite **sprite);", "D3DXDebugMute": "WINBOOL WINAPI D3DXDebugMute(WINBOOL mute);", "D3DXGetDriverLevel": "UINT WINAPI D3DXGetDriverLevel(struct IDirect3DDevice9 *device);", "VerFindFileA": "DWORD WINAPI VerFindFileA(DWORD uFlags,LPSTR szFileName,LPSTR szWinDir,LPSTR szAppDir,LPSTR szCurDir,PUINT lpuCurDirLen,LPSTR szDestDir,PUINT lpuDestDirLen);", "VerFindFileW": "DWORD WINAPI VerFindFileW(DWORD uFlags,LPWSTR szFileName,LPWSTR szWinDir,LPWSTR szAppDir,LPWSTR szCurDir,PUINT lpuCurDirLen,LPWSTR szDestDir,PUINT lpuDestDirLen);", "VerInstallFileA": "DWORD WINAPI VerInstallFileA(DWORD uFlags,LPSTR szSrcFileName,LPSTR szDestFileName,LPSTR szSrcDir,LPSTR szDestDir,LPSTR szCurDir,LPSTR szTmpFile,PUINT lpuTmpFileLen);", "VerInstallFileW": "DWORD WINAPI VerInstallFileW(DWORD uFlags,LPWSTR szSrcFileName,LPWSTR szDestFileName,LPWSTR szSrcDir,LPWSTR szDestDir,LPWSTR szCurDir,LPWSTR szTmpFile,PUINT lpuTmpFileLen);", "GetFileVersionInfoSizeA": "DWORD WINAPI GetFileVersionInfoSizeA(LPCSTR lptstrFilename,LPDWORD lpdwHandle);", "GetFileVersionInfoSizeW": "DWORD WINAPI GetFileVersionInfoSizeW(LPCWSTR lptstrFilename,LPDWORD lpdwHandle);", "GetFileVersionInfoSizeExA": "DWORD WINAPI GetFileVersionInfoSizeExA(DWORD dwFlags, LPCSTR lpwstrFilename, LPDWORD lpdwHandle);", "GetFileVersionInfoSizeExW": "DWORD WINAPI GetFileVersionInfoSizeExW(DWORD dwFlags, LPCWSTR lpwstrFilename, LPDWORD lpdwHandle);", "GetFileVersionInfoA": "WINBOOL WINAPI GetFileVersionInfoA(LPCSTR lptstrFilename,DWORD dwHandle,DWORD dwLen,LPVOID lpData);", "GetFileVersionInfoW": "WINBOOL WINAPI GetFileVersionInfoW(LPCWSTR lptstrFilename,DWORD dwHandle,DWORD dwLen,LPVOID lpData);", "GetFileVersionInfoExA": "WINBOOL WINAPI GetFileVersionInfoExA(DWORD dwFlags, LPCSTR lpwstrFilename, DWORD dwHandle, DWORD dwLen, LPVOID lpData);", "GetFileVersionInfoExW": "WINBOOL WINAPI GetFileVersionInfoExW(DWORD dwFlags, LPCWSTR lpwstrFilename, DWORD dwHandle, DWORD dwLen, LPVOID lpData);", "VerLanguageNameA": "DWORD WINAPI VerLanguageNameA(DWORD wLang,LPSTR szLang,DWORD nSize);", "VerLanguageNameW": "DWORD WINAPI VerLanguageNameW(DWORD wLang,LPWSTR szLang,DWORD nSize);", "VerQueryValueA": "WINBOOL WINAPI VerQueryValueA(LPCVOID pBlock,LPCSTR lpSubBlock,LPVOID *lplpBuffer,PUINT puLen);", "VerQueryValueW": "WINBOOL WINAPI VerQueryValueW(LPCVOID pBlock,LPCWSTR lpSubBlock,LPVOID *lplpBuffer,PUINT puLen);", "IH323LineEx_SetExternalT120Address_Proxy": "HRESULT WINAPI IH323LineEx_SetExternalT120Address_Proxy(IH323LineEx *This,WINBOOL fEnable,DWORD dwIP,WORD wPort);", "IH323LineEx_SetDefaultCapabilityPreferrence_Proxy": "HRESULT WINAPI IH323LineEx_SetDefaultCapabilityPreferrence_Proxy(IH323LineEx *This,DWORD dwNumCaps,H245_CAPABILITY *pCapabilities,DWORD *pWeights);", "IH323LineEx_SetAlias_Proxy": "HRESULT WINAPI IH323LineEx_SetAlias_Proxy(IH323LineEx *This,WCHAR *strAlias,DWORD dwLength);", "IKeyFrameControl_UpdatePicture_Proxy": "HRESULT WINAPI IKeyFrameControl_UpdatePicture_Proxy(IKeyFrameControl *This);", "IKeyFrameControl_PeriodicUpdatePicture_Proxy": "HRESULT WINAPI IKeyFrameControl_PeriodicUpdatePicture_Proxy(IKeyFrameControl *This,WINBOOL fEnable,DWORD dwInterval);", "NetUserAdd": "NET_API_STATUS WINAPI NetUserAdd(LPCWSTR servername,DWORD level,LPBYTE buf,LPDWORD parm_err);", "NetUserEnum": "NET_API_STATUS WINAPI NetUserEnum(LPCWSTR servername,DWORD level,DWORD filter,LPBYTE *bufptr,DWORD prefmaxlen,LPDWORD entriesread,LPDWORD totalentries,LPDWORD resume_handle);", "NetUserGetInfo": "NET_API_STATUS WINAPI NetUserGetInfo(LPCWSTR servername,LPCWSTR username,DWORD level,LPBYTE *bufptr);", "NetUserSetInfo": "NET_API_STATUS WINAPI NetUserSetInfo(LPCWSTR servername,LPCWSTR username,DWORD level,LPBYTE buf,LPDWORD parm_err);", "NetUserDel": "NET_API_STATUS WINAPI NetUserDel(LPCWSTR servername,LPCWSTR username);", "NetUserGetGroups": "NET_API_STATUS WINAPI NetUserGetGroups(LPCWSTR servername,LPCWSTR username,DWORD level,LPBYTE *bufptr,DWORD prefmaxlen,LPDWORD entriesread,LPDWORD totalentries);", "NetUserSetGroups": "NET_API_STATUS WINAPI NetUserSetGroups(LPCWSTR servername,LPCWSTR username,DWORD level,LPBYTE buf,DWORD num_entries);", "NetUserGetLocalGroups": "NET_API_STATUS WINAPI NetUserGetLocalGroups(LPCWSTR servername,LPCWSTR username,DWORD level,DWORD flags,LPBYTE *bufptr,DWORD prefmaxlen,LPDWORD entriesread,LPDWORD totalentries);", "NetUserModalsGet": "NET_API_STATUS WINAPI NetUserModalsGet(LPCWSTR servername,DWORD level,LPBYTE *bufptr);", "NetUserModalsSet": "NET_API_STATUS WINAPI NetUserModalsSet(LPCWSTR servername,DWORD level,LPBYTE buf,LPDWORD parm_err);", "NetUserChangePassword": "NET_API_STATUS WINAPI NetUserChangePassword(LPCWSTR domainname,LPCWSTR username,LPCWSTR oldpassword,LPCWSTR newpassword);", "NetGroupAdd": "NET_API_STATUS WINAPI NetGroupAdd(LPCWSTR servername,DWORD level,LPBYTE buf,LPDWORD parm_err);", "NetGroupAddUser": "NET_API_STATUS WINAPI NetGroupAddUser(LPCWSTR servername,LPCWSTR GroupName,LPCWSTR username);", "NetGroupEnum": "NET_API_STATUS WINAPI NetGroupEnum(LPCWSTR servername,DWORD level,LPBYTE *bufptr,DWORD prefmaxlen,LPDWORD entriesread,LPDWORD totalentries,PDWORD_PTR resume_handle);", "NetGroupGetInfo": "NET_API_STATUS WINAPI NetGroupGetInfo(LPCWSTR servername,LPCWSTR groupname,DWORD level,LPBYTE *bufptr);", "NetGroupSetInfo": "NET_API_STATUS WINAPI NetGroupSetInfo(LPCWSTR servername,LPCWSTR groupname,DWORD level,LPBYTE buf,LPDWORD parm_err);", "NetGroupDel": "NET_API_STATUS WINAPI NetGroupDel(LPCWSTR servername,LPCWSTR groupname);", "NetGroupDelUser": "NET_API_STATUS WINAPI NetGroupDelUser(LPCWSTR servername,LPCWSTR GroupName,LPCWSTR Username);", "NetGroupGetUsers": "NET_API_STATUS WINAPI NetGroupGetUsers(LPCWSTR servername,LPCWSTR groupname,DWORD level,LPBYTE *bufptr,DWORD prefmaxlen,LPDWORD entriesread,LPDWORD totalentries,PDWORD_PTR ResumeHandle);", "NetGroupSetUsers": "NET_API_STATUS WINAPI NetGroupSetUsers(LPCWSTR servername,LPCWSTR groupname,DWORD level,LPBYTE buf,DWORD totalentries);", "NetLocalGroupAdd": "NET_API_STATUS WINAPI NetLocalGroupAdd(LPCWSTR servername,DWORD level,LPBYTE buf,LPDWORD parm_err);", "NetLocalGroupAddMember": "NET_API_STATUS WINAPI NetLocalGroupAddMember(LPCWSTR servername,LPCWSTR groupname,PSID membersid);", "NetLocalGroupEnum": "NET_API_STATUS WINAPI NetLocalGroupEnum(LPCWSTR servername,DWORD level,LPBYTE *bufptr,DWORD prefmaxlen,LPDWORD entriesread,LPDWORD totalentries,PDWORD_PTR resumehandle);", "NetLocalGroupGetInfo": "NET_API_STATUS WINAPI NetLocalGroupGetInfo(LPCWSTR servername,LPCWSTR groupname,DWORD level,LPBYTE *bufptr);", "NetLocalGroupSetInfo": "NET_API_STATUS WINAPI NetLocalGroupSetInfo(LPCWSTR servername,LPCWSTR groupname,DWORD level,LPBYTE buf,LPDWORD parm_err);", "NetLocalGroupDel": "NET_API_STATUS WINAPI NetLocalGroupDel(LPCWSTR servername,LPCWSTR groupname);", "NetLocalGroupDelMember": "NET_API_STATUS WINAPI NetLocalGroupDelMember(LPCWSTR servername,LPCWSTR groupname,PSID membersid);", "NetLocalGroupGetMembers": "NET_API_STATUS WINAPI NetLocalGroupGetMembers(LPCWSTR servername,LPCWSTR localgroupname,DWORD level,LPBYTE *bufptr,DWORD prefmaxlen,LPDWORD entriesread,LPDWORD totalentries,PDWORD_PTR resumehandle);", "NetLocalGroupSetMembers": "NET_API_STATUS WINAPI NetLocalGroupSetMembers(LPCWSTR servername,LPCWSTR groupname,DWORD level,LPBYTE buf,DWORD totalentries);", "NetLocalGroupAddMembers": "NET_API_STATUS WINAPI NetLocalGroupAddMembers(LPCWSTR servername,LPCWSTR groupname,DWORD level,LPBYTE buf,DWORD totalentries);", "NetLocalGroupDelMembers": "NET_API_STATUS WINAPI NetLocalGroupDelMembers(LPCWSTR servername,LPCWSTR groupname,DWORD level,LPBYTE buf,DWORD totalentries);", "NetQueryDisplayInformation": "NET_API_STATUS WINAPI NetQueryDisplayInformation(LPCWSTR ServerName,DWORD Level,DWORD Index,DWORD EntriesRequested,DWORD PreferredMaximumLength,LPDWORD ReturnedEntryCount,PVOID *SortedBuffer);", "NetGetDisplayInformationIndex": "NET_API_STATUS WINAPI NetGetDisplayInformationIndex(LPCWSTR ServerName,DWORD Level,LPCWSTR Prefix,LPDWORD Index);", "NetAccessAdd": "NET_API_STATUS WINAPI NetAccessAdd(LPCWSTR servername,DWORD level,LPBYTE buf,LPDWORD parm_err);", "NetAccessEnum": "NET_API_STATUS WINAPI NetAccessEnum(LPCWSTR servername,LPCWSTR BasePath,DWORD Recursive,DWORD level,LPBYTE *bufptr,DWORD prefmaxlen,LPDWORD entriesread,LPDWORD totalentries,LPDWORD resume_handle);", "NetAccessGetInfo": "NET_API_STATUS WINAPI NetAccessGetInfo(LPCWSTR servername,LPCWSTR resource,DWORD level,LPBYTE *bufptr);", "NetAccessSetInfo": "NET_API_STATUS WINAPI NetAccessSetInfo(LPCWSTR servername,LPCWSTR resource,DWORD level,LPBYTE buf,LPDWORD parm_err);", "NetAccessDel": "NET_API_STATUS WINAPI NetAccessDel(LPCWSTR servername,LPCWSTR resource);", "NetAccessGetUserPerms": "NET_API_STATUS WINAPI NetAccessGetUserPerms(LPCWSTR servername,LPCWSTR UGname,LPCWSTR resource,LPDWORD Perms);", "NetValidatePasswordPolicy": "NET_API_STATUS WINAPI NetValidatePasswordPolicy(LPCWSTR ServerName,LPVOID Qualifier,NET_VALIDATE_PASSWORD_TYPE ValidationType,LPVOID InputArg,LPVOID *OutputArg);", "NetValidatePasswordPolicyFree": "NET_API_STATUS WINAPI NetValidatePasswordPolicyFree(LPVOID *OutputArg);", "NetGetDCName": "NET_API_STATUS WINAPI NetGetDCName(LPCWSTR servername,LPCWSTR domainname,LPBYTE *bufptr);", "NetGetAnyDCName": "NET_API_STATUS WINAPI NetGetAnyDCName(LPCWSTR servername,LPCWSTR domainname,LPBYTE *bufptr);", "I_NetLogonControl": "NET_API_STATUS WINAPI I_NetLogonControl(LPCWSTR ServerName,DWORD FunctionCode,DWORD QueryLevel,LPBYTE *Buffer);", "I_NetLogonControl2": "NET_API_STATUS WINAPI I_NetLogonControl2(LPCWSTR ServerName,DWORD FunctionCode,DWORD QueryLevel,LPBYTE Data,LPBYTE *Buffer);", "NetEnumerateTrustedDomains": "NTSTATUS WINAPI NetEnumerateTrustedDomains (LPWSTR ServerName,LPWSTR *DomainNames);", "NetAddServiceAccount": "NTSTATUS WINAPI NetAddServiceAccount (LPWSTR ServerName,LPWSTR AccountName,LPWSTR Reserved,DWORD Flags);", "NetRemoveServiceAccount": "NTSTATUS WINAPI NetRemoveServiceAccount (LPWSTR ServerName,LPWSTR AccountName,DWORD Flags);", "NetIsServiceAccount": "NTSTATUS WINAPI NetIsServiceAccount (LPWSTR ServerName,LPWSTR AccountName,BOOL *IsService);", "NetEnumerateServiceAccounts": "NTSTATUS WINAPI NetEnumerateServiceAccounts (LPWSTR ServerName,DWORD Flags,DWORD *AccountsCount, PZPWSTR *Accounts);", "Direct3DCreate8": "IDirect3D8* WINAPI Direct3DCreate8(UINT SDKVersion);", "SCardEstablishContext": "extern WINSCARDAPI LONG WINAPI SCardEstablishContext(DWORD dwScope,LPCVOID pvReserved1,LPCVOID pvReserved2,LPSCARDCONTEXT phContext);", "SCardReleaseContext": "extern WINSCARDAPI LONG WINAPI SCardReleaseContext(SCARDCONTEXT hContext);", "SCardIsValidContext": "extern WINSCARDAPI LONG WINAPI SCardIsValidContext(SCARDCONTEXT hContext);", "SCardListReaderGroupsA": "extern WINSCARDAPI LONG WINAPI SCardListReaderGroupsA(SCARDCONTEXT hContext,LPSTR mszGroups,LPDWORD pcchGroups);", "SCardListReaderGroupsW": "extern WINSCARDAPI LONG WINAPI SCardListReaderGroupsW(SCARDCONTEXT hContext,LPWSTR mszGroups,LPDWORD pcchGroups);", "SCardListReadersA": "extern WINSCARDAPI LONG WINAPI SCardListReadersA(SCARDCONTEXT hContext,LPCSTR mszGroups,LPSTR mszReaders,LPDWORD pcchReaders);", "SCardListReadersW": "extern WINSCARDAPI LONG WINAPI SCardListReadersW(SCARDCONTEXT hContext,LPCWSTR mszGroups,LPWSTR mszReaders,LPDWORD pcchReaders);", "SCardListCardsA": "extern WINSCARDAPI LONG WINAPI SCardListCardsA(SCARDCONTEXT hContext,LPCBYTE pbAtr,LPCGUID rgquidInterfaces,DWORD cguidInterfaceCount,LPSTR mszCards,LPDWORD pcchCards);", "SCardListCardsW": "extern WINSCARDAPI LONG WINAPI SCardListCardsW(SCARDCONTEXT hContext,LPCBYTE pbAtr,LPCGUID rgquidInterfaces,DWORD cguidInterfaceCount,LPWSTR mszCards,LPDWORD pcchCards);", "SCardListInterfacesA": "extern WINSCARDAPI LONG WINAPI SCardListInterfacesA(SCARDCONTEXT hContext,LPCSTR szCard,LPGUID pguidInterfaces,LPDWORD pcguidInterfaces);", "SCardListInterfacesW": "extern WINSCARDAPI LONG WINAPI SCardListInterfacesW(SCARDCONTEXT hContext,LPCWSTR szCard,LPGUID pguidInterfaces,LPDWORD pcguidInterfaces);", "SCardGetProviderIdA": "extern WINSCARDAPI LONG WINAPI SCardGetProviderIdA(SCARDCONTEXT hContext,LPCSTR szCard,LPGUID pguidProviderId);", "SCardGetProviderIdW": "extern WINSCARDAPI LONG WINAPI SCardGetProviderIdW(SCARDCONTEXT hContext,LPCWSTR szCard,LPGUID pguidProviderId);", "SCardGetCardTypeProviderNameA": "extern WINSCARDAPI LONG WINAPI SCardGetCardTypeProviderNameA(SCARDCONTEXT hContext,LPCSTR szCardName,DWORD dwProviderId,LPSTR szProvider,LPDWORD pcchProvider);", "SCardGetCardTypeProviderNameW": "extern WINSCARDAPI LONG WINAPI SCardGetCardTypeProviderNameW(SCARDCONTEXT hContext,LPCWSTR szCardName,DWORD dwProviderId,LPWSTR szProvider,LPDWORD pcchProvider);", "SCardIntroduceReaderGroupA": "extern WINSCARDAPI LONG WINAPI SCardIntroduceReaderGroupA(SCARDCONTEXT hContext,LPCSTR szGroupName);", "SCardIntroduceReaderGroupW": "extern WINSCARDAPI LONG WINAPI SCardIntroduceReaderGroupW(SCARDCONTEXT hContext,LPCWSTR szGroupName);", "SCardForgetReaderGroupA": "extern WINSCARDAPI LONG WINAPI SCardForgetReaderGroupA(SCARDCONTEXT hContext,LPCSTR szGroupName);", "SCardForgetReaderGroupW": "extern WINSCARDAPI LONG WINAPI SCardForgetReaderGroupW(SCARDCONTEXT hContext,LPCWSTR szGroupName);", "SCardIntroduceReaderA": "extern WINSCARDAPI LONG WINAPI SCardIntroduceReaderA(SCARDCONTEXT hContext,LPCSTR szReaderName,LPCSTR szDeviceName);", "SCardIntroduceReaderW": "extern WINSCARDAPI LONG WINAPI SCardIntroduceReaderW(SCARDCONTEXT hContext,LPCWSTR szReaderName,LPCWSTR szDeviceName);", "SCardForgetReaderA": "extern WINSCARDAPI LONG WINAPI SCardForgetReaderA(SCARDCONTEXT hContext,LPCSTR szReaderName);", "SCardForgetReaderW": "extern WINSCARDAPI LONG WINAPI SCardForgetReaderW(SCARDCONTEXT hContext,LPCWSTR szReaderName);", "SCardAddReaderToGroupA": "extern WINSCARDAPI LONG WINAPI SCardAddReaderToGroupA(SCARDCONTEXT hContext,LPCSTR szReaderName,LPCSTR szGroupName);", "SCardAddReaderToGroupW": "extern WINSCARDAPI LONG WINAPI SCardAddReaderToGroupW(SCARDCONTEXT hContext,LPCWSTR szReaderName,LPCWSTR szGroupName);", "SCardRemoveReaderFromGroupA": "extern WINSCARDAPI LONG WINAPI SCardRemoveReaderFromGroupA(SCARDCONTEXT hContext,LPCSTR szReaderName,LPCSTR szGroupName);", "SCardRemoveReaderFromGroupW": "extern WINSCARDAPI LONG WINAPI SCardRemoveReaderFromGroupW(SCARDCONTEXT hContext,LPCWSTR szReaderName,LPCWSTR szGroupName);", "SCardIntroduceCardTypeA": "extern WINSCARDAPI LONG WINAPI SCardIntroduceCardTypeA(SCARDCONTEXT hContext,LPCSTR szCardName,LPCGUID pguidPrimaryProvider,LPCGUID rgguidInterfaces,DWORD dwInterfaceCount,LPCBYTE pbAtr,LPCBYTE pbAtrMask,DWORD cbAtrLen);", "SCardIntroduceCardTypeW": "extern WINSCARDAPI LONG WINAPI SCardIntroduceCardTypeW(SCARDCONTEXT hContext,LPCWSTR szCardName,LPCGUID pguidPrimaryProvider,LPCGUID rgguidInterfaces,DWORD dwInterfaceCount,LPCBYTE pbAtr,LPCBYTE pbAtrMask,DWORD cbAtrLen);", "SCardSetCardTypeProviderNameA": "extern WINSCARDAPI LONG WINAPI SCardSetCardTypeProviderNameA(SCARDCONTEXT hContext,LPCSTR szCardName,DWORD dwProviderId,LPCSTR szProvider);", "SCardSetCardTypeProviderNameW": "extern WINSCARDAPI LONG WINAPI SCardSetCardTypeProviderNameW(SCARDCONTEXT hContext,LPCWSTR szCardName,DWORD dwProviderId,LPCWSTR szProvider);", "SCardForgetCardTypeA": "extern WINSCARDAPI LONG WINAPI SCardForgetCardTypeA(SCARDCONTEXT hContext,LPCSTR szCardName);", "SCardForgetCardTypeW": "extern WINSCARDAPI LONG WINAPI SCardForgetCardTypeW(SCARDCONTEXT hContext,LPCWSTR szCardName);", "SCardFreeMemory": "extern WINSCARDAPI LONG WINAPI SCardFreeMemory(SCARDCONTEXT hContext,LPCVOID pvMem);", "SCardAccessStartedEvent": "extern WINSCARDAPI HANDLE WINAPI SCardAccessStartedEvent(void);", "SCardReleaseStartedEvent": "extern WINSCARDAPI void WINAPI SCardReleaseStartedEvent(void);", "SCardLocateCardsA": "extern WINSCARDAPI LONG WINAPI SCardLocateCardsA(SCARDCONTEXT hContext,LPCSTR mszCards,LPSCARD_READERSTATEA rgReaderStates,DWORD cReaders);", "SCardLocateCardsW": "extern WINSCARDAPI LONG WINAPI SCardLocateCardsW(SCARDCONTEXT hContext,LPCWSTR mszCards,LPSCARD_READERSTATEW rgReaderStates,DWORD cReaders);", "SCardLocateCardsByATRA": "extern WINSCARDAPI LONG WINAPI SCardLocateCardsByATRA(SCARDCONTEXT hContext,LPSCARD_ATRMASK rgAtrMasks,DWORD cAtrs,LPSCARD_READERSTATEA rgReaderStates,DWORD cReaders);", "SCardLocateCardsByATRW": "extern WINSCARDAPI LONG WINAPI SCardLocateCardsByATRW(SCARDCONTEXT hContext,LPSCARD_ATRMASK rgAtrMasks,DWORD cAtrs,LPSCARD_READERSTATEW rgReaderStates,DWORD cReaders);", "SCardGetStatusChangeA": "extern WINSCARDAPI LONG WINAPI SCardGetStatusChangeA(SCARDCONTEXT hContext,DWORD dwTimeout,LPSCARD_READERSTATEA rgReaderStates,DWORD cReaders);", "SCardGetStatusChangeW": "extern WINSCARDAPI LONG WINAPI SCardGetStatusChangeW(SCARDCONTEXT hContext,DWORD dwTimeout,LPSCARD_READERSTATEW rgReaderStates,DWORD cReaders);", "SCardCancel": "extern WINSCARDAPI LONG WINAPI SCardCancel(SCARDCONTEXT hContext);", "SCardConnectA": "extern WINSCARDAPI LONG WINAPI SCardConnectA(SCARDCONTEXT hContext,LPCSTR szReader,DWORD dwShareMode,DWORD dwPreferredProtocols,LPSCARDHANDLE phCard,LPDWORD pdwActiveProtocol);", "SCardConnectW": "extern WINSCARDAPI LONG WINAPI SCardConnectW(SCARDCONTEXT hContext,LPCWSTR szReader,DWORD dwShareMode,DWORD dwPreferredProtocols,LPSCARDHANDLE phCard,LPDWORD pdwActiveProtocol);", "SCardReconnect": "extern WINSCARDAPI LONG WINAPI SCardReconnect(SCARDHANDLE hCard,DWORD dwShareMode,DWORD dwPreferredProtocols,DWORD dwInitialization,LPDWORD pdwActiveProtocol);", "SCardDisconnect": "extern WINSCARDAPI LONG WINAPI SCardDisconnect(SCARDHANDLE hCard,DWORD dwDisposition);", "SCardBeginTransaction": "extern WINSCARDAPI LONG WINAPI SCardBeginTransaction(SCARDHANDLE hCard);", "SCardEndTransaction": "extern WINSCARDAPI LONG WINAPI SCardEndTransaction(SCARDHANDLE hCard,DWORD dwDisposition);", "SCardCancelTransaction": "extern WINSCARDAPI LONG WINAPI SCardCancelTransaction(SCARDHANDLE hCard);", "SCardState": "extern WINSCARDAPI LONG WINAPI SCardState(SCARDHANDLE hCard,LPDWORD pdwState,LPDWORD pdwProtocol,LPBYTE pbAtr,LPDWORD pcbAtrLen);", "SCardStatusA": "extern WINSCARDAPI LONG WINAPI SCardStatusA(SCARDHANDLE hCard,LPSTR szReaderName,LPDWORD pcchReaderLen,LPDWORD pdwState,LPDWORD pdwProtocol,LPBYTE pbAtr,LPDWORD pcbAtrLen);", "SCardStatusW": "extern WINSCARDAPI LONG WINAPI SCardStatusW(SCARDHANDLE hCard,LPWSTR szReaderName,LPDWORD pcchReaderLen,LPDWORD pdwState,LPDWORD pdwProtocol,LPBYTE pbAtr,LPDWORD pcbAtrLen);", "SCardTransmit": "extern WINSCARDAPI LONG WINAPI SCardTransmit(SCARDHANDLE hCard,LPCSCARD_IO_REQUEST pioSendPci,LPCBYTE pbSendBuffer,DWORD cbSendLength,LPSCARD_IO_REQUEST pioRecvPci,LPBYTE pbRecvBuffer,LPDWORD pcbRecvLength);", "SCardControl": "extern WINSCARDAPI LONG WINAPI SCardControl(SCARDHANDLE hCard,DWORD dwControlCode,LPCVOID lpInBuffer,DWORD nInBufferSize,LPVOID lpOutBuffer,DWORD nOutBufferSize,LPDWORD lpBytesReturned);", "SCardGetAttrib": "extern WINSCARDAPI LONG WINAPI SCardGetAttrib(SCARDHANDLE hCard,DWORD dwAttrId,LPBYTE pbAttr,LPDWORD pcbAttrLen);", "SCardSetAttrib": "extern WINSCARDAPI LONG WINAPI SCardSetAttrib(SCARDHANDLE hCard,DWORD dwAttrId,LPCBYTE pbAttr,DWORD cbAttrLen);", "SCardUIDlgSelectCardA": "extern WINSCARDAPI LONG WINAPI SCardUIDlgSelectCardA(LPOPENCARDNAMEA_EX);", "SCardUIDlgSelectCardW": "extern WINSCARDAPI LONG WINAPI SCardUIDlgSelectCardW(LPOPENCARDNAMEW_EX);", "GetOpenCardNameA": "extern WINSCARDAPI LONG WINAPI GetOpenCardNameA(LPOPENCARDNAMEA);", "GetOpenCardNameW": "extern WINSCARDAPI LONG WINAPI GetOpenCardNameW(LPOPENCARDNAMEW);", "SCardDlgExtendedError": "extern WINSCARDAPI LONG WINAPI SCardDlgExtendedError(void);", "SCardGetTransmitCount": "extern WINSCARDAPI LONG WINAPI SCardGetTransmitCount(SCARDHANDLE hCard,LPDWORD pcTransmitCount);", "SCardReadCacheA": "extern WINSCARDAPI LONG WINAPI SCardReadCacheA(SCARDCONTEXT hContext,UUID *CardIdentifier,DWORD FreshnessCounter,LPSTR LookupName,PBYTE Data,DWORD *DataLen);", "SCardReadCacheW": "extern WINSCARDAPI LONG WINAPI SCardReadCacheW(SCARDCONTEXT hContext,UUID *CardIdentifier,DWORD FreshnessCounter,LPWSTR LookupName,PBYTE Data,DWORD *DataLen);", "SCardWriteCacheA": "extern WINSCARDAPI LONG WINAPI SCardWriteCacheA(SCARDCONTEXT hContext,UUID *CardIdentifier,DWORD FreshnessCounter,LPSTR LookupName,PBYTE Data,DWORD DataLen);", "SCardWriteCacheW": "extern WINSCARDAPI LONG WINAPI SCardWriteCacheW(SCARDCONTEXT hContext,UUID *CardIdentifier,DWORD FreshnessCounter,LPWSTR LookupName,PBYTE Data,DWORD DataLen);", "MAPIFreeBuffer": "ULONG WINAPI MAPIFreeBuffer(LPVOID pv);", "EapPeerQueryCredentialInputFields": "DWORD WINAPI EapPeerQueryCredentialInputFields(", "EapPeerBeginSession": "DWORD WINAPI EapPeerBeginSession(", "EapPeerQueryUserBlobFromCredentialInputFields": "DWORD WINAPI EapPeerQueryUserBlobFromCredentialInputFields(", "EapPeerGetIdentity": "DWORD WINAPI EapPeerGetIdentity(", "EapPeerInitialize": "DWORD WINAPI EapPeerInitialize(", "EapPeerGetInfo": "DWORD WINAPI EapPeerGetInfo(", "EapPeerSetCredentials": "DWORD WINAPI EapPeerSetCredentials(", "EapPeerInvokeIdentityUI": "DWORD WINAPI EapPeerInvokeIdentityUI(", "EapPeerProcessRequestPacket": "DWORD WINAPI EapPeerProcessRequestPacket(", "EapPeerGetResponsePacket": "DWORD WINAPI EapPeerGetResponsePacket(", "EapPeerGetResult": "DWORD WINAPI EapPeerGetResult(", "EapPeerGetUIContext": "DWORD WINAPI EapPeerGetUIContext(", "EapPeerSetUIContext": "DWORD WINAPI EapPeerSetUIContext(", "EapPeerGetResponseAttributes": "DWORD WINAPI EapPeerGetResponseAttributes(", "EapPeerSetResponseAttributes": "DWORD WINAPI EapPeerSetResponseAttributes(", "EapPeerEndSession": "DWORD WINAPI EapPeerEndSession(", "EapPeerShutdown": "DWORD WINAPI EapPeerShutdown(", "EapPeerInvokeConfigUI": "DWORD WINAPI EapPeerInvokeConfigUI(", "EapPeerInvokeInteractiveUI": "DWORD WINAPI EapPeerInvokeInteractiveUI(", "EapPeerQueryInteractiveUIInputFields": "DWORD WINAPI EapPeerQueryInteractiveUIInputFields(", "EapPeerQueryUIBlobFromInteractiveUIInputFields": "DWORD WINAPI EapPeerQueryUIBlobFromInteractiveUIInputFields(", "EapPeerConfigBlob2Xml": "DWORD WINAPI EapPeerConfigBlob2Xml(", "EapPeerConfigXml2Blob": "DWORD WINAPI EapPeerConfigXml2Blob(", "EapPeerCredentialsXml2Blob": "DWORD WINAPI EapPeerCredentialsXml2Blob(", "EapPeerFreeMemory": "VOID WINAPI EapPeerFreeMemory(", "RtlGenRandom": "BOOLEAN WINAPI RtlGenRandom(PVOID RandomBuffer,ULONG RandomBufferLength);", "RtlEncryptMemory": "NTSTATUS WINAPI RtlEncryptMemory(PVOID Memory,ULONG MemorySize,ULONG OptionFlags);", "RtlDecryptMemory": "NTSTATUS WINAPI RtlDecryptMemory(PVOID Memory,ULONG MemorySize,ULONG OptionFlags);", "AuditComputeEffectivePolicyBySid": "BOOLEAN WINAPI AuditComputeEffectivePolicyBySid(", "AuditFree": "VOID WINAPI AuditFree(", "AuditSetSystemPolicy": "BOOLEAN WINAPI AuditSetSystemPolicy(", "AuditQuerySystemPolicy": "BOOLEAN WINAPI AuditQuerySystemPolicy(", "AuditSetPerUserPolicy": "BOOLEAN WINAPI AuditSetPerUserPolicy(", "AuditQueryPerUserPolicy": "BOOLEAN WINAPI AuditQueryPerUserPolicy(", "AuditComputeEffectivePolicyByToken": "BOOLEAN WINAPI AuditComputeEffectivePolicyByToken(", "AuditEnumerateCategories": "BOOLEAN WINAPI AuditEnumerateCategories(", "AuditEnumeratePerUserPolicy": "BOOLEAN WINAPI AuditEnumeratePerUserPolicy(", "AuditEnumerateSubCategories": "BOOLEAN WINAPI AuditEnumerateSubCategories(", "AuditLookupCategoryGuidFromCategoryId": "BOOLEAN WINAPI AuditLookupCategoryGuidFromCategoryId(", "AuditQuerySecurity": "BOOLEAN WINAPI AuditQuerySecurity(", "AuditLookupSubCategoryNameA": "BOOLEAN WINAPI AuditLookupSubCategoryNameA(", "AuditLookupSubCategoryNameW": "BOOLEAN WINAPI AuditLookupSubCategoryNameW(", "AuditLookupCategoryNameA": "BOOLEAN WINAPI AuditLookupCategoryNameA(", "AuditLookupCategoryNameW": "BOOLEAN WINAPI AuditLookupCategoryNameW(", "AuditLookupCategoryIdFromCategoryGuid": "BOOLEAN WINAPI AuditLookupCategoryIdFromCategoryGuid(", "AuditSetSecurity": "BOOLEAN WINAPI AuditSetSecurity(", "DsGetDcNameA": "DSGETDCAPI DWORD WINAPI DsGetDcNameA(LPCSTR ComputerName,LPCSTR DomainName,GUID *DomainGuid,LPCSTR SiteName,ULONG Flags,PDOMAIN_CONTROLLER_INFOA *DomainControllerInfo);", "DsGetDcNameW": "DSGETDCAPI DWORD WINAPI DsGetDcNameW(LPCWSTR ComputerName,LPCWSTR DomainName,GUID *DomainGuid,LPCWSTR SiteName,ULONG Flags,PDOMAIN_CONTROLLER_INFOW *DomainControllerInfo);", "DsGetSiteNameA": "DSGETDCAPI DWORD WINAPI DsGetSiteNameA(LPCSTR ComputerName,LPSTR *SiteName);", "DsGetSiteNameW": "DSGETDCAPI DWORD WINAPI DsGetSiteNameW(LPCWSTR ComputerName,LPWSTR *SiteName);", "DsValidateSubnetNameW": "DSGETDCAPI DWORD WINAPI DsValidateSubnetNameW(LPCWSTR SubnetName);", "DsValidateSubnetNameA": "DSGETDCAPI DWORD WINAPI DsValidateSubnetNameA(LPCSTR SubnetName);", "DsAddressToSiteNamesW": "DSGETDCAPI DWORD WINAPI DsAddressToSiteNamesW(LPCWSTR ComputerName,DWORD EntryCount,PSOCKET_ADDRESS SocketAddresses,LPWSTR **SiteNames);", "DsAddressToSiteNamesA": "DSGETDCAPI DWORD WINAPI DsAddressToSiteNamesA(LPCSTR ComputerName,DWORD EntryCount,PSOCKET_ADDRESS SocketAddresses,LPSTR **SiteNames);", "DsAddressToSiteNamesExW": "DSGETDCAPI DWORD WINAPI DsAddressToSiteNamesExW(LPCWSTR ComputerName,DWORD EntryCount,PSOCKET_ADDRESS SocketAddresses,LPWSTR **SiteNames,LPWSTR **SubnetNames);", "DsAddressToSiteNamesExA": "DSGETDCAPI DWORD WINAPI DsAddressToSiteNamesExA(LPCSTR ComputerName,DWORD EntryCount,PSOCKET_ADDRESS SocketAddresses,LPSTR **SiteNames,LPSTR **SubnetNames);", "DsEnumerateDomainTrustsW": "DSGETDCAPI DWORD WINAPI DsEnumerateDomainTrustsW (LPWSTR ServerName,ULONG Flags,PDS_DOMAIN_TRUSTSW *Domains,PULONG DomainCount);", "DsEnumerateDomainTrustsA": "DSGETDCAPI DWORD WINAPI DsEnumerateDomainTrustsA (LPSTR ServerName,ULONG Flags,PDS_DOMAIN_TRUSTSA *Domains,PULONG DomainCount);", "DsGetForestTrustInformationW": "DSGETDCAPI DWORD WINAPI DsGetForestTrustInformationW (LPCWSTR ServerName,LPCWSTR TrustedDomainName,DWORD Flags,PLSA_FOREST_TRUST_INFORMATION *ForestTrustInfo);", "DsMergeForestTrustInformationW": "DSGETDCAPI DWORD WINAPI DsMergeForestTrustInformationW(LPCWSTR DomainName,PLSA_FOREST_TRUST_INFORMATION NewForestTrustInfo,PLSA_FOREST_TRUST_INFORMATION OldForestTrustInfo,PLSA_FOREST_TRUST_INFORMATION *MergedForestTrustInfo);", "DsGetDcSiteCoverageW": "DSGETDCAPI DWORD WINAPI DsGetDcSiteCoverageW(LPCWSTR ServerName,PULONG EntryCount,LPWSTR **SiteNames);", "DsGetDcSiteCoverageA": "DSGETDCAPI DWORD WINAPI DsGetDcSiteCoverageA(LPCSTR ServerName,PULONG EntryCount,LPSTR **SiteNames);", "DsDeregisterDnsHostRecordsW": "DSGETDCAPI DWORD WINAPI DsDeregisterDnsHostRecordsW (LPWSTR ServerName,LPWSTR DnsDomainName,GUID *DomainGuid,GUID *DsaGuid,LPWSTR DnsHostName);", "DsDeregisterDnsHostRecordsA": "DSGETDCAPI DWORD WINAPI DsDeregisterDnsHostRecordsA (LPSTR ServerName,LPSTR DnsDomainName,GUID *DomainGuid,GUID *DsaGuid,LPSTR DnsHostName);", "DsGetDcOpenW": "DSGETDCAPI DWORD WINAPI DsGetDcOpenW(LPCWSTR DnsName,ULONG OptionFlags,LPCWSTR SiteName,GUID *DomainGuid,LPCWSTR DnsForestName,ULONG DcFlags,PHANDLE RetGetDcContext);", "DsGetDcOpenA": "DSGETDCAPI DWORD WINAPI DsGetDcOpenA(LPCSTR DnsName,ULONG OptionFlags,LPCSTR SiteName,GUID *DomainGuid,LPCSTR DnsForestName,ULONG DcFlags,PHANDLE RetGetDcContext);", "DsGetDcNextW": "DSGETDCAPI DWORD WINAPI DsGetDcNextW(HANDLE GetDcContextHandle,PULONG SockAddressCount,LPSOCKET_ADDRESS *SockAddresses,LPWSTR *DnsHostName);", "DsGetDcNextA": "DSGETDCAPI DWORD WINAPI DsGetDcNextA(HANDLE GetDcContextHandle,PULONG SockAddressCount,LPSOCKET_ADDRESS *SockAddresses,LPSTR *DnsHostName);", "DsGetDcCloseW": "DSGETDCAPI VOID WINAPI DsGetDcCloseW(HANDLE GetDcContextHandle);", "MFRequireProtectedEnvironment": "HRESULT WINAPI MFRequireProtectedEnvironment(IMFPresentationDescriptor *pPresentationDescriptor);", "MFSerializePresentationDescriptor": "HRESULT WINAPI MFSerializePresentationDescriptor(IMFPresentationDescriptor *pPD,DWORD *pcbData,BYTE **ppbData);", "MFCreate3GPMediaSink": "HRESULT WINAPI MFCreate3GPMediaSink(IMFByteStream *pIByteStream,IMFMediaType *pVideoMediaType,IMFMediaType *pAudioMediaType,IMFMediaSink **ppIMediaSink);", "MFCreateAggregateSource": "HRESULT WINAPI MFCreateAggregateSource(IMFCollection *pSourceCollection,IMFMediaSource **ppAggSource);", "MFCreateAlignedMemoryBuffer": "HRESULT WINAPI MFCreateAlignedMemoryBuffer(DWORD cbMaxLength,DWORD fAlignmentFlags,IMFMediaBuffer **ppBuffer);", "MFCreateASFContentInfo": "HRESULT WINAPI MFCreateASFContentInfo(IMFASFContentInfo **ppIContentInfo);", "MFCreateASFIndexer": "HRESULT WINAPI MFCreateASFIndexer(IMFASFIndexer **ppIIndexer);", "MFCreateASFIndexerByteStream": "HRESULT WINAPI MFCreateASFIndexerByteStream(IMFByteStream *pIContentByteStream,QWORD cbIndexStartOffset,IMFByteStream **pIIndexByteStream);", "MFCreateASFMediaSink": "HRESULT WINAPI MFCreateASFMediaSink(IMFByteStream *pIByteStream,IMFMediaSink **ppIMediaSink);", "MFCreateASFMediaSinkActivate": "HRESULT WINAPI MFCreateASFMediaSinkActivate(LPCWSTR pwszFileName,IMFASFContentInfo *pContentInfo,IMFActivate **ppIActivate);", "MFCreateASFMultiplexer": "HRESULT WINAPI MFCreateASFMultiplexer(IMFASFMultiplexer **ppIMultiplexer);", "MFCreateASFProfile": "HRESULT WINAPI MFCreateASFProfile(IMFASFProfile **ppIProfile);", "MFCreateASFProfileFromPresentationDescriptor": "HRESULT WINAPI MFCreateASFProfileFromPresentationDescriptor(IMFPresentationDescriptor *pIPD,IMFASFProfile **ppIProfile);", "MFCreateASFSplitter": "HRESULT WINAPI MFCreateASFSplitter(IMFASFSplitter **ppISplitter);", "MFCreateAudioRenderer": "HRESULT WINAPI MFCreateAudioRenderer(IMFAttributes *pAudioAttributes, IMFMediaSink **ppSink);", "MFCreateAudioRendererActivate": "HRESULT WINAPI MFCreateAudioRendererActivate(IMFActivate **ppActivate);", "MFCreateDeviceSource": "HRESULT WINAPI MFCreateDeviceSource(IMFAttributes *pAttributes,IMFMediaSource **ppSource);", "MFCreateMediaSession": "HRESULT WINAPI MFCreateMediaSession(IMFAttributes *pConfiguration,IMFMediaSession **ppMS);", "MFCreateMP3MediaSink": "HRESULT WINAPI MFCreateMP3MediaSink(IMFByteStream *pTargetByteStream,IMFMediaSink **ppMediaSink);", "MFCreateMPEG4MediaSink": "HRESULT WINAPI MFCreateMPEG4MediaSink(IMFByteStream *pIByteStream,IMFMediaType *pVideoMediaType,IMFMediaType *pAudioMediaType,IMFMediaSink **ppIMediaSink);", "MFCreateNetSchemePlugin": "HRESULT WINAPI MFCreateNetSchemePlugin(REFIID riid,LPVOID *ppvHandler);", "MFCreatePMPServer": "HRESULT WINAPI MFCreatePMPServer(DWORD dwCreationFlags,IMFPMPServer **ppPMPServer);", "MFCreatePMPMediaSession": "HRESULT WINAPI MFCreatePMPMediaSession(DWORD dwCreationFlags,IMFAttributes *pConfiguration,IMFMediaSession **ppMediaSession,IMFActivate **ppEnablerActivate);", "MFCreatePathFromURL": "HRESULT WINAPI MFCreatePathFromURL(LPCWSTR pwszFileURL,LPWSTR *ppwszFilePath);", "MFCreatePresentationClock": "HRESULT WINAPI MFCreatePresentationClock(IMFPresentationClock **ppPresentationClock);", "MFCreatePresentationDescriptor": "HRESULT WINAPI MFCreatePresentationDescriptor(DWORD cStreamDescriptors,IMFStreamDescriptor **apStreamDescriptors,IMFPresentationDescriptor **ppPresentationDescriptor);", "MFCreatePresentationDescriptorFromASFProfile": "HRESULT WINAPI MFCreatePresentationDescriptorFromASFProfile(IMFASFProfile *pIProfile,IMFPresentationDescriptor **ppIPD);", "MFCreateProxyLocator": "HRESULT WINAPI MFCreateProxyLocator(LPCWSTR pszProtocol,IPropertyStore *pProxyConfig,IMFNetProxyLocator **ppProxyLocator);", "MFCreateRemoteDesktopPlugin": "HRESULT WINAPI MFCreateRemoteDesktopPlugin(IMFRemoteDesktopPlugin **ppPlugin);", "MFCreateSample": "HRESULT WINAPI MFCreateSample(IMFSample **ppIMFSample);", "MFCreateSampleCopierMFT": "HRESULT WINAPI MFCreateSampleCopierMFT(IMFTransform **ppCopierMFT);", "MFCreateSampleGrabberSinkActivate": "HRESULT WINAPI MFCreateSampleGrabberSinkActivate(IMFMediaType *pIMFMediaType,IMFSampleGrabberSinkCallback *pIMFSampleGrabberSinkCallback,IMFActivate **ppIActivate);", "MFCreateSequencerSource": "HRESULT WINAPI MFCreateSequencerSource(IUnknown *pReserved,IMFSequencerSource **ppSequencerSource);", "MFCreateSimpleTypeHandler": "HRESULT WINAPI MFCreateSimpleTypeHandler(IMFMediaTypeHandler **ppHandler);", "MFCreateStandardQualityManager": "HRESULT WINAPI MFCreateStandardQualityManager(IMFQualityManager **ppQualityManager);", "MFCreateStreamDescriptor": "HRESULT WINAPI MFCreateStreamDescriptor(DWORD dwStreamIdentifier,DWORD cMediaTypes,IMFMediaType **apMediaTypes,IMFStreamDescriptor **ppDescriptor);", "MFCreateSourceResolver": "HRESULT WINAPI MFCreateSourceResolver(IMFSourceResolver **ppISourceResolver);", "MFCreateSystemTimeSource": "HRESULT WINAPI MFCreateSystemTimeSource(IMFPresentationTimeSource **ppSystemTimeSource);", "MFCreateTopoLoader": "HRESULT WINAPI MFCreateTopoLoader(IMFTopoLoader **ppObj);", "MFCreateTopology": "HRESULT WINAPI MFCreateTopology(IMFTopology **ppTopo);", "MFCreateTopologyNode": "HRESULT WINAPI MFCreateTopologyNode(MF_TOPOLOGY_TYPE NodeType,IMFTopologyNode **ppNode);", "MFCreateVideoRenderer": "HRESULT WINAPI MFCreateVideoRenderer( REFIID riidRenderer, void **ppVideoRenderer );", "MFCreateVideoRendererActivate": "HRESULT WINAPI MFCreateVideoRendererActivate(HWND hwndVideo,IMFActivate **ppActivate);", "MFGetService": "HRESULT WINAPI MFGetService(IUnknown *punkObject,REFGUID guidService,REFIID riid,LPVOID *ppvObject);", "MFGetSupportedMimeTypes": "HRESULT WINAPI MFGetSupportedMimeTypes(PROPVARIANT *pPropVarMimeTypeArray);", "MFGetSupportedSchemes": "HRESULT WINAPI MFGetSupportedSchemes(PROPVARIANT *pPropVarSchemeArray);", "MFGetSystemTime": "MFTIME WINAPI MFGetSystemTime(void);", "MFShutdownObject": "HRESULT WINAPI MFShutdownObject(IUnknown *pUnk);", "CreateNamedPropertyStore": "HRESULT WINAPI CreateNamedPropertyStore(INamedPropertyStore **ppStore);", "CreatePropertyStore": "HRESULT WINAPI CreatePropertyStore(IPropertyStore **ppStore);", "MFCreateTranscodeProfile": "HRESULT WINAPI MFCreateTranscodeProfile(IMFTranscodeProfile **ppTranscodeProfile);", "MFCreateTranscodeSinkActivate": "HRESULT WINAPI MFCreateTranscodeSinkActivate(IMFActivate **ppActivate);", "MFCreateTranscodeTopology": "HRESULT WINAPI MFCreateTranscodeTopology(IMFMediaSource *pSrc,LPCWSTR pwszOutputFilePath,IMFTranscodeProfile *pProfile,IMFTopology **ppTranscodeTopo);", "MFEnumDeviceSources": "HRESULT WINAPI MFEnumDeviceSources(IMFAttributes *pAttributes,IMFActivate ***pppSourceActivate,UINT32 *pcSourceActivate);", "MFGetTopoNodeCurrentType": "HRESULT WINAPI MFGetTopoNodeCurrentType(IMFTopologyNode *pNode,DWORD dwStreamIndex,WINBOOL fOutput,IMFMediaType **ppType);", "MFTranscodeGetAudioOutputAvailableTypes": "HRESULT WINAPI MFTranscodeGetAudioOutputAvailableTypes(REFGUID guidSubType,DWORD dwMFTFlags,IMFAttributes *pCodecConfig,IMFCollection **ppAvailableTypes);", "VDMProcessException": "WINBOOL WINAPI VDMProcessException(LPDEBUG_EVENT lpDebugEvent);", "VDMGetThreadSelectorEntry": "WINBOOL WINAPI VDMGetThreadSelectorEntry(HANDLE hProcess,HANDLE hThread,WORD wSelector,LPVDMLDT_ENTRY lpSelectorEntry);", "VDMGetPointer": "ULONG WINAPI VDMGetPointer(HANDLE hProcess,HANDLE hThread,WORD wSelector,DWORD dwOffset,WINBOOL fProtMode);", "VDMGetContext": "WINBOOL WINAPI VDMGetContext(HANDLE hProcess,HANDLE hThread,LPVDMCONTEXT lpVDMContext);", "VDMSetContext": "WINBOOL WINAPI VDMSetContext(HANDLE hProcess,HANDLE hThread,LPVDMCONTEXT lpVDMContext);", "VDMGetSelectorModule": "WINBOOL WINAPI VDMGetSelectorModule(HANDLE hProcess,HANDLE hThread,WORD wSelector,PUINT lpSegmentNumber,LPSTR lpModuleName,UINT nNameSize,LPSTR lpModulePath,UINT nPathSize);", "VDMGetModuleSelector": "WINBOOL WINAPI VDMGetModuleSelector(HANDLE hProcess,HANDLE hThread,UINT wSegmentNumber,LPSTR lpModuleName,LPWORD lpSelector);", "VDMModuleFirst": "WINBOOL WINAPI VDMModuleFirst(HANDLE hProcess,HANDLE hThread,LPMODULEENTRY lpModuleEntry,DEBUGEVENTPROC lpEventProc,LPVOID lpData);", "VDMModuleNext": "WINBOOL WINAPI VDMModuleNext(HANDLE hProcess,HANDLE hThread,LPMODULEENTRY lpModuleEntry,DEBUGEVENTPROC lpEventProc,LPVOID lpData);", "VDMGlobalFirst": "WINBOOL WINAPI VDMGlobalFirst(HANDLE hProcess,HANDLE hThread,LPGLOBALENTRY lpGlobalEntry,WORD wFlags,DEBUGEVENTPROC lpEventProc,LPVOID lpData);", "VDMGlobalNext": "WINBOOL WINAPI VDMGlobalNext(HANDLE hProcess,HANDLE hThread,LPGLOBALENTRY lpGlobalEntry,WORD wFlags,DEBUGEVENTPROC lpEventProc,LPVOID lpData);", "VDMEnumProcessWOW": "INT WINAPI VDMEnumProcessWOW(PROCESSENUMPROC fp,LPARAM lparam);", "VDMEnumTaskWOW": "INT WINAPI VDMEnumTaskWOW(DWORD dwProcessId,TASKENUMPROC fp,LPARAM lparam);", "VDMEnumTaskWOWEx": "INT WINAPI VDMEnumTaskWOWEx(DWORD dwProcessId,TASKENUMPROCEX fp,LPARAM lparam);", "VDMTerminateTaskWOW": "WINBOOL WINAPI VDMTerminateTaskWOW(DWORD dwProcessId,WORD htask);", "VDMStartTaskInWOW": "WINBOOL WINAPI VDMStartTaskInWOW(DWORD dwProcessId,LPSTR lpCommandLine,WORD wShow);", "VDMKillWOW": "WINBOOL WINAPI VDMKillWOW(VOID);", "VDMDetectWOW": "WINBOOL WINAPI VDMDetectWOW(VOID);", "VDMBreakThread": "WINBOOL WINAPI VDMBreakThread(HANDLE hProcess,HANDLE hThread);", "VDMGetDbgFlags": "DWORD WINAPI VDMGetDbgFlags(HANDLE hProcess);", "VDMSetDbgFlags": "WINBOOL WINAPI VDMSetDbgFlags(HANDLE hProcess,DWORD dwFlags);", "VDMIsModuleLoaded": "WINBOOL WINAPI VDMIsModuleLoaded(LPSTR szPath);", "VDMGetSegmentInfo": "WINBOOL WINAPI VDMGetSegmentInfo(WORD Selector,ULONG Offset,WINBOOL bProtectMode,VDM_SEGINFO *pSegInfo);", "VDMGetSymbol": "WINBOOL WINAPI VDMGetSymbol(LPSTR szModule,WORD SegNumber,DWORD Offset,WINBOOL bProtectMode,WINBOOL bNextSymbol,LPSTR szSymbolName,PDWORD pDisplacement);", "VDMGetAddrExpression": "WINBOOL WINAPI VDMGetAddrExpression(LPSTR szModule,LPSTR szSymbol,PWORD Selector,PDWORD Offset,PWORD Type);", "D2D1CreateFactory": "HRESULT WINAPI D2D1CreateFactory(", "D2D1InvertMatrix": "WINBOOL WINAPI D2D1InvertMatrix(", "D2D1IsMatrixInvertible": "WINBOOL WINAPI D2D1IsMatrixInvertible(", "D2D1MakeRotateMatrix": "void WINAPI D2D1MakeRotateMatrix(", "D2D1MakeSkewMatrix": "void WINAPI D2D1MakeSkewMatrix(", "CloseHandle": "WINBASEAPI WINBOOL WINAPI CloseHandle (HANDLE hObject);", "DuplicateHandle": "WINBASEAPI WINBOOL WINAPI DuplicateHandle (HANDLE hSourceProcessHandle, HANDLE hSourceHandle, HANDLE hTargetProcessHandle, LPHANDLE lpTargetHandle, DWORD dwDesiredAccess, WINBOOL bInheritHandle, DWORD dwOptions);", "CompareObjectHandles": "WINBASEAPI WINBOOL WINAPI CompareObjectHandles (HANDLE hFirstObjectHandle, HANDLE hSecondObjectHandle);", "GetHandleInformation": "WINBASEAPI WINBOOL WINAPI GetHandleInformation (HANDLE hObject, LPDWORD lpdwFlags);", "SetHandleInformation": "WINBASEAPI WINBOOL WINAPI SetHandleInformation (HANDLE hObject, DWORD dwMask, DWORD dwFlags);", "IHlink_SetHlinkSite_Proxy": "HRESULT WINAPI IHlink_SetHlinkSite_Proxy(IHlink *This,IHlinkSite *pihlSite,DWORD dwSiteData);", "IHlink_GetHlinkSite_Proxy": "HRESULT WINAPI IHlink_GetHlinkSite_Proxy(IHlink *This,IHlinkSite **ppihlSite,DWORD *pdwSiteData);", "IHlink_SetMonikerReference_Proxy": "HRESULT WINAPI IHlink_SetMonikerReference_Proxy(IHlink *This,DWORD grfHLSETF,IMoniker *pimkTarget,LPCWSTR pwzLocation);", "IHlink_GetMonikerReference_Proxy": "HRESULT WINAPI IHlink_GetMonikerReference_Proxy(IHlink *This,DWORD dwWhichRef,IMoniker **ppimkTarget,LPWSTR *ppwzLocation);", "IHlink_SetStringReference_Proxy": "HRESULT WINAPI IHlink_SetStringReference_Proxy(IHlink *This,DWORD grfHLSETF,LPCWSTR pwzTarget,LPCWSTR pwzLocation);", "IHlink_GetStringReference_Proxy": "HRESULT WINAPI IHlink_GetStringReference_Proxy(IHlink *This,DWORD dwWhichRef,LPWSTR *ppwzTarget,LPWSTR *ppwzLocation);", "IHlink_SetFriendlyName_Proxy": "HRESULT WINAPI IHlink_SetFriendlyName_Proxy(IHlink *This,LPCWSTR pwzFriendlyName);", "IHlink_GetFriendlyName_Proxy": "HRESULT WINAPI IHlink_GetFriendlyName_Proxy(IHlink *This,DWORD grfHLFNAMEF,LPWSTR *ppwzFriendlyName);", "IHlink_SetTargetFrameName_Proxy": "HRESULT WINAPI IHlink_SetTargetFrameName_Proxy(IHlink *This,LPCWSTR pwzTargetFrameName);", "IHlink_GetTargetFrameName_Proxy": "HRESULT WINAPI IHlink_GetTargetFrameName_Proxy(IHlink *This,LPWSTR *ppwzTargetFrameName);", "IHlink_GetMiscStatus_Proxy": "HRESULT WINAPI IHlink_GetMiscStatus_Proxy(IHlink *This,DWORD *pdwStatus);", "IHlink_Navigate_Proxy": "HRESULT WINAPI IHlink_Navigate_Proxy(IHlink *This,DWORD grfHLNF,LPBC pibc,IBindStatusCallback *pibsc,IHlinkBrowseContext *pihlbc);", "IHlink_SetAdditionalParams_Proxy": "HRESULT WINAPI IHlink_SetAdditionalParams_Proxy(IHlink *This,LPCWSTR pwzAdditionalParams);", "IHlink_GetAdditionalParams_Proxy": "HRESULT WINAPI IHlink_GetAdditionalParams_Proxy(IHlink *This,LPWSTR *ppwzAdditionalParams);", "IHlinkSite_QueryService_Proxy": "HRESULT WINAPI IHlinkSite_QueryService_Proxy(IHlinkSite *This,DWORD dwSiteData,REFGUID guidService,REFIID riid,IUnknown **ppiunk);", "IHlinkSite_GetMoniker_Proxy": "HRESULT WINAPI IHlinkSite_GetMoniker_Proxy(IHlinkSite *This,DWORD dwSiteData,DWORD dwAssign,DWORD dwWhich,IMoniker **ppimk);", "IHlinkSite_ReadyToNavigate_Proxy": "HRESULT WINAPI IHlinkSite_ReadyToNavigate_Proxy(IHlinkSite *This,DWORD dwSiteData,DWORD dwReserved);", "IHlinkSite_OnNavigationComplete_Proxy": "HRESULT WINAPI IHlinkSite_OnNavigationComplete_Proxy(IHlinkSite *This,DWORD dwSiteData,DWORD dwreserved,HRESULT hrError,LPCWSTR pwzError);", "IHlinkTarget_SetBrowseContext_Proxy": "HRESULT WINAPI IHlinkTarget_SetBrowseContext_Proxy(IHlinkTarget *This,IHlinkBrowseContext *pihlbc);", "IHlinkTarget_GetBrowseContext_Proxy": "HRESULT WINAPI IHlinkTarget_GetBrowseContext_Proxy(IHlinkTarget *This,IHlinkBrowseContext **ppihlbc);", "IHlinkTarget_Navigate_Proxy": "HRESULT WINAPI IHlinkTarget_Navigate_Proxy(IHlinkTarget *This,DWORD grfHLNF,LPCWSTR pwzJumpLocation);", "IHlinkTarget_GetMoniker_Proxy": "HRESULT WINAPI IHlinkTarget_GetMoniker_Proxy(IHlinkTarget *This,LPCWSTR pwzLocation,DWORD dwAssign,IMoniker **ppimkLocation);", "IHlinkTarget_GetFriendlyName_Proxy": "HRESULT WINAPI IHlinkTarget_GetFriendlyName_Proxy(IHlinkTarget *This,LPCWSTR pwzLocation,LPWSTR *ppwzFriendlyName);", "IHlinkFrame_SetBrowseContext_Proxy": "HRESULT WINAPI IHlinkFrame_SetBrowseContext_Proxy(IHlinkFrame *This,IHlinkBrowseContext *pihlbc);", "IHlinkFrame_GetBrowseContext_Proxy": "HRESULT WINAPI IHlinkFrame_GetBrowseContext_Proxy(IHlinkFrame *This,IHlinkBrowseContext **ppihlbc);", "IHlinkFrame_Navigate_Proxy": "HRESULT WINAPI IHlinkFrame_Navigate_Proxy(IHlinkFrame *This,DWORD grfHLNF,LPBC pbc,IBindStatusCallback *pibsc,IHlink *pihlNavigate);", "IHlinkFrame_OnNavigate_Proxy": "HRESULT WINAPI IHlinkFrame_OnNavigate_Proxy(IHlinkFrame *This,DWORD grfHLNF,IMoniker *pimkTarget,LPCWSTR pwzLocation,LPCWSTR pwzFriendlyName,DWORD dwreserved);", "IHlinkFrame_UpdateHlink_Proxy": "HRESULT WINAPI IHlinkFrame_UpdateHlink_Proxy(IHlinkFrame *This,ULONG uHLID,IMoniker *pimkTarget,LPCWSTR pwzLocation,LPCWSTR pwzFriendlyName);", "IEnumHLITEM_Next_Proxy": "HRESULT WINAPI IEnumHLITEM_Next_Proxy(IEnumHLITEM *This,ULONG celt,HLITEM *rgelt,ULONG *pceltFetched);", "IEnumHLITEM_Skip_Proxy": "HRESULT WINAPI IEnumHLITEM_Skip_Proxy(IEnumHLITEM *This,ULONG celt);", "IEnumHLITEM_Reset_Proxy": "HRESULT WINAPI IEnumHLITEM_Reset_Proxy(IEnumHLITEM *This);", "IEnumHLITEM_Clone_Proxy": "HRESULT WINAPI IEnumHLITEM_Clone_Proxy(IEnumHLITEM *This,IEnumHLITEM **ppienumhlitem);", "IHlinkBrowseContext_Register_Proxy": "HRESULT WINAPI IHlinkBrowseContext_Register_Proxy(IHlinkBrowseContext *This,DWORD reserved,IUnknown *piunk,IMoniker *pimk,DWORD *pdwRegister);", "IHlinkBrowseContext_GetObject_Proxy": "HRESULT WINAPI IHlinkBrowseContext_GetObject_Proxy(IHlinkBrowseContext *This,IMoniker *pimk,WINBOOL fBindIfRootRegistered,IUnknown **ppiunk);", "IHlinkBrowseContext_Revoke_Proxy": "HRESULT WINAPI IHlinkBrowseContext_Revoke_Proxy(IHlinkBrowseContext *This,DWORD dwRegister);", "IHlinkBrowseContext_SetBrowseWindowInfo_Proxy": "HRESULT WINAPI IHlinkBrowseContext_SetBrowseWindowInfo_Proxy(IHlinkBrowseContext *This,HLBWINFO *phlbwi);", "IHlinkBrowseContext_GetBrowseWindowInfo_Proxy": "HRESULT WINAPI IHlinkBrowseContext_GetBrowseWindowInfo_Proxy(IHlinkBrowseContext *This,HLBWINFO *phlbwi);", "IHlinkBrowseContext_SetInitialHlink_Proxy": "HRESULT WINAPI IHlinkBrowseContext_SetInitialHlink_Proxy(IHlinkBrowseContext *This,IMoniker *pimkTarget,LPCWSTR pwzLocation,LPCWSTR pwzFriendlyName);", "IHlinkBrowseContext_OnNavigateHlink_Proxy": "HRESULT WINAPI IHlinkBrowseContext_OnNavigateHlink_Proxy(IHlinkBrowseContext *This,DWORD grfHLNF,IMoniker *pimkTarget,LPCWSTR pwzLocation,LPCWSTR pwzFriendlyName,ULONG *puHLID);", "IHlinkBrowseContext_UpdateHlink_Proxy": "HRESULT WINAPI IHlinkBrowseContext_UpdateHlink_Proxy(IHlinkBrowseContext *This,ULONG uHLID,IMoniker *pimkTarget,LPCWSTR pwzLocation,LPCWSTR pwzFriendlyName);", "IHlinkBrowseContext_EnumNavigationStack_Proxy": "HRESULT WINAPI IHlinkBrowseContext_EnumNavigationStack_Proxy(IHlinkBrowseContext *This,DWORD dwReserved,DWORD grfHLFNAMEF,IEnumHLITEM **ppienumhlitem);", "IHlinkBrowseContext_QueryHlink_Proxy": "HRESULT WINAPI IHlinkBrowseContext_QueryHlink_Proxy(IHlinkBrowseContext *This,DWORD grfHLQF,ULONG uHLID);", "IHlinkBrowseContext_GetHlink_Proxy": "HRESULT WINAPI IHlinkBrowseContext_GetHlink_Proxy(IHlinkBrowseContext *This,ULONG uHLID,IHlink **ppihl);", "IHlinkBrowseContext_SetCurrentHlink_Proxy": "HRESULT WINAPI IHlinkBrowseContext_SetCurrentHlink_Proxy(IHlinkBrowseContext *This,ULONG uHLID);", "IHlinkBrowseContext_Clone_Proxy": "HRESULT WINAPI IHlinkBrowseContext_Clone_Proxy(IHlinkBrowseContext *This,IUnknown *piunkOuter,REFIID riid,IUnknown **ppiunkObj);", "IHlinkBrowseContext_Close_Proxy": "HRESULT WINAPI IHlinkBrowseContext_Close_Proxy(IHlinkBrowseContext *This,DWORD reserved);", "IExtensionServices_SetAdditionalHeaders_Proxy": "HRESULT WINAPI IExtensionServices_SetAdditionalHeaders_Proxy(IExtensionServices *This,LPCWSTR pwzAdditionalHeaders);", "IExtensionServices_SetAuthenticateData_Proxy": "HRESULT WINAPI IExtensionServices_SetAuthenticateData_Proxy(IExtensionServices *This,HWND phwnd,LPCWSTR pwzUsername,LPCWSTR pwzPassword);", "AvQuerySystemResponsiveness": "WINBOOL WINAPI AvQuerySystemResponsiveness (HANDLE AvrtHandle, PULONG SystemResponsivenessValue);", "AvRevertMmThreadCharacteristics": "WINBOOL WINAPI AvRevertMmThreadCharacteristics (HANDLE AvrtHandle);", "AvRtCreateThreadOrderingGroup": "WINBOOL WINAPI AvRtCreateThreadOrderingGroup (PHANDLE Context, PLARGE_INTEGER Period, GUID *ThreadOrderingGuid, PLARGE_INTEGER Timeout);", "AvRtCreateThreadOrderingGroupExA": "WINBOOL WINAPI AvRtCreateThreadOrderingGroupExA (PHANDLE Context, PLARGE_INTEGER Period, GUID *ThreadOrderingGuid, PLARGE_INTEGER Timeout, LPCSTR TaskName);", "AvRtCreateThreadOrderingGroupExW": "WINBOOL WINAPI AvRtCreateThreadOrderingGroupExW (PHANDLE Context, PLARGE_INTEGER Period, GUID *ThreadOrderingGuid, PLARGE_INTEGER Timeout, LPCWSTR TaskName);", "AvRtDeleteThreadOrderingGroup": "WINBOOL WINAPI AvRtDeleteThreadOrderingGroup (HANDLE Context);", "AvRtJoinThreadOrderingGroup": "WINBOOL WINAPI AvRtJoinThreadOrderingGroup (PHANDLE Context, GUID *ThreadOrderingGuid, WINBOOL Before);", "AvRtLeaveThreadOrderingGroup": "WINBOOL WINAPI AvRtLeaveThreadOrderingGroup (HANDLE Context);", "AvRtWaitOnThreadOrderingGroup": "WINBOOL WINAPI AvRtWaitOnThreadOrderingGroup (HANDLE Context);", "AvSetMmMaxThreadCharacteristicsA": "HANDLE WINAPI AvSetMmMaxThreadCharacteristicsA (LPCSTR FirstTask, LPCSTR SecondTask, LPDWORD TaskIndex);", "AvSetMmMaxThreadCharacteristicsW": "HANDLE WINAPI AvSetMmMaxThreadCharacteristicsW (LPCWSTR FirstTask, LPCWSTR SecondTask, LPDWORD TaskIndex);", "AvSetMmThreadCharacteristicsA": "HANDLE WINAPI AvSetMmThreadCharacteristicsA (LPCSTR TaskName, LPDWORD TaskIndex);", "AvSetMmThreadCharacteristicsW": "HANDLE WINAPI AvSetMmThreadCharacteristicsW (LPCWSTR TaskName, LPDWORD TaskIndex);", "AvSetMmThreadPriority": "WINBOOL WINAPI AvSetMmThreadPriority (HANDLE AvrtHandle, AVRT_PRIORITY Priority);", "IPhraseSink_PutSmallPhrase_Proxy": "HRESULT WINAPI IPhraseSink_PutSmallPhrase_Proxy(IPhraseSink *This,const WCHAR *pwcNoun,ULONG cwcNoun,const WCHAR *pwcModifier,ULONG cwcModifier,ULONG ulAttachmentType);", "IPhraseSink_PutPhrase_Proxy": "HRESULT WINAPI IPhraseSink_PutPhrase_Proxy(IPhraseSink *This,const WCHAR *pwcPhrase,ULONG cwcPhrase);", "IWordSink_PutWord_Proxy": "HRESULT WINAPI IWordSink_PutWord_Proxy(IWordSink *This,ULONG cwc,const WCHAR *pwcInBuf,ULONG cwcSrcLen,ULONG cwcSrcPos);", "IWordSink_PutAltWord_Proxy": "HRESULT WINAPI IWordSink_PutAltWord_Proxy(IWordSink *This,ULONG cwc,const WCHAR *pwcInBuf,ULONG cwcSrcLen,ULONG cwcSrcPos);", "IWordSink_StartAltPhrase_Proxy": "HRESULT WINAPI IWordSink_StartAltPhrase_Proxy(IWordSink *This);", "IWordSink_EndAltPhrase_Proxy": "HRESULT WINAPI IWordSink_EndAltPhrase_Proxy(IWordSink *This);", "IWordSink_PutBreak_Proxy": "HRESULT WINAPI IWordSink_PutBreak_Proxy(IWordSink *This,WORDREP_BREAK_TYPE breakType);", "IWordBreaker_Init_Proxy": "HRESULT WINAPI IWordBreaker_Init_Proxy(IWordBreaker *This,WINBOOL fQuery,ULONG ulMaxTokenSize,WINBOOL *pfLicense);", "IWordBreaker_BreakText_Proxy": "HRESULT WINAPI IWordBreaker_BreakText_Proxy(IWordBreaker *This,TEXT_SOURCE *pTextSource,IWordSink *pWordSink,IPhraseSink *pPhraseSink);", "IWordBreaker_ComposePhrase_Proxy": "HRESULT WINAPI IWordBreaker_ComposePhrase_Proxy(IWordBreaker *This,const WCHAR *pwcNoun,ULONG cwcNoun,const WCHAR *pwcModifier,ULONG cwcModifier,ULONG ulAttachmentType,WCHAR *pwcPhrase,ULONG *pcwcPhrase);", "IWordBreaker_GetLicenseToUse_Proxy": "HRESULT WINAPI IWordBreaker_GetLicenseToUse_Proxy(IWordBreaker *This,const WCHAR **ppwcsLicense);", "IWordFormSink_PutAltWord_Proxy": "HRESULT WINAPI IWordFormSink_PutAltWord_Proxy(IWordFormSink *This,const WCHAR *pwcInBuf,ULONG cwc);", "IWordFormSink_PutWord_Proxy": "HRESULT WINAPI IWordFormSink_PutWord_Proxy(IWordFormSink *This,const WCHAR *pwcInBuf,ULONG cwc);", "IStemmer_Init_Proxy": "HRESULT WINAPI IStemmer_Init_Proxy(IStemmer *This,ULONG ulMaxTokenSize,WINBOOL *pfLicense);", "IStemmer_GenerateWordForms_Proxy": "HRESULT WINAPI IStemmer_GenerateWordForms_Proxy(IStemmer *This,const WCHAR *pwcInBuf,ULONG cwc,IWordFormSink *pStemSink);", "IStemmer_GetLicenseToUse_Proxy": "HRESULT WINAPI IStemmer_GetLicenseToUse_Proxy(IStemmer *This,const WCHAR **ppwcsLicense);", "ISimpleCommandCreator_CreateICommand_Proxy": "HRESULT WINAPI ISimpleCommandCreator_CreateICommand_Proxy(ISimpleCommandCreator *This,IUnknown **ppIUnknown,IUnknown *pOuterUnk);", "ISimpleCommandCreator_VerifyCatalog_Proxy": "HRESULT WINAPI ISimpleCommandCreator_VerifyCatalog_Proxy(ISimpleCommandCreator *This,const WCHAR *pwszMachine,const WCHAR *pwszCatalogName);", "ISimpleCommandCreator_GetDefaultCatalog_Proxy": "HRESULT WINAPI ISimpleCommandCreator_GetDefaultCatalog_Proxy(ISimpleCommandCreator *This,WCHAR *pwszCatalogName,ULONG cwcIn,ULONG *pcwcOut);", "IColumnMapper_GetPropInfoFromName_Proxy": "HRESULT WINAPI IColumnMapper_GetPropInfoFromName_Proxy(IColumnMapper *This,const WCHAR *wcsPropName,DBID **ppPropId,DBTYPE *pPropType,unsigned int *puiWidth);", "IColumnMapper_GetPropInfoFromId_Proxy": "HRESULT WINAPI IColumnMapper_GetPropInfoFromId_Proxy(IColumnMapper *This,const DBID *pPropId,WCHAR **pwcsName,DBTYPE *pPropType,unsigned int *puiWidth);", "IColumnMapper_EnumPropInfo_Proxy": "HRESULT WINAPI IColumnMapper_EnumPropInfo_Proxy(IColumnMapper *This,ULONG iEntry,const WCHAR **pwcsName,DBID **ppPropId,DBTYPE *pPropType,unsigned int *puiWidth);", "IColumnMapper_IsMapUpToDate_Proxy": "HRESULT WINAPI IColumnMapper_IsMapUpToDate_Proxy(IColumnMapper *This);", "IColumnMapperCreator_GetColumnMapper_Proxy": "HRESULT WINAPI IColumnMapperCreator_GetColumnMapper_Proxy(IColumnMapperCreator *This,const WCHAR *wcsMachineName,const WCHAR *wcsCatalogName,IColumnMapper **ppColumnMapper);", "NetJoinDomain": "NET_API_STATUS WINAPI NetJoinDomain(LPCWSTR lpServer,LPCWSTR lpDomain,LPCWSTR lpAccountOU,LPCWSTR lpAccount,LPCWSTR lpPassword,DWORD fJoinOptions);", "NetUnjoinDomain": "NET_API_STATUS WINAPI NetUnjoinDomain(LPCWSTR lpServer,LPCWSTR lpAccount,LPCWSTR lpPassword,DWORD fUnjoinOptions);", "NetRenameMachineInDomain": "NET_API_STATUS WINAPI NetRenameMachineInDomain(LPCWSTR lpServer,LPCWSTR lpNewMachineName,LPCWSTR lpAccount,LPCWSTR lpPassword,DWORD fRenameOptions);", "NetValidateName": "NET_API_STATUS WINAPI NetValidateName(LPCWSTR lpServer,LPCWSTR lpName,LPCWSTR lpAccount,LPCWSTR lpPassword,NETSETUP_NAME_TYPE NameType);", "NetGetJoinInformation": "NET_API_STATUS WINAPI NetGetJoinInformation(LPCWSTR lpServer,LPWSTR *lpNameBuffer,PNETSETUP_JOIN_STATUS BufferType);", "NetGetJoinableOUs": "NET_API_STATUS WINAPI NetGetJoinableOUs(LPCWSTR lpServer,LPCWSTR lpDomain,LPCWSTR lpAccount,LPCWSTR lpPassword,DWORD *OUCount,LPWSTR **OUs);", "NetAddAlternateComputerName": "NET_API_STATUS WINAPI NetAddAlternateComputerName(LPCWSTR Server,LPCWSTR AlternateName,LPCWSTR DomainAccount,LPCWSTR DomainAccountPassword,ULONG Reserved);", "NetRemoveAlternateComputerName": "NET_API_STATUS WINAPI NetRemoveAlternateComputerName(LPCWSTR Server,LPCWSTR AlternateName,LPCWSTR DomainAccount,LPCWSTR DomainAccountPassword,ULONG Reserved);", "NetSetPrimaryComputerName": "NET_API_STATUS WINAPI NetSetPrimaryComputerName(LPCWSTR Server,LPCWSTR PrimaryName,LPCWSTR DomainAccount,LPCWSTR DomainAccountPassword,ULONG Reserved);", "NetEnumerateComputerNames": "NET_API_STATUS WINAPI NetEnumerateComputerNames(LPCWSTR Server,NET_COMPUTER_NAME_TYPE NameType,ULONG Reserved,PDWORD EntryCount,LPWSTR **ComputerNames);", "EnterCriticalSection": "WINBASEAPI VOID WINAPI EnterCriticalSection (LPCRITICAL_SECTION lpCriticalSection);", "LeaveCriticalSection": "WINBASEAPI VOID WINAPI LeaveCriticalSection (LPCRITICAL_SECTION lpCriticalSection);", "TryEnterCriticalSection": "WINBASEAPI WINBOOL WINAPI TryEnterCriticalSection (LPCRITICAL_SECTION lpCriticalSection);", "DeleteCriticalSection": "WINBASEAPI VOID WINAPI DeleteCriticalSection (LPCRITICAL_SECTION lpCriticalSection);", "SetEvent": "WINBASEAPI WINBOOL WINAPI SetEvent (HANDLE hEvent);", "ResetEvent": "WINBASEAPI WINBOOL WINAPI ResetEvent (HANDLE hEvent);", "ReleaseSemaphore": "WINBASEAPI WINBOOL WINAPI ReleaseSemaphore (HANDLE hSemaphore, LONG lReleaseCount, LPLONG lpPreviousCount);", "ReleaseMutex": "WINBASEAPI WINBOOL WINAPI ReleaseMutex (HANDLE hMutex);", "WaitForSingleObjectEx": "WINBASEAPI DWORD WINAPI WaitForSingleObjectEx (HANDLE hHandle, DWORD dwMilliseconds, WINBOOL bAlertable);", "WaitForMultipleObjectsEx": "WINBASEAPI DWORD WINAPI WaitForMultipleObjectsEx (DWORD nCount, CONST HANDLE *lpHandles, WINBOOL bWaitAll, DWORD dwMilliseconds, WINBOOL bAlertable);", "OpenMutexW": "WINBASEAPI HANDLE WINAPI OpenMutexW (DWORD dwDesiredAccess, WINBOOL bInheritHandle, LPCWSTR lpName);", "OpenEventA": "WINBASEAPI HANDLE WINAPI OpenEventA (DWORD dwDesiredAccess, WINBOOL bInheritHandle, LPCSTR lpName);", "OpenEventW": "WINBASEAPI HANDLE WINAPI OpenEventW (DWORD dwDesiredAccess, WINBOOL bInheritHandle, LPCWSTR lpName);", "OpenSemaphoreW": "WINBASEAPI HANDLE WINAPI OpenSemaphoreW (DWORD dwDesiredAccess, WINBOOL bInheritHandle, LPCWSTR lpName);", "WaitOnAddress": "WINBOOL WINAPI WaitOnAddress (volatile VOID *Address, PVOID CompareAddress, SIZE_T AddressSize, DWORD dwMilliseconds);", "WakeByAddressSingle": "VOID WINAPI WakeByAddressSingle (PVOID Address);", "WakeByAddressAll": "VOID WINAPI WakeByAddressAll (PVOID Address);", "InitializeSRWLock": "WINBASEAPI VOID WINAPI InitializeSRWLock (PSRWLOCK SRWLock);", "ReleaseSRWLockExclusive": "VOID WINAPI ReleaseSRWLockExclusive (PSRWLOCK SRWLock);", "ReleaseSRWLockShared": "VOID WINAPI ReleaseSRWLockShared (PSRWLOCK SRWLock);", "AcquireSRWLockExclusive": "VOID WINAPI AcquireSRWLockExclusive (PSRWLOCK SRWLock);", "AcquireSRWLockShared": "VOID WINAPI AcquireSRWLockShared (PSRWLOCK SRWLock);", "TryAcquireSRWLockExclusive": "WINBASEAPI BOOLEAN WINAPI TryAcquireSRWLockExclusive (PSRWLOCK SRWLock);", "TryAcquireSRWLockShared": "WINBASEAPI BOOLEAN WINAPI TryAcquireSRWLockShared (PSRWLOCK SRWLock);", "InitializeCriticalSectionEx": "WINBASEAPI WINBOOL WINAPI InitializeCriticalSectionEx (LPCRITICAL_SECTION lpCriticalSection, DWORD dwSpinCount, DWORD Flags);", "InitOnceInitialize": "WINBASEAPI VOID WINAPI InitOnceInitialize (PINIT_ONCE InitOnce);", "InitOnceExecuteOnce": "WINBASEAPI WINBOOL WINAPI InitOnceExecuteOnce (PINIT_ONCE InitOnce, PINIT_ONCE_FN InitFn, PVOID Parameter, LPVOID *Context);", "InitOnceBeginInitialize": "WINBASEAPI WINBOOL WINAPI InitOnceBeginInitialize (LPINIT_ONCE lpInitOnce, DWORD dwFlags, PBOOL fPending, LPVOID *lpContext);", "InitOnceComplete": "WINBASEAPI WINBOOL WINAPI InitOnceComplete (LPINIT_ONCE lpInitOnce, DWORD dwFlags, LPVOID lpContext);", "InitializeConditionVariable": "WINBASEAPI VOID WINAPI InitializeConditionVariable (PCONDITION_VARIABLE ConditionVariable);", "WakeConditionVariable": "WINBASEAPI VOID WINAPI WakeConditionVariable (PCONDITION_VARIABLE ConditionVariable);", "WakeAllConditionVariable": "WINBASEAPI VOID WINAPI WakeAllConditionVariable (PCONDITION_VARIABLE ConditionVariable);", "SleepConditionVariableCS": "WINBASEAPI WINBOOL WINAPI SleepConditionVariableCS (PCONDITION_VARIABLE ConditionVariable, PCRITICAL_SECTION CriticalSection, DWORD dwMilliseconds);", "SleepConditionVariableSRW": "WINBASEAPI WINBOOL WINAPI SleepConditionVariableSRW (PCONDITION_VARIABLE ConditionVariable, PSRWLOCK SRWLock, DWORD dwMilliseconds, ULONG Flags);", "CreateMutexExA": "WINBASEAPI HANDLE WINAPI CreateMutexExA (LPSECURITY_ATTRIBUTES lpMutexAttributes, LPCSTR lpName, DWORD dwFlags, DWORD dwDesiredAccess);", "CreateMutexExW": "WINBASEAPI HANDLE WINAPI CreateMutexExW (LPSECURITY_ATTRIBUTES lpMutexAttributes, LPCWSTR lpName, DWORD dwFlags, DWORD dwDesiredAccess);", "CreateEventExA": "WINBASEAPI HANDLE WINAPI CreateEventExA (LPSECURITY_ATTRIBUTES lpEventAttributes, LPCSTR lpName, DWORD dwFlags, DWORD dwDesiredAccess);", "CreateEventExW": "WINBASEAPI HANDLE WINAPI CreateEventExW (LPSECURITY_ATTRIBUTES lpEventAttributes, LPCWSTR lpName, DWORD dwFlags, DWORD dwDesiredAccess);", "CreateSemaphoreExW": "WINBASEAPI HANDLE WINAPI CreateSemaphoreExW (LPSECURITY_ATTRIBUTES lpSemaphoreAttributes, LONG lInitialCount, LONG lMaximumCount, LPCWSTR lpName, DWORD dwFlags, DWORD dwDesiredAccess);", "InitializeCriticalSection": "WINBASEAPI VOID WINAPI InitializeCriticalSection (LPCRITICAL_SECTION lpCriticalSection);", "InitializeCriticalSectionAndSpinCount": "WINBASEAPI WINBOOL WINAPI InitializeCriticalSectionAndSpinCount (LPCRITICAL_SECTION lpCriticalSection, DWORD dwSpinCount);", "SetCriticalSectionSpinCount": "WINBASEAPI DWORD WINAPI SetCriticalSectionSpinCount (LPCRITICAL_SECTION lpCriticalSection, DWORD dwSpinCount);", "WaitForSingleObject": "WINBASEAPI DWORD WINAPI WaitForSingleObject (HANDLE hHandle, DWORD dwMilliseconds);", "SleepEx": "WINBASEAPI DWORD WINAPI SleepEx (DWORD dwMilliseconds, WINBOOL bAlertable);", "CreateMutexA": "WINBASEAPI HANDLE WINAPI CreateMutexA (LPSECURITY_ATTRIBUTES lpMutexAttributes, WINBOOL bInitialOwner, LPCSTR lpName);", "CreateMutexW": "WINBASEAPI HANDLE WINAPI CreateMutexW (LPSECURITY_ATTRIBUTES lpMutexAttributes, WINBOOL bInitialOwner, LPCWSTR lpName);", "CreateEventA": "WINBASEAPI HANDLE WINAPI CreateEventA (LPSECURITY_ATTRIBUTES lpEventAttributes, WINBOOL bManualReset, WINBOOL bInitialState, LPCSTR lpName);", "CreateEventW": "WINBASEAPI HANDLE WINAPI CreateEventW (LPSECURITY_ATTRIBUTES lpEventAttributes, WINBOOL bManualReset, WINBOOL bInitialState, LPCWSTR lpName);", "SetWaitableTimer": "WINBASEAPI WINBOOL WINAPI SetWaitableTimer (HANDLE hTimer, const LARGE_INTEGER *lpDueTime, LONG lPeriod, PTIMERAPCROUTINE pfnCompletionRoutine, LPVOID lpArgToCompletionRoutine, WINBOOL fResume);", "CancelWaitableTimer": "WINBASEAPI WINBOOL WINAPI CancelWaitableTimer (HANDLE hTimer);", "OpenWaitableTimerW": "WINBASEAPI HANDLE WINAPI OpenWaitableTimerW (DWORD dwDesiredAccess, WINBOOL bInheritHandle, LPCWSTR lpTimerName);", "EnterSynchronizationBarrier": "WINBOOL WINAPI EnterSynchronizationBarrier (LPSYNCHRONIZATION_BARRIER lpBarrier, DWORD dwFlags);", "InitializeSynchronizationBarrier": "WINBOOL WINAPI InitializeSynchronizationBarrier (LPSYNCHRONIZATION_BARRIER lpBarrier, LONG lTotalThreads, LONG lSpinCount);", "DeleteSynchronizationBarrier": "WINBOOL WINAPI DeleteSynchronizationBarrier (LPSYNCHRONIZATION_BARRIER lpBarrier);", "Sleep": "WINBASEAPI VOID WINAPI Sleep (DWORD dwMilliseconds);", "CreateWaitableTimerExW": "WINBASEAPI HANDLE WINAPI CreateWaitableTimerExW (LPSECURITY_ATTRIBUTES lpTimerAttributes, LPCWSTR lpTimerName, DWORD dwFlags, DWORD dwDesiredAccess);", "SetWaitableTimerEx": "WINBOOL WINAPI SetWaitableTimerEx (HANDLE hTimer, const LARGE_INTEGER *lpDueTime, LONG lPeriod, PTIMERAPCROUTINE pfnCompletionRoutine, LPVOID lpArgToCompletionRoutine, PREASON_CONTEXT WakeContext, ULONG TolerableDelay);", "ITDirectoryObjectConference_get_Protocol_Proxy": "HRESULT WINAPI ITDirectoryObjectConference_get_Protocol_Proxy(ITDirectoryObjectConference *This,BSTR *ppProtocol);", "ITDirectoryObjectConference_get_Originator_Proxy": "HRESULT WINAPI ITDirectoryObjectConference_get_Originator_Proxy(ITDirectoryObjectConference *This,BSTR *ppOriginator);", "ITDirectoryObjectConference_put_Originator_Proxy": "HRESULT WINAPI ITDirectoryObjectConference_put_Originator_Proxy(ITDirectoryObjectConference *This,BSTR pOriginator);", "ITDirectoryObjectConference_get_AdvertisingScope_Proxy": "HRESULT WINAPI ITDirectoryObjectConference_get_AdvertisingScope_Proxy(ITDirectoryObjectConference *This,RND_ADVERTISING_SCOPE *pAdvertisingScope);", "ITDirectoryObjectConference_put_AdvertisingScope_Proxy": "HRESULT WINAPI ITDirectoryObjectConference_put_AdvertisingScope_Proxy(ITDirectoryObjectConference *This,RND_ADVERTISING_SCOPE AdvertisingScope);", "ITDirectoryObjectConference_get_Url_Proxy": "HRESULT WINAPI ITDirectoryObjectConference_get_Url_Proxy(ITDirectoryObjectConference *This,BSTR *ppUrl);", "ITDirectoryObjectConference_put_Url_Proxy": "HRESULT WINAPI ITDirectoryObjectConference_put_Url_Proxy(ITDirectoryObjectConference *This,BSTR pUrl);", "ITDirectoryObjectConference_get_Description_Proxy": "HRESULT WINAPI ITDirectoryObjectConference_get_Description_Proxy(ITDirectoryObjectConference *This,BSTR *ppDescription);", "ITDirectoryObjectConference_put_Description_Proxy": "HRESULT WINAPI ITDirectoryObjectConference_put_Description_Proxy(ITDirectoryObjectConference *This,BSTR pDescription);", "ITDirectoryObjectConference_get_IsEncrypted_Proxy": "HRESULT WINAPI ITDirectoryObjectConference_get_IsEncrypted_Proxy(ITDirectoryObjectConference *This,VARIANT_BOOL *pfEncrypted);", "ITDirectoryObjectConference_put_IsEncrypted_Proxy": "HRESULT WINAPI ITDirectoryObjectConference_put_IsEncrypted_Proxy(ITDirectoryObjectConference *This,VARIANT_BOOL fEncrypted);", "ITDirectoryObjectConference_get_StartTime_Proxy": "HRESULT WINAPI ITDirectoryObjectConference_get_StartTime_Proxy(ITDirectoryObjectConference *This,DATE *pDate);", "ITDirectoryObjectConference_put_StartTime_Proxy": "HRESULT WINAPI ITDirectoryObjectConference_put_StartTime_Proxy(ITDirectoryObjectConference *This,DATE Date);", "ITDirectoryObjectConference_get_StopTime_Proxy": "HRESULT WINAPI ITDirectoryObjectConference_get_StopTime_Proxy(ITDirectoryObjectConference *This,DATE *pDate);", "ITDirectoryObjectConference_put_StopTime_Proxy": "HRESULT WINAPI ITDirectoryObjectConference_put_StopTime_Proxy(ITDirectoryObjectConference *This,DATE Date);", "ITDirectoryObjectUser_get_IPPhonePrimary_Proxy": "HRESULT WINAPI ITDirectoryObjectUser_get_IPPhonePrimary_Proxy(ITDirectoryObjectUser *This,BSTR *ppName);", "ITDirectoryObjectUser_put_IPPhonePrimary_Proxy": "HRESULT WINAPI ITDirectoryObjectUser_put_IPPhonePrimary_Proxy(ITDirectoryObjectUser *This,BSTR pName);", "IEnumDialableAddrs_Next_Proxy": "HRESULT WINAPI IEnumDialableAddrs_Next_Proxy(IEnumDialableAddrs *This,ULONG celt,BSTR *ppElements,ULONG *pcFetched);", "IEnumDialableAddrs_Reset_Proxy": "HRESULT WINAPI IEnumDialableAddrs_Reset_Proxy(IEnumDialableAddrs *This);", "IEnumDialableAddrs_Skip_Proxy": "HRESULT WINAPI IEnumDialableAddrs_Skip_Proxy(IEnumDialableAddrs *This,ULONG celt);", "IEnumDialableAddrs_Clone_Proxy": "HRESULT WINAPI IEnumDialableAddrs_Clone_Proxy(IEnumDialableAddrs *This,IEnumDialableAddrs **ppEnum);", "ITDirectoryObject_get_ObjectType_Proxy": "HRESULT WINAPI ITDirectoryObject_get_ObjectType_Proxy(ITDirectoryObject *This,DIRECTORY_OBJECT_TYPE *pObjectType);", "ITDirectoryObject_get_Name_Proxy": "HRESULT WINAPI ITDirectoryObject_get_Name_Proxy(ITDirectoryObject *This,BSTR *ppName);", "ITDirectoryObject_put_Name_Proxy": "HRESULT WINAPI ITDirectoryObject_put_Name_Proxy(ITDirectoryObject *This,BSTR pName);", "ITDirectoryObject_get_DialableAddrs_Proxy": "HRESULT WINAPI ITDirectoryObject_get_DialableAddrs_Proxy(ITDirectoryObject *This,__LONG32 dwAddressType,VARIANT *pVariant);", "ITDirectoryObject_EnumerateDialableAddrs_Proxy": "HRESULT WINAPI ITDirectoryObject_EnumerateDialableAddrs_Proxy(ITDirectoryObject *This,DWORD dwAddressType,IEnumDialableAddrs **ppEnumDialableAddrs);", "ITDirectoryObject_get_SecurityDescriptor_Proxy": "HRESULT WINAPI ITDirectoryObject_get_SecurityDescriptor_Proxy(ITDirectoryObject *This,IDispatch **ppSecDes);", "ITDirectoryObject_put_SecurityDescriptor_Proxy": "HRESULT WINAPI ITDirectoryObject_put_SecurityDescriptor_Proxy(ITDirectoryObject *This,IDispatch *pSecDes);", "IEnumDirectoryObject_Next_Proxy": "HRESULT WINAPI IEnumDirectoryObject_Next_Proxy(IEnumDirectoryObject *This,ULONG celt,ITDirectoryObject **pVal,ULONG *pcFetched);", "IEnumDirectoryObject_Reset_Proxy": "HRESULT WINAPI IEnumDirectoryObject_Reset_Proxy(IEnumDirectoryObject *This);", "IEnumDirectoryObject_Skip_Proxy": "HRESULT WINAPI IEnumDirectoryObject_Skip_Proxy(IEnumDirectoryObject *This,ULONG celt);", "IEnumDirectoryObject_Clone_Proxy": "HRESULT WINAPI IEnumDirectoryObject_Clone_Proxy(IEnumDirectoryObject *This,IEnumDirectoryObject **ppEnum);", "ITILSConfig_get_Port_Proxy": "HRESULT WINAPI ITILSConfig_get_Port_Proxy(ITILSConfig *This,__LONG32 *pPort);", "ITILSConfig_put_Port_Proxy": "HRESULT WINAPI ITILSConfig_put_Port_Proxy(ITILSConfig *This,__LONG32 Port);", "ITDirectory_get_DirectoryType_Proxy": "HRESULT WINAPI ITDirectory_get_DirectoryType_Proxy(ITDirectory *This,DIRECTORY_TYPE *pDirectoryType);", "ITDirectory_get_DisplayName_Proxy": "HRESULT WINAPI ITDirectory_get_DisplayName_Proxy(ITDirectory *This,BSTR *pName);", "ITDirectory_get_IsDynamic_Proxy": "HRESULT WINAPI ITDirectory_get_IsDynamic_Proxy(ITDirectory *This,VARIANT_BOOL *pfDynamic);", "ITDirectory_get_DefaultObjectTTL_Proxy": "HRESULT WINAPI ITDirectory_get_DefaultObjectTTL_Proxy(ITDirectory *This,__LONG32 *pTTL);", "ITDirectory_put_DefaultObjectTTL_Proxy": "HRESULT WINAPI ITDirectory_put_DefaultObjectTTL_Proxy(ITDirectory *This,__LONG32 TTL);", "ITDirectory_EnableAutoRefresh_Proxy": "HRESULT WINAPI ITDirectory_EnableAutoRefresh_Proxy(ITDirectory *This,VARIANT_BOOL fEnable);", "ITDirectory_Connect_Proxy": "HRESULT WINAPI ITDirectory_Connect_Proxy(ITDirectory *This,VARIANT_BOOL fSecure);", "ITDirectory_Bind_Proxy": "HRESULT WINAPI ITDirectory_Bind_Proxy(ITDirectory *This,BSTR pDomainName,BSTR pUserName,BSTR pPassword,__LONG32 lFlags);", "ITDirectory_AddDirectoryObject_Proxy": "HRESULT WINAPI ITDirectory_AddDirectoryObject_Proxy(ITDirectory *This,ITDirectoryObject *pDirectoryObject);", "ITDirectory_ModifyDirectoryObject_Proxy": "HRESULT WINAPI ITDirectory_ModifyDirectoryObject_Proxy(ITDirectory *This,ITDirectoryObject *pDirectoryObject);", "ITDirectory_RefreshDirectoryObject_Proxy": "HRESULT WINAPI ITDirectory_RefreshDirectoryObject_Proxy(ITDirectory *This,ITDirectoryObject *pDirectoryObject);", "ITDirectory_DeleteDirectoryObject_Proxy": "HRESULT WINAPI ITDirectory_DeleteDirectoryObject_Proxy(ITDirectory *This,ITDirectoryObject *pDirectoryObject);", "ITDirectory_get_DirectoryObjects_Proxy": "HRESULT WINAPI ITDirectory_get_DirectoryObjects_Proxy(ITDirectory *This,DIRECTORY_OBJECT_TYPE DirectoryObjectType,BSTR pName,VARIANT *pVariant);", "ITDirectory_EnumerateDirectoryObjects_Proxy": "HRESULT WINAPI ITDirectory_EnumerateDirectoryObjects_Proxy(ITDirectory *This,DIRECTORY_OBJECT_TYPE DirectoryObjectType,BSTR pName,IEnumDirectoryObject **ppEnumObject);", "IEnumDirectory_Next_Proxy": "HRESULT WINAPI IEnumDirectory_Next_Proxy(IEnumDirectory *This,ULONG celt,ITDirectory **ppElements,ULONG *pcFetched);", "IEnumDirectory_Reset_Proxy": "HRESULT WINAPI IEnumDirectory_Reset_Proxy(IEnumDirectory *This);", "IEnumDirectory_Skip_Proxy": "HRESULT WINAPI IEnumDirectory_Skip_Proxy(IEnumDirectory *This,ULONG celt);", "IEnumDirectory_Clone_Proxy": "HRESULT WINAPI IEnumDirectory_Clone_Proxy(IEnumDirectory *This,IEnumDirectory **ppEnum);", "ITRendezvous_get_DefaultDirectories_Proxy": "HRESULT WINAPI ITRendezvous_get_DefaultDirectories_Proxy(ITRendezvous *This,VARIANT *pVariant);", "ITRendezvous_EnumerateDefaultDirectories_Proxy": "HRESULT WINAPI ITRendezvous_EnumerateDefaultDirectories_Proxy(ITRendezvous *This,IEnumDirectory **ppEnumDirectory);", "ITRendezvous_CreateDirectory_Proxy": "HRESULT WINAPI ITRendezvous_CreateDirectory_Proxy(ITRendezvous *This,DIRECTORY_TYPE DirectoryType,BSTR pName,ITDirectory **ppDir);", "ITRendezvous_CreateDirectoryObject_Proxy": "HRESULT WINAPI ITRendezvous_CreateDirectoryObject_Proxy(ITRendezvous *This,DIRECTORY_OBJECT_TYPE DirectoryObjectType,BSTR pName,ITDirectoryObject **ppDirectoryObject);", "HttpFilterProc": "DWORD WINAPI HttpFilterProc(HTTP_FILTER_CONTEXT *pfc,DWORD NotificationType,VOID *pvNotification);", "GetFilterVersion": "WINBOOL WINAPI GetFilterVersion(HTTP_FILTER_VERSION *pVer);", "TerminateFilter": "WINBOOL WINAPI TerminateFilter(DWORD dwFlags);", "D3DXGetPixelShaderProfile": "const char * WINAPI D3DXGetPixelShaderProfile(struct IDirect3DDevice9 *device);", "D3DXGetShaderSize": "UINT WINAPI D3DXGetShaderSize(const DWORD *byte_code);", "D3DXGetShaderVersion": "DWORD WINAPI D3DXGetShaderVersion(const DWORD *byte_code);", "D3DXGetVertexShaderProfile": "const char * WINAPI D3DXGetVertexShaderProfile(struct IDirect3DDevice9 *device);", "D3DXFindShaderComment": "HRESULT WINAPI D3DXFindShaderComment(const DWORD *byte_code, DWORD fourcc, const void **data, UINT *size);", "D3DXGetShaderSamplers": "HRESULT WINAPI D3DXGetShaderSamplers(const DWORD *byte_code, const char **samplers, UINT *count);", "D3DXAssembleShaderFromFileA": "HRESULT WINAPI D3DXAssembleShaderFromFileA(const char *filename, const D3DXMACRO *defines,", "D3DXAssembleShaderFromFileW": "HRESULT WINAPI D3DXAssembleShaderFromFileW(const WCHAR *filename, const D3DXMACRO *defines,", "D3DXAssembleShaderFromResourceA": "HRESULT WINAPI D3DXAssembleShaderFromResourceA(HMODULE module, const char *resource, const D3DXMACRO *defines,", "D3DXAssembleShaderFromResourceW": "HRESULT WINAPI D3DXAssembleShaderFromResourceW(HMODULE module, const WCHAR *resource, const D3DXMACRO *defines,", "D3DXAssembleShader": "HRESULT WINAPI D3DXAssembleShader(const char *data, UINT data_len, const D3DXMACRO *defines,", "D3DXCompileShader": "HRESULT WINAPI D3DXCompileShader(const char *src_data, UINT data_len, const D3DXMACRO *defines,", "D3DXDisassembleShader": "HRESULT WINAPI D3DXDisassembleShader(const DWORD *pShader, WINBOOL EnableColorCode, const char *pComments, struct ID3DXBuffer **ppDisassembly);", "D3DXCompileShaderFromFileA": "HRESULT WINAPI D3DXCompileShaderFromFileA(const char *filename, const D3DXMACRO *defines,", "D3DXCompileShaderFromFileW": "HRESULT WINAPI D3DXCompileShaderFromFileW(const WCHAR *filename, const D3DXMACRO *defines,", "D3DXCompileShaderFromResourceA": "HRESULT WINAPI D3DXCompileShaderFromResourceA(HMODULE module, const char *resource, const D3DXMACRO *defines,", "D3DXCompileShaderFromResourceW": "HRESULT WINAPI D3DXCompileShaderFromResourceW(HMODULE module, const WCHAR *resource, const D3DXMACRO *defines,", "D3DXPreprocessShader": "HRESULT WINAPI D3DXPreprocessShader(const char *data, UINT data_len, const D3DXMACRO *defines,", "D3DXPreprocessShaderFromFileA": "HRESULT WINAPI D3DXPreprocessShaderFromFileA(const char *filename, const D3DXMACRO *defines,", "D3DXPreprocessShaderFromFileW": "HRESULT WINAPI D3DXPreprocessShaderFromFileW(const WCHAR *filename, const D3DXMACRO *defines,", "D3DXPreprocessShaderFromResourceA": "HRESULT WINAPI D3DXPreprocessShaderFromResourceA(HMODULE module, const char *resource, const D3DXMACRO *defines,", "D3DXPreprocessShaderFromResourceW": "HRESULT WINAPI D3DXPreprocessShaderFromResourceW(HMODULE module, const WCHAR *resource, const D3DXMACRO *defines,", "D3DXGetShaderConstantTableEx": "HRESULT WINAPI D3DXGetShaderConstantTableEx(const DWORD *byte_code, DWORD flags, ID3DXConstantTable **constant_table);", "D3DXGetShaderConstantTable": "HRESULT WINAPI D3DXGetShaderConstantTable(const DWORD *byte_code, ID3DXConstantTable **constant_table);", "D3DXGetShaderInputSemantics": "HRESULT WINAPI D3DXGetShaderInputSemantics(const DWORD *pFunction, D3DXSEMANTIC *pSemantics, UINT *pCount);", "D3DXGetShaderOutputSemantics": "HRESULT WINAPI D3DXGetShaderOutputSemantics(const DWORD *pFunction, D3DXSEMANTIC *pSemantics, UINT *pCount);", "D3DXCreateTextureShader": "HRESULT WINAPI D3DXCreateTextureShader(const DWORD *pFunction, ID3DXTextureShader **ppTextureShader);", "D3DXCreateFragmentLinker": "HRESULT WINAPI D3DXCreateFragmentLinker(IDirect3DDevice9 *device, UINT size, ID3DXFragmentLinker **linker);", "D3DXCreateFragmentLinkerEx": "HRESULT WINAPI D3DXCreateFragmentLinkerEx(IDirect3DDevice9 *device, UINT size, DWORD flags, ID3DXFragmentLinker **linker);", "ITAMMediaFormat_get_MediaFormat_Proxy": "HRESULT WINAPI ITAMMediaFormat_get_MediaFormat_Proxy(ITAMMediaFormat *This,AM_MEDIA_TYPE **ppmt);", "ITAMMediaFormat_put_MediaFormat_Proxy": "HRESULT WINAPI ITAMMediaFormat_put_MediaFormat_Proxy(ITAMMediaFormat *This,const AM_MEDIA_TYPE *pmt);", "ITAllocatorProperties_SetAllocatorProperties_Proxy": "HRESULT WINAPI ITAllocatorProperties_SetAllocatorProperties_Proxy(ITAllocatorProperties *This,ALLOCATOR_PROPERTIES *pAllocProperties);", "ITAllocatorProperties_GetAllocatorProperties_Proxy": "HRESULT WINAPI ITAllocatorProperties_GetAllocatorProperties_Proxy(ITAllocatorProperties *This,ALLOCATOR_PROPERTIES *pAllocProperties);", "ITAllocatorProperties_SetAllocateBuffers_Proxy": "HRESULT WINAPI ITAllocatorProperties_SetAllocateBuffers_Proxy(ITAllocatorProperties *This,WINBOOL bAllocBuffers);", "ITAllocatorProperties_GetAllocateBuffers_Proxy": "HRESULT WINAPI ITAllocatorProperties_GetAllocateBuffers_Proxy(ITAllocatorProperties *This,WINBOOL *pbAllocBuffers);", "ITAllocatorProperties_SetBufferSize_Proxy": "HRESULT WINAPI ITAllocatorProperties_SetBufferSize_Proxy(ITAllocatorProperties *This,DWORD BufferSize);", "ITAllocatorProperties_GetBufferSize_Proxy": "HRESULT WINAPI ITAllocatorProperties_GetBufferSize_Proxy(ITAllocatorProperties *This,DWORD *pBufferSize);", "IDEGetBlockFmtNamesParam_get_Names_Proxy": "HRESULT WINAPI IDEGetBlockFmtNamesParam_get_Names_Proxy(IDEGetBlockFmtNamesParam *This,VARIANT *pVal);", "IDEGetBlockFmtNamesParam_put_Names_Proxy": "HRESULT WINAPI IDEGetBlockFmtNamesParam_put_Names_Proxy(IDEGetBlockFmtNamesParam *This,VARIANT *newVal);", "IDHTMLSafe_ExecCommand_Proxy": "HRESULT WINAPI IDHTMLSafe_ExecCommand_Proxy(IDHTMLSafe *This,DHTMLEDITCMDID cmdID,OLECMDEXECOPT cmdexecopt,VARIANT *pInVar,VARIANT *pOutVar);", "IDHTMLSafe_QueryStatus_Proxy": "HRESULT WINAPI IDHTMLSafe_QueryStatus_Proxy(IDHTMLSafe *This,DHTMLEDITCMDID cmdID,DHTMLEDITCMDF *retval);", "IDHTMLSafe_SetContextMenu_Proxy": "HRESULT WINAPI IDHTMLSafe_SetContextMenu_Proxy(IDHTMLSafe *This,VARIANT *menuStrings,VARIANT *menuStates);", "IDHTMLSafe_NewDocument_Proxy": "HRESULT WINAPI IDHTMLSafe_NewDocument_Proxy(IDHTMLSafe *This);", "IDHTMLSafe_LoadURL_Proxy": "HRESULT WINAPI IDHTMLSafe_LoadURL_Proxy(IDHTMLSafe *This,BSTR url);", "IDHTMLSafe_FilterSourceCode_Proxy": "HRESULT WINAPI IDHTMLSafe_FilterSourceCode_Proxy(IDHTMLSafe *This,BSTR sourceCodeIn,BSTR *sourceCodeOut);", "IDHTMLSafe_Refresh_Proxy": "HRESULT WINAPI IDHTMLSafe_Refresh_Proxy(IDHTMLSafe *This);", "IDHTMLSafe_get_DOM_Proxy": "HRESULT WINAPI IDHTMLSafe_get_DOM_Proxy(IDHTMLSafe *This,IHTMLDocument2 **pVal);", "IDHTMLSafe_get_DocumentHTML_Proxy": "HRESULT WINAPI IDHTMLSafe_get_DocumentHTML_Proxy(IDHTMLSafe *This,BSTR *docHTML);", "IDHTMLSafe_put_DocumentHTML_Proxy": "HRESULT WINAPI IDHTMLSafe_put_DocumentHTML_Proxy(IDHTMLSafe *This,BSTR docHTML);", "IDHTMLSafe_get_ActivateApplets_Proxy": "HRESULT WINAPI IDHTMLSafe_get_ActivateApplets_Proxy(IDHTMLSafe *This,VARIANT_BOOL *pVal);", "IDHTMLSafe_put_ActivateApplets_Proxy": "HRESULT WINAPI IDHTMLSafe_put_ActivateApplets_Proxy(IDHTMLSafe *This,VARIANT_BOOL newVal);", "IDHTMLSafe_get_ActivateActiveXControls_Proxy": "HRESULT WINAPI IDHTMLSafe_get_ActivateActiveXControls_Proxy(IDHTMLSafe *This,VARIANT_BOOL *pVal);", "IDHTMLSafe_put_ActivateActiveXControls_Proxy": "HRESULT WINAPI IDHTMLSafe_put_ActivateActiveXControls_Proxy(IDHTMLSafe *This,VARIANT_BOOL newVal);", "IDHTMLSafe_get_ActivateDTCs_Proxy": "HRESULT WINAPI IDHTMLSafe_get_ActivateDTCs_Proxy(IDHTMLSafe *This,VARIANT_BOOL *pVal);", "IDHTMLSafe_put_ActivateDTCs_Proxy": "HRESULT WINAPI IDHTMLSafe_put_ActivateDTCs_Proxy(IDHTMLSafe *This,VARIANT_BOOL newVal);", "IDHTMLSafe_get_ShowDetails_Proxy": "HRESULT WINAPI IDHTMLSafe_get_ShowDetails_Proxy(IDHTMLSafe *This,VARIANT_BOOL *pVal);", "IDHTMLSafe_put_ShowDetails_Proxy": "HRESULT WINAPI IDHTMLSafe_put_ShowDetails_Proxy(IDHTMLSafe *This,VARIANT_BOOL newVal);", "IDHTMLSafe_get_ShowBorders_Proxy": "HRESULT WINAPI IDHTMLSafe_get_ShowBorders_Proxy(IDHTMLSafe *This,VARIANT_BOOL *pVal);", "IDHTMLSafe_put_ShowBorders_Proxy": "HRESULT WINAPI IDHTMLSafe_put_ShowBorders_Proxy(IDHTMLSafe *This,VARIANT_BOOL newVal);", "IDHTMLSafe_get_Appearance_Proxy": "HRESULT WINAPI IDHTMLSafe_get_Appearance_Proxy(IDHTMLSafe *This,DHTMLEDITAPPEARANCE *pVal);", "IDHTMLSafe_put_Appearance_Proxy": "HRESULT WINAPI IDHTMLSafe_put_Appearance_Proxy(IDHTMLSafe *This,DHTMLEDITAPPEARANCE newVal);", "IDHTMLSafe_get_Scrollbars_Proxy": "HRESULT WINAPI IDHTMLSafe_get_Scrollbars_Proxy(IDHTMLSafe *This,VARIANT_BOOL *pVal);", "IDHTMLSafe_put_Scrollbars_Proxy": "HRESULT WINAPI IDHTMLSafe_put_Scrollbars_Proxy(IDHTMLSafe *This,VARIANT_BOOL newVal);", "IDHTMLSafe_get_ScrollbarAppearance_Proxy": "HRESULT WINAPI IDHTMLSafe_get_ScrollbarAppearance_Proxy(IDHTMLSafe *This,DHTMLEDITAPPEARANCE *pVal);", "IDHTMLSafe_put_ScrollbarAppearance_Proxy": "HRESULT WINAPI IDHTMLSafe_put_ScrollbarAppearance_Proxy(IDHTMLSafe *This,DHTMLEDITAPPEARANCE newVal);", "IDHTMLSafe_get_SourceCodePreservation_Proxy": "HRESULT WINAPI IDHTMLSafe_get_SourceCodePreservation_Proxy(IDHTMLSafe *This,VARIANT_BOOL *pVal);", "IDHTMLSafe_put_SourceCodePreservation_Proxy": "HRESULT WINAPI IDHTMLSafe_put_SourceCodePreservation_Proxy(IDHTMLSafe *This,VARIANT_BOOL newVal);", "IDHTMLSafe_get_AbsoluteDropMode_Proxy": "HRESULT WINAPI IDHTMLSafe_get_AbsoluteDropMode_Proxy(IDHTMLSafe *This,VARIANT_BOOL *pVal);", "IDHTMLSafe_put_AbsoluteDropMode_Proxy": "HRESULT WINAPI IDHTMLSafe_put_AbsoluteDropMode_Proxy(IDHTMLSafe *This,VARIANT_BOOL newVal);", "IDHTMLSafe_get_SnapToGridX_Proxy": "HRESULT WINAPI IDHTMLSafe_get_SnapToGridX_Proxy(IDHTMLSafe *This,__LONG32 *pVal);", "IDHTMLSafe_put_SnapToGridX_Proxy": "HRESULT WINAPI IDHTMLSafe_put_SnapToGridX_Proxy(IDHTMLSafe *This,__LONG32 newVal);", "IDHTMLSafe_get_SnapToGridY_Proxy": "HRESULT WINAPI IDHTMLSafe_get_SnapToGridY_Proxy(IDHTMLSafe *This,__LONG32 *pVal);", "IDHTMLSafe_put_SnapToGridY_Proxy": "HRESULT WINAPI IDHTMLSafe_put_SnapToGridY_Proxy(IDHTMLSafe *This,__LONG32 newVal);", "IDHTMLSafe_get_SnapToGrid_Proxy": "HRESULT WINAPI IDHTMLSafe_get_SnapToGrid_Proxy(IDHTMLSafe *This,VARIANT_BOOL *pVal);", "IDHTMLSafe_put_SnapToGrid_Proxy": "HRESULT WINAPI IDHTMLSafe_put_SnapToGrid_Proxy(IDHTMLSafe *This,VARIANT_BOOL newVal);", "IDHTMLSafe_get_IsDirty_Proxy": "HRESULT WINAPI IDHTMLSafe_get_IsDirty_Proxy(IDHTMLSafe *This,VARIANT_BOOL *pVal);", "IDHTMLSafe_get_CurrentDocumentPath_Proxy": "HRESULT WINAPI IDHTMLSafe_get_CurrentDocumentPath_Proxy(IDHTMLSafe *This,BSTR *docPath);", "IDHTMLSafe_get_BaseURL_Proxy": "HRESULT WINAPI IDHTMLSafe_get_BaseURL_Proxy(IDHTMLSafe *This,BSTR *baseURL);", "IDHTMLSafe_put_BaseURL_Proxy": "HRESULT WINAPI IDHTMLSafe_put_BaseURL_Proxy(IDHTMLSafe *This,BSTR baseURL);", "IDHTMLSafe_get_DocumentTitle_Proxy": "HRESULT WINAPI IDHTMLSafe_get_DocumentTitle_Proxy(IDHTMLSafe *This,BSTR *docTitle);", "IDHTMLSafe_get_UseDivOnCarriageReturn_Proxy": "HRESULT WINAPI IDHTMLSafe_get_UseDivOnCarriageReturn_Proxy(IDHTMLSafe *This,VARIANT_BOOL *pVal);", "IDHTMLSafe_put_UseDivOnCarriageReturn_Proxy": "HRESULT WINAPI IDHTMLSafe_put_UseDivOnCarriageReturn_Proxy(IDHTMLSafe *This,VARIANT_BOOL newVal);", "IDHTMLSafe_get_Busy_Proxy": "HRESULT WINAPI IDHTMLSafe_get_Busy_Proxy(IDHTMLSafe *This,VARIANT_BOOL *pVal);", "IDHTMLEdit_LoadDocument_Proxy": "HRESULT WINAPI IDHTMLEdit_LoadDocument_Proxy(IDHTMLEdit *This,VARIANT *pathIn,VARIANT *promptUser);", "IDHTMLEdit_SaveDocument_Proxy": "HRESULT WINAPI IDHTMLEdit_SaveDocument_Proxy(IDHTMLEdit *This,VARIANT *pathIn,VARIANT *promptUser);", "IDHTMLEdit_PrintDocument_Proxy": "HRESULT WINAPI IDHTMLEdit_PrintDocument_Proxy(IDHTMLEdit *This,VARIANT *withUI);", "IDHTMLEdit_get_BrowseMode_Proxy": "HRESULT WINAPI IDHTMLEdit_get_BrowseMode_Proxy(IDHTMLEdit *This,VARIANT_BOOL *pVal);", "IDHTMLEdit_put_BrowseMode_Proxy": "HRESULT WINAPI IDHTMLEdit_put_BrowseMode_Proxy(IDHTMLEdit *This,VARIANT_BOOL newVal);", "IDEInsertTableParam_get_NumRows_Proxy": "HRESULT WINAPI IDEInsertTableParam_get_NumRows_Proxy(IDEInsertTableParam *This,__LONG32 *pVal);", "IDEInsertTableParam_put_NumRows_Proxy": "HRESULT WINAPI IDEInsertTableParam_put_NumRows_Proxy(IDEInsertTableParam *This,__LONG32 newVal);", "IDEInsertTableParam_get_NumCols_Proxy": "HRESULT WINAPI IDEInsertTableParam_get_NumCols_Proxy(IDEInsertTableParam *This,__LONG32 *pVal);", "IDEInsertTableParam_put_NumCols_Proxy": "HRESULT WINAPI IDEInsertTableParam_put_NumCols_Proxy(IDEInsertTableParam *This,__LONG32 newVal);", "IDEInsertTableParam_get_TableAttrs_Proxy": "HRESULT WINAPI IDEInsertTableParam_get_TableAttrs_Proxy(IDEInsertTableParam *This,BSTR *pVal);", "IDEInsertTableParam_put_TableAttrs_Proxy": "HRESULT WINAPI IDEInsertTableParam_put_TableAttrs_Proxy(IDEInsertTableParam *This,BSTR newVal);", "IDEInsertTableParam_get_CellAttrs_Proxy": "HRESULT WINAPI IDEInsertTableParam_get_CellAttrs_Proxy(IDEInsertTableParam *This,BSTR *pVal);", "IDEInsertTableParam_put_CellAttrs_Proxy": "HRESULT WINAPI IDEInsertTableParam_put_CellAttrs_Proxy(IDEInsertTableParam *This,BSTR newVal);", "IDEInsertTableParam_get_Caption_Proxy": "HRESULT WINAPI IDEInsertTableParam_get_Caption_Proxy(IDEInsertTableParam *This,BSTR *pVal);", "IDEInsertTableParam_put_Caption_Proxy": "HRESULT WINAPI IDEInsertTableParam_put_Caption_Proxy(IDEInsertTableParam *This,BSTR newVal);", "PTQuerySchemaVersionSupport": "HRESULT WINAPI PTQuerySchemaVersionSupport(PCWSTR pszPrinterName, DWORD *pMaxVersion);", "PTOpenProvider": "HRESULT WINAPI PTOpenProvider(PCWSTR pszPrinterName, DWORD dwVersion, HPTPROVIDER *phProvider);", "PTOpenProviderEx": "HRESULT WINAPI PTOpenProviderEx(PCWSTR pszPrinterName, DWORD dwMaxVersion, DWORD dwPrefVersion, HPTPROVIDER *phProvider, DWORD *pUsedVersion);", "PTCloseProvider": "HRESULT WINAPI PTCloseProvider(HPTPROVIDER hProvider);", "PTReleaseMemory": "HRESULT WINAPI PTReleaseMemory(PVOID pBuffer);", "PTGetPrintCapabilities": "HRESULT WINAPI PTGetPrintCapabilities(HPTPROVIDER hProvider, IStream *pPrintTicket, IStream *pCapabilities, BSTR *pbstrErrorMessage);", "PTGetPrintDeviceCapabilities": "HRESULT WINAPI PTGetPrintDeviceCapabilities(HPTPROVIDER hProvider, IStream *pPrintTicket, IStream *pDeviceCapabilities, BSTR *pbstrErrorMessage);", "PTGetPrintDeviceResources": "HRESULT WINAPI PTGetPrintDeviceResources(HPTPROVIDER hProvider, LPCWSTR pszLocaleName, IStream *pPrintTicket, IStream *pDeviceResources, BSTR *pbstrErrorMessage);", "PTMergeAndValidatePrintTicket": "HRESULT WINAPI PTMergeAndValidatePrintTicket(HPTPROVIDER hProvider, IStream *pBaseTicket, IStream *pDeltaTicket, EPrintTicketScope scope, IStream *pResultTicket, BSTR *pbstrErrorMessage);", "PTConvertPrintTicketToDevMode": "HRESULT WINAPI PTConvertPrintTicketToDevMode(HPTPROVIDER hProvider, IStream *pPrintTicket, EDefaultDevmodeType baseDevmodeType, EPrintTicketScope scope, ULONG *pcbDevmode, PDEVMODE *ppDevmode, BSTR *pbstrErrorMessage);", "PTConvertDevModeToPrintTicket": "HRESULT WINAPI PTConvertDevModeToPrintTicket(HPTPROVIDER hProvider, ULONG cbDevmode, PDEVMODE pDevmode, EPrintTicketScope scope, IStream *pPrintTicket);", "IStringList_get_Item_Proxy": "HRESULT WINAPI IStringList_get_Item_Proxy(IStringList *This,VARIANT i,VARIANT *pVariantReturn);", "IStringList_get_Count_Proxy": "HRESULT WINAPI IStringList_get_Count_Proxy(IStringList *This,int *cStrRet);", "IStringList_get__NewEnum_Proxy": "HRESULT WINAPI IStringList_get__NewEnum_Proxy(IStringList *This,IUnknown **ppEnumReturn);", "IRequestDictionary_get_Item_Proxy": "HRESULT WINAPI IRequestDictionary_get_Item_Proxy(IRequestDictionary *This,VARIANT Var,VARIANT *pVariantReturn);", "IRequestDictionary_get__NewEnum_Proxy": "HRESULT WINAPI IRequestDictionary_get__NewEnum_Proxy(IRequestDictionary *This,IUnknown **ppEnumReturn);", "IRequestDictionary_get_Count_Proxy": "HRESULT WINAPI IRequestDictionary_get_Count_Proxy(IRequestDictionary *This,int *cStrRet);", "IRequestDictionary_get_Key_Proxy": "HRESULT WINAPI IRequestDictionary_get_Key_Proxy(IRequestDictionary *This,VARIANT VarKey,VARIANT *pvar);", "IRequest_get_Item_Proxy": "HRESULT WINAPI IRequest_get_Item_Proxy(IRequest *This,BSTR bstrVar,IDispatch **ppObjReturn);", "IRequest_get_QueryString_Proxy": "HRESULT WINAPI IRequest_get_QueryString_Proxy(IRequest *This,IRequestDictionary **ppDictReturn);", "IRequest_get_Form_Proxy": "HRESULT WINAPI IRequest_get_Form_Proxy(IRequest *This,IRequestDictionary **ppDictReturn);", "IRequest_get_Body_Proxy": "HRESULT WINAPI IRequest_get_Body_Proxy(IRequest *This,IRequestDictionary **ppDictReturn);", "IRequest_get_ServerVariables_Proxy": "HRESULT WINAPI IRequest_get_ServerVariables_Proxy(IRequest *This,IRequestDictionary **ppDictReturn);", "IRequest_get_ClientCertificate_Proxy": "HRESULT WINAPI IRequest_get_ClientCertificate_Proxy(IRequest *This,IRequestDictionary **ppDictReturn);", "IRequest_get_Cookies_Proxy": "HRESULT WINAPI IRequest_get_Cookies_Proxy(IRequest *This,IRequestDictionary **ppDictReturn);", "IRequest_get_TotalBytes_Proxy": "HRESULT WINAPI IRequest_get_TotalBytes_Proxy(IRequest *This,__LONG32 *pcbTotal);", "IRequest_BinaryRead_Proxy": "HRESULT WINAPI IRequest_BinaryRead_Proxy(IRequest *This,VARIANT *pvarCountToRead,VARIANT *pvarReturn);", "IReadCookie_get_Item_Proxy": "HRESULT WINAPI IReadCookie_get_Item_Proxy(IReadCookie *This,VARIANT Var,VARIANT *pVariantReturn);", "IReadCookie_get_HasKeys_Proxy": "HRESULT WINAPI IReadCookie_get_HasKeys_Proxy(IReadCookie *This,VARIANT_BOOL *pfHasKeys);", "IReadCookie_get__NewEnum_Proxy": "HRESULT WINAPI IReadCookie_get__NewEnum_Proxy(IReadCookie *This,IUnknown **ppEnumReturn);", "IReadCookie_get_Count_Proxy": "HRESULT WINAPI IReadCookie_get_Count_Proxy(IReadCookie *This,int *cStrRet);", "IReadCookie_get_Key_Proxy": "HRESULT WINAPI IReadCookie_get_Key_Proxy(IReadCookie *This,VARIANT VarKey,VARIANT *pvar);", "IWriteCookie_put_Item_Proxy": "HRESULT WINAPI IWriteCookie_put_Item_Proxy(IWriteCookie *This,VARIANT key,BSTR bstrValue);", "IWriteCookie_put_Expires_Proxy": "HRESULT WINAPI IWriteCookie_put_Expires_Proxy(IWriteCookie *This,DATE dtExpires);", "IWriteCookie_put_Domain_Proxy": "HRESULT WINAPI IWriteCookie_put_Domain_Proxy(IWriteCookie *This,BSTR bstrDomain);", "IWriteCookie_put_Path_Proxy": "HRESULT WINAPI IWriteCookie_put_Path_Proxy(IWriteCookie *This,BSTR bstrPath);", "IWriteCookie_put_Secure_Proxy": "HRESULT WINAPI IWriteCookie_put_Secure_Proxy(IWriteCookie *This,VARIANT_BOOL fSecure);", "IWriteCookie_get_HasKeys_Proxy": "HRESULT WINAPI IWriteCookie_get_HasKeys_Proxy(IWriteCookie *This,VARIANT_BOOL *pfHasKeys);", "IWriteCookie_get__NewEnum_Proxy": "HRESULT WINAPI IWriteCookie_get__NewEnum_Proxy(IWriteCookie *This,IUnknown **ppEnumReturn);", "IResponse_get_Buffer_Proxy": "HRESULT WINAPI IResponse_get_Buffer_Proxy(IResponse *This,VARIANT_BOOL *fIsBuffering);", "IResponse_put_Buffer_Proxy": "HRESULT WINAPI IResponse_put_Buffer_Proxy(IResponse *This,VARIANT_BOOL fIsBuffering);", "IResponse_get_ContentType_Proxy": "HRESULT WINAPI IResponse_get_ContentType_Proxy(IResponse *This,BSTR *pbstrContentTypeRet);", "IResponse_put_ContentType_Proxy": "HRESULT WINAPI IResponse_put_ContentType_Proxy(IResponse *This,BSTR bstrContentType);", "IResponse_get_Expires_Proxy": "HRESULT WINAPI IResponse_get_Expires_Proxy(IResponse *This,VARIANT *pvarExpiresMinutesRet);", "IResponse_put_Expires_Proxy": "HRESULT WINAPI IResponse_put_Expires_Proxy(IResponse *This,__LONG32 lExpiresMinutes);", "IResponse_get_ExpiresAbsolute_Proxy": "HRESULT WINAPI IResponse_get_ExpiresAbsolute_Proxy(IResponse *This,VARIANT *pvarExpiresRet);", "IResponse_put_ExpiresAbsolute_Proxy": "HRESULT WINAPI IResponse_put_ExpiresAbsolute_Proxy(IResponse *This,DATE dtExpires);", "IResponse_get_Cookies_Proxy": "HRESULT WINAPI IResponse_get_Cookies_Proxy(IResponse *This,IRequestDictionary **ppCookies);", "IResponse_get_Status_Proxy": "HRESULT WINAPI IResponse_get_Status_Proxy(IResponse *This,BSTR *pbstrStatusRet);", "IResponse_put_Status_Proxy": "HRESULT WINAPI IResponse_put_Status_Proxy(IResponse *This,BSTR bstrStatus);", "IResponse_Add_Proxy": "HRESULT WINAPI IResponse_Add_Proxy(IResponse *This,BSTR bstrHeaderValue,BSTR bstrHeaderName);", "IResponse_AddHeader_Proxy": "HRESULT WINAPI IResponse_AddHeader_Proxy(IResponse *This,BSTR bstrHeaderName,BSTR bstrHeaderValue);", "IResponse_AppendToLog_Proxy": "HRESULT WINAPI IResponse_AppendToLog_Proxy(IResponse *This,BSTR bstrLogEntry);", "IResponse_BinaryWrite_Proxy": "HRESULT WINAPI IResponse_BinaryWrite_Proxy(IResponse *This,VARIANT varInput);", "IResponse_Clear_Proxy": "HRESULT WINAPI IResponse_Clear_Proxy(IResponse *This);", "IResponse_End_Proxy": "HRESULT WINAPI IResponse_End_Proxy(IResponse *This);", "IResponse_Flush_Proxy": "HRESULT WINAPI IResponse_Flush_Proxy(IResponse *This);", "IResponse_Redirect_Proxy": "HRESULT WINAPI IResponse_Redirect_Proxy(IResponse *This,BSTR bstrURL);", "IResponse_Write_Proxy": "HRESULT WINAPI IResponse_Write_Proxy(IResponse *This,VARIANT varText);", "IResponse_WriteBlock_Proxy": "HRESULT WINAPI IResponse_WriteBlock_Proxy(IResponse *This,short iBlockNumber);", "IResponse_IsClientConnected_Proxy": "HRESULT WINAPI IResponse_IsClientConnected_Proxy(IResponse *This,VARIANT_BOOL *pfIsClientConnected);", "IResponse_get_CharSet_Proxy": "HRESULT WINAPI IResponse_get_CharSet_Proxy(IResponse *This,BSTR *pbstrCharSetRet);", "IResponse_put_CharSet_Proxy": "HRESULT WINAPI IResponse_put_CharSet_Proxy(IResponse *This,BSTR bstrCharSet);", "IResponse_Pics_Proxy": "HRESULT WINAPI IResponse_Pics_Proxy(IResponse *This,BSTR bstrHeaderValue);", "IResponse_get_CacheControl_Proxy": "HRESULT WINAPI IResponse_get_CacheControl_Proxy(IResponse *This,BSTR *pbstrCacheControl);", "IResponse_put_CacheControl_Proxy": "HRESULT WINAPI IResponse_put_CacheControl_Proxy(IResponse *This,BSTR bstrCacheControl);", "IVariantDictionary_get_Item_Proxy": "HRESULT WINAPI IVariantDictionary_get_Item_Proxy(IVariantDictionary *This,VARIANT VarKey,VARIANT *pvar);", "IVariantDictionary_put_Item_Proxy": "HRESULT WINAPI IVariantDictionary_put_Item_Proxy(IVariantDictionary *This,VARIANT VarKey,VARIANT var);", "IVariantDictionary_putref_Item_Proxy": "HRESULT WINAPI IVariantDictionary_putref_Item_Proxy(IVariantDictionary *This,VARIANT VarKey,VARIANT var);", "IVariantDictionary_get_Key_Proxy": "HRESULT WINAPI IVariantDictionary_get_Key_Proxy(IVariantDictionary *This,VARIANT VarKey,VARIANT *pvar);", "IVariantDictionary_get_Count_Proxy": "HRESULT WINAPI IVariantDictionary_get_Count_Proxy(IVariantDictionary *This,int *cStrRet);", "IVariantDictionary_get__NewEnum_Proxy": "HRESULT WINAPI IVariantDictionary_get__NewEnum_Proxy(IVariantDictionary *This,IUnknown **ppEnumReturn);", "IVariantDictionary_Remove_Proxy": "HRESULT WINAPI IVariantDictionary_Remove_Proxy(IVariantDictionary *This,VARIANT VarKey);", "IVariantDictionary_RemoveAll_Proxy": "HRESULT WINAPI IVariantDictionary_RemoveAll_Proxy(IVariantDictionary *This);", "ISessionObject_get_SessionID_Proxy": "HRESULT WINAPI ISessionObject_get_SessionID_Proxy(ISessionObject *This,BSTR *pbstrRet);", "ISessionObject_get_Value_Proxy": "HRESULT WINAPI ISessionObject_get_Value_Proxy(ISessionObject *This,BSTR bstrValue,VARIANT *pvar);", "ISessionObject_put_Value_Proxy": "HRESULT WINAPI ISessionObject_put_Value_Proxy(ISessionObject *This,BSTR bstrValue,VARIANT var);", "ISessionObject_putref_Value_Proxy": "HRESULT WINAPI ISessionObject_putref_Value_Proxy(ISessionObject *This,BSTR bstrValue,VARIANT var);", "ISessionObject_get_Timeout_Proxy": "HRESULT WINAPI ISessionObject_get_Timeout_Proxy(ISessionObject *This,__LONG32 *plvar);", "ISessionObject_put_Timeout_Proxy": "HRESULT WINAPI ISessionObject_put_Timeout_Proxy(ISessionObject *This,__LONG32 lvar);", "ISessionObject_Abandon_Proxy": "HRESULT WINAPI ISessionObject_Abandon_Proxy(ISessionObject *This);", "ISessionObject_get_CodePage_Proxy": "HRESULT WINAPI ISessionObject_get_CodePage_Proxy(ISessionObject *This,__LONG32 *plvar);", "ISessionObject_put_CodePage_Proxy": "HRESULT WINAPI ISessionObject_put_CodePage_Proxy(ISessionObject *This,__LONG32 lvar);", "ISessionObject_get_LCID_Proxy": "HRESULT WINAPI ISessionObject_get_LCID_Proxy(ISessionObject *This,__LONG32 *plvar);", "ISessionObject_put_LCID_Proxy": "HRESULT WINAPI ISessionObject_put_LCID_Proxy(ISessionObject *This,__LONG32 lvar);", "ISessionObject_get_StaticObjects_Proxy": "HRESULT WINAPI ISessionObject_get_StaticObjects_Proxy(ISessionObject *This,IVariantDictionary **ppTaggedObjects);", "ISessionObject_get_Contents_Proxy": "HRESULT WINAPI ISessionObject_get_Contents_Proxy(ISessionObject *This,IVariantDictionary **ppProperties);", "IApplicationObject_get_Value_Proxy": "HRESULT WINAPI IApplicationObject_get_Value_Proxy(IApplicationObject *This,BSTR bstrValue,VARIANT *pvar);", "IApplicationObject_put_Value_Proxy": "HRESULT WINAPI IApplicationObject_put_Value_Proxy(IApplicationObject *This,BSTR bstrValue,VARIANT var);", "IApplicationObject_putref_Value_Proxy": "HRESULT WINAPI IApplicationObject_putref_Value_Proxy(IApplicationObject *This,BSTR bstrValue,VARIANT var);", "IApplicationObject_Lock_Proxy": "HRESULT WINAPI IApplicationObject_Lock_Proxy(IApplicationObject *This);", "IApplicationObject_UnLock_Proxy": "HRESULT WINAPI IApplicationObject_UnLock_Proxy(IApplicationObject *This);", "IApplicationObject_get_StaticObjects_Proxy": "HRESULT WINAPI IApplicationObject_get_StaticObjects_Proxy(IApplicationObject *This,IVariantDictionary **ppProperties);", "IApplicationObject_get_Contents_Proxy": "HRESULT WINAPI IApplicationObject_get_Contents_Proxy(IApplicationObject *This,IVariantDictionary **ppProperties);", "IASPError_get_ASPCode_Proxy": "HRESULT WINAPI IASPError_get_ASPCode_Proxy(IASPError *This,BSTR *pbstrASPCode);", "IASPError_get_Number_Proxy": "HRESULT WINAPI IASPError_get_Number_Proxy(IASPError *This,__LONG32 *plNumber);", "IASPError_get_Category_Proxy": "HRESULT WINAPI IASPError_get_Category_Proxy(IASPError *This,BSTR *pbstrSource);", "IASPError_get_File_Proxy": "HRESULT WINAPI IASPError_get_File_Proxy(IASPError *This,BSTR *pbstrFileName);", "IASPError_get_Line_Proxy": "HRESULT WINAPI IASPError_get_Line_Proxy(IASPError *This,__LONG32 *plLineNumber);", "IASPError_get_Description_Proxy": "HRESULT WINAPI IASPError_get_Description_Proxy(IASPError *This,BSTR *pbstrDescription);", "IASPError_get_ASPDescription_Proxy": "HRESULT WINAPI IASPError_get_ASPDescription_Proxy(IASPError *This,BSTR *pbstrDescription);", "IASPError_get_Column_Proxy": "HRESULT WINAPI IASPError_get_Column_Proxy(IASPError *This,__LONG32 *plColumn);", "IASPError_get_Source_Proxy": "HRESULT WINAPI IASPError_get_Source_Proxy(IASPError *This,BSTR *pbstrLineText);", "IServer_get_ScriptTimeout_Proxy": "HRESULT WINAPI IServer_get_ScriptTimeout_Proxy(IServer *This,__LONG32 *plTimeoutSeconds);", "IServer_put_ScriptTimeout_Proxy": "HRESULT WINAPI IServer_put_ScriptTimeout_Proxy(IServer *This,__LONG32 lTimeoutSeconds);", "IServer_CreateObject_Proxy": "HRESULT WINAPI IServer_CreateObject_Proxy(IServer *This,BSTR bstrProgID,IDispatch **ppDispObject);", "IServer_HTMLEncode_Proxy": "HRESULT WINAPI IServer_HTMLEncode_Proxy(IServer *This,BSTR bstrIn,BSTR *pbstrEncoded);", "IServer_MapPath_Proxy": "HRESULT WINAPI IServer_MapPath_Proxy(IServer *This,BSTR bstrLogicalPath,BSTR *pbstrPhysicalPath);", "IServer_URLEncode_Proxy": "HRESULT WINAPI IServer_URLEncode_Proxy(IServer *This,BSTR bstrIn,BSTR *pbstrEncoded);", "IServer_URLPathEncode_Proxy": "HRESULT WINAPI IServer_URLPathEncode_Proxy(IServer *This,BSTR bstrIn,BSTR *pbstrEncoded);", "IServer_Execute_Proxy": "HRESULT WINAPI IServer_Execute_Proxy(IServer *This,BSTR bstrLogicalPath);", "IServer_Transfer_Proxy": "HRESULT WINAPI IServer_Transfer_Proxy(IServer *This,BSTR bstrLogicalPath);", "IServer_GetLastError_Proxy": "HRESULT WINAPI IServer_GetLastError_Proxy(IServer *This,IASPError **ppASPErrorObject);", "IScriptingContext_get_Request_Proxy": "HRESULT WINAPI IScriptingContext_get_Request_Proxy(IScriptingContext *This,IRequest **ppRequest);", "IScriptingContext_get_Response_Proxy": "HRESULT WINAPI IScriptingContext_get_Response_Proxy(IScriptingContext *This,IResponse **ppResponse);", "IScriptingContext_get_Server_Proxy": "HRESULT WINAPI IScriptingContext_get_Server_Proxy(IScriptingContext *This,IServer **ppServer);", "IScriptingContext_get_Session_Proxy": "HRESULT WINAPI IScriptingContext_get_Session_Proxy(IScriptingContext *This,ISessionObject **ppSession);", "IScriptingContext_get_Application_Proxy": "HRESULT WINAPI IScriptingContext_get_Application_Proxy(IScriptingContext *This,IApplicationObject **ppApplication);", "ASN1BEREncCharString": "extern ASN1_PUBLIC int WINAPI ASN1BEREncCharString(ASN1encoding_t enc,ASN1uint32_t tag,ASN1uint32_t,ASN1char_t *);", "ASN1BEREncChar16String": "extern ASN1_PUBLIC int WINAPI ASN1BEREncChar16String(ASN1encoding_t enc,ASN1uint32_t tag,ASN1uint32_t,ASN1char16_t *);", "ASN1BEREncChar32String": "extern ASN1_PUBLIC int WINAPI ASN1BEREncChar32String(ASN1encoding_t enc,ASN1uint32_t tag,ASN1uint32_t,ASN1char32_t *);", "ASN1BEREncOctetString": "extern ASN1_PUBLIC int WINAPI ASN1BEREncOctetString(ASN1encoding_t enc,ASN1uint32_t tag,ASN1uint32_t len,ASN1octet_t *val);", "ASN1BEREncBitString": "extern ASN1_PUBLIC int WINAPI ASN1BEREncBitString(ASN1encoding_t enc,ASN1uint32_t tag,ASN1uint32_t,ASN1octet_t *);", "ASN1BEREncDouble": "extern ASN1_PUBLIC int WINAPI ASN1BEREncDouble(ASN1encoding_t enc,ASN1uint32_t tag,double);", "ASN1BEREncGeneralizedTime": "extern ASN1_PUBLIC int WINAPI ASN1BEREncGeneralizedTime(ASN1encoding_t enc,ASN1uint32_t tag,ASN1generalizedtime_t *);", "ASN1BEREncS32": "extern ASN1_PUBLIC int WINAPI ASN1BEREncS32(ASN1encoding_t enc,ASN1uint32_t tag,ASN1int32_t);", "ASN1BEREncSX": "extern ASN1_PUBLIC int WINAPI ASN1BEREncSX(ASN1encoding_t enc,ASN1uint32_t tag,ASN1intx_t *);", "ASN1BEREncZeroMultibyteString": "extern ASN1_PUBLIC int WINAPI ASN1BEREncZeroMultibyteString(ASN1encoding_t enc,ASN1uint32_t tag,ASN1ztcharstring_t);", "ASN1BEREncMultibyteString": "extern ASN1_PUBLIC int WINAPI ASN1BEREncMultibyteString(ASN1encoding_t enc,ASN1uint32_t tag,ASN1charstring_t *);", "ASN1BEREncNull": "extern ASN1_PUBLIC int WINAPI ASN1BEREncNull(ASN1encoding_t enc,ASN1uint32_t tag);", "ASN1BEREncObjectIdentifier": "extern ASN1_PUBLIC int WINAPI ASN1BEREncObjectIdentifier(ASN1encoding_t enc,ASN1uint32_t tag,ASN1objectidentifier_t *);", "ASN1BEREncObjectIdentifier2": "extern ASN1_PUBLIC int WINAPI ASN1BEREncObjectIdentifier2(ASN1encoding_t enc,ASN1uint32_t tag,ASN1objectidentifier2_t *val);", "ASN1BEREncRemoveZeroBits": "extern ASN1_PUBLIC int WINAPI ASN1BEREncRemoveZeroBits(ASN1uint32_t *,ASN1octet_t *);", "ASN1BEREncUTCTime": "extern ASN1_PUBLIC int WINAPI ASN1BEREncUTCTime(ASN1encoding_t enc,ASN1uint32_t tag,ASN1utctime_t *);", "ASN1BEREncFlush": "extern ASN1_PUBLIC int WINAPI ASN1BEREncFlush(ASN1encoding_t enc);", "ASN1BEREncOpenType": "extern ASN1_PUBLIC int WINAPI ASN1BEREncOpenType(ASN1encoding_t enc,ASN1open_t *);", "ASN1BERDecExplicitTag": "extern ASN1_PUBLIC int WINAPI ASN1BERDecExplicitTag(ASN1decoding_t dec,ASN1uint32_t tag,ASN1decoding_t *dd,ASN1octet_t **di);", "ASN1BERDecEndOfContents": "extern ASN1_PUBLIC int WINAPI ASN1BERDecEndOfContents(ASN1decoding_t dec,ASN1decoding_t dd,ASN1octet_t *di);", "ASN1BERDecOctetString": "extern ASN1_PUBLIC int WINAPI ASN1BERDecOctetString(ASN1decoding_t dec,ASN1uint32_t tag,ASN1octetstring_t *val);", "ASN1BERDecOctetString2": "extern ASN1_PUBLIC int WINAPI ASN1BERDecOctetString2(ASN1decoding_t dec,ASN1uint32_t tag,ASN1octetstring_t *val);", "ASN1BERDecBitString": "extern ASN1_PUBLIC int WINAPI ASN1BERDecBitString(ASN1decoding_t dec,ASN1uint32_t tag,ASN1bitstring_t *);", "ASN1BERDecBitString2": "extern ASN1_PUBLIC int WINAPI ASN1BERDecBitString2(ASN1decoding_t dec,ASN1uint32_t tag,ASN1bitstring_t *);", "ASN1BERDecChar16String": "extern ASN1_PUBLIC int WINAPI ASN1BERDecChar16String(ASN1decoding_t dec,ASN1uint32_t tag,ASN1char16string_t *);", "ASN1BERDecChar32String": "extern ASN1_PUBLIC int WINAPI ASN1BERDecChar32String(ASN1decoding_t dec,ASN1uint32_t tag,ASN1char32string_t *);", "ASN1BERDecCharString": "extern ASN1_PUBLIC int WINAPI ASN1BERDecCharString(ASN1decoding_t dec,ASN1uint32_t tag,ASN1charstring_t *);", "ASN1BERDecDouble": "extern ASN1_PUBLIC int WINAPI ASN1BERDecDouble(ASN1decoding_t dec,ASN1uint32_t tag,double *);", "ASN1BERDecGeneralizedTime": "extern ASN1_PUBLIC int WINAPI ASN1BERDecGeneralizedTime(ASN1decoding_t dec,ASN1uint32_t tag,ASN1generalizedtime_t *);", "ASN1BERDecZeroMultibyteString": "extern ASN1_PUBLIC int WINAPI ASN1BERDecZeroMultibyteString(ASN1decoding_t dec,ASN1uint32_t tag,ASN1ztcharstring_t *);", "ASN1BERDecMultibyteString": "extern ASN1_PUBLIC int WINAPI ASN1BERDecMultibyteString(ASN1decoding_t dec,ASN1uint32_t tag,ASN1charstring_t *);", "ASN1BERDecNull": "extern ASN1_PUBLIC int WINAPI ASN1BERDecNull(ASN1decoding_t dec,ASN1uint32_t tag);", "ASN1BERDecObjectIdentifier": "extern ASN1_PUBLIC int WINAPI ASN1BERDecObjectIdentifier(ASN1decoding_t dec,ASN1uint32_t tag,ASN1objectidentifier_t *);", "ASN1BERDecObjectIdentifier2": "extern ASN1_PUBLIC int WINAPI ASN1BERDecObjectIdentifier2(ASN1decoding_t dec,ASN1uint32_t tag,ASN1objectidentifier2_t *);", "ASN1BERDecS8Val": "extern ASN1_PUBLIC int WINAPI ASN1BERDecS8Val(ASN1decoding_t dec,ASN1uint32_t tag,ASN1int8_t *);", "ASN1BERDecS16Val": "extern ASN1_PUBLIC int WINAPI ASN1BERDecS16Val(ASN1decoding_t dec,ASN1uint32_t tag,ASN1int16_t *);", "ASN1BERDecS32Val": "extern ASN1_PUBLIC int WINAPI ASN1BERDecS32Val(ASN1decoding_t dec,ASN1uint32_t tag,ASN1int32_t *);", "ASN1BERDecSXVal": "extern ASN1_PUBLIC int WINAPI ASN1BERDecSXVal(ASN1decoding_t dec,ASN1uint32_t tag,ASN1intx_t *);", "ASN1BERDecU8Val": "extern ASN1_PUBLIC int WINAPI ASN1BERDecU8Val(ASN1decoding_t dec,ASN1uint32_t tag,ASN1uint8_t *);", "ASN1BERDecU16Val": "extern ASN1_PUBLIC int WINAPI ASN1BERDecU16Val(ASN1decoding_t dec,ASN1uint32_t tag,ASN1uint16_t *);", "ASN1BERDecUTCTime": "extern ASN1_PUBLIC int WINAPI ASN1BERDecUTCTime(ASN1decoding_t dec,ASN1uint32_t tag,ASN1utctime_t *);", "ASN1BERDecZeroChar16String": "extern ASN1_PUBLIC int WINAPI ASN1BERDecZeroChar16String(ASN1decoding_t dec,ASN1uint32_t tag,ASN1ztchar16string_t *);", "ASN1BERDecZeroChar32String": "extern ASN1_PUBLIC int WINAPI ASN1BERDecZeroChar32String(ASN1decoding_t dec,ASN1uint32_t tag,ASN1ztchar32string_t *);", "ASN1BERDecZeroCharString": "extern ASN1_PUBLIC int WINAPI ASN1BERDecZeroCharString(ASN1decoding_t dec,ASN1uint32_t tag,ASN1ztcharstring_t *);", "ASN1BERDecSkip": "extern ASN1_PUBLIC int WINAPI ASN1BERDecSkip(ASN1decoding_t dec);", "ASN1BERDecFlush": "extern ASN1_PUBLIC int WINAPI ASN1BERDecFlush(ASN1decoding_t dec);", "ASN1BERDecOpenType": "extern ASN1_PUBLIC int WINAPI ASN1BERDecOpenType(ASN1decoding_t dec,ASN1open_t *);", "ASN1BERDecOpenType2": "extern ASN1_PUBLIC int WINAPI ASN1BERDecOpenType2(ASN1decoding_t dec,ASN1open_t *);", "ASN1BEREncCheck": "extern ASN1_PUBLIC int WINAPI ASN1BEREncCheck(ASN1encoding_t enc,ASN1uint32_t noctets);", "ASN1BEREncTag": "extern ASN1_PUBLIC int WINAPI ASN1BEREncTag(ASN1encoding_t enc,ASN1uint32_t tag);", "ASN1BEREncExplicitTag": "extern ASN1_PUBLIC int WINAPI ASN1BEREncExplicitTag(ASN1encoding_t enc,ASN1uint32_t tag,ASN1uint32_t *pLengthOffset);", "ASN1BEREncEndOfContents": "extern ASN1_PUBLIC int WINAPI ASN1BEREncEndOfContents(ASN1encoding_t enc,ASN1uint32_t LengthOffset);", "ASN1BEREncLength": "extern ASN1_PUBLIC int WINAPI ASN1BEREncLength(ASN1encoding_t enc,ASN1uint32_t len);", "ASN1BERDecCheck": "extern ASN1_PUBLIC int WINAPI ASN1BERDecCheck(ASN1decoding_t dec,ASN1uint32_t len);", "ASN1BERDecTag": "extern ASN1_PUBLIC int WINAPI ASN1BERDecTag(ASN1decoding_t dec,ASN1uint32_t tag,ASN1uint32_t *constructed);", "ASN1BERDecLength": "extern ASN1_PUBLIC int WINAPI ASN1BERDecLength(ASN1decoding_t dec,ASN1uint32_t *len,ASN1uint32_t *infinite);", "ASN1BERDecNotEndOfContents": "extern ASN1_PUBLIC int WINAPI ASN1BERDecNotEndOfContents(ASN1decoding_t dec,ASN1octet_t *di);", "ASN1BERDecPeekTag": "extern ASN1_PUBLIC int WINAPI ASN1BERDecPeekTag(ASN1decoding_t dec,ASN1uint32_t *tag);", "ASN1BEREncU32": "extern ASN1_PUBLIC int WINAPI ASN1BEREncU32(ASN1encoding_t enc,ASN1uint32_t tag,ASN1uint32_t);", "ASN1BERDecU32Val": "extern ASN1_PUBLIC int WINAPI ASN1BERDecU32Val(ASN1decoding_t dec,ASN1uint32_t tag,ASN1uint32_t *val);", "ASN1BEREncBool": "extern ASN1_PUBLIC int WINAPI ASN1BEREncBool(ASN1encoding_t enc,ASN1uint32_t tag,ASN1bool_t);", "ASN1BERDecBool": "extern ASN1_PUBLIC int WINAPI ASN1BERDecBool(ASN1decoding_t dec,ASN1uint32_t tag,ASN1bool_t *);", "ASN1BEREncEoid": "extern ASN1_PUBLIC int WINAPI ASN1BEREncEoid(ASN1encoding_t enc,ASN1uint32_t tag,ASN1encodedOID_t *);", "ASN1BERDecEoid": "extern ASN1_PUBLIC int WINAPI ASN1BERDecEoid(ASN1decoding_t dec,ASN1uint32_t tag,ASN1encodedOID_t *);", "ASN1BERDotVal2Eoid": "extern ASN1_PUBLIC int WINAPI ASN1BERDotVal2Eoid(ASN1encoding_t enc,char *pszDotVal,ASN1encodedOID_t *pOut);", "ASN1BEREoid2DotVal": "extern ASN1_PUBLIC int WINAPI ASN1BEREoid2DotVal(ASN1decoding_t dec,ASN1encodedOID_t *pIn,char **ppszDotVal);", "ASN1BEREoid_free": "extern ASN1_PUBLIC void WINAPI ASN1BEREoid_free(ASN1encodedOID_t *);", "ASN1BEREncUTF8String": "extern ASN1_PUBLIC int WINAPI ASN1BEREncUTF8String(ASN1encoding_t enc,ASN1uint32_t tag,ASN1uint32_t length,WCHAR *value);", "ASN1BERDecUTF8String": "extern ASN1_PUBLIC int WINAPI ASN1BERDecUTF8String(ASN1decoding_t dec,ASN1uint32_t tag,ASN1wstring_t *val);", "ASN1CEREncCharString": "extern ASN1_PUBLIC int WINAPI ASN1CEREncCharString(ASN1encoding_t enc,ASN1uint32_t,ASN1uint32_t,ASN1char_t *);", "ASN1CEREncChar16String": "extern ASN1_PUBLIC int WINAPI ASN1CEREncChar16String(ASN1encoding_t enc,ASN1uint32_t,ASN1uint32_t,ASN1char16_t *);", "ASN1CEREncChar32String": "extern ASN1_PUBLIC int WINAPI ASN1CEREncChar32String(ASN1encoding_t enc,ASN1uint32_t,ASN1uint32_t,ASN1char32_t *);", "ASN1CEREncBitString": "extern ASN1_PUBLIC int WINAPI ASN1CEREncBitString(ASN1encoding_t enc,ASN1uint32_t,ASN1uint32_t,ASN1octet_t *);", "ASN1CEREncGeneralizedTime": "extern ASN1_PUBLIC int WINAPI ASN1CEREncGeneralizedTime(ASN1encoding_t enc,ASN1uint32_t,ASN1generalizedtime_t *);", "ASN1CEREncZeroMultibyteString": "extern ASN1_PUBLIC int WINAPI ASN1CEREncZeroMultibyteString(ASN1encoding_t enc,ASN1uint32_t,ASN1ztcharstring_t);", "ASN1CEREncMultibyteString": "extern ASN1_PUBLIC int WINAPI ASN1CEREncMultibyteString(ASN1encoding_t enc,ASN1uint32_t,ASN1charstring_t *);", "ASN1CEREncOctetString": "extern ASN1_PUBLIC int WINAPI ASN1CEREncOctetString(ASN1encoding_t enc,ASN1uint32_t,ASN1uint32_t,ASN1octet_t *);", "ASN1CEREncUTCTime": "extern ASN1_PUBLIC int WINAPI ASN1CEREncUTCTime(ASN1encoding_t enc,ASN1uint32_t,ASN1utctime_t *);", "ASN1CEREncBeginBlk": "extern ASN1_PUBLIC int WINAPI ASN1CEREncBeginBlk(ASN1encoding_t enc,ASN1blocktype_e eBlkType,void **ppBlk);", "ASN1CEREncNewBlkElement": "extern ASN1_PUBLIC int WINAPI ASN1CEREncNewBlkElement(void *pBlk,ASN1encoding_t *enc2);", "ASN1CEREncFlushBlkElement": "extern ASN1_PUBLIC int WINAPI ASN1CEREncFlushBlkElement(void *pBlk);", "ASN1CEREncEndBlk": "extern ASN1_PUBLIC int WINAPI ASN1CEREncEndBlk(void *pBlk);", "ASN1BEREncEmbeddedPdv": "extern ASN1_PUBLIC int WINAPI ASN1BEREncEmbeddedPdv(ASN1encoding_t enc,ASN1uint32_t tag,ASN1embeddedpdv_t *);", "ASN1BEREncExternal": "extern ASN1_PUBLIC int WINAPI ASN1BEREncExternal(ASN1encoding_t enc,ASN1uint32_t tag,ASN1external_t *);", "ASN1BEREncCharacterString": "extern ASN1_PUBLIC int WINAPI ASN1BEREncCharacterString(ASN1encoding_t enc,ASN1uint32_t tag,ASN1characterstring_t *);", "ASN1BERDecEmbeddedPdv": "extern ASN1_PUBLIC int WINAPI ASN1BERDecEmbeddedPdv(ASN1decoding_t dec,ASN1uint32_t tag,ASN1embeddedpdv_t *);", "ASN1BERDecExternal": "extern ASN1_PUBLIC int WINAPI ASN1BERDecExternal(ASN1decoding_t dec,ASN1uint32_t tag,ASN1external_t *);", "ASN1BERDecCharacterString": "extern ASN1_PUBLIC int WINAPI ASN1BERDecCharacterString(ASN1decoding_t dec,ASN1uint32_t tag,ASN1characterstring_t *);", "CreateToolhelp32Snapshot": "HANDLE WINAPI CreateToolhelp32Snapshot(DWORD dwFlags,DWORD th32ProcessID);", "Heap32ListFirst": "WINBOOL WINAPI Heap32ListFirst(HANDLE hSnapshot,LPHEAPLIST32 lphl);", "Heap32ListNext": "WINBOOL WINAPI Heap32ListNext(HANDLE hSnapshot,LPHEAPLIST32 lphl);", "Heap32First": "WINBOOL WINAPI Heap32First(LPHEAPENTRY32 lphe,DWORD th32ProcessID,ULONG_PTR th32HeapID);", "Heap32Next": "WINBOOL WINAPI Heap32Next(LPHEAPENTRY32 lphe);", "Toolhelp32ReadProcessMemory": "WINBOOL WINAPI Toolhelp32ReadProcessMemory(DWORD th32ProcessID,LPCVOID lpBaseAddress,LPVOID lpBuffer,SIZE_T cbRead,SIZE_T *lpNumberOfBytesRead);", "Process32FirstW": "WINBOOL WINAPI Process32FirstW(HANDLE hSnapshot,LPPROCESSENTRY32W lppe);", "Process32NextW": "WINBOOL WINAPI Process32NextW(HANDLE hSnapshot,LPPROCESSENTRY32W lppe);", "Process32First": "WINBOOL WINAPI Process32First(HANDLE hSnapshot,LPPROCESSENTRY32 lppe);", "Process32Next": "WINBOOL WINAPI Process32Next(HANDLE hSnapshot,LPPROCESSENTRY32 lppe);", "Thread32First": "WINBOOL WINAPI Thread32First(HANDLE hSnapshot,LPTHREADENTRY32 lpte);", "Thread32Next": "WINBOOL WINAPI Thread32Next(HANDLE hSnapshot,LPTHREADENTRY32 lpte);", "Module32FirstW": "WINBOOL WINAPI Module32FirstW(HANDLE hSnapshot,LPMODULEENTRY32W lpme);", "Module32NextW": "WINBOOL WINAPI Module32NextW(HANDLE hSnapshot,LPMODULEENTRY32W lpme);", "Module32First": "WINBOOL WINAPI Module32First(HANDLE hSnapshot,LPMODULEENTRY32 lpme);", "Module32Next": "WINBOOL WINAPI Module32Next(HANDLE hSnapshot,LPMODULEENTRY32 lpme);", "IMPGetIMEA": "WINBOOL WINAPI IMPGetIMEA (HWND, LPIMEPROA);", "IMPGetIMEW": "WINBOOL WINAPI IMPGetIMEW (HWND, LPIMEPROW);", "IMPQueryIMEA": "WINBOOL WINAPI IMPQueryIMEA (LPIMEPROA);", "IMPQueryIMEW": "WINBOOL WINAPI IMPQueryIMEW (LPIMEPROW);", "IMPSetIMEA": "WINBOOL WINAPI IMPSetIMEA (HWND, LPIMEPROA);", "IMPSetIMEW": "WINBOOL WINAPI IMPSetIMEW (HWND, LPIMEPROW);", "WINNLSGetIMEHotkey": "UINT WINAPI WINNLSGetIMEHotkey (HWND);", "WINNLSEnableIME": "WINBOOL WINAPI WINNLSEnableIME (HWND, WINBOOL);", "WINNLSGetEnableStatus": "WINBOOL WINAPI WINNLSGetEnableStatus (HWND);", "PerfCreateInstance": "WINADVAPI PPERF_COUNTERSET_INSTANCE WINAPI PerfCreateInstance(", "PerfDecrementULongCounterValue": "WINADVAPI ULONG WINAPI PerfDecrementULongCounterValue(", "PerfDecrementULongLongCounterValue": "WINADVAPI ULONG WINAPI PerfDecrementULongLongCounterValue(", "PerfDeleteInstance": "WINADVAPI ULONG WINAPI PerfDeleteInstance(", "PerfIncrementULongCounterValue": "WINADVAPI ULONG WINAPI PerfIncrementULongCounterValue(", "PerfIncrementULongLongCounterValue": "WINADVAPI ULONG WINAPI PerfIncrementULongLongCounterValue(", "PerfQueryInstance": "WINADVAPI PPERF_COUNTERSET_INSTANCE WINAPI PerfQueryInstance(", "PerfSetCounterRefValue": "WINADVAPI ULONG WINAPI PerfSetCounterRefValue(", "PerfSetCounterSetInfo": "WINADVAPI ULONG WINAPI PerfSetCounterSetInfo(", "PerfSetULongCounterValue": "WINADVAPI ULONG WINAPI PerfSetULongCounterValue(", "PerfSetULongLongCounterValue": "WINADVAPI ULONG WINAPI PerfSetULongLongCounterValue(", "PerfStartProvider": "WINADVAPI ULONG WINAPI PerfStartProvider(", "PerfStartProviderEx": "WINADVAPI ULONG WINAPI PerfStartProviderEx(", "PerfStopProvider": "WINADVAPI ULONG WINAPI PerfStopProvider(", "MprAdminConnectionEnum": "DWORD WINAPI MprAdminConnectionEnum(RAS_SERVER_HANDLE hRasServer,DWORD dwLevel,LPBYTE *lplpbBuffer,DWORD dwPrefMaxLen,LPDWORD lpdwEntriesRead,LPDWORD lpdwTotalEntries,LPDWORD lpdwResumeHandle);", "MprAdminPortEnum": "DWORD WINAPI MprAdminPortEnum(RAS_SERVER_HANDLE hRasServer,DWORD dwLevel,HANDLE hConnection,LPBYTE *lplpbBuffer,DWORD dwPrefMaxLen,LPDWORD lpdwEntriesRead,LPDWORD lpdwTotalEntries,LPDWORD lpdwResumeHandle);", "MprAdminConnectionGetInfo": "DWORD WINAPI MprAdminConnectionGetInfo(RAS_SERVER_HANDLE hRasServer,DWORD dwLevel,HANDLE hConnection,LPBYTE *lplpbBuffer);", "MprAdminPortGetInfo": "DWORD WINAPI MprAdminPortGetInfo(RAS_SERVER_HANDLE hRasServer,DWORD dwLevel,HANDLE hPort,LPBYTE *lplpbBuffer);", "MprAdminConnectionClearStats": "DWORD WINAPI MprAdminConnectionClearStats(RAS_SERVER_HANDLE hRasServer,HANDLE hConnection);", "MprAdminPortClearStats": "DWORD WINAPI MprAdminPortClearStats(RAS_SERVER_HANDLE hRasServer,HANDLE hPort);", "MprAdminPortReset": "DWORD WINAPI MprAdminPortReset(RAS_SERVER_HANDLE hRasServer,HANDLE hPort);", "MprAdminPortDisconnect": "DWORD WINAPI MprAdminPortDisconnect(RAS_SERVER_HANDLE hRasServer,HANDLE hPort);", "MprAdminAcceptNewConnection": "WINBOOL WINAPI MprAdminAcceptNewConnection(RAS_CONNECTION_0 *pRasConnection0,RAS_CONNECTION_1 *pRasConnection1);", "MprAdminAcceptNewConnection2": "WINBOOL WINAPI MprAdminAcceptNewConnection2(RAS_CONNECTION_0 *pRasConnection0,RAS_CONNECTION_1 *pRasConnection1,RAS_CONNECTION_2 *pRasConnection2);", "MprAdminAcceptNewLink": "WINBOOL WINAPI MprAdminAcceptNewLink (RAS_PORT_0 *pRasPort0,RAS_PORT_1 *pRasPort1);", "MprAdminConnectionHangupNotification": "VOID WINAPI MprAdminConnectionHangupNotification(RAS_CONNECTION_0 *pRasConnection0,RAS_CONNECTION_1 *pRasConnection1);", "MprAdminConnectionHangupNotification2": "VOID WINAPI MprAdminConnectionHangupNotification2(RAS_CONNECTION_0 *pRasConnection0,RAS_CONNECTION_1 *pRasConnection1,RAS_CONNECTION_2 *pRasConnection2);", "MprAdminConnectionRemoveQuarantine": "DWORD WINAPI MprAdminConnectionRemoveQuarantine(HANDLE hRasServer,HANDLE hRasConnection,WINBOOL fIsIpAddress);", "MprAdminLinkHangupNotification": "VOID WINAPI MprAdminLinkHangupNotification (RAS_PORT_0 *pRasPort0,RAS_PORT_1 *pRasPort1);", "MprAdminGetIpAddressForUser": "DWORD WINAPI MprAdminGetIpAddressForUser (WCHAR *lpwszUserName,WCHAR *lpwszPortName,DWORD *lpdwIpAddress,WINBOOL *bNotifyRelease);", "MprAdminReleaseIpAddress": "VOID WINAPI MprAdminReleaseIpAddress (WCHAR *lpszUserName,WCHAR *lpszPortName,DWORD *lpdwIpAddress);", "MprAdminInitializeDll": "DWORD WINAPI MprAdminInitializeDll(VOID);", "MprAdminTerminateDll": "DWORD WINAPI MprAdminTerminateDll(VOID);", "MprAdminUserGetInfo": "DWORD WINAPI MprAdminUserGetInfo(const WCHAR *lpszServer,const WCHAR *lpszUser,DWORD dwLevel,LPBYTE lpbBuffer);", "MprAdminUserSetInfo": "DWORD WINAPI MprAdminUserSetInfo(const WCHAR *lpszServer,const WCHAR *lpszUser,DWORD dwLevel,const LPBYTE lpbBuffer);", "MprAdminSendUserMessage": "DWORD WINAPI MprAdminSendUserMessage(MPR_SERVER_HANDLE hMprServer,HANDLE hConnection,LPWSTR lpwszMessage);", "MprAdminGetPDCServer": "DWORD WINAPI MprAdminGetPDCServer(const WCHAR *lpszDomain,const WCHAR *lpszServer,LPWSTR lpszPDCServer);", "MprAdminIsServiceRunning": "WINBOOL WINAPI MprAdminIsServiceRunning(LPWSTR lpwsServerName);", "MprAdminServerConnect": "DWORD WINAPI MprAdminServerConnect(LPWSTR lpwsServerName,MPR_SERVER_HANDLE *phMprServer);", "MprAdminServerDisconnect": "VOID WINAPI MprAdminServerDisconnect(MPR_SERVER_HANDLE hMprServer);", "MprAdminServerGetCredentials": "DWORD WINAPI MprAdminServerGetCredentials(MPR_SERVER_HANDLE hMprServer,DWORD dwLevel,LPBYTE *lplpbBuffer);", "MprAdminServerSetCredentials": "DWORD WINAPI MprAdminServerSetCredentials(MPR_SERVER_HANDLE hMprServer,DWORD dwLevel,LPBYTE lpbBuffer);", "MprAdminBufferFree": "DWORD WINAPI MprAdminBufferFree(LPVOID pBuffer);", "MprAdminGetErrorString": "DWORD WINAPI MprAdminGetErrorString(DWORD dwError,LPWSTR *lpwsErrorString);", "MprAdminServerGetInfo": "DWORD WINAPI MprAdminServerGetInfo(MPR_SERVER_HANDLE hMprServer,DWORD dwLevel,LPBYTE *lplpbBuffer);", "MprAdminServerSetInfo": "DWORD WINAPI MprAdminServerSetInfo(MPR_SERVER_HANDLE hMprServer,DWORD dwLevel,LPBYTE lpbBuffer);", "MprAdminEstablishDomainRasServer": "DWORD WINAPI MprAdminEstablishDomainRasServer (PWCHAR pszDomain,PWCHAR pszMachine,WINBOOL bEnable);", "MprAdminIsDomainRasServer": "DWORD WINAPI MprAdminIsDomainRasServer (PWCHAR pszDomain,PWCHAR pszMachine,PBOOL pbIsRasServer);", "MprAdminTransportCreate": "DWORD WINAPI MprAdminTransportCreate(MPR_SERVER_HANDLE hMprServer,DWORD dwTransportId,LPWSTR lpwsTransportName,LPBYTE pGlobalInfo,DWORD dwGlobalInfoSize,LPBYTE pClientInterfaceInfo,DWORD dwClientInterfaceInfoSize,LPWSTR lpwsDLLPath);", "MprAdminTransportSetInfo": "DWORD WINAPI MprAdminTransportSetInfo(MPR_SERVER_HANDLE hMprServer,DWORD dwTransportId,LPBYTE pGlobalInfo,DWORD dwGlobalInfoSize,LPBYTE pClientInterfaceInfo,DWORD dwClientInterfaceInfoSize);", "MprAdminTransportGetInfo": "DWORD WINAPI MprAdminTransportGetInfo(MPR_SERVER_HANDLE hMprServer,DWORD dwTransportId,LPBYTE *ppGlobalInfo,LPDWORD lpdwGlobalInfoSize,LPBYTE *ppClientInterfaceInfo,LPDWORD lpdwClientInterfaceInfoSize);", "MprAdminDeviceEnum": "DWORD WINAPI MprAdminDeviceEnum(MPR_SERVER_HANDLE hMprServer,DWORD dwLevel,LPBYTE *lplpbBuffer,LPDWORD lpdwTotalEntries);", "MprAdminInterfaceGetHandle": "DWORD WINAPI MprAdminInterfaceGetHandle(MPR_SERVER_HANDLE hMprServer,LPWSTR lpwsInterfaceName,HANDLE *phInterface,WINBOOL fIncludeClientInterfaces);", "MprAdminInterfaceCreate": "DWORD WINAPI MprAdminInterfaceCreate(MPR_SERVER_HANDLE hMprServer,DWORD dwLevel,LPBYTE lpbBuffer,HANDLE *phInterface);", "MprAdminInterfaceGetInfo": "DWORD WINAPI MprAdminInterfaceGetInfo(MPR_SERVER_HANDLE hMprServer,HANDLE hInterface,DWORD dwLevel,LPBYTE *lplpbBuffer);", "MprAdminInterfaceSetInfo": "DWORD WINAPI MprAdminInterfaceSetInfo(MPR_SERVER_HANDLE hMprServer,HANDLE hInterface,DWORD dwLevel,LPBYTE lpbBuffer);", "MprAdminInterfaceDelete": "DWORD WINAPI MprAdminInterfaceDelete(MPR_SERVER_HANDLE hMprServer,HANDLE hInterface);", "MprAdminInterfaceDeviceGetInfo": "DWORD WINAPI MprAdminInterfaceDeviceGetInfo(MPR_SERVER_HANDLE hMprServer,HANDLE hInterface,DWORD dwIndex,DWORD dwLevel,LPBYTE *lplpBuffer);", "MprAdminInterfaceDeviceSetInfo": "DWORD WINAPI MprAdminInterfaceDeviceSetInfo(MPR_SERVER_HANDLE hMprServer,HANDLE hInterface,DWORD dwIndex,DWORD dwLevel,LPBYTE lplpBuffer);", "MprAdminInterfaceTransportRemove": "DWORD WINAPI MprAdminInterfaceTransportRemove(MPR_SERVER_HANDLE hMprServer,HANDLE hInterface,DWORD dwTransportId);", "MprAdminInterfaceTransportAdd": "DWORD WINAPI MprAdminInterfaceTransportAdd(MPR_SERVER_HANDLE hMprServer,HANDLE hInterface,DWORD dwTransportId,LPBYTE pInterfaceInfo,DWORD dwInterfaceInfoSize);", "MprAdminInterfaceTransportGetInfo": "DWORD WINAPI MprAdminInterfaceTransportGetInfo(MPR_SERVER_HANDLE hMprServer,HANDLE hInterface,DWORD dwTransportId,LPBYTE *ppInterfaceInfo,LPDWORD lpdwpInterfaceInfoSize);", "MprAdminInterfaceTransportSetInfo": "DWORD WINAPI MprAdminInterfaceTransportSetInfo(MPR_SERVER_HANDLE hMprServer,HANDLE hInterface,DWORD dwTransportId,LPBYTE pInterfaceInfo,DWORD dwInterfaceInfoSize);", "MprAdminInterfaceEnum": "DWORD WINAPI MprAdminInterfaceEnum(MPR_SERVER_HANDLE hMprServer,DWORD dwLevel,LPBYTE *lplpbBuffer,DWORD dwPrefMaxLen,LPDWORD lpdwEntriesRead,LPDWORD lpdwTotalEntries,LPDWORD lpdwResumeHandle);", "MprSetupIpInIpInterfaceFriendlyNameEnum": "DWORD WINAPI MprSetupIpInIpInterfaceFriendlyNameEnum(PWCHAR pwszMachineName,LPBYTE *lplpBuffer,LPDWORD lpdwEntriesRead);", "MprSetupIpInIpInterfaceFriendlyNameFree": "DWORD WINAPI MprSetupIpInIpInterfaceFriendlyNameFree(LPVOID lpBuffer);", "MprSetupIpInIpInterfaceFriendlyNameCreate": "DWORD WINAPI MprSetupIpInIpInterfaceFriendlyNameCreate(PWCHAR pwszMachineName,PMPR_IPINIP_INTERFACE_0 pNameInformation);", "MprSetupIpInIpInterfaceFriendlyNameDelete": "DWORD WINAPI MprSetupIpInIpInterfaceFriendlyNameDelete(PWCHAR pwszMachineName,GUID *pGuid);", "MprAdminInterfaceSetCredentials": "DWORD WINAPI MprAdminInterfaceSetCredentials(LPWSTR lpwsServer,LPWSTR lpwsInterfaceName,LPWSTR lpwsUserName,LPWSTR lpwsDomainName,LPWSTR lpwsPassword);", "MprAdminInterfaceGetCredentials": "DWORD WINAPI MprAdminInterfaceGetCredentials(LPWSTR lpwsServer,LPWSTR lpwsInterfaceName,LPWSTR lpwsUserName,LPWSTR lpwsPassword,LPWSTR lpwsDomainName);", "MprAdminInterfaceSetCredentialsEx": "DWORD WINAPI MprAdminInterfaceSetCredentialsEx(MPR_SERVER_HANDLE hMprServer,HANDLE hInterface,DWORD dwLevel,LPBYTE lpbBuffer);", "MprAdminInterfaceGetCredentialsEx": "DWORD WINAPI MprAdminInterfaceGetCredentialsEx(MPR_SERVER_HANDLE hMprServer,HANDLE hInterface,DWORD dwLevel,LPBYTE *lplpbBuffer);", "MprAdminInterfaceConnect": "DWORD WINAPI MprAdminInterfaceConnect(MPR_SERVER_HANDLE hMprServer,HANDLE hInterface,HANDLE hEvent,WINBOOL fSynchronous);", "MprAdminInterfaceDisconnect": "DWORD WINAPI MprAdminInterfaceDisconnect(MPR_SERVER_HANDLE hMprServer,HANDLE hInterface);", "MprAdminInterfaceUpdateRoutes": "DWORD WINAPI MprAdminInterfaceUpdateRoutes(MPR_SERVER_HANDLE hMprServer,HANDLE hInterface,DWORD dwProtocolId,HANDLE hEvent);", "MprAdminInterfaceQueryUpdateResult": "DWORD WINAPI MprAdminInterfaceQueryUpdateResult(MPR_SERVER_HANDLE hMprServer,HANDLE hInterface,DWORD dwProtocolId,LPDWORD lpdwUpdateResult);", "MprAdminInterfaceUpdatePhonebookInfo": "DWORD WINAPI MprAdminInterfaceUpdatePhonebookInfo(MPR_SERVER_HANDLE hMprServer,HANDLE hInterface);", "MprAdminRegisterConnectionNotification": "DWORD WINAPI MprAdminRegisterConnectionNotification(MPR_SERVER_HANDLE hMprServer,HANDLE hEventNotification);", "MprAdminDeregisterConnectionNotification": "DWORD WINAPI MprAdminDeregisterConnectionNotification(MPR_SERVER_HANDLE hMprServer,HANDLE hEventNotification);", "MprAdminMIBServerConnect": "DWORD WINAPI MprAdminMIBServerConnect(LPWSTR lpwsServerName,MIB_SERVER_HANDLE *phMibServer);", "MprAdminMIBServerDisconnect": "VOID WINAPI MprAdminMIBServerDisconnect(MIB_SERVER_HANDLE hMibServer);", "MprAdminMIBEntryCreate": "DWORD WINAPI MprAdminMIBEntryCreate(MIB_SERVER_HANDLE hMibServer,DWORD dwPid,DWORD dwRoutingPid,LPVOID lpEntry,DWORD dwEntrySize);", "MprAdminMIBEntryDelete": "DWORD WINAPI MprAdminMIBEntryDelete(MIB_SERVER_HANDLE hMibServer,DWORD dwProtocolId,DWORD dwRoutingPid,LPVOID lpEntry,DWORD dwEntrySize);", "MprAdminMIBEntrySet": "DWORD WINAPI MprAdminMIBEntrySet(MIB_SERVER_HANDLE hMibServer,DWORD dwProtocolId,DWORD dwRoutingPid,LPVOID lpEntry,DWORD dwEntrySize);", "MprAdminMIBEntryGet": "DWORD WINAPI MprAdminMIBEntryGet(MIB_SERVER_HANDLE hMibServer,DWORD dwProtocolId,DWORD dwRoutingPid,LPVOID lpInEntry,DWORD dwInEntrySize,LPVOID *lplpOutEntry,LPDWORD lpOutEntrySize);", "MprAdminMIBEntryGetFirst": "DWORD WINAPI MprAdminMIBEntryGetFirst(MIB_SERVER_HANDLE hMibServer,DWORD dwProtocolId,DWORD dwRoutingPid,LPVOID lpInEntry,DWORD dwInEntrySize,LPVOID *lplpOutEntry,LPDWORD lpOutEntrySize);", "MprAdminMIBEntryGetNext": "DWORD WINAPI MprAdminMIBEntryGetNext(MIB_SERVER_HANDLE hMibServer,DWORD dwProtocolId,DWORD dwRoutingPid,LPVOID lpInEntry,DWORD dwInEntrySize,LPVOID *lplpOutEntry,LPDWORD lpOutEntrySize);", "MprAdminMIBGetTrapInfo": "DWORD WINAPI MprAdminMIBGetTrapInfo(MIB_SERVER_HANDLE hMibServer,DWORD dwProtocolId,DWORD dwRoutingPid,LPVOID lpInData,DWORD dwInDataSize,LPVOID *lplpOutData,LPDWORD lpOutDataSize);", "MprAdminMIBSetTrapInfo": "DWORD WINAPI MprAdminMIBSetTrapInfo(DWORD dwProtocolId,DWORD dwRoutingPid,HANDLE hEvent,LPVOID lpInData,DWORD dwInDataSize,LPVOID *lplpOutData,LPDWORD lpOutDataSize);", "MprAdminMIBBufferFree": "DWORD WINAPI MprAdminMIBBufferFree(LPVOID pBuffer);", "MprConfigServerInstall": "DWORD WINAPI MprConfigServerInstall(DWORD dwLevel,PVOID pBuffer);", "MprConfigServerConnect": "DWORD WINAPI MprConfigServerConnect(LPWSTR lpwsServerName,HANDLE *phMprConfig);", "MprConfigServerDisconnect": "VOID WINAPI MprConfigServerDisconnect(HANDLE hMprConfig);", "MprConfigServerRefresh": "DWORD WINAPI MprConfigServerRefresh(HANDLE hMprConfig);", "MprConfigBufferFree": "DWORD WINAPI MprConfigBufferFree(LPVOID pBuffer);", "MprConfigServerGetInfo": "DWORD WINAPI MprConfigServerGetInfo(HANDLE hMprConfig,DWORD dwLevel,LPBYTE *lplpbBuffer);", "MprConfigServerSetInfo": "DWORD WINAPI MprConfigServerSetInfo(MPR_SERVER_HANDLE hMprServer,DWORD dwLevel,LPBYTE lpbBuffer);", "MprConfigServerBackup": "DWORD WINAPI MprConfigServerBackup(HANDLE hMprConfig,LPWSTR lpwsPath);", "MprConfigServerRestore": "DWORD WINAPI MprConfigServerRestore(HANDLE hMprConfig,LPWSTR lpwsPath);", "MprConfigTransportCreate": "DWORD WINAPI MprConfigTransportCreate(HANDLE hMprConfig,DWORD dwTransportId,LPWSTR lpwsTransportName,LPBYTE pGlobalInfo,DWORD dwGlobalInfoSize,LPBYTE pClientInterfaceInfo,DWORD dwClientInterfaceInfoSize,LPWSTR lpwsDLLPath,HANDLE *phRouterTransport);", "MprConfigTransportDelete": "DWORD WINAPI MprConfigTransportDelete(HANDLE hMprConfig,HANDLE hRouterTransport);", "MprConfigTransportGetHandle": "DWORD WINAPI MprConfigTransportGetHandle(HANDLE hMprConfig,DWORD dwTransportId,HANDLE *phRouterTransport);", "MprConfigTransportSetInfo": "DWORD WINAPI MprConfigTransportSetInfo(HANDLE hMprConfig,HANDLE hRouterTransport,LPBYTE pGlobalInfo,DWORD dwGlobalInfoSize,LPBYTE pClientInterfaceInfo,DWORD dwClientInterfaceInfoSize,LPWSTR lpwsDLLPath);", "MprConfigTransportGetInfo": "DWORD WINAPI MprConfigTransportGetInfo(HANDLE hMprConfig,HANDLE hRouterTransport,LPBYTE *ppGlobalInfo,LPDWORD lpdwGlobalInfoSize,LPBYTE *ppClientInterfaceInfo,LPDWORD lpdwClientInterfaceInfoSize,LPWSTR *lplpwsDLLPath);", "MprConfigTransportEnum": "DWORD WINAPI MprConfigTransportEnum(HANDLE hMprConfig,DWORD dwLevel,LPBYTE *lplpBuffer,DWORD dwPrefMaxLen,LPDWORD lpdwEntriesRead,LPDWORD lpdwTotalEntries,LPDWORD lpdwResumeHandle);", "MprConfigInterfaceCreate": "DWORD WINAPI MprConfigInterfaceCreate(HANDLE hMprConfig,DWORD dwLevel,LPBYTE lpbBuffer,HANDLE *phRouterInterface);", "MprConfigInterfaceDelete": "DWORD WINAPI MprConfigInterfaceDelete(HANDLE hMprConfig,HANDLE hRouterInterface);", "MprConfigInterfaceGetHandle": "DWORD WINAPI MprConfigInterfaceGetHandle(HANDLE hMprConfig,LPWSTR lpwsInterfaceName,HANDLE *phRouterInterface);", "MprConfigInterfaceGetInfo": "DWORD WINAPI MprConfigInterfaceGetInfo(HANDLE hMprConfig,HANDLE hRouterInterface,DWORD dwLevel,LPBYTE *lplpBuffer,LPDWORD lpdwBufferSize);", "MprConfigInterfaceSetInfo": "DWORD WINAPI MprConfigInterfaceSetInfo(HANDLE hMprConfig,HANDLE hRouterInterface,DWORD dwLevel,LPBYTE lpbBuffer);", "MprConfigInterfaceEnum": "DWORD WINAPI MprConfigInterfaceEnum(HANDLE hMprConfig,DWORD dwLevel,LPBYTE *lplpBuffer,DWORD dwPrefMaxLen,LPDWORD lpdwEntriesRead,LPDWORD lpdwTotalEntries,LPDWORD lpdwResumeHandle);", "MprConfigInterfaceTransportAdd": "DWORD WINAPI MprConfigInterfaceTransportAdd(HANDLE hMprConfig,HANDLE hRouterInterface,DWORD dwTransportId,LPWSTR lpwsTransportName,LPBYTE pInterfaceInfo,DWORD dwInterfaceInfoSize,HANDLE *phRouterIfTransport);", "MprConfigInterfaceTransportRemove": "DWORD WINAPI MprConfigInterfaceTransportRemove(HANDLE hMprConfig,HANDLE hRouterInterface,HANDLE hRouterIfTransport);", "MprConfigInterfaceTransportGetHandle": "DWORD WINAPI MprConfigInterfaceTransportGetHandle(HANDLE hMprConfig,HANDLE hRouterInterface,DWORD dwTransportId,HANDLE *phRouterIfTransport);", "MprConfigInterfaceTransportGetInfo": "DWORD WINAPI MprConfigInterfaceTransportGetInfo(HANDLE hMprConfig,HANDLE hRouterInterface,HANDLE hRouterIfTransport,LPBYTE *ppInterfaceInfo,LPDWORD lpdwInterfaceInfoSize);", "MprConfigInterfaceTransportSetInfo": "DWORD WINAPI MprConfigInterfaceTransportSetInfo(HANDLE hMprConfig,HANDLE hRouterInterface,HANDLE hRouterIfTransport,LPBYTE pInterfaceInfo,DWORD dwInterfaceInfoSize);", "MprConfigInterfaceTransportEnum": "DWORD WINAPI MprConfigInterfaceTransportEnum(HANDLE hMprConfig,HANDLE hRouterInterface,DWORD dwLevel,LPBYTE *lplpBuffer,DWORD dwPrefMaxLen,LPDWORD lpdwEntriesRead,LPDWORD lpdwTotalEntries,LPDWORD lpdwResumeHandle);", "MprConfigGetFriendlyName": "DWORD WINAPI MprConfigGetFriendlyName(HANDLE hMprConfig,PWCHAR pszGuidName,PWCHAR pszBuffer,DWORD dwBufferSize);", "MprConfigGetGuidName": "DWORD WINAPI MprConfigGetGuidName(HANDLE hMprConfig,PWCHAR pszFriendlyName,PWCHAR pszBuffer,DWORD dwBufferSize);", "MprInfoCreate": "DWORD WINAPI MprInfoCreate(DWORD dwVersion,LPVOID *lplpNewHeader);", "MprInfoDelete": "DWORD WINAPI MprInfoDelete(LPVOID lpHeader);", "MprInfoRemoveAll": "DWORD WINAPI MprInfoRemoveAll(LPVOID lpHeader,LPVOID *lplpNewHeader);", "MprInfoDuplicate": "DWORD WINAPI MprInfoDuplicate(LPVOID lpHeader,LPVOID *lplpNewHeader);", "MprInfoBlockAdd": "DWORD WINAPI MprInfoBlockAdd(LPVOID lpHeader,DWORD dwInfoType,DWORD dwItemSize,DWORD dwItemCount,LPBYTE lpItemData,LPVOID *lplpNewHeader);", "MprInfoBlockRemove": "DWORD WINAPI MprInfoBlockRemove(LPVOID lpHeader,DWORD dwInfoType,LPVOID *lplpNewHeader);", "MprInfoBlockSet": "DWORD WINAPI MprInfoBlockSet(LPVOID lpHeader,DWORD dwInfoType,DWORD dwItemSize,DWORD dwItemCount,LPBYTE lpItemData,LPVOID *lplpNewHeader);", "MprInfoBlockFind": "DWORD WINAPI MprInfoBlockFind(LPVOID lpHeader,DWORD dwInfoType,LPDWORD lpdwItemSize,LPDWORD lpdwItemCount,LPBYTE *lplpItemData);", "MprInfoBlockQuerySize": "DWORD WINAPI MprInfoBlockQuerySize(LPVOID lpHeader);", "MprConfigFilterGetInfo": "DWORD WINAPI MprConfigFilterGetInfo(", "MprConfigFilterSetInfo": "DWORD WINAPI MprConfigFilterSetInfo(", "NetMessageNameAdd": "NET_API_STATUS WINAPI NetMessageNameAdd(LPCWSTR servername,LPCWSTR msgname);", "NetMessageNameEnum": "NET_API_STATUS WINAPI NetMessageNameEnum(LPCWSTR servername,DWORD level,LPBYTE *bufptr,DWORD prefmaxlen,LPDWORD entriesread,LPDWORD totalentries,LPDWORD resume_handle);", "NetMessageNameGetInfo": "NET_API_STATUS WINAPI NetMessageNameGetInfo(LPCWSTR servername,LPCWSTR msgname,DWORD level,LPBYTE *bufptr);", "NetMessageNameDel": "NET_API_STATUS WINAPI NetMessageNameDel(LPCWSTR servername,LPCWSTR msgname);", "NetMessageBufferSend": "NET_API_STATUS WINAPI NetMessageBufferSend(LPCWSTR servername,LPCWSTR msgname,LPCWSTR fromname,LPBYTE buf,DWORD buflen);", "IBidiRequest_SetSchema_Proxy": "HRESULT WINAPI IBidiRequest_SetSchema_Proxy(IBidiRequest *This,const LPCWSTR pszSchema);", "IBidiRequest_SetInputData_Proxy": "HRESULT WINAPI IBidiRequest_SetInputData_Proxy(IBidiRequest *This,const DWORD dwType,const BYTE *pData,const UINT uSize);", "IBidiRequest_GetResult_Proxy": "HRESULT WINAPI IBidiRequest_GetResult_Proxy(IBidiRequest *This,HRESULT *phr);", "IBidiRequest_GetOutputData_Proxy": "HRESULT WINAPI IBidiRequest_GetOutputData_Proxy(IBidiRequest *This,const DWORD dwIndex,LPWSTR *ppszSchema,DWORD *pdwType,BYTE **ppData,ULONG *uSize);", "IBidiRequest_GetEnumCount_Proxy": "HRESULT WINAPI IBidiRequest_GetEnumCount_Proxy(IBidiRequest *This,DWORD *pdwTotal);", "IBidiRequestContainer_AddRequest_Proxy": "HRESULT WINAPI IBidiRequestContainer_AddRequest_Proxy(IBidiRequestContainer *This,IBidiRequest *pRequest);", "IBidiRequestContainer_GetEnumObject_Proxy": "HRESULT WINAPI IBidiRequestContainer_GetEnumObject_Proxy(IBidiRequestContainer *This,IEnumUnknown **ppenum);", "IBidiRequestContainer_GetRequestCount_Proxy": "HRESULT WINAPI IBidiRequestContainer_GetRequestCount_Proxy(IBidiRequestContainer *This,ULONG *puCount);", "IBidiSpl_BindDevice_Proxy": "HRESULT WINAPI IBidiSpl_BindDevice_Proxy(IBidiSpl *This,const LPCWSTR pszDeviceName,const DWORD dwAccess);", "IBidiSpl_UnbindDevice_Proxy": "HRESULT WINAPI IBidiSpl_UnbindDevice_Proxy(IBidiSpl *This);", "IBidiSpl_SendRecv_Proxy": "HRESULT WINAPI IBidiSpl_SendRecv_Proxy(IBidiSpl *This,const LPCWSTR pszAction,IBidiRequest *pRequest);", "IBidiSpl_MultiSendRecv_Proxy": "HRESULT WINAPI IBidiSpl_MultiSendRecv_Proxy(IBidiSpl *This,const LPCWSTR pszAction,IBidiRequestContainer *pRequestContainer);", "ASN1_CreateModule": "extern ASN1_PUBLIC ASN1module_t WINAPI ASN1_CreateModule(ASN1uint32_t nVersion,ASN1encodingrule_e eRule,ASN1uint32_t dwFlags,ASN1uint32_t cPDU,const ASN1GenericFun_t apfnEncoder[],const ASN1GenericFun_t apfnDecoder[],const ASN1FreeFun_t apfnFreeMemory[],const ASN1uint32_t acbStructSize[],ASN1magic_t nModuleName);", "ASN1_CloseModule": "extern ASN1_PUBLIC void WINAPI ASN1_CloseModule(ASN1module_t pModule);", "ASN1_CreateEncoder": "extern ASN1_PUBLIC ASN1error_e WINAPI ASN1_CreateEncoder(ASN1module_t pModule,ASN1encoding_t *ppEncoderInfo,ASN1octet_t *pbBuf,ASN1uint32_t cbBufSize,ASN1encoding_t pParent);", "ASN1_Encode": "extern ASN1_PUBLIC ASN1error_e WINAPI ASN1_Encode(ASN1encoding_t pEncoderInfo,void *pDataStruct,ASN1uint32_t nPduNum,ASN1uint32_t dwFlags,ASN1octet_t *pbBuf,ASN1uint32_t cbBufSize);", "ASN1_CloseEncoder": "extern ASN1_PUBLIC void WINAPI ASN1_CloseEncoder(ASN1encoding_t pEncoderInfo);", "ASN1_CloseEncoder2": "extern ASN1_PUBLIC void WINAPI ASN1_CloseEncoder2(ASN1encoding_t pEncoderInfo);", "ASN1_CreateDecoder": "extern ASN1_PUBLIC ASN1error_e WINAPI ASN1_CreateDecoder(ASN1module_t pModule,ASN1decoding_t *ppDecoderInfo,ASN1octet_t *pbBuf,ASN1uint32_t cbBufSize,ASN1decoding_t pParent);", "ASN1_CreateDecoderEx": "extern ASN1_PUBLIC ASN1error_e WINAPI ASN1_CreateDecoderEx(ASN1module_t pModule,ASN1decoding_t *ppDecoderInfo,ASN1octet_t *pbBuf,ASN1uint32_t cbBufSize,ASN1decoding_t pParent,ASN1uint32_t dwFlags);", "ASN1_Decode": "extern ASN1_PUBLIC ASN1error_e WINAPI ASN1_Decode(ASN1decoding_t pDecoderInfo,void **ppDataStruct,ASN1uint32_t nPduNum,ASN1uint32_t dwFlags,ASN1octet_t *pbBuf,ASN1uint32_t cbBufSize);", "ASN1_CloseDecoder": "extern ASN1_PUBLIC void WINAPI ASN1_CloseDecoder(ASN1decoding_t pDecoderInfo);", "ASN1_FreeEncoded": "extern ASN1_PUBLIC void WINAPI ASN1_FreeEncoded(ASN1encoding_t pEncoderInfo,void *pBuf);", "ASN1_FreeDecoded": "extern ASN1_PUBLIC void WINAPI ASN1_FreeDecoded(ASN1decoding_t pDecoderInfo,void *pDataStruct,ASN1uint32_t nPduNum);", "ASN1_SetEncoderOption": "extern ASN1_PUBLIC ASN1error_e WINAPI ASN1_SetEncoderOption(ASN1encoding_t pEncoderInfo,ASN1optionparam_t *pOptParam);", "ASN1_GetEncoderOption": "extern ASN1_PUBLIC ASN1error_e WINAPI ASN1_GetEncoderOption(ASN1encoding_t pEncoderInfo,ASN1optionparam_t *pOptParam);", "ASN1_SetDecoderOption": "extern ASN1_PUBLIC ASN1error_e WINAPI ASN1_SetDecoderOption(ASN1decoding_t pDecoderInfo,ASN1optionparam_t *pOptParam);", "ASN1_GetDecoderOption": "extern ASN1_PUBLIC ASN1error_e WINAPI ASN1_GetDecoderOption(ASN1decoding_t pDecoderInfo,ASN1optionparam_t *pOptParam);", "ASN1bitstring_free": "extern ASN1_PUBLIC void WINAPI ASN1bitstring_free(ASN1bitstring_t *);", "ASN1octetstring_free": "extern ASN1_PUBLIC void WINAPI ASN1octetstring_free(ASN1octetstring_t *);", "ASN1objectidentifier_free": "extern ASN1_PUBLIC void WINAPI ASN1objectidentifier_free(ASN1objectidentifier_t *);", "ASN1charstring_free": "extern ASN1_PUBLIC void WINAPI ASN1charstring_free(ASN1charstring_t *);", "ASN1char16string_free": "extern ASN1_PUBLIC void WINAPI ASN1char16string_free(ASN1char16string_t *);", "ASN1char32string_free": "extern ASN1_PUBLIC void WINAPI ASN1char32string_free(ASN1char32string_t *);", "ASN1ztcharstring_free": "extern ASN1_PUBLIC void WINAPI ASN1ztcharstring_free(ASN1ztcharstring_t);", "ASN1ztchar16string_free": "extern ASN1_PUBLIC void WINAPI ASN1ztchar16string_free(ASN1ztchar16string_t);", "ASN1ztchar32string_free": "extern ASN1_PUBLIC void WINAPI ASN1ztchar32string_free(ASN1ztchar32string_t);", "ASN1open_free": "extern ASN1_PUBLIC void WINAPI ASN1open_free(ASN1open_t *);", "ASN1utf8string_free": "extern ASN1_PUBLIC void WINAPI ASN1utf8string_free(ASN1wstring_t *);", "ASN1DecAlloc": "extern ASN1_PUBLIC void *WINAPI ASN1DecAlloc(ASN1decoding_t dec,ASN1uint32_t size);", "ASN1DecRealloc": "extern ASN1_PUBLIC void *WINAPI ASN1DecRealloc(ASN1decoding_t dec,void *ptr,ASN1uint32_t size);", "ASN1Free": "extern ASN1_PUBLIC void WINAPI ASN1Free(void *ptr);", "ASN1EncSetError": "extern ASN1_PUBLIC ASN1error_e WINAPI ASN1EncSetError(ASN1encoding_t enc,ASN1error_e err);", "ASN1DecSetError": "extern ASN1_PUBLIC ASN1error_e WINAPI ASN1DecSetError(ASN1decoding_t dec,ASN1error_e err);", "ASN1intx_sub": "extern ASN1_PUBLIC void WINAPI ASN1intx_sub(ASN1intx_t *,ASN1intx_t *,ASN1intx_t *);", "ASN1intx_uoctets": "extern ASN1_PUBLIC ASN1uint32_t WINAPI ASN1intx_uoctets(ASN1intx_t *);", "ASN1intx_free": "extern ASN1_PUBLIC void WINAPI ASN1intx_free(ASN1intx_t *);", "ASN1intx_add": "extern ASN1_PUBLIC void WINAPI ASN1intx_add(ASN1intx_t *,ASN1intx_t *,ASN1intx_t *);", "ASN1intx2int32": "extern ASN1_PUBLIC ASN1int32_t WINAPI ASN1intx2int32(ASN1intx_t *val);", "ASN1intx2uint32": "extern ASN1_PUBLIC ASN1uint32_t WINAPI ASN1intx2uint32(ASN1intx_t *val);", "ASN1intxisuint32": "extern ASN1_PUBLIC int WINAPI ASN1intxisuint32(ASN1intx_t *val);", "ASN1intx_setuint32": "extern ASN1_PUBLIC void WINAPI ASN1intx_setuint32(ASN1intx_t *dst,ASN1uint32_t val);", "ASN1DbgMemTrackDumpCurrent": "extern ASN1_PUBLIC void WINAPI ASN1DbgMemTrackDumpCurrent (ASN1uint32_t nModuleName);", "ASN1uint32_uoctets": "extern ASN1_PUBLIC ASN1uint32_t WINAPI ASN1uint32_uoctets(ASN1uint32_t);", "ASN1objectidentifier_cmp": "extern ASN1_PUBLIC int WINAPI ASN1objectidentifier_cmp(ASN1objectidentifier_t *,ASN1objectidentifier_t *);", "ASN1objectidentifier2_cmp": "extern ASN1_PUBLIC int WINAPI ASN1objectidentifier2_cmp(ASN1objectidentifier2_t *v1,ASN1objectidentifier2_t *v2);", "ASN1bitstring_cmp": "extern ASN1_PUBLIC int WINAPI ASN1bitstring_cmp(ASN1bitstring_t *,ASN1bitstring_t *,int);", "ASN1octetstring_cmp": "extern ASN1_PUBLIC int WINAPI ASN1octetstring_cmp(ASN1octetstring_t *,ASN1octetstring_t *);", "ASN1charstring_cmp": "extern ASN1_PUBLIC int WINAPI ASN1charstring_cmp(ASN1charstring_t *,ASN1charstring_t *);", "ASN1char16string_cmp": "extern ASN1_PUBLIC int WINAPI ASN1char16string_cmp(ASN1char16string_t *,ASN1char16string_t *);", "ASN1char32string_cmp": "extern ASN1_PUBLIC int WINAPI ASN1char32string_cmp(ASN1char32string_t *,ASN1char32string_t *);", "ASN1ztcharstring_cmp": "extern ASN1_PUBLIC int WINAPI ASN1ztcharstring_cmp(ASN1ztcharstring_t,ASN1ztcharstring_t);", "ASN1ztchar16string_cmp": "extern ASN1_PUBLIC int WINAPI ASN1ztchar16string_cmp(ASN1ztchar16string_t,ASN1ztchar16string_t);", "ASN1open_cmp": "extern ASN1_PUBLIC int WINAPI ASN1open_cmp(ASN1open_t *,ASN1open_t *);", "ASN1generalizedtime_cmp": "extern ASN1_PUBLIC int WINAPI ASN1generalizedtime_cmp(ASN1generalizedtime_t *,ASN1generalizedtime_t *);", "ASN1utctime_cmp": "extern ASN1_PUBLIC int WINAPI ASN1utctime_cmp(ASN1utctime_t *,ASN1utctime_t *);", "ASN1real_free": "extern ASN1_PUBLIC void WINAPI ASN1real_free(ASN1real_t *);", "ASN1external_free": "extern ASN1_PUBLIC void WINAPI ASN1external_free(ASN1external_t *);", "ASN1embeddedpdv_free": "extern ASN1_PUBLIC void WINAPI ASN1embeddedpdv_free(ASN1embeddedpdv_t *);", "ASN1characterstring_free": "extern ASN1_PUBLIC void WINAPI ASN1characterstring_free(ASN1characterstring_t *);", "CallNtPowerInformation": "NTSTATUS WINAPI CallNtPowerInformation(POWER_INFORMATION_LEVEL InformationLevel, PVOID InputBuffer, ULONG InputBufferLength, PVOID OutputBuffer, ULONG OutputBufferLength);", "GetPwrCapabilities": "BOOLEAN WINAPI GetPwrCapabilities(PSYSTEM_POWER_CAPABILITIES lpspc);", "PowerDeterminePlatformRoleEx": "POWER_PLATFORM_ROLE WINAPI PowerDeterminePlatformRoleEx(ULONG Version);", "PowerRegisterSuspendResumeNotification": "DWORD WINAPI PowerRegisterSuspendResumeNotification(DWORD Flags, HANDLE Recipient, PHPOWERNOTIFY RegistrationHandle);", "PowerUnregisterSuspendResumeNotification": "DWORD WINAPI PowerUnregisterSuspendResumeNotification(HPOWERNOTIFY RegistrationHandle);", "CloseCompressor": "WINBOOL WINAPI CloseCompressor (COMPRESSOR_HANDLE CompressorHandle);", "CloseDecompressor": "WINBOOL WINAPI CloseDecompressor (DECOMPRESSOR_HANDLE DecompressorHandle);", "Compress": "WINBOOL WINAPI Compress (COMPRESSOR_HANDLE CompressorHandle, PVOID UncompressedData, SIZE_T UncompressedDataSize, PVOID CompressedBuffer, SIZE_T CompressedBufferSize, PSIZE_T CompressedDataSize);", "CreateCompressor": "WINBOOL WINAPI CreateCompressor (DWORD Algorithm, PCOMPRESS_ALLOCATION_ROUTINES AllocationRoutines, PCOMPRESSOR_HANDLE CompressorHandle);", "CreateDecompressor": "WINBOOL WINAPI CreateDecompressor (DWORD Algorithm, PCOMPRESS_ALLOCATION_ROUTINES AllocationRoutines, PDECOMPRESSOR_HANDLE DecompressorHandle);", "Decompress": "WINBOOL WINAPI Decompress (DECOMPRESSOR_HANDLE DecompressorHandle, PVOID CompressedData, SIZE_T CompressedDataSize, PVOID UncompressedBuffer, SIZE_T UncompressedBufferSize, PSIZE_T UncompressedDataSize);", "QueryCompressorInformation": "WINBOOL WINAPI QueryCompressorInformation (COMPRESSOR_HANDLE CompressorHandle, COMPRESS_INFORMATION_CLASS CompressInformationClass, PVOID CompressInformation, SIZE_T CompressInformationSize);", "QueryDecompressorInformation": "WINBOOL WINAPI QueryDecompressorInformation (DECOMPRESSOR_HANDLE DecompressorHandle, COMPRESS_INFORMATION_CLASS CompressInformationClass, PVOID CompressInformation, SIZE_T CompressInformationSize);", "ResetCompressor": "WINBOOL WINAPI ResetCompressor (COMPRESSOR_HANDLE CompressorHandle);", "ResetDecompressor": "WINBOOL WINAPI ResetDecompressor (DECOMPRESSOR_HANDLE DecompressorHandle);", "SetCompressorInformation": "WINBOOL WINAPI SetCompressorInformation (COMPRESSOR_HANDLE CompressorHandle, COMPRESS_INFORMATION_CLASS CompressInformationClass, PVOID CompressInformation, SIZE_T CompressInformationSize);", "SetDecompressorInformation": "WINBOOL WINAPI SetDecompressorInformation (DECOMPRESSOR_HANDLE DecompressorHandle, COMPRESS_INFORMATION_CLASS CompressInformationClass, PVOID CompressInformation, SIZE_T CompressInformationSize);", "ISensNetwork_ConnectionMade_Proxy": "HRESULT WINAPI ISensNetwork_ConnectionMade_Proxy(ISensNetwork *This,BSTR bstrConnection,ULONG ulType,LPSENS_QOCINFO lpQOCInfo);", "ISensNetwork_ConnectionMadeNoQOCInfo_Proxy": "HRESULT WINAPI ISensNetwork_ConnectionMadeNoQOCInfo_Proxy(ISensNetwork *This,BSTR bstrConnection,ULONG ulType);", "ISensNetwork_ConnectionLost_Proxy": "HRESULT WINAPI ISensNetwork_ConnectionLost_Proxy(ISensNetwork *This,BSTR bstrConnection,ULONG ulType);", "ISensNetwork_DestinationReachable_Proxy": "HRESULT WINAPI ISensNetwork_DestinationReachable_Proxy(ISensNetwork *This,BSTR bstrDestination,BSTR bstrConnection,ULONG ulType,LPSENS_QOCINFO lpQOCInfo);", "ISensNetwork_DestinationReachableNoQOCInfo_Proxy": "HRESULT WINAPI ISensNetwork_DestinationReachableNoQOCInfo_Proxy(ISensNetwork *This,BSTR bstrDestination,BSTR bstrConnection,ULONG ulType);", "ISensOnNow_OnACPower_Proxy": "HRESULT WINAPI ISensOnNow_OnACPower_Proxy(ISensOnNow *This);", "ISensOnNow_OnBatteryPower_Proxy": "HRESULT WINAPI ISensOnNow_OnBatteryPower_Proxy(ISensOnNow *This,DWORD dwBatteryLifePercent);", "ISensOnNow_BatteryLow_Proxy": "HRESULT WINAPI ISensOnNow_BatteryLow_Proxy(ISensOnNow *This,DWORD dwBatteryLifePercent);", "ISensLogon_Logon_Proxy": "HRESULT WINAPI ISensLogon_Logon_Proxy(ISensLogon *This,BSTR bstrUserName);", "ISensLogon_Logoff_Proxy": "HRESULT WINAPI ISensLogon_Logoff_Proxy(ISensLogon *This,BSTR bstrUserName);", "ISensLogon_StartShell_Proxy": "HRESULT WINAPI ISensLogon_StartShell_Proxy(ISensLogon *This,BSTR bstrUserName);", "ISensLogon_DisplayLock_Proxy": "HRESULT WINAPI ISensLogon_DisplayLock_Proxy(ISensLogon *This,BSTR bstrUserName);", "ISensLogon_DisplayUnlock_Proxy": "HRESULT WINAPI ISensLogon_DisplayUnlock_Proxy(ISensLogon *This,BSTR bstrUserName);", "ISensLogon_StartScreenSaver_Proxy": "HRESULT WINAPI ISensLogon_StartScreenSaver_Proxy(ISensLogon *This,BSTR bstrUserName);", "ISensLogon_StopScreenSaver_Proxy": "HRESULT WINAPI ISensLogon_StopScreenSaver_Proxy(ISensLogon *This,BSTR bstrUserName);", "ISensLogon2_Logon_Proxy": "HRESULT WINAPI ISensLogon2_Logon_Proxy(ISensLogon2 *This,BSTR bstrUserName,DWORD dwSessionId);", "ISensLogon2_Logoff_Proxy": "HRESULT WINAPI ISensLogon2_Logoff_Proxy(ISensLogon2 *This,BSTR bstrUserName,DWORD dwSessionId);", "ISensLogon2_SessionDisconnect_Proxy": "HRESULT WINAPI ISensLogon2_SessionDisconnect_Proxy(ISensLogon2 *This,BSTR bstrUserName,DWORD dwSessionId);", "ISensLogon2_SessionReconnect_Proxy": "HRESULT WINAPI ISensLogon2_SessionReconnect_Proxy(ISensLogon2 *This,BSTR bstrUserName,DWORD dwSessionId);", "ISensLogon2_PostShell_Proxy": "HRESULT WINAPI ISensLogon2_PostShell_Proxy(ISensLogon2 *This,BSTR bstrUserName,DWORD dwSessionId);", "IExchangeServer_get_DataSource_Proxy": "HRESULT WINAPI IExchangeServer_get_DataSource_Proxy(IExchangeServer *This,IDataSource2 **varDataSource);", "IExchangeServer_get_Fields_Proxy": "HRESULT WINAPI IExchangeServer_get_Fields_Proxy(IExchangeServer *This,Fields **varFields);", "IExchangeServer_get_Name_Proxy": "HRESULT WINAPI IExchangeServer_get_Name_Proxy(IExchangeServer *This,BSTR *varName);", "IExchangeServer_get_ExchangeVersion_Proxy": "HRESULT WINAPI IExchangeServer_get_ExchangeVersion_Proxy(IExchangeServer *This,BSTR *varExchangeVersion);", "IExchangeServer_get_StorageGroups_Proxy": "HRESULT WINAPI IExchangeServer_get_StorageGroups_Proxy(IExchangeServer *This,VARIANT *varStorageGroups);", "IExchangeServer_get_SubjectLoggingEnabled_Proxy": "HRESULT WINAPI IExchangeServer_get_SubjectLoggingEnabled_Proxy(IExchangeServer *This,VARIANT_BOOL *pSubjectLoggingEnabled);", "IExchangeServer_put_SubjectLoggingEnabled_Proxy": "HRESULT WINAPI IExchangeServer_put_SubjectLoggingEnabled_Proxy(IExchangeServer *This,VARIANT_BOOL varSubjectLoggingEnabled);", "IExchangeServer_get_MessageTrackingEnabled_Proxy": "HRESULT WINAPI IExchangeServer_get_MessageTrackingEnabled_Proxy(IExchangeServer *This,VARIANT_BOOL *pMessageTrackingEnabled);", "IExchangeServer_put_MessageTrackingEnabled_Proxy": "HRESULT WINAPI IExchangeServer_put_MessageTrackingEnabled_Proxy(IExchangeServer *This,VARIANT_BOOL varMessageTrackingEnabled);", "IExchangeServer_get_DaysBeforeLogFileRemoval_Proxy": "HRESULT WINAPI IExchangeServer_get_DaysBeforeLogFileRemoval_Proxy(IExchangeServer *This,__LONG32 *pDaysBeforeLogFileRemoval);", "IExchangeServer_put_DaysBeforeLogFileRemoval_Proxy": "HRESULT WINAPI IExchangeServer_put_DaysBeforeLogFileRemoval_Proxy(IExchangeServer *This,__LONG32 varDaysBeforeLogFileRemoval);", "IExchangeServer_get_ServerType_Proxy": "HRESULT WINAPI IExchangeServer_get_ServerType_Proxy(IExchangeServer *This,CDOEXMServerType *pServerType);", "IExchangeServer_put_ServerType_Proxy": "HRESULT WINAPI IExchangeServer_put_ServerType_Proxy(IExchangeServer *This,CDOEXMServerType varServerType);", "IExchangeServer_get_DirectoryServer_Proxy": "HRESULT WINAPI IExchangeServer_get_DirectoryServer_Proxy(IExchangeServer *This,BSTR *varDirectoryServer);", "IExchangeServer_GetInterface_Proxy": "HRESULT WINAPI IExchangeServer_GetInterface_Proxy(IExchangeServer *This,BSTR Interface,IDispatch **ppUnknown);", "IStorageGroup_get_DataSource_Proxy": "HRESULT WINAPI IStorageGroup_get_DataSource_Proxy(IStorageGroup *This,IDataSource2 **varDataSource);", "IStorageGroup_get_Fields_Proxy": "HRESULT WINAPI IStorageGroup_get_Fields_Proxy(IStorageGroup *This,Fields **varFields);", "IStorageGroup_get_Name_Proxy": "HRESULT WINAPI IStorageGroup_get_Name_Proxy(IStorageGroup *This,BSTR *pName);", "IStorageGroup_put_Name_Proxy": "HRESULT WINAPI IStorageGroup_put_Name_Proxy(IStorageGroup *This,BSTR varName);", "IStorageGroup_get_PublicStoreDBs_Proxy": "HRESULT WINAPI IStorageGroup_get_PublicStoreDBs_Proxy(IStorageGroup *This,VARIANT *varPublicStoreDBs);", "IStorageGroup_get_MailboxStoreDBs_Proxy": "HRESULT WINAPI IStorageGroup_get_MailboxStoreDBs_Proxy(IStorageGroup *This,VARIANT *varMailboxStoreDBs);", "IStorageGroup_get_LogFilePath_Proxy": "HRESULT WINAPI IStorageGroup_get_LogFilePath_Proxy(IStorageGroup *This,BSTR *varLogFilePath);", "IStorageGroup_get_SystemFilePath_Proxy": "HRESULT WINAPI IStorageGroup_get_SystemFilePath_Proxy(IStorageGroup *This,BSTR *varSystemFilePath);", "IStorageGroup_get_CircularLogging_Proxy": "HRESULT WINAPI IStorageGroup_get_CircularLogging_Proxy(IStorageGroup *This,VARIANT_BOOL *pCircularLogging);", "IStorageGroup_put_CircularLogging_Proxy": "HRESULT WINAPI IStorageGroup_put_CircularLogging_Proxy(IStorageGroup *This,VARIANT_BOOL varCircularLogging);", "IStorageGroup_get_ZeroDatabase_Proxy": "HRESULT WINAPI IStorageGroup_get_ZeroDatabase_Proxy(IStorageGroup *This,VARIANT_BOOL *pZeroDatabase);", "IStorageGroup_put_ZeroDatabase_Proxy": "HRESULT WINAPI IStorageGroup_put_ZeroDatabase_Proxy(IStorageGroup *This,VARIANT_BOOL varZeroDatabase);", "IStorageGroup_GetInterface_Proxy": "HRESULT WINAPI IStorageGroup_GetInterface_Proxy(IStorageGroup *This,BSTR Interface,IDispatch **ppUnknown);", "IStorageGroup_MoveLogFiles_Proxy": "HRESULT WINAPI IStorageGroup_MoveLogFiles_Proxy(IStorageGroup *This,BSTR LogFilePath,__LONG32 Flags);", "IStorageGroup_MoveSystemFiles_Proxy": "HRESULT WINAPI IStorageGroup_MoveSystemFiles_Proxy(IStorageGroup *This,BSTR SystemFilePath,__LONG32 Flags);", "IPublicStoreDB_get_DataSource_Proxy": "HRESULT WINAPI IPublicStoreDB_get_DataSource_Proxy(IPublicStoreDB *This,IDataSource2 **varDataSource);", "IPublicStoreDB_get_Fields_Proxy": "HRESULT WINAPI IPublicStoreDB_get_Fields_Proxy(IPublicStoreDB *This,Fields **varFields);", "IPublicStoreDB_get_Name_Proxy": "HRESULT WINAPI IPublicStoreDB_get_Name_Proxy(IPublicStoreDB *This,BSTR *pName);", "IPublicStoreDB_put_Name_Proxy": "HRESULT WINAPI IPublicStoreDB_put_Name_Proxy(IPublicStoreDB *This,BSTR varName);", "IPublicStoreDB_get_FolderTree_Proxy": "HRESULT WINAPI IPublicStoreDB_get_FolderTree_Proxy(IPublicStoreDB *This,BSTR *pFolderTree);", "IPublicStoreDB_put_FolderTree_Proxy": "HRESULT WINAPI IPublicStoreDB_put_FolderTree_Proxy(IPublicStoreDB *This,BSTR varFolderTree);", "IPublicStoreDB_get_DBPath_Proxy": "HRESULT WINAPI IPublicStoreDB_get_DBPath_Proxy(IPublicStoreDB *This,BSTR *varDBPath);", "IPublicStoreDB_get_SLVPath_Proxy": "HRESULT WINAPI IPublicStoreDB_get_SLVPath_Proxy(IPublicStoreDB *This,BSTR *varSLVPath);", "IPublicStoreDB_get_Status_Proxy": "HRESULT WINAPI IPublicStoreDB_get_Status_Proxy(IPublicStoreDB *This,CDOEXMStoreDBStatus *varStatus);", "IPublicStoreDB_get_Enabled_Proxy": "HRESULT WINAPI IPublicStoreDB_get_Enabled_Proxy(IPublicStoreDB *This,VARIANT_BOOL *pEnabled);", "IPublicStoreDB_put_Enabled_Proxy": "HRESULT WINAPI IPublicStoreDB_put_Enabled_Proxy(IPublicStoreDB *This,VARIANT_BOOL varEnabled);", "IPublicStoreDB_get_StoreQuota_Proxy": "HRESULT WINAPI IPublicStoreDB_get_StoreQuota_Proxy(IPublicStoreDB *This,__LONG32 *pStoreQuota);", "IPublicStoreDB_put_StoreQuota_Proxy": "HRESULT WINAPI IPublicStoreDB_put_StoreQuota_Proxy(IPublicStoreDB *This,__LONG32 varStoreQuota);", "IPublicStoreDB_get_HardLimit_Proxy": "HRESULT WINAPI IPublicStoreDB_get_HardLimit_Proxy(IPublicStoreDB *This,__LONG32 *pHardLimit);", "IPublicStoreDB_put_HardLimit_Proxy": "HRESULT WINAPI IPublicStoreDB_put_HardLimit_Proxy(IPublicStoreDB *This,__LONG32 varHardLimit);", "IPublicStoreDB_get_ItemSizeLimit_Proxy": "HRESULT WINAPI IPublicStoreDB_get_ItemSizeLimit_Proxy(IPublicStoreDB *This,__LONG32 *pItemSizeLimit);", "IPublicStoreDB_put_ItemSizeLimit_Proxy": "HRESULT WINAPI IPublicStoreDB_put_ItemSizeLimit_Proxy(IPublicStoreDB *This,__LONG32 varItemSizeLimit);", "IPublicStoreDB_get_DaysBeforeItemExpiration_Proxy": "HRESULT WINAPI IPublicStoreDB_get_DaysBeforeItemExpiration_Proxy(IPublicStoreDB *This,__LONG32 *pDaysBeforeItemExpiration);", "IPublicStoreDB_put_DaysBeforeItemExpiration_Proxy": "HRESULT WINAPI IPublicStoreDB_put_DaysBeforeItemExpiration_Proxy(IPublicStoreDB *This,__LONG32 varDaysBeforeItemExpiration);", "IPublicStoreDB_get_DaysBeforeGarbageCollection_Proxy": "HRESULT WINAPI IPublicStoreDB_get_DaysBeforeGarbageCollection_Proxy(IPublicStoreDB *This,__LONG32 *pDaysBeforeGarbageCollection);", "IPublicStoreDB_put_DaysBeforeGarbageCollection_Proxy": "HRESULT WINAPI IPublicStoreDB_put_DaysBeforeGarbageCollection_Proxy(IPublicStoreDB *This,__LONG32 varDaysBeforeGarbageCollection);", "IPublicStoreDB_get_GarbageCollectOnlyAfterBackup_Proxy": "HRESULT WINAPI IPublicStoreDB_get_GarbageCollectOnlyAfterBackup_Proxy(IPublicStoreDB *This,VARIANT_BOOL *pGarbageCollectOnlyAfterBackup);", "IPublicStoreDB_put_GarbageCollectOnlyAfterBackup_Proxy": "HRESULT WINAPI IPublicStoreDB_put_GarbageCollectOnlyAfterBackup_Proxy(IPublicStoreDB *This,VARIANT_BOOL varGarbageCollectOnlyAfterBackup);", "IPublicStoreDB_GetInterface_Proxy": "HRESULT WINAPI IPublicStoreDB_GetInterface_Proxy(IPublicStoreDB *This,BSTR Interface,IDispatch **ppUnknown);", "IPublicStoreDB_MoveDataFiles_Proxy": "HRESULT WINAPI IPublicStoreDB_MoveDataFiles_Proxy(IPublicStoreDB *This,BSTR DBPath,BSTR SLVPath,__LONG32 Flags);", "IPublicStoreDB_Mount_Proxy": "HRESULT WINAPI IPublicStoreDB_Mount_Proxy(IPublicStoreDB *This,__LONG32 Timeout);", "IPublicStoreDB_Dismount_Proxy": "HRESULT WINAPI IPublicStoreDB_Dismount_Proxy(IPublicStoreDB *This,__LONG32 Timeout);", "IMailboxStoreDB_get_DataSource_Proxy": "HRESULT WINAPI IMailboxStoreDB_get_DataSource_Proxy(IMailboxStoreDB *This,IDataSource2 **varDataSource);", "IMailboxStoreDB_get_Fields_Proxy": "HRESULT WINAPI IMailboxStoreDB_get_Fields_Proxy(IMailboxStoreDB *This,Fields **varFields);", "IMailboxStoreDB_get_Name_Proxy": "HRESULT WINAPI IMailboxStoreDB_get_Name_Proxy(IMailboxStoreDB *This,BSTR *pName);", "IMailboxStoreDB_put_Name_Proxy": "HRESULT WINAPI IMailboxStoreDB_put_Name_Proxy(IMailboxStoreDB *This,BSTR varName);", "IMailboxStoreDB_get_PublicStoreDB_Proxy": "HRESULT WINAPI IMailboxStoreDB_get_PublicStoreDB_Proxy(IMailboxStoreDB *This,BSTR *pPublicStoreDB);", "IMailboxStoreDB_put_PublicStoreDB_Proxy": "HRESULT WINAPI IMailboxStoreDB_put_PublicStoreDB_Proxy(IMailboxStoreDB *This,BSTR varPublicStoreDB);", "IMailboxStoreDB_get_OfflineAddressList_Proxy": "HRESULT WINAPI IMailboxStoreDB_get_OfflineAddressList_Proxy(IMailboxStoreDB *This,BSTR *pOfflineAddressList);", "IMailboxStoreDB_put_OfflineAddressList_Proxy": "HRESULT WINAPI IMailboxStoreDB_put_OfflineAddressList_Proxy(IMailboxStoreDB *This,BSTR varOfflineAddressList);", "IMailboxStoreDB_get_DBPath_Proxy": "HRESULT WINAPI IMailboxStoreDB_get_DBPath_Proxy(IMailboxStoreDB *This,BSTR *varDBPath);", "IMailboxStoreDB_get_SLVPath_Proxy": "HRESULT WINAPI IMailboxStoreDB_get_SLVPath_Proxy(IMailboxStoreDB *This,BSTR *varSLVPath);", "IMailboxStoreDB_get_Status_Proxy": "HRESULT WINAPI IMailboxStoreDB_get_Status_Proxy(IMailboxStoreDB *This,CDOEXMStoreDBStatus *varStatus);", "IMailboxStoreDB_get_Enabled_Proxy": "HRESULT WINAPI IMailboxStoreDB_get_Enabled_Proxy(IMailboxStoreDB *This,VARIANT_BOOL *pEnabled);", "IMailboxStoreDB_put_Enabled_Proxy": "HRESULT WINAPI IMailboxStoreDB_put_Enabled_Proxy(IMailboxStoreDB *This,VARIANT_BOOL varEnabled);", "IMailboxStoreDB_get_StoreQuota_Proxy": "HRESULT WINAPI IMailboxStoreDB_get_StoreQuota_Proxy(IMailboxStoreDB *This,__LONG32 *pStoreQuota);", "IMailboxStoreDB_put_StoreQuota_Proxy": "HRESULT WINAPI IMailboxStoreDB_put_StoreQuota_Proxy(IMailboxStoreDB *This,__LONG32 varStoreQuota);", "IMailboxStoreDB_get_OverQuotaLimit_Proxy": "HRESULT WINAPI IMailboxStoreDB_get_OverQuotaLimit_Proxy(IMailboxStoreDB *This,__LONG32 *pOverQuotaLimit);", "IMailboxStoreDB_put_OverQuotaLimit_Proxy": "HRESULT WINAPI IMailboxStoreDB_put_OverQuotaLimit_Proxy(IMailboxStoreDB *This,__LONG32 varOverQuotaLimit);", "IMailboxStoreDB_get_HardLimit_Proxy": "HRESULT WINAPI IMailboxStoreDB_get_HardLimit_Proxy(IMailboxStoreDB *This,__LONG32 *pHardLimit);", "IMailboxStoreDB_put_HardLimit_Proxy": "HRESULT WINAPI IMailboxStoreDB_put_HardLimit_Proxy(IMailboxStoreDB *This,__LONG32 varHardLimit);", "IMailboxStoreDB_get_DaysBeforeGarbageCollection_Proxy": "HRESULT WINAPI IMailboxStoreDB_get_DaysBeforeGarbageCollection_Proxy(IMailboxStoreDB *This,__LONG32 *pDaysBeforeGarbageCollection);", "IMailboxStoreDB_put_DaysBeforeGarbageCollection_Proxy": "HRESULT WINAPI IMailboxStoreDB_put_DaysBeforeGarbageCollection_Proxy(IMailboxStoreDB *This,__LONG32 varDaysBeforeGarbageCollection);", "IMailboxStoreDB_get_DaysBeforeDeletedMailboxCleanup_Proxy": "HRESULT WINAPI IMailboxStoreDB_get_DaysBeforeDeletedMailboxCleanup_Proxy(IMailboxStoreDB *This,__LONG32 *pDaysBeforeDeletedMailboxCleanup);", "IMailboxStoreDB_put_DaysBeforeDeletedMailboxCleanup_Proxy": "HRESULT WINAPI IMailboxStoreDB_put_DaysBeforeDeletedMailboxCleanup_Proxy(IMailboxStoreDB *This,__LONG32 varDaysBeforeDeletedMailboxCleanup);", "IMailboxStoreDB_get_GarbageCollectOnlyAfterBackup_Proxy": "HRESULT WINAPI IMailboxStoreDB_get_GarbageCollectOnlyAfterBackup_Proxy(IMailboxStoreDB *This,VARIANT_BOOL *pGarbageCollectOnlyAfterBackup);", "IMailboxStoreDB_put_GarbageCollectOnlyAfterBackup_Proxy": "HRESULT WINAPI IMailboxStoreDB_put_GarbageCollectOnlyAfterBackup_Proxy(IMailboxStoreDB *This,VARIANT_BOOL varGarbageCollectOnlyAfterBackup);", "IMailboxStoreDB_GetInterface_Proxy": "HRESULT WINAPI IMailboxStoreDB_GetInterface_Proxy(IMailboxStoreDB *This,BSTR Interface,IDispatch **ppUnknown);", "IMailboxStoreDB_MoveDataFiles_Proxy": "HRESULT WINAPI IMailboxStoreDB_MoveDataFiles_Proxy(IMailboxStoreDB *This,BSTR DBPath,BSTR SLVPath,__LONG32 Flags);", "IMailboxStoreDB_Mount_Proxy": "HRESULT WINAPI IMailboxStoreDB_Mount_Proxy(IMailboxStoreDB *This,__LONG32 Timeout);", "IMailboxStoreDB_Dismount_Proxy": "HRESULT WINAPI IMailboxStoreDB_Dismount_Proxy(IMailboxStoreDB *This,__LONG32 Timeout);", "IFolderTree_get_DataSource_Proxy": "HRESULT WINAPI IFolderTree_get_DataSource_Proxy(IFolderTree *This,IDataSource2 **varDataSource);", "IFolderTree_get_Fields_Proxy": "HRESULT WINAPI IFolderTree_get_Fields_Proxy(IFolderTree *This,Fields **varFields);", "IFolderTree_get_Name_Proxy": "HRESULT WINAPI IFolderTree_get_Name_Proxy(IFolderTree *This,BSTR *pName);", "IFolderTree_put_Name_Proxy": "HRESULT WINAPI IFolderTree_put_Name_Proxy(IFolderTree *This,BSTR varName);", "IFolderTree_get_StoreDBs_Proxy": "HRESULT WINAPI IFolderTree_get_StoreDBs_Proxy(IFolderTree *This,VARIANT *varStoreDBs);", "IFolderTree_get_TreeType_Proxy": "HRESULT WINAPI IFolderTree_get_TreeType_Proxy(IFolderTree *This,CDOEXMFolderTreeType *varTreeType);", "IFolderTree_get_RootFolderURL_Proxy": "HRESULT WINAPI IFolderTree_get_RootFolderURL_Proxy(IFolderTree *This,BSTR *varRootFolderURL);", "IFolderTree_GetInterface_Proxy": "HRESULT WINAPI IFolderTree_GetInterface_Proxy(IFolderTree *This,BSTR Interface,IDispatch **ppUnknown);", "IDataSource2_Delete_Proxy": "HRESULT WINAPI IDataSource2_Delete_Proxy(IDataSource2 *This);", "IDataSource2_MoveToContainer_Proxy": "HRESULT WINAPI IDataSource2_MoveToContainer_Proxy(IDataSource2 *This,BSTR ContainerURL);", "Initialize": "HRESULT WINAPI Initialize(DWORD dwSize,BSTR *pBegin,BSTR *pEnd) {", "get__NewEnum": "HRESULT WINAPI get__NewEnum(IUnknown **retval) {", "IEmptyVolumeCacheCallBack_ScanProgress_Proxy": "HRESULT WINAPI IEmptyVolumeCacheCallBack_ScanProgress_Proxy(IEmptyVolumeCacheCallBack *This,DWORDLONG dwlSpaceUsed,DWORD dwFlags,LPCWSTR pcwszStatus);", "IEmptyVolumeCacheCallBack_PurgeProgress_Proxy": "HRESULT WINAPI IEmptyVolumeCacheCallBack_PurgeProgress_Proxy(IEmptyVolumeCacheCallBack *This,DWORDLONG dwlSpaceFreed,DWORDLONG dwlSpaceToFree,DWORD dwFlags,LPCWSTR pcwszStatus);", "IEmptyVolumeCache_Initialize_Proxy": "HRESULT WINAPI IEmptyVolumeCache_Initialize_Proxy(IEmptyVolumeCache *This,HKEY hkRegKey,LPCWSTR pcwszVolume,LPWSTR *ppwszDisplayName,LPWSTR *ppwszDescription,DWORD *pdwFlags);", "IEmptyVolumeCache_GetSpaceUsed_Proxy": "HRESULT WINAPI IEmptyVolumeCache_GetSpaceUsed_Proxy(IEmptyVolumeCache *This,DWORDLONG *pdwlSpaceUsed,IEmptyVolumeCacheCallBack *picb);", "IEmptyVolumeCache_Purge_Proxy": "HRESULT WINAPI IEmptyVolumeCache_Purge_Proxy(IEmptyVolumeCache *This,DWORDLONG dwlSpaceToFree,IEmptyVolumeCacheCallBack *picb);", "IEmptyVolumeCache_ShowProperties_Proxy": "HRESULT WINAPI IEmptyVolumeCache_ShowProperties_Proxy(IEmptyVolumeCache *This,HWND hwnd);", "IEmptyVolumeCache_Deactivate_Proxy": "HRESULT WINAPI IEmptyVolumeCache_Deactivate_Proxy(IEmptyVolumeCache *This,DWORD *pdwFlags);", "IEmptyVolumeCache2_InitializeEx_Proxy": "HRESULT WINAPI IEmptyVolumeCache2_InitializeEx_Proxy(IEmptyVolumeCache2 *This,HKEY hkRegKey,LPCWSTR pcwszVolume,LPCWSTR pcwszKeyName,LPWSTR *ppwszDisplayName,LPWSTR *ppwszDescription,LPWSTR *ppwszBtnText,DWORD *pdwFlags);", "DestroyPhysicalMonitor": "_BOOL WINAPI DestroyPhysicalMonitor (HANDLE hMonitor);", "DestroyPhysicalMonitors": "_BOOL WINAPI DestroyPhysicalMonitors (DWORD dwPhysicalMonitorArraySize, LPPHYSICAL_MONITOR pPhysicalMonitorArray);", "GetNumberOfPhysicalMonitorsFromHMONITOR": "_BOOL WINAPI GetNumberOfPhysicalMonitorsFromHMONITOR (HMONITOR hMonitor, LPDWORD pdwNumberOfPhysicalMonitors);", "GetNumberOfPhysicalMonitorsFromIDirect3DDevice9": "HRESULT WINAPI GetNumberOfPhysicalMonitorsFromIDirect3DDevice9 (IDirect3DDevice9 *pDirect3DDevice9, LPDWORD pdwNumberOfPhysicalMonitors);", "GetPhysicalMonitorsFromHMONITOR": "_BOOL WINAPI GetPhysicalMonitorsFromHMONITOR (HMONITOR hMonitor, DWORD dwPhysicalMonitorArraySize, LPPHYSICAL_MONITOR pPhysicalMonitorArray);", "GetPhysicalMonitorsFromIDirect3DDevice9": "HRESULT WINAPI GetPhysicalMonitorsFromIDirect3DDevice9 (IDirect3DDevice9 *pDirect3DDevice9, DWORD dwPhysicalMonitorArraySize, LPPHYSICAL_MONITOR pPhysicalMonitorArray);", "CryptXmlAddObject": "CRYPTXMLAPI HRESULT WINAPI CryptXmlAddObject(", "CryptXmlClose": "CRYPTXMLAPI HRESULT WINAPI CryptXmlClose(", "CryptXmlCreateReference": "CRYPTXMLAPI HRESULT WINAPI CryptXmlCreateReference(", "CryptXmlDigestReference": "CRYPTXMLAPI HRESULT WINAPI CryptXmlDigestReference(", "CryptXmlEncode": "CRYPTXMLAPI HRESULT WINAPI CryptXmlEncode(", "CryptXmlGetAlgorithmInfo": "CRYPTXMLAPI HRESULT WINAPI CryptXmlGetAlgorithmInfo(", "CryptXmlGetDocContext": "CRYPTXMLAPI HRESULT WINAPI CryptXmlGetDocContext(", "CryptXmlGetReference": "CRYPTXMLAPI HRESULT WINAPI CryptXmlGetReference(", "CryptXmlGetSignature": "CRYPTXMLAPI HRESULT WINAPI CryptXmlGetSignature(", "CryptXmlGetStatus": "CRYPTXMLAPI HRESULT WINAPI CryptXmlGetStatus(", "CryptXmlGetTransforms": "CRYPTXMLAPI HRESULT WINAPI CryptXmlGetTransforms(", "CryptXmlImportPublicKey": "CRYPTXMLAPI HRESULT WINAPI CryptXmlImportPublicKey(", "CryptXmlOpenToDecode": "CRYPTXMLAPI HRESULT WINAPI CryptXmlOpenToDecode(", "CryptXmlOpenToEncode": "CRYPTXMLAPI HRESULT WINAPI CryptXmlOpenToEncode(", "CryptXmlSetHMACSecret": "CRYPTXMLAPI HRESULT WINAPI CryptXmlSetHMACSecret(", "CryptXmlSign": "CRYPTXMLAPI HRESULT WINAPI CryptXmlSign(", "CryptXmlVerifySignature": "CRYPTXMLAPI HRESULT WINAPI CryptXmlVerifySignature(", "ICertEncodeStringArray_Decode_Proxy": "HRESULT WINAPI ICertEncodeStringArray_Decode_Proxy(ICertEncodeStringArray *This,const BSTR strBinary);", "ICertEncodeStringArray_GetStringType_Proxy": "HRESULT WINAPI ICertEncodeStringArray_GetStringType_Proxy(ICertEncodeStringArray *This,LONG *pStringType);", "ICertEncodeStringArray_GetCount_Proxy": "HRESULT WINAPI ICertEncodeStringArray_GetCount_Proxy(ICertEncodeStringArray *This,LONG *pCount);", "ICertEncodeStringArray_GetValue_Proxy": "HRESULT WINAPI ICertEncodeStringArray_GetValue_Proxy(ICertEncodeStringArray *This,LONG Index,BSTR *pstr);", "ICertEncodeStringArray_Reset_Proxy": "HRESULT WINAPI ICertEncodeStringArray_Reset_Proxy(ICertEncodeStringArray *This,LONG Count,LONG StringType);", "ICertEncodeStringArray_SetValue_Proxy": "HRESULT WINAPI ICertEncodeStringArray_SetValue_Proxy(ICertEncodeStringArray *This,LONG Index,const BSTR str);", "ICertEncodeStringArray_Encode_Proxy": "HRESULT WINAPI ICertEncodeStringArray_Encode_Proxy(ICertEncodeStringArray *This,BSTR *pstrBinary);", "ICertEncodeLongArray_Decode_Proxy": "HRESULT WINAPI ICertEncodeLongArray_Decode_Proxy(ICertEncodeLongArray *This,const BSTR strBinary);", "ICertEncodeLongArray_GetCount_Proxy": "HRESULT WINAPI ICertEncodeLongArray_GetCount_Proxy(ICertEncodeLongArray *This,LONG *pCount);", "ICertEncodeLongArray_GetValue_Proxy": "HRESULT WINAPI ICertEncodeLongArray_GetValue_Proxy(ICertEncodeLongArray *This,LONG Index,LONG *pValue);", "ICertEncodeLongArray_Reset_Proxy": "HRESULT WINAPI ICertEncodeLongArray_Reset_Proxy(ICertEncodeLongArray *This,LONG Count);", "ICertEncodeLongArray_SetValue_Proxy": "HRESULT WINAPI ICertEncodeLongArray_SetValue_Proxy(ICertEncodeLongArray *This,LONG Index,LONG Value);", "ICertEncodeLongArray_Encode_Proxy": "HRESULT WINAPI ICertEncodeLongArray_Encode_Proxy(ICertEncodeLongArray *This,BSTR *pstrBinary);", "ICertEncodeDateArray_Decode_Proxy": "HRESULT WINAPI ICertEncodeDateArray_Decode_Proxy(ICertEncodeDateArray *This,const BSTR strBinary);", "ICertEncodeDateArray_GetCount_Proxy": "HRESULT WINAPI ICertEncodeDateArray_GetCount_Proxy(ICertEncodeDateArray *This,LONG *pCount);", "ICertEncodeDateArray_GetValue_Proxy": "HRESULT WINAPI ICertEncodeDateArray_GetValue_Proxy(ICertEncodeDateArray *This,LONG Index,DATE *pValue);", "ICertEncodeDateArray_Reset_Proxy": "HRESULT WINAPI ICertEncodeDateArray_Reset_Proxy(ICertEncodeDateArray *This,LONG Count);", "ICertEncodeDateArray_SetValue_Proxy": "HRESULT WINAPI ICertEncodeDateArray_SetValue_Proxy(ICertEncodeDateArray *This,LONG Index,DATE Value);", "ICertEncodeDateArray_Encode_Proxy": "HRESULT WINAPI ICertEncodeDateArray_Encode_Proxy(ICertEncodeDateArray *This,BSTR *pstrBinary);", "ICertEncodeCRLDistInfo_Decode_Proxy": "HRESULT WINAPI ICertEncodeCRLDistInfo_Decode_Proxy(ICertEncodeCRLDistInfo *This,const BSTR strBinary);", "ICertEncodeCRLDistInfo_GetDistPointCount_Proxy": "HRESULT WINAPI ICertEncodeCRLDistInfo_GetDistPointCount_Proxy(ICertEncodeCRLDistInfo *This,LONG *pDistPointCount);", "ICertEncodeCRLDistInfo_GetNameCount_Proxy": "HRESULT WINAPI ICertEncodeCRLDistInfo_GetNameCount_Proxy(ICertEncodeCRLDistInfo *This,LONG DistPointIndex,LONG *pNameCount);", "ICertEncodeCRLDistInfo_GetNameChoice_Proxy": "HRESULT WINAPI ICertEncodeCRLDistInfo_GetNameChoice_Proxy(ICertEncodeCRLDistInfo *This,LONG DistPointIndex,LONG NameIndex,LONG *pNameChoice);", "ICertEncodeCRLDistInfo_GetName_Proxy": "HRESULT WINAPI ICertEncodeCRLDistInfo_GetName_Proxy(ICertEncodeCRLDistInfo *This,LONG DistPointIndex,LONG NameIndex,BSTR *pstrName);", "ICertEncodeCRLDistInfo_Reset_Proxy": "HRESULT WINAPI ICertEncodeCRLDistInfo_Reset_Proxy(ICertEncodeCRLDistInfo *This,LONG DistPointCount);", "ICertEncodeCRLDistInfo_SetNameCount_Proxy": "HRESULT WINAPI ICertEncodeCRLDistInfo_SetNameCount_Proxy(ICertEncodeCRLDistInfo *This,LONG DistPointIndex,LONG NameCount);", "ICertEncodeCRLDistInfo_SetNameEntry_Proxy": "HRESULT WINAPI ICertEncodeCRLDistInfo_SetNameEntry_Proxy(ICertEncodeCRLDistInfo *This,LONG DistPointIndex,LONG NameIndex,LONG NameChoice,const BSTR strName);", "ICertEncodeCRLDistInfo_Encode_Proxy": "HRESULT WINAPI ICertEncodeCRLDistInfo_Encode_Proxy(ICertEncodeCRLDistInfo *This,BSTR *pstrBinary);", "ICertEncodeAltName_Decode_Proxy": "HRESULT WINAPI ICertEncodeAltName_Decode_Proxy(ICertEncodeAltName *This,const BSTR strBinary);", "ICertEncodeAltName_GetNameCount_Proxy": "HRESULT WINAPI ICertEncodeAltName_GetNameCount_Proxy(ICertEncodeAltName *This,LONG *pNameCount);", "ICertEncodeAltName_GetNameChoice_Proxy": "HRESULT WINAPI ICertEncodeAltName_GetNameChoice_Proxy(ICertEncodeAltName *This,LONG NameIndex,LONG *pNameChoice);", "ICertEncodeAltName_GetName_Proxy": "HRESULT WINAPI ICertEncodeAltName_GetName_Proxy(ICertEncodeAltName *This,LONG NameIndex,BSTR *pstrName);", "ICertEncodeAltName_Reset_Proxy": "HRESULT WINAPI ICertEncodeAltName_Reset_Proxy(ICertEncodeAltName *This,LONG NameCount);", "ICertEncodeAltName_SetNameEntry_Proxy": "HRESULT WINAPI ICertEncodeAltName_SetNameEntry_Proxy(ICertEncodeAltName *This,LONG NameIndex,LONG NameChoice,const BSTR strName);", "ICertEncodeAltName_Encode_Proxy": "HRESULT WINAPI ICertEncodeAltName_Encode_Proxy(ICertEncodeAltName *This,BSTR *pstrBinary);", "ICertEncodeBitString_Decode_Proxy": "HRESULT WINAPI ICertEncodeBitString_Decode_Proxy(ICertEncodeBitString *This,const BSTR strBinary);", "ICertEncodeBitString_GetBitCount_Proxy": "HRESULT WINAPI ICertEncodeBitString_GetBitCount_Proxy(ICertEncodeBitString *This,LONG *pBitCount);", "ICertEncodeBitString_GetBitString_Proxy": "HRESULT WINAPI ICertEncodeBitString_GetBitString_Proxy(ICertEncodeBitString *This,BSTR *pstrBitString);", "ICertEncodeBitString_Encode_Proxy": "HRESULT WINAPI ICertEncodeBitString_Encode_Proxy(ICertEncodeBitString *This,LONG BitCount,BSTR strBitString,BSTR *pstrBinary);", "IChannelMgr_AddChannelShortcut_Proxy": "HRESULT WINAPI IChannelMgr_AddChannelShortcut_Proxy(IChannelMgr *This,CHANNELSHORTCUTINFO *pChannelInfo);", "IChannelMgr_DeleteChannelShortcut_Proxy": "HRESULT WINAPI IChannelMgr_DeleteChannelShortcut_Proxy(IChannelMgr *This,LPWSTR pszTitle);", "IChannelMgr_AddCategory_Proxy": "HRESULT WINAPI IChannelMgr_AddCategory_Proxy(IChannelMgr *This,CHANNELCATEGORYINFO *pCategoryInfo);", "IChannelMgr_DeleteCategory_Proxy": "HRESULT WINAPI IChannelMgr_DeleteCategory_Proxy(IChannelMgr *This,LPWSTR pszTitle);", "IChannelMgr_EnumChannels_Proxy": "HRESULT WINAPI IChannelMgr_EnumChannels_Proxy(IChannelMgr *This,DWORD dwEnumFlags,LPCWSTR pszURL,IEnumChannels **pIEnumChannels);", "IEnumChannels_Next_Proxy": "HRESULT WINAPI IEnumChannels_Next_Proxy(IEnumChannels *This,ULONG celt,CHANNELENUMINFO *rgChanInf,ULONG *pceltFetched);", "IEnumChannels_Skip_Proxy": "HRESULT WINAPI IEnumChannels_Skip_Proxy(IEnumChannels *This,ULONG celt);", "IEnumChannels_Reset_Proxy": "HRESULT WINAPI IEnumChannels_Reset_Proxy(IEnumChannels *This);", "IEnumChannels_Clone_Proxy": "HRESULT WINAPI IEnumChannels_Clone_Proxy(IEnumChannels *This,IEnumChannels **ppenum);", "UMELoadMenuA": "DWORD WINAPI UMELoadMenuA(HWND hwndMessage,PUMS_LOADMENUA pumsload);", "UMELoadMenuW": "DWORD WINAPI UMELoadMenuW(HWND hwndMessage,PUMS_LOADMENUW pumsload);", "UMEGetExtendedErrorStringA": "LPSTR WINAPI UMEGetExtendedErrorStringA(VOID);", "UMEGetExtendedErrorStringW": "LPWSTR WINAPI UMEGetExtendedErrorStringW(VOID);", "UMEUnloadMenu": "VOID WINAPI UMEUnloadMenu(VOID);", "UMEInitializeMenu": "VOID WINAPI UMEInitializeMenu(VOID);", "UMERefresh": "VOID WINAPI UMERefresh(HWND hwndParent);", "UMEMenuAction": "VOID WINAPI UMEMenuAction(HWND hwndParent,DWORD dwEventId);", "UMECreateA": "VOID WINAPI UMECreateA(HWND hwndParent,PUMS_GETSELA pumsSelection);", "UMECreateW": "VOID WINAPI UMECreateW(HWND hwndParent,PUMS_GETSELW pumsSelection);", "UMEDeleteA": "VOID WINAPI UMEDeleteA(HWND hwndParent,PUMS_GETSELA pumsSelection);", "UMEDeleteW": "VOID WINAPI UMEDeleteW(HWND hwndParent,PUMS_GETSELW pumsSelection);", "UMERenameA": "VOID WINAPI UMERenameA(HWND hwndParent,PUMS_GETSELA pumsSelection,LPSTR pchNewName);", "UMERenameW": "VOID WINAPI UMERenameW(HWND hwndParent,PUMS_GETSELW pumsSelection,LPWSTR pchNewName);", "IISApplicationPool_Recycle_Proxy": "HRESULT WINAPI IISApplicationPool_Recycle_Proxy(IISApplicationPool *This);", "IISApplicationPool_EnumAppsInPool_Proxy": "HRESULT WINAPI IISApplicationPool_EnumAppsInPool_Proxy(IISApplicationPool *This,VARIANT *bstrBuffer);", "IISApplicationPool_Start_Proxy": "HRESULT WINAPI IISApplicationPool_Start_Proxy(IISApplicationPool *This);", "IISApplicationPool_Stop_Proxy": "HRESULT WINAPI IISApplicationPool_Stop_Proxy(IISApplicationPool *This);", "IISWebService_GetCurrentMode_Proxy": "HRESULT WINAPI IISWebService_GetCurrentMode_Proxy(IISWebService *This,VARIANT *pvServerMode);", "IISWebService_CreateNewSite_Proxy": "HRESULT WINAPI IISWebService_CreateNewSite_Proxy(IISWebService *This,BSTR bstrServerComment,VARIANT *pvServerBindings,BSTR bstrRootVDirPath,VARIANT vServerID,VARIANT *pvActualID);", "IISWebService_EnableApplication_Proxy": "HRESULT WINAPI IISWebService_EnableApplication_Proxy(IISWebService *This,BSTR bstrAppName);", "IISWebService_RemoveApplication_Proxy": "HRESULT WINAPI IISWebService_RemoveApplication_Proxy(IISWebService *This,BSTR bstrAppName);", "IISWebService_ListApplications_Proxy": "HRESULT WINAPI IISWebService_ListApplications_Proxy(IISWebService *This,VARIANT *bstrBuffer);", "IISWebService_AddDependency_Proxy": "HRESULT WINAPI IISWebService_AddDependency_Proxy(IISWebService *This,BSTR bstrApplication,BSTR bstrGroupID);", "IISWebService_RemoveDependency_Proxy": "HRESULT WINAPI IISWebService_RemoveDependency_Proxy(IISWebService *This,BSTR bstrApplication,BSTR bstrGroupID);", "IISWebService_EnableWebServiceExtension_Proxy": "HRESULT WINAPI IISWebService_EnableWebServiceExtension_Proxy(IISWebService *This,BSTR bstrExtension);", "IISWebService_DisableWebServiceExtension_Proxy": "HRESULT WINAPI IISWebService_DisableWebServiceExtension_Proxy(IISWebService *This,BSTR bstrExtension);", "IISWebService_ListWebServiceExtensions_Proxy": "HRESULT WINAPI IISWebService_ListWebServiceExtensions_Proxy(IISWebService *This,VARIANT *bstrBuffer);", "IISWebService_EnableExtensionFile_Proxy": "HRESULT WINAPI IISWebService_EnableExtensionFile_Proxy(IISWebService *This,BSTR bstrExtensionFile);", "IISWebService_DisableExtensionFile_Proxy": "HRESULT WINAPI IISWebService_DisableExtensionFile_Proxy(IISWebService *This,BSTR bstrExtensionFile);", "IISWebService_AddExtensionFile_Proxy": "HRESULT WINAPI IISWebService_AddExtensionFile_Proxy(IISWebService *This,BSTR bstrExtensionFile,VARIANT bAccess,BSTR bstrGroupID,VARIANT bCanDelete,BSTR bstrDescription);", "IISWebService_DeleteExtensionFileRecord_Proxy": "HRESULT WINAPI IISWebService_DeleteExtensionFileRecord_Proxy(IISWebService *This,BSTR bstrExtensionFile);", "IISWebService_ListExtensionFiles_Proxy": "HRESULT WINAPI IISWebService_ListExtensionFiles_Proxy(IISWebService *This,VARIANT *bstrBuffer);", "IISWebService_QueryGroupIDStatus_Proxy": "HRESULT WINAPI IISWebService_QueryGroupIDStatus_Proxy(IISWebService *This,BSTR bstrGroupID,VARIANT *bstrBuffer);", "IISDsCrMap_CreateMapping_Proxy": "HRESULT WINAPI IISDsCrMap_CreateMapping_Proxy(IISDsCrMap *This,VARIANT vCert,BSTR bstrNtAcct,BSTR bstrNtPwd,BSTR bstrName,LONG lEnabled);", "IISDsCrMap_GetMapping_Proxy": "HRESULT WINAPI IISDsCrMap_GetMapping_Proxy(IISDsCrMap *This,LONG lMethod,VARIANT vKey,VARIANT *pvCert,VARIANT *pbstrNtAcct,VARIANT *pbstrNtPwd,VARIANT *pbstrName,VARIANT *plEnabled);", "IISDsCrMap_DeleteMapping_Proxy": "HRESULT WINAPI IISDsCrMap_DeleteMapping_Proxy(IISDsCrMap *This,LONG lMethod,VARIANT vKey);", "IISDsCrMap_SetEnabled_Proxy": "HRESULT WINAPI IISDsCrMap_SetEnabled_Proxy(IISDsCrMap *This,LONG lMethod,VARIANT vKey,LONG lEnabled);", "IISDsCrMap_SetName_Proxy": "HRESULT WINAPI IISDsCrMap_SetName_Proxy(IISDsCrMap *This,LONG lMethod,VARIANT vKey,BSTR bstrName);", "IISDsCrMap_SetPwd_Proxy": "HRESULT WINAPI IISDsCrMap_SetPwd_Proxy(IISDsCrMap *This,LONG lMethod,VARIANT vKey,BSTR bstrPwd);", "IISDsCrMap_SetAcct_Proxy": "HRESULT WINAPI IISDsCrMap_SetAcct_Proxy(IISDsCrMap *This,LONG lMethod,VARIANT vKey,BSTR bstrAcct);", "IISApp_AppCreate_Proxy": "HRESULT WINAPI IISApp_AppCreate_Proxy(IISApp *This,VARIANT_BOOL bSetInProcFlag);", "IISApp_AppDelete_Proxy": "HRESULT WINAPI IISApp_AppDelete_Proxy(IISApp *This);", "IISApp_AppDeleteRecursive_Proxy": "HRESULT WINAPI IISApp_AppDeleteRecursive_Proxy(IISApp *This);", "IISApp_AppUnLoad_Proxy": "HRESULT WINAPI IISApp_AppUnLoad_Proxy(IISApp *This);", "IISApp_AppUnLoadRecursive_Proxy": "HRESULT WINAPI IISApp_AppUnLoadRecursive_Proxy(IISApp *This);", "IISApp_AppDisable_Proxy": "HRESULT WINAPI IISApp_AppDisable_Proxy(IISApp *This);", "IISApp_AppDisableRecursive_Proxy": "HRESULT WINAPI IISApp_AppDisableRecursive_Proxy(IISApp *This);", "IISApp_AppEnable_Proxy": "HRESULT WINAPI IISApp_AppEnable_Proxy(IISApp *This);", "IISApp_AppEnableRecursive_Proxy": "HRESULT WINAPI IISApp_AppEnableRecursive_Proxy(IISApp *This);", "IISApp_AppGetStatus_Proxy": "HRESULT WINAPI IISApp_AppGetStatus_Proxy(IISApp *This,DWORD *pdwStatus);", "IISApp_AspAppRestart_Proxy": "HRESULT WINAPI IISApp_AspAppRestart_Proxy(IISApp *This);", "IISApp2_AppCreate2_Proxy": "HRESULT WINAPI IISApp2_AppCreate2_Proxy(IISApp2 *This,LONG lAppMode);", "IISApp2_AppGetStatus2_Proxy": "HRESULT WINAPI IISApp2_AppGetStatus2_Proxy(IISApp2 *This,LONG *lpStatus);", "IISApp3_AppCreate3_Proxy": "HRESULT WINAPI IISApp3_AppCreate3_Proxy(IISApp3 *This,LONG lAppMode,VARIANT bstrAppPooI,VARIANT bCreatePool);", "IISComputer_Backup_Proxy": "HRESULT WINAPI IISComputer_Backup_Proxy(IISComputer *This,BSTR bstrLocation,LONG lVersion,LONG lFlags);", "IISComputer_Restore_Proxy": "HRESULT WINAPI IISComputer_Restore_Proxy(IISComputer *This,BSTR bstrLocation,LONG lVersion,LONG lFlags);", "IISComputer_EnumBackups_Proxy": "HRESULT WINAPI IISComputer_EnumBackups_Proxy(IISComputer *This,BSTR bstrLocation,LONG lIndex,VARIANT *pvVersion,VARIANT *pvLocations,VARIANT *pvDate);", "IISComputer_DeleteBackup_Proxy": "HRESULT WINAPI IISComputer_DeleteBackup_Proxy(IISComputer *This,BSTR bstrLocation,LONG lVersion);", "IISComputer2_BackupWithPassword_Proxy": "HRESULT WINAPI IISComputer2_BackupWithPassword_Proxy(IISComputer2 *This,BSTR bstrLocation,LONG lVersion,LONG lFlags,BSTR bstrPassword);", "IISComputer2_RestoreWithPassword_Proxy": "HRESULT WINAPI IISComputer2_RestoreWithPassword_Proxy(IISComputer2 *This,BSTR bstrLocation,LONG lVersion,LONG lFlags,BSTR bstrPassword);", "IISComputer2_Export_Proxy": "HRESULT WINAPI IISComputer2_Export_Proxy(IISComputer2 *This,BSTR bstrPassword,BSTR bstrFilename,BSTR bstrSourcePath,LONG lFlags);", "IISComputer2_Import_Proxy": "HRESULT WINAPI IISComputer2_Import_Proxy(IISComputer2 *This,BSTR bstrPassword,BSTR bstrFilename,BSTR bstrSourcePath,BSTR bstrDestPath,LONG lFlags);", "IISComputer2_SaveData_Proxy": "HRESULT WINAPI IISComputer2_SaveData_Proxy(IISComputer2 *This);", "ITravelEntry_Invoke_Proxy": "HRESULT WINAPI ITravelEntry_Invoke_Proxy(ITravelEntry *This,IUnknown *punk);", "ITravelEntry_Update_Proxy": "HRESULT WINAPI ITravelEntry_Update_Proxy(ITravelEntry *This,IUnknown *punk,WINBOOL fIsLocalAnchor);", "ITravelEntry_GetPidl_Proxy": "HRESULT WINAPI ITravelEntry_GetPidl_Proxy(ITravelEntry *This,LPITEMIDLIST *ppidl);", "ITravelLog_AddEntry_Proxy": "HRESULT WINAPI ITravelLog_AddEntry_Proxy(ITravelLog *This,IUnknown *punk,WINBOOL fIsLocalAnchor);", "ITravelLog_UpdateEntry_Proxy": "HRESULT WINAPI ITravelLog_UpdateEntry_Proxy(ITravelLog *This,IUnknown *punk,WINBOOL fIsLocalAnchor);", "ITravelLog_UpdateExternal_Proxy": "HRESULT WINAPI ITravelLog_UpdateExternal_Proxy(ITravelLog *This,IUnknown *punk,IUnknown *punkHLBrowseContext);", "ITravelLog_Travel_Proxy": "HRESULT WINAPI ITravelLog_Travel_Proxy(ITravelLog *This,IUnknown *punk,int iOffset);", "ITravelLog_GetTravelEntry_Proxy": "HRESULT WINAPI ITravelLog_GetTravelEntry_Proxy(ITravelLog *This,IUnknown *punk,int iOffset,ITravelEntry **ppte);", "ITravelLog_FindTravelEntry_Proxy": "HRESULT WINAPI ITravelLog_FindTravelEntry_Proxy(ITravelLog *This,IUnknown *punk,LPCITEMIDLIST pidl,ITravelEntry **ppte);", "ITravelLog_GetToolTipText_Proxy": "HRESULT WINAPI ITravelLog_GetToolTipText_Proxy(ITravelLog *This,IUnknown *punk,int iOffset,int idsTemplate,LPWSTR pwzText,DWORD cchText);", "ITravelLog_InsertMenuEntries_Proxy": "HRESULT WINAPI ITravelLog_InsertMenuEntries_Proxy(ITravelLog *This,IUnknown *punk,HMENU hmenu,int nPos,int idFirst,int idLast,DWORD dwFlags);", "ITravelLog_Clone_Proxy": "HRESULT WINAPI ITravelLog_Clone_Proxy(ITravelLog *This,ITravelLog **pptl);", "ITravelLog_CountEntries_Proxy": "DWORD WINAPI ITravelLog_CountEntries_Proxy(ITravelLog *This,IUnknown *punk);", "ITravelLog_Revert_Proxy": "HRESULT WINAPI ITravelLog_Revert_Proxy(ITravelLog *This);", "IExpDispSupport_FindCIE4ConnectionPoint_Proxy": "HRESULT WINAPI IExpDispSupport_FindCIE4ConnectionPoint_Proxy(IExpDispSupport *This,REFIID riid,CIE4ConnectionPoint **ppccp);", "IExpDispSupport_OnTranslateAccelerator_Proxy": "HRESULT WINAPI IExpDispSupport_OnTranslateAccelerator_Proxy(IExpDispSupport *This,MSG *pMsg,DWORD grfModifiers);", "IExpDispSupport_OnInvoke_Proxy": "HRESULT WINAPI IExpDispSupport_OnInvoke_Proxy(IExpDispSupport *This,DISPID dispidMember,REFIID iid,LCID lcid,WORD wFlags,DISPPARAMS *pdispparams,VARIANT *pVarResult,EXCEPINFO *pexcepinfo,UINT *puArgErr);", "IBrowserService_GetParentSite_Proxy": "HRESULT WINAPI IBrowserService_GetParentSite_Proxy(IBrowserService *This,IOleInPlaceSite **ppipsite);", "IBrowserService_SetTitle_Proxy": "HRESULT WINAPI IBrowserService_SetTitle_Proxy(IBrowserService *This,IShellView *psv,LPCWSTR pszName);", "IBrowserService_GetTitle_Proxy": "HRESULT WINAPI IBrowserService_GetTitle_Proxy(IBrowserService *This,IShellView *psv,LPWSTR pszName,DWORD cchName);", "IBrowserService_GetOleObject_Proxy": "HRESULT WINAPI IBrowserService_GetOleObject_Proxy(IBrowserService *This,IOleObject **ppobjv);", "IBrowserService_GetTravelLog_Proxy": "HRESULT WINAPI IBrowserService_GetTravelLog_Proxy(IBrowserService *This,ITravelLog **pptl);", "IBrowserService_ShowControlWindow_Proxy": "HRESULT WINAPI IBrowserService_ShowControlWindow_Proxy(IBrowserService *This,UINT id,WINBOOL fShow);", "IBrowserService_IsControlWindowShown_Proxy": "HRESULT WINAPI IBrowserService_IsControlWindowShown_Proxy(IBrowserService *This,UINT id,WINBOOL *pfShown);", "IBrowserService_IEGetDisplayName_Proxy": "HRESULT WINAPI IBrowserService_IEGetDisplayName_Proxy(IBrowserService *This,LPCITEMIDLIST pidl,LPWSTR pwszName,UINT uFlags);", "IBrowserService_IEParseDisplayName_Proxy": "HRESULT WINAPI IBrowserService_IEParseDisplayName_Proxy(IBrowserService *This,UINT uiCP,LPCWSTR pwszPath,LPITEMIDLIST *ppidlOut);", "IBrowserService_DisplayParseError_Proxy": "HRESULT WINAPI IBrowserService_DisplayParseError_Proxy(IBrowserService *This,HRESULT hres,LPCWSTR pwszPath);", "IBrowserService_NavigateToPidl_Proxy": "HRESULT WINAPI IBrowserService_NavigateToPidl_Proxy(IBrowserService *This,LPCITEMIDLIST pidl,DWORD grfHLNF);", "IBrowserService_SetNavigateState_Proxy": "HRESULT WINAPI IBrowserService_SetNavigateState_Proxy(IBrowserService *This,BNSTATE bnstate);", "IBrowserService_GetNavigateState_Proxy": "HRESULT WINAPI IBrowserService_GetNavigateState_Proxy(IBrowserService *This,BNSTATE *pbnstate);", "IBrowserService_NotifyRedirect_Proxy": "HRESULT WINAPI IBrowserService_NotifyRedirect_Proxy(IBrowserService *This,IShellView *psv,LPCITEMIDLIST pidl,WINBOOL *pfDidBrowse);", "IBrowserService_UpdateWindowList_Proxy": "HRESULT WINAPI IBrowserService_UpdateWindowList_Proxy(IBrowserService *This);", "IBrowserService_UpdateBackForwardState_Proxy": "HRESULT WINAPI IBrowserService_UpdateBackForwardState_Proxy(IBrowserService *This);", "IBrowserService_SetFlags_Proxy": "HRESULT WINAPI IBrowserService_SetFlags_Proxy(IBrowserService *This,DWORD dwFlags,DWORD dwFlagMask);", "IBrowserService_GetFlags_Proxy": "HRESULT WINAPI IBrowserService_GetFlags_Proxy(IBrowserService *This,DWORD *pdwFlags);", "IBrowserService_CanNavigateNow_Proxy": "HRESULT WINAPI IBrowserService_CanNavigateNow_Proxy(IBrowserService *This);", "IBrowserService_GetPidl_Proxy": "HRESULT WINAPI IBrowserService_GetPidl_Proxy(IBrowserService *This,LPITEMIDLIST *ppidl);", "IBrowserService_SetReferrer_Proxy": "HRESULT WINAPI IBrowserService_SetReferrer_Proxy(IBrowserService *This,LPITEMIDLIST pidl);", "IBrowserService_GetBrowserIndex_Proxy": "DWORD WINAPI IBrowserService_GetBrowserIndex_Proxy(IBrowserService *This);", "IBrowserService_GetBrowserByIndex_Proxy": "HRESULT WINAPI IBrowserService_GetBrowserByIndex_Proxy(IBrowserService *This,DWORD dwID,IUnknown **ppunk);", "IBrowserService_GetHistoryObject_Proxy": "HRESULT WINAPI IBrowserService_GetHistoryObject_Proxy(IBrowserService *This,IOleObject **ppole,IStream **pstm,IBindCtx **ppbc);", "IBrowserService_SetHistoryObject_Proxy": "HRESULT WINAPI IBrowserService_SetHistoryObject_Proxy(IBrowserService *This,IOleObject *pole,WINBOOL fIsLocalAnchor);", "IBrowserService_CacheOLEServer_Proxy": "HRESULT WINAPI IBrowserService_CacheOLEServer_Proxy(IBrowserService *This,IOleObject *pole);", "IBrowserService_GetSetCodePage_Proxy": "HRESULT WINAPI IBrowserService_GetSetCodePage_Proxy(IBrowserService *This,VARIANT *pvarIn,VARIANT *pvarOut);", "IBrowserService_OnHttpEquiv_Proxy": "HRESULT WINAPI IBrowserService_OnHttpEquiv_Proxy(IBrowserService *This,IShellView *psv,WINBOOL fDone,VARIANT *pvarargIn,VARIANT *pvarargOut);", "IBrowserService_GetPalette_Proxy": "HRESULT WINAPI IBrowserService_GetPalette_Proxy(IBrowserService *This,HPALETTE *hpal);", "IBrowserService_RegisterWindow_Proxy": "HRESULT WINAPI IBrowserService_RegisterWindow_Proxy(IBrowserService *This,WINBOOL fForceRegister,int swc);", "IShellService_SetOwner_Proxy": "HRESULT WINAPI IShellService_SetOwner_Proxy(IShellService *This,IUnknown *punkOwner);", "IBrowserService2_WndProcBS_Proxy": "LRESULT WINAPI IBrowserService2_WndProcBS_Proxy(IBrowserService2 *This,HWND hwnd,UINT uMsg,WPARAM wParam,LPARAM lParam);", "IBrowserService2_SetAsDefFolderSettings_Proxy": "HRESULT WINAPI IBrowserService2_SetAsDefFolderSettings_Proxy(IBrowserService2 *This);", "IBrowserService2_GetViewRect_Proxy": "HRESULT WINAPI IBrowserService2_GetViewRect_Proxy(IBrowserService2 *This,RECT *prc);", "IBrowserService2_OnSize_Proxy": "HRESULT WINAPI IBrowserService2_OnSize_Proxy(IBrowserService2 *This,WPARAM wParam);", "IBrowserService2_OnCreate_Proxy": "HRESULT WINAPI IBrowserService2_OnCreate_Proxy(IBrowserService2 *This,struct tagCREATESTRUCTW *pcs);", "IBrowserService2_OnCommand_Proxy": "LRESULT WINAPI IBrowserService2_OnCommand_Proxy(IBrowserService2 *This,WPARAM wParam,LPARAM lParam);", "IBrowserService2_OnDestroy_Proxy": "HRESULT WINAPI IBrowserService2_OnDestroy_Proxy(IBrowserService2 *This);", "IBrowserService2_OnNotify_Proxy": "LRESULT WINAPI IBrowserService2_OnNotify_Proxy(IBrowserService2 *This,struct tagNMHDR *pnm);", "IBrowserService2_OnSetFocus_Proxy": "HRESULT WINAPI IBrowserService2_OnSetFocus_Proxy(IBrowserService2 *This);", "IBrowserService2_OnFrameWindowActivateBS_Proxy": "HRESULT WINAPI IBrowserService2_OnFrameWindowActivateBS_Proxy(IBrowserService2 *This,WINBOOL fActive);", "IBrowserService2_ReleaseShellView_Proxy": "HRESULT WINAPI IBrowserService2_ReleaseShellView_Proxy(IBrowserService2 *This);", "IBrowserService2_ActivatePendingView_Proxy": "HRESULT WINAPI IBrowserService2_ActivatePendingView_Proxy(IBrowserService2 *This);", "IBrowserService2_CreateViewWindow_Proxy": "HRESULT WINAPI IBrowserService2_CreateViewWindow_Proxy(IBrowserService2 *This,IShellView *psvNew,IShellView *psvOld,LPRECT prcView,HWND *phwnd);", "IBrowserService2_CreateBrowserPropSheetExt_Proxy": "HRESULT WINAPI IBrowserService2_CreateBrowserPropSheetExt_Proxy(IBrowserService2 *This,REFIID riid,void **ppv);", "IBrowserService2_GetViewWindow_Proxy": "HRESULT WINAPI IBrowserService2_GetViewWindow_Proxy(IBrowserService2 *This,HWND *phwndView);", "IBrowserService2_GetBaseBrowserData_Proxy": "HRESULT WINAPI IBrowserService2_GetBaseBrowserData_Proxy(IBrowserService2 *This,LPCBASEBROWSERDATA *pbbd);", "IBrowserService2_PutBaseBrowserData_Proxy": "LPBASEBROWSERDATA WINAPI IBrowserService2_PutBaseBrowserData_Proxy(IBrowserService2 *This);", "IBrowserService2_InitializeTravelLog_Proxy": "HRESULT WINAPI IBrowserService2_InitializeTravelLog_Proxy(IBrowserService2 *This,ITravelLog *ptl,DWORD dw);", "IBrowserService2_SetTopBrowser_Proxy": "HRESULT WINAPI IBrowserService2_SetTopBrowser_Proxy(IBrowserService2 *This);", "IBrowserService2_Offline_Proxy": "HRESULT WINAPI IBrowserService2_Offline_Proxy(IBrowserService2 *This,int iCmd);", "IBrowserService2_AllowViewResize_Proxy": "HRESULT WINAPI IBrowserService2_AllowViewResize_Proxy(IBrowserService2 *This,WINBOOL f);", "IBrowserService2_SetActivateState_Proxy": "HRESULT WINAPI IBrowserService2_SetActivateState_Proxy(IBrowserService2 *This,UINT u);", "IBrowserService2_UpdateSecureLockIcon_Proxy": "HRESULT WINAPI IBrowserService2_UpdateSecureLockIcon_Proxy(IBrowserService2 *This,int eSecureLock);", "IBrowserService2_InitializeDownloadManager_Proxy": "HRESULT WINAPI IBrowserService2_InitializeDownloadManager_Proxy(IBrowserService2 *This);", "IBrowserService2_InitializeTransitionSite_Proxy": "HRESULT WINAPI IBrowserService2_InitializeTransitionSite_Proxy(IBrowserService2 *This);", "IBrowserService2__Initialize_Proxy": "HRESULT WINAPI IBrowserService2__Initialize_Proxy(IBrowserService2 *This,HWND hwnd,IUnknown *pauto);", "IBrowserService2__CancelPendingNavigationAsync_Proxy": "HRESULT WINAPI IBrowserService2__CancelPendingNavigationAsync_Proxy(IBrowserService2 *This);", "IBrowserService2__CancelPendingView_Proxy": "HRESULT WINAPI IBrowserService2__CancelPendingView_Proxy(IBrowserService2 *This);", "IBrowserService2__MaySaveChanges_Proxy": "HRESULT WINAPI IBrowserService2__MaySaveChanges_Proxy(IBrowserService2 *This);", "IBrowserService2__PauseOrResumeView_Proxy": "HRESULT WINAPI IBrowserService2__PauseOrResumeView_Proxy(IBrowserService2 *This,WINBOOL fPaused);", "IBrowserService2__DisableModeless_Proxy": "HRESULT WINAPI IBrowserService2__DisableModeless_Proxy(IBrowserService2 *This);", "IBrowserService2__NavigateToPidl_Proxy": "HRESULT WINAPI IBrowserService2__NavigateToPidl_Proxy(IBrowserService2 *This,LPCITEMIDLIST pidl,DWORD grfHLNF,DWORD dwFlags);", "IBrowserService2__TryShell2Rename_Proxy": "HRESULT WINAPI IBrowserService2__TryShell2Rename_Proxy(IBrowserService2 *This,IShellView *psv,LPCITEMIDLIST pidlNew);", "IBrowserService2__SwitchActivationNow_Proxy": "HRESULT WINAPI IBrowserService2__SwitchActivationNow_Proxy(IBrowserService2 *This);", "IBrowserService2__ExecChildren_Proxy": "HRESULT WINAPI IBrowserService2__ExecChildren_Proxy(IBrowserService2 *This,IUnknown *punkBar,WINBOOL fBroadcast,const GUID *pguidCmdGroup,DWORD nCmdID,DWORD nCmdexecopt,VARIANTARG *pvarargIn,VARIANTARG *pvarargOut);", "IBrowserService2__SendChildren_Proxy": "HRESULT WINAPI IBrowserService2__SendChildren_Proxy(IBrowserService2 *This,HWND hwndBar,WINBOOL fBroadcast,UINT uMsg,WPARAM wParam,LPARAM lParam);", "IBrowserService2_GetFolderSetData_Proxy": "HRESULT WINAPI IBrowserService2_GetFolderSetData_Proxy(IBrowserService2 *This,struct tagFolderSetData *pfsd);", "IBrowserService2__OnFocusChange_Proxy": "HRESULT WINAPI IBrowserService2__OnFocusChange_Proxy(IBrowserService2 *This,UINT itb);", "IBrowserService2_v_ShowHideChildWindows_Proxy": "HRESULT WINAPI IBrowserService2_v_ShowHideChildWindows_Proxy(IBrowserService2 *This,WINBOOL fChildOnly);", "IBrowserService2__get_itbLastFocus_Proxy": "UINT WINAPI IBrowserService2__get_itbLastFocus_Proxy(IBrowserService2 *This);", "IBrowserService2__put_itbLastFocus_Proxy": "HRESULT WINAPI IBrowserService2__put_itbLastFocus_Proxy(IBrowserService2 *This,UINT itbLastFocus);", "IBrowserService2__UIActivateView_Proxy": "HRESULT WINAPI IBrowserService2__UIActivateView_Proxy(IBrowserService2 *This,UINT uState);", "IBrowserService2__GetViewBorderRect_Proxy": "HRESULT WINAPI IBrowserService2__GetViewBorderRect_Proxy(IBrowserService2 *This,RECT *prc);", "IBrowserService2__UpdateViewRectSize_Proxy": "HRESULT WINAPI IBrowserService2__UpdateViewRectSize_Proxy(IBrowserService2 *This);", "IBrowserService2__ResizeNextBorder_Proxy": "HRESULT WINAPI IBrowserService2__ResizeNextBorder_Proxy(IBrowserService2 *This,UINT itb);", "IBrowserService2__ResizeView_Proxy": "HRESULT WINAPI IBrowserService2__ResizeView_Proxy(IBrowserService2 *This);", "IBrowserService2__GetEffectiveClientArea_Proxy": "HRESULT WINAPI IBrowserService2__GetEffectiveClientArea_Proxy(IBrowserService2 *This,LPRECT lprectBorder,HMONITOR hmon);", "IBrowserService2_v_GetViewStream_Proxy": "IStream *WINAPI IBrowserService2_v_GetViewStream_Proxy(IBrowserService2 *This,LPCITEMIDLIST pidl,DWORD grfMode,LPCWSTR pwszName);", "IBrowserService2_ForwardViewMsg_Proxy": "LRESULT WINAPI IBrowserService2_ForwardViewMsg_Proxy(IBrowserService2 *This,UINT uMsg,WPARAM wParam,LPARAM lParam);", "IBrowserService2_SetAcceleratorMenu_Proxy": "HRESULT WINAPI IBrowserService2_SetAcceleratorMenu_Proxy(IBrowserService2 *This,HACCEL hacc);", "IBrowserService2__GetToolbarCount_Proxy": "int WINAPI IBrowserService2__GetToolbarCount_Proxy(IBrowserService2 *This);", "IBrowserService2__GetToolbarItem_Proxy": "LPTOOLBARITEM WINAPI IBrowserService2__GetToolbarItem_Proxy(IBrowserService2 *This,int itb);", "IBrowserService2__SaveToolbars_Proxy": "HRESULT WINAPI IBrowserService2__SaveToolbars_Proxy(IBrowserService2 *This,IStream *pstm);", "IBrowserService2__LoadToolbars_Proxy": "HRESULT WINAPI IBrowserService2__LoadToolbars_Proxy(IBrowserService2 *This,IStream *pstm);", "IBrowserService2__CloseAndReleaseToolbars_Proxy": "HRESULT WINAPI IBrowserService2__CloseAndReleaseToolbars_Proxy(IBrowserService2 *This,WINBOOL fClose);", "IBrowserService2_v_MayGetNextToolbarFocus_Proxy": "HRESULT WINAPI IBrowserService2_v_MayGetNextToolbarFocus_Proxy(IBrowserService2 *This,LPMSG lpMsg,UINT itbNext,int citb,LPTOOLBARITEM *pptbi,HWND *phwnd);", "IBrowserService2__ResizeNextBorderHelper_Proxy": "HRESULT WINAPI IBrowserService2__ResizeNextBorderHelper_Proxy(IBrowserService2 *This,UINT itb,WINBOOL bUseHmonitor);", "IBrowserService2__FindTBar_Proxy": "UINT WINAPI IBrowserService2__FindTBar_Proxy(IBrowserService2 *This,IUnknown *punkSrc);", "IBrowserService2__SetFocus_Proxy": "HRESULT WINAPI IBrowserService2__SetFocus_Proxy(IBrowserService2 *This,LPTOOLBARITEM ptbi,HWND hwnd,LPMSG lpMsg);", "IBrowserService2_v_MayTranslateAccelerator_Proxy": "HRESULT WINAPI IBrowserService2_v_MayTranslateAccelerator_Proxy(IBrowserService2 *This,MSG *pmsg);", "IBrowserService2__GetBorderDWHelper_Proxy": "HRESULT WINAPI IBrowserService2__GetBorderDWHelper_Proxy(IBrowserService2 *This,IUnknown *punkSrc,LPRECT lprectBorder,WINBOOL bUseHmonitor);", "IBrowserService2_v_CheckZoneCrossing_Proxy": "HRESULT WINAPI IBrowserService2_v_CheckZoneCrossing_Proxy(IBrowserService2 *This,LPCITEMIDLIST pidl);", "IBrowserService3__PositionViewWindow_Proxy": "HRESULT WINAPI IBrowserService3__PositionViewWindow_Proxy(IBrowserService3 *This,HWND hwnd,LPRECT prc);", "IBrowserService3_IEParseDisplayNameEx_Proxy": "HRESULT WINAPI IBrowserService3_IEParseDisplayNameEx_Proxy(IBrowserService3 *This,UINT uiCP,LPCWSTR pwszPath,DWORD dwFlags,LPITEMIDLIST *ppidlOut);", "ImmInstallIMEA": "HKL WINAPI ImmInstallIMEA(LPCSTR lpszIMEFileName,LPCSTR lpszLayoutText);", "ImmInstallIMEW": "HKL WINAPI ImmInstallIMEW(LPCWSTR lpszIMEFileName,LPCWSTR lpszLayoutText);", "ImmGetDefaultIMEWnd": "HWND WINAPI ImmGetDefaultIMEWnd(HWND);", "ImmGetDescriptionA": "UINT WINAPI ImmGetDescriptionA(HKL,LPSTR,UINT uBufLen);", "ImmGetDescriptionW": "UINT WINAPI ImmGetDescriptionW(HKL,LPWSTR,UINT uBufLen);", "ImmGetIMEFileNameA": "UINT WINAPI ImmGetIMEFileNameA(HKL,LPSTR,UINT uBufLen);", "ImmGetIMEFileNameW": "UINT WINAPI ImmGetIMEFileNameW(HKL,LPWSTR,UINT uBufLen);", "ImmGetProperty": "DWORD WINAPI ImmGetProperty(HKL,DWORD);", "ImmIsIME": "WINBOOL WINAPI ImmIsIME(HKL);", "ImmSimulateHotKey": "WINBOOL WINAPI ImmSimulateHotKey(HWND,DWORD);", "ImmCreateContext": "HIMC WINAPI ImmCreateContext(void);", "ImmDestroyContext": "WINBOOL WINAPI ImmDestroyContext(HIMC);", "ImmGetContext": "HIMC WINAPI ImmGetContext(HWND);", "ImmReleaseContext": "WINBOOL WINAPI ImmReleaseContext(HWND,HIMC);", "ImmAssociateContext": "HIMC WINAPI ImmAssociateContext(HWND,HIMC);", "ImmAssociateContextEx": "WINBOOL WINAPI ImmAssociateContextEx(HWND,HIMC,DWORD);", "ImmGetCompositionStringA": "LONG WINAPI ImmGetCompositionStringA(HIMC,DWORD,LPVOID,DWORD);", "ImmGetCompositionStringW": "LONG WINAPI ImmGetCompositionStringW(HIMC,DWORD,LPVOID,DWORD);", "ImmSetCompositionStringA": "WINBOOL WINAPI ImmSetCompositionStringA(HIMC,DWORD dwIndex,LPVOID lpComp,DWORD,LPVOID lpRead,DWORD);", "ImmSetCompositionStringW": "WINBOOL WINAPI ImmSetCompositionStringW(HIMC,DWORD dwIndex,LPVOID lpComp,DWORD,LPVOID lpRead,DWORD);", "ImmGetCandidateListCountA": "DWORD WINAPI ImmGetCandidateListCountA(HIMC,LPDWORD lpdwListCount);", "ImmGetCandidateListCountW": "DWORD WINAPI ImmGetCandidateListCountW(HIMC,LPDWORD lpdwListCount);", "ImmGetCandidateListA": "DWORD WINAPI ImmGetCandidateListA(HIMC,DWORD deIndex,LPCANDIDATELIST,DWORD dwBufLen);", "ImmGetCandidateListW": "DWORD WINAPI ImmGetCandidateListW(HIMC,DWORD deIndex,LPCANDIDATELIST,DWORD dwBufLen);", "ImmGetGuideLineA": "DWORD WINAPI ImmGetGuideLineA(HIMC,DWORD dwIndex,LPSTR,DWORD dwBufLen);", "ImmGetGuideLineW": "DWORD WINAPI ImmGetGuideLineW(HIMC,DWORD dwIndex,LPWSTR,DWORD dwBufLen);", "ImmGetConversionStatus": "WINBOOL WINAPI ImmGetConversionStatus(HIMC,LPDWORD,LPDWORD);", "ImmSetConversionStatus": "WINBOOL WINAPI ImmSetConversionStatus(HIMC,DWORD,DWORD);", "ImmGetOpenStatus": "WINBOOL WINAPI ImmGetOpenStatus(HIMC);", "ImmSetOpenStatus": "WINBOOL WINAPI ImmSetOpenStatus(HIMC,WINBOOL);", "ImmGetCompositionFontA": "WINBOOL WINAPI ImmGetCompositionFontA(HIMC,LPLOGFONTA);", "ImmGetCompositionFontW": "WINBOOL WINAPI ImmGetCompositionFontW(HIMC,LPLOGFONTW);", "ImmSetCompositionFontA": "WINBOOL WINAPI ImmSetCompositionFontA(HIMC,LPLOGFONTA);", "ImmSetCompositionFontW": "WINBOOL WINAPI ImmSetCompositionFontW(HIMC,LPLOGFONTW);", "ImmConfigureIMEA": "WINBOOL WINAPI ImmConfigureIMEA(HKL,HWND,DWORD,LPVOID);", "ImmConfigureIMEW": "WINBOOL WINAPI ImmConfigureIMEW(HKL,HWND,DWORD,LPVOID);", "ImmEscapeA": "LRESULT WINAPI ImmEscapeA(HKL,HIMC,UINT,LPVOID);", "ImmEscapeW": "LRESULT WINAPI ImmEscapeW(HKL,HIMC,UINT,LPVOID);", "ImmGetConversionListA": "DWORD WINAPI ImmGetConversionListA(HKL,HIMC,LPCSTR,LPCANDIDATELIST,DWORD dwBufLen,UINT uFlag);", "ImmGetConversionListW": "DWORD WINAPI ImmGetConversionListW(HKL,HIMC,LPCWSTR,LPCANDIDATELIST,DWORD dwBufLen,UINT uFlag);", "ImmNotifyIME": "WINBOOL WINAPI ImmNotifyIME(HIMC,DWORD dwAction,DWORD dwIndex,DWORD dwValue);", "ImmGetStatusWindowPos": "WINBOOL WINAPI ImmGetStatusWindowPos(HIMC,LPPOINT);", "ImmSetStatusWindowPos": "WINBOOL WINAPI ImmSetStatusWindowPos(HIMC,LPPOINT);", "ImmGetCompositionWindow": "WINBOOL WINAPI ImmGetCompositionWindow(HIMC,LPCOMPOSITIONFORM);", "ImmSetCompositionWindow": "WINBOOL WINAPI ImmSetCompositionWindow(HIMC,LPCOMPOSITIONFORM);", "ImmGetCandidateWindow": "WINBOOL WINAPI ImmGetCandidateWindow(HIMC,DWORD,LPCANDIDATEFORM);", "ImmSetCandidateWindow": "WINBOOL WINAPI ImmSetCandidateWindow(HIMC,LPCANDIDATEFORM);", "ImmIsUIMessageA": "WINBOOL WINAPI ImmIsUIMessageA(HWND,UINT,WPARAM,LPARAM);", "ImmIsUIMessageW": "WINBOOL WINAPI ImmIsUIMessageW(HWND,UINT,WPARAM,LPARAM);", "ImmGetVirtualKey": "UINT WINAPI ImmGetVirtualKey(HWND);", "ImmRegisterWordA": "WINBOOL WINAPI ImmRegisterWordA(HKL,LPCSTR lpszReading,DWORD,LPCSTR lpszRegister);", "ImmRegisterWordW": "WINBOOL WINAPI ImmRegisterWordW(HKL,LPCWSTR lpszReading,DWORD,LPCWSTR lpszRegister);", "ImmUnregisterWordA": "WINBOOL WINAPI ImmUnregisterWordA(HKL,LPCSTR lpszReading,DWORD,LPCSTR lpszUnregister);", "ImmUnregisterWordW": "WINBOOL WINAPI ImmUnregisterWordW(HKL,LPCWSTR lpszReading,DWORD,LPCWSTR lpszUnregister);", "ImmGetRegisterWordStyleA": "UINT WINAPI ImmGetRegisterWordStyleA(HKL,UINT nItem,LPSTYLEBUFA);", "ImmGetRegisterWordStyleW": "UINT WINAPI ImmGetRegisterWordStyleW(HKL,UINT nItem,LPSTYLEBUFW);", "ImmEnumRegisterWordA": "UINT WINAPI ImmEnumRegisterWordA(HKL,REGISTERWORDENUMPROCA,LPCSTR lpszReading,DWORD,LPCSTR lpszRegister,LPVOID);", "ImmEnumRegisterWordW": "UINT WINAPI ImmEnumRegisterWordW(HKL,REGISTERWORDENUMPROCW,LPCWSTR lpszReading,DWORD,LPCWSTR lpszRegister,LPVOID);", "ImmDisableIME": "WINBOOL WINAPI ImmDisableIME(DWORD);", "ImmEnumInputContext": "WINBOOL WINAPI ImmEnumInputContext(DWORD idThread,IMCENUMPROC lpfn,LPARAM lParam);", "ImmGetImeMenuItemsA": "DWORD WINAPI ImmGetImeMenuItemsA(HIMC,DWORD,DWORD,LPIMEMENUITEMINFOA,LPIMEMENUITEMINFOA,DWORD);", "ImmGetImeMenuItemsW": "DWORD WINAPI ImmGetImeMenuItemsW(HIMC,DWORD,DWORD,LPIMEMENUITEMINFOW,LPIMEMENUITEMINFOW,DWORD);", "ImmDisableTextFrameService": "WINBOOL WINAPI ImmDisableTextFrameService(DWORD idThread);", "MQCreateQueue": "HRESULT WINAPI MQCreateQueue(PSECURITY_DESCRIPTOR pSecurityDescriptor,MQQUEUEPROPS *pQueueProps,LPWSTR lpwcsFormatName,LPDWORD lpdwFormatNameLength);", "MQDeleteQueue": "HRESULT WINAPI MQDeleteQueue(LPCWSTR lpwcsFormatName);", "MQLocateBegin": "HRESULT WINAPI MQLocateBegin(LPCWSTR lpwcsContext,MQRESTRICTION *pRestriction,MQCOLUMNSET *pColumns,MQSORTSET *pSort,PHANDLE phEnum);", "MQLocateNext": "HRESULT WINAPI MQLocateNext(HANDLE hEnum,DWORD *pcProps,MQPROPVARIANT aPropVar[]);", "MQLocateEnd": "HRESULT WINAPI MQLocateEnd(HANDLE hEnum);", "MQOpenQueue": "HRESULT WINAPI MQOpenQueue(LPCWSTR lpwcsFormatName,DWORD dwAccess,DWORD dwShareMode,QUEUEHANDLE *phQueue);", "MQSendMessage": "HRESULT WINAPI MQSendMessage(QUEUEHANDLE hDestinationQueue,MQMSGPROPS *pMessageProps,ITransaction *pTransaction);", "MQReceiveMessage": "HRESULT WINAPI MQReceiveMessage(QUEUEHANDLE hSource,DWORD dwTimeout,DWORD dwAction,MQMSGPROPS *pMessageProps,LPOVERLAPPED lpOverlapped,PMQRECEIVECALLBACK fnReceiveCallback,HANDLE hCursor,ITransaction *pTransaction);", "MQReceiveMessageByLookupId": "HRESULT WINAPI MQReceiveMessageByLookupId(QUEUEHANDLE hSource,ULONGLONG ullLookupId,DWORD dwLookupAction,MQMSGPROPS *pMessageProps,LPOVERLAPPED lpOverlapped,PMQRECEIVECALLBACK fnReceiveCallback,ITransaction *pTransaction);", "MQCreateCursor": "HRESULT WINAPI MQCreateCursor(QUEUEHANDLE hQueue,PHANDLE phCursor);", "MQCloseCursor": "HRESULT WINAPI MQCloseCursor(HANDLE hCursor);", "MQCloseQueue": "HRESULT WINAPI MQCloseQueue(QUEUEHANDLE hQueue);", "MQSetQueueProperties": "HRESULT WINAPI MQSetQueueProperties(LPCWSTR lpwcsFormatName,MQQUEUEPROPS *pQueueProps);", "MQGetQueueProperties": "HRESULT WINAPI MQGetQueueProperties(LPCWSTR lpwcsFormatName,MQQUEUEPROPS *pQueueProps);", "MQGetQueueSecurity": "HRESULT WINAPI MQGetQueueSecurity(LPCWSTR lpwcsFormatName,SECURITY_INFORMATION RequestedInformation,PSECURITY_DESCRIPTOR pSecurityDescriptor,DWORD nLength,LPDWORD lpnLengthNeeded);", "MQSetQueueSecurity": "HRESULT WINAPI MQSetQueueSecurity(LPCWSTR lpwcsFormatName,SECURITY_INFORMATION SecurityInformation,PSECURITY_DESCRIPTOR pSecurityDescriptor);", "MQPathNameToFormatName": "HRESULT WINAPI MQPathNameToFormatName(LPCWSTR lpwcsPathName,LPWSTR lpwcsFormatName,LPDWORD lpdwFormatNameLength);", "MQHandleToFormatName": "HRESULT WINAPI MQHandleToFormatName(QUEUEHANDLE hQueue,LPWSTR lpwcsFormatName,LPDWORD lpdwFormatNameLength);", "MQInstanceToFormatName": "HRESULT WINAPI MQInstanceToFormatName(GUID *pGuid,LPWSTR lpwcsFormatName,LPDWORD lpdwFormatNameLength);", "MQADsPathToFormatName": "HRESULT WINAPI MQADsPathToFormatName(LPCWSTR lpwcsADsPath,LPWSTR lpwcsFormatName,LPDWORD lpdwFormatNameLength);", "MQFreeMemory": "VOID WINAPI MQFreeMemory(PVOID pvMemory);", "MQGetMachineProperties": "HRESULT WINAPI MQGetMachineProperties(LPCWSTR lpwcsMachineName,const GUID *pguidMachineId,MQQMPROPS *pQMProps);", "MQGetSecurityContext": "HRESULT WINAPI MQGetSecurityContext(PVOID lpCertBuffer,DWORD dwCertBufferLength,HANDLE *phSecurityContext);", "MQGetSecurityContextEx": "HRESULT WINAPI MQGetSecurityContextEx(PVOID lpCertBuffer,DWORD dwCertBufferLength,HANDLE *phSecurityContext);", "MQFreeSecurityContext": "VOID WINAPI MQFreeSecurityContext(HANDLE hSecurityContext);", "MQRegisterCertificate": "HRESULT WINAPI MQRegisterCertificate(DWORD dwFlags,PVOID lpCertBuffer,DWORD dwCertBufferLength);", "MQBeginTransaction": "HRESULT WINAPI MQBeginTransaction(ITransaction **ppTransaction);", "MQGetOverlappedResult": "HRESULT WINAPI MQGetOverlappedResult(LPOVERLAPPED lpOverlapped);", "MQGetPrivateComputerInformation": "HRESULT WINAPI MQGetPrivateComputerInformation(LPCWSTR lpwcsComputerName,MQPRIVATEPROPS *pPrivateProps);", "MQPurgeQueue": "HRESULT WINAPI MQPurgeQueue(QUEUEHANDLE hQueue);", "MQMgmtGetInfo": "HRESULT WINAPI MQMgmtGetInfo(LPCWSTR pComputerName,LPCWSTR pObjectName,MQMGMTPROPS *pMgmtProps);", "MQMgmtAction": "HRESULT WINAPI MQMgmtAction(LPCWSTR pComputerName,LPCWSTR pObjectName,LPCWSTR pAction);", "IAzAuthorizationStore_get_Description_Proxy": "HRESULT WINAPI IAzAuthorizationStore_get_Description_Proxy(IAzAuthorizationStore *This,BSTR *pbstrDescription);", "IAzAuthorizationStore_put_Description_Proxy": "HRESULT WINAPI IAzAuthorizationStore_put_Description_Proxy(IAzAuthorizationStore *This,BSTR bstrDescription);", "IAzAuthorizationStore_get_ApplicationData_Proxy": "HRESULT WINAPI IAzAuthorizationStore_get_ApplicationData_Proxy(IAzAuthorizationStore *This,BSTR *pbstrApplicationData);", "IAzAuthorizationStore_put_ApplicationData_Proxy": "HRESULT WINAPI IAzAuthorizationStore_put_ApplicationData_Proxy(IAzAuthorizationStore *This,BSTR bstrApplicationData);", "IAzAuthorizationStore_get_DomainTimeout_Proxy": "HRESULT WINAPI IAzAuthorizationStore_get_DomainTimeout_Proxy(IAzAuthorizationStore *This,LONG *plProp);", "IAzAuthorizationStore_put_DomainTimeout_Proxy": "HRESULT WINAPI IAzAuthorizationStore_put_DomainTimeout_Proxy(IAzAuthorizationStore *This,LONG lProp);", "IAzAuthorizationStore_get_ScriptEngineTimeout_Proxy": "HRESULT WINAPI IAzAuthorizationStore_get_ScriptEngineTimeout_Proxy(IAzAuthorizationStore *This,LONG *plProp);", "IAzAuthorizationStore_put_ScriptEngineTimeout_Proxy": "HRESULT WINAPI IAzAuthorizationStore_put_ScriptEngineTimeout_Proxy(IAzAuthorizationStore *This,LONG lProp);", "IAzAuthorizationStore_get_MaxScriptEngines_Proxy": "HRESULT WINAPI IAzAuthorizationStore_get_MaxScriptEngines_Proxy(IAzAuthorizationStore *This,LONG *plProp);", "IAzAuthorizationStore_put_MaxScriptEngines_Proxy": "HRESULT WINAPI IAzAuthorizationStore_put_MaxScriptEngines_Proxy(IAzAuthorizationStore *This,LONG lProp);", "IAzAuthorizationStore_get_GenerateAudits_Proxy": "HRESULT WINAPI IAzAuthorizationStore_get_GenerateAudits_Proxy(IAzAuthorizationStore *This,WINBOOL *pbProp);", "IAzAuthorizationStore_put_GenerateAudits_Proxy": "HRESULT WINAPI IAzAuthorizationStore_put_GenerateAudits_Proxy(IAzAuthorizationStore *This,WINBOOL bProp);", "IAzAuthorizationStore_get_Writable_Proxy": "HRESULT WINAPI IAzAuthorizationStore_get_Writable_Proxy(IAzAuthorizationStore *This,WINBOOL *pfProp);", "IAzAuthorizationStore_GetProperty_Proxy": "HRESULT WINAPI IAzAuthorizationStore_GetProperty_Proxy(IAzAuthorizationStore *This,LONG lPropId,VARIANT varReserved,VARIANT *pvarProp);", "IAzAuthorizationStore_SetProperty_Proxy": "HRESULT WINAPI IAzAuthorizationStore_SetProperty_Proxy(IAzAuthorizationStore *This,LONG lPropId,VARIANT varProp,VARIANT varReserved);", "IAzAuthorizationStore_AddPropertyItem_Proxy": "HRESULT WINAPI IAzAuthorizationStore_AddPropertyItem_Proxy(IAzAuthorizationStore *This,LONG lPropId,VARIANT varProp,VARIANT varReserved);", "IAzAuthorizationStore_DeletePropertyItem_Proxy": "HRESULT WINAPI IAzAuthorizationStore_DeletePropertyItem_Proxy(IAzAuthorizationStore *This,LONG lPropId,VARIANT varProp,VARIANT varReserved);", "IAzAuthorizationStore_get_PolicyAdministrators_Proxy": "HRESULT WINAPI IAzAuthorizationStore_get_PolicyAdministrators_Proxy(IAzAuthorizationStore *This,VARIANT *pvarAdmins);", "IAzAuthorizationStore_get_PolicyReaders_Proxy": "HRESULT WINAPI IAzAuthorizationStore_get_PolicyReaders_Proxy(IAzAuthorizationStore *This,VARIANT *pvarReaders);", "IAzAuthorizationStore_AddPolicyAdministrator_Proxy": "HRESULT WINAPI IAzAuthorizationStore_AddPolicyAdministrator_Proxy(IAzAuthorizationStore *This,BSTR bstrAdmin,VARIANT varReserved);", "IAzAuthorizationStore_DeletePolicyAdministrator_Proxy": "HRESULT WINAPI IAzAuthorizationStore_DeletePolicyAdministrator_Proxy(IAzAuthorizationStore *This,BSTR bstrAdmin,VARIANT varReserved);", "IAzAuthorizationStore_AddPolicyReader_Proxy": "HRESULT WINAPI IAzAuthorizationStore_AddPolicyReader_Proxy(IAzAuthorizationStore *This,BSTR bstrReader,VARIANT varReserved);", "IAzAuthorizationStore_DeletePolicyReader_Proxy": "HRESULT WINAPI IAzAuthorizationStore_DeletePolicyReader_Proxy(IAzAuthorizationStore *This,BSTR bstrReader,VARIANT varReserved);", "IAzAuthorizationStore_Initialize_Proxy": "HRESULT WINAPI IAzAuthorizationStore_Initialize_Proxy(IAzAuthorizationStore *This,LONG lFlags,BSTR bstrPolicyURL,VARIANT varReserved);", "IAzAuthorizationStore_UpdateCache_Proxy": "HRESULT WINAPI IAzAuthorizationStore_UpdateCache_Proxy(IAzAuthorizationStore *This,VARIANT varReserved);", "IAzAuthorizationStore_Delete_Proxy": "HRESULT WINAPI IAzAuthorizationStore_Delete_Proxy(IAzAuthorizationStore *This,VARIANT varReserved);", "IAzAuthorizationStore_get_Applications_Proxy": "HRESULT WINAPI IAzAuthorizationStore_get_Applications_Proxy(IAzAuthorizationStore *This,IAzApplications **ppAppCollection);", "IAzAuthorizationStore_OpenApplication_Proxy": "HRESULT WINAPI IAzAuthorizationStore_OpenApplication_Proxy(IAzAuthorizationStore *This,BSTR bstrApplicationName,VARIANT varReserved,IAzApplication **ppApplication);", "IAzAuthorizationStore_CreateApplication_Proxy": "HRESULT WINAPI IAzAuthorizationStore_CreateApplication_Proxy(IAzAuthorizationStore *This,BSTR bstrApplicationName,VARIANT varReserved,IAzApplication **ppApplication);", "IAzAuthorizationStore_DeleteApplication_Proxy": "HRESULT WINAPI IAzAuthorizationStore_DeleteApplication_Proxy(IAzAuthorizationStore *This,BSTR bstrApplicationName,VARIANT varReserved);", "IAzAuthorizationStore_get_ApplicationGroups_Proxy": "HRESULT WINAPI IAzAuthorizationStore_get_ApplicationGroups_Proxy(IAzAuthorizationStore *This,IAzApplicationGroups **ppGroupCollection);", "IAzAuthorizationStore_CreateApplicationGroup_Proxy": "HRESULT WINAPI IAzAuthorizationStore_CreateApplicationGroup_Proxy(IAzAuthorizationStore *This,BSTR bstrGroupName,VARIANT varReserved,IAzApplicationGroup **ppGroup);", "IAzAuthorizationStore_OpenApplicationGroup_Proxy": "HRESULT WINAPI IAzAuthorizationStore_OpenApplicationGroup_Proxy(IAzAuthorizationStore *This,BSTR bstrGroupName,VARIANT varReserved,IAzApplicationGroup **ppGroup);", "IAzAuthorizationStore_DeleteApplicationGroup_Proxy": "HRESULT WINAPI IAzAuthorizationStore_DeleteApplicationGroup_Proxy(IAzAuthorizationStore *This,BSTR bstrGroupName,VARIANT varReserved);", "IAzAuthorizationStore_Submit_Proxy": "HRESULT WINAPI IAzAuthorizationStore_Submit_Proxy(IAzAuthorizationStore *This,LONG lFlags,VARIANT varReserved);", "IAzAuthorizationStore_get_DelegatedPolicyUsers_Proxy": "HRESULT WINAPI IAzAuthorizationStore_get_DelegatedPolicyUsers_Proxy(IAzAuthorizationStore *This,VARIANT *pvarDelegatedPolicyUsers);", "IAzAuthorizationStore_AddDelegatedPolicyUser_Proxy": "HRESULT WINAPI IAzAuthorizationStore_AddDelegatedPolicyUser_Proxy(IAzAuthorizationStore *This,BSTR bstrDelegatedPolicyUser,VARIANT varReserved);", "IAzAuthorizationStore_DeleteDelegatedPolicyUser_Proxy": "HRESULT WINAPI IAzAuthorizationStore_DeleteDelegatedPolicyUser_Proxy(IAzAuthorizationStore *This,BSTR bstrDelegatedPolicyUser,VARIANT varReserved);", "IAzAuthorizationStore_get_TargetMachine_Proxy": "HRESULT WINAPI IAzAuthorizationStore_get_TargetMachine_Proxy(IAzAuthorizationStore *This,BSTR *pbstrTargetMachine);", "IAzAuthorizationStore_get_ApplyStoreSacl_Proxy": "HRESULT WINAPI IAzAuthorizationStore_get_ApplyStoreSacl_Proxy(IAzAuthorizationStore *This,WINBOOL *pbApplyStoreSacl);", "IAzAuthorizationStore_put_ApplyStoreSacl_Proxy": "HRESULT WINAPI IAzAuthorizationStore_put_ApplyStoreSacl_Proxy(IAzAuthorizationStore *This,WINBOOL bApplyStoreSacl);", "IAzAuthorizationStore_get_PolicyAdministratorsName_Proxy": "HRESULT WINAPI IAzAuthorizationStore_get_PolicyAdministratorsName_Proxy(IAzAuthorizationStore *This,VARIANT *pvarAdmins);", "IAzAuthorizationStore_get_PolicyReadersName_Proxy": "HRESULT WINAPI IAzAuthorizationStore_get_PolicyReadersName_Proxy(IAzAuthorizationStore *This,VARIANT *pvarReaders);", "IAzAuthorizationStore_AddPolicyAdministratorName_Proxy": "HRESULT WINAPI IAzAuthorizationStore_AddPolicyAdministratorName_Proxy(IAzAuthorizationStore *This,BSTR bstrAdmin,VARIANT varReserved);", "IAzAuthorizationStore_DeletePolicyAdministratorName_Proxy": "HRESULT WINAPI IAzAuthorizationStore_DeletePolicyAdministratorName_Proxy(IAzAuthorizationStore *This,BSTR bstrAdmin,VARIANT varReserved);", "IAzAuthorizationStore_AddPolicyReaderName_Proxy": "HRESULT WINAPI IAzAuthorizationStore_AddPolicyReaderName_Proxy(IAzAuthorizationStore *This,BSTR bstrReader,VARIANT varReserved);", "IAzAuthorizationStore_DeletePolicyReaderName_Proxy": "HRESULT WINAPI IAzAuthorizationStore_DeletePolicyReaderName_Proxy(IAzAuthorizationStore *This,BSTR bstrReader,VARIANT varReserved);", "IAzAuthorizationStore_get_DelegatedPolicyUsersName_Proxy": "HRESULT WINAPI IAzAuthorizationStore_get_DelegatedPolicyUsersName_Proxy(IAzAuthorizationStore *This,VARIANT *pvarDelegatedPolicyUsers);", "IAzAuthorizationStore_AddDelegatedPolicyUserName_Proxy": "HRESULT WINAPI IAzAuthorizationStore_AddDelegatedPolicyUserName_Proxy(IAzAuthorizationStore *This,BSTR bstrDelegatedPolicyUser,VARIANT varReserved);", "IAzAuthorizationStore_DeleteDelegatedPolicyUserName_Proxy": "HRESULT WINAPI IAzAuthorizationStore_DeleteDelegatedPolicyUserName_Proxy(IAzAuthorizationStore *This,BSTR bstrDelegatedPolicyUser,VARIANT varReserved);", "IAzAuthorizationStore_CloseApplication_Proxy": "HRESULT WINAPI IAzAuthorizationStore_CloseApplication_Proxy(IAzAuthorizationStore *This,BSTR bstrApplicationName,LONG lFlag);", "IAzAuthorizationStore2_OpenApplication2_Proxy": "HRESULT WINAPI IAzAuthorizationStore2_OpenApplication2_Proxy(IAzAuthorizationStore2 *This,BSTR bstrApplicationName,VARIANT varReserved,IAzApplication2 **ppApplication);", "IAzAuthorizationStore2_CreateApplication2_Proxy": "HRESULT WINAPI IAzAuthorizationStore2_CreateApplication2_Proxy(IAzAuthorizationStore2 *This,BSTR bstrApplicationName,VARIANT varReserved,IAzApplication2 **ppApplication);", "IAzApplication_get_Name_Proxy": "HRESULT WINAPI IAzApplication_get_Name_Proxy(IAzApplication *This,BSTR *pbstrName);", "IAzApplication_put_Name_Proxy": "HRESULT WINAPI IAzApplication_put_Name_Proxy(IAzApplication *This,BSTR bstrName);", "IAzApplication_get_Description_Proxy": "HRESULT WINAPI IAzApplication_get_Description_Proxy(IAzApplication *This,BSTR *pbstrDescription);", "IAzApplication_put_Description_Proxy": "HRESULT WINAPI IAzApplication_put_Description_Proxy(IAzApplication *This,BSTR bstrDescription);", "IAzApplication_get_ApplicationData_Proxy": "HRESULT WINAPI IAzApplication_get_ApplicationData_Proxy(IAzApplication *This,BSTR *pbstrApplicationData);", "IAzApplication_put_ApplicationData_Proxy": "HRESULT WINAPI IAzApplication_put_ApplicationData_Proxy(IAzApplication *This,BSTR bstrApplicationData);", "IAzApplication_get_AuthzInterfaceClsid_Proxy": "HRESULT WINAPI IAzApplication_get_AuthzInterfaceClsid_Proxy(IAzApplication *This,BSTR *pbstrProp);", "IAzApplication_put_AuthzInterfaceClsid_Proxy": "HRESULT WINAPI IAzApplication_put_AuthzInterfaceClsid_Proxy(IAzApplication *This,BSTR bstrProp);", "IAzApplication_get_Version_Proxy": "HRESULT WINAPI IAzApplication_get_Version_Proxy(IAzApplication *This,BSTR *pbstrProp);", "IAzApplication_put_Version_Proxy": "HRESULT WINAPI IAzApplication_put_Version_Proxy(IAzApplication *This,BSTR bstrProp);", "IAzApplication_get_GenerateAudits_Proxy": "HRESULT WINAPI IAzApplication_get_GenerateAudits_Proxy(IAzApplication *This,WINBOOL *pbProp);", "IAzApplication_put_GenerateAudits_Proxy": "HRESULT WINAPI IAzApplication_put_GenerateAudits_Proxy(IAzApplication *This,WINBOOL bProp);", "IAzApplication_get_ApplyStoreSacl_Proxy": "HRESULT WINAPI IAzApplication_get_ApplyStoreSacl_Proxy(IAzApplication *This,WINBOOL *pbProp);", "IAzApplication_put_ApplyStoreSacl_Proxy": "HRESULT WINAPI IAzApplication_put_ApplyStoreSacl_Proxy(IAzApplication *This,WINBOOL bProp);", "IAzApplication_get_Writable_Proxy": "HRESULT WINAPI IAzApplication_get_Writable_Proxy(IAzApplication *This,WINBOOL *pfProp);", "IAzApplication_GetProperty_Proxy": "HRESULT WINAPI IAzApplication_GetProperty_Proxy(IAzApplication *This,LONG lPropId,VARIANT varReserved,VARIANT *pvarProp);", "IAzApplication_SetProperty_Proxy": "HRESULT WINAPI IAzApplication_SetProperty_Proxy(IAzApplication *This,LONG lPropId,VARIANT varProp,VARIANT varReserved);", "IAzApplication_get_PolicyAdministrators_Proxy": "HRESULT WINAPI IAzApplication_get_PolicyAdministrators_Proxy(IAzApplication *This,VARIANT *pvarAdmins);", "IAzApplication_get_PolicyReaders_Proxy": "HRESULT WINAPI IAzApplication_get_PolicyReaders_Proxy(IAzApplication *This,VARIANT *pvarReaders);", "IAzApplication_AddPolicyAdministrator_Proxy": "HRESULT WINAPI IAzApplication_AddPolicyAdministrator_Proxy(IAzApplication *This,BSTR bstrAdmin,VARIANT varReserved);", "IAzApplication_DeletePolicyAdministrator_Proxy": "HRESULT WINAPI IAzApplication_DeletePolicyAdministrator_Proxy(IAzApplication *This,BSTR bstrAdmin,VARIANT varReserved);", "IAzApplication_AddPolicyReader_Proxy": "HRESULT WINAPI IAzApplication_AddPolicyReader_Proxy(IAzApplication *This,BSTR bstrReader,VARIANT varReserved);", "IAzApplication_DeletePolicyReader_Proxy": "HRESULT WINAPI IAzApplication_DeletePolicyReader_Proxy(IAzApplication *This,BSTR bstrReader,VARIANT varReserved);", "IAzApplication_get_Scopes_Proxy": "HRESULT WINAPI IAzApplication_get_Scopes_Proxy(IAzApplication *This,IAzScopes **ppScopeCollection);", "IAzApplication_OpenScope_Proxy": "HRESULT WINAPI IAzApplication_OpenScope_Proxy(IAzApplication *This,BSTR bstrScopeName,VARIANT varReserved,IAzScope **ppScope);", "IAzApplication_CreateScope_Proxy": "HRESULT WINAPI IAzApplication_CreateScope_Proxy(IAzApplication *This,BSTR bstrScopeName,VARIANT varReserved,IAzScope **ppScope);", "IAzApplication_DeleteScope_Proxy": "HRESULT WINAPI IAzApplication_DeleteScope_Proxy(IAzApplication *This,BSTR bstrScopeName,VARIANT varReserved);", "IAzApplication_get_Operations_Proxy": "HRESULT WINAPI IAzApplication_get_Operations_Proxy(IAzApplication *This,IAzOperations **ppOperationCollection);", "IAzApplication_OpenOperation_Proxy": "HRESULT WINAPI IAzApplication_OpenOperation_Proxy(IAzApplication *This,BSTR bstrOperationName,VARIANT varReserved,IAzOperation **ppOperation);", "IAzApplication_CreateOperation_Proxy": "HRESULT WINAPI IAzApplication_CreateOperation_Proxy(IAzApplication *This,BSTR bstrOperationName,VARIANT varReserved,IAzOperation **ppOperation);", "IAzApplication_DeleteOperation_Proxy": "HRESULT WINAPI IAzApplication_DeleteOperation_Proxy(IAzApplication *This,BSTR bstrOperationName,VARIANT varReserved);", "IAzApplication_get_Tasks_Proxy": "HRESULT WINAPI IAzApplication_get_Tasks_Proxy(IAzApplication *This,IAzTasks **ppTaskCollection);", "IAzApplication_OpenTask_Proxy": "HRESULT WINAPI IAzApplication_OpenTask_Proxy(IAzApplication *This,BSTR bstrTaskName,VARIANT varReserved,IAzTask **ppTask);", "IAzApplication_CreateTask_Proxy": "HRESULT WINAPI IAzApplication_CreateTask_Proxy(IAzApplication *This,BSTR bstrTaskName,VARIANT varReserved,IAzTask **ppTask);", "IAzApplication_DeleteTask_Proxy": "HRESULT WINAPI IAzApplication_DeleteTask_Proxy(IAzApplication *This,BSTR bstrTaskName,VARIANT varReserved);", "IAzApplication_get_ApplicationGroups_Proxy": "HRESULT WINAPI IAzApplication_get_ApplicationGroups_Proxy(IAzApplication *This,IAzApplicationGroups **ppGroupCollection);", "IAzApplication_OpenApplicationGroup_Proxy": "HRESULT WINAPI IAzApplication_OpenApplicationGroup_Proxy(IAzApplication *This,BSTR bstrGroupName,VARIANT varReserved,IAzApplicationGroup **ppGroup);", "IAzApplication_CreateApplicationGroup_Proxy": "HRESULT WINAPI IAzApplication_CreateApplicationGroup_Proxy(IAzApplication *This,BSTR bstrGroupName,VARIANT varReserved,IAzApplicationGroup **ppGroup);", "IAzApplication_DeleteApplicationGroup_Proxy": "HRESULT WINAPI IAzApplication_DeleteApplicationGroup_Proxy(IAzApplication *This,BSTR bstrGroupName,VARIANT varReserved);", "IAzApplication_get_Roles_Proxy": "HRESULT WINAPI IAzApplication_get_Roles_Proxy(IAzApplication *This,IAzRoles **ppRoleCollection);", "IAzApplication_OpenRole_Proxy": "HRESULT WINAPI IAzApplication_OpenRole_Proxy(IAzApplication *This,BSTR bstrRoleName,VARIANT varReserved,IAzRole **ppRole);", "IAzApplication_CreateRole_Proxy": "HRESULT WINAPI IAzApplication_CreateRole_Proxy(IAzApplication *This,BSTR bstrRoleName,VARIANT varReserved,IAzRole **ppRole);", "IAzApplication_DeleteRole_Proxy": "HRESULT WINAPI IAzApplication_DeleteRole_Proxy(IAzApplication *This,BSTR bstrRoleName,VARIANT varReserved);", "IAzApplication_InitializeClientContextFromToken_Proxy": "HRESULT WINAPI IAzApplication_InitializeClientContextFromToken_Proxy(IAzApplication *This,ULONGLONG ullTokenHandle,VARIANT varReserved,IAzClientContext **ppClientContext);", "IAzApplication_AddPropertyItem_Proxy": "HRESULT WINAPI IAzApplication_AddPropertyItem_Proxy(IAzApplication *This,LONG lPropId,VARIANT varProp,VARIANT varReserved);", "IAzApplication_DeletePropertyItem_Proxy": "HRESULT WINAPI IAzApplication_DeletePropertyItem_Proxy(IAzApplication *This,LONG lPropId,VARIANT varProp,VARIANT varReserved);", "IAzApplication_Submit_Proxy": "HRESULT WINAPI IAzApplication_Submit_Proxy(IAzApplication *This,LONG lFlags,VARIANT varReserved);", "IAzApplication_InitializeClientContextFromName_Proxy": "HRESULT WINAPI IAzApplication_InitializeClientContextFromName_Proxy(IAzApplication *This,BSTR ClientName,BSTR DomainName,VARIANT varReserved,IAzClientContext **ppClientContext);", "IAzApplication_get_DelegatedPolicyUsers_Proxy": "HRESULT WINAPI IAzApplication_get_DelegatedPolicyUsers_Proxy(IAzApplication *This,VARIANT *pvarDelegatedPolicyUsers);", "IAzApplication_AddDelegatedPolicyUser_Proxy": "HRESULT WINAPI IAzApplication_AddDelegatedPolicyUser_Proxy(IAzApplication *This,BSTR bstrDelegatedPolicyUser,VARIANT varReserved);", "IAzApplication_DeleteDelegatedPolicyUser_Proxy": "HRESULT WINAPI IAzApplication_DeleteDelegatedPolicyUser_Proxy(IAzApplication *This,BSTR bstrDelegatedPolicyUser,VARIANT varReserved);", "IAzApplication_InitializeClientContextFromStringSid_Proxy": "HRESULT WINAPI IAzApplication_InitializeClientContextFromStringSid_Proxy(IAzApplication *This,BSTR SidString,LONG lOptions,VARIANT varReserved,IAzClientContext **ppClientContext);", "IAzApplication_get_PolicyAdministratorsName_Proxy": "HRESULT WINAPI IAzApplication_get_PolicyAdministratorsName_Proxy(IAzApplication *This,VARIANT *pvarAdmins);", "IAzApplication_get_PolicyReadersName_Proxy": "HRESULT WINAPI IAzApplication_get_PolicyReadersName_Proxy(IAzApplication *This,VARIANT *pvarReaders);", "IAzApplication_AddPolicyAdministratorName_Proxy": "HRESULT WINAPI IAzApplication_AddPolicyAdministratorName_Proxy(IAzApplication *This,BSTR bstrAdmin,VARIANT varReserved);", "IAzApplication_DeletePolicyAdministratorName_Proxy": "HRESULT WINAPI IAzApplication_DeletePolicyAdministratorName_Proxy(IAzApplication *This,BSTR bstrAdmin,VARIANT varReserved);", "IAzApplication_AddPolicyReaderName_Proxy": "HRESULT WINAPI IAzApplication_AddPolicyReaderName_Proxy(IAzApplication *This,BSTR bstrReader,VARIANT varReserved);", "IAzApplication_DeletePolicyReaderName_Proxy": "HRESULT WINAPI IAzApplication_DeletePolicyReaderName_Proxy(IAzApplication *This,BSTR bstrReader,VARIANT varReserved);", "IAzApplication_get_DelegatedPolicyUsersName_Proxy": "HRESULT WINAPI IAzApplication_get_DelegatedPolicyUsersName_Proxy(IAzApplication *This,VARIANT *pvarDelegatedPolicyUsers);", "IAzApplication_AddDelegatedPolicyUserName_Proxy": "HRESULT WINAPI IAzApplication_AddDelegatedPolicyUserName_Proxy(IAzApplication *This,BSTR bstrDelegatedPolicyUser,VARIANT varReserved);", "IAzApplication_DeleteDelegatedPolicyUserName_Proxy": "HRESULT WINAPI IAzApplication_DeleteDelegatedPolicyUserName_Proxy(IAzApplication *This,BSTR bstrDelegatedPolicyUser,VARIANT varReserved);", "IAzApplication2_InitializeClientContextFromToken2_Proxy": "HRESULT WINAPI IAzApplication2_InitializeClientContextFromToken2_Proxy(IAzApplication2 *This,ULONG ulTokenHandleLowPart,ULONG ulTokenHandleHighPart,VARIANT varReserved,IAzClientContext2 **ppClientContext);", "IAzApplication2_InitializeClientContext2_Proxy": "HRESULT WINAPI IAzApplication2_InitializeClientContext2_Proxy(IAzApplication2 *This,BSTR IdentifyingString,VARIANT varReserved,IAzClientContext2 **ppClientContext);", "IAzApplications_get_Item_Proxy": "HRESULT WINAPI IAzApplications_get_Item_Proxy(IAzApplications *This,__LONG32 Index,VARIANT *pvarObtPtr);", "IAzApplications_get_Count_Proxy": "HRESULT WINAPI IAzApplications_get_Count_Proxy(IAzApplications *This,__LONG32 *plCount);", "IAzApplications_get__NewEnum_Proxy": "HRESULT WINAPI IAzApplications_get__NewEnum_Proxy(IAzApplications *This,LPUNKNOWN *ppEnumPtr);", "IAzOperation_get_Name_Proxy": "HRESULT WINAPI IAzOperation_get_Name_Proxy(IAzOperation *This,BSTR *pbstrName);", "IAzOperation_put_Name_Proxy": "HRESULT WINAPI IAzOperation_put_Name_Proxy(IAzOperation *This,BSTR bstrName);", "IAzOperation_get_Description_Proxy": "HRESULT WINAPI IAzOperation_get_Description_Proxy(IAzOperation *This,BSTR *pbstrDescription);", "IAzOperation_put_Description_Proxy": "HRESULT WINAPI IAzOperation_put_Description_Proxy(IAzOperation *This,BSTR bstrDescription);", "IAzOperation_get_ApplicationData_Proxy": "HRESULT WINAPI IAzOperation_get_ApplicationData_Proxy(IAzOperation *This,BSTR *pbstrApplicationData);", "IAzOperation_put_ApplicationData_Proxy": "HRESULT WINAPI IAzOperation_put_ApplicationData_Proxy(IAzOperation *This,BSTR bstrApplicationData);", "IAzOperation_get_OperationID_Proxy": "HRESULT WINAPI IAzOperation_get_OperationID_Proxy(IAzOperation *This,LONG *plProp);", "IAzOperation_put_OperationID_Proxy": "HRESULT WINAPI IAzOperation_put_OperationID_Proxy(IAzOperation *This,LONG lProp);", "IAzOperation_get_Writable_Proxy": "HRESULT WINAPI IAzOperation_get_Writable_Proxy(IAzOperation *This,WINBOOL *pfProp);", "IAzOperation_GetProperty_Proxy": "HRESULT WINAPI IAzOperation_GetProperty_Proxy(IAzOperation *This,LONG lPropId,VARIANT varReserved,VARIANT *pvarProp);", "IAzOperation_SetProperty_Proxy": "HRESULT WINAPI IAzOperation_SetProperty_Proxy(IAzOperation *This,LONG lPropId,VARIANT varProp,VARIANT varReserved);", "IAzOperation_Submit_Proxy": "HRESULT WINAPI IAzOperation_Submit_Proxy(IAzOperation *This,LONG lFlags,VARIANT varReserved);", "IAzOperations_get_Item_Proxy": "HRESULT WINAPI IAzOperations_get_Item_Proxy(IAzOperations *This,LONG Index,VARIANT *pvarObtPtr);", "IAzOperations_get_Count_Proxy": "HRESULT WINAPI IAzOperations_get_Count_Proxy(IAzOperations *This,LONG *plCount);", "IAzOperations_get__NewEnum_Proxy": "HRESULT WINAPI IAzOperations_get__NewEnum_Proxy(IAzOperations *This,LPUNKNOWN *ppEnumPtr);", "IAzTask_get_Name_Proxy": "HRESULT WINAPI IAzTask_get_Name_Proxy(IAzTask *This,BSTR *pbstrName);", "IAzTask_put_Name_Proxy": "HRESULT WINAPI IAzTask_put_Name_Proxy(IAzTask *This,BSTR bstrName);", "IAzTask_get_Description_Proxy": "HRESULT WINAPI IAzTask_get_Description_Proxy(IAzTask *This,BSTR *pbstrDescription);", "IAzTask_put_Description_Proxy": "HRESULT WINAPI IAzTask_put_Description_Proxy(IAzTask *This,BSTR bstrDescription);", "IAzTask_get_ApplicationData_Proxy": "HRESULT WINAPI IAzTask_get_ApplicationData_Proxy(IAzTask *This,BSTR *pbstrApplicationData);", "IAzTask_put_ApplicationData_Proxy": "HRESULT WINAPI IAzTask_put_ApplicationData_Proxy(IAzTask *This,BSTR bstrApplicationData);", "IAzTask_get_BizRule_Proxy": "HRESULT WINAPI IAzTask_get_BizRule_Proxy(IAzTask *This,BSTR *pbstrProp);", "IAzTask_put_BizRule_Proxy": "HRESULT WINAPI IAzTask_put_BizRule_Proxy(IAzTask *This,BSTR bstrProp);", "IAzTask_get_BizRuleLanguage_Proxy": "HRESULT WINAPI IAzTask_get_BizRuleLanguage_Proxy(IAzTask *This,BSTR *pbstrProp);", "IAzTask_put_BizRuleLanguage_Proxy": "HRESULT WINAPI IAzTask_put_BizRuleLanguage_Proxy(IAzTask *This,BSTR bstrProp);", "IAzTask_get_BizRuleImportedPath_Proxy": "HRESULT WINAPI IAzTask_get_BizRuleImportedPath_Proxy(IAzTask *This,BSTR *pbstrProp);", "IAzTask_put_BizRuleImportedPath_Proxy": "HRESULT WINAPI IAzTask_put_BizRuleImportedPath_Proxy(IAzTask *This,BSTR bstrProp);", "IAzTask_get_IsRoleDefinition_Proxy": "HRESULT WINAPI IAzTask_get_IsRoleDefinition_Proxy(IAzTask *This,WINBOOL *pfProp);", "IAzTask_put_IsRoleDefinition_Proxy": "HRESULT WINAPI IAzTask_put_IsRoleDefinition_Proxy(IAzTask *This,WINBOOL fProp);", "IAzTask_get_Operations_Proxy": "HRESULT WINAPI IAzTask_get_Operations_Proxy(IAzTask *This,VARIANT *pvarProp);", "IAzTask_get_Tasks_Proxy": "HRESULT WINAPI IAzTask_get_Tasks_Proxy(IAzTask *This,VARIANT *pvarProp);", "IAzTask_AddOperation_Proxy": "HRESULT WINAPI IAzTask_AddOperation_Proxy(IAzTask *This,BSTR bstrOp,VARIANT varReserved);", "IAzTask_DeleteOperation_Proxy": "HRESULT WINAPI IAzTask_DeleteOperation_Proxy(IAzTask *This,BSTR bstrOp,VARIANT varReserved);", "IAzTask_AddTask_Proxy": "HRESULT WINAPI IAzTask_AddTask_Proxy(IAzTask *This,BSTR bstrTask,VARIANT varReserved);", "IAzTask_DeleteTask_Proxy": "HRESULT WINAPI IAzTask_DeleteTask_Proxy(IAzTask *This,BSTR bstrTask,VARIANT varReserved);", "IAzTask_get_Writable_Proxy": "HRESULT WINAPI IAzTask_get_Writable_Proxy(IAzTask *This,WINBOOL *pfProp);", "IAzTask_GetProperty_Proxy": "HRESULT WINAPI IAzTask_GetProperty_Proxy(IAzTask *This,LONG lPropId,VARIANT varReserved,VARIANT *pvarProp);", "IAzTask_SetProperty_Proxy": "HRESULT WINAPI IAzTask_SetProperty_Proxy(IAzTask *This,LONG lPropId,VARIANT varProp,VARIANT varReserved);", "IAzTask_AddPropertyItem_Proxy": "HRESULT WINAPI IAzTask_AddPropertyItem_Proxy(IAzTask *This,LONG lPropId,VARIANT varProp,VARIANT varReserved);", "IAzTask_DeletePropertyItem_Proxy": "HRESULT WINAPI IAzTask_DeletePropertyItem_Proxy(IAzTask *This,LONG lPropId,VARIANT varProp,VARIANT varReserved);", "IAzTask_Submit_Proxy": "HRESULT WINAPI IAzTask_Submit_Proxy(IAzTask *This,LONG lFlags,VARIANT varReserved);", "IAzTasks_get_Item_Proxy": "HRESULT WINAPI IAzTasks_get_Item_Proxy(IAzTasks *This,LONG Index,VARIANT *pvarObtPtr);", "IAzTasks_get_Count_Proxy": "HRESULT WINAPI IAzTasks_get_Count_Proxy(IAzTasks *This,LONG *plCount);", "IAzTasks_get__NewEnum_Proxy": "HRESULT WINAPI IAzTasks_get__NewEnum_Proxy(IAzTasks *This,LPUNKNOWN *ppEnumPtr);", "IAzScope_get_Name_Proxy": "HRESULT WINAPI IAzScope_get_Name_Proxy(IAzScope *This,BSTR *pbstrName);", "IAzScope_put_Name_Proxy": "HRESULT WINAPI IAzScope_put_Name_Proxy(IAzScope *This,BSTR bstrName);", "IAzScope_get_Description_Proxy": "HRESULT WINAPI IAzScope_get_Description_Proxy(IAzScope *This,BSTR *pbstrDescription);", "IAzScope_put_Description_Proxy": "HRESULT WINAPI IAzScope_put_Description_Proxy(IAzScope *This,BSTR bstrDescription);", "IAzScope_get_ApplicationData_Proxy": "HRESULT WINAPI IAzScope_get_ApplicationData_Proxy(IAzScope *This,BSTR *pbstrApplicationData);", "IAzScope_put_ApplicationData_Proxy": "HRESULT WINAPI IAzScope_put_ApplicationData_Proxy(IAzScope *This,BSTR bstrApplicationData);", "IAzScope_get_Writable_Proxy": "HRESULT WINAPI IAzScope_get_Writable_Proxy(IAzScope *This,WINBOOL *pfProp);", "IAzScope_GetProperty_Proxy": "HRESULT WINAPI IAzScope_GetProperty_Proxy(IAzScope *This,LONG lPropId,VARIANT varReserved,VARIANT *pvarProp);", "IAzScope_SetProperty_Proxy": "HRESULT WINAPI IAzScope_SetProperty_Proxy(IAzScope *This,LONG lPropId,VARIANT varProp,VARIANT varReserved);", "IAzScope_AddPropertyItem_Proxy": "HRESULT WINAPI IAzScope_AddPropertyItem_Proxy(IAzScope *This,LONG lPropId,VARIANT varProp,VARIANT varReserved);", "IAzScope_DeletePropertyItem_Proxy": "HRESULT WINAPI IAzScope_DeletePropertyItem_Proxy(IAzScope *This,LONG lPropId,VARIANT varProp,VARIANT varReserved);", "IAzScope_get_PolicyAdministrators_Proxy": "HRESULT WINAPI IAzScope_get_PolicyAdministrators_Proxy(IAzScope *This,VARIANT *pvarAdmins);", "IAzScope_get_PolicyReaders_Proxy": "HRESULT WINAPI IAzScope_get_PolicyReaders_Proxy(IAzScope *This,VARIANT *pvarReaders);", "IAzScope_AddPolicyAdministrator_Proxy": "HRESULT WINAPI IAzScope_AddPolicyAdministrator_Proxy(IAzScope *This,BSTR bstrAdmin,VARIANT varReserved);", "IAzScope_DeletePolicyAdministrator_Proxy": "HRESULT WINAPI IAzScope_DeletePolicyAdministrator_Proxy(IAzScope *This,BSTR bstrAdmin,VARIANT varReserved);", "IAzScope_AddPolicyReader_Proxy": "HRESULT WINAPI IAzScope_AddPolicyReader_Proxy(IAzScope *This,BSTR bstrReader,VARIANT varReserved);", "IAzScope_DeletePolicyReader_Proxy": "HRESULT WINAPI IAzScope_DeletePolicyReader_Proxy(IAzScope *This,BSTR bstrReader,VARIANT varReserved);", "IAzScope_get_ApplicationGroups_Proxy": "HRESULT WINAPI IAzScope_get_ApplicationGroups_Proxy(IAzScope *This,IAzApplicationGroups **ppGroupCollection);", "IAzScope_OpenApplicationGroup_Proxy": "HRESULT WINAPI IAzScope_OpenApplicationGroup_Proxy(IAzScope *This,BSTR bstrGroupName,VARIANT varReserved,IAzApplicationGroup **ppGroup);", "IAzScope_CreateApplicationGroup_Proxy": "HRESULT WINAPI IAzScope_CreateApplicationGroup_Proxy(IAzScope *This,BSTR bstrGroupName,VARIANT varReserved,IAzApplicationGroup **ppGroup);", "IAzScope_DeleteApplicationGroup_Proxy": "HRESULT WINAPI IAzScope_DeleteApplicationGroup_Proxy(IAzScope *This,BSTR bstrGroupName,VARIANT varReserved);", "IAzScope_get_Roles_Proxy": "HRESULT WINAPI IAzScope_get_Roles_Proxy(IAzScope *This,IAzRoles **ppRoleCollection);", "IAzScope_OpenRole_Proxy": "HRESULT WINAPI IAzScope_OpenRole_Proxy(IAzScope *This,BSTR bstrRoleName,VARIANT varReserved,IAzRole **ppRole);", "IAzScope_CreateRole_Proxy": "HRESULT WINAPI IAzScope_CreateRole_Proxy(IAzScope *This,BSTR bstrRoleName,VARIANT varReserved,IAzRole **ppRole);", "IAzScope_DeleteRole_Proxy": "HRESULT WINAPI IAzScope_DeleteRole_Proxy(IAzScope *This,BSTR bstrRoleName,VARIANT varReserved);", "IAzScope_get_Tasks_Proxy": "HRESULT WINAPI IAzScope_get_Tasks_Proxy(IAzScope *This,IAzTasks **ppTaskCollection);", "IAzScope_OpenTask_Proxy": "HRESULT WINAPI IAzScope_OpenTask_Proxy(IAzScope *This,BSTR bstrTaskName,VARIANT varReserved,IAzTask **ppTask);", "IAzScope_CreateTask_Proxy": "HRESULT WINAPI IAzScope_CreateTask_Proxy(IAzScope *This,BSTR bstrTaskName,VARIANT varReserved,IAzTask **ppTask);", "IAzScope_DeleteTask_Proxy": "HRESULT WINAPI IAzScope_DeleteTask_Proxy(IAzScope *This,BSTR bstrTaskName,VARIANT varReserved);", "IAzScope_Submit_Proxy": "HRESULT WINAPI IAzScope_Submit_Proxy(IAzScope *This,LONG lFlags,VARIANT varReserved);", "IAzScope_get_CanBeDelegated_Proxy": "HRESULT WINAPI IAzScope_get_CanBeDelegated_Proxy(IAzScope *This,WINBOOL *pfProp);", "IAzScope_get_BizrulesWritable_Proxy": "HRESULT WINAPI IAzScope_get_BizrulesWritable_Proxy(IAzScope *This,WINBOOL *pfProp);", "IAzScope_get_PolicyAdministratorsName_Proxy": "HRESULT WINAPI IAzScope_get_PolicyAdministratorsName_Proxy(IAzScope *This,VARIANT *pvarAdmins);", "IAzScope_get_PolicyReadersName_Proxy": "HRESULT WINAPI IAzScope_get_PolicyReadersName_Proxy(IAzScope *This,VARIANT *pvarReaders);", "IAzScope_AddPolicyAdministratorName_Proxy": "HRESULT WINAPI IAzScope_AddPolicyAdministratorName_Proxy(IAzScope *This,BSTR bstrAdmin,VARIANT varReserved);", "IAzScope_DeletePolicyAdministratorName_Proxy": "HRESULT WINAPI IAzScope_DeletePolicyAdministratorName_Proxy(IAzScope *This,BSTR bstrAdmin,VARIANT varReserved);", "IAzScope_AddPolicyReaderName_Proxy": "HRESULT WINAPI IAzScope_AddPolicyReaderName_Proxy(IAzScope *This,BSTR bstrReader,VARIANT varReserved);", "IAzScope_DeletePolicyReaderName_Proxy": "HRESULT WINAPI IAzScope_DeletePolicyReaderName_Proxy(IAzScope *This,BSTR bstrReader,VARIANT varReserved);", "IAzScopes_get_Item_Proxy": "HRESULT WINAPI IAzScopes_get_Item_Proxy(IAzScopes *This,LONG Index,VARIANT *pvarObtPtr);", "IAzScopes_get_Count_Proxy": "HRESULT WINAPI IAzScopes_get_Count_Proxy(IAzScopes *This,LONG *plCount);", "IAzScopes_get__NewEnum_Proxy": "HRESULT WINAPI IAzScopes_get__NewEnum_Proxy(IAzScopes *This,LPUNKNOWN *ppEnumPtr);", "IAzApplicationGroup_get_Name_Proxy": "HRESULT WINAPI IAzApplicationGroup_get_Name_Proxy(IAzApplicationGroup *This,BSTR *pbstrName);", "IAzApplicationGroup_put_Name_Proxy": "HRESULT WINAPI IAzApplicationGroup_put_Name_Proxy(IAzApplicationGroup *This,BSTR bstrName);", "IAzApplicationGroup_get_Type_Proxy": "HRESULT WINAPI IAzApplicationGroup_get_Type_Proxy(IAzApplicationGroup *This,LONG *plProp);", "IAzApplicationGroup_put_Type_Proxy": "HRESULT WINAPI IAzApplicationGroup_put_Type_Proxy(IAzApplicationGroup *This,LONG lProp);", "IAzApplicationGroup_get_LdapQuery_Proxy": "HRESULT WINAPI IAzApplicationGroup_get_LdapQuery_Proxy(IAzApplicationGroup *This,BSTR *pbstrProp);", "IAzApplicationGroup_put_LdapQuery_Proxy": "HRESULT WINAPI IAzApplicationGroup_put_LdapQuery_Proxy(IAzApplicationGroup *This,BSTR bstrProp);", "IAzApplicationGroup_get_AppMembers_Proxy": "HRESULT WINAPI IAzApplicationGroup_get_AppMembers_Proxy(IAzApplicationGroup *This,VARIANT *pvarProp);", "IAzApplicationGroup_get_AppNonMembers_Proxy": "HRESULT WINAPI IAzApplicationGroup_get_AppNonMembers_Proxy(IAzApplicationGroup *This,VARIANT *pvarProp);", "IAzApplicationGroup_get_Members_Proxy": "HRESULT WINAPI IAzApplicationGroup_get_Members_Proxy(IAzApplicationGroup *This,VARIANT *pvarProp);", "IAzApplicationGroup_get_NonMembers_Proxy": "HRESULT WINAPI IAzApplicationGroup_get_NonMembers_Proxy(IAzApplicationGroup *This,VARIANT *pvarProp);", "IAzApplicationGroup_get_Description_Proxy": "HRESULT WINAPI IAzApplicationGroup_get_Description_Proxy(IAzApplicationGroup *This,BSTR *pbstrDescription);", "IAzApplicationGroup_put_Description_Proxy": "HRESULT WINAPI IAzApplicationGroup_put_Description_Proxy(IAzApplicationGroup *This,BSTR bstrDescription);", "IAzApplicationGroup_AddAppMember_Proxy": "HRESULT WINAPI IAzApplicationGroup_AddAppMember_Proxy(IAzApplicationGroup *This,BSTR bstrProp,VARIANT varReserved);", "IAzApplicationGroup_DeleteAppMember_Proxy": "HRESULT WINAPI IAzApplicationGroup_DeleteAppMember_Proxy(IAzApplicationGroup *This,BSTR bstrProp,VARIANT varReserved);", "IAzApplicationGroup_AddAppNonMember_Proxy": "HRESULT WINAPI IAzApplicationGroup_AddAppNonMember_Proxy(IAzApplicationGroup *This,BSTR bstrProp,VARIANT varReserved);", "IAzApplicationGroup_DeleteAppNonMember_Proxy": "HRESULT WINAPI IAzApplicationGroup_DeleteAppNonMember_Proxy(IAzApplicationGroup *This,BSTR bstrProp,VARIANT varReserved);", "IAzApplicationGroup_AddMember_Proxy": "HRESULT WINAPI IAzApplicationGroup_AddMember_Proxy(IAzApplicationGroup *This,BSTR bstrProp,VARIANT varReserved);", "IAzApplicationGroup_DeleteMember_Proxy": "HRESULT WINAPI IAzApplicationGroup_DeleteMember_Proxy(IAzApplicationGroup *This,BSTR bstrProp,VARIANT varReserved);", "IAzApplicationGroup_AddNonMember_Proxy": "HRESULT WINAPI IAzApplicationGroup_AddNonMember_Proxy(IAzApplicationGroup *This,BSTR bstrProp,VARIANT varReserved);", "IAzApplicationGroup_DeleteNonMember_Proxy": "HRESULT WINAPI IAzApplicationGroup_DeleteNonMember_Proxy(IAzApplicationGroup *This,BSTR bstrProp,VARIANT varReserved);", "IAzApplicationGroup_get_Writable_Proxy": "HRESULT WINAPI IAzApplicationGroup_get_Writable_Proxy(IAzApplicationGroup *This,WINBOOL *pfProp);", "IAzApplicationGroup_GetProperty_Proxy": "HRESULT WINAPI IAzApplicationGroup_GetProperty_Proxy(IAzApplicationGroup *This,LONG lPropId,VARIANT varReserved,VARIANT *pvarProp);", "IAzApplicationGroup_SetProperty_Proxy": "HRESULT WINAPI IAzApplicationGroup_SetProperty_Proxy(IAzApplicationGroup *This,LONG lPropId,VARIANT varProp,VARIANT varReserved);", "IAzApplicationGroup_AddPropertyItem_Proxy": "HRESULT WINAPI IAzApplicationGroup_AddPropertyItem_Proxy(IAzApplicationGroup *This,LONG lPropId,VARIANT varProp,VARIANT varReserved);", "IAzApplicationGroup_DeletePropertyItem_Proxy": "HRESULT WINAPI IAzApplicationGroup_DeletePropertyItem_Proxy(IAzApplicationGroup *This,LONG lPropId,VARIANT varProp,VARIANT varReserved);", "IAzApplicationGroup_Submit_Proxy": "HRESULT WINAPI IAzApplicationGroup_Submit_Proxy(IAzApplicationGroup *This,LONG lFlags,VARIANT varReserved);", "IAzApplicationGroup_AddMemberName_Proxy": "HRESULT WINAPI IAzApplicationGroup_AddMemberName_Proxy(IAzApplicationGroup *This,BSTR bstrProp,VARIANT varReserved);", "IAzApplicationGroup_DeleteMemberName_Proxy": "HRESULT WINAPI IAzApplicationGroup_DeleteMemberName_Proxy(IAzApplicationGroup *This,BSTR bstrProp,VARIANT varReserved);", "IAzApplicationGroup_AddNonMemberName_Proxy": "HRESULT WINAPI IAzApplicationGroup_AddNonMemberName_Proxy(IAzApplicationGroup *This,BSTR bstrProp,VARIANT varReserved);", "IAzApplicationGroup_DeleteNonMemberName_Proxy": "HRESULT WINAPI IAzApplicationGroup_DeleteNonMemberName_Proxy(IAzApplicationGroup *This,BSTR bstrProp,VARIANT varReserved);", "IAzApplicationGroup_get_MembersName_Proxy": "HRESULT WINAPI IAzApplicationGroup_get_MembersName_Proxy(IAzApplicationGroup *This,VARIANT *pvarProp);", "IAzApplicationGroup_get_NonMembersName_Proxy": "HRESULT WINAPI IAzApplicationGroup_get_NonMembersName_Proxy(IAzApplicationGroup *This,VARIANT *pvarProp);", "IAzApplicationGroups_get_Item_Proxy": "HRESULT WINAPI IAzApplicationGroups_get_Item_Proxy(IAzApplicationGroups *This,LONG Index,VARIANT *pvarObtPtr);", "IAzApplicationGroups_get_Count_Proxy": "HRESULT WINAPI IAzApplicationGroups_get_Count_Proxy(IAzApplicationGroups *This,LONG *plCount);", "IAzApplicationGroups_get__NewEnum_Proxy": "HRESULT WINAPI IAzApplicationGroups_get__NewEnum_Proxy(IAzApplicationGroups *This,LPUNKNOWN *ppEnumPtr);", "IAzRole_get_Name_Proxy": "HRESULT WINAPI IAzRole_get_Name_Proxy(IAzRole *This,BSTR *pbstrName);", "IAzRole_put_Name_Proxy": "HRESULT WINAPI IAzRole_put_Name_Proxy(IAzRole *This,BSTR bstrName);", "IAzRole_get_Description_Proxy": "HRESULT WINAPI IAzRole_get_Description_Proxy(IAzRole *This,BSTR *pbstrDescription);", "IAzRole_put_Description_Proxy": "HRESULT WINAPI IAzRole_put_Description_Proxy(IAzRole *This,BSTR bstrDescription);", "IAzRole_get_ApplicationData_Proxy": "HRESULT WINAPI IAzRole_get_ApplicationData_Proxy(IAzRole *This,BSTR *pbstrApplicationData);", "IAzRole_put_ApplicationData_Proxy": "HRESULT WINAPI IAzRole_put_ApplicationData_Proxy(IAzRole *This,BSTR bstrApplicationData);", "IAzRole_AddAppMember_Proxy": "HRESULT WINAPI IAzRole_AddAppMember_Proxy(IAzRole *This,BSTR bstrProp,VARIANT varReserved);", "IAzRole_DeleteAppMember_Proxy": "HRESULT WINAPI IAzRole_DeleteAppMember_Proxy(IAzRole *This,BSTR bstrProp,VARIANT varReserved);", "IAzRole_AddTask_Proxy": "HRESULT WINAPI IAzRole_AddTask_Proxy(IAzRole *This,BSTR bstrProp,VARIANT varReserved);", "IAzRole_DeleteTask_Proxy": "HRESULT WINAPI IAzRole_DeleteTask_Proxy(IAzRole *This,BSTR bstrProp,VARIANT varReserved);", "IAzRole_AddOperation_Proxy": "HRESULT WINAPI IAzRole_AddOperation_Proxy(IAzRole *This,BSTR bstrProp,VARIANT varReserved);", "IAzRole_DeleteOperation_Proxy": "HRESULT WINAPI IAzRole_DeleteOperation_Proxy(IAzRole *This,BSTR bstrProp,VARIANT varReserved);", "IAzRole_AddMember_Proxy": "HRESULT WINAPI IAzRole_AddMember_Proxy(IAzRole *This,BSTR bstrProp,VARIANT varReserved);", "IAzRole_DeleteMember_Proxy": "HRESULT WINAPI IAzRole_DeleteMember_Proxy(IAzRole *This,BSTR bstrProp,VARIANT varReserved);", "IAzRole_get_Writable_Proxy": "HRESULT WINAPI IAzRole_get_Writable_Proxy(IAzRole *This,WINBOOL *pfProp);", "IAzRole_GetProperty_Proxy": "HRESULT WINAPI IAzRole_GetProperty_Proxy(IAzRole *This,LONG lPropId,VARIANT varReserved,VARIANT *pvarProp);", "IAzRole_SetProperty_Proxy": "HRESULT WINAPI IAzRole_SetProperty_Proxy(IAzRole *This,LONG lPropId,VARIANT varProp,VARIANT varReserved);", "IAzRole_get_AppMembers_Proxy": "HRESULT WINAPI IAzRole_get_AppMembers_Proxy(IAzRole *This,VARIANT *pvarProp);", "IAzRole_get_Members_Proxy": "HRESULT WINAPI IAzRole_get_Members_Proxy(IAzRole *This,VARIANT *pvarProp);", "IAzRole_get_Operations_Proxy": "HRESULT WINAPI IAzRole_get_Operations_Proxy(IAzRole *This,VARIANT *pvarProp);", "IAzRole_get_Tasks_Proxy": "HRESULT WINAPI IAzRole_get_Tasks_Proxy(IAzRole *This,VARIANT *pvarProp);", "IAzRole_AddPropertyItem_Proxy": "HRESULT WINAPI IAzRole_AddPropertyItem_Proxy(IAzRole *This,LONG lPropId,VARIANT varProp,VARIANT varReserved);", "IAzRole_DeletePropertyItem_Proxy": "HRESULT WINAPI IAzRole_DeletePropertyItem_Proxy(IAzRole *This,LONG lPropId,VARIANT varProp,VARIANT varReserved);", "IAzRole_Submit_Proxy": "HRESULT WINAPI IAzRole_Submit_Proxy(IAzRole *This,LONG lFlags,VARIANT varReserved);", "IAzRole_AddMemberName_Proxy": "HRESULT WINAPI IAzRole_AddMemberName_Proxy(IAzRole *This,BSTR bstrProp,VARIANT varReserved);", "IAzRole_DeleteMemberName_Proxy": "HRESULT WINAPI IAzRole_DeleteMemberName_Proxy(IAzRole *This,BSTR bstrProp,VARIANT varReserved);", "IAzRole_get_MembersName_Proxy": "HRESULT WINAPI IAzRole_get_MembersName_Proxy(IAzRole *This,VARIANT *pvarProp);", "IAzRoles_get_Item_Proxy": "HRESULT WINAPI IAzRoles_get_Item_Proxy(IAzRoles *This,LONG Index,VARIANT *pvarObtPtr);", "IAzRoles_get_Count_Proxy": "HRESULT WINAPI IAzRoles_get_Count_Proxy(IAzRoles *This,LONG *plCount);", "IAzRoles_get__NewEnum_Proxy": "HRESULT WINAPI IAzRoles_get__NewEnum_Proxy(IAzRoles *This,LPUNKNOWN *ppEnumPtr);", "IAzClientContext_AccessCheck_Proxy": "HRESULT WINAPI IAzClientContext_AccessCheck_Proxy(IAzClientContext *This,BSTR bstrObjectName,VARIANT varScopeNames,VARIANT varOperations,VARIANT varParameterNames,VARIANT varParameterValues,VARIANT varInterfaceNames,VARIANT varInterfaceFlags,VARIANT varInterfaces,VARIANT *pvarResults);", "IAzClientContext_GetBusinessRuleString_Proxy": "HRESULT WINAPI IAzClientContext_GetBusinessRuleString_Proxy(IAzClientContext *This,BSTR *pbstrBusinessRuleString);", "IAzClientContext_get_UserDn_Proxy": "HRESULT WINAPI IAzClientContext_get_UserDn_Proxy(IAzClientContext *This,BSTR *pbstrProp);", "IAzClientContext_get_UserSamCompat_Proxy": "HRESULT WINAPI IAzClientContext_get_UserSamCompat_Proxy(IAzClientContext *This,BSTR *pbstrProp);", "IAzClientContext_get_UserDisplay_Proxy": "HRESULT WINAPI IAzClientContext_get_UserDisplay_Proxy(IAzClientContext *This,BSTR *pbstrProp);", "IAzClientContext_get_UserGuid_Proxy": "HRESULT WINAPI IAzClientContext_get_UserGuid_Proxy(IAzClientContext *This,BSTR *pbstrProp);", "IAzClientContext_get_UserCanonical_Proxy": "HRESULT WINAPI IAzClientContext_get_UserCanonical_Proxy(IAzClientContext *This,BSTR *pbstrProp);", "IAzClientContext_get_UserUpn_Proxy": "HRESULT WINAPI IAzClientContext_get_UserUpn_Proxy(IAzClientContext *This,BSTR *pbstrProp);", "IAzClientContext_get_UserDnsSamCompat_Proxy": "HRESULT WINAPI IAzClientContext_get_UserDnsSamCompat_Proxy(IAzClientContext *This,BSTR *pbstrProp);", "IAzClientContext_GetProperty_Proxy": "HRESULT WINAPI IAzClientContext_GetProperty_Proxy(IAzClientContext *This,LONG lPropId,VARIANT varReserved,VARIANT *pvarProp);", "IAzClientContext_GetRoles_Proxy": "HRESULT WINAPI IAzClientContext_GetRoles_Proxy(IAzClientContext *This,BSTR bstrScopeName,VARIANT *pvarRoleNames);", "IAzClientContext_get_RoleForAccessCheck_Proxy": "HRESULT WINAPI IAzClientContext_get_RoleForAccessCheck_Proxy(IAzClientContext *This,BSTR *pbstrProp);", "IAzClientContext_put_RoleForAccessCheck_Proxy": "HRESULT WINAPI IAzClientContext_put_RoleForAccessCheck_Proxy(IAzClientContext *This,BSTR bstrProp);", "IAzClientContext2_GetAssignedScopesPage_Proxy": "HRESULT WINAPI IAzClientContext2_GetAssignedScopesPage_Proxy(IAzClientContext2 *This,LONG lOptions,LONG PageSize,VARIANT *pvarCursor,VARIANT *pvarScopeNames);", "IAzClientContext2_AddRoles_Proxy": "HRESULT WINAPI IAzClientContext2_AddRoles_Proxy(IAzClientContext2 *This,VARIANT varRoles,BSTR bstrScopeName);", "IAzClientContext2_AddApplicationGroups_Proxy": "HRESULT WINAPI IAzClientContext2_AddApplicationGroups_Proxy(IAzClientContext2 *This,VARIANT varApplicationGroups);", "IAzClientContext2_AddStringSids_Proxy": "HRESULT WINAPI IAzClientContext2_AddStringSids_Proxy(IAzClientContext2 *This,VARIANT varStringSids);", "IAzClientContext2_put_LDAPQueryDN_Proxy": "HRESULT WINAPI IAzClientContext2_put_LDAPQueryDN_Proxy(IAzClientContext2 *This,BSTR bstrLDAPQueryDN);", "IAzClientContext2_get_LDAPQueryDN_Proxy": "HRESULT WINAPI IAzClientContext2_get_LDAPQueryDN_Proxy(IAzClientContext2 *This,BSTR *pbstrLDAPQueryDN);", "IAzBizRuleContext_put_BusinessRuleResult_Proxy": "HRESULT WINAPI IAzBizRuleContext_put_BusinessRuleResult_Proxy(IAzBizRuleContext *This,WINBOOL bResult);", "IAzBizRuleContext_put_BusinessRuleString_Proxy": "HRESULT WINAPI IAzBizRuleContext_put_BusinessRuleString_Proxy(IAzBizRuleContext *This,BSTR bstrBusinessRuleString);", "IAzBizRuleContext_get_BusinessRuleString_Proxy": "HRESULT WINAPI IAzBizRuleContext_get_BusinessRuleString_Proxy(IAzBizRuleContext *This,BSTR *pbstrBusinessRuleString);", "IAzBizRuleContext_GetParameter_Proxy": "HRESULT WINAPI IAzBizRuleContext_GetParameter_Proxy(IAzBizRuleContext *This,BSTR bstrParameterName,VARIANT *pvarParameterValue);", "IDataConvert_DataConvert_Proxy": "HRESULT WINAPI IDataConvert_DataConvert_Proxy(IDataConvert *This,DBTYPE wSrcType,DBTYPE wDstType,DBLENGTH cbSrcLength,DBLENGTH *pcbDstLength,void *pSrc,void *pDst,DBLENGTH cbDstMaxLength,DBSTATUS dbsSrcStatus,DBSTATUS *pdbsStatus,BYTE bPrecision,BYTE bScale,DBDATACONVERT dwFlags);", "IDataConvert_CanConvert_Proxy": "HRESULT WINAPI IDataConvert_CanConvert_Proxy(IDataConvert *This,DBTYPE wSrcType,DBTYPE wDstType);", "IDataConvert_GetConversionSize_Proxy": "HRESULT WINAPI IDataConvert_GetConversionSize_Proxy(IDataConvert *This,DBTYPE wSrcType,DBTYPE wDstType,DBLENGTH *pcbSrcLength,DBLENGTH *pcbDstLength,void *pSrc);", "IDCInfo_GetInfo_Proxy": "HRESULT WINAPI IDCInfo_GetInfo_Proxy(IDCInfo *This,ULONG cInfo,DCINFOTYPE rgeInfoType[],DCINFO **prgInfo);", "IDCInfo_SetInfo_Proxy": "HRESULT WINAPI IDCInfo_SetInfo_Proxy(IDCInfo *This,ULONG cInfo,DCINFO rgInfo[]);", "ITransaction_Commit_Proxy": "HRESULT WINAPI ITransaction_Commit_Proxy(ITransaction *This,WINBOOL fRetaining,DWORD grfTC,DWORD grfRM);", "ITransaction_Abort_Proxy": "HRESULT WINAPI ITransaction_Abort_Proxy(ITransaction *This,BOID *pboidReason,WINBOOL fRetaining,WINBOOL fAsync);", "ITransaction_GetTransactionInfo_Proxy": "HRESULT WINAPI ITransaction_GetTransactionInfo_Proxy(ITransaction *This,XACTTRANSINFO *pinfo);", "ITransactionCloner_CloneWithCommitDisabled_Proxy": "HRESULT WINAPI ITransactionCloner_CloneWithCommitDisabled_Proxy(ITransactionCloner *This,ITransaction **ppITransaction);", "ITransaction2_GetTransactionInfo2_Proxy": "HRESULT WINAPI ITransaction2_GetTransactionInfo2_Proxy(ITransaction2 *This,XACTTRANSINFO *pinfo);", "ITransactionDispenser_GetOptionsObject_Proxy": "HRESULT WINAPI ITransactionDispenser_GetOptionsObject_Proxy(ITransactionDispenser *This,ITransactionOptions **ppOptions);", "ITransactionDispenser_BeginTransaction_Proxy": "HRESULT WINAPI ITransactionDispenser_BeginTransaction_Proxy(ITransactionDispenser *This,IUnknown *punkOuter,ISOLEVEL isoLevel,ULONG isoFlags,ITransactionOptions *pOptions,ITransaction **ppTransaction);", "ITransactionOptions_SetOptions_Proxy": "HRESULT WINAPI ITransactionOptions_SetOptions_Proxy(ITransactionOptions *This,XACTOPT *pOptions);", "ITransactionOptions_GetOptions_Proxy": "HRESULT WINAPI ITransactionOptions_GetOptions_Proxy(ITransactionOptions *This,XACTOPT *pOptions);", "ITransactionOutcomeEvents_Committed_Proxy": "HRESULT WINAPI ITransactionOutcomeEvents_Committed_Proxy(ITransactionOutcomeEvents *This,WINBOOL fRetaining,XACTUOW *pNewUOW,HRESULT hr);", "ITransactionOutcomeEvents_Aborted_Proxy": "HRESULT WINAPI ITransactionOutcomeEvents_Aborted_Proxy(ITransactionOutcomeEvents *This,BOID *pboidReason,WINBOOL fRetaining,XACTUOW *pNewUOW,HRESULT hr);", "ITransactionOutcomeEvents_HeuristicDecision_Proxy": "HRESULT WINAPI ITransactionOutcomeEvents_HeuristicDecision_Proxy(ITransactionOutcomeEvents *This,DWORD dwDecision,BOID *pboidReason,HRESULT hr);", "ITransactionOutcomeEvents_Indoubt_Proxy": "HRESULT WINAPI ITransactionOutcomeEvents_Indoubt_Proxy(ITransactionOutcomeEvents *This);", "ITmNodeName_GetNodeNameSize_Proxy": "HRESULT WINAPI ITmNodeName_GetNodeNameSize_Proxy(ITmNodeName *This,ULONG *pcbNodeNameSize);", "ITmNodeName_GetNodeName_Proxy": "HRESULT WINAPI ITmNodeName_GetNodeName_Proxy(ITmNodeName *This,ULONG cbNodeNameBufferSize,LPWSTR pNodeNameBuffer);", "ChangeServiceConfigA": "WINADVAPI WINBOOL WINAPI ChangeServiceConfigA(SC_HANDLE hService,DWORD dwServiceType,DWORD dwStartType,DWORD dwErrorControl,LPCSTR lpBinaryPathName,LPCSTR lpLoadOrderGroup,LPDWORD lpdwTagId,LPCSTR lpDependencies,LPCSTR lpServiceStartName,LPCSTR lpPassword,LPCSTR lpDisplayName);", "ChangeServiceConfigW": "WINADVAPI WINBOOL WINAPI ChangeServiceConfigW(SC_HANDLE hService,DWORD dwServiceType,DWORD dwStartType,DWORD dwErrorControl,LPCWSTR lpBinaryPathName,LPCWSTR lpLoadOrderGroup,LPDWORD lpdwTagId,LPCWSTR lpDependencies,LPCWSTR lpServiceStartName,LPCWSTR lpPassword,LPCWSTR lpDisplayName);", "ChangeServiceConfig2A": "WINADVAPI WINBOOL WINAPI ChangeServiceConfig2A(SC_HANDLE hService,DWORD dwInfoLevel,LPVOID lpInfo);", "ChangeServiceConfig2W": "WINADVAPI WINBOOL WINAPI ChangeServiceConfig2W(SC_HANDLE hService,DWORD dwInfoLevel,LPVOID lpInfo);", "CloseServiceHandle": "WINADVAPI WINBOOL WINAPI CloseServiceHandle(SC_HANDLE hSCObject);", "ControlService": "WINADVAPI WINBOOL WINAPI ControlService(SC_HANDLE hService,DWORD dwControl,LPSERVICE_STATUS lpServiceStatus);", "CreateServiceA": "WINADVAPI SC_HANDLE WINAPI CreateServiceA(SC_HANDLE hSCManager,LPCSTR lpServiceName,LPCSTR lpDisplayName,DWORD dwDesiredAccess,DWORD dwServiceType,DWORD dwStartType,DWORD dwErrorControl,LPCSTR lpBinaryPathName,LPCSTR lpLoadOrderGroup,LPDWORD lpdwTagId,LPCSTR lpDependencies,LPCSTR lpServiceStartName,LPCSTR lpPassword);", "CreateServiceW": "WINADVAPI SC_HANDLE WINAPI CreateServiceW(SC_HANDLE hSCManager,LPCWSTR lpServiceName,LPCWSTR lpDisplayName,DWORD dwDesiredAccess,DWORD dwServiceType,DWORD dwStartType,DWORD dwErrorControl,LPCWSTR lpBinaryPathName,LPCWSTR lpLoadOrderGroup,LPDWORD lpdwTagId,LPCWSTR lpDependencies,LPCWSTR lpServiceStartName,LPCWSTR lpPassword);", "DeleteService": "WINADVAPI WINBOOL WINAPI DeleteService(SC_HANDLE hService);", "EnumDependentServicesA": "WINADVAPI WINBOOL WINAPI EnumDependentServicesA(SC_HANDLE hService,DWORD dwServiceState,LPENUM_SERVICE_STATUSA lpServices,DWORD cbBufSize,LPDWORD pcbBytesNeeded,LPDWORD lpServicesReturned);", "EnumDependentServicesW": "WINADVAPI WINBOOL WINAPI EnumDependentServicesW(SC_HANDLE hService,DWORD dwServiceState,LPENUM_SERVICE_STATUSW lpServices,DWORD cbBufSize,LPDWORD pcbBytesNeeded,LPDWORD lpServicesReturned);", "EnumServicesStatusA": "WINADVAPI WINBOOL WINAPI EnumServicesStatusA(SC_HANDLE hSCManager,DWORD dwServiceType,DWORD dwServiceState,LPENUM_SERVICE_STATUSA lpServices,DWORD cbBufSize,LPDWORD pcbBytesNeeded,LPDWORD lpServicesReturned,LPDWORD lpResumeHandle);", "EnumServicesStatusW": "WINADVAPI WINBOOL WINAPI EnumServicesStatusW(SC_HANDLE hSCManager,DWORD dwServiceType,DWORD dwServiceState,LPENUM_SERVICE_STATUSW lpServices,DWORD cbBufSize,LPDWORD pcbBytesNeeded,LPDWORD lpServicesReturned,LPDWORD lpResumeHandle);", "EnumServicesStatusExA": "WINADVAPI WINBOOL WINAPI EnumServicesStatusExA(SC_HANDLE hSCManager,SC_ENUM_TYPE InfoLevel,DWORD dwServiceType,DWORD dwServiceState,LPBYTE lpServices,DWORD cbBufSize,LPDWORD pcbBytesNeeded,LPDWORD lpServicesReturned,LPDWORD lpResumeHandle,LPCSTR pszGroupName);", "EnumServicesStatusExW": "WINADVAPI WINBOOL WINAPI EnumServicesStatusExW(SC_HANDLE hSCManager,SC_ENUM_TYPE InfoLevel,DWORD dwServiceType,DWORD dwServiceState,LPBYTE lpServices,DWORD cbBufSize,LPDWORD pcbBytesNeeded,LPDWORD lpServicesReturned,LPDWORD lpResumeHandle,LPCWSTR pszGroupName);", "GetServiceKeyNameA": "WINADVAPI WINBOOL WINAPI GetServiceKeyNameA(SC_HANDLE hSCManager,LPCSTR lpDisplayName,LPSTR lpServiceName,LPDWORD lpcchBuffer);", "GetServiceKeyNameW": "WINADVAPI WINBOOL WINAPI GetServiceKeyNameW(SC_HANDLE hSCManager,LPCWSTR lpDisplayName,LPWSTR lpServiceName,LPDWORD lpcchBuffer);", "GetServiceDisplayNameA": "WINADVAPI WINBOOL WINAPI GetServiceDisplayNameA(SC_HANDLE hSCManager,LPCSTR lpServiceName,LPSTR lpDisplayName,LPDWORD lpcchBuffer);", "GetServiceDisplayNameW": "WINADVAPI WINBOOL WINAPI GetServiceDisplayNameW(SC_HANDLE hSCManager,LPCWSTR lpServiceName,LPWSTR lpDisplayName,LPDWORD lpcchBuffer);", "LockServiceDatabase": "WINADVAPI SC_LOCK WINAPI LockServiceDatabase(SC_HANDLE hSCManager);", "NotifyBootConfigStatus": "WINADVAPI WINBOOL WINAPI NotifyBootConfigStatus(WINBOOL BootAcceptable);", "OpenSCManagerA": "WINADVAPI SC_HANDLE WINAPI OpenSCManagerA(LPCSTR lpMachineName,LPCSTR lpDatabaseName,DWORD dwDesiredAccess);", "OpenSCManagerW": "WINADVAPI SC_HANDLE WINAPI OpenSCManagerW(LPCWSTR lpMachineName,LPCWSTR lpDatabaseName,DWORD dwDesiredAccess);", "OpenServiceA": "WINADVAPI SC_HANDLE WINAPI OpenServiceA(SC_HANDLE hSCManager,LPCSTR lpServiceName,DWORD dwDesiredAccess);", "OpenServiceW": "WINADVAPI SC_HANDLE WINAPI OpenServiceW(SC_HANDLE hSCManager,LPCWSTR lpServiceName,DWORD dwDesiredAccess);", "QueryServiceConfigA": "WINADVAPI WINBOOL WINAPI QueryServiceConfigA(SC_HANDLE hService,LPQUERY_SERVICE_CONFIGA lpServiceConfig,DWORD cbBufSize,LPDWORD pcbBytesNeeded);", "QueryServiceConfigW": "WINADVAPI WINBOOL WINAPI QueryServiceConfigW(SC_HANDLE hService,LPQUERY_SERVICE_CONFIGW lpServiceConfig,DWORD cbBufSize,LPDWORD pcbBytesNeeded);", "QueryServiceConfig2A": "WINADVAPI WINBOOL WINAPI QueryServiceConfig2A(SC_HANDLE hService,DWORD dwInfoLevel,LPBYTE lpBuffer,DWORD cbBufSize,LPDWORD pcbBytesNeeded);", "QueryServiceConfig2W": "WINADVAPI WINBOOL WINAPI QueryServiceConfig2W(SC_HANDLE hService,DWORD dwInfoLevel,LPBYTE lpBuffer,DWORD cbBufSize,LPDWORD pcbBytesNeeded);", "QueryServiceLockStatusA": "WINADVAPI WINBOOL WINAPI QueryServiceLockStatusA(SC_HANDLE hSCManager,LPQUERY_SERVICE_LOCK_STATUSA lpLockStatus,DWORD cbBufSize,LPDWORD pcbBytesNeeded);", "QueryServiceLockStatusW": "WINADVAPI WINBOOL WINAPI QueryServiceLockStatusW(SC_HANDLE hSCManager,LPQUERY_SERVICE_LOCK_STATUSW lpLockStatus,DWORD cbBufSize,LPDWORD pcbBytesNeeded);", "QueryServiceObjectSecurity": "WINADVAPI WINBOOL WINAPI QueryServiceObjectSecurity(SC_HANDLE hService,SECURITY_INFORMATION dwSecurityInformation,PSECURITY_DESCRIPTOR lpSecurityDescriptor,DWORD cbBufSize,LPDWORD pcbBytesNeeded);", "QueryServiceStatus": "WINADVAPI WINBOOL WINAPI QueryServiceStatus(SC_HANDLE hService,LPSERVICE_STATUS lpServiceStatus);", "QueryServiceStatusEx": "WINADVAPI WINBOOL WINAPI QueryServiceStatusEx(SC_HANDLE hService,SC_STATUS_TYPE InfoLevel,LPBYTE lpBuffer,DWORD cbBufSize,LPDWORD pcbBytesNeeded);", "RegisterServiceCtrlHandlerA": "WINADVAPI SERVICE_STATUS_HANDLE WINAPI RegisterServiceCtrlHandlerA(LPCSTR lpServiceName,LPHANDLER_FUNCTION lpHandlerProc);", "RegisterServiceCtrlHandlerW": "WINADVAPI SERVICE_STATUS_HANDLE WINAPI RegisterServiceCtrlHandlerW(LPCWSTR lpServiceName,LPHANDLER_FUNCTION lpHandlerProc);", "RegisterServiceCtrlHandlerExA": "WINADVAPI SERVICE_STATUS_HANDLE WINAPI RegisterServiceCtrlHandlerExA(LPCSTR lpServiceName,LPHANDLER_FUNCTION_EX lpHandlerProc,LPVOID lpContext);", "RegisterServiceCtrlHandlerExW": "WINADVAPI SERVICE_STATUS_HANDLE WINAPI RegisterServiceCtrlHandlerExW(LPCWSTR lpServiceName,LPHANDLER_FUNCTION_EX lpHandlerProc,LPVOID lpContext);", "SetServiceObjectSecurity": "WINADVAPI WINBOOL WINAPI SetServiceObjectSecurity(SC_HANDLE hService,SECURITY_INFORMATION dwSecurityInformation,PSECURITY_DESCRIPTOR lpSecurityDescriptor);", "SetServiceStatus": "WINADVAPI WINBOOL WINAPI SetServiceStatus(SERVICE_STATUS_HANDLE hServiceStatus,LPSERVICE_STATUS lpServiceStatus);", "StartServiceCtrlDispatcherA": "WINADVAPI WINBOOL WINAPI StartServiceCtrlDispatcherA(CONST SERVICE_TABLE_ENTRYA *lpServiceStartTable);", "StartServiceCtrlDispatcherW": "WINADVAPI WINBOOL WINAPI StartServiceCtrlDispatcherW(CONST SERVICE_TABLE_ENTRYW *lpServiceStartTable);", "StartServiceA": "WINADVAPI WINBOOL WINAPI StartServiceA(SC_HANDLE hService,DWORD dwNumServiceArgs,LPCSTR *lpServiceArgVectors);", "StartServiceW": "WINADVAPI WINBOOL WINAPI StartServiceW(SC_HANDLE hService,DWORD dwNumServiceArgs,LPCWSTR *lpServiceArgVectors);", "UnlockServiceDatabase": "WINADVAPI WINBOOL WINAPI UnlockServiceDatabase(SC_LOCK ScLock);", "ControlServiceExA": "WINADVAPI WINBOOL WINAPI ControlServiceExA(", "ControlServiceExW": "WINADVAPI WINBOOL WINAPI ControlServiceExW(", "NotifyServiceStatusChangeA": "DWORD WINAPI NotifyServiceStatusChangeA(", "NotifyServiceStatusChangeW": "DWORD WINAPI NotifyServiceStatusChangeW(", "RasEapGetInfo": "DWORD WINAPI RasEapGetInfo(DWORD dwEapTypeId, PPP_EAP_INFO *pEapInfo);", "RasEapFreeMemory": "DWORD WINAPI RasEapFreeMemory(BYTE *pMemory);", "RasEapInvokeInteractiveUI": "DWORD WINAPI RasEapInvokeInteractiveUI(DWORD dwEapTypeId, HWND hwndParent, BYTE *pUIContextData, DWORD dwSizeOfUIContextData, BYTE **ppDataFromInteractiveUI, DWORD *pdwSizeOfDataFromInteractiveUI);", "RasEapInvokeConfigUI": "DWORD WINAPI RasEapInvokeConfigUI(DWORD dwEapTypeId, HWND hwndParent, DWORD dwFlags, BYTE *pConnectionDataIn, DWORD dwSizeOfConnectionDataIn, BYTE **ppConnectionDataOut, DWORD *pdwSizeOfConnectionDataOut);", "RasEapGetIdentity": "DWORD WINAPI RasEapGetIdentity(DWORD dwEapTypeId, HWND hwndParent, DWORD dwFlags, const WCHAR *pwszPhonebook, const WCHAR *pwszEntry, BYTE *pConnectionDataIn, DWORD dwSizeOfConnectionDataIn, BYTE *pUserDataIn, DWORD dwSizeOfUserDataIn, BYTE **ppUserDataOut, DWORD *pdwSizeOfUserDataOut, WCHAR **ppwszIdentityOut);", "GetFileAttributesW": "WINBASEAPI DWORD WINAPI GetFileAttributesW (LPCWSTR lpFileName);", "SetFilePointer": "WINBASEAPI DWORD WINAPI SetFilePointer (HANDLE hFile, LONG lDistanceToMove, PLONG lpDistanceToMoveHigh, DWORD dwMoveMethod);", "GetFileInformationByHandle": "WINBASEAPI WINBOOL WINAPI GetFileInformationByHandle (HANDLE hFile, LPBY_HANDLE_FILE_INFORMATION lpFileInformation);", "CreateFileA": "WINBASEAPI HANDLE WINAPI CreateFileA (LPCSTR lpFileName, DWORD dwDesiredAccess, DWORD dwShareMode, LPSECURITY_ATTRIBUTES lpSecurityAttributes, DWORD dwCreationDisposition, DWORD dwFlagsAndAttributes, HANDLE hTemplateFile);", "DefineDosDeviceW": "WINBASEAPI WINBOOL WINAPI DefineDosDeviceW (DWORD dwFlags, LPCWSTR lpDeviceName, LPCWSTR lpTargetPath);", "FindCloseChangeNotification": "WINBASEAPI WINBOOL WINAPI FindCloseChangeNotification (HANDLE hChangeHandle);", "FindFirstChangeNotificationA": "WINBASEAPI HANDLE WINAPI FindFirstChangeNotificationA (LPCSTR lpPathName, WINBOOL bWatchSubtree, DWORD dwNotifyFilter);", "FindFirstChangeNotificationW": "WINBASEAPI HANDLE WINAPI FindFirstChangeNotificationW (LPCWSTR lpPathName, WINBOOL bWatchSubtree, DWORD dwNotifyFilter);", "FindFirstVolumeW": "WINBASEAPI HANDLE WINAPI FindFirstVolumeW (LPWSTR lpszVolumeName, DWORD cchBufferLength);", "FindNextChangeNotification": "WINBASEAPI WINBOOL WINAPI FindNextChangeNotification (HANDLE hChangeHandle);", "FindNextVolumeW": "WINBASEAPI WINBOOL WINAPI FindNextVolumeW (HANDLE hFindVolume, LPWSTR lpszVolumeName, DWORD cchBufferLength);", "FindVolumeClose": "WINBASEAPI WINBOOL WINAPI FindVolumeClose (HANDLE hFindVolume);", "CreateFileW": "WINBASEAPI HANDLE WINAPI CreateFileW (LPCWSTR lpFileName, DWORD dwDesiredAccess, DWORD dwShareMode, LPSECURITY_ATTRIBUTES lpSecurityAttributes, DWORD dwCreationDisposition, DWORD dwFlagsAndAttributes, HANDLE hTemplateFile);", "GetFileSize": "WINBASEAPI DWORD WINAPI GetFileSize (HANDLE hFile, LPDWORD lpFileSizeHigh);", "CompareFileTime": "WINBASEAPI LONG WINAPI CompareFileTime (CONST FILETIME *lpFileTime1, CONST FILETIME *lpFileTime2);", "DeleteVolumeMountPointW": "WINBASEAPI WINBOOL WINAPI DeleteVolumeMountPointW (LPCWSTR lpszVolumeMountPoint);", "FileTimeToLocalFileTime": "WINBASEAPI WINBOOL WINAPI FileTimeToLocalFileTime (CONST FILETIME *lpFileTime, LPFILETIME lpLocalFileTime);", "FindFirstFileA": "WINBASEAPI HANDLE WINAPI FindFirstFileA (LPCSTR lpFileName, LPWIN32_FIND_DATAA lpFindFileData);", "FindFirstFileW": "WINBASEAPI HANDLE WINAPI FindFirstFileW (LPCWSTR lpFileName, LPWIN32_FIND_DATAW lpFindFileData);", "GetDiskFreeSpaceA": "WINBASEAPI WINBOOL WINAPI GetDiskFreeSpaceA (LPCSTR lpRootPathName, LPDWORD lpSectorsPerCluster, LPDWORD lpBytesPerSector, LPDWORD lpNumberOfFreeClusters, LPDWORD lpTotalNumberOfClusters);", "GetDiskFreeSpaceW": "WINBASEAPI WINBOOL WINAPI GetDiskFreeSpaceW (LPCWSTR lpRootPathName, LPDWORD lpSectorsPerCluster, LPDWORD lpBytesPerSector, LPDWORD lpNumberOfFreeClusters, LPDWORD lpTotalNumberOfClusters);", "GetDriveTypeA": "WINBASEAPI UINT WINAPI GetDriveTypeA (LPCSTR lpRootPathName);", "GetDriveTypeW": "WINBASEAPI UINT WINAPI GetDriveTypeW (LPCWSTR lpRootPathName);", "GetFileAttributesA": "WINBASEAPI DWORD WINAPI GetFileAttributesA (LPCSTR lpFileName);", "GetFileSizeEx": "WINBASEAPI WINBOOL WINAPI GetFileSizeEx (HANDLE hFile, PLARGE_INTEGER lpFileSize);", "GetFileTime": "WINBASEAPI WINBOOL WINAPI GetFileTime (HANDLE hFile, LPFILETIME lpCreationTime, LPFILETIME lpLastAccessTime, LPFILETIME lpLastWriteTime);", "GetFileType": "WINBASEAPI DWORD WINAPI GetFileType (HANDLE hFile);", "GetFullPathNameA": "WINBASEAPI DWORD WINAPI GetFullPathNameA (LPCSTR lpFileName, DWORD nBufferLength, LPSTR lpBuffer, LPSTR *lpFilePart);", "GetFullPathNameW": "WINBASEAPI DWORD WINAPI GetFullPathNameW (LPCWSTR lpFileName, DWORD nBufferLength, LPWSTR lpBuffer, LPWSTR *lpFilePart);", "GetLogicalDrives": "WINBASEAPI DWORD WINAPI GetLogicalDrives (VOID);", "GetVolumeNameForVolumeMountPointW": "WINBASEAPI WINBOOL WINAPI GetVolumeNameForVolumeMountPointW (LPCWSTR lpszVolumeMountPoint, LPWSTR lpszVolumeName, DWORD cchBufferLength);", "GetVolumePathNameW": "WINBASEAPI WINBOOL WINAPI GetVolumePathNameW (LPCWSTR lpszFileName, LPWSTR lpszVolumePathName, DWORD cchBufferLength);", "ReadFileScatter": "WINBASEAPI WINBOOL WINAPI ReadFileScatter (HANDLE hFile, FILE_SEGMENT_ELEMENT aSegmentArray[], DWORD nNumberOfBytesToRead, LPDWORD lpReserved, LPOVERLAPPED lpOverlapped);", "SetFileValidData": "WINBASEAPI WINBOOL WINAPI SetFileValidData (HANDLE hFile, LONGLONG ValidDataLength);", "WriteFileGather": "WINBASEAPI WINBOOL WINAPI WriteFileGather (HANDLE hFile, FILE_SEGMENT_ELEMENT aSegmentArray[], DWORD nNumberOfBytesToWrite, LPDWORD lpReserved, LPOVERLAPPED lpOverlapped);", "GetLogicalDriveStringsW": "WINBASEAPI DWORD WINAPI GetLogicalDriveStringsW (DWORD nBufferLength, LPWSTR lpBuffer);", "GetShortPathNameW": "WINBASEAPI DWORD WINAPI GetShortPathNameW (LPCWSTR lpszLongPath, LPWSTR lpszShortPath, DWORD cchBuffer);", "QueryDosDeviceW": "WINBASEAPI DWORD WINAPI QueryDosDeviceW (LPCWSTR lpDeviceName, LPWSTR lpTargetPath, DWORD ucchMax);", "GetVolumePathNamesForVolumeNameW": "WINBASEAPI WINBOOL WINAPI GetVolumePathNamesForVolumeNameW (LPCWSTR lpszVolumeName, LPWCH lpszVolumePathNames, DWORD cchBufferLength, PDWORD lpcchReturnLength);", "GetVolumeInformationByHandleW": "WINBASEAPI WINBOOL WINAPI GetVolumeInformationByHandleW (HANDLE hFile, LPWSTR lpVolumeNameBuffer, DWORD nVolumeNameSize, LPDWORD lpVolumeSerialNumber, LPDWORD lpMaximumComponentLength, LPDWORD lpFileSystemFlags, LPWSTR lpFileSystemNameBuffer, DWORD nFileSystemNameSize);", "AreShortNamesEnabled": "WINBASEAPI WINBOOL WINAPI AreShortNamesEnabled (HANDLE Handle, WINBOOL *Enabled);", "GetLongPathNameA": "WINBASEAPI DWORD WINAPI GetLongPathNameA (LPCSTR lpszShortPath, LPSTR lpszLongPath, DWORD cchBuffer);", "GetLongPathNameW": "WINBASEAPI DWORD WINAPI GetLongPathNameW (LPCWSTR lpszShortPath, LPWSTR lpszLongPath, DWORD cchBuffer);", "GetTempFileNameA": "WINBASEAPI UINT WINAPI GetTempFileNameA (LPCSTR lpPathName, LPCSTR lpPrefixString, UINT uUnique, LPSTR lpTempFileName);", "GetTempFileNameW": "WINBASEAPI UINT WINAPI GetTempFileNameW (LPCWSTR lpPathName, LPCWSTR lpPrefixString, UINT uUnique, LPWSTR lpTempFileName);", "GetVolumeInformationW": "WINBASEAPI WINBOOL WINAPI GetVolumeInformationW (LPCWSTR lpRootPathName, LPWSTR lpVolumeNameBuffer, DWORD nVolumeNameSize, LPDWORD lpVolumeSerialNumber, LPDWORD lpMaximumComponentLength, LPDWORD lpFileSystemFlags, LPWSTR lpFileSystemNameBuffer, DWORD nFileSystemNameSize);", "LocalFileTimeToFileTime": "WINBASEAPI WINBOOL WINAPI LocalFileTimeToFileTime (CONST FILETIME *lpLocalFileTime, LPFILETIME lpFileTime);", "LockFile": "WINBASEAPI WINBOOL WINAPI LockFile (HANDLE hFile, DWORD dwFileOffsetLow, DWORD dwFileOffsetHigh, DWORD nNumberOfBytesToLockLow, DWORD nNumberOfBytesToLockHigh);", "ReadFileEx": "WINBASEAPI WINBOOL WINAPI ReadFileEx (HANDLE hFile, LPVOID lpBuffer, DWORD nNumberOfBytesToRead, LPOVERLAPPED lpOverlapped, LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine);", "SetFileTime": "WINBASEAPI WINBOOL WINAPI SetFileTime (HANDLE hFile, CONST FILETIME *lpCreationTime, CONST FILETIME *lpLastAccessTime, CONST FILETIME *lpLastWriteTime);", "UnlockFile": "WINBASEAPI WINBOOL WINAPI UnlockFile (HANDLE hFile, DWORD dwFileOffsetLow, DWORD dwFileOffsetHigh, DWORD nNumberOfBytesToUnlockLow, DWORD nNumberOfBytesToUnlockHigh);", "WriteFileEx": "WINBASEAPI WINBOOL WINAPI WriteFileEx (HANDLE hFile, LPCVOID lpBuffer, DWORD nNumberOfBytesToWrite, LPOVERLAPPED lpOverlapped, LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine);", "GetFinalPathNameByHandleA": "WINBASEAPI DWORD WINAPI GetFinalPathNameByHandleA (HANDLE hFile, LPSTR lpszFilePath, DWORD cchFilePath, DWORD dwFlags);", "GetFinalPathNameByHandleW": "WINBASEAPI DWORD WINAPI GetFinalPathNameByHandleW (HANDLE hFile, LPWSTR lpszFilePath, DWORD cchFilePath, DWORD dwFlags);", "CreateDirectoryA": "WINBASEAPI WINBOOL WINAPI CreateDirectoryA (LPCSTR lpPathName, LPSECURITY_ATTRIBUTES lpSecurityAttributes);", "CreateDirectoryW": "WINBASEAPI WINBOOL WINAPI CreateDirectoryW (LPCWSTR lpPathName, LPSECURITY_ATTRIBUTES lpSecurityAttributes);", "DeleteFileA": "WINBASEAPI WINBOOL WINAPI DeleteFileA (LPCSTR lpFileName);", "DeleteFileW": "WINBASEAPI WINBOOL WINAPI DeleteFileW (LPCWSTR lpFileName);", "FindClose": "WINBASEAPI WINBOOL WINAPI FindClose (HANDLE hFindFile);", "FindFirstFileExA": "WINBASEAPI HANDLE WINAPI FindFirstFileExA (LPCSTR lpFileName, FINDEX_INFO_LEVELS fInfoLevelId, LPVOID lpFindFileData, FINDEX_SEARCH_OPS fSearchOp, LPVOID lpSearchFilter, DWORD dwAdditionalFlags);", "FindFirstFileExW": "WINBASEAPI HANDLE WINAPI FindFirstFileExW (LPCWSTR lpFileName, FINDEX_INFO_LEVELS fInfoLevelId, LPVOID lpFindFileData, FINDEX_SEARCH_OPS fSearchOp, LPVOID lpSearchFilter, DWORD dwAdditionalFlags);", "FindNextFileA": "WINBASEAPI WINBOOL WINAPI FindNextFileA (HANDLE hFindFile, LPWIN32_FIND_DATAA lpFindFileData);", "FindNextFileW": "WINBASEAPI WINBOOL WINAPI FindNextFileW (HANDLE hFindFile, LPWIN32_FIND_DATAW lpFindFileData);", "FlushFileBuffers": "WINBASEAPI WINBOOL WINAPI FlushFileBuffers (HANDLE hFile);", "GetDiskFreeSpaceExA": "WINBASEAPI WINBOOL WINAPI GetDiskFreeSpaceExA (LPCSTR lpDirectoryName, PULARGE_INTEGER lpFreeBytesAvailableToCaller, PULARGE_INTEGER lpTotalNumberOfBytes, PULARGE_INTEGER lpTotalNumberOfFreeBytes);", "GetDiskFreeSpaceExW": "WINBASEAPI WINBOOL WINAPI GetDiskFreeSpaceExW (LPCWSTR lpDirectoryName, PULARGE_INTEGER lpFreeBytesAvailableToCaller, PULARGE_INTEGER lpTotalNumberOfBytes, PULARGE_INTEGER lpTotalNumberOfFreeBytes);", "GetFileAttributesExA": "WINBASEAPI WINBOOL WINAPI GetFileAttributesExA (LPCSTR lpFileName, GET_FILEEX_INFO_LEVELS fInfoLevelId, LPVOID lpFileInformation);", "GetFileAttributesExW": "WINBASEAPI WINBOOL WINAPI GetFileAttributesExW (LPCWSTR lpFileName, GET_FILEEX_INFO_LEVELS fInfoLevelId, LPVOID lpFileInformation);", "LockFileEx": "WINBASEAPI WINBOOL WINAPI LockFileEx (HANDLE hFile, DWORD dwFlags, DWORD dwReserved, DWORD nNumberOfBytesToLockLow, DWORD nNumberOfBytesToLockHigh, LPOVERLAPPED lpOverlapped);", "ReadFile": "WINBASEAPI WINBOOL WINAPI ReadFile (HANDLE hFile, LPVOID lpBuffer, DWORD nNumberOfBytesToRead, LPDWORD lpNumberOfBytesRead, LPOVERLAPPED lpOverlapped);", "RemoveDirectoryA": "WINBASEAPI WINBOOL WINAPI RemoveDirectoryA (LPCSTR lpPathName);", "RemoveDirectoryW": "WINBASEAPI WINBOOL WINAPI RemoveDirectoryW (LPCWSTR lpPathName);", "SetEndOfFile": "WINBASEAPI WINBOOL WINAPI SetEndOfFile (HANDLE hFile);", "SetFileAttributesA": "WINBASEAPI WINBOOL WINAPI SetFileAttributesA (LPCSTR lpFileName, DWORD dwFileAttributes);", "SetFileAttributesW": "WINBASEAPI WINBOOL WINAPI SetFileAttributesW (LPCWSTR lpFileName, DWORD dwFileAttributes);", "SetFilePointerEx": "WINBASEAPI WINBOOL WINAPI SetFilePointerEx (HANDLE hFile, LARGE_INTEGER liDistanceToMove, PLARGE_INTEGER lpNewFilePointer, DWORD dwMoveMethod);", "UnlockFileEx": "WINBASEAPI WINBOOL WINAPI UnlockFileEx (HANDLE hFile, DWORD dwReserved, DWORD nNumberOfBytesToUnlockLow, DWORD nNumberOfBytesToUnlockHigh, LPOVERLAPPED lpOverlapped);", "WriteFile": "WINBASEAPI WINBOOL WINAPI WriteFile (HANDLE hFile, LPCVOID lpBuffer, DWORD nNumberOfBytesToWrite, LPDWORD lpNumberOfBytesWritten, LPOVERLAPPED lpOverlapped);", "GetTempPathA": "WINBASEAPI DWORD WINAPI GetTempPathA (DWORD nBufferLength, LPSTR lpBuffer);", "GetTempPathW": "WINBASEAPI DWORD WINAPI GetTempPathW (DWORD nBufferLength, LPWSTR lpBuffer);", "GetDiskSpaceInformationA": "WINBASEAPI HRESULT WINAPI GetDiskSpaceInformationA (LPCSTR rootPath, DISK_SPACE_INFORMATION *diskSpaceInfo);", "GetDiskSpaceInformationW": "WINBASEAPI HRESULT WINAPI GetDiskSpaceInformationW (LPCWSTR rootPath, DISK_SPACE_INFORMATION *diskSpaceInfo);", "SetFileInformationByHandle": "WINBASEAPI WINBOOL WINAPI SetFileInformationByHandle (HANDLE hFile, FILE_INFO_BY_HANDLE_CLASS FileInformationClass, LPVOID lpFileInformation, DWORD dwBufferSize);", "CreateFile2": "WINBASEAPI HANDLE WINAPI CreateFile2 (LPCWSTR lpFileName, DWORD dwDesiredAccess, DWORD dwShareMode, DWORD dwCreationDisposition, LPCREATEFILE2_EXTENDED_PARAMETERS pCreateExParams);", "GetTempPath2W": "WINBASEAPI DWORD WINAPI GetTempPath2W (DWORD BufferLength, LPWSTR Buffer);", "GetTempPath2A": "WINBASEAPI DWORD WINAPI GetTempPath2A (DWORD BufferLength, LPSTR Buffer);", "AMGetErrorTextA": "DWORD WINAPI AMGetErrorTextA(HRESULT,LPSTR,DWORD);", "AMGetErrorTextW": "DWORD WINAPI AMGetErrorTextW(HRESULT,LPWSTR,DWORD);", "CreateALink": "HRESULT WINAPI CreateALink (REFIID riid, IUnknown **ppInterface);", "GetALinkMessageDll": "HINSTANCE WINAPI GetALinkMessageDll ();", "WdsCliGetImageName": "HRESULT WINAPI WdsCliGetImageName(", "ITConferenceBlob_Init_Proxy": "HRESULT WINAPI ITConferenceBlob_Init_Proxy(ITConferenceBlob *This,BSTR pName,BLOB_CHARACTER_SET CharacterSet,BSTR pBlob);", "ITConferenceBlob_get_CharacterSet_Proxy": "HRESULT WINAPI ITConferenceBlob_get_CharacterSet_Proxy(ITConferenceBlob *This,BLOB_CHARACTER_SET *pCharacterSet);", "ITConferenceBlob_get_ConferenceBlob_Proxy": "HRESULT WINAPI ITConferenceBlob_get_ConferenceBlob_Proxy(ITConferenceBlob *This,BSTR *ppBlob);", "ITConferenceBlob_SetConferenceBlob_Proxy": "HRESULT WINAPI ITConferenceBlob_SetConferenceBlob_Proxy(ITConferenceBlob *This,BLOB_CHARACTER_SET CharacterSet,BSTR pBlob);", "ITMedia_get_MediaName_Proxy": "HRESULT WINAPI ITMedia_get_MediaName_Proxy(ITMedia *This,BSTR *ppMediaName);", "ITMedia_put_MediaName_Proxy": "HRESULT WINAPI ITMedia_put_MediaName_Proxy(ITMedia *This,BSTR pMediaName);", "ITMedia_get_StartPort_Proxy": "HRESULT WINAPI ITMedia_get_StartPort_Proxy(ITMedia *This,LONG *pStartPort);", "ITMedia_get_NumPorts_Proxy": "HRESULT WINAPI ITMedia_get_NumPorts_Proxy(ITMedia *This,LONG *pNumPorts);", "ITMedia_get_TransportProtocol_Proxy": "HRESULT WINAPI ITMedia_get_TransportProtocol_Proxy(ITMedia *This,BSTR *ppProtocol);", "ITMedia_put_TransportProtocol_Proxy": "HRESULT WINAPI ITMedia_put_TransportProtocol_Proxy(ITMedia *This,BSTR pProtocol);", "ITMedia_get_FormatCodes_Proxy": "HRESULT WINAPI ITMedia_get_FormatCodes_Proxy(ITMedia *This,VARIANT *pVal);", "ITMedia_put_FormatCodes_Proxy": "HRESULT WINAPI ITMedia_put_FormatCodes_Proxy(ITMedia *This,VARIANT NewVal);", "ITMedia_get_MediaTitle_Proxy": "HRESULT WINAPI ITMedia_get_MediaTitle_Proxy(ITMedia *This,BSTR *ppMediaTitle);", "ITMedia_put_MediaTitle_Proxy": "HRESULT WINAPI ITMedia_put_MediaTitle_Proxy(ITMedia *This,BSTR pMediaTitle);", "ITMedia_SetPortInfo_Proxy": "HRESULT WINAPI ITMedia_SetPortInfo_Proxy(ITMedia *This,LONG StartPort,LONG NumPorts);", "IEnumMedia_Next_Proxy": "HRESULT WINAPI IEnumMedia_Next_Proxy(IEnumMedia *This,ULONG celt,ITMedia **pVal,ULONG *pceltFetched);", "IEnumMedia_Reset_Proxy": "HRESULT WINAPI IEnumMedia_Reset_Proxy(IEnumMedia *This);", "IEnumMedia_Skip_Proxy": "HRESULT WINAPI IEnumMedia_Skip_Proxy(IEnumMedia *This,ULONG celt);", "IEnumMedia_Clone_Proxy": "HRESULT WINAPI IEnumMedia_Clone_Proxy(IEnumMedia *This,IEnumMedia **ppEnum);", "ITMediaCollection_get_Count_Proxy": "HRESULT WINAPI ITMediaCollection_get_Count_Proxy(ITMediaCollection *This,LONG *pVal);", "ITMediaCollection_get_Item_Proxy": "HRESULT WINAPI ITMediaCollection_get_Item_Proxy(ITMediaCollection *This,LONG Index,ITMedia **pVal);", "ITMediaCollection_get__NewEnum_Proxy": "HRESULT WINAPI ITMediaCollection_get__NewEnum_Proxy(ITMediaCollection *This,IUnknown **pVal);", "ITMediaCollection_get_EnumerationIf_Proxy": "HRESULT WINAPI ITMediaCollection_get_EnumerationIf_Proxy(ITMediaCollection *This,IEnumMedia **pVal);", "ITMediaCollection_Create_Proxy": "HRESULT WINAPI ITMediaCollection_Create_Proxy(ITMediaCollection *This,LONG Index,ITMedia **ppMedia);", "ITMediaCollection_Delete_Proxy": "HRESULT WINAPI ITMediaCollection_Delete_Proxy(ITMediaCollection *This,LONG Index);", "ITTime_get_StartTime_Proxy": "HRESULT WINAPI ITTime_get_StartTime_Proxy(ITTime *This,DOUBLE *pTime);", "ITTime_put_StartTime_Proxy": "HRESULT WINAPI ITTime_put_StartTime_Proxy(ITTime *This,DOUBLE Time);", "ITTime_get_StopTime_Proxy": "HRESULT WINAPI ITTime_get_StopTime_Proxy(ITTime *This,DOUBLE *pTime);", "ITTime_put_StopTime_Proxy": "HRESULT WINAPI ITTime_put_StopTime_Proxy(ITTime *This,DOUBLE Time);", "IEnumTime_Next_Proxy": "HRESULT WINAPI IEnumTime_Next_Proxy(IEnumTime *This,ULONG celt,ITTime **pVal,ULONG *pceltFetched);", "IEnumTime_Reset_Proxy": "HRESULT WINAPI IEnumTime_Reset_Proxy(IEnumTime *This);", "IEnumTime_Skip_Proxy": "HRESULT WINAPI IEnumTime_Skip_Proxy(IEnumTime *This,ULONG celt);", "IEnumTime_Clone_Proxy": "HRESULT WINAPI IEnumTime_Clone_Proxy(IEnumTime *This,IEnumTime **ppEnum);", "ITTimeCollection_get_Count_Proxy": "HRESULT WINAPI ITTimeCollection_get_Count_Proxy(ITTimeCollection *This,LONG *pVal);", "ITTimeCollection_get_Item_Proxy": "HRESULT WINAPI ITTimeCollection_get_Item_Proxy(ITTimeCollection *This,LONG Index,ITTime **pVal);", "ITTimeCollection_get__NewEnum_Proxy": "HRESULT WINAPI ITTimeCollection_get__NewEnum_Proxy(ITTimeCollection *This,IUnknown **pVal);", "ITTimeCollection_get_EnumerationIf_Proxy": "HRESULT WINAPI ITTimeCollection_get_EnumerationIf_Proxy(ITTimeCollection *This,IEnumTime **pVal);", "ITTimeCollection_Create_Proxy": "HRESULT WINAPI ITTimeCollection_Create_Proxy(ITTimeCollection *This,LONG Index,ITTime **ppTime);", "ITTimeCollection_Delete_Proxy": "HRESULT WINAPI ITTimeCollection_Delete_Proxy(ITTimeCollection *This,LONG Index);", "ITSdp_get_IsValid_Proxy": "HRESULT WINAPI ITSdp_get_IsValid_Proxy(ITSdp *This,VARIANT_BOOL *pfIsValid);", "ITSdp_get_ProtocolVersion_Proxy": "HRESULT WINAPI ITSdp_get_ProtocolVersion_Proxy(ITSdp *This,unsigned char *pProtocolVersion);", "ITSdp_get_SessionId_Proxy": "HRESULT WINAPI ITSdp_get_SessionId_Proxy(ITSdp *This,DOUBLE *pSessionId);", "ITSdp_get_SessionVersion_Proxy": "HRESULT WINAPI ITSdp_get_SessionVersion_Proxy(ITSdp *This,DOUBLE *pSessionVersion);", "ITSdp_put_SessionVersion_Proxy": "HRESULT WINAPI ITSdp_put_SessionVersion_Proxy(ITSdp *This,DOUBLE SessionVersion);", "ITSdp_get_MachineAddress_Proxy": "HRESULT WINAPI ITSdp_get_MachineAddress_Proxy(ITSdp *This,BSTR *ppMachineAddress);", "ITSdp_put_MachineAddress_Proxy": "HRESULT WINAPI ITSdp_put_MachineAddress_Proxy(ITSdp *This,BSTR pMachineAddress);", "ITSdp_get_Name_Proxy": "HRESULT WINAPI ITSdp_get_Name_Proxy(ITSdp *This,BSTR *ppName);", "ITSdp_put_Name_Proxy": "HRESULT WINAPI ITSdp_put_Name_Proxy(ITSdp *This,BSTR pName);", "ITSdp_get_Description_Proxy": "HRESULT WINAPI ITSdp_get_Description_Proxy(ITSdp *This,BSTR *ppDescription);", "ITSdp_put_Description_Proxy": "HRESULT WINAPI ITSdp_put_Description_Proxy(ITSdp *This,BSTR pDescription);", "ITSdp_get_Url_Proxy": "HRESULT WINAPI ITSdp_get_Url_Proxy(ITSdp *This,BSTR *ppUrl);", "ITSdp_put_Url_Proxy": "HRESULT WINAPI ITSdp_put_Url_Proxy(ITSdp *This,BSTR pUrl);", "ITSdp_GetEmailNames_Proxy": "HRESULT WINAPI ITSdp_GetEmailNames_Proxy(ITSdp *This,VARIANT *pAddresses,VARIANT *pNames);", "ITSdp_SetEmailNames_Proxy": "HRESULT WINAPI ITSdp_SetEmailNames_Proxy(ITSdp *This,VARIANT Addresses,VARIANT Names);", "ITSdp_GetPhoneNumbers_Proxy": "HRESULT WINAPI ITSdp_GetPhoneNumbers_Proxy(ITSdp *This,VARIANT *pNumbers,VARIANT *pNames);", "ITSdp_SetPhoneNumbers_Proxy": "HRESULT WINAPI ITSdp_SetPhoneNumbers_Proxy(ITSdp *This,VARIANT Numbers,VARIANT Names);", "ITSdp_get_Originator_Proxy": "HRESULT WINAPI ITSdp_get_Originator_Proxy(ITSdp *This,BSTR *ppOriginator);", "ITSdp_put_Originator_Proxy": "HRESULT WINAPI ITSdp_put_Originator_Proxy(ITSdp *This,BSTR pOriginator);", "ITSdp_get_MediaCollection_Proxy": "HRESULT WINAPI ITSdp_get_MediaCollection_Proxy(ITSdp *This,ITMediaCollection **ppMediaCollection);", "ITSdp_get_TimeCollection_Proxy": "HRESULT WINAPI ITSdp_get_TimeCollection_Proxy(ITSdp *This,ITTimeCollection **ppTimeCollection);", "ITConnection_get_NetworkType_Proxy": "HRESULT WINAPI ITConnection_get_NetworkType_Proxy(ITConnection *This,BSTR *ppNetworkType);", "ITConnection_put_NetworkType_Proxy": "HRESULT WINAPI ITConnection_put_NetworkType_Proxy(ITConnection *This,BSTR pNetworkType);", "ITConnection_get_AddressType_Proxy": "HRESULT WINAPI ITConnection_get_AddressType_Proxy(ITConnection *This,BSTR *ppAddressType);", "ITConnection_put_AddressType_Proxy": "HRESULT WINAPI ITConnection_put_AddressType_Proxy(ITConnection *This,BSTR pAddressType);", "ITConnection_get_StartAddress_Proxy": "HRESULT WINAPI ITConnection_get_StartAddress_Proxy(ITConnection *This,BSTR *ppStartAddress);", "ITConnection_get_NumAddresses_Proxy": "HRESULT WINAPI ITConnection_get_NumAddresses_Proxy(ITConnection *This,LONG *pNumAddresses);", "ITConnection_get_Ttl_Proxy": "HRESULT WINAPI ITConnection_get_Ttl_Proxy(ITConnection *This,unsigned char *pTtl);", "ITConnection_get_BandwidthModifier_Proxy": "HRESULT WINAPI ITConnection_get_BandwidthModifier_Proxy(ITConnection *This,BSTR *ppModifier);", "ITConnection_get_Bandwidth_Proxy": "HRESULT WINAPI ITConnection_get_Bandwidth_Proxy(ITConnection *This,DOUBLE *pBandwidth);", "ITConnection_SetAddressInfo_Proxy": "HRESULT WINAPI ITConnection_SetAddressInfo_Proxy(ITConnection *This,BSTR pStartAddress,LONG NumAddresses,unsigned char Ttl);", "ITConnection_SetBandwidthInfo_Proxy": "HRESULT WINAPI ITConnection_SetBandwidthInfo_Proxy(ITConnection *This,BSTR pModifier,DOUBLE Bandwidth);", "ITConnection_SetEncryptionKey_Proxy": "HRESULT WINAPI ITConnection_SetEncryptionKey_Proxy(ITConnection *This,BSTR pKeyType,BSTR *ppKeyData);", "ITConnection_GetEncryptionKey_Proxy": "HRESULT WINAPI ITConnection_GetEncryptionKey_Proxy(ITConnection *This,BSTR *ppKeyType,VARIANT_BOOL *pfValidKeyData,BSTR *ppKeyData);", "ITAttributeList_get_Count_Proxy": "HRESULT WINAPI ITAttributeList_get_Count_Proxy(ITAttributeList *This,LONG *pVal);", "ITAttributeList_get_Item_Proxy": "HRESULT WINAPI ITAttributeList_get_Item_Proxy(ITAttributeList *This,LONG Index,BSTR *pVal);", "ITAttributeList_Add_Proxy": "HRESULT WINAPI ITAttributeList_Add_Proxy(ITAttributeList *This,LONG Index,BSTR pAttribute);", "ITAttributeList_Delete_Proxy": "HRESULT WINAPI ITAttributeList_Delete_Proxy(ITAttributeList *This,LONG Index);", "ITAttributeList_get_AttributeList_Proxy": "HRESULT WINAPI ITAttributeList_get_AttributeList_Proxy(ITAttributeList *This,VARIANT *pVal);", "ITAttributeList_put_AttributeList_Proxy": "HRESULT WINAPI ITAttributeList_put_AttributeList_Proxy(ITAttributeList *This,VARIANT newVal);", "ISynchronizeRow_Synchronize_Proxy": "HRESULT WINAPI ISynchronizeRow_Synchronize_Proxy(ISynchronizeRow *This,MSDAIPP_SYNC_FLAGS dwFlags);", "wglUseFontBitmaps": "BOOL WINAPI wglUseFontBitmaps (HDC hDC, DWORD first, DWORD count, DWORD listBase);", "wglUseFontOutlines": "BOOL WINAPI wglUseFontOutlines (HDC hDC, DWORD first, DWORD count, DWORD listBase, FLOAT deviation, FLOAT extrusion, int format, LPGLYPHMETRICSFLOAT lpgmf);", "wglCreateBufferRegionARB": "HANDLE WINAPI wglCreateBufferRegionARB (HDC hDC, int iLayerPlane, UINT uType);", "wglDeleteBufferRegionARB": "VOID WINAPI wglDeleteBufferRegionARB (HANDLE hRegion);", "wglSaveBufferRegionARB": "BOOL WINAPI wglSaveBufferRegionARB (HANDLE hRegion, int x, int y, int width, int height);", "wglRestoreBufferRegionARB": "BOOL WINAPI wglRestoreBufferRegionARB (HANDLE hRegion, int x, int y, int width, int height, int xSrc, int ySrc);", "wglCreateContextAttribsARB": "HGLRC WINAPI wglCreateContextAttribsARB (HDC hDC, HGLRC hShareContext, const int *attribList);", "wglGetExtensionsStringARB": "const char *WINAPI wglGetExtensionsStringARB (HDC hdc);", "wglMakeContextCurrentARB": "BOOL WINAPI wglMakeContextCurrentARB (HDC hDrawDC, HDC hReadDC, HGLRC hglrc);", "wglGetCurrentReadDCARB": "HDC WINAPI wglGetCurrentReadDCARB (void);", "wglCreatePbufferARB": "HPBUFFERARB WINAPI wglCreatePbufferARB (HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList);", "wglGetPbufferDCARB": "HDC WINAPI wglGetPbufferDCARB (HPBUFFERARB hPbuffer);", "wglReleasePbufferDCARB": "int WINAPI wglReleasePbufferDCARB (HPBUFFERARB hPbuffer, HDC hDC);", "wglDestroyPbufferARB": "BOOL WINAPI wglDestroyPbufferARB (HPBUFFERARB hPbuffer);", "wglQueryPbufferARB": "BOOL WINAPI wglQueryPbufferARB (HPBUFFERARB hPbuffer, int iAttribute, int *piValue);", "wglGetPixelFormatAttribivARB": "BOOL WINAPI wglGetPixelFormatAttribivARB (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, int *piValues);", "wglGetPixelFormatAttribfvARB": "BOOL WINAPI wglGetPixelFormatAttribfvARB (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, FLOAT *pfValues);", "wglChoosePixelFormatARB": "BOOL WINAPI wglChoosePixelFormatARB (HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats);", "wglBindTexImageARB": "BOOL WINAPI wglBindTexImageARB (HPBUFFERARB hPbuffer, int iBuffer);", "wglReleaseTexImageARB": "BOOL WINAPI wglReleaseTexImageARB (HPBUFFERARB hPbuffer, int iBuffer);", "wglSetPbufferAttribARB": "BOOL WINAPI wglSetPbufferAttribARB (HPBUFFERARB hPbuffer, const int *piAttribList);", "wglSetStereoEmitterState3DL": "BOOL WINAPI wglSetStereoEmitterState3DL (HDC hDC, UINT uState);", "wglGetGPUIDsAMD": "UINT WINAPI wglGetGPUIDsAMD (UINT maxCount, UINT *ids);", "wglGetGPUInfoAMD": "INT WINAPI wglGetGPUInfoAMD (UINT id, INT property, GLenum dataType, UINT size, void *data);", "wglGetContextGPUIDAMD": "UINT WINAPI wglGetContextGPUIDAMD (HGLRC hglrc);", "wglCreateAssociatedContextAMD": "HGLRC WINAPI wglCreateAssociatedContextAMD (UINT id);", "wglCreateAssociatedContextAttribsAMD": "HGLRC WINAPI wglCreateAssociatedContextAttribsAMD (UINT id, HGLRC hShareContext, const int *attribList);", "wglDeleteAssociatedContextAMD": "BOOL WINAPI wglDeleteAssociatedContextAMD (HGLRC hglrc);", "wglMakeAssociatedContextCurrentAMD": "BOOL WINAPI wglMakeAssociatedContextCurrentAMD (HGLRC hglrc);", "wglGetCurrentAssociatedContextAMD": "HGLRC WINAPI wglGetCurrentAssociatedContextAMD (void);", "wglBlitContextFramebufferAMD": "VOID WINAPI wglBlitContextFramebufferAMD (HGLRC dstCtx, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);", "wglCreateDisplayColorTableEXT": "GLboolean WINAPI wglCreateDisplayColorTableEXT (GLushort id);", "wglLoadDisplayColorTableEXT": "GLboolean WINAPI wglLoadDisplayColorTableEXT (const GLushort *table, GLuint length);", "wglBindDisplayColorTableEXT": "GLboolean WINAPI wglBindDisplayColorTableEXT (GLushort id);", "wglDestroyDisplayColorTableEXT": "VOID WINAPI wglDestroyDisplayColorTableEXT (GLushort id);", "wglGetExtensionsStringEXT": "const char *WINAPI wglGetExtensionsStringEXT (void);", "wglMakeContextCurrentEXT": "BOOL WINAPI wglMakeContextCurrentEXT (HDC hDrawDC, HDC hReadDC, HGLRC hglrc);", "wglGetCurrentReadDCEXT": "HDC WINAPI wglGetCurrentReadDCEXT (void);", "wglCreatePbufferEXT": "HPBUFFEREXT WINAPI wglCreatePbufferEXT (HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList);", "wglGetPbufferDCEXT": "HDC WINAPI wglGetPbufferDCEXT (HPBUFFEREXT hPbuffer);", "wglReleasePbufferDCEXT": "int WINAPI wglReleasePbufferDCEXT (HPBUFFEREXT hPbuffer, HDC hDC);", "wglDestroyPbufferEXT": "BOOL WINAPI wglDestroyPbufferEXT (HPBUFFEREXT hPbuffer);", "wglQueryPbufferEXT": "BOOL WINAPI wglQueryPbufferEXT (HPBUFFEREXT hPbuffer, int iAttribute, int *piValue);", "wglGetPixelFormatAttribivEXT": "BOOL WINAPI wglGetPixelFormatAttribivEXT (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *piAttributes, int *piValues);", "wglGetPixelFormatAttribfvEXT": "BOOL WINAPI wglGetPixelFormatAttribfvEXT (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *piAttributes, FLOAT *pfValues);", "wglChoosePixelFormatEXT": "BOOL WINAPI wglChoosePixelFormatEXT (HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats);", "wglSwapIntervalEXT": "BOOL WINAPI wglSwapIntervalEXT (int interval);", "wglGetSwapIntervalEXT": "int WINAPI wglGetSwapIntervalEXT (void);", "wglGetDigitalVideoParametersI3D": "BOOL WINAPI wglGetDigitalVideoParametersI3D (HDC hDC, int iAttribute, int *piValue);", "wglSetDigitalVideoParametersI3D": "BOOL WINAPI wglSetDigitalVideoParametersI3D (HDC hDC, int iAttribute, const int *piValue);", "wglGetGammaTableParametersI3D": "BOOL WINAPI wglGetGammaTableParametersI3D (HDC hDC, int iAttribute, int *piValue);", "wglSetGammaTableParametersI3D": "BOOL WINAPI wglSetGammaTableParametersI3D (HDC hDC, int iAttribute, const int *piValue);", "wglGetGammaTableI3D": "BOOL WINAPI wglGetGammaTableI3D (HDC hDC, int iEntries, USHORT *puRed, USHORT *puGreen, USHORT *puBlue);", "wglSetGammaTableI3D": "BOOL WINAPI wglSetGammaTableI3D (HDC hDC, int iEntries, const USHORT *puRed, const USHORT *puGreen, const USHORT *puBlue);", "wglEnableGenlockI3D": "BOOL WINAPI wglEnableGenlockI3D (HDC hDC);", "wglDisableGenlockI3D": "BOOL WINAPI wglDisableGenlockI3D (HDC hDC);", "wglIsEnabledGenlockI3D": "BOOL WINAPI wglIsEnabledGenlockI3D (HDC hDC, BOOL *pFlag);", "wglGenlockSourceI3D": "BOOL WINAPI wglGenlockSourceI3D (HDC hDC, UINT uSource);", "wglGetGenlockSourceI3D": "BOOL WINAPI wglGetGenlockSourceI3D (HDC hDC, UINT *uSource);", "wglGenlockSourceEdgeI3D": "BOOL WINAPI wglGenlockSourceEdgeI3D (HDC hDC, UINT uEdge);", "wglGetGenlockSourceEdgeI3D": "BOOL WINAPI wglGetGenlockSourceEdgeI3D (HDC hDC, UINT *uEdge);", "wglGenlockSampleRateI3D": "BOOL WINAPI wglGenlockSampleRateI3D (HDC hDC, UINT uRate);", "wglGetGenlockSampleRateI3D": "BOOL WINAPI wglGetGenlockSampleRateI3D (HDC hDC, UINT *uRate);", "wglGenlockSourceDelayI3D": "BOOL WINAPI wglGenlockSourceDelayI3D (HDC hDC, UINT uDelay);", "wglGetGenlockSourceDelayI3D": "BOOL WINAPI wglGetGenlockSourceDelayI3D (HDC hDC, UINT *uDelay);", "wglQueryGenlockMaxSourceDelayI3D": "BOOL WINAPI wglQueryGenlockMaxSourceDelayI3D (HDC hDC, UINT *uMaxLineDelay, UINT *uMaxPixelDelay);", "wglCreateImageBufferI3D": "LPVOID WINAPI wglCreateImageBufferI3D (HDC hDC, DWORD dwSize, UINT uFlags);", "wglDestroyImageBufferI3D": "BOOL WINAPI wglDestroyImageBufferI3D (HDC hDC, LPVOID pAddress);", "wglAssociateImageBufferEventsI3D": "BOOL WINAPI wglAssociateImageBufferEventsI3D (HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);", "wglReleaseImageBufferEventsI3D": "BOOL WINAPI wglReleaseImageBufferEventsI3D (HDC hDC, const LPVOID *pAddress, UINT count);", "wglEnableFrameLockI3D": "BOOL WINAPI wglEnableFrameLockI3D (void);", "wglDisableFrameLockI3D": "BOOL WINAPI wglDisableFrameLockI3D (void);", "wglIsEnabledFrameLockI3D": "BOOL WINAPI wglIsEnabledFrameLockI3D (BOOL *pFlag);", "wglQueryFrameLockMasterI3D": "BOOL WINAPI wglQueryFrameLockMasterI3D (BOOL *pFlag);", "wglGetFrameUsageI3D": "BOOL WINAPI wglGetFrameUsageI3D (float *pUsage);", "wglBeginFrameTrackingI3D": "BOOL WINAPI wglBeginFrameTrackingI3D (void);", "wglEndFrameTrackingI3D": "BOOL WINAPI wglEndFrameTrackingI3D (void);", "wglQueryFrameTrackingI3D": "BOOL WINAPI wglQueryFrameTrackingI3D (DWORD *pFrameCount, DWORD *pMissedFrames, float *pLastMissedUsage);", "wglDXSetResourceShareHandleNV": "BOOL WINAPI wglDXSetResourceShareHandleNV (void *dxObject, HANDLE shareHandle);", "wglDXOpenDeviceNV": "HANDLE WINAPI wglDXOpenDeviceNV (void *dxDevice);", "wglDXCloseDeviceNV": "BOOL WINAPI wglDXCloseDeviceNV (HANDLE hDevice);", "wglDXRegisterObjectNV": "HANDLE WINAPI wglDXRegisterObjectNV (HANDLE hDevice, void *dxObject, GLuint name, GLenum type, GLenum access);", "wglDXUnregisterObjectNV": "BOOL WINAPI wglDXUnregisterObjectNV (HANDLE hDevice, HANDLE hObject);", "wglDXObjectAccessNV": "BOOL WINAPI wglDXObjectAccessNV (HANDLE hObject, GLenum access);", "wglDXLockObjectsNV": "BOOL WINAPI wglDXLockObjectsNV (HANDLE hDevice, GLint count, HANDLE *hObjects);", "wglDXUnlockObjectsNV": "BOOL WINAPI wglDXUnlockObjectsNV (HANDLE hDevice, GLint count, HANDLE *hObjects);", "wglCopyImageSubDataNV": "BOOL WINAPI wglCopyImageSubDataNV (HGLRC hSrcRC, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, HGLRC hDstRC, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);", "wglDelayBeforeSwapNV": "BOOL WINAPI wglDelayBeforeSwapNV (HDC hDC, GLfloat seconds);", "wglEnumGpusNV": "BOOL WINAPI wglEnumGpusNV (UINT iGpuIndex, HGPUNV *phGpu);", "wglEnumGpuDevicesNV": "BOOL WINAPI wglEnumGpuDevicesNV (HGPUNV hGpu, UINT iDeviceIndex, PGPU_DEVICE lpGpuDevice);", "wglCreateAffinityDCNV": "HDC WINAPI wglCreateAffinityDCNV (const HGPUNV *phGpuList);", "wglEnumGpusFromAffinityDCNV": "BOOL WINAPI wglEnumGpusFromAffinityDCNV (HDC hAffinityDC, UINT iGpuIndex, HGPUNV *hGpu);", "wglDeleteDCNV": "BOOL WINAPI wglDeleteDCNV (HDC hdc);", "wglEnumerateVideoDevicesNV": "int WINAPI wglEnumerateVideoDevicesNV (HDC hDc, HVIDEOOUTPUTDEVICENV *phDeviceList);", "wglBindVideoDeviceNV": "BOOL WINAPI wglBindVideoDeviceNV (HDC hDc, unsigned int uVideoSlot, HVIDEOOUTPUTDEVICENV hVideoDevice, const int *piAttribList);", "wglQueryCurrentContextNV": "BOOL WINAPI wglQueryCurrentContextNV (int iAttribute, int *piValue);", "wglJoinSwapGroupNV": "BOOL WINAPI wglJoinSwapGroupNV (HDC hDC, GLuint group);", "wglBindSwapBarrierNV": "BOOL WINAPI wglBindSwapBarrierNV (GLuint group, GLuint barrier);", "wglQuerySwapGroupNV": "BOOL WINAPI wglQuerySwapGroupNV (HDC hDC, GLuint *group, GLuint *barrier);", "wglQueryMaxSwapGroupsNV": "BOOL WINAPI wglQueryMaxSwapGroupsNV (HDC hDC, GLuint *maxGroups, GLuint *maxBarriers);", "wglQueryFrameCountNV": "BOOL WINAPI wglQueryFrameCountNV (HDC hDC, GLuint *count);", "wglResetFrameCountNV": "BOOL WINAPI wglResetFrameCountNV (HDC hDC);", "wglAllocateMemoryNV": "void *WINAPI wglAllocateMemoryNV (GLsizei size, GLfloat readfreq, GLfloat writefreq, GLfloat priority);", "wglFreeMemoryNV": "void WINAPI wglFreeMemoryNV (void *pointer);", "wglBindVideoCaptureDeviceNV": "BOOL WINAPI wglBindVideoCaptureDeviceNV (UINT uVideoSlot, HVIDEOINPUTDEVICENV hDevice);", "wglEnumerateVideoCaptureDevicesNV": "UINT WINAPI wglEnumerateVideoCaptureDevicesNV (HDC hDc, HVIDEOINPUTDEVICENV *phDeviceList);", "wglLockVideoCaptureDeviceNV": "BOOL WINAPI wglLockVideoCaptureDeviceNV (HDC hDc, HVIDEOINPUTDEVICENV hDevice);", "wglQueryVideoCaptureDeviceNV": "BOOL WINAPI wglQueryVideoCaptureDeviceNV (HDC hDc, HVIDEOINPUTDEVICENV hDevice, int iAttribute, int *piValue);", "wglReleaseVideoCaptureDeviceNV": "BOOL WINAPI wglReleaseVideoCaptureDeviceNV (HDC hDc, HVIDEOINPUTDEVICENV hDevice);", "wglGetVideoDeviceNV": "BOOL WINAPI wglGetVideoDeviceNV (HDC hDC, int numDevices, HPVIDEODEV *hVideoDevice);", "wglReleaseVideoDeviceNV": "BOOL WINAPI wglReleaseVideoDeviceNV (HPVIDEODEV hVideoDevice);", "wglBindVideoImageNV": "BOOL WINAPI wglBindVideoImageNV (HPVIDEODEV hVideoDevice, HPBUFFERARB hPbuffer, int iVideoBuffer);", "wglReleaseVideoImageNV": "BOOL WINAPI wglReleaseVideoImageNV (HPBUFFERARB hPbuffer, int iVideoBuffer);", "wglSendPbufferToVideoNV": "BOOL WINAPI wglSendPbufferToVideoNV (HPBUFFERARB hPbuffer, int iBufferType, unsigned long *pulCounterPbuffer, BOOL bBlock);", "wglGetVideoInfoNV": "BOOL WINAPI wglGetVideoInfoNV (HPVIDEODEV hpVideoDevice, unsigned long *pulCounterOutputPbuffer, unsigned long *pulCounterOutputVideo);", "wglGetSyncValuesOML": "BOOL WINAPI wglGetSyncValuesOML (HDC hdc, INT64 *ust, INT64 *msc, INT64 *sbc);", "wglGetMscRateOML": "BOOL WINAPI wglGetMscRateOML (HDC hdc, INT32 *numerator, INT32 *denominator);", "wglSwapBuffersMscOML": "INT64 WINAPI wglSwapBuffersMscOML (HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder);", "wglSwapLayerBuffersMscOML": "INT64 WINAPI wglSwapLayerBuffersMscOML (HDC hdc, INT fuPlanes, INT64 target_msc, INT64 divisor, INT64 remainder);", "wglWaitForMscOML": "BOOL WINAPI wglWaitForMscOML (HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder, INT64 *ust, INT64 *msc, INT64 *sbc);", "wglWaitForSbcOML": "BOOL WINAPI wglWaitForSbcOML (HDC hdc, INT64 target_sbc, INT64 *ust, INT64 *msc, INT64 *sbc);", "ISecurityIdentityColl_get_Count_Proxy": "HRESULT WINAPI ISecurityIdentityColl_get_Count_Proxy(ISecurityIdentityColl *This,__LONG32 *plCount);", "ISecurityIdentityColl_get_Item_Proxy": "HRESULT WINAPI ISecurityIdentityColl_get_Item_Proxy(ISecurityIdentityColl *This,BSTR name,VARIANT *pItem);", "ISecurityIdentityColl_get__NewEnum_Proxy": "HRESULT WINAPI ISecurityIdentityColl_get__NewEnum_Proxy(ISecurityIdentityColl *This,IUnknown **ppEnum);", "ISecurityCallersColl_get_Count_Proxy": "HRESULT WINAPI ISecurityCallersColl_get_Count_Proxy(ISecurityCallersColl *This,__LONG32 *plCount);", "ISecurityCallersColl_get_Item_Proxy": "HRESULT WINAPI ISecurityCallersColl_get_Item_Proxy(ISecurityCallersColl *This,__LONG32 lIndex,ISecurityIdentityColl **pObj);", "ISecurityCallersColl_get__NewEnum_Proxy": "HRESULT WINAPI ISecurityCallersColl_get__NewEnum_Proxy(ISecurityCallersColl *This,IUnknown **ppEnum);", "ISecurityCallContext_get_Count_Proxy": "HRESULT WINAPI ISecurityCallContext_get_Count_Proxy(ISecurityCallContext *This,__LONG32 *plCount);", "ISecurityCallContext_get_Item_Proxy": "HRESULT WINAPI ISecurityCallContext_get_Item_Proxy(ISecurityCallContext *This,BSTR name,VARIANT *pItem);", "ISecurityCallContext_get__NewEnum_Proxy": "HRESULT WINAPI ISecurityCallContext_get__NewEnum_Proxy(ISecurityCallContext *This,IUnknown **ppEnum);", "ISecurityCallContext_IsCallerInRole_Proxy": "HRESULT WINAPI ISecurityCallContext_IsCallerInRole_Proxy(ISecurityCallContext *This,BSTR bstrRole,VARIANT_BOOL *pfInRole);", "ISecurityCallContext_IsSecurityEnabled_Proxy": "HRESULT WINAPI ISecurityCallContext_IsSecurityEnabled_Proxy(ISecurityCallContext *This,VARIANT_BOOL *pfIsEnabled);", "ISecurityCallContext_IsUserInRole_Proxy": "HRESULT WINAPI ISecurityCallContext_IsUserInRole_Proxy(ISecurityCallContext *This,VARIANT *pUser,BSTR bstrRole,VARIANT_BOOL *pfInRole);", "IGetSecurityCallContext_GetSecurityCallContext_Proxy": "HRESULT WINAPI IGetSecurityCallContext_GetSecurityCallContext_Proxy(IGetSecurityCallContext *This,ISecurityCallContext **ppObject);", "SecurityProperty_GetDirectCallerName_Proxy": "HRESULT WINAPI SecurityProperty_GetDirectCallerName_Proxy(SecurityProperty *This,BSTR *bstrUserName);", "SecurityProperty_GetDirectCreatorName_Proxy": "HRESULT WINAPI SecurityProperty_GetDirectCreatorName_Proxy(SecurityProperty *This,BSTR *bstrUserName);", "SecurityProperty_GetOriginalCallerName_Proxy": "HRESULT WINAPI SecurityProperty_GetOriginalCallerName_Proxy(SecurityProperty *This,BSTR *bstrUserName);", "SecurityProperty_GetOriginalCreatorName_Proxy": "HRESULT WINAPI SecurityProperty_GetOriginalCreatorName_Proxy(SecurityProperty *This,BSTR *bstrUserName);", "ContextInfo_IsInTransaction_Proxy": "HRESULT WINAPI ContextInfo_IsInTransaction_Proxy(ContextInfo *This,VARIANT_BOOL *pbIsInTx);", "ContextInfo_GetTransaction_Proxy": "HRESULT WINAPI ContextInfo_GetTransaction_Proxy(ContextInfo *This,IUnknown **ppTx);", "ContextInfo_GetTransactionId_Proxy": "HRESULT WINAPI ContextInfo_GetTransactionId_Proxy(ContextInfo *This,BSTR *pbstrTxId);", "ContextInfo_GetActivityId_Proxy": "HRESULT WINAPI ContextInfo_GetActivityId_Proxy(ContextInfo *This,BSTR *pbstrActivityId);", "ContextInfo_GetContextId_Proxy": "HRESULT WINAPI ContextInfo_GetContextId_Proxy(ContextInfo *This,BSTR *pbstrCtxId);", "ContextInfo2_GetPartitionId_Proxy": "HRESULT WINAPI ContextInfo2_GetPartitionId_Proxy(ContextInfo2 *This,BSTR *__MIDL_0011);", "ContextInfo2_GetApplicationId_Proxy": "HRESULT WINAPI ContextInfo2_GetApplicationId_Proxy(ContextInfo2 *This,BSTR *__MIDL_0012);", "ContextInfo2_GetApplicationInstanceId_Proxy": "HRESULT WINAPI ContextInfo2_GetApplicationInstanceId_Proxy(ContextInfo2 *This,BSTR *__MIDL_0013);", "ObjectContext_CreateInstance_Proxy": "HRESULT WINAPI ObjectContext_CreateInstance_Proxy(ObjectContext *This,BSTR bstrProgID,VARIANT *pObject);", "ObjectContext_SetComplete_Proxy": "HRESULT WINAPI ObjectContext_SetComplete_Proxy(ObjectContext *This);", "ObjectContext_SetAbort_Proxy": "HRESULT WINAPI ObjectContext_SetAbort_Proxy(ObjectContext *This);", "ObjectContext_EnableCommit_Proxy": "HRESULT WINAPI ObjectContext_EnableCommit_Proxy(ObjectContext *This);", "ObjectContext_DisableCommit_Proxy": "HRESULT WINAPI ObjectContext_DisableCommit_Proxy(ObjectContext *This);", "ObjectContext_IsInTransaction_Proxy": "HRESULT WINAPI ObjectContext_IsInTransaction_Proxy(ObjectContext *This,VARIANT_BOOL *pbIsInTx);", "ObjectContext_IsSecurityEnabled_Proxy": "HRESULT WINAPI ObjectContext_IsSecurityEnabled_Proxy(ObjectContext *This,VARIANT_BOOL *pbIsEnabled);", "ObjectContext_IsCallerInRole_Proxy": "HRESULT WINAPI ObjectContext_IsCallerInRole_Proxy(ObjectContext *This,BSTR bstrRole,VARIANT_BOOL *pbInRole);", "ObjectContext_get_Count_Proxy": "HRESULT WINAPI ObjectContext_get_Count_Proxy(ObjectContext *This,__LONG32 *plCount);", "ObjectContext_get_Item_Proxy": "HRESULT WINAPI ObjectContext_get_Item_Proxy(ObjectContext *This,BSTR name,VARIANT *pItem);", "ObjectContext_get__NewEnum_Proxy": "HRESULT WINAPI ObjectContext_get__NewEnum_Proxy(ObjectContext *This,IUnknown **ppEnum);", "ObjectContext_get_Security_Proxy": "HRESULT WINAPI ObjectContext_get_Security_Proxy(ObjectContext *This,SecurityProperty **ppSecurityProperty);", "ObjectContext_get_ContextInfo_Proxy": "HRESULT WINAPI ObjectContext_get_ContextInfo_Proxy(ObjectContext *This,ContextInfo **ppContextInfo);", "ITransactionContextEx_CreateInstance_Proxy": "HRESULT WINAPI ITransactionContextEx_CreateInstance_Proxy(ITransactionContextEx *This,REFCLSID rclsid,REFIID riid,void **pObject);", "ITransactionContextEx_Commit_Proxy": "HRESULT WINAPI ITransactionContextEx_Commit_Proxy(ITransactionContextEx *This);", "ITransactionContextEx_Abort_Proxy": "HRESULT WINAPI ITransactionContextEx_Abort_Proxy(ITransactionContextEx *This);", "ITransactionContext_CreateInstance_Proxy": "HRESULT WINAPI ITransactionContext_CreateInstance_Proxy(ITransactionContext *This,BSTR pszProgId,VARIANT *pObject);", "ITransactionContext_Commit_Proxy": "HRESULT WINAPI ITransactionContext_Commit_Proxy(ITransactionContext *This);", "ITransactionContext_Abort_Proxy": "HRESULT WINAPI ITransactionContext_Abort_Proxy(ITransactionContext *This);", "ICreateWithTransactionEx_CreateInstance_Proxy": "HRESULT WINAPI ICreateWithTransactionEx_CreateInstance_Proxy(ICreateWithTransactionEx *This,ITransaction *pTransaction,REFCLSID rclsid,REFIID riid,void **pObject);", "ICreateWithTipTransactionEx_CreateInstance_Proxy": "HRESULT WINAPI ICreateWithTipTransactionEx_CreateInstance_Proxy(ICreateWithTipTransactionEx *This,BSTR bstrTipUrl,REFCLSID rclsid,REFIID riid,void **pObject);", "IComUserEvent_OnUserEvent_Proxy": "HRESULT WINAPI IComUserEvent_OnUserEvent_Proxy(IComUserEvent *This,COMSVCSEVENTINFO *pInfo,VARIANT *pvarEvent);", "IComThreadEvents_OnThreadStart_Proxy": "HRESULT WINAPI IComThreadEvents_OnThreadStart_Proxy(IComThreadEvents *This,COMSVCSEVENTINFO *pInfo,ULONG64 ThreadID,DWORD dwThread,DWORD dwTheadCnt);", "IComThreadEvents_OnThreadTerminate_Proxy": "HRESULT WINAPI IComThreadEvents_OnThreadTerminate_Proxy(IComThreadEvents *This,COMSVCSEVENTINFO *pInfo,ULONG64 ThreadID,DWORD dwThread,DWORD dwTheadCnt);", "IComThreadEvents_OnThreadBindToApartment_Proxy": "HRESULT WINAPI IComThreadEvents_OnThreadBindToApartment_Proxy(IComThreadEvents *This,COMSVCSEVENTINFO *pInfo,ULONG64 ThreadID,ULONG64 AptID,DWORD dwActCnt,DWORD dwLowCnt);", "IComThreadEvents_OnThreadUnBind_Proxy": "HRESULT WINAPI IComThreadEvents_OnThreadUnBind_Proxy(IComThreadEvents *This,COMSVCSEVENTINFO *pInfo,ULONG64 ThreadID,ULONG64 AptID,DWORD dwActCnt);", "IComThreadEvents_OnThreadWorkEnque_Proxy": "HRESULT WINAPI IComThreadEvents_OnThreadWorkEnque_Proxy(IComThreadEvents *This,COMSVCSEVENTINFO *pInfo,ULONG64 ThreadID,ULONG64 MsgWorkID,DWORD QueueLen);", "IComThreadEvents_OnThreadWorkPrivate_Proxy": "HRESULT WINAPI IComThreadEvents_OnThreadWorkPrivate_Proxy(IComThreadEvents *This,COMSVCSEVENTINFO *pInfo,ULONG64 ThreadID,ULONG64 MsgWorkID);", "IComThreadEvents_OnThreadWorkPublic_Proxy": "HRESULT WINAPI IComThreadEvents_OnThreadWorkPublic_Proxy(IComThreadEvents *This,COMSVCSEVENTINFO *pInfo,ULONG64 ThreadID,ULONG64 MsgWorkID,DWORD QueueLen);", "IComThreadEvents_OnThreadWorkRedirect_Proxy": "HRESULT WINAPI IComThreadEvents_OnThreadWorkRedirect_Proxy(IComThreadEvents *This,COMSVCSEVENTINFO *pInfo,ULONG64 ThreadID,ULONG64 MsgWorkID,DWORD QueueLen,ULONG64 ThreadNum);", "IComThreadEvents_OnThreadWorkReject_Proxy": "HRESULT WINAPI IComThreadEvents_OnThreadWorkReject_Proxy(IComThreadEvents *This,COMSVCSEVENTINFO *pInfo,ULONG64 ThreadID,ULONG64 MsgWorkID,DWORD QueueLen);", "IComThreadEvents_OnThreadAssignApartment_Proxy": "HRESULT WINAPI IComThreadEvents_OnThreadAssignApartment_Proxy(IComThreadEvents *This,COMSVCSEVENTINFO *pInfo,REFGUID guidActivity,ULONG64 AptID);", "IComThreadEvents_OnThreadUnassignApartment_Proxy": "HRESULT WINAPI IComThreadEvents_OnThreadUnassignApartment_Proxy(IComThreadEvents *This,COMSVCSEVENTINFO *pInfo,ULONG64 AptID);", "IComAppEvents_OnAppActivation_Proxy": "HRESULT WINAPI IComAppEvents_OnAppActivation_Proxy(IComAppEvents *This,COMSVCSEVENTINFO *pInfo,GUID guidApp);", "IComAppEvents_OnAppShutdown_Proxy": "HRESULT WINAPI IComAppEvents_OnAppShutdown_Proxy(IComAppEvents *This,COMSVCSEVENTINFO *pInfo,GUID guidApp);", "IComAppEvents_OnAppForceShutdown_Proxy": "HRESULT WINAPI IComAppEvents_OnAppForceShutdown_Proxy(IComAppEvents *This,COMSVCSEVENTINFO *pInfo,GUID guidApp);", "IComInstanceEvents_OnObjectCreate_Proxy": "HRESULT WINAPI IComInstanceEvents_OnObjectCreate_Proxy(IComInstanceEvents *This,COMSVCSEVENTINFO *pInfo,REFGUID guidActivity,REFCLSID clsid,REFGUID tsid,ULONG64 CtxtID,ULONG64 ObjectID);", "IComInstanceEvents_OnObjectDestroy_Proxy": "HRESULT WINAPI IComInstanceEvents_OnObjectDestroy_Proxy(IComInstanceEvents *This,COMSVCSEVENTINFO *pInfo,ULONG64 CtxtID);", "IComTransactionEvents_OnTransactionStart_Proxy": "HRESULT WINAPI IComTransactionEvents_OnTransactionStart_Proxy(IComTransactionEvents *This,COMSVCSEVENTINFO *pInfo,REFGUID guidTx,REFGUID tsid,WINBOOL fRoot);", "IComTransactionEvents_OnTransactionPrepare_Proxy": "HRESULT WINAPI IComTransactionEvents_OnTransactionPrepare_Proxy(IComTransactionEvents *This,COMSVCSEVENTINFO *pInfo,REFGUID guidTx,WINBOOL fVoteYes);", "IComTransactionEvents_OnTransactionAbort_Proxy": "HRESULT WINAPI IComTransactionEvents_OnTransactionAbort_Proxy(IComTransactionEvents *This,COMSVCSEVENTINFO *pInfo,REFGUID guidTx);", "IComTransactionEvents_OnTransactionCommit_Proxy": "HRESULT WINAPI IComTransactionEvents_OnTransactionCommit_Proxy(IComTransactionEvents *This,COMSVCSEVENTINFO *pInfo,REFGUID guidTx);", "IComMethodEvents_OnMethodCall_Proxy": "HRESULT WINAPI IComMethodEvents_OnMethodCall_Proxy(IComMethodEvents *This,COMSVCSEVENTINFO *pInfo,ULONG64 oid,REFCLSID guidCid,REFIID guidRid,ULONG iMeth);", "IComMethodEvents_OnMethodReturn_Proxy": "HRESULT WINAPI IComMethodEvents_OnMethodReturn_Proxy(IComMethodEvents *This,COMSVCSEVENTINFO *pInfo,ULONG64 oid,REFCLSID guidCid,REFIID guidRid,ULONG iMeth,HRESULT hresult);", "IComMethodEvents_OnMethodException_Proxy": "HRESULT WINAPI IComMethodEvents_OnMethodException_Proxy(IComMethodEvents *This,COMSVCSEVENTINFO *pInfo,ULONG64 oid,REFCLSID guidCid,REFIID guidRid,ULONG iMeth);", "IComObjectEvents_OnObjectActivate_Proxy": "HRESULT WINAPI IComObjectEvents_OnObjectActivate_Proxy(IComObjectEvents *This,COMSVCSEVENTINFO *pInfo,ULONG64 CtxtID,ULONG64 ObjectID);", "IComObjectEvents_OnObjectDeactivate_Proxy": "HRESULT WINAPI IComObjectEvents_OnObjectDeactivate_Proxy(IComObjectEvents *This,COMSVCSEVENTINFO *pInfo,ULONG64 CtxtID,ULONG64 ObjectID);", "IComObjectEvents_OnDisableCommit_Proxy": "HRESULT WINAPI IComObjectEvents_OnDisableCommit_Proxy(IComObjectEvents *This,COMSVCSEVENTINFO *pInfo,ULONG64 CtxtID);", "IComObjectEvents_OnEnableCommit_Proxy": "HRESULT WINAPI IComObjectEvents_OnEnableCommit_Proxy(IComObjectEvents *This,COMSVCSEVENTINFO *pInfo,ULONG64 CtxtID);", "IComObjectEvents_OnSetComplete_Proxy": "HRESULT WINAPI IComObjectEvents_OnSetComplete_Proxy(IComObjectEvents *This,COMSVCSEVENTINFO *pInfo,ULONG64 CtxtID);", "IComObjectEvents_OnSetAbort_Proxy": "HRESULT WINAPI IComObjectEvents_OnSetAbort_Proxy(IComObjectEvents *This,COMSVCSEVENTINFO *pInfo,ULONG64 CtxtID);", "IComResourceEvents_OnResourceCreate_Proxy": "HRESULT WINAPI IComResourceEvents_OnResourceCreate_Proxy(IComResourceEvents *This,COMSVCSEVENTINFO *pInfo,ULONG64 ObjectID,LPCOLESTR pszType,ULONG64 resId,WINBOOL enlisted);", "IComResourceEvents_OnResourceAllocate_Proxy": "HRESULT WINAPI IComResourceEvents_OnResourceAllocate_Proxy(IComResourceEvents *This,COMSVCSEVENTINFO *pInfo,ULONG64 ObjectID,LPCOLESTR pszType,ULONG64 resId,WINBOOL enlisted,DWORD NumRated,DWORD Rating);", "IComResourceEvents_OnResourceRecycle_Proxy": "HRESULT WINAPI IComResourceEvents_OnResourceRecycle_Proxy(IComResourceEvents *This,COMSVCSEVENTINFO *pInfo,ULONG64 ObjectID,LPCOLESTR pszType,ULONG64 resId);", "IComResourceEvents_OnResourceDestroy_Proxy": "HRESULT WINAPI IComResourceEvents_OnResourceDestroy_Proxy(IComResourceEvents *This,COMSVCSEVENTINFO *pInfo,ULONG64 ObjectID,HRESULT hr,LPCOLESTR pszType,ULONG64 resId);", "IComResourceEvents_OnResourceTrack_Proxy": "HRESULT WINAPI IComResourceEvents_OnResourceTrack_Proxy(IComResourceEvents *This,COMSVCSEVENTINFO *pInfo,ULONG64 ObjectID,LPCOLESTR pszType,ULONG64 resId,WINBOOL enlisted);", "IComSecurityEvents_OnAuthenticate_Proxy": "HRESULT WINAPI IComSecurityEvents_OnAuthenticate_Proxy(IComSecurityEvents *This,COMSVCSEVENTINFO *pInfo,REFGUID guidActivity,ULONG64 ObjectID,REFGUID guidIID,ULONG iMeth,ULONG cbByteOrig,BYTE *pSidOriginalUser,ULONG cbByteCur,BYTE *pSidCurrentUser,WINBOOL bCurrentUserInpersonatingInProc);", "IComSecurityEvents_OnAuthenticateFail_Proxy": "HRESULT WINAPI IComSecurityEvents_OnAuthenticateFail_Proxy(IComSecurityEvents *This,COMSVCSEVENTINFO *pInfo,REFGUID guidActivity,ULONG64 ObjectID,REFGUID guidIID,ULONG iMeth,ULONG cbByteOrig,BYTE *pSidOriginalUser,ULONG cbByteCur,BYTE *pSidCurrentUser,WINBOOL bCurrentUserInpersonatingInProc);", "IComObjectPoolEvents_OnObjPoolPutObject_Proxy": "HRESULT WINAPI IComObjectPoolEvents_OnObjPoolPutObject_Proxy(IComObjectPoolEvents *This,COMSVCSEVENTINFO *pInfo,REFGUID guidObject,int nReason,DWORD dwAvailable,ULONG64 oid);", "IComObjectPoolEvents_OnObjPoolGetObject_Proxy": "HRESULT WINAPI IComObjectPoolEvents_OnObjPoolGetObject_Proxy(IComObjectPoolEvents *This,COMSVCSEVENTINFO *pInfo,REFGUID guidActivity,REFGUID guidObject,DWORD dwAvailable,ULONG64 oid);", "IComObjectPoolEvents_OnObjPoolRecycleToTx_Proxy": "HRESULT WINAPI IComObjectPoolEvents_OnObjPoolRecycleToTx_Proxy(IComObjectPoolEvents *This,COMSVCSEVENTINFO *pInfo,REFGUID guidActivity,REFGUID guidObject,REFGUID guidTx,ULONG64 objid);", "IComObjectPoolEvents_OnObjPoolGetFromTx_Proxy": "HRESULT WINAPI IComObjectPoolEvents_OnObjPoolGetFromTx_Proxy(IComObjectPoolEvents *This,COMSVCSEVENTINFO *pInfo,REFGUID guidActivity,REFGUID guidObject,REFGUID guidTx,ULONG64 objid);", "IComObjectPoolEvents2_OnObjPoolCreateObject_Proxy": "HRESULT WINAPI IComObjectPoolEvents2_OnObjPoolCreateObject_Proxy(IComObjectPoolEvents2 *This,COMSVCSEVENTINFO *pInfo,REFGUID guidObject,DWORD dwObjsCreated,ULONG64 oid);", "IComObjectPoolEvents2_OnObjPoolDestroyObject_Proxy": "HRESULT WINAPI IComObjectPoolEvents2_OnObjPoolDestroyObject_Proxy(IComObjectPoolEvents2 *This,COMSVCSEVENTINFO *pInfo,REFGUID guidObject,DWORD dwObjsCreated,ULONG64 oid);", "IComObjectPoolEvents2_OnObjPoolCreateDecision_Proxy": "HRESULT WINAPI IComObjectPoolEvents2_OnObjPoolCreateDecision_Proxy(IComObjectPoolEvents2 *This,COMSVCSEVENTINFO *pInfo,DWORD dwThreadsWaiting,DWORD dwAvail,DWORD dwCreated,DWORD dwMin,DWORD dwMax);", "IComObjectPoolEvents2_OnObjPoolTimeout_Proxy": "HRESULT WINAPI IComObjectPoolEvents2_OnObjPoolTimeout_Proxy(IComObjectPoolEvents2 *This,COMSVCSEVENTINFO *pInfo,REFGUID guidObject,REFGUID guidActivity,DWORD dwTimeout);", "IComObjectPoolEvents2_OnObjPoolCreatePool_Proxy": "HRESULT WINAPI IComObjectPoolEvents2_OnObjPoolCreatePool_Proxy(IComObjectPoolEvents2 *This,COMSVCSEVENTINFO *pInfo,REFGUID guidObject,DWORD dwMin,DWORD dwMax,DWORD dwTimeout);", "IComObjectConstructionEvents_OnObjectConstruct_Proxy": "HRESULT WINAPI IComObjectConstructionEvents_OnObjectConstruct_Proxy(IComObjectConstructionEvents *This,COMSVCSEVENTINFO *pInfo,REFGUID guidObject,LPCOLESTR sConstructString,ULONG64 oid);", "IComActivityEvents_OnActivityCreate_Proxy": "HRESULT WINAPI IComActivityEvents_OnActivityCreate_Proxy(IComActivityEvents *This,COMSVCSEVENTINFO *pInfo,REFGUID guidActivity);", "IComActivityEvents_OnActivityDestroy_Proxy": "HRESULT WINAPI IComActivityEvents_OnActivityDestroy_Proxy(IComActivityEvents *This,COMSVCSEVENTINFO *pInfo,REFGUID guidActivity);", "IComActivityEvents_OnActivityEnter_Proxy": "HRESULT WINAPI IComActivityEvents_OnActivityEnter_Proxy(IComActivityEvents *This,COMSVCSEVENTINFO *pInfo,REFGUID guidCurrent,REFGUID guidEntered,DWORD dwThread);", "IComActivityEvents_OnActivityTimeout_Proxy": "HRESULT WINAPI IComActivityEvents_OnActivityTimeout_Proxy(IComActivityEvents *This,COMSVCSEVENTINFO *pInfo,REFGUID guidCurrent,REFGUID guidEntered,DWORD dwThread,DWORD dwTimeout);", "IComActivityEvents_OnActivityReenter_Proxy": "HRESULT WINAPI IComActivityEvents_OnActivityReenter_Proxy(IComActivityEvents *This,COMSVCSEVENTINFO *pInfo,REFGUID guidCurrent,DWORD dwThread,DWORD dwCallDepth);", "IComActivityEvents_OnActivityLeave_Proxy": "HRESULT WINAPI IComActivityEvents_OnActivityLeave_Proxy(IComActivityEvents *This,COMSVCSEVENTINFO *pInfo,REFGUID guidCurrent,REFGUID guidLeft);", "IComActivityEvents_OnActivityLeaveSame_Proxy": "HRESULT WINAPI IComActivityEvents_OnActivityLeaveSame_Proxy(IComActivityEvents *This,COMSVCSEVENTINFO *pInfo,REFGUID guidCurrent,DWORD dwCallDepth);", "IComIdentityEvents_OnIISRequestInfo_Proxy": "HRESULT WINAPI IComIdentityEvents_OnIISRequestInfo_Proxy(IComIdentityEvents *This,COMSVCSEVENTINFO *pInfo,ULONG64 ObjId,LPCOLESTR pszClientIP,LPCOLESTR pszServerIP,LPCOLESTR pszURL);", "IComQCEvents_OnQCRecord_Proxy": "HRESULT WINAPI IComQCEvents_OnQCRecord_Proxy(IComQCEvents *This,COMSVCSEVENTINFO *pInfo,ULONG64 objid,WCHAR szQueue[60],REFGUID guidMsgId,REFGUID guidWorkFlowId,HRESULT msmqhr);", "IComQCEvents_OnQCQueueOpen_Proxy": "HRESULT WINAPI IComQCEvents_OnQCQueueOpen_Proxy(IComQCEvents *This,COMSVCSEVENTINFO *pInfo,WCHAR szQueue[60],ULONG64 QueueID,HRESULT hr);", "IComQCEvents_OnQCReceive_Proxy": "HRESULT WINAPI IComQCEvents_OnQCReceive_Proxy(IComQCEvents *This,COMSVCSEVENTINFO *pInfo,ULONG64 QueueID,REFGUID guidMsgId,REFGUID guidWorkFlowId,HRESULT hr);", "IComQCEvents_OnQCReceiveFail_Proxy": "HRESULT WINAPI IComQCEvents_OnQCReceiveFail_Proxy(IComQCEvents *This,COMSVCSEVENTINFO *pInfo,ULONG64 QueueID,HRESULT msmqhr);", "IComQCEvents_OnQCMoveToReTryQueue_Proxy": "HRESULT WINAPI IComQCEvents_OnQCMoveToReTryQueue_Proxy(IComQCEvents *This,COMSVCSEVENTINFO *pInfo,REFGUID guidMsgId,REFGUID guidWorkFlowId,ULONG RetryIndex);", "IComQCEvents_OnQCMoveToDeadQueue_Proxy": "HRESULT WINAPI IComQCEvents_OnQCMoveToDeadQueue_Proxy(IComQCEvents *This,COMSVCSEVENTINFO *pInfo,REFGUID guidMsgId,REFGUID guidWorkFlowId);", "IComQCEvents_OnQCPlayback_Proxy": "HRESULT WINAPI IComQCEvents_OnQCPlayback_Proxy(IComQCEvents *This,COMSVCSEVENTINFO *pInfo,ULONG64 objid,REFGUID guidMsgId,REFGUID guidWorkFlowId,HRESULT hr);", "IComExceptionEvents_OnExceptionUser_Proxy": "HRESULT WINAPI IComExceptionEvents_OnExceptionUser_Proxy(IComExceptionEvents *This,COMSVCSEVENTINFO *pInfo,ULONG code,ULONG64 address,LPCOLESTR pszStackTrace);", "ILBEvents_TargetUp_Proxy": "HRESULT WINAPI ILBEvents_TargetUp_Proxy(ILBEvents *This,BSTR bstrServerName,BSTR bstrClsidEng);", "ILBEvents_TargetDown_Proxy": "HRESULT WINAPI ILBEvents_TargetDown_Proxy(ILBEvents *This,BSTR bstrServerName,BSTR bstrClsidEng);", "ILBEvents_EngineDefined_Proxy": "HRESULT WINAPI ILBEvents_EngineDefined_Proxy(ILBEvents *This,BSTR bstrPropName,VARIANT *varPropValue,BSTR bstrClsidEng);", "IComCRMEvents_OnCRMRecoveryStart_Proxy": "HRESULT WINAPI IComCRMEvents_OnCRMRecoveryStart_Proxy(IComCRMEvents *This,COMSVCSEVENTINFO *pInfo,GUID guidApp);", "IComCRMEvents_OnCRMRecoveryDone_Proxy": "HRESULT WINAPI IComCRMEvents_OnCRMRecoveryDone_Proxy(IComCRMEvents *This,COMSVCSEVENTINFO *pInfo,GUID guidApp);", "IComCRMEvents_OnCRMCheckpoint_Proxy": "HRESULT WINAPI IComCRMEvents_OnCRMCheckpoint_Proxy(IComCRMEvents *This,COMSVCSEVENTINFO *pInfo,GUID guidApp);", "IComCRMEvents_OnCRMBegin_Proxy": "HRESULT WINAPI IComCRMEvents_OnCRMBegin_Proxy(IComCRMEvents *This,COMSVCSEVENTINFO *pInfo,GUID guidClerkCLSID,GUID guidActivity,GUID guidTx,WCHAR szProgIdCompensator[64],WCHAR szDescription[64]);", "IComCRMEvents_OnCRMPrepare_Proxy": "HRESULT WINAPI IComCRMEvents_OnCRMPrepare_Proxy(IComCRMEvents *This,COMSVCSEVENTINFO *pInfo,GUID guidClerkCLSID);", "IComCRMEvents_OnCRMCommit_Proxy": "HRESULT WINAPI IComCRMEvents_OnCRMCommit_Proxy(IComCRMEvents *This,COMSVCSEVENTINFO *pInfo,GUID guidClerkCLSID);", "IComCRMEvents_OnCRMAbort_Proxy": "HRESULT WINAPI IComCRMEvents_OnCRMAbort_Proxy(IComCRMEvents *This,COMSVCSEVENTINFO *pInfo,GUID guidClerkCLSID);", "IComCRMEvents_OnCRMIndoubt_Proxy": "HRESULT WINAPI IComCRMEvents_OnCRMIndoubt_Proxy(IComCRMEvents *This,COMSVCSEVENTINFO *pInfo,GUID guidClerkCLSID);", "IComCRMEvents_OnCRMDone_Proxy": "HRESULT WINAPI IComCRMEvents_OnCRMDone_Proxy(IComCRMEvents *This,COMSVCSEVENTINFO *pInfo,GUID guidClerkCLSID);", "IComCRMEvents_OnCRMRelease_Proxy": "HRESULT WINAPI IComCRMEvents_OnCRMRelease_Proxy(IComCRMEvents *This,COMSVCSEVENTINFO *pInfo,GUID guidClerkCLSID);", "IComCRMEvents_OnCRMAnalyze_Proxy": "HRESULT WINAPI IComCRMEvents_OnCRMAnalyze_Proxy(IComCRMEvents *This,COMSVCSEVENTINFO *pInfo,GUID guidClerkCLSID,DWORD dwCrmRecordType,DWORD dwRecordSize);", "IComCRMEvents_OnCRMWrite_Proxy": "HRESULT WINAPI IComCRMEvents_OnCRMWrite_Proxy(IComCRMEvents *This,COMSVCSEVENTINFO *pInfo,GUID guidClerkCLSID,WINBOOL fVariants,DWORD dwRecordSize);", "IComCRMEvents_OnCRMForget_Proxy": "HRESULT WINAPI IComCRMEvents_OnCRMForget_Proxy(IComCRMEvents *This,COMSVCSEVENTINFO *pInfo,GUID guidClerkCLSID);", "IComCRMEvents_OnCRMForce_Proxy": "HRESULT WINAPI IComCRMEvents_OnCRMForce_Proxy(IComCRMEvents *This,COMSVCSEVENTINFO *pInfo,GUID guidClerkCLSID);", "IComCRMEvents_OnCRMDeliver_Proxy": "HRESULT WINAPI IComCRMEvents_OnCRMDeliver_Proxy(IComCRMEvents *This,COMSVCSEVENTINFO *pInfo,GUID guidClerkCLSID,WINBOOL fVariants,DWORD dwRecordSize);", "IComMethod2Events_OnMethodCall2_Proxy": "HRESULT WINAPI IComMethod2Events_OnMethodCall2_Proxy(IComMethod2Events *This,COMSVCSEVENTINFO *pInfo,ULONG64 oid,REFCLSID guidCid,REFIID guidRid,DWORD dwThread,ULONG iMeth);", "IComMethod2Events_OnMethodReturn2_Proxy": "HRESULT WINAPI IComMethod2Events_OnMethodReturn2_Proxy(IComMethod2Events *This,COMSVCSEVENTINFO *pInfo,ULONG64 oid,REFCLSID guidCid,REFIID guidRid,DWORD dwThread,ULONG iMeth,HRESULT hresult);", "IComMethod2Events_OnMethodException2_Proxy": "HRESULT WINAPI IComMethod2Events_OnMethodException2_Proxy(IComMethod2Events *This,COMSVCSEVENTINFO *pInfo,ULONG64 oid,REFCLSID guidCid,REFIID guidRid,DWORD dwThread,ULONG iMeth);", "IComTrackingInfoEvents_OnNewTrackingInfo_Proxy": "HRESULT WINAPI IComTrackingInfoEvents_OnNewTrackingInfo_Proxy(IComTrackingInfoEvents *This,IUnknown *pToplevelCollection);", "IComTrackingInfoCollection_Type_Proxy": "HRESULT WINAPI IComTrackingInfoCollection_Type_Proxy(IComTrackingInfoCollection *This,TRACKING_COLL_TYPE *pType);", "IComTrackingInfoCollection_Count_Proxy": "HRESULT WINAPI IComTrackingInfoCollection_Count_Proxy(IComTrackingInfoCollection *This,ULONG *pCount);", "IComTrackingInfoCollection_Item_Proxy": "HRESULT WINAPI IComTrackingInfoCollection_Item_Proxy(IComTrackingInfoCollection *This,ULONG ulIndex,REFIID riid,void **ppv);", "IComTrackingInfoObject_GetValue_Proxy": "HRESULT WINAPI IComTrackingInfoObject_GetValue_Proxy(IComTrackingInfoObject *This,LPOLESTR szPropertyName,VARIANT *pvarOut);", "IComTrackingInfoProperties_PropCount_Proxy": "HRESULT WINAPI IComTrackingInfoProperties_PropCount_Proxy(IComTrackingInfoProperties *This,ULONG *pCount);", "IComTrackingInfoProperties_GetPropName_Proxy": "HRESULT WINAPI IComTrackingInfoProperties_GetPropName_Proxy(IComTrackingInfoProperties *This,ULONG ulIndex,LPOLESTR *ppszPropName);", "IComApp2Events_OnAppActivation2_Proxy": "HRESULT WINAPI IComApp2Events_OnAppActivation2_Proxy(IComApp2Events *This,COMSVCSEVENTINFO *pInfo,GUID guidApp,GUID guidProcess);", "IComApp2Events_OnAppShutdown2_Proxy": "HRESULT WINAPI IComApp2Events_OnAppShutdown2_Proxy(IComApp2Events *This,COMSVCSEVENTINFO *pInfo,GUID guidApp);", "IComApp2Events_OnAppForceShutdown2_Proxy": "HRESULT WINAPI IComApp2Events_OnAppForceShutdown2_Proxy(IComApp2Events *This,COMSVCSEVENTINFO *pInfo,GUID guidApp);", "IComApp2Events_OnAppPaused2_Proxy": "HRESULT WINAPI IComApp2Events_OnAppPaused2_Proxy(IComApp2Events *This,COMSVCSEVENTINFO *pInfo,GUID guidApp,WINBOOL bPaused);", "IComApp2Events_OnAppRecycle2_Proxy": "HRESULT WINAPI IComApp2Events_OnAppRecycle2_Proxy(IComApp2Events *This,COMSVCSEVENTINFO *pInfo,GUID guidApp,GUID guidProcess,__LONG32 lReason);", "IComTransaction2Events_OnTransactionStart2_Proxy": "HRESULT WINAPI IComTransaction2Events_OnTransactionStart2_Proxy(IComTransaction2Events *This,COMSVCSEVENTINFO *pInfo,REFGUID guidTx,REFGUID tsid,WINBOOL fRoot,int nIsolationLevel);", "IComTransaction2Events_OnTransactionPrepare2_Proxy": "HRESULT WINAPI IComTransaction2Events_OnTransactionPrepare2_Proxy(IComTransaction2Events *This,COMSVCSEVENTINFO *pInfo,REFGUID guidTx,WINBOOL fVoteYes);", "IComTransaction2Events_OnTransactionAbort2_Proxy": "HRESULT WINAPI IComTransaction2Events_OnTransactionAbort2_Proxy(IComTransaction2Events *This,COMSVCSEVENTINFO *pInfo,REFGUID guidTx);", "IComTransaction2Events_OnTransactionCommit2_Proxy": "HRESULT WINAPI IComTransaction2Events_OnTransactionCommit2_Proxy(IComTransaction2Events *This,COMSVCSEVENTINFO *pInfo,REFGUID guidTx);", "IComInstance2Events_OnObjectCreate2_Proxy": "HRESULT WINAPI IComInstance2Events_OnObjectCreate2_Proxy(IComInstance2Events *This,COMSVCSEVENTINFO *pInfo,REFGUID guidActivity,REFCLSID clsid,REFGUID tsid,ULONG64 CtxtID,ULONG64 ObjectID,REFGUID guidPartition);", "IComInstance2Events_OnObjectDestroy2_Proxy": "HRESULT WINAPI IComInstance2Events_OnObjectDestroy2_Proxy(IComInstance2Events *This,COMSVCSEVENTINFO *pInfo,ULONG64 CtxtID);", "IComObjectPool2Events_OnObjPoolPutObject2_Proxy": "HRESULT WINAPI IComObjectPool2Events_OnObjPoolPutObject2_Proxy(IComObjectPool2Events *This,COMSVCSEVENTINFO *pInfo,REFGUID guidObject,int nReason,DWORD dwAvailable,ULONG64 oid);", "IComObjectPool2Events_OnObjPoolGetObject2_Proxy": "HRESULT WINAPI IComObjectPool2Events_OnObjPoolGetObject2_Proxy(IComObjectPool2Events *This,COMSVCSEVENTINFO *pInfo,REFGUID guidActivity,REFGUID guidObject,DWORD dwAvailable,ULONG64 oid,REFGUID guidPartition);", "IComObjectPool2Events_OnObjPoolRecycleToTx2_Proxy": "HRESULT WINAPI IComObjectPool2Events_OnObjPoolRecycleToTx2_Proxy(IComObjectPool2Events *This,COMSVCSEVENTINFO *pInfo,REFGUID guidActivity,REFGUID guidObject,REFGUID guidTx,ULONG64 objid);", "IComObjectPool2Events_OnObjPoolGetFromTx2_Proxy": "HRESULT WINAPI IComObjectPool2Events_OnObjPoolGetFromTx2_Proxy(IComObjectPool2Events *This,COMSVCSEVENTINFO *pInfo,REFGUID guidActivity,REFGUID guidObject,REFGUID guidTx,ULONG64 objid,REFGUID guidPartition);", "IComObjectConstruction2Events_OnObjectConstruct2_Proxy": "HRESULT WINAPI IComObjectConstruction2Events_OnObjectConstruct2_Proxy(IComObjectConstruction2Events *This,COMSVCSEVENTINFO *pInfo,REFGUID guidObject,LPCOLESTR sConstructString,ULONG64 oid,REFGUID guidPartition);", "ISystemAppEventData_Startup_Proxy": "HRESULT WINAPI ISystemAppEventData_Startup_Proxy(ISystemAppEventData *This);", "ISystemAppEventData_OnDataChanged_Proxy": "HRESULT WINAPI ISystemAppEventData_OnDataChanged_Proxy(ISystemAppEventData *This,DWORD dwPID,DWORD dwMask,DWORD dwNumberSinks,BSTR bstrDwMethodMask,DWORD dwReason,ULONG64 u64TraceHandle);", "IMtsEvents_get_PackageName_Proxy": "HRESULT WINAPI IMtsEvents_get_PackageName_Proxy(IMtsEvents *This,BSTR *pVal);", "IMtsEvents_get_PackageGuid_Proxy": "HRESULT WINAPI IMtsEvents_get_PackageGuid_Proxy(IMtsEvents *This,BSTR *pVal);", "IMtsEvents_PostEvent_Proxy": "HRESULT WINAPI IMtsEvents_PostEvent_Proxy(IMtsEvents *This,VARIANT *vEvent);", "IMtsEvents_get_FireEvents_Proxy": "HRESULT WINAPI IMtsEvents_get_FireEvents_Proxy(IMtsEvents *This,VARIANT_BOOL *pVal);", "IMtsEvents_GetProcessID_Proxy": "HRESULT WINAPI IMtsEvents_GetProcessID_Proxy(IMtsEvents *This,__LONG32 *id);", "IMtsEventInfo_get_Names_Proxy": "HRESULT WINAPI IMtsEventInfo_get_Names_Proxy(IMtsEventInfo *This,IUnknown **pUnk);", "IMtsEventInfo_get_DisplayName_Proxy": "HRESULT WINAPI IMtsEventInfo_get_DisplayName_Proxy(IMtsEventInfo *This,BSTR *sDisplayName);", "IMtsEventInfo_get_EventID_Proxy": "HRESULT WINAPI IMtsEventInfo_get_EventID_Proxy(IMtsEventInfo *This,BSTR *sGuidEventID);", "IMtsEventInfo_get_Count_Proxy": "HRESULT WINAPI IMtsEventInfo_get_Count_Proxy(IMtsEventInfo *This,__LONG32 *lCount);", "IMtsEventInfo_get_Value_Proxy": "HRESULT WINAPI IMtsEventInfo_get_Value_Proxy(IMtsEventInfo *This,BSTR sKey,VARIANT *pVal);", "IMTSLocator_GetEventDispatcher_Proxy": "HRESULT WINAPI IMTSLocator_GetEventDispatcher_Proxy(IMTSLocator *This,IUnknown **pUnk);", "IMtsGrp_get_Count_Proxy": "HRESULT WINAPI IMtsGrp_get_Count_Proxy(IMtsGrp *This,__LONG32 *pVal);", "IMtsGrp_Item_Proxy": "HRESULT WINAPI IMtsGrp_Item_Proxy(IMtsGrp *This,__LONG32 lIndex,IUnknown **ppUnkDispatcher);", "IMtsGrp_Refresh_Proxy": "HRESULT WINAPI IMtsGrp_Refresh_Proxy(IMtsGrp *This);", "IMessageMover_get_SourcePath_Proxy": "HRESULT WINAPI IMessageMover_get_SourcePath_Proxy(IMessageMover *This,BSTR *pVal);", "IMessageMover_put_SourcePath_Proxy": "HRESULT WINAPI IMessageMover_put_SourcePath_Proxy(IMessageMover *This,BSTR newVal);", "IMessageMover_get_DestPath_Proxy": "HRESULT WINAPI IMessageMover_get_DestPath_Proxy(IMessageMover *This,BSTR *pVal);", "IMessageMover_put_DestPath_Proxy": "HRESULT WINAPI IMessageMover_put_DestPath_Proxy(IMessageMover *This,BSTR newVal);", "IMessageMover_get_CommitBatchSize_Proxy": "HRESULT WINAPI IMessageMover_get_CommitBatchSize_Proxy(IMessageMover *This,__LONG32 *pVal);", "IMessageMover_put_CommitBatchSize_Proxy": "HRESULT WINAPI IMessageMover_put_CommitBatchSize_Proxy(IMessageMover *This,__LONG32 newVal);", "IMessageMover_MoveMessages_Proxy": "HRESULT WINAPI IMessageMover_MoveMessages_Proxy(IMessageMover *This,__LONG32 *plMessagesMoved);", "IEventServerTrace_StartTraceGuid_Proxy": "HRESULT WINAPI IEventServerTrace_StartTraceGuid_Proxy(IEventServerTrace *This,BSTR bstrguidEvent,BSTR bstrguidFilter,LONG lPidFilter);", "IEventServerTrace_StopTraceGuid_Proxy": "HRESULT WINAPI IEventServerTrace_StopTraceGuid_Proxy(IEventServerTrace *This,BSTR bstrguidEvent,BSTR bstrguidFilter,LONG lPidFilter);", "IEventServerTrace_EnumTraceGuid_Proxy": "HRESULT WINAPI IEventServerTrace_EnumTraceGuid_Proxy(IEventServerTrace *This,LONG *plCntGuids,BSTR *pbstrGuidList);", "IDispenserManager_RegisterDispenser_Proxy": "HRESULT WINAPI IDispenserManager_RegisterDispenser_Proxy(IDispenserManager *This,IDispenserDriver *__MIDL_0014,LPCOLESTR szDispenserName,IHolder **__MIDL_0015);", "IDispenserManager_GetContext_Proxy": "HRESULT WINAPI IDispenserManager_GetContext_Proxy(IDispenserManager *This,INSTID *__MIDL_0016,TRANSID *__MIDL_0017);", "IHolder_AllocResource_Proxy": "HRESULT WINAPI IHolder_AllocResource_Proxy(IHolder *This,const RESTYPID __MIDL_0018,RESID *__MIDL_0019);", "IHolder_FreeResource_Proxy": "HRESULT WINAPI IHolder_FreeResource_Proxy(IHolder *This,const RESID __MIDL_0020);", "IHolder_TrackResource_Proxy": "HRESULT WINAPI IHolder_TrackResource_Proxy(IHolder *This,const RESID __MIDL_0021);", "IHolder_TrackResourceS_Proxy": "HRESULT WINAPI IHolder_TrackResourceS_Proxy(IHolder *This,constSRESID __MIDL_0022);", "IHolder_UntrackResource_Proxy": "HRESULT WINAPI IHolder_UntrackResource_Proxy(IHolder *This,const RESID __MIDL_0023,const WINBOOL __MIDL_0024);", "IHolder_UntrackResourceS_Proxy": "HRESULT WINAPI IHolder_UntrackResourceS_Proxy(IHolder *This,constSRESID __MIDL_0025,const WINBOOL __MIDL_0026);", "IHolder_Close_Proxy": "HRESULT WINAPI IHolder_Close_Proxy(IHolder *This);", "IHolder_RequestDestroyResource_Proxy": "HRESULT WINAPI IHolder_RequestDestroyResource_Proxy(IHolder *This,const RESID __MIDL_0027);", "IDispenserDriver_CreateResource_Proxy": "HRESULT WINAPI IDispenserDriver_CreateResource_Proxy(IDispenserDriver *This,const RESTYPID ResTypId,RESID *pResId,TIMEINSECS *pSecsFreeBeforeDestroy);", "IDispenserDriver_RateResource_Proxy": "HRESULT WINAPI IDispenserDriver_RateResource_Proxy(IDispenserDriver *This,const RESTYPID ResTypId,const RESID ResId,const WINBOOL fRequiresTransactionEnlistment,RESOURCERATING *pRating);", "IDispenserDriver_EnlistResource_Proxy": "HRESULT WINAPI IDispenserDriver_EnlistResource_Proxy(IDispenserDriver *This,const RESID ResId,const TRANSID TransId);", "IDispenserDriver_ResetResource_Proxy": "HRESULT WINAPI IDispenserDriver_ResetResource_Proxy(IDispenserDriver *This,const RESID ResId);", "IDispenserDriver_DestroyResource_Proxy": "HRESULT WINAPI IDispenserDriver_DestroyResource_Proxy(IDispenserDriver *This,const RESID ResId);", "IDispenserDriver_DestroyResourceS_Proxy": "HRESULT WINAPI IDispenserDriver_DestroyResourceS_Proxy(IDispenserDriver *This,constSRESID ResId);", "IObjectContext_CreateInstance_Proxy": "HRESULT WINAPI IObjectContext_CreateInstance_Proxy(IObjectContext *This,REFCLSID rclsid,REFIID riid,LPVOID *ppv);", "IObjectContext_SetComplete_Proxy": "HRESULT WINAPI IObjectContext_SetComplete_Proxy(IObjectContext *This);", "IObjectContext_SetAbort_Proxy": "HRESULT WINAPI IObjectContext_SetAbort_Proxy(IObjectContext *This);", "IObjectContext_EnableCommit_Proxy": "HRESULT WINAPI IObjectContext_EnableCommit_Proxy(IObjectContext *This);", "IObjectContext_DisableCommit_Proxy": "HRESULT WINAPI IObjectContext_DisableCommit_Proxy(IObjectContext *This);", "IObjectContext_IsInTransaction_Proxy": "WINBOOL WINAPI IObjectContext_IsInTransaction_Proxy(IObjectContext *This);", "IObjectContext_IsSecurityEnabled_Proxy": "WINBOOL WINAPI IObjectContext_IsSecurityEnabled_Proxy(IObjectContext *This);", "IObjectContext_IsCallerInRole_Proxy": "HRESULT WINAPI IObjectContext_IsCallerInRole_Proxy(IObjectContext *This,BSTR bstrRole,WINBOOL *pfIsInRole);", "IObjectControl_Activate_Proxy": "HRESULT WINAPI IObjectControl_Activate_Proxy(IObjectControl *This);", "IObjectControl_Deactivate_Proxy": "void WINAPI IObjectControl_Deactivate_Proxy(IObjectControl *This);", "IObjectControl_CanBePooled_Proxy": "WINBOOL WINAPI IObjectControl_CanBePooled_Proxy(IObjectControl *This);", "IEnumNames_Next_Proxy": "HRESULT WINAPI IEnumNames_Next_Proxy(IEnumNames *This,unsigned __LONG32 celt,BSTR *rgname,unsigned __LONG32 *pceltFetched);", "IEnumNames_Skip_Proxy": "HRESULT WINAPI IEnumNames_Skip_Proxy(IEnumNames *This,unsigned __LONG32 celt);", "IEnumNames_Reset_Proxy": "HRESULT WINAPI IEnumNames_Reset_Proxy(IEnumNames *This);", "IEnumNames_Clone_Proxy": "HRESULT WINAPI IEnumNames_Clone_Proxy(IEnumNames *This,IEnumNames **ppenum);", "ISecurityProperty_GetDirectCreatorSID_Proxy": "HRESULT WINAPI ISecurityProperty_GetDirectCreatorSID_Proxy(ISecurityProperty *This,PSID *pSID);", "ISecurityProperty_GetOriginalCreatorSID_Proxy": "HRESULT WINAPI ISecurityProperty_GetOriginalCreatorSID_Proxy(ISecurityProperty *This,PSID *pSID);", "ISecurityProperty_GetDirectCallerSID_Proxy": "HRESULT WINAPI ISecurityProperty_GetDirectCallerSID_Proxy(ISecurityProperty *This,PSID *pSID);", "ISecurityProperty_GetOriginalCallerSID_Proxy": "HRESULT WINAPI ISecurityProperty_GetOriginalCallerSID_Proxy(ISecurityProperty *This,PSID *pSID);", "ISecurityProperty_ReleaseSID_Proxy": "HRESULT WINAPI ISecurityProperty_ReleaseSID_Proxy(ISecurityProperty *This,PSID pSID);", "ObjectControl_Activate_Proxy": "HRESULT WINAPI ObjectControl_Activate_Proxy(ObjectControl *This);", "ObjectControl_Deactivate_Proxy": "HRESULT WINAPI ObjectControl_Deactivate_Proxy(ObjectControl *This);", "ObjectControl_CanBePooled_Proxy": "HRESULT WINAPI ObjectControl_CanBePooled_Proxy(ObjectControl *This,VARIANT_BOOL *pbPoolable);", "ISharedProperty_get_Value_Proxy": "HRESULT WINAPI ISharedProperty_get_Value_Proxy(ISharedProperty *This,VARIANT *pVal);", "ISharedProperty_put_Value_Proxy": "HRESULT WINAPI ISharedProperty_put_Value_Proxy(ISharedProperty *This,VARIANT val);", "ISharedPropertyGroup_CreatePropertyByPosition_Proxy": "HRESULT WINAPI ISharedPropertyGroup_CreatePropertyByPosition_Proxy(ISharedPropertyGroup *This,int Index,VARIANT_BOOL *fExists,ISharedProperty **ppProp);", "ISharedPropertyGroup_get_PropertyByPosition_Proxy": "HRESULT WINAPI ISharedPropertyGroup_get_PropertyByPosition_Proxy(ISharedPropertyGroup *This,int Index,ISharedProperty **ppProperty);", "ISharedPropertyGroup_CreateProperty_Proxy": "HRESULT WINAPI ISharedPropertyGroup_CreateProperty_Proxy(ISharedPropertyGroup *This,BSTR Name,VARIANT_BOOL *fExists,ISharedProperty **ppProp);", "ISharedPropertyGroup_get_Property_Proxy": "HRESULT WINAPI ISharedPropertyGroup_get_Property_Proxy(ISharedPropertyGroup *This,BSTR Name,ISharedProperty **ppProperty);", "ISharedPropertyGroupManager_CreatePropertyGroup_Proxy": "HRESULT WINAPI ISharedPropertyGroupManager_CreatePropertyGroup_Proxy(ISharedPropertyGroupManager *This,BSTR Name,LONG *dwIsoMode,LONG *dwRelMode,VARIANT_BOOL *fExists,ISharedPropertyGroup **ppGroup);", "ISharedPropertyGroupManager_get_Group_Proxy": "HRESULT WINAPI ISharedPropertyGroupManager_get_Group_Proxy(ISharedPropertyGroupManager *This,BSTR Name,ISharedPropertyGroup **ppGroup);", "ISharedPropertyGroupManager_get__NewEnum_Proxy": "HRESULT WINAPI ISharedPropertyGroupManager_get__NewEnum_Proxy(ISharedPropertyGroupManager *This,IUnknown **retval);", "IObjectConstruct_Construct_Proxy": "HRESULT WINAPI IObjectConstruct_Construct_Proxy(IObjectConstruct *This,IDispatch *pCtorObj);", "IObjectConstructString_get_ConstructString_Proxy": "HRESULT WINAPI IObjectConstructString_get_ConstructString_Proxy(IObjectConstructString *This,BSTR *pVal);", "IObjectContextActivity_GetActivityId_Proxy": "HRESULT WINAPI IObjectContextActivity_GetActivityId_Proxy(IObjectContextActivity *This,GUID *pGUID);", "IObjectContextInfo_IsInTransaction_Proxy": "WINBOOL WINAPI IObjectContextInfo_IsInTransaction_Proxy(IObjectContextInfo *This);", "IObjectContextInfo_GetTransaction_Proxy": "HRESULT WINAPI IObjectContextInfo_GetTransaction_Proxy(IObjectContextInfo *This,IUnknown **pptrans);", "IObjectContextInfo_GetTransactionId_Proxy": "HRESULT WINAPI IObjectContextInfo_GetTransactionId_Proxy(IObjectContextInfo *This,GUID *pGuid);", "IObjectContextInfo_GetActivityId_Proxy": "HRESULT WINAPI IObjectContextInfo_GetActivityId_Proxy(IObjectContextInfo *This,GUID *pGUID);", "IObjectContextInfo_GetContextId_Proxy": "HRESULT WINAPI IObjectContextInfo_GetContextId_Proxy(IObjectContextInfo *This,GUID *pGuid);", "IObjectContextInfo2_GetPartitionId_Proxy": "HRESULT WINAPI IObjectContextInfo2_GetPartitionId_Proxy(IObjectContextInfo2 *This,GUID *pGuid);", "IObjectContextInfo2_GetApplicationId_Proxy": "HRESULT WINAPI IObjectContextInfo2_GetApplicationId_Proxy(IObjectContextInfo2 *This,GUID *pGuid);", "IObjectContextInfo2_GetApplicationInstanceId_Proxy": "HRESULT WINAPI IObjectContextInfo2_GetApplicationInstanceId_Proxy(IObjectContextInfo2 *This,GUID *pGuid);", "ITransactionStatus_SetTransactionStatus_Proxy": "HRESULT WINAPI ITransactionStatus_SetTransactionStatus_Proxy(ITransactionStatus *This,HRESULT hrStatus);", "ITransactionStatus_GetTransactionStatus_Proxy": "HRESULT WINAPI ITransactionStatus_GetTransactionStatus_Proxy(ITransactionStatus *This,HRESULT *pHrStatus);", "IObjectContextTip_GetTipUrl_Proxy": "HRESULT WINAPI IObjectContextTip_GetTipUrl_Proxy(IObjectContextTip *This,BSTR *pTipUrl);", "IPlaybackControl_FinalClientRetry_Proxy": "HRESULT WINAPI IPlaybackControl_FinalClientRetry_Proxy(IPlaybackControl *This);", "IPlaybackControl_FinalServerRetry_Proxy": "HRESULT WINAPI IPlaybackControl_FinalServerRetry_Proxy(IPlaybackControl *This);", "IGetContextProperties_Count_Proxy": "HRESULT WINAPI IGetContextProperties_Count_Proxy(IGetContextProperties *This,__LONG32 *plCount);", "IGetContextProperties_GetProperty_Proxy": "HRESULT WINAPI IGetContextProperties_GetProperty_Proxy(IGetContextProperties *This,BSTR name,VARIANT *pProperty);", "IGetContextProperties_EnumNames_Proxy": "HRESULT WINAPI IGetContextProperties_EnumNames_Proxy(IGetContextProperties *This,IEnumNames **ppenum);", "IContextState_SetDeactivateOnReturn_Proxy": "HRESULT WINAPI IContextState_SetDeactivateOnReturn_Proxy(IContextState *This,VARIANT_BOOL bDeactivate);", "IContextState_GetDeactivateOnReturn_Proxy": "HRESULT WINAPI IContextState_GetDeactivateOnReturn_Proxy(IContextState *This,VARIANT_BOOL *pbDeactivate);", "IContextState_SetMyTransactionVote_Proxy": "HRESULT WINAPI IContextState_SetMyTransactionVote_Proxy(IContextState *This,TransactionVote txVote);", "IContextState_GetMyTransactionVote_Proxy": "HRESULT WINAPI IContextState_GetMyTransactionVote_Proxy(IContextState *This,TransactionVote *ptxVote);", "IPoolManager_ShutdownPool_Proxy": "HRESULT WINAPI IPoolManager_ShutdownPool_Proxy(IPoolManager *This,BSTR CLSIDOrProgID);", "ISelectCOMLBServer_Init_Proxy": "HRESULT WINAPI ISelectCOMLBServer_Init_Proxy(ISelectCOMLBServer *This);", "ISelectCOMLBServer_GetLBServer_Proxy": "HRESULT WINAPI ISelectCOMLBServer_GetLBServer_Proxy(ISelectCOMLBServer *This,IUnknown *pUnk);", "ICOMLBArguments_GetCLSID_Proxy": "HRESULT WINAPI ICOMLBArguments_GetCLSID_Proxy(ICOMLBArguments *This,CLSID *pCLSID);", "ICOMLBArguments_SetCLSID_Proxy": "HRESULT WINAPI ICOMLBArguments_SetCLSID_Proxy(ICOMLBArguments *This,CLSID *pCLSID);", "ICOMLBArguments_GetMachineName_Proxy": "HRESULT WINAPI ICOMLBArguments_GetMachineName_Proxy(ICOMLBArguments *This,ULONG cchSvr,WCHAR szServerName[]);", "ICOMLBArguments_SetMachineName_Proxy": "HRESULT WINAPI ICOMLBArguments_SetMachineName_Proxy(ICOMLBArguments *This,ULONG cchSvr,WCHAR szServerName[]);", "CoCreateActivity": "EXTERN_C HRESULT WINAPI CoCreateActivity(IUnknown *pIUnknown,REFIID riid,void **ppObj);", "CoEnterServiceDomain": "EXTERN_C HRESULT WINAPI CoEnterServiceDomain(IUnknown *pConfigObject);", "CoLeaveServiceDomain": "EXTERN_C void WINAPI CoLeaveServiceDomain(IUnknown *pUnkStatus);", "GetManagedExtensions": "EXTERN_C HRESULT WINAPI GetManagedExtensions(DWORD *dwExts);", "ICrmLogControl_get_TransactionUOW_Proxy": "HRESULT WINAPI ICrmLogControl_get_TransactionUOW_Proxy(ICrmLogControl *This,BSTR *pVal);", "ICrmLogControl_RegisterCompensator_Proxy": "HRESULT WINAPI ICrmLogControl_RegisterCompensator_Proxy(ICrmLogControl *This,LPCWSTR lpcwstrProgIdCompensator,LPCWSTR lpcwstrDescription,LONG lCrmRegFlags);", "ICrmLogControl_WriteLogRecordVariants_Proxy": "HRESULT WINAPI ICrmLogControl_WriteLogRecordVariants_Proxy(ICrmLogControl *This,VARIANT *pLogRecord);", "ICrmLogControl_ForceLog_Proxy": "HRESULT WINAPI ICrmLogControl_ForceLog_Proxy(ICrmLogControl *This);", "ICrmLogControl_ForgetLogRecord_Proxy": "HRESULT WINAPI ICrmLogControl_ForgetLogRecord_Proxy(ICrmLogControl *This);", "ICrmLogControl_ForceTransactionToAbort_Proxy": "HRESULT WINAPI ICrmLogControl_ForceTransactionToAbort_Proxy(ICrmLogControl *This);", "ICrmLogControl_WriteLogRecord_Proxy": "HRESULT WINAPI ICrmLogControl_WriteLogRecord_Proxy(ICrmLogControl *This,BLOB rgBlob[],ULONG cBlob);", "ICrmCompensatorVariants_SetLogControlVariants_Proxy": "HRESULT WINAPI ICrmCompensatorVariants_SetLogControlVariants_Proxy(ICrmCompensatorVariants *This,ICrmLogControl *pLogControl);", "ICrmCompensatorVariants_BeginPrepareVariants_Proxy": "HRESULT WINAPI ICrmCompensatorVariants_BeginPrepareVariants_Proxy(ICrmCompensatorVariants *This);", "ICrmCompensatorVariants_PrepareRecordVariants_Proxy": "HRESULT WINAPI ICrmCompensatorVariants_PrepareRecordVariants_Proxy(ICrmCompensatorVariants *This,VARIANT *pLogRecord,VARIANT_BOOL *pbForget);", "ICrmCompensatorVariants_EndPrepareVariants_Proxy": "HRESULT WINAPI ICrmCompensatorVariants_EndPrepareVariants_Proxy(ICrmCompensatorVariants *This,VARIANT_BOOL *pbOkToPrepare);", "ICrmCompensatorVariants_BeginCommitVariants_Proxy": "HRESULT WINAPI ICrmCompensatorVariants_BeginCommitVariants_Proxy(ICrmCompensatorVariants *This,VARIANT_BOOL bRecovery);", "ICrmCompensatorVariants_CommitRecordVariants_Proxy": "HRESULT WINAPI ICrmCompensatorVariants_CommitRecordVariants_Proxy(ICrmCompensatorVariants *This,VARIANT *pLogRecord,VARIANT_BOOL *pbForget);", "ICrmCompensatorVariants_EndCommitVariants_Proxy": "HRESULT WINAPI ICrmCompensatorVariants_EndCommitVariants_Proxy(ICrmCompensatorVariants *This);", "ICrmCompensatorVariants_BeginAbortVariants_Proxy": "HRESULT WINAPI ICrmCompensatorVariants_BeginAbortVariants_Proxy(ICrmCompensatorVariants *This,VARIANT_BOOL bRecovery);", "ICrmCompensatorVariants_AbortRecordVariants_Proxy": "HRESULT WINAPI ICrmCompensatorVariants_AbortRecordVariants_Proxy(ICrmCompensatorVariants *This,VARIANT *pLogRecord,VARIANT_BOOL *pbForget);", "ICrmCompensatorVariants_EndAbortVariants_Proxy": "HRESULT WINAPI ICrmCompensatorVariants_EndAbortVariants_Proxy(ICrmCompensatorVariants *This);", "ICrmCompensator_SetLogControl_Proxy": "HRESULT WINAPI ICrmCompensator_SetLogControl_Proxy(ICrmCompensator *This,ICrmLogControl *pLogControl);", "ICrmCompensator_BeginPrepare_Proxy": "HRESULT WINAPI ICrmCompensator_BeginPrepare_Proxy(ICrmCompensator *This);", "ICrmCompensator_PrepareRecord_Proxy": "HRESULT WINAPI ICrmCompensator_PrepareRecord_Proxy(ICrmCompensator *This,CrmLogRecordRead crmLogRec,WINBOOL *pfForget);", "ICrmCompensator_EndPrepare_Proxy": "HRESULT WINAPI ICrmCompensator_EndPrepare_Proxy(ICrmCompensator *This,WINBOOL *pfOkToPrepare);", "ICrmCompensator_BeginCommit_Proxy": "HRESULT WINAPI ICrmCompensator_BeginCommit_Proxy(ICrmCompensator *This,WINBOOL fRecovery);", "ICrmCompensator_CommitRecord_Proxy": "HRESULT WINAPI ICrmCompensator_CommitRecord_Proxy(ICrmCompensator *This,CrmLogRecordRead crmLogRec,WINBOOL *pfForget);", "ICrmCompensator_EndCommit_Proxy": "HRESULT WINAPI ICrmCompensator_EndCommit_Proxy(ICrmCompensator *This);", "ICrmCompensator_BeginAbort_Proxy": "HRESULT WINAPI ICrmCompensator_BeginAbort_Proxy(ICrmCompensator *This,WINBOOL fRecovery);", "ICrmCompensator_AbortRecord_Proxy": "HRESULT WINAPI ICrmCompensator_AbortRecord_Proxy(ICrmCompensator *This,CrmLogRecordRead crmLogRec,WINBOOL *pfForget);", "ICrmCompensator_EndAbort_Proxy": "HRESULT WINAPI ICrmCompensator_EndAbort_Proxy(ICrmCompensator *This);", "ICrmMonitorLogRecords_get_Count_Proxy": "HRESULT WINAPI ICrmMonitorLogRecords_get_Count_Proxy(ICrmMonitorLogRecords *This,__LONG32 *pVal);", "ICrmMonitorLogRecords_get_TransactionState_Proxy": "HRESULT WINAPI ICrmMonitorLogRecords_get_TransactionState_Proxy(ICrmMonitorLogRecords *This,CrmTransactionState *pVal);", "ICrmMonitorLogRecords_get_StructuredRecords_Proxy": "HRESULT WINAPI ICrmMonitorLogRecords_get_StructuredRecords_Proxy(ICrmMonitorLogRecords *This,VARIANT_BOOL *pVal);", "ICrmMonitorLogRecords_GetLogRecord_Proxy": "HRESULT WINAPI ICrmMonitorLogRecords_GetLogRecord_Proxy(ICrmMonitorLogRecords *This,DWORD dwIndex,CrmLogRecordRead *pCrmLogRec);", "ICrmMonitorLogRecords_GetLogRecordVariants_Proxy": "HRESULT WINAPI ICrmMonitorLogRecords_GetLogRecordVariants_Proxy(ICrmMonitorLogRecords *This,VARIANT IndexNumber,LPVARIANT pLogRecord);", "ICrmMonitorClerks_Item_Proxy": "HRESULT WINAPI ICrmMonitorClerks_Item_Proxy(ICrmMonitorClerks *This,VARIANT Index,LPVARIANT pItem);", "ICrmMonitorClerks_get__NewEnum_Proxy": "HRESULT WINAPI ICrmMonitorClerks_get__NewEnum_Proxy(ICrmMonitorClerks *This,LPUNKNOWN *pVal);", "ICrmMonitorClerks_get_Count_Proxy": "HRESULT WINAPI ICrmMonitorClerks_get_Count_Proxy(ICrmMonitorClerks *This,__LONG32 *pVal);", "ICrmMonitorClerks_ProgIdCompensator_Proxy": "HRESULT WINAPI ICrmMonitorClerks_ProgIdCompensator_Proxy(ICrmMonitorClerks *This,VARIANT Index,LPVARIANT pItem);", "ICrmMonitorClerks_Description_Proxy": "HRESULT WINAPI ICrmMonitorClerks_Description_Proxy(ICrmMonitorClerks *This,VARIANT Index,LPVARIANT pItem);", "ICrmMonitorClerks_TransactionUOW_Proxy": "HRESULT WINAPI ICrmMonitorClerks_TransactionUOW_Proxy(ICrmMonitorClerks *This,VARIANT Index,LPVARIANT pItem);", "ICrmMonitorClerks_ActivityId_Proxy": "HRESULT WINAPI ICrmMonitorClerks_ActivityId_Proxy(ICrmMonitorClerks *This,VARIANT Index,LPVARIANT pItem);", "ICrmMonitor_GetClerks_Proxy": "HRESULT WINAPI ICrmMonitor_GetClerks_Proxy(ICrmMonitor *This,ICrmMonitorClerks **pClerks);", "ICrmMonitor_HoldClerk_Proxy": "HRESULT WINAPI ICrmMonitor_HoldClerk_Proxy(ICrmMonitor *This,VARIANT Index,LPVARIANT pItem);", "ICrmFormatLogRecords_GetColumnCount_Proxy": "HRESULT WINAPI ICrmFormatLogRecords_GetColumnCount_Proxy(ICrmFormatLogRecords *This,__LONG32 *plColumnCount);", "ICrmFormatLogRecords_GetColumnHeaders_Proxy": "HRESULT WINAPI ICrmFormatLogRecords_GetColumnHeaders_Proxy(ICrmFormatLogRecords *This,LPVARIANT pHeaders);", "ICrmFormatLogRecords_GetColumn_Proxy": "HRESULT WINAPI ICrmFormatLogRecords_GetColumn_Proxy(ICrmFormatLogRecords *This,CrmLogRecordRead CrmLogRec,LPVARIANT pFormattedLogRecord);", "ICrmFormatLogRecords_GetColumnVariants_Proxy": "HRESULT WINAPI ICrmFormatLogRecords_GetColumnVariants_Proxy(ICrmFormatLogRecords *This,VARIANT LogRecord,LPVARIANT pFormattedLogRecord);", "IServiceIISIntrinsicsConfig_IISIntrinsicsConfig_Proxy": "HRESULT WINAPI IServiceIISIntrinsicsConfig_IISIntrinsicsConfig_Proxy(IServiceIISIntrinsicsConfig *This,CSC_IISIntrinsicsConfig iisIntrinsicsConfig);", "IServiceComTIIntrinsicsConfig_ComTIIntrinsicsConfig_Proxy": "HRESULT WINAPI IServiceComTIIntrinsicsConfig_ComTIIntrinsicsConfig_Proxy(IServiceComTIIntrinsicsConfig *This,CSC_COMTIIntrinsicsConfig comtiIntrinsicsConfig);", "IServiceSxsConfig_SxsConfig_Proxy": "HRESULT WINAPI IServiceSxsConfig_SxsConfig_Proxy(IServiceSxsConfig *This,CSC_SxsConfig scsConfig);", "IServiceSxsConfig_SxsName_Proxy": "HRESULT WINAPI IServiceSxsConfig_SxsName_Proxy(IServiceSxsConfig *This,LPCWSTR szSxsName);", "IServiceSxsConfig_SxsDirectory_Proxy": "HRESULT WINAPI IServiceSxsConfig_SxsDirectory_Proxy(IServiceSxsConfig *This,LPCWSTR szSxsDirectory);", "ICheckSxsConfig_IsSameSxsConfig_Proxy": "HRESULT WINAPI ICheckSxsConfig_IsSameSxsConfig_Proxy(ICheckSxsConfig *This,LPCWSTR wszSxsName,LPCWSTR wszSxsDirectory,LPCWSTR wszSxsAppName);", "IServiceInheritanceConfig_ContainingContextTreatment_Proxy": "HRESULT WINAPI IServiceInheritanceConfig_ContainingContextTreatment_Proxy(IServiceInheritanceConfig *This,CSC_InheritanceConfig inheritanceConfig);", "IServiceThreadPoolConfig_SelectThreadPool_Proxy": "HRESULT WINAPI IServiceThreadPoolConfig_SelectThreadPool_Proxy(IServiceThreadPoolConfig *This,CSC_ThreadPool threadPool);", "IServiceThreadPoolConfig_SetBindingInfo_Proxy": "HRESULT WINAPI IServiceThreadPoolConfig_SetBindingInfo_Proxy(IServiceThreadPoolConfig *This,CSC_Binding binding);", "IServiceTransactionConfigBase_ConfigureTransaction_Proxy": "HRESULT WINAPI IServiceTransactionConfigBase_ConfigureTransaction_Proxy(IServiceTransactionConfigBase *This,CSC_TransactionConfig transactionConfig);", "IServiceTransactionConfigBase_IsolationLevel_Proxy": "HRESULT WINAPI IServiceTransactionConfigBase_IsolationLevel_Proxy(IServiceTransactionConfigBase *This,COMAdminTxIsolationLevelOptions option);", "IServiceTransactionConfigBase_TransactionTimeout_Proxy": "HRESULT WINAPI IServiceTransactionConfigBase_TransactionTimeout_Proxy(IServiceTransactionConfigBase *This,ULONG ulTimeoutSec);", "IServiceTransactionConfigBase_BringYourOwnTransaction_Proxy": "HRESULT WINAPI IServiceTransactionConfigBase_BringYourOwnTransaction_Proxy(IServiceTransactionConfigBase *This,LPCWSTR szTipURL);", "IServiceTransactionConfigBase_NewTransactionDescription_Proxy": "HRESULT WINAPI IServiceTransactionConfigBase_NewTransactionDescription_Proxy(IServiceTransactionConfigBase *This,LPCWSTR szTxDesc);", "IServiceTransactionConfig_ConfigureBYOT_Proxy": "HRESULT WINAPI IServiceTransactionConfig_ConfigureBYOT_Proxy(IServiceTransactionConfig *This,ITransaction *pITxByot);", "IServiceSynchronizationConfig_ConfigureSynchronization_Proxy": "HRESULT WINAPI IServiceSynchronizationConfig_ConfigureSynchronization_Proxy(IServiceSynchronizationConfig *This,CSC_SynchronizationConfig synchConfig);", "IServiceTrackerConfig_TrackerConfig_Proxy": "HRESULT WINAPI IServiceTrackerConfig_TrackerConfig_Proxy(IServiceTrackerConfig *This,CSC_TrackerConfig trackerConfig,LPCWSTR szTrackerAppName,LPCWSTR szTrackerCtxName);", "IServicePartitionConfig_PartitionConfig_Proxy": "HRESULT WINAPI IServicePartitionConfig_PartitionConfig_Proxy(IServicePartitionConfig *This,CSC_PartitionConfig partitionConfig);", "IServicePartitionConfig_PartitionID_Proxy": "HRESULT WINAPI IServicePartitionConfig_PartitionID_Proxy(IServicePartitionConfig *This,REFGUID guidPartitionID);", "IServiceCall_OnCall_Proxy": "HRESULT WINAPI IServiceCall_OnCall_Proxy(IServiceCall *This);", "IAsyncErrorNotify_OnError_Proxy": "HRESULT WINAPI IAsyncErrorNotify_OnError_Proxy(IAsyncErrorNotify *This,HRESULT hr);", "IServiceActivity_SynchronousCall_Proxy": "HRESULT WINAPI IServiceActivity_SynchronousCall_Proxy(IServiceActivity *This,IServiceCall *pIServiceCall);", "IServiceActivity_AsynchronousCall_Proxy": "HRESULT WINAPI IServiceActivity_AsynchronousCall_Proxy(IServiceActivity *This,IServiceCall *pIServiceCall);", "IServiceActivity_BindToCurrentThread_Proxy": "HRESULT WINAPI IServiceActivity_BindToCurrentThread_Proxy(IServiceActivity *This);", "IServiceActivity_UnbindFromThread_Proxy": "HRESULT WINAPI IServiceActivity_UnbindFromThread_Proxy(IServiceActivity *This);", "IThreadPoolKnobs_GetMaxThreads_Proxy": "HRESULT WINAPI IThreadPoolKnobs_GetMaxThreads_Proxy(IThreadPoolKnobs *This,__LONG32 *plcMaxThreads);", "IThreadPoolKnobs_GetCurrentThreads_Proxy": "HRESULT WINAPI IThreadPoolKnobs_GetCurrentThreads_Proxy(IThreadPoolKnobs *This,__LONG32 *plcCurrentThreads);", "IThreadPoolKnobs_SetMaxThreads_Proxy": "HRESULT WINAPI IThreadPoolKnobs_SetMaxThreads_Proxy(IThreadPoolKnobs *This,__LONG32 lcMaxThreads);", "IThreadPoolKnobs_GetDeleteDelay_Proxy": "HRESULT WINAPI IThreadPoolKnobs_GetDeleteDelay_Proxy(IThreadPoolKnobs *This,__LONG32 *pmsecDeleteDelay);", "IThreadPoolKnobs_SetDeleteDelay_Proxy": "HRESULT WINAPI IThreadPoolKnobs_SetDeleteDelay_Proxy(IThreadPoolKnobs *This,__LONG32 msecDeleteDelay);", "IThreadPoolKnobs_GetMaxQueuedRequests_Proxy": "HRESULT WINAPI IThreadPoolKnobs_GetMaxQueuedRequests_Proxy(IThreadPoolKnobs *This,__LONG32 *plcMaxQueuedRequests);", "IThreadPoolKnobs_GetCurrentQueuedRequests_Proxy": "HRESULT WINAPI IThreadPoolKnobs_GetCurrentQueuedRequests_Proxy(IThreadPoolKnobs *This,__LONG32 *plcCurrentQueuedRequests);", "IThreadPoolKnobs_SetMaxQueuedRequests_Proxy": "HRESULT WINAPI IThreadPoolKnobs_SetMaxQueuedRequests_Proxy(IThreadPoolKnobs *This,__LONG32 lcMaxQueuedRequests);", "IThreadPoolKnobs_SetMinThreads_Proxy": "HRESULT WINAPI IThreadPoolKnobs_SetMinThreads_Proxy(IThreadPoolKnobs *This,__LONG32 lcMinThreads);", "IThreadPoolKnobs_SetQueueDepth_Proxy": "HRESULT WINAPI IThreadPoolKnobs_SetQueueDepth_Proxy(IThreadPoolKnobs *This,__LONG32 lcQueueDepth);", "IComStaThreadPoolKnobs_SetMinThreadCount_Proxy": "HRESULT WINAPI IComStaThreadPoolKnobs_SetMinThreadCount_Proxy(IComStaThreadPoolKnobs *This,DWORD minThreads);", "IComStaThreadPoolKnobs_GetMinThreadCount_Proxy": "HRESULT WINAPI IComStaThreadPoolKnobs_GetMinThreadCount_Proxy(IComStaThreadPoolKnobs *This,DWORD *minThreads);", "IComStaThreadPoolKnobs_SetMaxThreadCount_Proxy": "HRESULT WINAPI IComStaThreadPoolKnobs_SetMaxThreadCount_Proxy(IComStaThreadPoolKnobs *This,DWORD maxThreads);", "IComStaThreadPoolKnobs_GetMaxThreadCount_Proxy": "HRESULT WINAPI IComStaThreadPoolKnobs_GetMaxThreadCount_Proxy(IComStaThreadPoolKnobs *This,DWORD *maxThreads);", "IComStaThreadPoolKnobs_SetActivityPerThread_Proxy": "HRESULT WINAPI IComStaThreadPoolKnobs_SetActivityPerThread_Proxy(IComStaThreadPoolKnobs *This,DWORD activitiesPerThread);", "IComStaThreadPoolKnobs_GetActivityPerThread_Proxy": "HRESULT WINAPI IComStaThreadPoolKnobs_GetActivityPerThread_Proxy(IComStaThreadPoolKnobs *This,DWORD *activitiesPerThread);", "IComStaThreadPoolKnobs_SetActivityRatio_Proxy": "HRESULT WINAPI IComStaThreadPoolKnobs_SetActivityRatio_Proxy(IComStaThreadPoolKnobs *This,DOUBLE activityRatio);", "IComStaThreadPoolKnobs_GetActivityRatio_Proxy": "HRESULT WINAPI IComStaThreadPoolKnobs_GetActivityRatio_Proxy(IComStaThreadPoolKnobs *This,DOUBLE *activityRatio);", "IComStaThreadPoolKnobs_GetThreadCount_Proxy": "HRESULT WINAPI IComStaThreadPoolKnobs_GetThreadCount_Proxy(IComStaThreadPoolKnobs *This,DWORD *pdwThreads);", "IComStaThreadPoolKnobs_GetQueueDepth_Proxy": "HRESULT WINAPI IComStaThreadPoolKnobs_GetQueueDepth_Proxy(IComStaThreadPoolKnobs *This,DWORD *pdwQDepth);", "IComStaThreadPoolKnobs_SetQueueDepth_Proxy": "HRESULT WINAPI IComStaThreadPoolKnobs_SetQueueDepth_Proxy(IComStaThreadPoolKnobs *This,__LONG32 dwQDepth);", "IComMtaThreadPoolKnobs_MTASetMaxThreadCount_Proxy": "HRESULT WINAPI IComMtaThreadPoolKnobs_MTASetMaxThreadCount_Proxy(IComMtaThreadPoolKnobs *This,DWORD dwMaxThreads);", "IComMtaThreadPoolKnobs_MTAGetMaxThreadCount_Proxy": "HRESULT WINAPI IComMtaThreadPoolKnobs_MTAGetMaxThreadCount_Proxy(IComMtaThreadPoolKnobs *This,DWORD *pdwMaxThreads);", "IComMtaThreadPoolKnobs_MTASetThrottleValue_Proxy": "HRESULT WINAPI IComMtaThreadPoolKnobs_MTASetThrottleValue_Proxy(IComMtaThreadPoolKnobs *This,DWORD dwThrottle);", "IComMtaThreadPoolKnobs_MTAGetThrottleValue_Proxy": "HRESULT WINAPI IComMtaThreadPoolKnobs_MTAGetThrottleValue_Proxy(IComMtaThreadPoolKnobs *This,DWORD *pdwThrottle);", "IComStaThreadPoolKnobs2_GetMaxCPULoad_Proxy": "HRESULT WINAPI IComStaThreadPoolKnobs2_GetMaxCPULoad_Proxy(IComStaThreadPoolKnobs2 *This,DWORD *pdwLoad);", "IComStaThreadPoolKnobs2_SetMaxCPULoad_Proxy": "HRESULT WINAPI IComStaThreadPoolKnobs2_SetMaxCPULoad_Proxy(IComStaThreadPoolKnobs2 *This,__LONG32 pdwLoad);", "IComStaThreadPoolKnobs2_GetCPUMetricEnabled_Proxy": "HRESULT WINAPI IComStaThreadPoolKnobs2_GetCPUMetricEnabled_Proxy(IComStaThreadPoolKnobs2 *This,WINBOOL *pbMetricEnabled);", "IComStaThreadPoolKnobs2_SetCPUMetricEnabled_Proxy": "HRESULT WINAPI IComStaThreadPoolKnobs2_SetCPUMetricEnabled_Proxy(IComStaThreadPoolKnobs2 *This,WINBOOL bMetricEnabled);", "IComStaThreadPoolKnobs2_GetCreateThreadsAggressively_Proxy": "HRESULT WINAPI IComStaThreadPoolKnobs2_GetCreateThreadsAggressively_Proxy(IComStaThreadPoolKnobs2 *This,WINBOOL *pbMetricEnabled);", "IComStaThreadPoolKnobs2_SetCreateThreadsAggressively_Proxy": "HRESULT WINAPI IComStaThreadPoolKnobs2_SetCreateThreadsAggressively_Proxy(IComStaThreadPoolKnobs2 *This,WINBOOL bMetricEnabled);", "IComStaThreadPoolKnobs2_GetMaxCSR_Proxy": "HRESULT WINAPI IComStaThreadPoolKnobs2_GetMaxCSR_Proxy(IComStaThreadPoolKnobs2 *This,DWORD *pdwCSR);", "IComStaThreadPoolKnobs2_SetMaxCSR_Proxy": "HRESULT WINAPI IComStaThreadPoolKnobs2_SetMaxCSR_Proxy(IComStaThreadPoolKnobs2 *This,__LONG32 dwCSR);", "IComStaThreadPoolKnobs2_GetWaitTimeForThreadCleanup_Proxy": "HRESULT WINAPI IComStaThreadPoolKnobs2_GetWaitTimeForThreadCleanup_Proxy(IComStaThreadPoolKnobs2 *This,DWORD *pdwThreadCleanupWaitTime);", "IComStaThreadPoolKnobs2_SetWaitTimeForThreadCleanup_Proxy": "HRESULT WINAPI IComStaThreadPoolKnobs2_SetWaitTimeForThreadCleanup_Proxy(IComStaThreadPoolKnobs2 *This,__LONG32 dwThreadCleanupWaitTime);", "IProcessInitializer_Startup_Proxy": "HRESULT WINAPI IProcessInitializer_Startup_Proxy(IProcessInitializer *This,IUnknown *punkProcessControl);", "IProcessInitializer_Shutdown_Proxy": "HRESULT WINAPI IProcessInitializer_Shutdown_Proxy(IProcessInitializer *This);", "IServicePoolConfig_put_MaxPoolSize_Proxy": "HRESULT WINAPI IServicePoolConfig_put_MaxPoolSize_Proxy(IServicePoolConfig *This,DWORD dwMaxPool);", "IServicePoolConfig_get_MaxPoolSize_Proxy": "HRESULT WINAPI IServicePoolConfig_get_MaxPoolSize_Proxy(IServicePoolConfig *This,DWORD *pdwMaxPool);", "IServicePoolConfig_put_MinPoolSize_Proxy": "HRESULT WINAPI IServicePoolConfig_put_MinPoolSize_Proxy(IServicePoolConfig *This,DWORD dwMinPool);", "IServicePoolConfig_get_MinPoolSize_Proxy": "HRESULT WINAPI IServicePoolConfig_get_MinPoolSize_Proxy(IServicePoolConfig *This,DWORD *pdwMinPool);", "IServicePoolConfig_put_CreationTimeout_Proxy": "HRESULT WINAPI IServicePoolConfig_put_CreationTimeout_Proxy(IServicePoolConfig *This,DWORD dwCreationTimeout);", "IServicePoolConfig_get_CreationTimeout_Proxy": "HRESULT WINAPI IServicePoolConfig_get_CreationTimeout_Proxy(IServicePoolConfig *This,DWORD *pdwCreationTimeout);", "IServicePoolConfig_put_TransactionAffinity_Proxy": "HRESULT WINAPI IServicePoolConfig_put_TransactionAffinity_Proxy(IServicePoolConfig *This,WINBOOL fTxAffinity);", "IServicePoolConfig_get_TransactionAffinity_Proxy": "HRESULT WINAPI IServicePoolConfig_get_TransactionAffinity_Proxy(IServicePoolConfig *This,WINBOOL *pfTxAffinity);", "IServicePoolConfig_put_ClassFactory_Proxy": "HRESULT WINAPI IServicePoolConfig_put_ClassFactory_Proxy(IServicePoolConfig *This,IClassFactory *pFactory);", "IServicePoolConfig_get_ClassFactory_Proxy": "HRESULT WINAPI IServicePoolConfig_get_ClassFactory_Proxy(IServicePoolConfig *This,IClassFactory **pFactory);", "IServicePool_Initialize_Proxy": "HRESULT WINAPI IServicePool_Initialize_Proxy(IServicePool *This,IUnknown *pPoolConfig);", "IServicePool_GetObject_Proxy": "HRESULT WINAPI IServicePool_GetObject_Proxy(IServicePool *This,REFIID riid,void **ppv);", "IServicePool_Shutdown_Proxy": "HRESULT WINAPI IServicePool_Shutdown_Proxy(IServicePool *This);", "IManagedPooledObj_SetHeld_Proxy": "HRESULT WINAPI IManagedPooledObj_SetHeld_Proxy(IManagedPooledObj *This,WINBOOL m_bHeld);", "IManagedPoolAction_LastRelease_Proxy": "HRESULT WINAPI IManagedPoolAction_LastRelease_Proxy(IManagedPoolAction *This);", "IManagedObjectInfo_GetIUnknown_Proxy": "HRESULT WINAPI IManagedObjectInfo_GetIUnknown_Proxy(IManagedObjectInfo *This,IUnknown **pUnk);", "IManagedObjectInfo_GetIObjectControl_Proxy": "HRESULT WINAPI IManagedObjectInfo_GetIObjectControl_Proxy(IManagedObjectInfo *This,IObjectControl **pCtrl);", "IManagedObjectInfo_SetInPool_Proxy": "HRESULT WINAPI IManagedObjectInfo_SetInPool_Proxy(IManagedObjectInfo *This,WINBOOL bInPool,IManagedPooledObj *pPooledObj);", "IManagedObjectInfo_SetWrapperStrength_Proxy": "HRESULT WINAPI IManagedObjectInfo_SetWrapperStrength_Proxy(IManagedObjectInfo *This,WINBOOL bStrong);", "IAssemblyLocator_GetModules_Proxy": "HRESULT WINAPI IAssemblyLocator_GetModules_Proxy(IAssemblyLocator *This,BSTR applicationDir,BSTR applicationName,BSTR assemblyName,SAFEARRAY **pModules);", "IManagedActivationEvents_CreateManagedStub_Proxy": "HRESULT WINAPI IManagedActivationEvents_CreateManagedStub_Proxy(IManagedActivationEvents *This,IManagedObjectInfo *pInfo,WINBOOL fDist);", "IManagedActivationEvents_DestroyManagedStub_Proxy": "HRESULT WINAPI IManagedActivationEvents_DestroyManagedStub_Proxy(IManagedActivationEvents *This,IManagedObjectInfo *pInfo);", "ISendMethodEvents_SendMethodCall_Proxy": "HRESULT WINAPI ISendMethodEvents_SendMethodCall_Proxy(ISendMethodEvents *This,const void *pIdentity,REFIID riid,DWORD dwMeth);", "ISendMethodEvents_SendMethodReturn_Proxy": "HRESULT WINAPI ISendMethodEvents_SendMethodReturn_Proxy(ISendMethodEvents *This,const void *pIdentity,REFIID riid,DWORD dwMeth,HRESULT hrCall,HRESULT hrServer);", "ITransactionResourcePool_PutResource_Proxy": "HRESULT WINAPI ITransactionResourcePool_PutResource_Proxy(ITransactionResourcePool *This,IObjPool *pPool,IUnknown *pUnk);", "ITransactionResourcePool_GetResource_Proxy": "HRESULT WINAPI ITransactionResourcePool_GetResource_Proxy(ITransactionResourcePool *This,IObjPool *pPool,IUnknown **ppUnk);", "MTSCreateActivity": "EXTERN_C HRESULT WINAPI MTSCreateActivity (REFIID riid,void **ppobj);", "IMTSCall_OnCall_Proxy": "HRESULT WINAPI IMTSCall_OnCall_Proxy(IMTSCall *This);", "IContextProperties_Count_Proxy": "HRESULT WINAPI IContextProperties_Count_Proxy(IContextProperties *This,__LONG32 *plCount);", "IContextProperties_GetProperty_Proxy": "HRESULT WINAPI IContextProperties_GetProperty_Proxy(IContextProperties *This,BSTR name,VARIANT *pProperty);", "IContextProperties_EnumNames_Proxy": "HRESULT WINAPI IContextProperties_EnumNames_Proxy(IContextProperties *This,IEnumNames **ppenum);", "IContextProperties_SetProperty_Proxy": "HRESULT WINAPI IContextProperties_SetProperty_Proxy(IContextProperties *This,BSTR name,VARIANT property);", "IContextProperties_RemoveProperty_Proxy": "HRESULT WINAPI IContextProperties_RemoveProperty_Proxy(IContextProperties *This,BSTR name);", "IObjPool_Reserved1_Proxy": "void WINAPI IObjPool_Reserved1_Proxy(IObjPool *This);", "IObjPool_Reserved2_Proxy": "void WINAPI IObjPool_Reserved2_Proxy(IObjPool *This);", "IObjPool_Reserved3_Proxy": "void WINAPI IObjPool_Reserved3_Proxy(IObjPool *This);", "IObjPool_Reserved4_Proxy": "void WINAPI IObjPool_Reserved4_Proxy(IObjPool *This);", "IObjPool_PutEndTx_Proxy": "void WINAPI IObjPool_PutEndTx_Proxy(IObjPool *This,IUnknown *pObj);", "IObjPool_Reserved5_Proxy": "void WINAPI IObjPool_Reserved5_Proxy(IObjPool *This);", "IObjPool_Reserved6_Proxy": "void WINAPI IObjPool_Reserved6_Proxy(IObjPool *This);", "ITransactionProperty_Reserved1_Proxy": "void WINAPI ITransactionProperty_Reserved1_Proxy(ITransactionProperty *This);", "ITransactionProperty_Reserved2_Proxy": "void WINAPI ITransactionProperty_Reserved2_Proxy(ITransactionProperty *This);", "ITransactionProperty_Reserved3_Proxy": "void WINAPI ITransactionProperty_Reserved3_Proxy(ITransactionProperty *This);", "ITransactionProperty_Reserved4_Proxy": "void WINAPI ITransactionProperty_Reserved4_Proxy(ITransactionProperty *This);", "ITransactionProperty_Reserved5_Proxy": "void WINAPI ITransactionProperty_Reserved5_Proxy(ITransactionProperty *This);", "ITransactionProperty_Reserved6_Proxy": "void WINAPI ITransactionProperty_Reserved6_Proxy(ITransactionProperty *This);", "ITransactionProperty_Reserved7_Proxy": "void WINAPI ITransactionProperty_Reserved7_Proxy(ITransactionProperty *This);", "ITransactionProperty_Reserved8_Proxy": "void WINAPI ITransactionProperty_Reserved8_Proxy(ITransactionProperty *This);", "ITransactionProperty_Reserved9_Proxy": "void WINAPI ITransactionProperty_Reserved9_Proxy(ITransactionProperty *This);", "ITransactionProperty_GetTransactionResourcePool_Proxy": "HRESULT WINAPI ITransactionProperty_GetTransactionResourcePool_Proxy(ITransactionProperty *This,ITransactionResourcePool **ppTxPool);", "ITransactionProperty_Reserved10_Proxy": "void WINAPI ITransactionProperty_Reserved10_Proxy(ITransactionProperty *This);", "ITransactionProperty_Reserved11_Proxy": "void WINAPI ITransactionProperty_Reserved11_Proxy(ITransactionProperty *This);", "ITransactionProperty_Reserved12_Proxy": "void WINAPI ITransactionProperty_Reserved12_Proxy(ITransactionProperty *This);", "ITransactionProperty_Reserved13_Proxy": "void WINAPI ITransactionProperty_Reserved13_Proxy(ITransactionProperty *This);", "ITransactionProperty_Reserved14_Proxy": "void WINAPI ITransactionProperty_Reserved14_Proxy(ITransactionProperty *This);", "ITransactionProperty_Reserved15_Proxy": "void WINAPI ITransactionProperty_Reserved15_Proxy(ITransactionProperty *This);", "ITransactionProperty_Reserved16_Proxy": "void WINAPI ITransactionProperty_Reserved16_Proxy(ITransactionProperty *This);", "ITransactionProperty_Reserved17_Proxy": "void WINAPI ITransactionProperty_Reserved17_Proxy(ITransactionProperty *This);", "IMTSActivity_SynchronousCall_Proxy": "HRESULT WINAPI IMTSActivity_SynchronousCall_Proxy(IMTSActivity *This,IMTSCall *pCall);", "IMTSActivity_AsyncCall_Proxy": "HRESULT WINAPI IMTSActivity_AsyncCall_Proxy(IMTSActivity *This,IMTSCall *pCall);", "IMTSActivity_Reserved1_Proxy": "void WINAPI IMTSActivity_Reserved1_Proxy(IMTSActivity *This);", "IMTSActivity_BindToCurrentThread_Proxy": "HRESULT WINAPI IMTSActivity_BindToCurrentThread_Proxy(IMTSActivity *This);", "IMTSActivity_UnbindFromThread_Proxy": "HRESULT WINAPI IMTSActivity_UnbindFromThread_Proxy(IMTSActivity *This);", "IADs_get_Name_Proxy": "HRESULT WINAPI IADs_get_Name_Proxy(IADs *This,BSTR *retval);", "IADs_get_Class_Proxy": "HRESULT WINAPI IADs_get_Class_Proxy(IADs *This,BSTR *retval);", "IADs_get_GUID_Proxy": "HRESULT WINAPI IADs_get_GUID_Proxy(IADs *This,BSTR *retval);", "IADs_get_ADsPath_Proxy": "HRESULT WINAPI IADs_get_ADsPath_Proxy(IADs *This,BSTR *retval);", "IADs_get_Parent_Proxy": "HRESULT WINAPI IADs_get_Parent_Proxy(IADs *This,BSTR *retval);", "IADs_get_Schema_Proxy": "HRESULT WINAPI IADs_get_Schema_Proxy(IADs *This,BSTR *retval);", "IADs_GetInfo_Proxy": "HRESULT WINAPI IADs_GetInfo_Proxy(IADs *This);", "IADs_SetInfo_Proxy": "HRESULT WINAPI IADs_SetInfo_Proxy(IADs *This);", "IADs_Get_Proxy": "HRESULT WINAPI IADs_Get_Proxy(IADs *This,BSTR bstrName,VARIANT *pvProp);", "IADs_Put_Proxy": "HRESULT WINAPI IADs_Put_Proxy(IADs *This,BSTR bstrName,VARIANT vProp);", "IADs_GetEx_Proxy": "HRESULT WINAPI IADs_GetEx_Proxy(IADs *This,BSTR bstrName,VARIANT *pvProp);", "IADs_PutEx_Proxy": "HRESULT WINAPI IADs_PutEx_Proxy(IADs *This,__LONG32 lnControlCode,BSTR bstrName,VARIANT vProp);", "IADs_GetInfoEx_Proxy": "HRESULT WINAPI IADs_GetInfoEx_Proxy(IADs *This,VARIANT vProperties,__LONG32 lnReserved);", "IADsContainer_get_Count_Proxy": "HRESULT WINAPI IADsContainer_get_Count_Proxy(IADsContainer *This,__LONG32 *retval);", "IADsContainer_get__NewEnum_Proxy": "HRESULT WINAPI IADsContainer_get__NewEnum_Proxy(IADsContainer *This,IUnknown **retval);", "IADsContainer_get_Filter_Proxy": "HRESULT WINAPI IADsContainer_get_Filter_Proxy(IADsContainer *This,VARIANT *pVar);", "IADsContainer_put_Filter_Proxy": "HRESULT WINAPI IADsContainer_put_Filter_Proxy(IADsContainer *This,VARIANT Var);", "IADsContainer_get_Hints_Proxy": "HRESULT WINAPI IADsContainer_get_Hints_Proxy(IADsContainer *This,VARIANT *pvFilter);", "IADsContainer_put_Hints_Proxy": "HRESULT WINAPI IADsContainer_put_Hints_Proxy(IADsContainer *This,VARIANT vHints);", "IADsContainer_GetObject_Proxy": "HRESULT WINAPI IADsContainer_GetObject_Proxy(IADsContainer *This,BSTR ClassName,BSTR RelativeName,IDispatch **ppObject);", "IADsContainer_Create_Proxy": "HRESULT WINAPI IADsContainer_Create_Proxy(IADsContainer *This,BSTR ClassName,BSTR RelativeName,IDispatch **ppObject);", "IADsContainer_Delete_Proxy": "HRESULT WINAPI IADsContainer_Delete_Proxy(IADsContainer *This,BSTR bstrClassName,BSTR bstrRelativeName);", "IADsContainer_CopyHere_Proxy": "HRESULT WINAPI IADsContainer_CopyHere_Proxy(IADsContainer *This,BSTR SourceName,BSTR NewName,IDispatch **ppObject);", "IADsContainer_MoveHere_Proxy": "HRESULT WINAPI IADsContainer_MoveHere_Proxy(IADsContainer *This,BSTR SourceName,BSTR NewName,IDispatch **ppObject);", "IADsCollection_get__NewEnum_Proxy": "HRESULT WINAPI IADsCollection_get__NewEnum_Proxy(IADsCollection *This,IUnknown **ppEnumerator);", "IADsCollection_Add_Proxy": "HRESULT WINAPI IADsCollection_Add_Proxy(IADsCollection *This,BSTR bstrName,VARIANT vItem);", "IADsCollection_Remove_Proxy": "HRESULT WINAPI IADsCollection_Remove_Proxy(IADsCollection *This,BSTR bstrItemToBeRemoved);", "IADsCollection_GetObject_Proxy": "HRESULT WINAPI IADsCollection_GetObject_Proxy(IADsCollection *This,BSTR bstrName,VARIANT *pvItem);", "IADsMembers_get_Count_Proxy": "HRESULT WINAPI IADsMembers_get_Count_Proxy(IADsMembers *This,__LONG32 *plCount);", "IADsMembers_get__NewEnum_Proxy": "HRESULT WINAPI IADsMembers_get__NewEnum_Proxy(IADsMembers *This,IUnknown **ppEnumerator);", "IADsMembers_get_Filter_Proxy": "HRESULT WINAPI IADsMembers_get_Filter_Proxy(IADsMembers *This,VARIANT *pvFilter);", "IADsMembers_put_Filter_Proxy": "HRESULT WINAPI IADsMembers_put_Filter_Proxy(IADsMembers *This,VARIANT pvFilter);", "IADsPropertyList_get_PropertyCount_Proxy": "HRESULT WINAPI IADsPropertyList_get_PropertyCount_Proxy(IADsPropertyList *This,__LONG32 *plCount);", "IADsPropertyList_Next_Proxy": "HRESULT WINAPI IADsPropertyList_Next_Proxy(IADsPropertyList *This,VARIANT *pVariant);", "IADsPropertyList_Skip_Proxy": "HRESULT WINAPI IADsPropertyList_Skip_Proxy(IADsPropertyList *This,__LONG32 cElements);", "IADsPropertyList_Reset_Proxy": "HRESULT WINAPI IADsPropertyList_Reset_Proxy(IADsPropertyList *This);", "IADsPropertyList_Item_Proxy": "HRESULT WINAPI IADsPropertyList_Item_Proxy(IADsPropertyList *This,VARIANT varIndex,VARIANT *pVariant);", "IADsPropertyList_GetPropertyItem_Proxy": "HRESULT WINAPI IADsPropertyList_GetPropertyItem_Proxy(IADsPropertyList *This,BSTR bstrName,LONG lnADsType,VARIANT *pVariant);", "IADsPropertyList_PutPropertyItem_Proxy": "HRESULT WINAPI IADsPropertyList_PutPropertyItem_Proxy(IADsPropertyList *This,VARIANT varData);", "IADsPropertyList_ResetPropertyItem_Proxy": "HRESULT WINAPI IADsPropertyList_ResetPropertyItem_Proxy(IADsPropertyList *This,VARIANT varEntry);", "IADsPropertyList_PurgePropertyList_Proxy": "HRESULT WINAPI IADsPropertyList_PurgePropertyList_Proxy(IADsPropertyList *This);", "IADsPropertyEntry_Clear_Proxy": "HRESULT WINAPI IADsPropertyEntry_Clear_Proxy(IADsPropertyEntry *This);", "IADsPropertyEntry_get_Name_Proxy": "HRESULT WINAPI IADsPropertyEntry_get_Name_Proxy(IADsPropertyEntry *This,BSTR *retval);", "IADsPropertyEntry_put_Name_Proxy": "HRESULT WINAPI IADsPropertyEntry_put_Name_Proxy(IADsPropertyEntry *This,BSTR bstrName);", "IADsPropertyEntry_get_ADsType_Proxy": "HRESULT WINAPI IADsPropertyEntry_get_ADsType_Proxy(IADsPropertyEntry *This,__LONG32 *retval);", "IADsPropertyEntry_put_ADsType_Proxy": "HRESULT WINAPI IADsPropertyEntry_put_ADsType_Proxy(IADsPropertyEntry *This,__LONG32 lnADsType);", "IADsPropertyEntry_get_ControlCode_Proxy": "HRESULT WINAPI IADsPropertyEntry_get_ControlCode_Proxy(IADsPropertyEntry *This,__LONG32 *retval);", "IADsPropertyEntry_put_ControlCode_Proxy": "HRESULT WINAPI IADsPropertyEntry_put_ControlCode_Proxy(IADsPropertyEntry *This,__LONG32 lnControlCode);", "IADsPropertyEntry_get_Values_Proxy": "HRESULT WINAPI IADsPropertyEntry_get_Values_Proxy(IADsPropertyEntry *This,VARIANT *retval);", "IADsPropertyEntry_put_Values_Proxy": "HRESULT WINAPI IADsPropertyEntry_put_Values_Proxy(IADsPropertyEntry *This,VARIANT vValues);", "IADsPropertyValue_Clear_Proxy": "HRESULT WINAPI IADsPropertyValue_Clear_Proxy(IADsPropertyValue *This);", "IADsPropertyValue_get_ADsType_Proxy": "HRESULT WINAPI IADsPropertyValue_get_ADsType_Proxy(IADsPropertyValue *This,__LONG32 *retval);", "IADsPropertyValue_put_ADsType_Proxy": "HRESULT WINAPI IADsPropertyValue_put_ADsType_Proxy(IADsPropertyValue *This,__LONG32 lnADsType);", "IADsPropertyValue_get_DNString_Proxy": "HRESULT WINAPI IADsPropertyValue_get_DNString_Proxy(IADsPropertyValue *This,BSTR *retval);", "IADsPropertyValue_put_DNString_Proxy": "HRESULT WINAPI IADsPropertyValue_put_DNString_Proxy(IADsPropertyValue *This,BSTR bstrDNString);", "IADsPropertyValue_get_CaseExactString_Proxy": "HRESULT WINAPI IADsPropertyValue_get_CaseExactString_Proxy(IADsPropertyValue *This,BSTR *retval);", "IADsPropertyValue_put_CaseExactString_Proxy": "HRESULT WINAPI IADsPropertyValue_put_CaseExactString_Proxy(IADsPropertyValue *This,BSTR bstrCaseExactString);", "IADsPropertyValue_get_CaseIgnoreString_Proxy": "HRESULT WINAPI IADsPropertyValue_get_CaseIgnoreString_Proxy(IADsPropertyValue *This,BSTR *retval);", "IADsPropertyValue_put_CaseIgnoreString_Proxy": "HRESULT WINAPI IADsPropertyValue_put_CaseIgnoreString_Proxy(IADsPropertyValue *This,BSTR bstrCaseIgnoreString);", "IADsPropertyValue_get_PrintableString_Proxy": "HRESULT WINAPI IADsPropertyValue_get_PrintableString_Proxy(IADsPropertyValue *This,BSTR *retval);", "IADsPropertyValue_put_PrintableString_Proxy": "HRESULT WINAPI IADsPropertyValue_put_PrintableString_Proxy(IADsPropertyValue *This,BSTR bstrPrintableString);", "IADsPropertyValue_get_NumericString_Proxy": "HRESULT WINAPI IADsPropertyValue_get_NumericString_Proxy(IADsPropertyValue *This,BSTR *retval);", "IADsPropertyValue_put_NumericString_Proxy": "HRESULT WINAPI IADsPropertyValue_put_NumericString_Proxy(IADsPropertyValue *This,BSTR bstrNumericString);", "IADsPropertyValue_get_Boolean_Proxy": "HRESULT WINAPI IADsPropertyValue_get_Boolean_Proxy(IADsPropertyValue *This,__LONG32 *retval);", "IADsPropertyValue_put_Boolean_Proxy": "HRESULT WINAPI IADsPropertyValue_put_Boolean_Proxy(IADsPropertyValue *This,__LONG32 lnBoolean);", "IADsPropertyValue_get_Integer_Proxy": "HRESULT WINAPI IADsPropertyValue_get_Integer_Proxy(IADsPropertyValue *This,__LONG32 *retval);", "IADsPropertyValue_put_Integer_Proxy": "HRESULT WINAPI IADsPropertyValue_put_Integer_Proxy(IADsPropertyValue *This,__LONG32 lnInteger);", "IADsPropertyValue_get_OctetString_Proxy": "HRESULT WINAPI IADsPropertyValue_get_OctetString_Proxy(IADsPropertyValue *This,VARIANT *retval);", "IADsPropertyValue_put_OctetString_Proxy": "HRESULT WINAPI IADsPropertyValue_put_OctetString_Proxy(IADsPropertyValue *This,VARIANT vOctetString);", "IADsPropertyValue_get_SecurityDescriptor_Proxy": "HRESULT WINAPI IADsPropertyValue_get_SecurityDescriptor_Proxy(IADsPropertyValue *This,IDispatch **retval);", "IADsPropertyValue_put_SecurityDescriptor_Proxy": "HRESULT WINAPI IADsPropertyValue_put_SecurityDescriptor_Proxy(IADsPropertyValue *This,IDispatch *pSecurityDescriptor);", "IADsPropertyValue_get_LargeInteger_Proxy": "HRESULT WINAPI IADsPropertyValue_get_LargeInteger_Proxy(IADsPropertyValue *This,IDispatch **retval);", "IADsPropertyValue_put_LargeInteger_Proxy": "HRESULT WINAPI IADsPropertyValue_put_LargeInteger_Proxy(IADsPropertyValue *This,IDispatch *pLargeInteger);", "IADsPropertyValue_get_UTCTime_Proxy": "HRESULT WINAPI IADsPropertyValue_get_UTCTime_Proxy(IADsPropertyValue *This,DATE *retval);", "IADsPropertyValue_put_UTCTime_Proxy": "HRESULT WINAPI IADsPropertyValue_put_UTCTime_Proxy(IADsPropertyValue *This,DATE daUTCTime);", "IADsPropertyValue2_GetObjectProperty_Proxy": "HRESULT WINAPI IADsPropertyValue2_GetObjectProperty_Proxy(IADsPropertyValue2 *This,__LONG32 *lnADsType,VARIANT *pvProp);", "IADsPropertyValue2_PutObjectProperty_Proxy": "HRESULT WINAPI IADsPropertyValue2_PutObjectProperty_Proxy(IADsPropertyValue2 *This,__LONG32 lnADsType,VARIANT vProp);", "IPrivateDispatch_ADSIInitializeDispatchManager_Proxy": "HRESULT WINAPI IPrivateDispatch_ADSIInitializeDispatchManager_Proxy(IPrivateDispatch *This,__LONG32 dwExtensionId);", "IPrivateDispatch_ADSIGetTypeInfoCount_Proxy": "HRESULT WINAPI IPrivateDispatch_ADSIGetTypeInfoCount_Proxy(IPrivateDispatch *This,UINT *pctinfo);", "IPrivateDispatch_ADSIGetTypeInfo_Proxy": "HRESULT WINAPI IPrivateDispatch_ADSIGetTypeInfo_Proxy(IPrivateDispatch *This,UINT itinfo,LCID lcid,ITypeInfo **pptinfo);", "IPrivateDispatch_ADSIGetIDsOfNames_Proxy": "HRESULT WINAPI IPrivateDispatch_ADSIGetIDsOfNames_Proxy(IPrivateDispatch *This,REFIID riid,OLECHAR **rgszNames,UINT cNames,LCID lcid,DISPID *rgdispid);", "IPrivateDispatch_ADSIInvoke_Proxy": "HRESULT WINAPI IPrivateDispatch_ADSIInvoke_Proxy(IPrivateDispatch *This,DISPID dispidMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pdispparams,VARIANT *pvarResult,EXCEPINFO *pexcepinfo,UINT *puArgErr);", "IPrivateUnknown_ADSIInitializeObject_Proxy": "HRESULT WINAPI IPrivateUnknown_ADSIInitializeObject_Proxy(IPrivateUnknown *This,BSTR lpszUserName,BSTR lpszPassword,__LONG32 lnReserved);", "IPrivateUnknown_ADSIReleaseObject_Proxy": "HRESULT WINAPI IPrivateUnknown_ADSIReleaseObject_Proxy(IPrivateUnknown *This);", "IADsExtension_Operate_Proxy": "HRESULT WINAPI IADsExtension_Operate_Proxy(IADsExtension *This,DWORD dwCode,VARIANT varData1,VARIANT varData2,VARIANT varData3);", "IADsExtension_PrivateGetIDsOfNames_Proxy": "HRESULT WINAPI IADsExtension_PrivateGetIDsOfNames_Proxy(IADsExtension *This,REFIID riid,OLECHAR **rgszNames,unsigned int cNames,LCID lcid,DISPID *rgDispid);", "IADsExtension_PrivateInvoke_Proxy": "HRESULT WINAPI IADsExtension_PrivateInvoke_Proxy(IADsExtension *This,DISPID dispidMember,REFIID riid,LCID lcid,WORD wFlags,DISPPARAMS *pdispparams,VARIANT *pvarResult,EXCEPINFO *pexcepinfo,unsigned int *puArgErr);", "IADsDeleteOps_DeleteObject_Proxy": "HRESULT WINAPI IADsDeleteOps_DeleteObject_Proxy(IADsDeleteOps *This,__LONG32 lnFlags);", "IADsNamespaces_get_DefaultContainer_Proxy": "HRESULT WINAPI IADsNamespaces_get_DefaultContainer_Proxy(IADsNamespaces *This,BSTR *retval);", "IADsNamespaces_put_DefaultContainer_Proxy": "HRESULT WINAPI IADsNamespaces_put_DefaultContainer_Proxy(IADsNamespaces *This,BSTR bstrDefaultContainer);", "IADsClass_get_PrimaryInterface_Proxy": "HRESULT WINAPI IADsClass_get_PrimaryInterface_Proxy(IADsClass *This,BSTR *retval);", "IADsClass_get_CLSID_Proxy": "HRESULT WINAPI IADsClass_get_CLSID_Proxy(IADsClass *This,BSTR *retval);", "IADsClass_put_CLSID_Proxy": "HRESULT WINAPI IADsClass_put_CLSID_Proxy(IADsClass *This,BSTR bstrCLSID);", "IADsClass_get_OID_Proxy": "HRESULT WINAPI IADsClass_get_OID_Proxy(IADsClass *This,BSTR *retval);", "IADsClass_put_OID_Proxy": "HRESULT WINAPI IADsClass_put_OID_Proxy(IADsClass *This,BSTR bstrOID);", "IADsClass_get_Abstract_Proxy": "HRESULT WINAPI IADsClass_get_Abstract_Proxy(IADsClass *This,VARIANT_BOOL *retval);", "IADsClass_put_Abstract_Proxy": "HRESULT WINAPI IADsClass_put_Abstract_Proxy(IADsClass *This,VARIANT_BOOL fAbstract);", "IADsClass_get_Auxiliary_Proxy": "HRESULT WINAPI IADsClass_get_Auxiliary_Proxy(IADsClass *This,VARIANT_BOOL *retval);", "IADsClass_put_Auxiliary_Proxy": "HRESULT WINAPI IADsClass_put_Auxiliary_Proxy(IADsClass *This,VARIANT_BOOL fAuxiliary);", "IADsClass_get_MandatoryProperties_Proxy": "HRESULT WINAPI IADsClass_get_MandatoryProperties_Proxy(IADsClass *This,VARIANT *retval);", "IADsClass_put_MandatoryProperties_Proxy": "HRESULT WINAPI IADsClass_put_MandatoryProperties_Proxy(IADsClass *This,VARIANT vMandatoryProperties);", "IADsClass_get_OptionalProperties_Proxy": "HRESULT WINAPI IADsClass_get_OptionalProperties_Proxy(IADsClass *This,VARIANT *retval);", "IADsClass_put_OptionalProperties_Proxy": "HRESULT WINAPI IADsClass_put_OptionalProperties_Proxy(IADsClass *This,VARIANT vOptionalProperties);", "IADsClass_get_NamingProperties_Proxy": "HRESULT WINAPI IADsClass_get_NamingProperties_Proxy(IADsClass *This,VARIANT *retval);", "IADsClass_put_NamingProperties_Proxy": "HRESULT WINAPI IADsClass_put_NamingProperties_Proxy(IADsClass *This,VARIANT vNamingProperties);", "IADsClass_get_DerivedFrom_Proxy": "HRESULT WINAPI IADsClass_get_DerivedFrom_Proxy(IADsClass *This,VARIANT *retval);", "IADsClass_put_DerivedFrom_Proxy": "HRESULT WINAPI IADsClass_put_DerivedFrom_Proxy(IADsClass *This,VARIANT vDerivedFrom);", "IADsClass_get_AuxDerivedFrom_Proxy": "HRESULT WINAPI IADsClass_get_AuxDerivedFrom_Proxy(IADsClass *This,VARIANT *retval);", "IADsClass_put_AuxDerivedFrom_Proxy": "HRESULT WINAPI IADsClass_put_AuxDerivedFrom_Proxy(IADsClass *This,VARIANT vAuxDerivedFrom);", "IADsClass_get_PossibleSuperiors_Proxy": "HRESULT WINAPI IADsClass_get_PossibleSuperiors_Proxy(IADsClass *This,VARIANT *retval);", "IADsClass_put_PossibleSuperiors_Proxy": "HRESULT WINAPI IADsClass_put_PossibleSuperiors_Proxy(IADsClass *This,VARIANT vPossibleSuperiors);", "IADsClass_get_Containment_Proxy": "HRESULT WINAPI IADsClass_get_Containment_Proxy(IADsClass *This,VARIANT *retval);", "IADsClass_put_Containment_Proxy": "HRESULT WINAPI IADsClass_put_Containment_Proxy(IADsClass *This,VARIANT vContainment);", "IADsClass_get_Container_Proxy": "HRESULT WINAPI IADsClass_get_Container_Proxy(IADsClass *This,VARIANT_BOOL *retval);", "IADsClass_put_Container_Proxy": "HRESULT WINAPI IADsClass_put_Container_Proxy(IADsClass *This,VARIANT_BOOL fContainer);", "IADsClass_get_HelpFileName_Proxy": "HRESULT WINAPI IADsClass_get_HelpFileName_Proxy(IADsClass *This,BSTR *retval);", "IADsClass_put_HelpFileName_Proxy": "HRESULT WINAPI IADsClass_put_HelpFileName_Proxy(IADsClass *This,BSTR bstrHelpFileName);", "IADsClass_get_HelpFileContext_Proxy": "HRESULT WINAPI IADsClass_get_HelpFileContext_Proxy(IADsClass *This,__LONG32 *retval);", "IADsClass_put_HelpFileContext_Proxy": "HRESULT WINAPI IADsClass_put_HelpFileContext_Proxy(IADsClass *This,__LONG32 lnHelpFileContext);", "IADsClass_Qualifiers_Proxy": "HRESULT WINAPI IADsClass_Qualifiers_Proxy(IADsClass *This,IADsCollection **ppQualifiers);", "IADsProperty_get_OID_Proxy": "HRESULT WINAPI IADsProperty_get_OID_Proxy(IADsProperty *This,BSTR *retval);", "IADsProperty_put_OID_Proxy": "HRESULT WINAPI IADsProperty_put_OID_Proxy(IADsProperty *This,BSTR bstrOID);", "IADsProperty_get_Syntax_Proxy": "HRESULT WINAPI IADsProperty_get_Syntax_Proxy(IADsProperty *This,BSTR *retval);", "IADsProperty_put_Syntax_Proxy": "HRESULT WINAPI IADsProperty_put_Syntax_Proxy(IADsProperty *This,BSTR bstrSyntax);", "IADsProperty_get_MaxRange_Proxy": "HRESULT WINAPI IADsProperty_get_MaxRange_Proxy(IADsProperty *This,__LONG32 *retval);", "IADsProperty_put_MaxRange_Proxy": "HRESULT WINAPI IADsProperty_put_MaxRange_Proxy(IADsProperty *This,__LONG32 lnMaxRange);", "IADsProperty_get_MinRange_Proxy": "HRESULT WINAPI IADsProperty_get_MinRange_Proxy(IADsProperty *This,__LONG32 *retval);", "IADsProperty_put_MinRange_Proxy": "HRESULT WINAPI IADsProperty_put_MinRange_Proxy(IADsProperty *This,__LONG32 lnMinRange);", "IADsProperty_get_MultiValued_Proxy": "HRESULT WINAPI IADsProperty_get_MultiValued_Proxy(IADsProperty *This,VARIANT_BOOL *retval);", "IADsProperty_put_MultiValued_Proxy": "HRESULT WINAPI IADsProperty_put_MultiValued_Proxy(IADsProperty *This,VARIANT_BOOL fMultiValued);", "IADsProperty_Qualifiers_Proxy": "HRESULT WINAPI IADsProperty_Qualifiers_Proxy(IADsProperty *This,IADsCollection **ppQualifiers);", "IADsSyntax_get_OleAutoDataType_Proxy": "HRESULT WINAPI IADsSyntax_get_OleAutoDataType_Proxy(IADsSyntax *This,__LONG32 *retval);", "IADsSyntax_put_OleAutoDataType_Proxy": "HRESULT WINAPI IADsSyntax_put_OleAutoDataType_Proxy(IADsSyntax *This,__LONG32 lnOleAutoDataType);", "IADsLocality_get_Description_Proxy": "HRESULT WINAPI IADsLocality_get_Description_Proxy(IADsLocality *This,BSTR *retval);", "IADsLocality_put_Description_Proxy": "HRESULT WINAPI IADsLocality_put_Description_Proxy(IADsLocality *This,BSTR bstrDescription);", "IADsLocality_get_LocalityName_Proxy": "HRESULT WINAPI IADsLocality_get_LocalityName_Proxy(IADsLocality *This,BSTR *retval);", "IADsLocality_put_LocalityName_Proxy": "HRESULT WINAPI IADsLocality_put_LocalityName_Proxy(IADsLocality *This,BSTR bstrLocalityName);", "IADsLocality_get_PostalAddress_Proxy": "HRESULT WINAPI IADsLocality_get_PostalAddress_Proxy(IADsLocality *This,BSTR *retval);", "IADsLocality_put_PostalAddress_Proxy": "HRESULT WINAPI IADsLocality_put_PostalAddress_Proxy(IADsLocality *This,BSTR bstrPostalAddress);", "IADsLocality_get_SeeAlso_Proxy": "HRESULT WINAPI IADsLocality_get_SeeAlso_Proxy(IADsLocality *This,VARIANT *retval);", "IADsLocality_put_SeeAlso_Proxy": "HRESULT WINAPI IADsLocality_put_SeeAlso_Proxy(IADsLocality *This,VARIANT vSeeAlso);", "IADsO_get_Description_Proxy": "HRESULT WINAPI IADsO_get_Description_Proxy(IADsO *This,BSTR *retval);", "IADsO_put_Description_Proxy": "HRESULT WINAPI IADsO_put_Description_Proxy(IADsO *This,BSTR bstrDescription);", "IADsO_get_LocalityName_Proxy": "HRESULT WINAPI IADsO_get_LocalityName_Proxy(IADsO *This,BSTR *retval);", "IADsO_put_LocalityName_Proxy": "HRESULT WINAPI IADsO_put_LocalityName_Proxy(IADsO *This,BSTR bstrLocalityName);", "IADsO_get_PostalAddress_Proxy": "HRESULT WINAPI IADsO_get_PostalAddress_Proxy(IADsO *This,BSTR *retval);", "IADsO_put_PostalAddress_Proxy": "HRESULT WINAPI IADsO_put_PostalAddress_Proxy(IADsO *This,BSTR bstrPostalAddress);", "IADsO_get_TelephoneNumber_Proxy": "HRESULT WINAPI IADsO_get_TelephoneNumber_Proxy(IADsO *This,BSTR *retval);", "IADsO_put_TelephoneNumber_Proxy": "HRESULT WINAPI IADsO_put_TelephoneNumber_Proxy(IADsO *This,BSTR bstrTelephoneNumber);", "IADsO_get_FaxNumber_Proxy": "HRESULT WINAPI IADsO_get_FaxNumber_Proxy(IADsO *This,BSTR *retval);", "IADsO_put_FaxNumber_Proxy": "HRESULT WINAPI IADsO_put_FaxNumber_Proxy(IADsO *This,BSTR bstrFaxNumber);", "IADsO_get_SeeAlso_Proxy": "HRESULT WINAPI IADsO_get_SeeAlso_Proxy(IADsO *This,VARIANT *retval);", "IADsO_put_SeeAlso_Proxy": "HRESULT WINAPI IADsO_put_SeeAlso_Proxy(IADsO *This,VARIANT vSeeAlso);", "IADsOU_get_Description_Proxy": "HRESULT WINAPI IADsOU_get_Description_Proxy(IADsOU *This,BSTR *retval);", "IADsOU_put_Description_Proxy": "HRESULT WINAPI IADsOU_put_Description_Proxy(IADsOU *This,BSTR bstrDescription);", "IADsOU_get_LocalityName_Proxy": "HRESULT WINAPI IADsOU_get_LocalityName_Proxy(IADsOU *This,BSTR *retval);", "IADsOU_put_LocalityName_Proxy": "HRESULT WINAPI IADsOU_put_LocalityName_Proxy(IADsOU *This,BSTR bstrLocalityName);", "IADsOU_get_PostalAddress_Proxy": "HRESULT WINAPI IADsOU_get_PostalAddress_Proxy(IADsOU *This,BSTR *retval);", "IADsOU_put_PostalAddress_Proxy": "HRESULT WINAPI IADsOU_put_PostalAddress_Proxy(IADsOU *This,BSTR bstrPostalAddress);", "IADsOU_get_TelephoneNumber_Proxy": "HRESULT WINAPI IADsOU_get_TelephoneNumber_Proxy(IADsOU *This,BSTR *retval);", "IADsOU_put_TelephoneNumber_Proxy": "HRESULT WINAPI IADsOU_put_TelephoneNumber_Proxy(IADsOU *This,BSTR bstrTelephoneNumber);", "IADsOU_get_FaxNumber_Proxy": "HRESULT WINAPI IADsOU_get_FaxNumber_Proxy(IADsOU *This,BSTR *retval);", "IADsOU_put_FaxNumber_Proxy": "HRESULT WINAPI IADsOU_put_FaxNumber_Proxy(IADsOU *This,BSTR bstrFaxNumber);", "IADsOU_get_SeeAlso_Proxy": "HRESULT WINAPI IADsOU_get_SeeAlso_Proxy(IADsOU *This,VARIANT *retval);", "IADsOU_put_SeeAlso_Proxy": "HRESULT WINAPI IADsOU_put_SeeAlso_Proxy(IADsOU *This,VARIANT vSeeAlso);", "IADsOU_get_BusinessCategory_Proxy": "HRESULT WINAPI IADsOU_get_BusinessCategory_Proxy(IADsOU *This,BSTR *retval);", "IADsOU_put_BusinessCategory_Proxy": "HRESULT WINAPI IADsOU_put_BusinessCategory_Proxy(IADsOU *This,BSTR bstrBusinessCategory);", "IADsDomain_get_IsWorkgroup_Proxy": "HRESULT WINAPI IADsDomain_get_IsWorkgroup_Proxy(IADsDomain *This,VARIANT_BOOL *retval);", "IADsDomain_get_MinPasswordLength_Proxy": "HRESULT WINAPI IADsDomain_get_MinPasswordLength_Proxy(IADsDomain *This,__LONG32 *retval);", "IADsDomain_put_MinPasswordLength_Proxy": "HRESULT WINAPI IADsDomain_put_MinPasswordLength_Proxy(IADsDomain *This,__LONG32 lnMinPasswordLength);", "IADsDomain_get_MinPasswordAge_Proxy": "HRESULT WINAPI IADsDomain_get_MinPasswordAge_Proxy(IADsDomain *This,__LONG32 *retval);", "IADsDomain_put_MinPasswordAge_Proxy": "HRESULT WINAPI IADsDomain_put_MinPasswordAge_Proxy(IADsDomain *This,__LONG32 lnMinPasswordAge);", "IADsDomain_get_MaxPasswordAge_Proxy": "HRESULT WINAPI IADsDomain_get_MaxPasswordAge_Proxy(IADsDomain *This,__LONG32 *retval);", "IADsDomain_put_MaxPasswordAge_Proxy": "HRESULT WINAPI IADsDomain_put_MaxPasswordAge_Proxy(IADsDomain *This,__LONG32 lnMaxPasswordAge);", "IADsDomain_get_MaxBadPasswordsAllowed_Proxy": "HRESULT WINAPI IADsDomain_get_MaxBadPasswordsAllowed_Proxy(IADsDomain *This,__LONG32 *retval);", "IADsDomain_put_MaxBadPasswordsAllowed_Proxy": "HRESULT WINAPI IADsDomain_put_MaxBadPasswordsAllowed_Proxy(IADsDomain *This,__LONG32 lnMaxBadPasswordsAllowed);", "IADsDomain_get_PasswordHistoryLength_Proxy": "HRESULT WINAPI IADsDomain_get_PasswordHistoryLength_Proxy(IADsDomain *This,__LONG32 *retval);", "IADsDomain_put_PasswordHistoryLength_Proxy": "HRESULT WINAPI IADsDomain_put_PasswordHistoryLength_Proxy(IADsDomain *This,__LONG32 lnPasswordHistoryLength);", "IADsDomain_get_PasswordAttributes_Proxy": "HRESULT WINAPI IADsDomain_get_PasswordAttributes_Proxy(IADsDomain *This,__LONG32 *retval);", "IADsDomain_put_PasswordAttributes_Proxy": "HRESULT WINAPI IADsDomain_put_PasswordAttributes_Proxy(IADsDomain *This,__LONG32 lnPasswordAttributes);", "IADsDomain_get_AutoUnlockInterval_Proxy": "HRESULT WINAPI IADsDomain_get_AutoUnlockInterval_Proxy(IADsDomain *This,__LONG32 *retval);", "IADsDomain_put_AutoUnlockInterval_Proxy": "HRESULT WINAPI IADsDomain_put_AutoUnlockInterval_Proxy(IADsDomain *This,__LONG32 lnAutoUnlockInterval);", "IADsDomain_get_LockoutObservationInterval_Proxy": "HRESULT WINAPI IADsDomain_get_LockoutObservationInterval_Proxy(IADsDomain *This,__LONG32 *retval);", "IADsDomain_put_LockoutObservationInterval_Proxy": "HRESULT WINAPI IADsDomain_put_LockoutObservationInterval_Proxy(IADsDomain *This,__LONG32 lnLockoutObservationInterval);", "IADsComputer_get_ComputerID_Proxy": "HRESULT WINAPI IADsComputer_get_ComputerID_Proxy(IADsComputer *This,BSTR *retval);", "IADsComputer_get_Site_Proxy": "HRESULT WINAPI IADsComputer_get_Site_Proxy(IADsComputer *This,BSTR *retval);", "IADsComputer_get_Description_Proxy": "HRESULT WINAPI IADsComputer_get_Description_Proxy(IADsComputer *This,BSTR *retval);", "IADsComputer_put_Description_Proxy": "HRESULT WINAPI IADsComputer_put_Description_Proxy(IADsComputer *This,BSTR bstrDescription);", "IADsComputer_get_Location_Proxy": "HRESULT WINAPI IADsComputer_get_Location_Proxy(IADsComputer *This,BSTR *retval);", "IADsComputer_put_Location_Proxy": "HRESULT WINAPI IADsComputer_put_Location_Proxy(IADsComputer *This,BSTR bstrLocation);", "IADsComputer_get_PrimaryUser_Proxy": "HRESULT WINAPI IADsComputer_get_PrimaryUser_Proxy(IADsComputer *This,BSTR *retval);", "IADsComputer_put_PrimaryUser_Proxy": "HRESULT WINAPI IADsComputer_put_PrimaryUser_Proxy(IADsComputer *This,BSTR bstrPrimaryUser);", "IADsComputer_get_Owner_Proxy": "HRESULT WINAPI IADsComputer_get_Owner_Proxy(IADsComputer *This,BSTR *retval);", "IADsComputer_put_Owner_Proxy": "HRESULT WINAPI IADsComputer_put_Owner_Proxy(IADsComputer *This,BSTR bstrOwner);", "IADsComputer_get_Division_Proxy": "HRESULT WINAPI IADsComputer_get_Division_Proxy(IADsComputer *This,BSTR *retval);", "IADsComputer_put_Division_Proxy": "HRESULT WINAPI IADsComputer_put_Division_Proxy(IADsComputer *This,BSTR bstrDivision);", "IADsComputer_get_Department_Proxy": "HRESULT WINAPI IADsComputer_get_Department_Proxy(IADsComputer *This,BSTR *retval);", "IADsComputer_put_Department_Proxy": "HRESULT WINAPI IADsComputer_put_Department_Proxy(IADsComputer *This,BSTR bstrDepartment);", "IADsComputer_get_Role_Proxy": "HRESULT WINAPI IADsComputer_get_Role_Proxy(IADsComputer *This,BSTR *retval);", "IADsComputer_put_Role_Proxy": "HRESULT WINAPI IADsComputer_put_Role_Proxy(IADsComputer *This,BSTR bstrRole);", "IADsComputer_get_OperatingSystem_Proxy": "HRESULT WINAPI IADsComputer_get_OperatingSystem_Proxy(IADsComputer *This,BSTR *retval);", "IADsComputer_put_OperatingSystem_Proxy": "HRESULT WINAPI IADsComputer_put_OperatingSystem_Proxy(IADsComputer *This,BSTR bstrOperatingSystem);", "IADsComputer_get_OperatingSystemVersion_Proxy": "HRESULT WINAPI IADsComputer_get_OperatingSystemVersion_Proxy(IADsComputer *This,BSTR *retval);", "IADsComputer_put_OperatingSystemVersion_Proxy": "HRESULT WINAPI IADsComputer_put_OperatingSystemVersion_Proxy(IADsComputer *This,BSTR bstrOperatingSystemVersion);", "IADsComputer_get_Model_Proxy": "HRESULT WINAPI IADsComputer_get_Model_Proxy(IADsComputer *This,BSTR *retval);", "IADsComputer_put_Model_Proxy": "HRESULT WINAPI IADsComputer_put_Model_Proxy(IADsComputer *This,BSTR bstrModel);", "IADsComputer_get_Processor_Proxy": "HRESULT WINAPI IADsComputer_get_Processor_Proxy(IADsComputer *This,BSTR *retval);", "IADsComputer_put_Processor_Proxy": "HRESULT WINAPI IADsComputer_put_Processor_Proxy(IADsComputer *This,BSTR bstrProcessor);", "IADsComputer_get_ProcessorCount_Proxy": "HRESULT WINAPI IADsComputer_get_ProcessorCount_Proxy(IADsComputer *This,BSTR *retval);", "IADsComputer_put_ProcessorCount_Proxy": "HRESULT WINAPI IADsComputer_put_ProcessorCount_Proxy(IADsComputer *This,BSTR bstrProcessorCount);", "IADsComputer_get_MemorySize_Proxy": "HRESULT WINAPI IADsComputer_get_MemorySize_Proxy(IADsComputer *This,BSTR *retval);", "IADsComputer_put_MemorySize_Proxy": "HRESULT WINAPI IADsComputer_put_MemorySize_Proxy(IADsComputer *This,BSTR bstrMemorySize);", "IADsComputer_get_StorageCapacity_Proxy": "HRESULT WINAPI IADsComputer_get_StorageCapacity_Proxy(IADsComputer *This,BSTR *retval);", "IADsComputer_put_StorageCapacity_Proxy": "HRESULT WINAPI IADsComputer_put_StorageCapacity_Proxy(IADsComputer *This,BSTR bstrStorageCapacity);", "IADsComputer_get_NetAddresses_Proxy": "HRESULT WINAPI IADsComputer_get_NetAddresses_Proxy(IADsComputer *This,VARIANT *retval);", "IADsComputer_put_NetAddresses_Proxy": "HRESULT WINAPI IADsComputer_put_NetAddresses_Proxy(IADsComputer *This,VARIANT vNetAddresses);", "IADsComputerOperations_Status_Proxy": "HRESULT WINAPI IADsComputerOperations_Status_Proxy(IADsComputerOperations *This,IDispatch **ppObject);", "IADsComputerOperations_Shutdown_Proxy": "HRESULT WINAPI IADsComputerOperations_Shutdown_Proxy(IADsComputerOperations *This,VARIANT_BOOL bReboot);", "IADsGroup_get_Description_Proxy": "HRESULT WINAPI IADsGroup_get_Description_Proxy(IADsGroup *This,BSTR *retval);", "IADsGroup_put_Description_Proxy": "HRESULT WINAPI IADsGroup_put_Description_Proxy(IADsGroup *This,BSTR bstrDescription);", "IADsGroup_Members_Proxy": "HRESULT WINAPI IADsGroup_Members_Proxy(IADsGroup *This,IADsMembers **ppMembers);", "IADsGroup_IsMember_Proxy": "HRESULT WINAPI IADsGroup_IsMember_Proxy(IADsGroup *This,BSTR bstrMember,VARIANT_BOOL *bMember);", "IADsGroup_Add_Proxy": "HRESULT WINAPI IADsGroup_Add_Proxy(IADsGroup *This,BSTR bstrNewItem);", "IADsGroup_Remove_Proxy": "HRESULT WINAPI IADsGroup_Remove_Proxy(IADsGroup *This,BSTR bstrItemToBeRemoved);", "IADsUser_get_BadLoginAddress_Proxy": "HRESULT WINAPI IADsUser_get_BadLoginAddress_Proxy(IADsUser *This,BSTR *retval);", "IADsUser_get_BadLoginCount_Proxy": "HRESULT WINAPI IADsUser_get_BadLoginCount_Proxy(IADsUser *This,__LONG32 *retval);", "IADsUser_get_LastLogin_Proxy": "HRESULT WINAPI IADsUser_get_LastLogin_Proxy(IADsUser *This,DATE *retval);", "IADsUser_get_LastLogoff_Proxy": "HRESULT WINAPI IADsUser_get_LastLogoff_Proxy(IADsUser *This,DATE *retval);", "IADsUser_get_LastFailedLogin_Proxy": "HRESULT WINAPI IADsUser_get_LastFailedLogin_Proxy(IADsUser *This,DATE *retval);", "IADsUser_get_PasswordLastChanged_Proxy": "HRESULT WINAPI IADsUser_get_PasswordLastChanged_Proxy(IADsUser *This,DATE *retval);", "IADsUser_get_Description_Proxy": "HRESULT WINAPI IADsUser_get_Description_Proxy(IADsUser *This,BSTR *retval);", "IADsUser_put_Description_Proxy": "HRESULT WINAPI IADsUser_put_Description_Proxy(IADsUser *This,BSTR bstrDescription);", "IADsUser_get_Division_Proxy": "HRESULT WINAPI IADsUser_get_Division_Proxy(IADsUser *This,BSTR *retval);", "IADsUser_put_Division_Proxy": "HRESULT WINAPI IADsUser_put_Division_Proxy(IADsUser *This,BSTR bstrDivision);", "IADsUser_get_Department_Proxy": "HRESULT WINAPI IADsUser_get_Department_Proxy(IADsUser *This,BSTR *retval);", "IADsUser_put_Department_Proxy": "HRESULT WINAPI IADsUser_put_Department_Proxy(IADsUser *This,BSTR bstrDepartment);", "IADsUser_get_EmployeeID_Proxy": "HRESULT WINAPI IADsUser_get_EmployeeID_Proxy(IADsUser *This,BSTR *retval);", "IADsUser_put_EmployeeID_Proxy": "HRESULT WINAPI IADsUser_put_EmployeeID_Proxy(IADsUser *This,BSTR bstrEmployeeID);", "IADsUser_get_FullName_Proxy": "HRESULT WINAPI IADsUser_get_FullName_Proxy(IADsUser *This,BSTR *retval);", "IADsUser_put_FullName_Proxy": "HRESULT WINAPI IADsUser_put_FullName_Proxy(IADsUser *This,BSTR bstrFullName);", "IADsUser_get_FirstName_Proxy": "HRESULT WINAPI IADsUser_get_FirstName_Proxy(IADsUser *This,BSTR *retval);", "IADsUser_put_FirstName_Proxy": "HRESULT WINAPI IADsUser_put_FirstName_Proxy(IADsUser *This,BSTR bstrFirstName);", "IADsUser_get_LastName_Proxy": "HRESULT WINAPI IADsUser_get_LastName_Proxy(IADsUser *This,BSTR *retval);", "IADsUser_put_LastName_Proxy": "HRESULT WINAPI IADsUser_put_LastName_Proxy(IADsUser *This,BSTR bstrLastName);", "IADsUser_get_OtherName_Proxy": "HRESULT WINAPI IADsUser_get_OtherName_Proxy(IADsUser *This,BSTR *retval);", "IADsUser_put_OtherName_Proxy": "HRESULT WINAPI IADsUser_put_OtherName_Proxy(IADsUser *This,BSTR bstrOtherName);", "IADsUser_get_NamePrefix_Proxy": "HRESULT WINAPI IADsUser_get_NamePrefix_Proxy(IADsUser *This,BSTR *retval);", "IADsUser_put_NamePrefix_Proxy": "HRESULT WINAPI IADsUser_put_NamePrefix_Proxy(IADsUser *This,BSTR bstrNamePrefix);", "IADsUser_get_NameSuffix_Proxy": "HRESULT WINAPI IADsUser_get_NameSuffix_Proxy(IADsUser *This,BSTR *retval);", "IADsUser_put_NameSuffix_Proxy": "HRESULT WINAPI IADsUser_put_NameSuffix_Proxy(IADsUser *This,BSTR bstrNameSuffix);", "IADsUser_get_Title_Proxy": "HRESULT WINAPI IADsUser_get_Title_Proxy(IADsUser *This,BSTR *retval);", "IADsUser_put_Title_Proxy": "HRESULT WINAPI IADsUser_put_Title_Proxy(IADsUser *This,BSTR bstrTitle);", "IADsUser_get_Manager_Proxy": "HRESULT WINAPI IADsUser_get_Manager_Proxy(IADsUser *This,BSTR *retval);", "IADsUser_put_Manager_Proxy": "HRESULT WINAPI IADsUser_put_Manager_Proxy(IADsUser *This,BSTR bstrManager);", "IADsUser_get_TelephoneHome_Proxy": "HRESULT WINAPI IADsUser_get_TelephoneHome_Proxy(IADsUser *This,VARIANT *retval);", "IADsUser_put_TelephoneHome_Proxy": "HRESULT WINAPI IADsUser_put_TelephoneHome_Proxy(IADsUser *This,VARIANT vTelephoneHome);", "IADsUser_get_TelephoneMobile_Proxy": "HRESULT WINAPI IADsUser_get_TelephoneMobile_Proxy(IADsUser *This,VARIANT *retval);", "IADsUser_put_TelephoneMobile_Proxy": "HRESULT WINAPI IADsUser_put_TelephoneMobile_Proxy(IADsUser *This,VARIANT vTelephoneMobile);", "IADsUser_get_TelephoneNumber_Proxy": "HRESULT WINAPI IADsUser_get_TelephoneNumber_Proxy(IADsUser *This,VARIANT *retval);", "IADsUser_put_TelephoneNumber_Proxy": "HRESULT WINAPI IADsUser_put_TelephoneNumber_Proxy(IADsUser *This,VARIANT vTelephoneNumber);", "IADsUser_get_TelephonePager_Proxy": "HRESULT WINAPI IADsUser_get_TelephonePager_Proxy(IADsUser *This,VARIANT *retval);", "IADsUser_put_TelephonePager_Proxy": "HRESULT WINAPI IADsUser_put_TelephonePager_Proxy(IADsUser *This,VARIANT vTelephonePager);", "IADsUser_get_FaxNumber_Proxy": "HRESULT WINAPI IADsUser_get_FaxNumber_Proxy(IADsUser *This,VARIANT *retval);", "IADsUser_put_FaxNumber_Proxy": "HRESULT WINAPI IADsUser_put_FaxNumber_Proxy(IADsUser *This,VARIANT vFaxNumber);", "IADsUser_get_OfficeLocations_Proxy": "HRESULT WINAPI IADsUser_get_OfficeLocations_Proxy(IADsUser *This,VARIANT *retval);", "IADsUser_put_OfficeLocations_Proxy": "HRESULT WINAPI IADsUser_put_OfficeLocations_Proxy(IADsUser *This,VARIANT vOfficeLocations);", "IADsUser_get_PostalAddresses_Proxy": "HRESULT WINAPI IADsUser_get_PostalAddresses_Proxy(IADsUser *This,VARIANT *retval);", "IADsUser_put_PostalAddresses_Proxy": "HRESULT WINAPI IADsUser_put_PostalAddresses_Proxy(IADsUser *This,VARIANT vPostalAddresses);", "IADsUser_get_PostalCodes_Proxy": "HRESULT WINAPI IADsUser_get_PostalCodes_Proxy(IADsUser *This,VARIANT *retval);", "IADsUser_put_PostalCodes_Proxy": "HRESULT WINAPI IADsUser_put_PostalCodes_Proxy(IADsUser *This,VARIANT vPostalCodes);", "IADsUser_get_SeeAlso_Proxy": "HRESULT WINAPI IADsUser_get_SeeAlso_Proxy(IADsUser *This,VARIANT *retval);", "IADsUser_put_SeeAlso_Proxy": "HRESULT WINAPI IADsUser_put_SeeAlso_Proxy(IADsUser *This,VARIANT vSeeAlso);", "IADsUser_get_AccountDisabled_Proxy": "HRESULT WINAPI IADsUser_get_AccountDisabled_Proxy(IADsUser *This,VARIANT_BOOL *retval);", "IADsUser_put_AccountDisabled_Proxy": "HRESULT WINAPI IADsUser_put_AccountDisabled_Proxy(IADsUser *This,VARIANT_BOOL fAccountDisabled);", "IADsUser_get_AccountExpirationDate_Proxy": "HRESULT WINAPI IADsUser_get_AccountExpirationDate_Proxy(IADsUser *This,DATE *retval);", "IADsUser_put_AccountExpirationDate_Proxy": "HRESULT WINAPI IADsUser_put_AccountExpirationDate_Proxy(IADsUser *This,DATE daAccountExpirationDate);", "IADsUser_get_GraceLoginsAllowed_Proxy": "HRESULT WINAPI IADsUser_get_GraceLoginsAllowed_Proxy(IADsUser *This,__LONG32 *retval);", "IADsUser_put_GraceLoginsAllowed_Proxy": "HRESULT WINAPI IADsUser_put_GraceLoginsAllowed_Proxy(IADsUser *This,__LONG32 lnGraceLoginsAllowed);", "IADsUser_get_GraceLoginsRemaining_Proxy": "HRESULT WINAPI IADsUser_get_GraceLoginsRemaining_Proxy(IADsUser *This,__LONG32 *retval);", "IADsUser_put_GraceLoginsRemaining_Proxy": "HRESULT WINAPI IADsUser_put_GraceLoginsRemaining_Proxy(IADsUser *This,__LONG32 lnGraceLoginsRemaining);", "IADsUser_get_IsAccountLocked_Proxy": "HRESULT WINAPI IADsUser_get_IsAccountLocked_Proxy(IADsUser *This,VARIANT_BOOL *retval);", "IADsUser_put_IsAccountLocked_Proxy": "HRESULT WINAPI IADsUser_put_IsAccountLocked_Proxy(IADsUser *This,VARIANT_BOOL fIsAccountLocked);", "IADsUser_get_LoginHours_Proxy": "HRESULT WINAPI IADsUser_get_LoginHours_Proxy(IADsUser *This,VARIANT *retval);", "IADsUser_put_LoginHours_Proxy": "HRESULT WINAPI IADsUser_put_LoginHours_Proxy(IADsUser *This,VARIANT vLoginHours);", "IADsUser_get_LoginWorkstations_Proxy": "HRESULT WINAPI IADsUser_get_LoginWorkstations_Proxy(IADsUser *This,VARIANT *retval);", "IADsUser_put_LoginWorkstations_Proxy": "HRESULT WINAPI IADsUser_put_LoginWorkstations_Proxy(IADsUser *This,VARIANT vLoginWorkstations);", "IADsUser_get_MaxLogins_Proxy": "HRESULT WINAPI IADsUser_get_MaxLogins_Proxy(IADsUser *This,__LONG32 *retval);", "IADsUser_put_MaxLogins_Proxy": "HRESULT WINAPI IADsUser_put_MaxLogins_Proxy(IADsUser *This,__LONG32 lnMaxLogins);", "IADsUser_get_MaxStorage_Proxy": "HRESULT WINAPI IADsUser_get_MaxStorage_Proxy(IADsUser *This,__LONG32 *retval);", "IADsUser_put_MaxStorage_Proxy": "HRESULT WINAPI IADsUser_put_MaxStorage_Proxy(IADsUser *This,__LONG32 lnMaxStorage);", "IADsUser_get_PasswordExpirationDate_Proxy": "HRESULT WINAPI IADsUser_get_PasswordExpirationDate_Proxy(IADsUser *This,DATE *retval);", "IADsUser_put_PasswordExpirationDate_Proxy": "HRESULT WINAPI IADsUser_put_PasswordExpirationDate_Proxy(IADsUser *This,DATE daPasswordExpirationDate);", "IADsUser_get_PasswordMinimumLength_Proxy": "HRESULT WINAPI IADsUser_get_PasswordMinimumLength_Proxy(IADsUser *This,__LONG32 *retval);", "IADsUser_put_PasswordMinimumLength_Proxy": "HRESULT WINAPI IADsUser_put_PasswordMinimumLength_Proxy(IADsUser *This,__LONG32 lnPasswordMinimumLength);", "IADsUser_get_PasswordRequired_Proxy": "HRESULT WINAPI IADsUser_get_PasswordRequired_Proxy(IADsUser *This,VARIANT_BOOL *retval);", "IADsUser_put_PasswordRequired_Proxy": "HRESULT WINAPI IADsUser_put_PasswordRequired_Proxy(IADsUser *This,VARIANT_BOOL fPasswordRequired);", "IADsUser_get_RequireUniquePassword_Proxy": "HRESULT WINAPI IADsUser_get_RequireUniquePassword_Proxy(IADsUser *This,VARIANT_BOOL *retval);", "IADsUser_put_RequireUniquePassword_Proxy": "HRESULT WINAPI IADsUser_put_RequireUniquePassword_Proxy(IADsUser *This,VARIANT_BOOL fRequireUniquePassword);", "IADsUser_get_EmailAddress_Proxy": "HRESULT WINAPI IADsUser_get_EmailAddress_Proxy(IADsUser *This,BSTR *retval);", "IADsUser_put_EmailAddress_Proxy": "HRESULT WINAPI IADsUser_put_EmailAddress_Proxy(IADsUser *This,BSTR bstrEmailAddress);", "IADsUser_get_HomeDirectory_Proxy": "HRESULT WINAPI IADsUser_get_HomeDirectory_Proxy(IADsUser *This,BSTR *retval);", "IADsUser_put_HomeDirectory_Proxy": "HRESULT WINAPI IADsUser_put_HomeDirectory_Proxy(IADsUser *This,BSTR bstrHomeDirectory);", "IADsUser_get_Languages_Proxy": "HRESULT WINAPI IADsUser_get_Languages_Proxy(IADsUser *This,VARIANT *retval);", "IADsUser_put_Languages_Proxy": "HRESULT WINAPI IADsUser_put_Languages_Proxy(IADsUser *This,VARIANT vLanguages);", "IADsUser_get_Profile_Proxy": "HRESULT WINAPI IADsUser_get_Profile_Proxy(IADsUser *This,BSTR *retval);", "IADsUser_put_Profile_Proxy": "HRESULT WINAPI IADsUser_put_Profile_Proxy(IADsUser *This,BSTR bstrProfile);", "IADsUser_get_LoginScript_Proxy": "HRESULT WINAPI IADsUser_get_LoginScript_Proxy(IADsUser *This,BSTR *retval);", "IADsUser_put_LoginScript_Proxy": "HRESULT WINAPI IADsUser_put_LoginScript_Proxy(IADsUser *This,BSTR bstrLoginScript);", "IADsUser_get_Picture_Proxy": "HRESULT WINAPI IADsUser_get_Picture_Proxy(IADsUser *This,VARIANT *retval);", "IADsUser_put_Picture_Proxy": "HRESULT WINAPI IADsUser_put_Picture_Proxy(IADsUser *This,VARIANT vPicture);", "IADsUser_get_HomePage_Proxy": "HRESULT WINAPI IADsUser_get_HomePage_Proxy(IADsUser *This,BSTR *retval);", "IADsUser_put_HomePage_Proxy": "HRESULT WINAPI IADsUser_put_HomePage_Proxy(IADsUser *This,BSTR bstrHomePage);", "IADsUser_Groups_Proxy": "HRESULT WINAPI IADsUser_Groups_Proxy(IADsUser *This,IADsMembers **ppGroups);", "IADsUser_SetPassword_Proxy": "HRESULT WINAPI IADsUser_SetPassword_Proxy(IADsUser *This,BSTR NewPassword);", "IADsUser_ChangePassword_Proxy": "HRESULT WINAPI IADsUser_ChangePassword_Proxy(IADsUser *This,BSTR bstrOldPassword,BSTR bstrNewPassword);", "IADsPrintQueue_get_PrinterPath_Proxy": "HRESULT WINAPI IADsPrintQueue_get_PrinterPath_Proxy(IADsPrintQueue *This,BSTR *retval);", "IADsPrintQueue_put_PrinterPath_Proxy": "HRESULT WINAPI IADsPrintQueue_put_PrinterPath_Proxy(IADsPrintQueue *This,BSTR bstrPrinterPath);", "IADsPrintQueue_get_Model_Proxy": "HRESULT WINAPI IADsPrintQueue_get_Model_Proxy(IADsPrintQueue *This,BSTR *retval);", "IADsPrintQueue_put_Model_Proxy": "HRESULT WINAPI IADsPrintQueue_put_Model_Proxy(IADsPrintQueue *This,BSTR bstrModel);", "IADsPrintQueue_get_Datatype_Proxy": "HRESULT WINAPI IADsPrintQueue_get_Datatype_Proxy(IADsPrintQueue *This,BSTR *retval);", "IADsPrintQueue_put_Datatype_Proxy": "HRESULT WINAPI IADsPrintQueue_put_Datatype_Proxy(IADsPrintQueue *This,BSTR bstrDatatype);", "IADsPrintQueue_get_PrintProcessor_Proxy": "HRESULT WINAPI IADsPrintQueue_get_PrintProcessor_Proxy(IADsPrintQueue *This,BSTR *retval);", "IADsPrintQueue_put_PrintProcessor_Proxy": "HRESULT WINAPI IADsPrintQueue_put_PrintProcessor_Proxy(IADsPrintQueue *This,BSTR bstrPrintProcessor);", "IADsPrintQueue_get_Description_Proxy": "HRESULT WINAPI IADsPrintQueue_get_Description_Proxy(IADsPrintQueue *This,BSTR *retval);", "IADsPrintQueue_put_Description_Proxy": "HRESULT WINAPI IADsPrintQueue_put_Description_Proxy(IADsPrintQueue *This,BSTR bstrDescription);", "IADsPrintQueue_get_Location_Proxy": "HRESULT WINAPI IADsPrintQueue_get_Location_Proxy(IADsPrintQueue *This,BSTR *retval);", "IADsPrintQueue_put_Location_Proxy": "HRESULT WINAPI IADsPrintQueue_put_Location_Proxy(IADsPrintQueue *This,BSTR bstrLocation);", "IADsPrintQueue_get_StartTime_Proxy": "HRESULT WINAPI IADsPrintQueue_get_StartTime_Proxy(IADsPrintQueue *This,DATE *retval);", "IADsPrintQueue_put_StartTime_Proxy": "HRESULT WINAPI IADsPrintQueue_put_StartTime_Proxy(IADsPrintQueue *This,DATE daStartTime);", "IADsPrintQueue_get_UntilTime_Proxy": "HRESULT WINAPI IADsPrintQueue_get_UntilTime_Proxy(IADsPrintQueue *This,DATE *retval);", "IADsPrintQueue_put_UntilTime_Proxy": "HRESULT WINAPI IADsPrintQueue_put_UntilTime_Proxy(IADsPrintQueue *This,DATE daUntilTime);", "IADsPrintQueue_get_DefaultJobPriority_Proxy": "HRESULT WINAPI IADsPrintQueue_get_DefaultJobPriority_Proxy(IADsPrintQueue *This,__LONG32 *retval);", "IADsPrintQueue_put_DefaultJobPriority_Proxy": "HRESULT WINAPI IADsPrintQueue_put_DefaultJobPriority_Proxy(IADsPrintQueue *This,__LONG32 lnDefaultJobPriority);", "IADsPrintQueue_get_Priority_Proxy": "HRESULT WINAPI IADsPrintQueue_get_Priority_Proxy(IADsPrintQueue *This,__LONG32 *retval);", "IADsPrintQueue_put_Priority_Proxy": "HRESULT WINAPI IADsPrintQueue_put_Priority_Proxy(IADsPrintQueue *This,__LONG32 lnPriority);", "IADsPrintQueue_get_BannerPage_Proxy": "HRESULT WINAPI IADsPrintQueue_get_BannerPage_Proxy(IADsPrintQueue *This,BSTR *retval);", "IADsPrintQueue_put_BannerPage_Proxy": "HRESULT WINAPI IADsPrintQueue_put_BannerPage_Proxy(IADsPrintQueue *This,BSTR bstrBannerPage);", "IADsPrintQueue_get_PrintDevices_Proxy": "HRESULT WINAPI IADsPrintQueue_get_PrintDevices_Proxy(IADsPrintQueue *This,VARIANT *retval);", "IADsPrintQueue_put_PrintDevices_Proxy": "HRESULT WINAPI IADsPrintQueue_put_PrintDevices_Proxy(IADsPrintQueue *This,VARIANT vPrintDevices);", "IADsPrintQueue_get_NetAddresses_Proxy": "HRESULT WINAPI IADsPrintQueue_get_NetAddresses_Proxy(IADsPrintQueue *This,VARIANT *retval);", "IADsPrintQueue_put_NetAddresses_Proxy": "HRESULT WINAPI IADsPrintQueue_put_NetAddresses_Proxy(IADsPrintQueue *This,VARIANT vNetAddresses);", "IADsPrintQueueOperations_get_Status_Proxy": "HRESULT WINAPI IADsPrintQueueOperations_get_Status_Proxy(IADsPrintQueueOperations *This,__LONG32 *retval);", "IADsPrintQueueOperations_PrintJobs_Proxy": "HRESULT WINAPI IADsPrintQueueOperations_PrintJobs_Proxy(IADsPrintQueueOperations *This,IADsCollection **pObject);", "IADsPrintQueueOperations_Pause_Proxy": "HRESULT WINAPI IADsPrintQueueOperations_Pause_Proxy(IADsPrintQueueOperations *This);", "IADsPrintQueueOperations_Resume_Proxy": "HRESULT WINAPI IADsPrintQueueOperations_Resume_Proxy(IADsPrintQueueOperations *This);", "IADsPrintQueueOperations_Purge_Proxy": "HRESULT WINAPI IADsPrintQueueOperations_Purge_Proxy(IADsPrintQueueOperations *This);", "IADsPrintJob_get_HostPrintQueue_Proxy": "HRESULT WINAPI IADsPrintJob_get_HostPrintQueue_Proxy(IADsPrintJob *This,BSTR *retval);", "IADsPrintJob_get_User_Proxy": "HRESULT WINAPI IADsPrintJob_get_User_Proxy(IADsPrintJob *This,BSTR *retval);", "IADsPrintJob_get_UserPath_Proxy": "HRESULT WINAPI IADsPrintJob_get_UserPath_Proxy(IADsPrintJob *This,BSTR *retval);", "IADsPrintJob_get_TimeSubmitted_Proxy": "HRESULT WINAPI IADsPrintJob_get_TimeSubmitted_Proxy(IADsPrintJob *This,DATE *retval);", "IADsPrintJob_get_TotalPages_Proxy": "HRESULT WINAPI IADsPrintJob_get_TotalPages_Proxy(IADsPrintJob *This,__LONG32 *retval);", "IADsPrintJob_get_Size_Proxy": "HRESULT WINAPI IADsPrintJob_get_Size_Proxy(IADsPrintJob *This,__LONG32 *retval);", "IADsPrintJob_get_Description_Proxy": "HRESULT WINAPI IADsPrintJob_get_Description_Proxy(IADsPrintJob *This,BSTR *retval);", "IADsPrintJob_put_Description_Proxy": "HRESULT WINAPI IADsPrintJob_put_Description_Proxy(IADsPrintJob *This,BSTR bstrDescription);", "IADsPrintJob_get_Priority_Proxy": "HRESULT WINAPI IADsPrintJob_get_Priority_Proxy(IADsPrintJob *This,__LONG32 *retval);", "IADsPrintJob_put_Priority_Proxy": "HRESULT WINAPI IADsPrintJob_put_Priority_Proxy(IADsPrintJob *This,__LONG32 lnPriority);", "IADsPrintJob_get_StartTime_Proxy": "HRESULT WINAPI IADsPrintJob_get_StartTime_Proxy(IADsPrintJob *This,DATE *retval);", "IADsPrintJob_put_StartTime_Proxy": "HRESULT WINAPI IADsPrintJob_put_StartTime_Proxy(IADsPrintJob *This,DATE daStartTime);", "IADsPrintJob_get_UntilTime_Proxy": "HRESULT WINAPI IADsPrintJob_get_UntilTime_Proxy(IADsPrintJob *This,DATE *retval);", "IADsPrintJob_put_UntilTime_Proxy": "HRESULT WINAPI IADsPrintJob_put_UntilTime_Proxy(IADsPrintJob *This,DATE daUntilTime);", "IADsPrintJob_get_Notify_Proxy": "HRESULT WINAPI IADsPrintJob_get_Notify_Proxy(IADsPrintJob *This,BSTR *retval);", "IADsPrintJob_put_Notify_Proxy": "HRESULT WINAPI IADsPrintJob_put_Notify_Proxy(IADsPrintJob *This,BSTR bstrNotify);", "IADsPrintJob_get_NotifyPath_Proxy": "HRESULT WINAPI IADsPrintJob_get_NotifyPath_Proxy(IADsPrintJob *This,BSTR *retval);", "IADsPrintJob_put_NotifyPath_Proxy": "HRESULT WINAPI IADsPrintJob_put_NotifyPath_Proxy(IADsPrintJob *This,BSTR bstrNotifyPath);", "IADsPrintJobOperations_get_Status_Proxy": "HRESULT WINAPI IADsPrintJobOperations_get_Status_Proxy(IADsPrintJobOperations *This,__LONG32 *retval);", "IADsPrintJobOperations_get_TimeElapsed_Proxy": "HRESULT WINAPI IADsPrintJobOperations_get_TimeElapsed_Proxy(IADsPrintJobOperations *This,__LONG32 *retval);", "IADsPrintJobOperations_get_PagesPrinted_Proxy": "HRESULT WINAPI IADsPrintJobOperations_get_PagesPrinted_Proxy(IADsPrintJobOperations *This,__LONG32 *retval);", "IADsPrintJobOperations_get_Position_Proxy": "HRESULT WINAPI IADsPrintJobOperations_get_Position_Proxy(IADsPrintJobOperations *This,__LONG32 *retval);", "IADsPrintJobOperations_put_Position_Proxy": "HRESULT WINAPI IADsPrintJobOperations_put_Position_Proxy(IADsPrintJobOperations *This,__LONG32 lnPosition);", "IADsPrintJobOperations_Pause_Proxy": "HRESULT WINAPI IADsPrintJobOperations_Pause_Proxy(IADsPrintJobOperations *This);", "IADsPrintJobOperations_Resume_Proxy": "HRESULT WINAPI IADsPrintJobOperations_Resume_Proxy(IADsPrintJobOperations *This);", "IADsService_get_HostComputer_Proxy": "HRESULT WINAPI IADsService_get_HostComputer_Proxy(IADsService *This,BSTR *retval);", "IADsService_put_HostComputer_Proxy": "HRESULT WINAPI IADsService_put_HostComputer_Proxy(IADsService *This,BSTR bstrHostComputer);", "IADsService_get_DisplayName_Proxy": "HRESULT WINAPI IADsService_get_DisplayName_Proxy(IADsService *This,BSTR *retval);", "IADsService_put_DisplayName_Proxy": "HRESULT WINAPI IADsService_put_DisplayName_Proxy(IADsService *This,BSTR bstrDisplayName);", "IADsService_get_Version_Proxy": "HRESULT WINAPI IADsService_get_Version_Proxy(IADsService *This,BSTR *retval);", "IADsService_put_Version_Proxy": "HRESULT WINAPI IADsService_put_Version_Proxy(IADsService *This,BSTR bstrVersion);", "IADsService_get_ServiceType_Proxy": "HRESULT WINAPI IADsService_get_ServiceType_Proxy(IADsService *This,__LONG32 *retval);", "IADsService_put_ServiceType_Proxy": "HRESULT WINAPI IADsService_put_ServiceType_Proxy(IADsService *This,__LONG32 lnServiceType);", "IADsService_get_StartType_Proxy": "HRESULT WINAPI IADsService_get_StartType_Proxy(IADsService *This,__LONG32 *retval);", "IADsService_put_StartType_Proxy": "HRESULT WINAPI IADsService_put_StartType_Proxy(IADsService *This,__LONG32 lnStartType);", "IADsService_get_Path_Proxy": "HRESULT WINAPI IADsService_get_Path_Proxy(IADsService *This,BSTR *retval);", "IADsService_put_Path_Proxy": "HRESULT WINAPI IADsService_put_Path_Proxy(IADsService *This,BSTR bstrPath);", "IADsService_get_StartupParameters_Proxy": "HRESULT WINAPI IADsService_get_StartupParameters_Proxy(IADsService *This,BSTR *retval);", "IADsService_put_StartupParameters_Proxy": "HRESULT WINAPI IADsService_put_StartupParameters_Proxy(IADsService *This,BSTR bstrStartupParameters);", "IADsService_get_ErrorControl_Proxy": "HRESULT WINAPI IADsService_get_ErrorControl_Proxy(IADsService *This,__LONG32 *retval);", "IADsService_put_ErrorControl_Proxy": "HRESULT WINAPI IADsService_put_ErrorControl_Proxy(IADsService *This,__LONG32 lnErrorControl);", "IADsService_get_LoadOrderGroup_Proxy": "HRESULT WINAPI IADsService_get_LoadOrderGroup_Proxy(IADsService *This,BSTR *retval);", "IADsService_put_LoadOrderGroup_Proxy": "HRESULT WINAPI IADsService_put_LoadOrderGroup_Proxy(IADsService *This,BSTR bstrLoadOrderGroup);", "IADsService_get_ServiceAccountName_Proxy": "HRESULT WINAPI IADsService_get_ServiceAccountName_Proxy(IADsService *This,BSTR *retval);", "IADsService_put_ServiceAccountName_Proxy": "HRESULT WINAPI IADsService_put_ServiceAccountName_Proxy(IADsService *This,BSTR bstrServiceAccountName);", "IADsService_get_ServiceAccountPath_Proxy": "HRESULT WINAPI IADsService_get_ServiceAccountPath_Proxy(IADsService *This,BSTR *retval);", "IADsService_put_ServiceAccountPath_Proxy": "HRESULT WINAPI IADsService_put_ServiceAccountPath_Proxy(IADsService *This,BSTR bstrServiceAccountPath);", "IADsService_get_Dependencies_Proxy": "HRESULT WINAPI IADsService_get_Dependencies_Proxy(IADsService *This,VARIANT *retval);", "IADsService_put_Dependencies_Proxy": "HRESULT WINAPI IADsService_put_Dependencies_Proxy(IADsService *This,VARIANT vDependencies);", "IADsServiceOperations_get_Status_Proxy": "HRESULT WINAPI IADsServiceOperations_get_Status_Proxy(IADsServiceOperations *This,__LONG32 *retval);", "IADsServiceOperations_Start_Proxy": "HRESULT WINAPI IADsServiceOperations_Start_Proxy(IADsServiceOperations *This);", "IADsServiceOperations_Stop_Proxy": "HRESULT WINAPI IADsServiceOperations_Stop_Proxy(IADsServiceOperations *This);", "IADsServiceOperations_Pause_Proxy": "HRESULT WINAPI IADsServiceOperations_Pause_Proxy(IADsServiceOperations *This);", "IADsServiceOperations_Continue_Proxy": "HRESULT WINAPI IADsServiceOperations_Continue_Proxy(IADsServiceOperations *This);", "IADsServiceOperations_SetPassword_Proxy": "HRESULT WINAPI IADsServiceOperations_SetPassword_Proxy(IADsServiceOperations *This,BSTR bstrNewPassword);", "IADsFileService_get_Description_Proxy": "HRESULT WINAPI IADsFileService_get_Description_Proxy(IADsFileService *This,BSTR *retval);", "IADsFileService_put_Description_Proxy": "HRESULT WINAPI IADsFileService_put_Description_Proxy(IADsFileService *This,BSTR bstrDescription);", "IADsFileService_get_MaxUserCount_Proxy": "HRESULT WINAPI IADsFileService_get_MaxUserCount_Proxy(IADsFileService *This,__LONG32 *retval);", "IADsFileService_put_MaxUserCount_Proxy": "HRESULT WINAPI IADsFileService_put_MaxUserCount_Proxy(IADsFileService *This,__LONG32 lnMaxUserCount);", "IADsFileServiceOperations_Sessions_Proxy": "HRESULT WINAPI IADsFileServiceOperations_Sessions_Proxy(IADsFileServiceOperations *This,IADsCollection **ppSessions);", "IADsFileServiceOperations_Resources_Proxy": "HRESULT WINAPI IADsFileServiceOperations_Resources_Proxy(IADsFileServiceOperations *This,IADsCollection **ppResources);", "IADsFileShare_get_CurrentUserCount_Proxy": "HRESULT WINAPI IADsFileShare_get_CurrentUserCount_Proxy(IADsFileShare *This,__LONG32 *retval);", "IADsFileShare_get_Description_Proxy": "HRESULT WINAPI IADsFileShare_get_Description_Proxy(IADsFileShare *This,BSTR *retval);", "IADsFileShare_put_Description_Proxy": "HRESULT WINAPI IADsFileShare_put_Description_Proxy(IADsFileShare *This,BSTR bstrDescription);", "IADsFileShare_get_HostComputer_Proxy": "HRESULT WINAPI IADsFileShare_get_HostComputer_Proxy(IADsFileShare *This,BSTR *retval);", "IADsFileShare_put_HostComputer_Proxy": "HRESULT WINAPI IADsFileShare_put_HostComputer_Proxy(IADsFileShare *This,BSTR bstrHostComputer);", "IADsFileShare_get_Path_Proxy": "HRESULT WINAPI IADsFileShare_get_Path_Proxy(IADsFileShare *This,BSTR *retval);", "IADsFileShare_put_Path_Proxy": "HRESULT WINAPI IADsFileShare_put_Path_Proxy(IADsFileShare *This,BSTR bstrPath);", "IADsFileShare_get_MaxUserCount_Proxy": "HRESULT WINAPI IADsFileShare_get_MaxUserCount_Proxy(IADsFileShare *This,__LONG32 *retval);", "IADsFileShare_put_MaxUserCount_Proxy": "HRESULT WINAPI IADsFileShare_put_MaxUserCount_Proxy(IADsFileShare *This,__LONG32 lnMaxUserCount);", "IADsSession_get_User_Proxy": "HRESULT WINAPI IADsSession_get_User_Proxy(IADsSession *This,BSTR *retval);", "IADsSession_get_UserPath_Proxy": "HRESULT WINAPI IADsSession_get_UserPath_Proxy(IADsSession *This,BSTR *retval);", "IADsSession_get_Computer_Proxy": "HRESULT WINAPI IADsSession_get_Computer_Proxy(IADsSession *This,BSTR *retval);", "IADsSession_get_ComputerPath_Proxy": "HRESULT WINAPI IADsSession_get_ComputerPath_Proxy(IADsSession *This,BSTR *retval);", "IADsSession_get_ConnectTime_Proxy": "HRESULT WINAPI IADsSession_get_ConnectTime_Proxy(IADsSession *This,__LONG32 *retval);", "IADsSession_get_IdleTime_Proxy": "HRESULT WINAPI IADsSession_get_IdleTime_Proxy(IADsSession *This,__LONG32 *retval);", "IADsResource_get_User_Proxy": "HRESULT WINAPI IADsResource_get_User_Proxy(IADsResource *This,BSTR *retval);", "IADsResource_get_UserPath_Proxy": "HRESULT WINAPI IADsResource_get_UserPath_Proxy(IADsResource *This,BSTR *retval);", "IADsResource_get_Path_Proxy": "HRESULT WINAPI IADsResource_get_Path_Proxy(IADsResource *This,BSTR *retval);", "IADsResource_get_LockCount_Proxy": "HRESULT WINAPI IADsResource_get_LockCount_Proxy(IADsResource *This,__LONG32 *retval);", "IADsOpenDSObject_OpenDSObject_Proxy": "HRESULT WINAPI IADsOpenDSObject_OpenDSObject_Proxy(IADsOpenDSObject *This,BSTR lpszDNName,BSTR lpszUserName,BSTR lpszPassword,__LONG32 lnReserved,IDispatch **ppOleDsObj);", "IDirectoryObject_GetObjectInformation_Proxy": "HRESULT WINAPI IDirectoryObject_GetObjectInformation_Proxy(IDirectoryObject *This,PADS_OBJECT_INFO *ppObjInfo);", "IDirectoryObject_GetObjectAttributes_Proxy": "HRESULT WINAPI IDirectoryObject_GetObjectAttributes_Proxy(IDirectoryObject *This,LPWSTR *pAttributeNames,DWORD dwNumberAttributes,PADS_ATTR_INFO *ppAttributeEntries,DWORD *pdwNumAttributesReturned);", "IDirectoryObject_SetObjectAttributes_Proxy": "HRESULT WINAPI IDirectoryObject_SetObjectAttributes_Proxy(IDirectoryObject *This,PADS_ATTR_INFO pAttributeEntries,DWORD dwNumAttributes,DWORD *pdwNumAttributesModified);", "IDirectoryObject_CreateDSObject_Proxy": "HRESULT WINAPI IDirectoryObject_CreateDSObject_Proxy(IDirectoryObject *This,LPWSTR pszRDNName,PADS_ATTR_INFO pAttributeEntries,DWORD dwNumAttributes,IDispatch **ppObject);", "IDirectoryObject_DeleteDSObject_Proxy": "HRESULT WINAPI IDirectoryObject_DeleteDSObject_Proxy(IDirectoryObject *This,LPWSTR pszRDNName);", "IDirectorySearch_SetSearchPreference_Proxy": "HRESULT WINAPI IDirectorySearch_SetSearchPreference_Proxy(IDirectorySearch *This,PADS_SEARCHPREF_INFO pSearchPrefs,DWORD dwNumPrefs);", "IDirectorySearch_ExecuteSearch_Proxy": "HRESULT WINAPI IDirectorySearch_ExecuteSearch_Proxy(IDirectorySearch *This,LPWSTR pszSearchFilter,LPWSTR *pAttributeNames,DWORD dwNumberAttributes,PADS_SEARCH_HANDLE phSearchResult);", "IDirectorySearch_AbandonSearch_Proxy": "HRESULT WINAPI IDirectorySearch_AbandonSearch_Proxy(IDirectorySearch *This,ADS_SEARCH_HANDLE phSearchResult);", "IDirectorySearch_GetFirstRow_Proxy": "HRESULT WINAPI IDirectorySearch_GetFirstRow_Proxy(IDirectorySearch *This,ADS_SEARCH_HANDLE hSearchResult);", "IDirectorySearch_GetNextRow_Proxy": "HRESULT WINAPI IDirectorySearch_GetNextRow_Proxy(IDirectorySearch *This,ADS_SEARCH_HANDLE hSearchResult);", "IDirectorySearch_GetPreviousRow_Proxy": "HRESULT WINAPI IDirectorySearch_GetPreviousRow_Proxy(IDirectorySearch *This,ADS_SEARCH_HANDLE hSearchResult);", "IDirectorySearch_GetNextColumnName_Proxy": "HRESULT WINAPI IDirectorySearch_GetNextColumnName_Proxy(IDirectorySearch *This,ADS_SEARCH_HANDLE hSearchHandle,LPWSTR *ppszColumnName);", "IDirectorySearch_GetColumn_Proxy": "HRESULT WINAPI IDirectorySearch_GetColumn_Proxy(IDirectorySearch *This,ADS_SEARCH_HANDLE hSearchResult,LPWSTR szColumnName,PADS_SEARCH_COLUMN pSearchColumn);", "IDirectorySearch_FreeColumn_Proxy": "HRESULT WINAPI IDirectorySearch_FreeColumn_Proxy(IDirectorySearch *This,PADS_SEARCH_COLUMN pSearchColumn);", "IDirectorySearch_CloseSearchHandle_Proxy": "HRESULT WINAPI IDirectorySearch_CloseSearchHandle_Proxy(IDirectorySearch *This,ADS_SEARCH_HANDLE hSearchResult);", "IDirectorySchemaMgmt_EnumAttributes_Proxy": "HRESULT WINAPI IDirectorySchemaMgmt_EnumAttributes_Proxy(IDirectorySchemaMgmt *This,LPWSTR *ppszAttrNames,DWORD dwNumAttributes,PADS_ATTR_DEF *ppAttrDefinition,DWORD *pdwNumAttributes);", "IDirectorySchemaMgmt_CreateAttributeDefinition_Proxy": "HRESULT WINAPI IDirectorySchemaMgmt_CreateAttributeDefinition_Proxy(IDirectorySchemaMgmt *This,LPWSTR pszAttributeName,PADS_ATTR_DEF pAttributeDefinition);", "IDirectorySchemaMgmt_WriteAttributeDefinition_Proxy": "HRESULT WINAPI IDirectorySchemaMgmt_WriteAttributeDefinition_Proxy(IDirectorySchemaMgmt *This,LPWSTR pszAttributeName,PADS_ATTR_DEF pAttributeDefinition);", "IDirectorySchemaMgmt_DeleteAttributeDefinition_Proxy": "HRESULT WINAPI IDirectorySchemaMgmt_DeleteAttributeDefinition_Proxy(IDirectorySchemaMgmt *This,LPWSTR pszAttributeName);", "IDirectorySchemaMgmt_EnumClasses_Proxy": "HRESULT WINAPI IDirectorySchemaMgmt_EnumClasses_Proxy(IDirectorySchemaMgmt *This,LPWSTR *ppszClassNames,DWORD dwNumClasses,PADS_CLASS_DEF *ppClassDefinition,DWORD *pdwNumClasses);", "IDirectorySchemaMgmt_WriteClassDefinition_Proxy": "HRESULT WINAPI IDirectorySchemaMgmt_WriteClassDefinition_Proxy(IDirectorySchemaMgmt *This,LPWSTR pszClassName,PADS_CLASS_DEF pClassDefinition);", "IDirectorySchemaMgmt_CreateClassDefinition_Proxy": "HRESULT WINAPI IDirectorySchemaMgmt_CreateClassDefinition_Proxy(IDirectorySchemaMgmt *This,LPWSTR pszClassName,PADS_CLASS_DEF pClassDefinition);", "IDirectorySchemaMgmt_DeleteClassDefinition_Proxy": "HRESULT WINAPI IDirectorySchemaMgmt_DeleteClassDefinition_Proxy(IDirectorySchemaMgmt *This,LPWSTR pszClassName);", "IADsAggregatee_ConnectAsAggregatee_Proxy": "HRESULT WINAPI IADsAggregatee_ConnectAsAggregatee_Proxy(IADsAggregatee *This,IUnknown *pOuterUnknown);", "IADsAggregatee_DisconnectAsAggregatee_Proxy": "HRESULT WINAPI IADsAggregatee_DisconnectAsAggregatee_Proxy(IADsAggregatee *This);", "IADsAggregatee_RelinquishInterface_Proxy": "HRESULT WINAPI IADsAggregatee_RelinquishInterface_Proxy(IADsAggregatee *This,REFIID riid);", "IADsAggregatee_RestoreInterface_Proxy": "HRESULT WINAPI IADsAggregatee_RestoreInterface_Proxy(IADsAggregatee *This,REFIID riid);", "IADsAggregator_ConnectAsAggregator_Proxy": "HRESULT WINAPI IADsAggregator_ConnectAsAggregator_Proxy(IADsAggregator *This,IUnknown *pAggregatee);", "IADsAggregator_DisconnectAsAggregator_Proxy": "HRESULT WINAPI IADsAggregator_DisconnectAsAggregator_Proxy(IADsAggregator *This);", "IADsAccessControlEntry_get_AccessMask_Proxy": "HRESULT WINAPI IADsAccessControlEntry_get_AccessMask_Proxy(IADsAccessControlEntry *This,__LONG32 *retval);", "IADsAccessControlEntry_put_AccessMask_Proxy": "HRESULT WINAPI IADsAccessControlEntry_put_AccessMask_Proxy(IADsAccessControlEntry *This,__LONG32 lnAccessMask);", "IADsAccessControlEntry_get_AceType_Proxy": "HRESULT WINAPI IADsAccessControlEntry_get_AceType_Proxy(IADsAccessControlEntry *This,__LONG32 *retval);", "IADsAccessControlEntry_put_AceType_Proxy": "HRESULT WINAPI IADsAccessControlEntry_put_AceType_Proxy(IADsAccessControlEntry *This,__LONG32 lnAceType);", "IADsAccessControlEntry_get_AceFlags_Proxy": "HRESULT WINAPI IADsAccessControlEntry_get_AceFlags_Proxy(IADsAccessControlEntry *This,__LONG32 *retval);", "IADsAccessControlEntry_put_AceFlags_Proxy": "HRESULT WINAPI IADsAccessControlEntry_put_AceFlags_Proxy(IADsAccessControlEntry *This,__LONG32 lnAceFlags);", "IADsAccessControlEntry_get_Flags_Proxy": "HRESULT WINAPI IADsAccessControlEntry_get_Flags_Proxy(IADsAccessControlEntry *This,__LONG32 *retval);", "IADsAccessControlEntry_put_Flags_Proxy": "HRESULT WINAPI IADsAccessControlEntry_put_Flags_Proxy(IADsAccessControlEntry *This,__LONG32 lnFlags);", "IADsAccessControlEntry_get_ObjectType_Proxy": "HRESULT WINAPI IADsAccessControlEntry_get_ObjectType_Proxy(IADsAccessControlEntry *This,BSTR *retval);", "IADsAccessControlEntry_put_ObjectType_Proxy": "HRESULT WINAPI IADsAccessControlEntry_put_ObjectType_Proxy(IADsAccessControlEntry *This,BSTR bstrObjectType);", "IADsAccessControlEntry_get_InheritedObjectType_Proxy": "HRESULT WINAPI IADsAccessControlEntry_get_InheritedObjectType_Proxy(IADsAccessControlEntry *This,BSTR *retval);", "IADsAccessControlEntry_put_InheritedObjectType_Proxy": "HRESULT WINAPI IADsAccessControlEntry_put_InheritedObjectType_Proxy(IADsAccessControlEntry *This,BSTR bstrInheritedObjectType);", "IADsAccessControlEntry_get_Trustee_Proxy": "HRESULT WINAPI IADsAccessControlEntry_get_Trustee_Proxy(IADsAccessControlEntry *This,BSTR *retval);", "IADsAccessControlEntry_put_Trustee_Proxy": "HRESULT WINAPI IADsAccessControlEntry_put_Trustee_Proxy(IADsAccessControlEntry *This,BSTR bstrTrustee);", "IADsAccessControlList_get_AclRevision_Proxy": "HRESULT WINAPI IADsAccessControlList_get_AclRevision_Proxy(IADsAccessControlList *This,__LONG32 *retval);", "IADsAccessControlList_put_AclRevision_Proxy": "HRESULT WINAPI IADsAccessControlList_put_AclRevision_Proxy(IADsAccessControlList *This,__LONG32 lnAclRevision);", "IADsAccessControlList_get_AceCount_Proxy": "HRESULT WINAPI IADsAccessControlList_get_AceCount_Proxy(IADsAccessControlList *This,__LONG32 *retval);", "IADsAccessControlList_put_AceCount_Proxy": "HRESULT WINAPI IADsAccessControlList_put_AceCount_Proxy(IADsAccessControlList *This,__LONG32 lnAceCount);", "IADsAccessControlList_AddAce_Proxy": "HRESULT WINAPI IADsAccessControlList_AddAce_Proxy(IADsAccessControlList *This,IDispatch *pAccessControlEntry);", "IADsAccessControlList_RemoveAce_Proxy": "HRESULT WINAPI IADsAccessControlList_RemoveAce_Proxy(IADsAccessControlList *This,IDispatch *pAccessControlEntry);", "IADsAccessControlList_CopyAccessList_Proxy": "HRESULT WINAPI IADsAccessControlList_CopyAccessList_Proxy(IADsAccessControlList *This,IDispatch **ppAccessControlList);", "IADsAccessControlList_get__NewEnum_Proxy": "HRESULT WINAPI IADsAccessControlList_get__NewEnum_Proxy(IADsAccessControlList *This,IUnknown **retval);", "IADsSecurityDescriptor_get_Revision_Proxy": "HRESULT WINAPI IADsSecurityDescriptor_get_Revision_Proxy(IADsSecurityDescriptor *This,__LONG32 *retval);", "IADsSecurityDescriptor_put_Revision_Proxy": "HRESULT WINAPI IADsSecurityDescriptor_put_Revision_Proxy(IADsSecurityDescriptor *This,__LONG32 lnRevision);", "IADsSecurityDescriptor_get_Control_Proxy": "HRESULT WINAPI IADsSecurityDescriptor_get_Control_Proxy(IADsSecurityDescriptor *This,__LONG32 *retval);", "IADsSecurityDescriptor_put_Control_Proxy": "HRESULT WINAPI IADsSecurityDescriptor_put_Control_Proxy(IADsSecurityDescriptor *This,__LONG32 lnControl);", "IADsSecurityDescriptor_get_Owner_Proxy": "HRESULT WINAPI IADsSecurityDescriptor_get_Owner_Proxy(IADsSecurityDescriptor *This,BSTR *retval);", "IADsSecurityDescriptor_put_Owner_Proxy": "HRESULT WINAPI IADsSecurityDescriptor_put_Owner_Proxy(IADsSecurityDescriptor *This,BSTR bstrOwner);", "IADsSecurityDescriptor_get_OwnerDefaulted_Proxy": "HRESULT WINAPI IADsSecurityDescriptor_get_OwnerDefaulted_Proxy(IADsSecurityDescriptor *This,VARIANT_BOOL *retval);", "IADsSecurityDescriptor_put_OwnerDefaulted_Proxy": "HRESULT WINAPI IADsSecurityDescriptor_put_OwnerDefaulted_Proxy(IADsSecurityDescriptor *This,VARIANT_BOOL fOwnerDefaulted);", "IADsSecurityDescriptor_get_Group_Proxy": "HRESULT WINAPI IADsSecurityDescriptor_get_Group_Proxy(IADsSecurityDescriptor *This,BSTR *retval);", "IADsSecurityDescriptor_put_Group_Proxy": "HRESULT WINAPI IADsSecurityDescriptor_put_Group_Proxy(IADsSecurityDescriptor *This,BSTR bstrGroup);", "IADsSecurityDescriptor_get_GroupDefaulted_Proxy": "HRESULT WINAPI IADsSecurityDescriptor_get_GroupDefaulted_Proxy(IADsSecurityDescriptor *This,VARIANT_BOOL *retval);", "IADsSecurityDescriptor_put_GroupDefaulted_Proxy": "HRESULT WINAPI IADsSecurityDescriptor_put_GroupDefaulted_Proxy(IADsSecurityDescriptor *This,VARIANT_BOOL fGroupDefaulted);", "IADsSecurityDescriptor_get_DiscretionaryAcl_Proxy": "HRESULT WINAPI IADsSecurityDescriptor_get_DiscretionaryAcl_Proxy(IADsSecurityDescriptor *This,IDispatch **retval);", "IADsSecurityDescriptor_put_DiscretionaryAcl_Proxy": "HRESULT WINAPI IADsSecurityDescriptor_put_DiscretionaryAcl_Proxy(IADsSecurityDescriptor *This,IDispatch *pDiscretionaryAcl);", "IADsSecurityDescriptor_get_DaclDefaulted_Proxy": "HRESULT WINAPI IADsSecurityDescriptor_get_DaclDefaulted_Proxy(IADsSecurityDescriptor *This,VARIANT_BOOL *retval);", "IADsSecurityDescriptor_put_DaclDefaulted_Proxy": "HRESULT WINAPI IADsSecurityDescriptor_put_DaclDefaulted_Proxy(IADsSecurityDescriptor *This,VARIANT_BOOL fDaclDefaulted);", "IADsSecurityDescriptor_get_SystemAcl_Proxy": "HRESULT WINAPI IADsSecurityDescriptor_get_SystemAcl_Proxy(IADsSecurityDescriptor *This,IDispatch **retval);", "IADsSecurityDescriptor_put_SystemAcl_Proxy": "HRESULT WINAPI IADsSecurityDescriptor_put_SystemAcl_Proxy(IADsSecurityDescriptor *This,IDispatch *pSystemAcl);", "IADsSecurityDescriptor_get_SaclDefaulted_Proxy": "HRESULT WINAPI IADsSecurityDescriptor_get_SaclDefaulted_Proxy(IADsSecurityDescriptor *This,VARIANT_BOOL *retval);", "IADsSecurityDescriptor_put_SaclDefaulted_Proxy": "HRESULT WINAPI IADsSecurityDescriptor_put_SaclDefaulted_Proxy(IADsSecurityDescriptor *This,VARIANT_BOOL fSaclDefaulted);", "IADsSecurityDescriptor_CopySecurityDescriptor_Proxy": "HRESULT WINAPI IADsSecurityDescriptor_CopySecurityDescriptor_Proxy(IADsSecurityDescriptor *This,IDispatch **ppSecurityDescriptor);", "IADsLargeInteger_get_HighPart_Proxy": "HRESULT WINAPI IADsLargeInteger_get_HighPart_Proxy(IADsLargeInteger *This,__LONG32 *retval);", "IADsLargeInteger_put_HighPart_Proxy": "HRESULT WINAPI IADsLargeInteger_put_HighPart_Proxy(IADsLargeInteger *This,__LONG32 lnHighPart);", "IADsLargeInteger_get_LowPart_Proxy": "HRESULT WINAPI IADsLargeInteger_get_LowPart_Proxy(IADsLargeInteger *This,__LONG32 *retval);", "IADsLargeInteger_put_LowPart_Proxy": "HRESULT WINAPI IADsLargeInteger_put_LowPart_Proxy(IADsLargeInteger *This,__LONG32 lnLowPart);", "IADsNameTranslate_put_ChaseReferral_Proxy": "HRESULT WINAPI IADsNameTranslate_put_ChaseReferral_Proxy(IADsNameTranslate *This,__LONG32 lnChaseReferral);", "IADsNameTranslate_Init_Proxy": "HRESULT WINAPI IADsNameTranslate_Init_Proxy(IADsNameTranslate *This,__LONG32 lnSetType,BSTR bstrADsPath);", "IADsNameTranslate_InitEx_Proxy": "HRESULT WINAPI IADsNameTranslate_InitEx_Proxy(IADsNameTranslate *This,__LONG32 lnSetType,BSTR bstrADsPath,BSTR bstrUserID,BSTR bstrDomain,BSTR bstrPassword);", "IADsNameTranslate_Set_Proxy": "HRESULT WINAPI IADsNameTranslate_Set_Proxy(IADsNameTranslate *This,__LONG32 lnSetType,BSTR bstrADsPath);", "IADsNameTranslate_Get_Proxy": "HRESULT WINAPI IADsNameTranslate_Get_Proxy(IADsNameTranslate *This,__LONG32 lnFormatType,BSTR *pbstrADsPath);", "IADsNameTranslate_SetEx_Proxy": "HRESULT WINAPI IADsNameTranslate_SetEx_Proxy(IADsNameTranslate *This,__LONG32 lnFormatType,VARIANT pvar);", "IADsNameTranslate_GetEx_Proxy": "HRESULT WINAPI IADsNameTranslate_GetEx_Proxy(IADsNameTranslate *This,__LONG32 lnFormatType,VARIANT *pvar);", "IADsCaseIgnoreList_get_CaseIgnoreList_Proxy": "HRESULT WINAPI IADsCaseIgnoreList_get_CaseIgnoreList_Proxy(IADsCaseIgnoreList *This,VARIANT *retval);", "IADsCaseIgnoreList_put_CaseIgnoreList_Proxy": "HRESULT WINAPI IADsCaseIgnoreList_put_CaseIgnoreList_Proxy(IADsCaseIgnoreList *This,VARIANT vCaseIgnoreList);", "IADsFaxNumber_get_TelephoneNumber_Proxy": "HRESULT WINAPI IADsFaxNumber_get_TelephoneNumber_Proxy(IADsFaxNumber *This,BSTR *retval);", "IADsFaxNumber_put_TelephoneNumber_Proxy": "HRESULT WINAPI IADsFaxNumber_put_TelephoneNumber_Proxy(IADsFaxNumber *This,BSTR bstrTelephoneNumber);", "IADsFaxNumber_get_Parameters_Proxy": "HRESULT WINAPI IADsFaxNumber_get_Parameters_Proxy(IADsFaxNumber *This,VARIANT *retval);", "IADsFaxNumber_put_Parameters_Proxy": "HRESULT WINAPI IADsFaxNumber_put_Parameters_Proxy(IADsFaxNumber *This,VARIANT vParameters);", "IADsNetAddress_get_AddressType_Proxy": "HRESULT WINAPI IADsNetAddress_get_AddressType_Proxy(IADsNetAddress *This,__LONG32 *retval);", "IADsNetAddress_put_AddressType_Proxy": "HRESULT WINAPI IADsNetAddress_put_AddressType_Proxy(IADsNetAddress *This,__LONG32 lnAddressType);", "IADsNetAddress_get_Address_Proxy": "HRESULT WINAPI IADsNetAddress_get_Address_Proxy(IADsNetAddress *This,VARIANT *retval);", "IADsNetAddress_put_Address_Proxy": "HRESULT WINAPI IADsNetAddress_put_Address_Proxy(IADsNetAddress *This,VARIANT vAddress);", "IADsOctetList_get_OctetList_Proxy": "HRESULT WINAPI IADsOctetList_get_OctetList_Proxy(IADsOctetList *This,VARIANT *retval);", "IADsOctetList_put_OctetList_Proxy": "HRESULT WINAPI IADsOctetList_put_OctetList_Proxy(IADsOctetList *This,VARIANT vOctetList);", "IADsEmail_get_Type_Proxy": "HRESULT WINAPI IADsEmail_get_Type_Proxy(IADsEmail *This,__LONG32 *retval);", "IADsEmail_put_Type_Proxy": "HRESULT WINAPI IADsEmail_put_Type_Proxy(IADsEmail *This,__LONG32 lnType);", "IADsEmail_get_Address_Proxy": "HRESULT WINAPI IADsEmail_get_Address_Proxy(IADsEmail *This,BSTR *retval);", "IADsEmail_put_Address_Proxy": "HRESULT WINAPI IADsEmail_put_Address_Proxy(IADsEmail *This,BSTR bstrAddress);", "IADsPath_get_Type_Proxy": "HRESULT WINAPI IADsPath_get_Type_Proxy(IADsPath *This,__LONG32 *retval);", "IADsPath_put_Type_Proxy": "HRESULT WINAPI IADsPath_put_Type_Proxy(IADsPath *This,__LONG32 lnType);", "IADsPath_get_VolumeName_Proxy": "HRESULT WINAPI IADsPath_get_VolumeName_Proxy(IADsPath *This,BSTR *retval);", "IADsPath_put_VolumeName_Proxy": "HRESULT WINAPI IADsPath_put_VolumeName_Proxy(IADsPath *This,BSTR bstrVolumeName);", "IADsPath_get_Path_Proxy": "HRESULT WINAPI IADsPath_get_Path_Proxy(IADsPath *This,BSTR *retval);", "IADsPath_put_Path_Proxy": "HRESULT WINAPI IADsPath_put_Path_Proxy(IADsPath *This,BSTR bstrPath);", "IADsReplicaPointer_get_ServerName_Proxy": "HRESULT WINAPI IADsReplicaPointer_get_ServerName_Proxy(IADsReplicaPointer *This,BSTR *retval);", "IADsReplicaPointer_put_ServerName_Proxy": "HRESULT WINAPI IADsReplicaPointer_put_ServerName_Proxy(IADsReplicaPointer *This,BSTR bstrServerName);", "IADsReplicaPointer_get_ReplicaType_Proxy": "HRESULT WINAPI IADsReplicaPointer_get_ReplicaType_Proxy(IADsReplicaPointer *This,__LONG32 *retval);", "IADsReplicaPointer_put_ReplicaType_Proxy": "HRESULT WINAPI IADsReplicaPointer_put_ReplicaType_Proxy(IADsReplicaPointer *This,__LONG32 lnReplicaType);", "IADsReplicaPointer_get_ReplicaNumber_Proxy": "HRESULT WINAPI IADsReplicaPointer_get_ReplicaNumber_Proxy(IADsReplicaPointer *This,__LONG32 *retval);", "IADsReplicaPointer_put_ReplicaNumber_Proxy": "HRESULT WINAPI IADsReplicaPointer_put_ReplicaNumber_Proxy(IADsReplicaPointer *This,__LONG32 lnReplicaNumber);", "IADsReplicaPointer_get_Count_Proxy": "HRESULT WINAPI IADsReplicaPointer_get_Count_Proxy(IADsReplicaPointer *This,__LONG32 *retval);", "IADsReplicaPointer_put_Count_Proxy": "HRESULT WINAPI IADsReplicaPointer_put_Count_Proxy(IADsReplicaPointer *This,__LONG32 lnCount);", "IADsReplicaPointer_get_ReplicaAddressHints_Proxy": "HRESULT WINAPI IADsReplicaPointer_get_ReplicaAddressHints_Proxy(IADsReplicaPointer *This,VARIANT *retval);", "IADsReplicaPointer_put_ReplicaAddressHints_Proxy": "HRESULT WINAPI IADsReplicaPointer_put_ReplicaAddressHints_Proxy(IADsReplicaPointer *This,VARIANT vReplicaAddressHints);", "IADsAcl_get_ProtectedAttrName_Proxy": "HRESULT WINAPI IADsAcl_get_ProtectedAttrName_Proxy(IADsAcl *This,BSTR *retval);", "IADsAcl_put_ProtectedAttrName_Proxy": "HRESULT WINAPI IADsAcl_put_ProtectedAttrName_Proxy(IADsAcl *This,BSTR bstrProtectedAttrName);", "IADsAcl_get_SubjectName_Proxy": "HRESULT WINAPI IADsAcl_get_SubjectName_Proxy(IADsAcl *This,BSTR *retval);", "IADsAcl_put_SubjectName_Proxy": "HRESULT WINAPI IADsAcl_put_SubjectName_Proxy(IADsAcl *This,BSTR bstrSubjectName);", "IADsAcl_get_Privileges_Proxy": "HRESULT WINAPI IADsAcl_get_Privileges_Proxy(IADsAcl *This,__LONG32 *retval);", "IADsAcl_put_Privileges_Proxy": "HRESULT WINAPI IADsAcl_put_Privileges_Proxy(IADsAcl *This,__LONG32 lnPrivileges);", "IADsAcl_CopyAcl_Proxy": "HRESULT WINAPI IADsAcl_CopyAcl_Proxy(IADsAcl *This,IDispatch **ppAcl);", "IADsTimestamp_get_WholeSeconds_Proxy": "HRESULT WINAPI IADsTimestamp_get_WholeSeconds_Proxy(IADsTimestamp *This,__LONG32 *retval);", "IADsTimestamp_put_WholeSeconds_Proxy": "HRESULT WINAPI IADsTimestamp_put_WholeSeconds_Proxy(IADsTimestamp *This,__LONG32 lnWholeSeconds);", "IADsTimestamp_get_EventID_Proxy": "HRESULT WINAPI IADsTimestamp_get_EventID_Proxy(IADsTimestamp *This,__LONG32 *retval);", "IADsTimestamp_put_EventID_Proxy": "HRESULT WINAPI IADsTimestamp_put_EventID_Proxy(IADsTimestamp *This,__LONG32 lnEventID);", "IADsPostalAddress_get_PostalAddress_Proxy": "HRESULT WINAPI IADsPostalAddress_get_PostalAddress_Proxy(IADsPostalAddress *This,VARIANT *retval);", "IADsPostalAddress_put_PostalAddress_Proxy": "HRESULT WINAPI IADsPostalAddress_put_PostalAddress_Proxy(IADsPostalAddress *This,VARIANT vPostalAddress);", "IADsBackLink_get_RemoteID_Proxy": "HRESULT WINAPI IADsBackLink_get_RemoteID_Proxy(IADsBackLink *This,__LONG32 *retval);", "IADsBackLink_put_RemoteID_Proxy": "HRESULT WINAPI IADsBackLink_put_RemoteID_Proxy(IADsBackLink *This,__LONG32 lnRemoteID);", "IADsBackLink_get_ObjectName_Proxy": "HRESULT WINAPI IADsBackLink_get_ObjectName_Proxy(IADsBackLink *This,BSTR *retval);", "IADsBackLink_put_ObjectName_Proxy": "HRESULT WINAPI IADsBackLink_put_ObjectName_Proxy(IADsBackLink *This,BSTR bstrObjectName);", "IADsTypedName_get_ObjectName_Proxy": "HRESULT WINAPI IADsTypedName_get_ObjectName_Proxy(IADsTypedName *This,BSTR *retval);", "IADsTypedName_put_ObjectName_Proxy": "HRESULT WINAPI IADsTypedName_put_ObjectName_Proxy(IADsTypedName *This,BSTR bstrObjectName);", "IADsTypedName_get_Level_Proxy": "HRESULT WINAPI IADsTypedName_get_Level_Proxy(IADsTypedName *This,__LONG32 *retval);", "IADsTypedName_put_Level_Proxy": "HRESULT WINAPI IADsTypedName_put_Level_Proxy(IADsTypedName *This,__LONG32 lnLevel);", "IADsTypedName_get_Interval_Proxy": "HRESULT WINAPI IADsTypedName_get_Interval_Proxy(IADsTypedName *This,__LONG32 *retval);", "IADsTypedName_put_Interval_Proxy": "HRESULT WINAPI IADsTypedName_put_Interval_Proxy(IADsTypedName *This,__LONG32 lnInterval);", "IADsHold_get_ObjectName_Proxy": "HRESULT WINAPI IADsHold_get_ObjectName_Proxy(IADsHold *This,BSTR *retval);", "IADsHold_put_ObjectName_Proxy": "HRESULT WINAPI IADsHold_put_ObjectName_Proxy(IADsHold *This,BSTR bstrObjectName);", "IADsHold_get_Amount_Proxy": "HRESULT WINAPI IADsHold_get_Amount_Proxy(IADsHold *This,__LONG32 *retval);", "IADsHold_put_Amount_Proxy": "HRESULT WINAPI IADsHold_put_Amount_Proxy(IADsHold *This,__LONG32 lnAmount);", "IADsObjectOptions_GetOption_Proxy": "HRESULT WINAPI IADsObjectOptions_GetOption_Proxy(IADsObjectOptions *This,__LONG32 lnOption,VARIANT *pvValue);", "IADsObjectOptions_SetOption_Proxy": "HRESULT WINAPI IADsObjectOptions_SetOption_Proxy(IADsObjectOptions *This,__LONG32 lnOption,VARIANT vValue);", "IADsPathname_Set_Proxy": "HRESULT WINAPI IADsPathname_Set_Proxy(IADsPathname *This,BSTR bstrADsPath,__LONG32 lnSetType);", "IADsPathname_SetDisplayType_Proxy": "HRESULT WINAPI IADsPathname_SetDisplayType_Proxy(IADsPathname *This,__LONG32 lnDisplayType);", "IADsPathname_Retrieve_Proxy": "HRESULT WINAPI IADsPathname_Retrieve_Proxy(IADsPathname *This,__LONG32 lnFormatType,BSTR *pbstrADsPath);", "IADsPathname_GetNumElements_Proxy": "HRESULT WINAPI IADsPathname_GetNumElements_Proxy(IADsPathname *This,__LONG32 *plnNumPathElements);", "IADsPathname_GetElement_Proxy": "HRESULT WINAPI IADsPathname_GetElement_Proxy(IADsPathname *This,__LONG32 lnElementIndex,BSTR *pbstrElement);", "IADsPathname_AddLeafElement_Proxy": "HRESULT WINAPI IADsPathname_AddLeafElement_Proxy(IADsPathname *This,BSTR bstrLeafElement);", "IADsPathname_RemoveLeafElement_Proxy": "HRESULT WINAPI IADsPathname_RemoveLeafElement_Proxy(IADsPathname *This);", "IADsPathname_CopyPath_Proxy": "HRESULT WINAPI IADsPathname_CopyPath_Proxy(IADsPathname *This,IDispatch **ppAdsPath);", "IADsPathname_GetEscapedElement_Proxy": "HRESULT WINAPI IADsPathname_GetEscapedElement_Proxy(IADsPathname *This,__LONG32 lnReserved,BSTR bstrInStr,BSTR *pbstrOutStr);", "IADsPathname_get_EscapedMode_Proxy": "HRESULT WINAPI IADsPathname_get_EscapedMode_Proxy(IADsPathname *This,__LONG32 *retval);", "IADsPathname_put_EscapedMode_Proxy": "HRESULT WINAPI IADsPathname_put_EscapedMode_Proxy(IADsPathname *This,__LONG32 lnEscapedMode);", "IADsADSystemInfo_get_UserName_Proxy": "HRESULT WINAPI IADsADSystemInfo_get_UserName_Proxy(IADsADSystemInfo *This,BSTR *retval);", "IADsADSystemInfo_get_ComputerName_Proxy": "HRESULT WINAPI IADsADSystemInfo_get_ComputerName_Proxy(IADsADSystemInfo *This,BSTR *retval);", "IADsADSystemInfo_get_SiteName_Proxy": "HRESULT WINAPI IADsADSystemInfo_get_SiteName_Proxy(IADsADSystemInfo *This,BSTR *retval);", "IADsADSystemInfo_get_DomainShortName_Proxy": "HRESULT WINAPI IADsADSystemInfo_get_DomainShortName_Proxy(IADsADSystemInfo *This,BSTR *retval);", "IADsADSystemInfo_get_DomainDNSName_Proxy": "HRESULT WINAPI IADsADSystemInfo_get_DomainDNSName_Proxy(IADsADSystemInfo *This,BSTR *retval);", "IADsADSystemInfo_get_ForestDNSName_Proxy": "HRESULT WINAPI IADsADSystemInfo_get_ForestDNSName_Proxy(IADsADSystemInfo *This,BSTR *retval);", "IADsADSystemInfo_get_PDCRoleOwner_Proxy": "HRESULT WINAPI IADsADSystemInfo_get_PDCRoleOwner_Proxy(IADsADSystemInfo *This,BSTR *retval);", "IADsADSystemInfo_get_SchemaRoleOwner_Proxy": "HRESULT WINAPI IADsADSystemInfo_get_SchemaRoleOwner_Proxy(IADsADSystemInfo *This,BSTR *retval);", "IADsADSystemInfo_get_IsNativeMode_Proxy": "HRESULT WINAPI IADsADSystemInfo_get_IsNativeMode_Proxy(IADsADSystemInfo *This,VARIANT_BOOL *retval);", "IADsADSystemInfo_GetAnyDCName_Proxy": "HRESULT WINAPI IADsADSystemInfo_GetAnyDCName_Proxy(IADsADSystemInfo *This,BSTR *pszDCName);", "IADsADSystemInfo_GetDCSiteName_Proxy": "HRESULT WINAPI IADsADSystemInfo_GetDCSiteName_Proxy(IADsADSystemInfo *This,BSTR szServer,BSTR *pszSiteName);", "IADsADSystemInfo_RefreshSchemaCache_Proxy": "HRESULT WINAPI IADsADSystemInfo_RefreshSchemaCache_Proxy(IADsADSystemInfo *This);", "IADsADSystemInfo_GetTrees_Proxy": "HRESULT WINAPI IADsADSystemInfo_GetTrees_Proxy(IADsADSystemInfo *This,VARIANT *pvTrees);", "IADsWinNTSystemInfo_get_UserName_Proxy": "HRESULT WINAPI IADsWinNTSystemInfo_get_UserName_Proxy(IADsWinNTSystemInfo *This,BSTR *retval);", "IADsWinNTSystemInfo_get_ComputerName_Proxy": "HRESULT WINAPI IADsWinNTSystemInfo_get_ComputerName_Proxy(IADsWinNTSystemInfo *This,BSTR *retval);", "IADsWinNTSystemInfo_get_DomainName_Proxy": "HRESULT WINAPI IADsWinNTSystemInfo_get_DomainName_Proxy(IADsWinNTSystemInfo *This,BSTR *retval);", "IADsWinNTSystemInfo_get_PDC_Proxy": "HRESULT WINAPI IADsWinNTSystemInfo_get_PDC_Proxy(IADsWinNTSystemInfo *This,BSTR *retval);", "IADsDNWithBinary_get_BinaryValue_Proxy": "HRESULT WINAPI IADsDNWithBinary_get_BinaryValue_Proxy(IADsDNWithBinary *This,VARIANT *retval);", "IADsDNWithBinary_put_BinaryValue_Proxy": "HRESULT WINAPI IADsDNWithBinary_put_BinaryValue_Proxy(IADsDNWithBinary *This,VARIANT vBinaryValue);", "IADsDNWithBinary_get_DNString_Proxy": "HRESULT WINAPI IADsDNWithBinary_get_DNString_Proxy(IADsDNWithBinary *This,BSTR *retval);", "IADsDNWithBinary_put_DNString_Proxy": "HRESULT WINAPI IADsDNWithBinary_put_DNString_Proxy(IADsDNWithBinary *This,BSTR bstrDNString);", "IADsDNWithString_get_StringValue_Proxy": "HRESULT WINAPI IADsDNWithString_get_StringValue_Proxy(IADsDNWithString *This,BSTR *retval);", "IADsDNWithString_put_StringValue_Proxy": "HRESULT WINAPI IADsDNWithString_put_StringValue_Proxy(IADsDNWithString *This,BSTR bstrStringValue);", "IADsDNWithString_get_DNString_Proxy": "HRESULT WINAPI IADsDNWithString_get_DNString_Proxy(IADsDNWithString *This,BSTR *retval);", "IADsDNWithString_put_DNString_Proxy": "HRESULT WINAPI IADsDNWithString_put_DNString_Proxy(IADsDNWithString *This,BSTR bstrDNString);", "IADsSecurityUtility_GetSecurityDescriptor_Proxy": "HRESULT WINAPI IADsSecurityUtility_GetSecurityDescriptor_Proxy(IADsSecurityUtility *This,VARIANT varPath,__LONG32 lPathFormat,__LONG32 lFormat,VARIANT *pVariant);", "IADsSecurityUtility_SetSecurityDescriptor_Proxy": "HRESULT WINAPI IADsSecurityUtility_SetSecurityDescriptor_Proxy(IADsSecurityUtility *This,VARIANT varPath,__LONG32 lPathFormat,VARIANT varData,__LONG32 lDataFormat);", "IADsSecurityUtility_ConvertSecurityDescriptor_Proxy": "HRESULT WINAPI IADsSecurityUtility_ConvertSecurityDescriptor_Proxy(IADsSecurityUtility *This,VARIANT varSD,__LONG32 lDataFormat,__LONG32 lOutFormat,VARIANT *pResult);", "IADsSecurityUtility_get_SecurityMask_Proxy": "HRESULT WINAPI IADsSecurityUtility_get_SecurityMask_Proxy(IADsSecurityUtility *This,__LONG32 *retval);", "IADsSecurityUtility_put_SecurityMask_Proxy": "HRESULT WINAPI IADsSecurityUtility_put_SecurityMask_Proxy(IADsSecurityUtility *This,__LONG32 lnSecurityMask);", "IEventSystem_Query_Proxy": "HRESULT WINAPI IEventSystem_Query_Proxy(IEventSystem *This,BSTR progID,BSTR queryCriteria,int *errorIndex,IUnknown **ppInterface);", "IEventSystem_Store_Proxy": "HRESULT WINAPI IEventSystem_Store_Proxy(IEventSystem *This,BSTR ProgID,IUnknown *pInterface);", "IEventSystem_Remove_Proxy": "HRESULT WINAPI IEventSystem_Remove_Proxy(IEventSystem *This,BSTR progID,BSTR queryCriteria,int *errorIndex);", "IEventSystem_get_EventObjectChangeEventClassID_Proxy": "HRESULT WINAPI IEventSystem_get_EventObjectChangeEventClassID_Proxy(IEventSystem *This,BSTR *pbstrEventClassID);", "IEventSystem_QueryS_Proxy": "HRESULT WINAPI IEventSystem_QueryS_Proxy(IEventSystem *This,BSTR progID,BSTR queryCriteria,IUnknown **ppInterface);", "IEventSystem_RemoveS_Proxy": "HRESULT WINAPI IEventSystem_RemoveS_Proxy(IEventSystem *This,BSTR progID,BSTR queryCriteria);", "IEventPublisher_get_PublisherID_Proxy": "HRESULT WINAPI IEventPublisher_get_PublisherID_Proxy(IEventPublisher *This,BSTR *pbstrPublisherID);", "IEventPublisher_put_PublisherID_Proxy": "HRESULT WINAPI IEventPublisher_put_PublisherID_Proxy(IEventPublisher *This,BSTR bstrPublisherID);", "IEventPublisher_get_PublisherName_Proxy": "HRESULT WINAPI IEventPublisher_get_PublisherName_Proxy(IEventPublisher *This,BSTR *pbstrPublisherName);", "IEventPublisher_put_PublisherName_Proxy": "HRESULT WINAPI IEventPublisher_put_PublisherName_Proxy(IEventPublisher *This,BSTR bstrPublisherName);", "IEventPublisher_get_PublisherType_Proxy": "HRESULT WINAPI IEventPublisher_get_PublisherType_Proxy(IEventPublisher *This,BSTR *pbstrPublisherType);", "IEventPublisher_put_PublisherType_Proxy": "HRESULT WINAPI IEventPublisher_put_PublisherType_Proxy(IEventPublisher *This,BSTR bstrPublisherType);", "IEventPublisher_get_OwnerSID_Proxy": "HRESULT WINAPI IEventPublisher_get_OwnerSID_Proxy(IEventPublisher *This,BSTR *pbstrOwnerSID);", "IEventPublisher_put_OwnerSID_Proxy": "HRESULT WINAPI IEventPublisher_put_OwnerSID_Proxy(IEventPublisher *This,BSTR bstrOwnerSID);", "IEventPublisher_get_Description_Proxy": "HRESULT WINAPI IEventPublisher_get_Description_Proxy(IEventPublisher *This,BSTR *pbstrDescription);", "IEventPublisher_put_Description_Proxy": "HRESULT WINAPI IEventPublisher_put_Description_Proxy(IEventPublisher *This,BSTR bstrDescription);", "IEventPublisher_GetDefaultProperty_Proxy": "HRESULT WINAPI IEventPublisher_GetDefaultProperty_Proxy(IEventPublisher *This,BSTR bstrPropertyName,VARIANT *propertyValue);", "IEventPublisher_PutDefaultProperty_Proxy": "HRESULT WINAPI IEventPublisher_PutDefaultProperty_Proxy(IEventPublisher *This,BSTR bstrPropertyName,VARIANT *propertyValue);", "IEventPublisher_RemoveDefaultProperty_Proxy": "HRESULT WINAPI IEventPublisher_RemoveDefaultProperty_Proxy(IEventPublisher *This,BSTR bstrPropertyName);", "IEventPublisher_GetDefaultPropertyCollection_Proxy": "HRESULT WINAPI IEventPublisher_GetDefaultPropertyCollection_Proxy(IEventPublisher *This,IEventObjectCollection **collection);", "IEventClass_get_EventClassID_Proxy": "HRESULT WINAPI IEventClass_get_EventClassID_Proxy(IEventClass *This,BSTR *pbstrEventClassID);", "IEventClass_put_EventClassID_Proxy": "HRESULT WINAPI IEventClass_put_EventClassID_Proxy(IEventClass *This,BSTR bstrEventClassID);", "IEventClass_get_EventClassName_Proxy": "HRESULT WINAPI IEventClass_get_EventClassName_Proxy(IEventClass *This,BSTR *pbstrEventClassName);", "IEventClass_put_EventClassName_Proxy": "HRESULT WINAPI IEventClass_put_EventClassName_Proxy(IEventClass *This,BSTR bstrEventClassName);", "IEventClass_get_OwnerSID_Proxy": "HRESULT WINAPI IEventClass_get_OwnerSID_Proxy(IEventClass *This,BSTR *pbstrOwnerSID);", "IEventClass_put_OwnerSID_Proxy": "HRESULT WINAPI IEventClass_put_OwnerSID_Proxy(IEventClass *This,BSTR bstrOwnerSID);", "IEventClass_get_FiringInterfaceID_Proxy": "HRESULT WINAPI IEventClass_get_FiringInterfaceID_Proxy(IEventClass *This,BSTR *pbstrFiringInterfaceID);", "IEventClass_put_FiringInterfaceID_Proxy": "HRESULT WINAPI IEventClass_put_FiringInterfaceID_Proxy(IEventClass *This,BSTR bstrFiringInterfaceID);", "IEventClass_get_Description_Proxy": "HRESULT WINAPI IEventClass_get_Description_Proxy(IEventClass *This,BSTR *pbstrDescription);", "IEventClass_put_Description_Proxy": "HRESULT WINAPI IEventClass_put_Description_Proxy(IEventClass *This,BSTR bstrDescription);", "IEventClass_get_CustomConfigCLSID_Proxy": "HRESULT WINAPI IEventClass_get_CustomConfigCLSID_Proxy(IEventClass *This,BSTR *pbstrCustomConfigCLSID);", "IEventClass_put_CustomConfigCLSID_Proxy": "HRESULT WINAPI IEventClass_put_CustomConfigCLSID_Proxy(IEventClass *This,BSTR bstrCustomConfigCLSID);", "IEventClass_get_TypeLib_Proxy": "HRESULT WINAPI IEventClass_get_TypeLib_Proxy(IEventClass *This,BSTR *pbstrTypeLib);", "IEventClass_put_TypeLib_Proxy": "HRESULT WINAPI IEventClass_put_TypeLib_Proxy(IEventClass *This,BSTR bstrTypeLib);", "IEventClass2_get_PublisherID_Proxy": "HRESULT WINAPI IEventClass2_get_PublisherID_Proxy(IEventClass2 *This,BSTR *pbstrPublisherID);", "IEventClass2_put_PublisherID_Proxy": "HRESULT WINAPI IEventClass2_put_PublisherID_Proxy(IEventClass2 *This,BSTR bstrPublisherID);", "IEventClass2_get_MultiInterfacePublisherFilterCLSID_Proxy": "HRESULT WINAPI IEventClass2_get_MultiInterfacePublisherFilterCLSID_Proxy(IEventClass2 *This,BSTR *pbstrPubFilCLSID);", "IEventClass2_put_MultiInterfacePublisherFilterCLSID_Proxy": "HRESULT WINAPI IEventClass2_put_MultiInterfacePublisherFilterCLSID_Proxy(IEventClass2 *This,BSTR bstrPubFilCLSID);", "IEventClass2_get_AllowInprocActivation_Proxy": "HRESULT WINAPI IEventClass2_get_AllowInprocActivation_Proxy(IEventClass2 *This,WINBOOL *pfAllowInprocActivation);", "IEventClass2_put_AllowInprocActivation_Proxy": "HRESULT WINAPI IEventClass2_put_AllowInprocActivation_Proxy(IEventClass2 *This,WINBOOL fAllowInprocActivation);", "IEventClass2_get_FireInParallel_Proxy": "HRESULT WINAPI IEventClass2_get_FireInParallel_Proxy(IEventClass2 *This,WINBOOL *pfFireInParallel);", "IEventClass2_put_FireInParallel_Proxy": "HRESULT WINAPI IEventClass2_put_FireInParallel_Proxy(IEventClass2 *This,WINBOOL fFireInParallel);", "IEventSubscription_get_SubscriptionID_Proxy": "HRESULT WINAPI IEventSubscription_get_SubscriptionID_Proxy(IEventSubscription *This,BSTR *pbstrSubscriptionID);", "IEventSubscription_put_SubscriptionID_Proxy": "HRESULT WINAPI IEventSubscription_put_SubscriptionID_Proxy(IEventSubscription *This,BSTR bstrSubscriptionID);", "IEventSubscription_get_SubscriptionName_Proxy": "HRESULT WINAPI IEventSubscription_get_SubscriptionName_Proxy(IEventSubscription *This,BSTR *pbstrSubscriptionName);", "IEventSubscription_put_SubscriptionName_Proxy": "HRESULT WINAPI IEventSubscription_put_SubscriptionName_Proxy(IEventSubscription *This,BSTR bstrSubscriptionName);", "IEventSubscription_get_PublisherID_Proxy": "HRESULT WINAPI IEventSubscription_get_PublisherID_Proxy(IEventSubscription *This,BSTR *pbstrPublisherID);", "IEventSubscription_put_PublisherID_Proxy": "HRESULT WINAPI IEventSubscription_put_PublisherID_Proxy(IEventSubscription *This,BSTR bstrPublisherID);", "IEventSubscription_get_EventClassID_Proxy": "HRESULT WINAPI IEventSubscription_get_EventClassID_Proxy(IEventSubscription *This,BSTR *pbstrEventClassID);", "IEventSubscription_put_EventClassID_Proxy": "HRESULT WINAPI IEventSubscription_put_EventClassID_Proxy(IEventSubscription *This,BSTR bstrEventClassID);", "IEventSubscription_get_MethodName_Proxy": "HRESULT WINAPI IEventSubscription_get_MethodName_Proxy(IEventSubscription *This,BSTR *pbstrMethodName);", "IEventSubscription_put_MethodName_Proxy": "HRESULT WINAPI IEventSubscription_put_MethodName_Proxy(IEventSubscription *This,BSTR bstrMethodName);", "IEventSubscription_get_SubscriberCLSID_Proxy": "HRESULT WINAPI IEventSubscription_get_SubscriberCLSID_Proxy(IEventSubscription *This,BSTR *pbstrSubscriberCLSID);", "IEventSubscription_put_SubscriberCLSID_Proxy": "HRESULT WINAPI IEventSubscription_put_SubscriberCLSID_Proxy(IEventSubscription *This,BSTR bstrSubscriberCLSID);", "IEventSubscription_get_SubscriberInterface_Proxy": "HRESULT WINAPI IEventSubscription_get_SubscriberInterface_Proxy(IEventSubscription *This,IUnknown **ppSubscriberInterface);", "IEventSubscription_put_SubscriberInterface_Proxy": "HRESULT WINAPI IEventSubscription_put_SubscriberInterface_Proxy(IEventSubscription *This,IUnknown *pSubscriberInterface);", "IEventSubscription_get_PerUser_Proxy": "HRESULT WINAPI IEventSubscription_get_PerUser_Proxy(IEventSubscription *This,WINBOOL *pfPerUser);", "IEventSubscription_put_PerUser_Proxy": "HRESULT WINAPI IEventSubscription_put_PerUser_Proxy(IEventSubscription *This,WINBOOL fPerUser);", "IEventSubscription_get_OwnerSID_Proxy": "HRESULT WINAPI IEventSubscription_get_OwnerSID_Proxy(IEventSubscription *This,BSTR *pbstrOwnerSID);", "IEventSubscription_put_OwnerSID_Proxy": "HRESULT WINAPI IEventSubscription_put_OwnerSID_Proxy(IEventSubscription *This,BSTR bstrOwnerSID);", "IEventSubscription_get_Enabled_Proxy": "HRESULT WINAPI IEventSubscription_get_Enabled_Proxy(IEventSubscription *This,WINBOOL *pfEnabled);", "IEventSubscription_put_Enabled_Proxy": "HRESULT WINAPI IEventSubscription_put_Enabled_Proxy(IEventSubscription *This,WINBOOL fEnabled);", "IEventSubscription_get_Description_Proxy": "HRESULT WINAPI IEventSubscription_get_Description_Proxy(IEventSubscription *This,BSTR *pbstrDescription);", "IEventSubscription_put_Description_Proxy": "HRESULT WINAPI IEventSubscription_put_Description_Proxy(IEventSubscription *This,BSTR bstrDescription);", "IEventSubscription_get_MachineName_Proxy": "HRESULT WINAPI IEventSubscription_get_MachineName_Proxy(IEventSubscription *This,BSTR *pbstrMachineName);", "IEventSubscription_put_MachineName_Proxy": "HRESULT WINAPI IEventSubscription_put_MachineName_Proxy(IEventSubscription *This,BSTR bstrMachineName);", "IEventSubscription_GetPublisherProperty_Proxy": "HRESULT WINAPI IEventSubscription_GetPublisherProperty_Proxy(IEventSubscription *This,BSTR bstrPropertyName,VARIANT *propertyValue);", "IEventSubscription_PutPublisherProperty_Proxy": "HRESULT WINAPI IEventSubscription_PutPublisherProperty_Proxy(IEventSubscription *This,BSTR bstrPropertyName,VARIANT *propertyValue);", "IEventSubscription_RemovePublisherProperty_Proxy": "HRESULT WINAPI IEventSubscription_RemovePublisherProperty_Proxy(IEventSubscription *This,BSTR bstrPropertyName);", "IEventSubscription_GetPublisherPropertyCollection_Proxy": "HRESULT WINAPI IEventSubscription_GetPublisherPropertyCollection_Proxy(IEventSubscription *This,IEventObjectCollection **collection);", "IEventSubscription_GetSubscriberProperty_Proxy": "HRESULT WINAPI IEventSubscription_GetSubscriberProperty_Proxy(IEventSubscription *This,BSTR bstrPropertyName,VARIANT *propertyValue);", "IEventSubscription_PutSubscriberProperty_Proxy": "HRESULT WINAPI IEventSubscription_PutSubscriberProperty_Proxy(IEventSubscription *This,BSTR bstrPropertyName,VARIANT *propertyValue);", "IEventSubscription_RemoveSubscriberProperty_Proxy": "HRESULT WINAPI IEventSubscription_RemoveSubscriberProperty_Proxy(IEventSubscription *This,BSTR bstrPropertyName);", "IEventSubscription_GetSubscriberPropertyCollection_Proxy": "HRESULT WINAPI IEventSubscription_GetSubscriberPropertyCollection_Proxy(IEventSubscription *This,IEventObjectCollection **collection);", "IEventSubscription_get_InterfaceID_Proxy": "HRESULT WINAPI IEventSubscription_get_InterfaceID_Proxy(IEventSubscription *This,BSTR *pbstrInterfaceID);", "IEventSubscription_put_InterfaceID_Proxy": "HRESULT WINAPI IEventSubscription_put_InterfaceID_Proxy(IEventSubscription *This,BSTR bstrInterfaceID);", "IFiringControl_FireSubscription_Proxy": "HRESULT WINAPI IFiringControl_FireSubscription_Proxy(IFiringControl *This,IEventSubscription *subscription);", "IPublisherFilter_Initialize_Proxy": "HRESULT WINAPI IPublisherFilter_Initialize_Proxy(IPublisherFilter *This,BSTR methodName,IDispatch *dispUserDefined);", "IPublisherFilter_PrepareToFire_Proxy": "HRESULT WINAPI IPublisherFilter_PrepareToFire_Proxy(IPublisherFilter *This,BSTR methodName,IFiringControl *firingControl);", "IMultiInterfacePublisherFilter_Initialize_Proxy": "HRESULT WINAPI IMultiInterfacePublisherFilter_Initialize_Proxy(IMultiInterfacePublisherFilter *This,IMultiInterfaceEventControl *pEIC);", "IMultiInterfacePublisherFilter_PrepareToFire_Proxy": "HRESULT WINAPI IMultiInterfacePublisherFilter_PrepareToFire_Proxy(IMultiInterfacePublisherFilter *This,REFIID iid,BSTR methodName,IFiringControl *firingControl);", "IEventObjectChange_ChangedSubscription_Proxy": "HRESULT WINAPI IEventObjectChange_ChangedSubscription_Proxy(IEventObjectChange *This,EOC_ChangeType changeType,BSTR bstrSubscriptionID);", "IEventObjectChange_ChangedEventClass_Proxy": "HRESULT WINAPI IEventObjectChange_ChangedEventClass_Proxy(IEventObjectChange *This,EOC_ChangeType changeType,BSTR bstrEventClassID);", "IEventObjectChange_ChangedPublisher_Proxy": "HRESULT WINAPI IEventObjectChange_ChangedPublisher_Proxy(IEventObjectChange *This,EOC_ChangeType changeType,BSTR bstrPublisherID);", "IEventObjectChange2_ChangedSubscription_Proxy": "HRESULT WINAPI IEventObjectChange2_ChangedSubscription_Proxy(IEventObjectChange2 *This,COMEVENTSYSCHANGEINFO *pInfo);", "IEventObjectChange2_ChangedEventClass_Proxy": "HRESULT WINAPI IEventObjectChange2_ChangedEventClass_Proxy(IEventObjectChange2 *This,COMEVENTSYSCHANGEINFO *pInfo);", "IEnumEventObject_Clone_Proxy": "HRESULT WINAPI IEnumEventObject_Clone_Proxy(IEnumEventObject *This,IEnumEventObject **ppInterface);", "IEnumEventObject_Next_Proxy": "HRESULT WINAPI IEnumEventObject_Next_Proxy(IEnumEventObject *This,ULONG cReqElem,IUnknown **ppInterface,ULONG *cRetElem);", "IEnumEventObject_Reset_Proxy": "HRESULT WINAPI IEnumEventObject_Reset_Proxy(IEnumEventObject *This);", "IEnumEventObject_Skip_Proxy": "HRESULT WINAPI IEnumEventObject_Skip_Proxy(IEnumEventObject *This,ULONG cSkipElem);", "IEventObjectCollection_get__NewEnum_Proxy": "HRESULT WINAPI IEventObjectCollection_get__NewEnum_Proxy(IEventObjectCollection *This,IUnknown **ppUnkEnum);", "IEventObjectCollection_get_Item_Proxy": "HRESULT WINAPI IEventObjectCollection_get_Item_Proxy(IEventObjectCollection *This,BSTR objectID,VARIANT *pItem);", "IEventObjectCollection_get_NewEnum_Proxy": "HRESULT WINAPI IEventObjectCollection_get_NewEnum_Proxy(IEventObjectCollection *This,IEnumEventObject **ppEnum);", "IEventObjectCollection_get_Count_Proxy": "HRESULT WINAPI IEventObjectCollection_get_Count_Proxy(IEventObjectCollection *This,__LONG32 *pCount);", "IEventObjectCollection_Add_Proxy": "HRESULT WINAPI IEventObjectCollection_Add_Proxy(IEventObjectCollection *This,VARIANT *item,BSTR objectID);", "IEventObjectCollection_Remove_Proxy": "HRESULT WINAPI IEventObjectCollection_Remove_Proxy(IEventObjectCollection *This,BSTR objectID);", "IEventProperty_get_Name_Proxy": "HRESULT WINAPI IEventProperty_get_Name_Proxy(IEventProperty *This,BSTR *propertyName);", "IEventProperty_put_Name_Proxy": "HRESULT WINAPI IEventProperty_put_Name_Proxy(IEventProperty *This,BSTR propertyName);", "IEventProperty_get_Value_Proxy": "HRESULT WINAPI IEventProperty_get_Value_Proxy(IEventProperty *This,VARIANT *propertyValue);", "IEventProperty_put_Value_Proxy": "HRESULT WINAPI IEventProperty_put_Value_Proxy(IEventProperty *This,VARIANT *propertyValue);", "IEventControl_SetPublisherFilter_Proxy": "HRESULT WINAPI IEventControl_SetPublisherFilter_Proxy(IEventControl *This,BSTR methodName,IPublisherFilter *pPublisherFilter);", "IEventControl_get_AllowInprocActivation_Proxy": "HRESULT WINAPI IEventControl_get_AllowInprocActivation_Proxy(IEventControl *This,WINBOOL *pfAllowInprocActivation);", "IEventControl_put_AllowInprocActivation_Proxy": "HRESULT WINAPI IEventControl_put_AllowInprocActivation_Proxy(IEventControl *This,WINBOOL fAllowInprocActivation);", "IEventControl_GetSubscriptions_Proxy": "HRESULT WINAPI IEventControl_GetSubscriptions_Proxy(IEventControl *This,BSTR methodName,BSTR optionalCriteria,int *optionalErrorIndex,IEventObjectCollection **ppCollection);", "IEventControl_SetDefaultQuery_Proxy": "HRESULT WINAPI IEventControl_SetDefaultQuery_Proxy(IEventControl *This,BSTR methodName,BSTR criteria,int *errorIndex);", "IMultiInterfaceEventControl_SetMultiInterfacePublisherFilter_Proxy": "HRESULT WINAPI IMultiInterfaceEventControl_SetMultiInterfacePublisherFilter_Proxy(IMultiInterfaceEventControl *This,IMultiInterfacePublisherFilter *classFilter);", "IMultiInterfaceEventControl_GetSubscriptions_Proxy": "HRESULT WINAPI IMultiInterfaceEventControl_GetSubscriptions_Proxy(IMultiInterfaceEventControl *This,REFIID eventIID,BSTR bstrMethodName,BSTR optionalCriteria,int *optionalErrorIndex,IEventObjectCollection **ppCollection);", "IMultiInterfaceEventControl_SetDefaultQuery_Proxy": "HRESULT WINAPI IMultiInterfaceEventControl_SetDefaultQuery_Proxy(IMultiInterfaceEventControl *This,REFIID eventIID,BSTR bstrMethodName,BSTR bstrCriteria,int *errorIndex);", "IMultiInterfaceEventControl_get_AllowInprocActivation_Proxy": "HRESULT WINAPI IMultiInterfaceEventControl_get_AllowInprocActivation_Proxy(IMultiInterfaceEventControl *This,WINBOOL *pfAllowInprocActivation);", "IMultiInterfaceEventControl_put_AllowInprocActivation_Proxy": "HRESULT WINAPI IMultiInterfaceEventControl_put_AllowInprocActivation_Proxy(IMultiInterfaceEventControl *This,WINBOOL fAllowInprocActivation);", "IMultiInterfaceEventControl_get_FireInParallel_Proxy": "HRESULT WINAPI IMultiInterfaceEventControl_get_FireInParallel_Proxy(IMultiInterfaceEventControl *This,WINBOOL *pfFireInParallel);", "IMultiInterfaceEventControl_put_FireInParallel_Proxy": "HRESULT WINAPI IMultiInterfaceEventControl_put_FireInParallel_Proxy(IMultiInterfaceEventControl *This,WINBOOL fFireInParallel);", "FireEventCallBack": "static DWORD WINAPI FireEventCallBack(LPVOID pEventStructure);", "CreatePropertySheetPageA": "WINCOMMCTRLAPI HPROPSHEETPAGE WINAPI CreatePropertySheetPageA(LPCPROPSHEETPAGEA constPropSheetPagePointer);", "CreatePropertySheetPageW": "WINCOMMCTRLAPI HPROPSHEETPAGE WINAPI CreatePropertySheetPageW(LPCPROPSHEETPAGEW constPropSheetPagePointer);", "DestroyPropertySheetPage": "WINCOMMCTRLAPI WINBOOL WINAPI DestroyPropertySheetPage(HPROPSHEETPAGE);", "PropertySheetA": "WINCOMMCTRLAPI INT_PTR WINAPI PropertySheetA(LPCPROPSHEETHEADERA);", "PropertySheetW": "WINCOMMCTRLAPI INT_PTR WINAPI PropertySheetW(LPCPROPSHEETHEADERW);", "WSManInitialize": "DWORD WINAPI WSManInitialize (DWORD flags, WSMAN_API_HANDLE *apiHandle);", "WSManDeinitialize": "DWORD WINAPI WSManDeinitialize (WSMAN_API_HANDLE apiHandle, DWORD flags);", "WSManGetErrorMessage": "DWORD WINAPI WSManGetErrorMessage (WSMAN_API_HANDLE apiHandle, DWORD flags, PCWSTR languageCode, DWORD errorCode, DWORD messageLength, PWSTR message, DWORD *messageLengthUsed);", "WSManCreateSession": "DWORD WINAPI WSManCreateSession (WSMAN_API_HANDLE apiHandle, PCWSTR connection, DWORD flags, WSMAN_AUTHENTICATION_CREDENTIALS *serverAuthenticationCredentials, WSMAN_PROXY_INFO *proxyInfo, WSMAN_SESSION_HANDLE *session);", "WSManCloseSession": "DWORD WINAPI WSManCloseSession (WSMAN_SESSION_HANDLE session, DWORD flags);", "WSManSetSessionOption": "DWORD WINAPI WSManSetSessionOption (WSMAN_SESSION_HANDLE session, WSManSessionOption option, WSMAN_DATA *data);", "WSManGetSessionOptionAsDword": "DWORD WINAPI WSManGetSessionOptionAsDword (WSMAN_SESSION_HANDLE session, WSManSessionOption option, DWORD *value);", "WSManGetSessionOptionAsString": "DWORD WINAPI WSManGetSessionOptionAsString (WSMAN_SESSION_HANDLE session, WSManSessionOption option, DWORD stringLength, PWSTR string, DWORD *stringLengthUsed);", "WSManCloseOperation": "DWORD WINAPI WSManCloseOperation (WSMAN_OPERATION_HANDLE operationHandle, DWORD flags);", "WSManCreateShell": "void WINAPI WSManCreateShell (WSMAN_SESSION_HANDLE session, DWORD flags, PCWSTR resourceUri, WSMAN_SHELL_STARTUP_INFO *startupInfo, WSMAN_OPTION_SET *options, WSMAN_DATA *createXml, WSMAN_SHELL_ASYNC *async, WSMAN_SHELL_HANDLE *shell);", "WSManRunShellCommand": "void WINAPI WSManRunShellCommand (WSMAN_SHELL_HANDLE shell, DWORD flags, PCWSTR commandLine, WSMAN_COMMAND_ARG_SET *args, WSMAN_OPTION_SET *options, WSMAN_SHELL_ASYNC *async, WSMAN_COMMAND_HANDLE *command);", "WSManSignalShell": "void WINAPI WSManSignalShell (WSMAN_SHELL_HANDLE shell, WSMAN_COMMAND_HANDLE command, DWORD flags, PCWSTR code, WSMAN_SHELL_ASYNC *async, WSMAN_OPERATION_HANDLE *signalOperation);", "WSManReceiveShellOutput": "void WINAPI WSManReceiveShellOutput (WSMAN_SHELL_HANDLE shell, WSMAN_COMMAND_HANDLE command, DWORD flags, WSMAN_STREAM_ID_SET *desiredStreamSet, WSMAN_SHELL_ASYNC *async, WSMAN_OPERATION_HANDLE *receiveOperation);", "WSManSendShellInput": "void WINAPI WSManSendShellInput (WSMAN_SHELL_HANDLE shell, WSMAN_COMMAND_HANDLE command, DWORD flags, PCWSTR streamId, WSMAN_DATA *streamData, WINBOOL endOfStream, WSMAN_SHELL_ASYNC *async, WSMAN_OPERATION_HANDLE *sendOperation);", "WSManCloseCommand": "void WINAPI WSManCloseCommand (WSMAN_COMMAND_HANDLE commandHandle, DWORD flags, WSMAN_SHELL_ASYNC *async);", "WSManCloseShell": "void WINAPI WSManCloseShell (WSMAN_SHELL_HANDLE shellHandle, DWORD flags, WSMAN_SHELL_ASYNC *async);", "WSManPluginReportContext": "DWORD WINAPI WSManPluginReportContext (WSMAN_PLUGIN_REQUEST *requestDetails, DWORD flags, PVOID context);", "WSManPluginReceiveResult": "DWORD WINAPI WSManPluginReceiveResult (WSMAN_PLUGIN_REQUEST *requestDetails, DWORD flags, PCWSTR stream, WSMAN_DATA *streamResult, PCWSTR commandState, DWORD exitCode);", "WSManPluginOperationComplete": "DWORD WINAPI WSManPluginOperationComplete (WSMAN_PLUGIN_REQUEST *requestDetails, DWORD flags, DWORD errorCode, PCWSTR extendedInformation);", "WSManPluginGetOperationParameters": "DWORD WINAPI WSManPluginGetOperationParameters (WSMAN_PLUGIN_REQUEST *requestDetails, DWORD flags, WSMAN_DATA *data);", "WSManPluginGetConfiguration": "DWORD WINAPI WSManPluginGetConfiguration (PVOID pluginContext, DWORD flags, WSMAN_DATA *data);", "WSManPluginReportCompletion": "DWORD WINAPI WSManPluginReportCompletion (PVOID pluginContext, DWORD flags);", "WSManPluginFreeRequestDetails": "DWORD WINAPI WSManPluginFreeRequestDetails (WSMAN_PLUGIN_REQUEST *requestDetails);", "WSManPluginAuthzUserComplete": "DWORD WINAPI WSManPluginAuthzUserComplete (WSMAN_SENDER_DETAILS *senderDetails, DWORD flags, PVOID userAuthorizationContext, HANDLE impersonationToken, WINBOOL userIsAdministrator, DWORD errorCode, PCWSTR extendedErrorInformation);", "WSManPluginAuthzOperationComplete": "DWORD WINAPI WSManPluginAuthzOperationComplete (WSMAN_SENDER_DETAILS *senderDetails, DWORD flags, PVOID userAuthorizationContext, DWORD errorCode, PCWSTR extendedErrorInformation);", "WSManPluginAuthzQueryQuotaComplete": "DWORD WINAPI WSManPluginAuthzQueryQuotaComplete (WSMAN_SENDER_DETAILS *senderDetails, DWORD flags, WSMAN_AUTHZ_QUOTA *quota, DWORD errorCode, PCWSTR extendedErrorInformation);", "WSManCreateShellEx": "void WINAPI WSManCreateShellEx (WSMAN_SESSION_HANDLE session, DWORD flags, PCWSTR resourceUri, PCWSTR shellId, WSMAN_SHELL_STARTUP_INFO *startupInfo, WSMAN_OPTION_SET *options, WSMAN_DATA *createXml, WSMAN_SHELL_ASYNC *async, WSMAN_SHELL_HANDLE *shell);", "WSManRunShellCommandEx": "void WINAPI WSManRunShellCommandEx (WSMAN_SHELL_HANDLE shell, DWORD flags, PCWSTR commandId, PCWSTR commandLine, WSMAN_COMMAND_ARG_SET *args, WSMAN_OPTION_SET *options, WSMAN_SHELL_ASYNC *async, WSMAN_COMMAND_HANDLE *command);", "WSManDisconnectShell": "void WINAPI WSManDisconnectShell (WSMAN_SHELL_HANDLE shell, DWORD flags, WSMAN_SHELL_DISCONNECT_INFO *disconnectInfo, WSMAN_SHELL_ASYNC *async);", "WSManReconnectShell": "void WINAPI WSManReconnectShell (WSMAN_SHELL_HANDLE shell, DWORD flags, WSMAN_SHELL_ASYNC *async);", "WSManReconnectShellCommand": "void WINAPI WSManReconnectShellCommand (WSMAN_COMMAND_HANDLE commandHandle, DWORD flags, WSMAN_SHELL_ASYNC *async);", "WSManConnectShell": "void WINAPI WSManConnectShell (WSMAN_SESSION_HANDLE session, DWORD flags, PCWSTR resourceUri, PCWSTR shellID, WSMAN_OPTION_SET *options, WSMAN_DATA *connectXml, WSMAN_SHELL_ASYNC *async, WSMAN_SHELL_HANDLE *shell);", "WSManConnectShellCommand": "void WINAPI WSManConnectShellCommand (WSMAN_SHELL_HANDLE shell, DWORD flags, PCWSTR commandID, WSMAN_OPTION_SET *options, WSMAN_DATA *connectXml, WSMAN_SHELL_ASYNC *async, WSMAN_COMMAND_HANDLE *command);", "LPM_Initialize": "ULONG WINAPI LPM_Initialize(LPM_HANDLE LpmHandle,LPM_INIT_INFO *pLpmInitInfo,DWORD *pLpmVersionNumber,PETYPE *pSupportedPeType,VOID *Reserved);", "LPM_Deinitialize": "ULONG WINAPI LPM_Deinitialize(LPM_HANDLE LpmHandle);", "LPM_AdmitRsvpMsg": "ULONG WINAPI LPM_AdmitRsvpMsg(RHANDLE PcmReqHandle,RSVP_HOP *pRecvdIntf,RSVP_MSG_OBJS *pRsvpMsgObjs,int RcvdRsvpMsgLength,UCHAR *RcvdRsvpMsg,ULONG *pulPcmActionFlags,POLICY_DECISION *pPolicyDecisions,void *Reserved);", "LPM_GetRsvpObjects": "ULONG WINAPI LPM_GetRsvpObjects(RHANDLE PcmReqHandle,ULONG MaxPdSize,RSVP_HOP *SendingIntfAddr,RSVP_MSG_OBJS *pRsvpMsgObjs,int *pRsvpObjectsCount,RsvpObjHdr ***pppRsvpObjects,void *Reserved);", "LPM_DeleteState": "VOID WINAPI LPM_DeleteState(RSVP_HOP *pRcvdIfAddr,MSG_TYPE RsvpMsgType,RSVP_SESSION *pRsvpSession,RSVP_HOP *pRsvpFromHop,RESV_STYLE *pResvStyle,int FilterSpecCount,FILTER_SPEC **ppFilterSpecList,int TearDownReason);", "LPM_IpAddressTable": "WINBOOL WINAPI LPM_IpAddressTable (ULONG cIpAddrTable,LPMIPTABLE *pIpAddrTable);", "LPM_CommitResv": "VOID WINAPI LPM_CommitResv (RSVP_SESSION *RsvpSession,RSVP_HOP *FlowInstalledIntf,RESV_STYLE *RsvpStyle,int FilterSpecCount,FILTER_SPEC **ppFilterSpecList,IS_FLOWSPEC *pMergedFlowSpec,ULONG CommitDecision);", "ITTerminalControl_get_AddressHandle_Proxy": "HRESULT WINAPI ITTerminalControl_get_AddressHandle_Proxy(ITTerminalControl *This,MSP_HANDLE *phtAddress);", "ITTerminalControl_ConnectTerminal_Proxy": "HRESULT WINAPI ITTerminalControl_ConnectTerminal_Proxy(ITTerminalControl *This,IGraphBuilder *pGraph,DWORD dwTerminalDirection,DWORD *pdwNumPins,IPin **ppPins);", "ITTerminalControl_CompleteConnectTerminal_Proxy": "HRESULT WINAPI ITTerminalControl_CompleteConnectTerminal_Proxy(ITTerminalControl *This);", "ITTerminalControl_DisconnectTerminal_Proxy": "HRESULT WINAPI ITTerminalControl_DisconnectTerminal_Proxy(ITTerminalControl *This,IGraphBuilder *pGraph,DWORD dwReserved);", "ITTerminalControl_RunRenderFilter_Proxy": "HRESULT WINAPI ITTerminalControl_RunRenderFilter_Proxy(ITTerminalControl *This);", "ITTerminalControl_StopRenderFilter_Proxy": "HRESULT WINAPI ITTerminalControl_StopRenderFilter_Proxy(ITTerminalControl *This);", "ITPluggableTerminalInitialization_InitializeDynamic_Proxy": "HRESULT WINAPI ITPluggableTerminalInitialization_InitializeDynamic_Proxy(ITPluggableTerminalInitialization *This,IID iidTerminalClass,DWORD dwMediaType,TERMINAL_DIRECTION Direction,MSP_HANDLE htAddress);", "ITTerminalManager_GetDynamicTerminalClasses_Proxy": "HRESULT WINAPI ITTerminalManager_GetDynamicTerminalClasses_Proxy(ITTerminalManager *This,DWORD dwMediaTypes,DWORD *pdwNumClasses,IID *pTerminalClasses);", "ITTerminalManager_CreateDynamicTerminal_Proxy": "HRESULT WINAPI ITTerminalManager_CreateDynamicTerminal_Proxy(ITTerminalManager *This,IUnknown *pOuterUnknown,IID iidTerminalClass,DWORD dwMediaType,TERMINAL_DIRECTION Direction,MSP_HANDLE htAddress,ITTerminal **ppTerminal);", "ITTerminalManager2_GetPluggableSuperclasses_Proxy": "HRESULT WINAPI ITTerminalManager2_GetPluggableSuperclasses_Proxy(ITTerminalManager2 *This,DWORD *pdwNumSuperclasses,IID *pSuperclasses);", "ITTerminalManager2_GetPluggableTerminalClasses_Proxy": "HRESULT WINAPI ITTerminalManager2_GetPluggableTerminalClasses_Proxy(ITTerminalManager2 *This,IID iidSuperclass,DWORD dwMediaTypes,DWORD *pdwNumClasses,IID *pTerminalClasses);", "ITPluggableTerminalClassRegistration_get_Name_Proxy": "HRESULT WINAPI ITPluggableTerminalClassRegistration_get_Name_Proxy(ITPluggableTerminalClassRegistration *This,BSTR *pName);", "ITPluggableTerminalClassRegistration_put_Name_Proxy": "HRESULT WINAPI ITPluggableTerminalClassRegistration_put_Name_Proxy(ITPluggableTerminalClassRegistration *This,BSTR bstrName);", "ITPluggableTerminalClassRegistration_get_Company_Proxy": "HRESULT WINAPI ITPluggableTerminalClassRegistration_get_Company_Proxy(ITPluggableTerminalClassRegistration *This,BSTR *pCompany);", "ITPluggableTerminalClassRegistration_put_Company_Proxy": "HRESULT WINAPI ITPluggableTerminalClassRegistration_put_Company_Proxy(ITPluggableTerminalClassRegistration *This,BSTR bstrCompany);", "ITPluggableTerminalClassRegistration_get_Version_Proxy": "HRESULT WINAPI ITPluggableTerminalClassRegistration_get_Version_Proxy(ITPluggableTerminalClassRegistration *This,BSTR *pVersion);", "ITPluggableTerminalClassRegistration_put_Version_Proxy": "HRESULT WINAPI ITPluggableTerminalClassRegistration_put_Version_Proxy(ITPluggableTerminalClassRegistration *This,BSTR bstrVersion);", "ITPluggableTerminalClassRegistration_get_TerminalClass_Proxy": "HRESULT WINAPI ITPluggableTerminalClassRegistration_get_TerminalClass_Proxy(ITPluggableTerminalClassRegistration *This,BSTR *pTerminalClass);", "ITPluggableTerminalClassRegistration_put_TerminalClass_Proxy": "HRESULT WINAPI ITPluggableTerminalClassRegistration_put_TerminalClass_Proxy(ITPluggableTerminalClassRegistration *This,BSTR bstrTerminalClass);", "ITPluggableTerminalClassRegistration_get_CLSID_Proxy": "HRESULT WINAPI ITPluggableTerminalClassRegistration_get_CLSID_Proxy(ITPluggableTerminalClassRegistration *This,BSTR *pCLSID);", "ITPluggableTerminalClassRegistration_put_CLSID_Proxy": "HRESULT WINAPI ITPluggableTerminalClassRegistration_put_CLSID_Proxy(ITPluggableTerminalClassRegistration *This,BSTR bstrCLSID);", "ITPluggableTerminalClassRegistration_get_Direction_Proxy": "HRESULT WINAPI ITPluggableTerminalClassRegistration_get_Direction_Proxy(ITPluggableTerminalClassRegistration *This,TMGR_DIRECTION *pDirection);", "ITPluggableTerminalClassRegistration_put_Direction_Proxy": "HRESULT WINAPI ITPluggableTerminalClassRegistration_put_Direction_Proxy(ITPluggableTerminalClassRegistration *This,TMGR_DIRECTION nDirection);", "ITPluggableTerminalClassRegistration_get_MediaTypes_Proxy": "HRESULT WINAPI ITPluggableTerminalClassRegistration_get_MediaTypes_Proxy(ITPluggableTerminalClassRegistration *This,__LONG32 *pMediaTypes);", "ITPluggableTerminalClassRegistration_put_MediaTypes_Proxy": "HRESULT WINAPI ITPluggableTerminalClassRegistration_put_MediaTypes_Proxy(ITPluggableTerminalClassRegistration *This,__LONG32 nMediaTypes);", "ITPluggableTerminalClassRegistration_Add_Proxy": "HRESULT WINAPI ITPluggableTerminalClassRegistration_Add_Proxy(ITPluggableTerminalClassRegistration *This,BSTR bstrSuperclass);", "ITPluggableTerminalClassRegistration_Delete_Proxy": "HRESULT WINAPI ITPluggableTerminalClassRegistration_Delete_Proxy(ITPluggableTerminalClassRegistration *This,BSTR bstrSuperclass);", "ITPluggableTerminalClassRegistration_GetTerminalClassInfo_Proxy": "HRESULT WINAPI ITPluggableTerminalClassRegistration_GetTerminalClassInfo_Proxy(ITPluggableTerminalClassRegistration *This,BSTR bstrSuperclass);", "ITPluggableTerminalSuperclassRegistration_get_Name_Proxy": "HRESULT WINAPI ITPluggableTerminalSuperclassRegistration_get_Name_Proxy(ITPluggableTerminalSuperclassRegistration *This,BSTR *pName);", "ITPluggableTerminalSuperclassRegistration_put_Name_Proxy": "HRESULT WINAPI ITPluggableTerminalSuperclassRegistration_put_Name_Proxy(ITPluggableTerminalSuperclassRegistration *This,BSTR bstrName);", "ITPluggableTerminalSuperclassRegistration_get_CLSID_Proxy": "HRESULT WINAPI ITPluggableTerminalSuperclassRegistration_get_CLSID_Proxy(ITPluggableTerminalSuperclassRegistration *This,BSTR *pCLSID);", "ITPluggableTerminalSuperclassRegistration_put_CLSID_Proxy": "HRESULT WINAPI ITPluggableTerminalSuperclassRegistration_put_CLSID_Proxy(ITPluggableTerminalSuperclassRegistration *This,BSTR bstrCLSID);", "ITPluggableTerminalSuperclassRegistration_Add_Proxy": "HRESULT WINAPI ITPluggableTerminalSuperclassRegistration_Add_Proxy(ITPluggableTerminalSuperclassRegistration *This);", "ITPluggableTerminalSuperclassRegistration_Delete_Proxy": "HRESULT WINAPI ITPluggableTerminalSuperclassRegistration_Delete_Proxy(ITPluggableTerminalSuperclassRegistration *This);", "ITPluggableTerminalSuperclassRegistration_GetTerminalSuperclassInfo_Proxy": "HRESULT WINAPI ITPluggableTerminalSuperclassRegistration_GetTerminalSuperclassInfo_Proxy(ITPluggableTerminalSuperclassRegistration *This);", "ITPluggableTerminalSuperclassRegistration_get_TerminalClasses_Proxy": "HRESULT WINAPI ITPluggableTerminalSuperclassRegistration_get_TerminalClasses_Proxy(ITPluggableTerminalSuperclassRegistration *This,VARIANT *pTerminals);", "ITPluggableTerminalSuperclassRegistration_EnumerateTerminalClasses_Proxy": "HRESULT WINAPI ITPluggableTerminalSuperclassRegistration_EnumerateTerminalClasses_Proxy(ITPluggableTerminalSuperclassRegistration *This,IEnumTerminalClass **ppTerminals);", "NewIndex": "HINDEX WINAPI NewIndex(const PBYTE pbSourceName,UINT uiTime1,UINT uiTime2,UINT iCharsetDefault,UINT lcidDefault,UINT fdwOptions);", "ScanTopicTitle": "ERRORCODE WINAPI ScanTopicTitle(HINDEX hinx,PBYTE pbTitle,UINT cbTitle,UINT iTopic,HANDLE hTopic,UINT iCharset,UINT lcid);", "ScanTopicText": "ERRORCODE WINAPI ScanTopicText (HINDEX hinx,PBYTE pbText,UINT cbText,UINT iCharset,UINT lcid);", "SaveIndex": "ERRORCODE WINAPI SaveIndex (HINDEX hinx,PSZ pszFileName);", "DeleteIndex": "ERRORCODE WINAPI DeleteIndex (HINDEX hinx);", "RegisterAnimator": "ERRORCODE WINAPI RegisterAnimator(ANIMATOR pAnimator,HWND hwndAnimator);", "IsValidIndex": "WINBOOL WINAPI IsValidIndex(PSZ pszFileName,UINT dwOptions);", "SetDirectoryLocator": "void WINAPI SetDirectoryLocator(HWND hwndLocator);", "NewSearcher": "HSEARCHER WINAPI NewSearcher();", "OpenIndex": "INT WINAPI OpenIndex(HSEARCHER hsrch,PSZ pszIndexFileName,PBYTE pbSourceName,PUINT pcbSourceNameLimit,PUINT pTime1,PUINT pTime2);", "DiscardIndex": "ERRORCODE WINAPI DiscardIndex (HSEARCHER hsrch,INT iIndex);", "QueryOptions": "ERRORCODE WINAPI QueryOptions (HSEARCHER hsrch,INT iIndex,PUINT pfdwOptions);", "SaveGroup": "ERRORCODE WINAPI SaveGroup (HSEARCHER hsrch,PSZ pszFileName);", "LoadGroup": "ERRORCODE WINAPI LoadGroup (HSEARCHER hsrch,PSZ pszFileName);", "OpenDialog": "HWND WINAPI OpenDialog (HSEARCHER hsrch,HWND hwndParent);", "DeleteSearcher": "ERRORCODE WINAPI DeleteSearcher(HSEARCHER hsrch);", "NewCompressor": "HCOMPRESSOR WINAPI NewCompressor(UINT iCharsetDefault);", "ScanText": "ERRORCODE WINAPI ScanText(HCOMPRESSOR hcmp,PBYTE pbText,UINT cbText,UINT iCharset);", "GetPhraseTable": "ERRORCODE WINAPI GetPhraseTable(HCOMPRESSOR hcmp,PUINT pcPhrases,PBYTE *ppbImages,PUINT pcbImages,PBYTE *ppacbImageCompressed,PUINT pcbCompressed);", "SetPhraseTable": "ERRORCODE WINAPI SetPhraseTable(HCOMPRESSOR hcmp,PBYTE pbImages,UINT cbImages,PBYTE pacbImageCompressed,UINT cbCompressed);", "CompressText": "INT WINAPI CompressText (HCOMPRESSOR hcmp,PBYTE pbText,UINT cbText,PBYTE *ppbCompressed,UINT iCharset);", "DecompressText": "INT WINAPI DecompressText(HCOMPRESSOR hcmp,PBYTE pbCompressed,UINT cbCompressed,PBYTE pbText);", "DeleteCompressor": "ERRORCODE WINAPI DeleteCompressor(HCOMPRESSOR hcmp);", "NewHiliter": "HHILITER WINAPI NewHiliter(HSEARCHER hSearch);", "DeleteHiliter": "ERRORCODE WINAPI DeleteHiliter(HHILITER hhil);", "ScanDisplayText": "ERRORCODE WINAPI ScanDisplayText(HHILITER hhil,PBYTE pbText,int cbText,UINT iCharset,LCID lcid);", "ClearDisplayText": "ERRORCODE WINAPI ClearDisplayText(HHILITER hhil);", "CountHilites": "int WINAPI CountHilites(HHILITER hhil,int base,int limit);", "QueryHilites": "int WINAPI QueryHilites(HHILITER hhil,int base,int limit,int cHilites,HILITE *paHilites);", "DRMCreateClientSession": "HRESULT WINAPI DRMCreateClientSession(", "DRMAcquireIssuanceLicenseTemplate": "HRESULT WINAPI DRMAcquireIssuanceLicenseTemplate(", "DRMActivate": "HRESULT WINAPI DRMActivate(", "DRMGetServiceLocation": "HRESULT WINAPI DRMGetServiceLocation(", "DRMIsActivated": "HRESULT WINAPI DRMIsActivated(", "DRMCheckSecurity": "HRESULT WINAPI DRMCheckSecurity(", "DRMCloseSession": "HRESULT WINAPI DRMCloseSession(", "DRMCreateLicenseStorageSession": "HRESULT WINAPI DRMCreateLicenseStorageSession(", "DRMDuplicateSession": "HRESULT WINAPI DRMDuplicateSession(", "DRMGetClientVersion": "HRESULT WINAPI DRMGetClientVersion(", "DRMGetEnvironmentInfo": "HRESULT WINAPI DRMGetEnvironmentInfo(", "DRMGetIntervalTime": "HRESULT WINAPI DRMGetIntervalTime(", "DRMGetOwnerLicense": "HRESULT WINAPI DRMGetOwnerLicense(", "DRMGetProcAddress": "HRESULT WINAPI DRMGetProcAddress(", "DRMGetSecurityProvider": "HRESULT WINAPI DRMGetSecurityProvider(", "DRMInitEnvironment": "HRESULT WINAPI DRMInitEnvironment(", "DRMLoadLibrary": "HRESULT WINAPI DRMLoadLibrary(", "DRMRegisterContent": "HRESULT WINAPI DRMRegisterContent(", "DRMRegisterRevocationList": "HRESULT WINAPI DRMRegisterRevocationList(", "DRMRepair": "HRESULT WINAPI DRMRepair(void);", "DRMSetIntervalTime": "HRESULT WINAPI DRMSetIntervalTime(", "DRMSetGlobalOptions": "HRESULT WINAPI DRMSetGlobalOptions(", "DRMAddRightWithUser": "HRESULT WINAPI DRMAddRightWithUser(", "DRMClearAllRights": "HRESULT WINAPI DRMClearAllRights(", "DRMCreateIssuanceLicense": "HRESULT WINAPI DRMCreateIssuanceLicense(", "DRMCreateRight": "HRESULT WINAPI DRMCreateRight(", "DRMCreateUser": "HRESULT WINAPI DRMCreateUser(", "DRMGetApplicationSpecificData": "HRESULT WINAPI DRMGetApplicationSpecificData(", "DRMGetIssuanceLicenseInfo": "HRESULT WINAPI DRMGetIssuanceLicenseInfo(", "DRMGetIssuanceLicenseTemplate": "HRESULT WINAPI DRMGetIssuanceLicenseTemplate(", "DRMGetMetaData": "HRESULT WINAPI DRMGetMetaData(", "DRMGetNameAndDescription": "HRESULT WINAPI DRMGetNameAndDescription(", "DRMGetRevocationPoint": "HRESULT WINAPI DRMGetRevocationPoint(", "DRMGetRightExtendedInfo": "HRESULT WINAPI DRMGetRightExtendedInfo(", "DRMGetRightInfo": "HRESULT WINAPI DRMGetRightInfo(", "DRMGetSignedIssuanceLicense": "HRESULT WINAPI DRMGetSignedIssuanceLicense(", "DRMGetUsagePolicy": "HRESULT WINAPI DRMGetUsagePolicy(", "DRMGetUserInfo": "HRESULT WINAPI DRMGetUserInfo(", "DRMGetUserRights": "HRESULT WINAPI DRMGetUserRights(", "DRMGetUsers": "HRESULT WINAPI DRMGetUsers(", "DRMSetApplicationSpecificData": "HRESULT WINAPI DRMSetApplicationSpecificData(", "DRMSetMetaData": "HRESULT WINAPI DRMSetMetaData(", "DRMSetNameAndDescription": "HRESULT WINAPI DRMSetNameAndDescription(", "DRMSetRevocationPoint": "HRESULT WINAPI DRMSetRevocationPoint(", "DRMSetUsagePolicy": "HRESULT WINAPI DRMSetUsagePolicy(", "DRMCloseEnvironmentHandle": "HRESULT WINAPI DRMCloseEnvironmentHandle(", "DRMCloseHandle": "HRESULT WINAPI DRMCloseHandle(", "DRMClosePubHandle": "HRESULT WINAPI DRMClosePubHandle(", "DRMCloseQueryHandle": "HRESULT WINAPI DRMCloseQueryHandle(", "DRMDuplicateEnvironmentHandle": "HRESULT WINAPI DRMDuplicateEnvironmentHandle(", "DRMDuplicateHandle": "HRESULT WINAPI DRMDuplicateHandle(", "DRMDuplicatePubHandle": "HRESULT WINAPI DRMDuplicatePubHandle(", "DRMGetUnboundLicenseAttribute": "HRESULT WINAPI DRMGetUnboundLicenseAttribute(", "DRMGetUnboundLicenseAttributeCount": "HRESULT WINAPI DRMGetUnboundLicenseAttributeCount(", "DRMGetUnboundLicenseObject": "HRESULT WINAPI DRMGetUnboundLicenseObject(", "DRMGetUnboundLicenseObjectCount": "HRESULT WINAPI DRMGetUnboundLicenseObjectCount(", "DRMParseUnboundLicense": "HRESULT WINAPI DRMParseUnboundLicense(", "DRMCreateBoundLicense": "HRESULT WINAPI DRMCreateBoundLicense(", "DRMCreateEnablingPrincipal": "HRESULT WINAPI DRMCreateEnablingPrincipal(", "DRMGetBoundLicenseAttribute": "HRESULT WINAPI DRMGetBoundLicenseAttribute(", "DRMGetBoundLicenseAttributeCount": "HRESULT WINAPI DRMGetBoundLicenseAttributeCount(", "DRMGetBoundLicenseObject": "HRESULT WINAPI DRMGetBoundLicenseObject(", "DRMGetBoundLicenseObjectCount": "HRESULT WINAPI DRMGetBoundLicenseObjectCount(", "DRMAcquireAdvisories": "HRESULT WINAPI DRMAcquireAdvisories(", "DRMAcquireLicense": "HRESULT WINAPI DRMAcquireLicense(", "DRMAddLicense": "HRESULT WINAPI DRMAddLicense(", "DRMConstructCertificateChain": "HRESULT WINAPI DRMConstructCertificateChain(", "DRMDeconstructCertificateChain": "HRESULT WINAPI DRMDeconstructCertificateChain(", "DRMDeleteLicense": "HRESULT WINAPI DRMDeleteLicense(", "DRMEnumerateLicense": "HRESULT WINAPI DRMEnumerateLicense(", "DRMGetCertificateChainCount": "HRESULT WINAPI DRMGetCertificateChainCount(", "DRMAttest": "HRESULT WINAPI DRMAttest(", "DRMCreateEnablingBitsDecryptor": "HRESULT WINAPI DRMCreateEnablingBitsDecryptor(", "DRMCreateEnablingBitsEncryptor": "HRESULT WINAPI DRMCreateEnablingBitsEncryptor(", "DRMDecrypt": "HRESULT WINAPI DRMDecrypt(", "DRMEncrypt": "HRESULT WINAPI DRMEncrypt(", "DRMVerify": "HRESULT WINAPI DRMVerify(", "DRMDecode": "HRESULT WINAPI DRMDecode(", "DRMEncode": "HRESULT WINAPI DRMEncode(", "DRMGetInfo": "HRESULT WINAPI DRMGetInfo(", "DRMGetTime": "HRESULT WINAPI DRMGetTime(", "DRMIsWindowProtected": "HRESULT WINAPI DRMIsWindowProtected(", "DRMRegisterProtectedWindow": "HRESULT WINAPI DRMRegisterProtectedWindow(", "DRMGetSignedIssuanceLicenseEx": "HRESULT WINAPI DRMGetSignedIssuanceLicenseEx(", "ITParticipant_get_ParticipantTypedInfo_Proxy": "HRESULT WINAPI ITParticipant_get_ParticipantTypedInfo_Proxy(ITParticipant *This,PARTICIPANT_TYPED_INFO InfoType,BSTR *ppInfo);", "ITParticipant_get_MediaTypes_Proxy": "HRESULT WINAPI ITParticipant_get_MediaTypes_Proxy(ITParticipant *This,__LONG32 *plMediaType);", "ITParticipant_put_Status_Proxy": "HRESULT WINAPI ITParticipant_put_Status_Proxy(ITParticipant *This,ITStream *pITStream,VARIANT_BOOL fEnable);", "ITParticipant_get_Status_Proxy": "HRESULT WINAPI ITParticipant_get_Status_Proxy(ITParticipant *This,ITStream *pITStream,VARIANT_BOOL *pStatus);", "ITParticipant_get_Streams_Proxy": "HRESULT WINAPI ITParticipant_get_Streams_Proxy(ITParticipant *This,VARIANT *pVariant);", "ITParticipant_EnumerateStreams_Proxy": "HRESULT WINAPI ITParticipant_EnumerateStreams_Proxy(ITParticipant *This,IEnumStream **ppEnumStream);", "ITFormatControl_GetCurrentFormat_Proxy": "HRESULT WINAPI ITFormatControl_GetCurrentFormat_Proxy(ITFormatControl *This,AM_MEDIA_TYPE **ppMediaType);", "ITFormatControl_ReleaseFormat_Proxy": "HRESULT WINAPI ITFormatControl_ReleaseFormat_Proxy(ITFormatControl *This,AM_MEDIA_TYPE *pMediaType);", "ITFormatControl_GetNumberOfCapabilities_Proxy": "HRESULT WINAPI ITFormatControl_GetNumberOfCapabilities_Proxy(ITFormatControl *This,DWORD *pdwCount);", "ITFormatControl_GetStreamCaps_Proxy": "HRESULT WINAPI ITFormatControl_GetStreamCaps_Proxy(ITFormatControl *This,DWORD dwIndex,AM_MEDIA_TYPE **ppMediaType,TAPI_STREAM_CONFIG_CAPS *pStreamConfigCaps,WINBOOL *pfEnabled);", "ITFormatControl_ReOrderCapabilities_Proxy": "HRESULT WINAPI ITFormatControl_ReOrderCapabilities_Proxy(ITFormatControl *This,DWORD *pdwIndices,WINBOOL *pfEnabled,WINBOOL *pfPublicize,DWORD dwNumIndices);", "ITStreamQualityControl_GetRange_Proxy": "HRESULT WINAPI ITStreamQualityControl_GetRange_Proxy(ITStreamQualityControl *This,StreamQualityProperty Property,__LONG32 *plMin,__LONG32 *plMax,__LONG32 *plSteppingDelta,__LONG32 *plDefault,TAPIControlFlags *plFlags);", "ITStreamQualityControl_Get_Proxy": "HRESULT WINAPI ITStreamQualityControl_Get_Proxy(ITStreamQualityControl *This,StreamQualityProperty Property,__LONG32 *plValue,TAPIControlFlags *plFlags);", "ITStreamQualityControl_Set_Proxy": "HRESULT WINAPI ITStreamQualityControl_Set_Proxy(ITStreamQualityControl *This,StreamQualityProperty Property,__LONG32 lValue,TAPIControlFlags lFlags);", "ITCallQualityControl_GetRange_Proxy": "HRESULT WINAPI ITCallQualityControl_GetRange_Proxy(ITCallQualityControl *This,CallQualityProperty Property,__LONG32 *plMin,__LONG32 *plMax,__LONG32 *plSteppingDelta,__LONG32 *plDefault,TAPIControlFlags *plFlags);", "ITCallQualityControl_Get_Proxy": "HRESULT WINAPI ITCallQualityControl_Get_Proxy(ITCallQualityControl *This,CallQualityProperty Property,__LONG32 *plValue,TAPIControlFlags *plFlags);", "ITCallQualityControl_Set_Proxy": "HRESULT WINAPI ITCallQualityControl_Set_Proxy(ITCallQualityControl *This,CallQualityProperty Property,__LONG32 lValue,TAPIControlFlags lFlags);", "ITAudioDeviceControl_GetRange_Proxy": "HRESULT WINAPI ITAudioDeviceControl_GetRange_Proxy(ITAudioDeviceControl *This,AudioDeviceProperty Property,__LONG32 *plMin,__LONG32 *plMax,__LONG32 *plSteppingDelta,__LONG32 *plDefault,TAPIControlFlags *plFlags);", "ITAudioDeviceControl_Get_Proxy": "HRESULT WINAPI ITAudioDeviceControl_Get_Proxy(ITAudioDeviceControl *This,AudioDeviceProperty Property,__LONG32 *plValue,TAPIControlFlags *plFlags);", "ITAudioDeviceControl_Set_Proxy": "HRESULT WINAPI ITAudioDeviceControl_Set_Proxy(ITAudioDeviceControl *This,AudioDeviceProperty Property,__LONG32 lValue,TAPIControlFlags lFlags);", "ITAudioSettings_GetRange_Proxy": "HRESULT WINAPI ITAudioSettings_GetRange_Proxy(ITAudioSettings *This,AudioSettingsProperty Property,__LONG32 *plMin,__LONG32 *plMax,__LONG32 *plSteppingDelta,__LONG32 *plDefault,TAPIControlFlags *plFlags);", "ITAudioSettings_Get_Proxy": "HRESULT WINAPI ITAudioSettings_Get_Proxy(ITAudioSettings *This,AudioSettingsProperty Property,__LONG32 *plValue,TAPIControlFlags *plFlags);", "ITAudioSettings_Set_Proxy": "HRESULT WINAPI ITAudioSettings_Set_Proxy(ITAudioSettings *This,AudioSettingsProperty Property,__LONG32 lValue,TAPIControlFlags lFlags);", "ITQOSApplicationID_SetQOSApplicationID_Proxy": "HRESULT WINAPI ITQOSApplicationID_SetQOSApplicationID_Proxy(ITQOSApplicationID *This,BSTR pApplicationID,BSTR pApplicationGUID,BSTR pSubIDs);", "HeapValidate": "WINBASEAPI WINBOOL WINAPI HeapValidate (HANDLE hHeap, DWORD dwFlags, LPCVOID lpMem);", "HeapSummary": "WINBOOL WINAPI HeapSummary (HANDLE hHeap, DWORD dwFlags, LPHEAP_SUMMARY lpSummary);", "HeapWalk": "WINBASEAPI WINBOOL WINAPI HeapWalk (HANDLE hHeap, LPPROCESS_HEAP_ENTRY lpEntry);", "HeapQueryInformation": "WINBASEAPI WINBOOL WINAPI HeapQueryInformation (HANDLE HeapHandle, HEAP_INFORMATION_CLASS HeapInformationClass, PVOID HeapInformation, SIZE_T HeapInformationLength, PSIZE_T ReturnLength);", "GetProcessHeaps": "WINBASEAPI DWORD WINAPI GetProcessHeaps (DWORD NumberOfHeaps, PHANDLE ProcessHeaps);", "HeapLock": "WINBASEAPI WINBOOL WINAPI HeapLock (HANDLE hHeap);", "HeapUnlock": "WINBASEAPI WINBOOL WINAPI HeapUnlock (HANDLE hHeap);", "HeapCreate": "WINBASEAPI HANDLE WINAPI HeapCreate (DWORD flOptions, SIZE_T dwInitialSize, SIZE_T dwMaximumSize);", "HeapCompact": "WINBASEAPI SIZE_T WINAPI HeapCompact (HANDLE hHeap, DWORD dwFlags);", "HeapDestroy": "WINBASEAPI WINBOOL WINAPI HeapDestroy (HANDLE hHeap);", "HeapAlloc": "WINBASEAPI LPVOID WINAPI HeapAlloc (HANDLE hHeap, DWORD dwFlags, SIZE_T dwBytes);", "HeapReAlloc": "WINBASEAPI LPVOID WINAPI HeapReAlloc (HANDLE hHeap, DWORD dwFlags, LPVOID lpMem, SIZE_T dwBytes);", "HeapFree": "WINBASEAPI WINBOOL WINAPI HeapFree (HANDLE hHeap, DWORD dwFlags, LPVOID lpMem);", "HeapSize": "WINBASEAPI SIZE_T WINAPI HeapSize (HANDLE hHeap, DWORD dwFlags, LPCVOID lpMem);", "GetProcessHeap": "WINBASEAPI HANDLE WINAPI GetProcessHeap (VOID);", "HeapSetInformation": "WINBASEAPI WINBOOL WINAPI HeapSetInformation (HANDLE HeapHandle, HEAP_INFORMATION_CLASS HeapInformationClass, PVOID HeapInformation, SIZE_T HeapInformationLength);", "__WSAFDIsSet": "int WINAPI __WSAFDIsSet(SOCKET,fd_set *);", "IXATransLookup_Lookup_Proxy": "HRESULT WINAPI IXATransLookup_Lookup_Proxy(IXATransLookup *This,ITransaction **ppTransaction);", "IXATransLookup2_Lookup_Proxy": "HRESULT WINAPI IXATransLookup2_Lookup_Proxy(IXATransLookup2 *This,XID *pXID,ITransaction **ppTransaction);", "IResourceManagerSink_TMDown_Proxy": "HRESULT WINAPI IResourceManagerSink_TMDown_Proxy(IResourceManagerSink *This);", "IResourceManager_Enlist_Proxy": "HRESULT WINAPI IResourceManager_Enlist_Proxy(IResourceManager *This,ITransaction *pTransaction,ITransactionResourceAsync *pRes,XACTUOW *pUOW,LONG *pisoLevel,ITransactionEnlistmentAsync **ppEnlist);", "IResourceManager_Reenlist_Proxy": "HRESULT WINAPI IResourceManager_Reenlist_Proxy(IResourceManager *This,byte *pPrepInfo,ULONG cbPrepInfo,DWORD lTimeout,XACTSTAT *pXactStat);", "IResourceManager_ReenlistmentComplete_Proxy": "HRESULT WINAPI IResourceManager_ReenlistmentComplete_Proxy(IResourceManager *This);", "IResourceManager_GetDistributedTransactionManager_Proxy": "HRESULT WINAPI IResourceManager_GetDistributedTransactionManager_Proxy(IResourceManager *This,REFIID iid,void **ppvObject);", "ILastResourceManager_TransactionCommitted_Proxy": "HRESULT WINAPI ILastResourceManager_TransactionCommitted_Proxy(ILastResourceManager *This,byte *pPrepInfo,ULONG cbPrepInfo);", "ILastResourceManager_RecoveryDone_Proxy": "HRESULT WINAPI ILastResourceManager_RecoveryDone_Proxy(ILastResourceManager *This);", "IResourceManager2_Enlist2_Proxy": "HRESULT WINAPI IResourceManager2_Enlist2_Proxy(IResourceManager2 *This,ITransaction *pTransaction,ITransactionResourceAsync *pResAsync,XACTUOW *pUOW,LONG *pisoLevel,XID *pXid,ITransactionEnlistmentAsync **ppEnlist);", "IResourceManager2_Reenlist2_Proxy": "HRESULT WINAPI IResourceManager2_Reenlist2_Proxy(IResourceManager2 *This,XID *pXid,DWORD dwTimeout,XACTSTAT *pXactStat);", "IXAConfig_Initialize_Proxy": "HRESULT WINAPI IXAConfig_Initialize_Proxy(IXAConfig *This,GUID clsidHelperDll);", "IXAConfig_Terminate_Proxy": "HRESULT WINAPI IXAConfig_Terminate_Proxy(IXAConfig *This);", "IRMHelper_RMCount_Proxy": "HRESULT WINAPI IRMHelper_RMCount_Proxy(IRMHelper *This,DWORD dwcTotalNumberOfRMs);", "IRMHelper_RMInfo_Proxy": "HRESULT WINAPI IRMHelper_RMInfo_Proxy(IRMHelper *This,xa_switch_t *pXa_Switch,WINBOOL fCDeclCallingConv,char *pszOpenString,char *pszCloseString,GUID guidRMRecovery);", "IXAObtainRMInfo_ObtainRMInfo_Proxy": "HRESULT WINAPI IXAObtainRMInfo_ObtainRMInfo_Proxy(IXAObtainRMInfo *This,IRMHelper *pIRMHelper);", "IResourceManagerFactory_Create_Proxy": "HRESULT WINAPI IResourceManagerFactory_Create_Proxy(IResourceManagerFactory *This,GUID *pguidRM,CHAR *pszRMName,IResourceManagerSink *pIResMgrSink,IResourceManager **ppResMgr);", "IResourceManagerFactory2_CreateEx_Proxy": "HRESULT WINAPI IResourceManagerFactory2_CreateEx_Proxy(IResourceManagerFactory2 *This,GUID *pguidRM,CHAR *pszRMName,IResourceManagerSink *pIResMgrSink,REFIID riidRequested,void **ppvResMgr);", "IPrepareInfo_GetPrepareInfoSize_Proxy": "HRESULT WINAPI IPrepareInfo_GetPrepareInfoSize_Proxy(IPrepareInfo *This,ULONG *pcbPrepInfo);", "IPrepareInfo_GetPrepareInfo_Proxy": "HRESULT WINAPI IPrepareInfo_GetPrepareInfo_Proxy(IPrepareInfo *This,byte *pPrepInfo);", "IPrepareInfo2_GetPrepareInfoSize_Proxy": "HRESULT WINAPI IPrepareInfo2_GetPrepareInfoSize_Proxy(IPrepareInfo2 *This,ULONG *pcbPrepInfo);", "IPrepareInfo2_GetPrepareInfo_Proxy": "HRESULT WINAPI IPrepareInfo2_GetPrepareInfo_Proxy(IPrepareInfo2 *This,ULONG cbPrepareInfo,byte *pPrepInfo);", "IGetDispenser_GetDispenser_Proxy": "HRESULT WINAPI IGetDispenser_GetDispenser_Proxy(IGetDispenser *This,REFIID iid,void **ppvObject);", "ITransactionVoterBallotAsync2_VoteRequestDone_Proxy": "HRESULT WINAPI ITransactionVoterBallotAsync2_VoteRequestDone_Proxy(ITransactionVoterBallotAsync2 *This,HRESULT hr,BOID *pboidReason);", "ITransactionVoterNotifyAsync2_VoteRequest_Proxy": "HRESULT WINAPI ITransactionVoterNotifyAsync2_VoteRequest_Proxy(ITransactionVoterNotifyAsync2 *This);", "ITransactionVoterFactory2_Create_Proxy": "HRESULT WINAPI ITransactionVoterFactory2_Create_Proxy(ITransactionVoterFactory2 *This,ITransaction *pTransaction,ITransactionVoterNotifyAsync2 *pVoterNotify,ITransactionVoterBallotAsync2 **ppVoterBallot);", "ITransactionPhase0EnlistmentAsync_Enable_Proxy": "HRESULT WINAPI ITransactionPhase0EnlistmentAsync_Enable_Proxy(ITransactionPhase0EnlistmentAsync *This);", "ITransactionPhase0EnlistmentAsync_WaitForEnlistment_Proxy": "HRESULT WINAPI ITransactionPhase0EnlistmentAsync_WaitForEnlistment_Proxy(ITransactionPhase0EnlistmentAsync *This);", "ITransactionPhase0EnlistmentAsync_Phase0Done_Proxy": "HRESULT WINAPI ITransactionPhase0EnlistmentAsync_Phase0Done_Proxy(ITransactionPhase0EnlistmentAsync *This);", "ITransactionPhase0EnlistmentAsync_Unenlist_Proxy": "HRESULT WINAPI ITransactionPhase0EnlistmentAsync_Unenlist_Proxy(ITransactionPhase0EnlistmentAsync *This);", "ITransactionPhase0EnlistmentAsync_GetTransaction_Proxy": "HRESULT WINAPI ITransactionPhase0EnlistmentAsync_GetTransaction_Proxy(ITransactionPhase0EnlistmentAsync *This,ITransaction **ppITransaction);", "ITransactionPhase0NotifyAsync_Phase0Request_Proxy": "HRESULT WINAPI ITransactionPhase0NotifyAsync_Phase0Request_Proxy(ITransactionPhase0NotifyAsync *This,WINBOOL fAbortingHint);", "ITransactionPhase0NotifyAsync_EnlistCompleted_Proxy": "HRESULT WINAPI ITransactionPhase0NotifyAsync_EnlistCompleted_Proxy(ITransactionPhase0NotifyAsync *This,HRESULT status);", "ITransactionPhase0Factory_Create_Proxy": "HRESULT WINAPI ITransactionPhase0Factory_Create_Proxy(ITransactionPhase0Factory *This,ITransactionPhase0NotifyAsync *pPhase0Notify,ITransactionPhase0EnlistmentAsync **ppPhase0Enlistment);", "ITransactionTransmitter_Set_Proxy": "HRESULT WINAPI ITransactionTransmitter_Set_Proxy(ITransactionTransmitter *This,ITransaction *pTransaction);", "ITransactionTransmitter_GetPropagationTokenSize_Proxy": "HRESULT WINAPI ITransactionTransmitter_GetPropagationTokenSize_Proxy(ITransactionTransmitter *This,ULONG *pcbToken);", "ITransactionTransmitter_MarshalPropagationToken_Proxy": "HRESULT WINAPI ITransactionTransmitter_MarshalPropagationToken_Proxy(ITransactionTransmitter *This,ULONG cbToken,byte *rgbToken,ULONG *pcbUsed);", "ITransactionTransmitter_UnmarshalReturnToken_Proxy": "HRESULT WINAPI ITransactionTransmitter_UnmarshalReturnToken_Proxy(ITransactionTransmitter *This,ULONG cbReturnToken,byte *rgbReturnToken);", "ITransactionTransmitter_Reset_Proxy": "HRESULT WINAPI ITransactionTransmitter_Reset_Proxy(ITransactionTransmitter *This);", "ITransactionTransmitterFactory_Create_Proxy": "HRESULT WINAPI ITransactionTransmitterFactory_Create_Proxy(ITransactionTransmitterFactory *This,ITransactionTransmitter **ppTransmitter);", "ITransactionReceiver_UnmarshalPropagationToken_Proxy": "HRESULT WINAPI ITransactionReceiver_UnmarshalPropagationToken_Proxy(ITransactionReceiver *This,ULONG cbToken,byte *rgbToken,ITransaction **ppTransaction);", "ITransactionReceiver_GetReturnTokenSize_Proxy": "HRESULT WINAPI ITransactionReceiver_GetReturnTokenSize_Proxy(ITransactionReceiver *This,ULONG *pcbReturnToken);", "ITransactionReceiver_MarshalReturnToken_Proxy": "HRESULT WINAPI ITransactionReceiver_MarshalReturnToken_Proxy(ITransactionReceiver *This,ULONG cbReturnToken,byte *rgbReturnToken,ULONG *pcbUsed);", "ITransactionReceiver_Reset_Proxy": "HRESULT WINAPI ITransactionReceiver_Reset_Proxy(ITransactionReceiver *This);", "ITransactionReceiverFactory_Create_Proxy": "HRESULT WINAPI ITransactionReceiverFactory_Create_Proxy(ITransactionReceiverFactory *This,ITransactionReceiver **ppReceiver);", "IDtcLuConfigure_Add_Proxy": "HRESULT WINAPI IDtcLuConfigure_Add_Proxy(IDtcLuConfigure *This,byte *pucLuPair,DWORD cbLuPair);", "IDtcLuConfigure_Delete_Proxy": "HRESULT WINAPI IDtcLuConfigure_Delete_Proxy(IDtcLuConfigure *This,byte *pucLuPair,DWORD cbLuPair);", "IDtcLuRecoveryFactory_Create_Proxy": "HRESULT WINAPI IDtcLuRecoveryFactory_Create_Proxy(IDtcLuRecoveryFactory *This,byte *pucLuPair,DWORD cbLuPair,IDtcLuRecovery **ppRecovery);", "IDtcLuRecoveryInitiatedByDtcTransWork_GetLogNameSizes_Proxy": "HRESULT WINAPI IDtcLuRecoveryInitiatedByDtcTransWork_GetLogNameSizes_Proxy(IDtcLuRecoveryInitiatedByDtcTransWork *This,DWORD *pcbOurLogName,DWORD *pcbRemoteLogName);", "IDtcLuRecoveryInitiatedByDtcTransWork_GetOurXln_Proxy": "HRESULT WINAPI IDtcLuRecoveryInitiatedByDtcTransWork_GetOurXln_Proxy(IDtcLuRecoveryInitiatedByDtcTransWork *This,DTCLUXLN *pXln,unsigned char *pOurLogName,unsigned char *pRemoteLogName,DWORD *pdwProtocol);", "IDtcLuRecoveryInitiatedByDtcTransWork_HandleConfirmationFromOurXln_Proxy": "HRESULT WINAPI IDtcLuRecoveryInitiatedByDtcTransWork_HandleConfirmationFromOurXln_Proxy(IDtcLuRecoveryInitiatedByDtcTransWork *This,DTCLUXLNCONFIRMATION Confirmation);", "IDtcLuRecoveryInitiatedByDtcTransWork_HandleTheirXlnResponse_Proxy": "HRESULT WINAPI IDtcLuRecoveryInitiatedByDtcTransWork_HandleTheirXlnResponse_Proxy(IDtcLuRecoveryInitiatedByDtcTransWork *This,DTCLUXLN Xln,unsigned char *pRemoteLogName,DWORD cbRemoteLogName,DWORD dwProtocol,DTCLUXLNCONFIRMATION *pConfirmation);", "IDtcLuRecoveryInitiatedByDtcTransWork_HandleErrorFromOurXln_Proxy": "HRESULT WINAPI IDtcLuRecoveryInitiatedByDtcTransWork_HandleErrorFromOurXln_Proxy(IDtcLuRecoveryInitiatedByDtcTransWork *This,DTCLUXLNERROR Error);", "IDtcLuRecoveryInitiatedByDtcTransWork_CheckForCompareStates_Proxy": "HRESULT WINAPI IDtcLuRecoveryInitiatedByDtcTransWork_CheckForCompareStates_Proxy(IDtcLuRecoveryInitiatedByDtcTransWork *This,WINBOOL *fCompareStates);", "IDtcLuRecoveryInitiatedByDtcTransWork_GetOurTransIdSize_Proxy": "HRESULT WINAPI IDtcLuRecoveryInitiatedByDtcTransWork_GetOurTransIdSize_Proxy(IDtcLuRecoveryInitiatedByDtcTransWork *This,DWORD *pcbOurTransId);", "IDtcLuRecoveryInitiatedByDtcTransWork_GetOurCompareStates_Proxy": "HRESULT WINAPI IDtcLuRecoveryInitiatedByDtcTransWork_GetOurCompareStates_Proxy(IDtcLuRecoveryInitiatedByDtcTransWork *This,unsigned char *pOurTransId,DTCLUCOMPARESTATE *pCompareState);", "IDtcLuRecoveryInitiatedByDtcTransWork_HandleTheirCompareStatesResponse_Proxy": "HRESULT WINAPI IDtcLuRecoveryInitiatedByDtcTransWork_HandleTheirCompareStatesResponse_Proxy(IDtcLuRecoveryInitiatedByDtcTransWork *This,DTCLUCOMPARESTATE CompareState,DTCLUCOMPARESTATESCONFIRMATION *pConfirmation);", "IDtcLuRecoveryInitiatedByDtcTransWork_HandleErrorFromOurCompareStates_Proxy": "HRESULT WINAPI IDtcLuRecoveryInitiatedByDtcTransWork_HandleErrorFromOurCompareStates_Proxy(IDtcLuRecoveryInitiatedByDtcTransWork *This,DTCLUCOMPARESTATESERROR Error);", "IDtcLuRecoveryInitiatedByDtcTransWork_ConversationLost_Proxy": "HRESULT WINAPI IDtcLuRecoveryInitiatedByDtcTransWork_ConversationLost_Proxy(IDtcLuRecoveryInitiatedByDtcTransWork *This);", "IDtcLuRecoveryInitiatedByDtcTransWork_GetRecoverySeqNum_Proxy": "HRESULT WINAPI IDtcLuRecoveryInitiatedByDtcTransWork_GetRecoverySeqNum_Proxy(IDtcLuRecoveryInitiatedByDtcTransWork *This,LONG *plRecoverySeqNum);", "IDtcLuRecoveryInitiatedByDtcTransWork_ObsoleteRecoverySeqNum_Proxy": "HRESULT WINAPI IDtcLuRecoveryInitiatedByDtcTransWork_ObsoleteRecoverySeqNum_Proxy(IDtcLuRecoveryInitiatedByDtcTransWork *This,LONG lNewRecoverySeqNum);", "IDtcLuRecoveryInitiatedByDtcStatusWork_HandleCheckLuStatus_Proxy": "HRESULT WINAPI IDtcLuRecoveryInitiatedByDtcStatusWork_HandleCheckLuStatus_Proxy(IDtcLuRecoveryInitiatedByDtcStatusWork *This,LONG lRecoverySeqNum);", "IDtcLuRecoveryInitiatedByDtc_GetWork_Proxy": "HRESULT WINAPI IDtcLuRecoveryInitiatedByDtc_GetWork_Proxy(IDtcLuRecoveryInitiatedByDtc *This,DTCINITIATEDRECOVERYWORK *pWork,void **ppv);", "IDtcLuRecoveryInitiatedByLuWork_HandleTheirXln_Proxy": "HRESULT WINAPI IDtcLuRecoveryInitiatedByLuWork_HandleTheirXln_Proxy(IDtcLuRecoveryInitiatedByLuWork *This,LONG lRecoverySeqNum,DTCLUXLN Xln,unsigned char *pRemoteLogName,DWORD cbRemoteLogName,unsigned char *pOurLogName,DWORD cbOurLogName,DWORD dwProtocol,DTCLUXLNRESPONSE *pResponse);", "IDtcLuRecoveryInitiatedByLuWork_GetOurLogNameSize_Proxy": "HRESULT WINAPI IDtcLuRecoveryInitiatedByLuWork_GetOurLogNameSize_Proxy(IDtcLuRecoveryInitiatedByLuWork *This,DWORD *pcbOurLogName);", "IDtcLuRecoveryInitiatedByLuWork_GetOurXln_Proxy": "HRESULT WINAPI IDtcLuRecoveryInitiatedByLuWork_GetOurXln_Proxy(IDtcLuRecoveryInitiatedByLuWork *This,DTCLUXLN *pXln,unsigned char *pOurLogName,DWORD *pdwProtocol);", "IDtcLuRecoveryInitiatedByLuWork_HandleConfirmationOfOurXln_Proxy": "HRESULT WINAPI IDtcLuRecoveryInitiatedByLuWork_HandleConfirmationOfOurXln_Proxy(IDtcLuRecoveryInitiatedByLuWork *This,DTCLUXLNCONFIRMATION Confirmation);", "IDtcLuRecoveryInitiatedByLuWork_HandleTheirCompareStates_Proxy": "HRESULT WINAPI IDtcLuRecoveryInitiatedByLuWork_HandleTheirCompareStates_Proxy(IDtcLuRecoveryInitiatedByLuWork *This,unsigned char *pRemoteTransId,DWORD cbRemoteTransId,DTCLUCOMPARESTATE CompareState,DTCLUCOMPARESTATESRESPONSE *pResponse,DTCLUCOMPARESTATE *pCompareState);", "IDtcLuRecoveryInitiatedByLuWork_HandleConfirmationOfOurCompareStates_Proxy": "HRESULT WINAPI IDtcLuRecoveryInitiatedByLuWork_HandleConfirmationOfOurCompareStates_Proxy(IDtcLuRecoveryInitiatedByLuWork *This,DTCLUCOMPARESTATESCONFIRMATION Confirmation);", "IDtcLuRecoveryInitiatedByLuWork_HandleErrorFromOurCompareStates_Proxy": "HRESULT WINAPI IDtcLuRecoveryInitiatedByLuWork_HandleErrorFromOurCompareStates_Proxy(IDtcLuRecoveryInitiatedByLuWork *This,DTCLUCOMPARESTATESERROR Error);", "IDtcLuRecoveryInitiatedByLuWork_ConversationLost_Proxy": "HRESULT WINAPI IDtcLuRecoveryInitiatedByLuWork_ConversationLost_Proxy(IDtcLuRecoveryInitiatedByLuWork *This);", "IDtcLuRecoveryInitiatedByLu_GetObjectToHandleWorkFromLu_Proxy": "HRESULT WINAPI IDtcLuRecoveryInitiatedByLu_GetObjectToHandleWorkFromLu_Proxy(IDtcLuRecoveryInitiatedByLu *This,IDtcLuRecoveryInitiatedByLuWork **ppWork);", "IDtcLuRmEnlistment_Unplug_Proxy": "HRESULT WINAPI IDtcLuRmEnlistment_Unplug_Proxy(IDtcLuRmEnlistment *This,WINBOOL fConversationLost);", "IDtcLuRmEnlistment_BackedOut_Proxy": "HRESULT WINAPI IDtcLuRmEnlistment_BackedOut_Proxy(IDtcLuRmEnlistment *This);", "IDtcLuRmEnlistment_BackOut_Proxy": "HRESULT WINAPI IDtcLuRmEnlistment_BackOut_Proxy(IDtcLuRmEnlistment *This);", "IDtcLuRmEnlistment_Committed_Proxy": "HRESULT WINAPI IDtcLuRmEnlistment_Committed_Proxy(IDtcLuRmEnlistment *This);", "IDtcLuRmEnlistment_Forget_Proxy": "HRESULT WINAPI IDtcLuRmEnlistment_Forget_Proxy(IDtcLuRmEnlistment *This);", "IDtcLuRmEnlistment_RequestCommit_Proxy": "HRESULT WINAPI IDtcLuRmEnlistment_RequestCommit_Proxy(IDtcLuRmEnlistment *This);", "IDtcLuRmEnlistmentSink_AckUnplug_Proxy": "HRESULT WINAPI IDtcLuRmEnlistmentSink_AckUnplug_Proxy(IDtcLuRmEnlistmentSink *This);", "IDtcLuRmEnlistmentSink_TmDown_Proxy": "HRESULT WINAPI IDtcLuRmEnlistmentSink_TmDown_Proxy(IDtcLuRmEnlistmentSink *This);", "IDtcLuRmEnlistmentSink_SessionLost_Proxy": "HRESULT WINAPI IDtcLuRmEnlistmentSink_SessionLost_Proxy(IDtcLuRmEnlistmentSink *This);", "IDtcLuRmEnlistmentSink_BackedOut_Proxy": "HRESULT WINAPI IDtcLuRmEnlistmentSink_BackedOut_Proxy(IDtcLuRmEnlistmentSink *This);", "IDtcLuRmEnlistmentSink_BackOut_Proxy": "HRESULT WINAPI IDtcLuRmEnlistmentSink_BackOut_Proxy(IDtcLuRmEnlistmentSink *This);", "IDtcLuRmEnlistmentSink_Committed_Proxy": "HRESULT WINAPI IDtcLuRmEnlistmentSink_Committed_Proxy(IDtcLuRmEnlistmentSink *This);", "IDtcLuRmEnlistmentSink_Forget_Proxy": "HRESULT WINAPI IDtcLuRmEnlistmentSink_Forget_Proxy(IDtcLuRmEnlistmentSink *This);", "IDtcLuRmEnlistmentSink_Prepare_Proxy": "HRESULT WINAPI IDtcLuRmEnlistmentSink_Prepare_Proxy(IDtcLuRmEnlistmentSink *This);", "IDtcLuRmEnlistmentSink_RequestCommit_Proxy": "HRESULT WINAPI IDtcLuRmEnlistmentSink_RequestCommit_Proxy(IDtcLuRmEnlistmentSink *This);", "IDtcLuRmEnlistmentFactory_Create_Proxy": "HRESULT WINAPI IDtcLuRmEnlistmentFactory_Create_Proxy(IDtcLuRmEnlistmentFactory *This,unsigned char *pucLuPair,DWORD cbLuPair,ITransaction *pITransaction,unsigned char *pTransId,DWORD cbTransId,IDtcLuRmEnlistmentSink *pRmEnlistmentSink,IDtcLuRmEnlistment **ppRmEnlistment);", "IDtcLuSubordinateDtc_Unplug_Proxy": "HRESULT WINAPI IDtcLuSubordinateDtc_Unplug_Proxy(IDtcLuSubordinateDtc *This,WINBOOL fConversationLost);", "IDtcLuSubordinateDtc_BackedOut_Proxy": "HRESULT WINAPI IDtcLuSubordinateDtc_BackedOut_Proxy(IDtcLuSubordinateDtc *This);", "IDtcLuSubordinateDtc_BackOut_Proxy": "HRESULT WINAPI IDtcLuSubordinateDtc_BackOut_Proxy(IDtcLuSubordinateDtc *This);", "IDtcLuSubordinateDtc_Committed_Proxy": "HRESULT WINAPI IDtcLuSubordinateDtc_Committed_Proxy(IDtcLuSubordinateDtc *This);", "IDtcLuSubordinateDtc_Forget_Proxy": "HRESULT WINAPI IDtcLuSubordinateDtc_Forget_Proxy(IDtcLuSubordinateDtc *This);", "IDtcLuSubordinateDtc_Prepare_Proxy": "HRESULT WINAPI IDtcLuSubordinateDtc_Prepare_Proxy(IDtcLuSubordinateDtc *This);", "IDtcLuSubordinateDtc_RequestCommit_Proxy": "HRESULT WINAPI IDtcLuSubordinateDtc_RequestCommit_Proxy(IDtcLuSubordinateDtc *This);", "IDtcLuSubordinateDtcSink_AckUnplug_Proxy": "HRESULT WINAPI IDtcLuSubordinateDtcSink_AckUnplug_Proxy(IDtcLuSubordinateDtcSink *This);", "IDtcLuSubordinateDtcSink_TmDown_Proxy": "HRESULT WINAPI IDtcLuSubordinateDtcSink_TmDown_Proxy(IDtcLuSubordinateDtcSink *This);", "IDtcLuSubordinateDtcSink_SessionLost_Proxy": "HRESULT WINAPI IDtcLuSubordinateDtcSink_SessionLost_Proxy(IDtcLuSubordinateDtcSink *This);", "IDtcLuSubordinateDtcSink_BackedOut_Proxy": "HRESULT WINAPI IDtcLuSubordinateDtcSink_BackedOut_Proxy(IDtcLuSubordinateDtcSink *This);", "IDtcLuSubordinateDtcSink_BackOut_Proxy": "HRESULT WINAPI IDtcLuSubordinateDtcSink_BackOut_Proxy(IDtcLuSubordinateDtcSink *This);", "IDtcLuSubordinateDtcSink_Committed_Proxy": "HRESULT WINAPI IDtcLuSubordinateDtcSink_Committed_Proxy(IDtcLuSubordinateDtcSink *This);", "IDtcLuSubordinateDtcSink_Forget_Proxy": "HRESULT WINAPI IDtcLuSubordinateDtcSink_Forget_Proxy(IDtcLuSubordinateDtcSink *This);", "IDtcLuSubordinateDtcSink_RequestCommit_Proxy": "HRESULT WINAPI IDtcLuSubordinateDtcSink_RequestCommit_Proxy(IDtcLuSubordinateDtcSink *This);", "IDtcLuSubordinateDtcFactory_Create_Proxy": "HRESULT WINAPI IDtcLuSubordinateDtcFactory_Create_Proxy(IDtcLuSubordinateDtcFactory *This,unsigned char *pucLuPair,DWORD cbLuPair,IUnknown *punkTransactionOuter,ISOLEVEL isoLevel,ULONG isoFlags,ITransactionOptions *pOptions,ITransaction **ppTransaction,unsigned char *pTransId,DWORD cbTransId,IDtcLuSubordinateDtcSink *pSubordinateDtcSink,IDtcLuSubordinateDtc **ppSubordinateDtc);", "IAMCollection_get_Count_Proxy": "HRESULT WINAPI IAMCollection_get_Count_Proxy(IAMCollection *This,LONG *plCount);", "IAMCollection_Item_Proxy": "HRESULT WINAPI IAMCollection_Item_Proxy(IAMCollection *This,__LONG32 lItem,IUnknown **ppUnk);", "IAMCollection_get__NewEnum_Proxy": "HRESULT WINAPI IAMCollection_get__NewEnum_Proxy(IAMCollection *This,IUnknown **ppUnk);", "IMediaEvent_GetEventHandle_Proxy": "HRESULT WINAPI IMediaEvent_GetEventHandle_Proxy(IMediaEvent *This,OAEVENT *hEvent);", "IMediaEvent_GetEvent_Proxy": "HRESULT WINAPI IMediaEvent_GetEvent_Proxy(IMediaEvent *This,__LONG32 *lEventCode,LONG_PTR *lParam1,LONG_PTR *lParam2,__LONG32 msTimeout);", "IMediaEvent_WaitForCompletion_Proxy": "HRESULT WINAPI IMediaEvent_WaitForCompletion_Proxy(IMediaEvent *This,__LONG32 msTimeout,__LONG32 *pEvCode);", "IMediaEvent_CancelDefaultHandling_Proxy": "HRESULT WINAPI IMediaEvent_CancelDefaultHandling_Proxy(IMediaEvent *This,__LONG32 lEvCode);", "IMediaEvent_RestoreDefaultHandling_Proxy": "HRESULT WINAPI IMediaEvent_RestoreDefaultHandling_Proxy(IMediaEvent *This,__LONG32 lEvCode);", "IMediaEvent_FreeEventParams_Proxy": "HRESULT WINAPI IMediaEvent_FreeEventParams_Proxy(IMediaEvent *This,__LONG32 lEvCode,LONG_PTR lParam1,LONG_PTR lParam2);", "IMediaEventEx_SetNotifyWindow_Proxy": "HRESULT WINAPI IMediaEventEx_SetNotifyWindow_Proxy(IMediaEventEx *This,OAHWND hwnd,__LONG32 lMsg,LONG_PTR lInstanceData);", "IMediaEventEx_SetNotifyFlags_Proxy": "HRESULT WINAPI IMediaEventEx_SetNotifyFlags_Proxy(IMediaEventEx *This,__LONG32 lNoNotifyFlags);", "IMediaEventEx_GetNotifyFlags_Proxy": "HRESULT WINAPI IMediaEventEx_GetNotifyFlags_Proxy(IMediaEventEx *This,__LONG32 *lplNoNotifyFlags);", "IMediaPosition_get_Duration_Proxy": "HRESULT WINAPI IMediaPosition_get_Duration_Proxy(IMediaPosition *This,REFTIME *plength);", "IMediaPosition_put_CurrentPosition_Proxy": "HRESULT WINAPI IMediaPosition_put_CurrentPosition_Proxy(IMediaPosition *This,REFTIME llTime);", "IMediaPosition_get_CurrentPosition_Proxy": "HRESULT WINAPI IMediaPosition_get_CurrentPosition_Proxy(IMediaPosition *This,REFTIME *pllTime);", "IMediaPosition_get_StopTime_Proxy": "HRESULT WINAPI IMediaPosition_get_StopTime_Proxy(IMediaPosition *This,REFTIME *pllTime);", "IMediaPosition_put_StopTime_Proxy": "HRESULT WINAPI IMediaPosition_put_StopTime_Proxy(IMediaPosition *This,REFTIME llTime);", "IMediaPosition_get_PrerollTime_Proxy": "HRESULT WINAPI IMediaPosition_get_PrerollTime_Proxy(IMediaPosition *This,REFTIME *pllTime);", "IMediaPosition_put_PrerollTime_Proxy": "HRESULT WINAPI IMediaPosition_put_PrerollTime_Proxy(IMediaPosition *This,REFTIME llTime);", "IMediaPosition_put_Rate_Proxy": "HRESULT WINAPI IMediaPosition_put_Rate_Proxy(IMediaPosition *This,double dRate);", "IMediaPosition_get_Rate_Proxy": "HRESULT WINAPI IMediaPosition_get_Rate_Proxy(IMediaPosition *This,double *pdRate);", "IMediaPosition_CanSeekForward_Proxy": "HRESULT WINAPI IMediaPosition_CanSeekForward_Proxy(IMediaPosition *This,LONG *pCanSeekForward);", "IMediaPosition_CanSeekBackward_Proxy": "HRESULT WINAPI IMediaPosition_CanSeekBackward_Proxy(IMediaPosition *This,LONG *pCanSeekBackward);", "IBasicAudio_put_Volume_Proxy": "HRESULT WINAPI IBasicAudio_put_Volume_Proxy(IBasicAudio *This,__LONG32 lVolume);", "IBasicAudio_get_Volume_Proxy": "HRESULT WINAPI IBasicAudio_get_Volume_Proxy(IBasicAudio *This,__LONG32 *plVolume);", "IBasicAudio_put_Balance_Proxy": "HRESULT WINAPI IBasicAudio_put_Balance_Proxy(IBasicAudio *This,__LONG32 lBalance);", "IBasicAudio_get_Balance_Proxy": "HRESULT WINAPI IBasicAudio_get_Balance_Proxy(IBasicAudio *This,__LONG32 *plBalance);", "IVideoWindow_put_Caption_Proxy": "HRESULT WINAPI IVideoWindow_put_Caption_Proxy(IVideoWindow *This,BSTR strCaption);", "IVideoWindow_get_Caption_Proxy": "HRESULT WINAPI IVideoWindow_get_Caption_Proxy(IVideoWindow *This,BSTR *strCaption);", "IVideoWindow_put_WindowStyle_Proxy": "HRESULT WINAPI IVideoWindow_put_WindowStyle_Proxy(IVideoWindow *This,__LONG32 WindowStyle);", "IVideoWindow_get_WindowStyle_Proxy": "HRESULT WINAPI IVideoWindow_get_WindowStyle_Proxy(IVideoWindow *This,__LONG32 *WindowStyle);", "IVideoWindow_put_WindowStyleEx_Proxy": "HRESULT WINAPI IVideoWindow_put_WindowStyleEx_Proxy(IVideoWindow *This,__LONG32 WindowStyleEx);", "IVideoWindow_get_WindowStyleEx_Proxy": "HRESULT WINAPI IVideoWindow_get_WindowStyleEx_Proxy(IVideoWindow *This,__LONG32 *WindowStyleEx);", "IVideoWindow_put_AutoShow_Proxy": "HRESULT WINAPI IVideoWindow_put_AutoShow_Proxy(IVideoWindow *This,__LONG32 AutoShow);", "IVideoWindow_get_AutoShow_Proxy": "HRESULT WINAPI IVideoWindow_get_AutoShow_Proxy(IVideoWindow *This,__LONG32 *AutoShow);", "IVideoWindow_put_WindowState_Proxy": "HRESULT WINAPI IVideoWindow_put_WindowState_Proxy(IVideoWindow *This,__LONG32 WindowState);", "IVideoWindow_get_WindowState_Proxy": "HRESULT WINAPI IVideoWindow_get_WindowState_Proxy(IVideoWindow *This,__LONG32 *WindowState);", "IVideoWindow_put_BackgroundPalette_Proxy": "HRESULT WINAPI IVideoWindow_put_BackgroundPalette_Proxy(IVideoWindow *This,__LONG32 BackgroundPalette);", "IVideoWindow_get_BackgroundPalette_Proxy": "HRESULT WINAPI IVideoWindow_get_BackgroundPalette_Proxy(IVideoWindow *This,__LONG32 *pBackgroundPalette);", "IVideoWindow_put_Visible_Proxy": "HRESULT WINAPI IVideoWindow_put_Visible_Proxy(IVideoWindow *This,__LONG32 Visible);", "IVideoWindow_get_Visible_Proxy": "HRESULT WINAPI IVideoWindow_get_Visible_Proxy(IVideoWindow *This,__LONG32 *pVisible);", "IVideoWindow_put_Left_Proxy": "HRESULT WINAPI IVideoWindow_put_Left_Proxy(IVideoWindow *This,__LONG32 Left);", "IVideoWindow_get_Left_Proxy": "HRESULT WINAPI IVideoWindow_get_Left_Proxy(IVideoWindow *This,__LONG32 *pLeft);", "IVideoWindow_put_Width_Proxy": "HRESULT WINAPI IVideoWindow_put_Width_Proxy(IVideoWindow *This,__LONG32 Width);", "IVideoWindow_get_Width_Proxy": "HRESULT WINAPI IVideoWindow_get_Width_Proxy(IVideoWindow *This,__LONG32 *pWidth);", "IVideoWindow_put_Top_Proxy": "HRESULT WINAPI IVideoWindow_put_Top_Proxy(IVideoWindow *This,__LONG32 Top);", "IVideoWindow_get_Top_Proxy": "HRESULT WINAPI IVideoWindow_get_Top_Proxy(IVideoWindow *This,__LONG32 *pTop);", "IVideoWindow_put_Height_Proxy": "HRESULT WINAPI IVideoWindow_put_Height_Proxy(IVideoWindow *This,__LONG32 Height);", "IVideoWindow_get_Height_Proxy": "HRESULT WINAPI IVideoWindow_get_Height_Proxy(IVideoWindow *This,__LONG32 *pHeight);", "IVideoWindow_put_Owner_Proxy": "HRESULT WINAPI IVideoWindow_put_Owner_Proxy(IVideoWindow *This,OAHWND Owner);", "IVideoWindow_get_Owner_Proxy": "HRESULT WINAPI IVideoWindow_get_Owner_Proxy(IVideoWindow *This,OAHWND *Owner);", "IVideoWindow_put_MessageDrain_Proxy": "HRESULT WINAPI IVideoWindow_put_MessageDrain_Proxy(IVideoWindow *This,OAHWND Drain);", "IVideoWindow_get_MessageDrain_Proxy": "HRESULT WINAPI IVideoWindow_get_MessageDrain_Proxy(IVideoWindow *This,OAHWND *Drain);", "IVideoWindow_get_BorderColor_Proxy": "HRESULT WINAPI IVideoWindow_get_BorderColor_Proxy(IVideoWindow *This,__LONG32 *Color);", "IVideoWindow_put_BorderColor_Proxy": "HRESULT WINAPI IVideoWindow_put_BorderColor_Proxy(IVideoWindow *This,__LONG32 Color);", "IVideoWindow_get_FullScreenMode_Proxy": "HRESULT WINAPI IVideoWindow_get_FullScreenMode_Proxy(IVideoWindow *This,__LONG32 *FullScreenMode);", "IVideoWindow_put_FullScreenMode_Proxy": "HRESULT WINAPI IVideoWindow_put_FullScreenMode_Proxy(IVideoWindow *This,__LONG32 FullScreenMode);", "IVideoWindow_SetWindowForeground_Proxy": "HRESULT WINAPI IVideoWindow_SetWindowForeground_Proxy(IVideoWindow *This,__LONG32 Focus);", "IVideoWindow_NotifyOwnerMessage_Proxy": "HRESULT WINAPI IVideoWindow_NotifyOwnerMessage_Proxy(IVideoWindow *This,OAHWND hwnd,__LONG32 uMsg,LONG_PTR wParam,LONG_PTR lParam);", "IVideoWindow_SetWindowPosition_Proxy": "HRESULT WINAPI IVideoWindow_SetWindowPosition_Proxy(IVideoWindow *This,__LONG32 Left,__LONG32 Top,__LONG32 Width,__LONG32 Height);", "IVideoWindow_GetWindowPosition_Proxy": "HRESULT WINAPI IVideoWindow_GetWindowPosition_Proxy(IVideoWindow *This,__LONG32 *pLeft,__LONG32 *pTop,__LONG32 *pWidth,__LONG32 *pHeight);", "IVideoWindow_GetMinIdealImageSize_Proxy": "HRESULT WINAPI IVideoWindow_GetMinIdealImageSize_Proxy(IVideoWindow *This,__LONG32 *pWidth,__LONG32 *pHeight);", "IVideoWindow_GetMaxIdealImageSize_Proxy": "HRESULT WINAPI IVideoWindow_GetMaxIdealImageSize_Proxy(IVideoWindow *This,__LONG32 *pWidth,__LONG32 *pHeight);", "IVideoWindow_GetRestorePosition_Proxy": "HRESULT WINAPI IVideoWindow_GetRestorePosition_Proxy(IVideoWindow *This,__LONG32 *pLeft,__LONG32 *pTop,__LONG32 *pWidth,__LONG32 *pHeight);", "IVideoWindow_HideCursor_Proxy": "HRESULT WINAPI IVideoWindow_HideCursor_Proxy(IVideoWindow *This,__LONG32 HideCursor);", "IVideoWindow_IsCursorHidden_Proxy": "HRESULT WINAPI IVideoWindow_IsCursorHidden_Proxy(IVideoWindow *This,__LONG32 *CursorHidden);", "IBasicVideo_get_AvgTimePerFrame_Proxy": "HRESULT WINAPI IBasicVideo_get_AvgTimePerFrame_Proxy(IBasicVideo *This,REFTIME *pAvgTimePerFrame);", "IBasicVideo_get_BitRate_Proxy": "HRESULT WINAPI IBasicVideo_get_BitRate_Proxy(IBasicVideo *This,__LONG32 *pBitRate);", "IBasicVideo_get_BitErrorRate_Proxy": "HRESULT WINAPI IBasicVideo_get_BitErrorRate_Proxy(IBasicVideo *This,__LONG32 *pBitErrorRate);", "IBasicVideo_get_VideoWidth_Proxy": "HRESULT WINAPI IBasicVideo_get_VideoWidth_Proxy(IBasicVideo *This,__LONG32 *pVideoWidth);", "IBasicVideo_get_VideoHeight_Proxy": "HRESULT WINAPI IBasicVideo_get_VideoHeight_Proxy(IBasicVideo *This,__LONG32 *pVideoHeight);", "IBasicVideo_put_SourceLeft_Proxy": "HRESULT WINAPI IBasicVideo_put_SourceLeft_Proxy(IBasicVideo *This,__LONG32 SourceLeft);", "IBasicVideo_get_SourceLeft_Proxy": "HRESULT WINAPI IBasicVideo_get_SourceLeft_Proxy(IBasicVideo *This,__LONG32 *pSourceLeft);", "IBasicVideo_put_SourceWidth_Proxy": "HRESULT WINAPI IBasicVideo_put_SourceWidth_Proxy(IBasicVideo *This,__LONG32 SourceWidth);", "IBasicVideo_get_SourceWidth_Proxy": "HRESULT WINAPI IBasicVideo_get_SourceWidth_Proxy(IBasicVideo *This,__LONG32 *pSourceWidth);", "IBasicVideo_put_SourceTop_Proxy": "HRESULT WINAPI IBasicVideo_put_SourceTop_Proxy(IBasicVideo *This,__LONG32 SourceTop);", "IBasicVideo_get_SourceTop_Proxy": "HRESULT WINAPI IBasicVideo_get_SourceTop_Proxy(IBasicVideo *This,__LONG32 *pSourceTop);", "IBasicVideo_put_SourceHeight_Proxy": "HRESULT WINAPI IBasicVideo_put_SourceHeight_Proxy(IBasicVideo *This,__LONG32 SourceHeight);", "IBasicVideo_get_SourceHeight_Proxy": "HRESULT WINAPI IBasicVideo_get_SourceHeight_Proxy(IBasicVideo *This,__LONG32 *pSourceHeight);", "IBasicVideo_put_DestinationLeft_Proxy": "HRESULT WINAPI IBasicVideo_put_DestinationLeft_Proxy(IBasicVideo *This,__LONG32 DestinationLeft);", "IBasicVideo_get_DestinationLeft_Proxy": "HRESULT WINAPI IBasicVideo_get_DestinationLeft_Proxy(IBasicVideo *This,__LONG32 *pDestinationLeft);", "IBasicVideo_put_DestinationWidth_Proxy": "HRESULT WINAPI IBasicVideo_put_DestinationWidth_Proxy(IBasicVideo *This,__LONG32 DestinationWidth);", "IBasicVideo_get_DestinationWidth_Proxy": "HRESULT WINAPI IBasicVideo_get_DestinationWidth_Proxy(IBasicVideo *This,__LONG32 *pDestinationWidth);", "IBasicVideo_put_DestinationTop_Proxy": "HRESULT WINAPI IBasicVideo_put_DestinationTop_Proxy(IBasicVideo *This,__LONG32 DestinationTop);", "IBasicVideo_get_DestinationTop_Proxy": "HRESULT WINAPI IBasicVideo_get_DestinationTop_Proxy(IBasicVideo *This,__LONG32 *pDestinationTop);", "IBasicVideo_put_DestinationHeight_Proxy": "HRESULT WINAPI IBasicVideo_put_DestinationHeight_Proxy(IBasicVideo *This,__LONG32 DestinationHeight);", "IBasicVideo_get_DestinationHeight_Proxy": "HRESULT WINAPI IBasicVideo_get_DestinationHeight_Proxy(IBasicVideo *This,__LONG32 *pDestinationHeight);", "IBasicVideo_SetSourcePosition_Proxy": "HRESULT WINAPI IBasicVideo_SetSourcePosition_Proxy(IBasicVideo *This,__LONG32 Left,__LONG32 Top,__LONG32 Width,__LONG32 Height);", "IBasicVideo_GetSourcePosition_Proxy": "HRESULT WINAPI IBasicVideo_GetSourcePosition_Proxy(IBasicVideo *This,__LONG32 *pLeft,__LONG32 *pTop,__LONG32 *pWidth,__LONG32 *pHeight);", "IBasicVideo_SetDefaultSourcePosition_Proxy": "HRESULT WINAPI IBasicVideo_SetDefaultSourcePosition_Proxy(IBasicVideo *This);", "IBasicVideo_SetDestinationPosition_Proxy": "HRESULT WINAPI IBasicVideo_SetDestinationPosition_Proxy(IBasicVideo *This,__LONG32 Left,__LONG32 Top,__LONG32 Width,__LONG32 Height);", "IBasicVideo_GetDestinationPosition_Proxy": "HRESULT WINAPI IBasicVideo_GetDestinationPosition_Proxy(IBasicVideo *This,__LONG32 *pLeft,__LONG32 *pTop,__LONG32 *pWidth,__LONG32 *pHeight);", "IBasicVideo_SetDefaultDestinationPosition_Proxy": "HRESULT WINAPI IBasicVideo_SetDefaultDestinationPosition_Proxy(IBasicVideo *This);", "IBasicVideo_GetVideoSize_Proxy": "HRESULT WINAPI IBasicVideo_GetVideoSize_Proxy(IBasicVideo *This,__LONG32 *pWidth,__LONG32 *pHeight);", "IBasicVideo_GetVideoPaletteEntries_Proxy": "HRESULT WINAPI IBasicVideo_GetVideoPaletteEntries_Proxy(IBasicVideo *This,__LONG32 StartIndex,__LONG32 Entries,__LONG32 *pRetrieved,__LONG32 *pPalette);", "IBasicVideo_GetCurrentImage_Proxy": "HRESULT WINAPI IBasicVideo_GetCurrentImage_Proxy(IBasicVideo *This,__LONG32 *pBufferSize,__LONG32 *pDIBImage);", "IBasicVideo_IsUsingDefaultSource_Proxy": "HRESULT WINAPI IBasicVideo_IsUsingDefaultSource_Proxy(IBasicVideo *This);", "IBasicVideo_IsUsingDefaultDestination_Proxy": "HRESULT WINAPI IBasicVideo_IsUsingDefaultDestination_Proxy(IBasicVideo *This);", "IBasicVideo2_GetPreferredAspectRatio_Proxy": "HRESULT WINAPI IBasicVideo2_GetPreferredAspectRatio_Proxy(IBasicVideo2 *This,__LONG32 *plAspectX,__LONG32 *plAspectY);", "IDeferredCommand_Cancel_Proxy": "HRESULT WINAPI IDeferredCommand_Cancel_Proxy(IDeferredCommand *This);", "IDeferredCommand_Confidence_Proxy": "HRESULT WINAPI IDeferredCommand_Confidence_Proxy(IDeferredCommand *This,LONG *pConfidence);", "IDeferredCommand_Postpone_Proxy": "HRESULT WINAPI IDeferredCommand_Postpone_Proxy(IDeferredCommand *This,REFTIME newtime);", "IDeferredCommand_GetHResult_Proxy": "HRESULT WINAPI IDeferredCommand_GetHResult_Proxy(IDeferredCommand *This,HRESULT *phrResult);", "IQueueCommand_InvokeAtStreamTime_Proxy": "HRESULT WINAPI IQueueCommand_InvokeAtStreamTime_Proxy(IQueueCommand *This,IDeferredCommand **pCmd,REFTIME time,GUID *iid,__LONG32 dispidMethod,short wFlags,__LONG32 cArgs,VARIANT *pDispParams,VARIANT *pvarResult,short *puArgErr);", "IQueueCommand_InvokeAtPresentationTime_Proxy": "HRESULT WINAPI IQueueCommand_InvokeAtPresentationTime_Proxy(IQueueCommand *This,IDeferredCommand **pCmd,REFTIME time,GUID *iid,__LONG32 dispidMethod,short wFlags,__LONG32 cArgs,VARIANT *pDispParams,VARIANT *pvarResult,short *puArgErr);", "IFilterInfo_FindPin_Proxy": "HRESULT WINAPI IFilterInfo_FindPin_Proxy(IFilterInfo *This,BSTR strPinID,IDispatch **ppUnk);", "IFilterInfo_get_Name_Proxy": "HRESULT WINAPI IFilterInfo_get_Name_Proxy(IFilterInfo *This,BSTR *strName);", "IFilterInfo_get_VendorInfo_Proxy": "HRESULT WINAPI IFilterInfo_get_VendorInfo_Proxy(IFilterInfo *This,BSTR *strVendorInfo);", "IFilterInfo_get_Filter_Proxy": "HRESULT WINAPI IFilterInfo_get_Filter_Proxy(IFilterInfo *This,IUnknown **ppUnk);", "IFilterInfo_get_Pins_Proxy": "HRESULT WINAPI IFilterInfo_get_Pins_Proxy(IFilterInfo *This,IDispatch **ppUnk);", "IFilterInfo_get_IsFileSource_Proxy": "HRESULT WINAPI IFilterInfo_get_IsFileSource_Proxy(IFilterInfo *This,LONG *pbIsSource);", "IFilterInfo_get_Filename_Proxy": "HRESULT WINAPI IFilterInfo_get_Filename_Proxy(IFilterInfo *This,BSTR *pstrFilename);", "IFilterInfo_put_Filename_Proxy": "HRESULT WINAPI IFilterInfo_put_Filename_Proxy(IFilterInfo *This,BSTR strFilename);", "IRegFilterInfo_get_Name_Proxy": "HRESULT WINAPI IRegFilterInfo_get_Name_Proxy(IRegFilterInfo *This,BSTR *strName);", "IRegFilterInfo_Filter_Proxy": "HRESULT WINAPI IRegFilterInfo_Filter_Proxy(IRegFilterInfo *This,IDispatch **ppUnk);", "IMediaTypeInfo_get_Type_Proxy": "HRESULT WINAPI IMediaTypeInfo_get_Type_Proxy(IMediaTypeInfo *This,BSTR *strType);", "IMediaTypeInfo_get_Subtype_Proxy": "HRESULT WINAPI IMediaTypeInfo_get_Subtype_Proxy(IMediaTypeInfo *This,BSTR *strType);", "IPinInfo_get_Pin_Proxy": "HRESULT WINAPI IPinInfo_get_Pin_Proxy(IPinInfo *This,IUnknown **ppUnk);", "IPinInfo_get_ConnectedTo_Proxy": "HRESULT WINAPI IPinInfo_get_ConnectedTo_Proxy(IPinInfo *This,IDispatch **ppUnk);", "IPinInfo_get_ConnectionMediaType_Proxy": "HRESULT WINAPI IPinInfo_get_ConnectionMediaType_Proxy(IPinInfo *This,IDispatch **ppUnk);", "IPinInfo_get_FilterInfo_Proxy": "HRESULT WINAPI IPinInfo_get_FilterInfo_Proxy(IPinInfo *This,IDispatch **ppUnk);", "IPinInfo_get_Name_Proxy": "HRESULT WINAPI IPinInfo_get_Name_Proxy(IPinInfo *This,BSTR *ppUnk);", "IPinInfo_get_Direction_Proxy": "HRESULT WINAPI IPinInfo_get_Direction_Proxy(IPinInfo *This,LONG *ppDirection);", "IPinInfo_get_PinID_Proxy": "HRESULT WINAPI IPinInfo_get_PinID_Proxy(IPinInfo *This,BSTR *strPinID);", "IPinInfo_get_MediaTypes_Proxy": "HRESULT WINAPI IPinInfo_get_MediaTypes_Proxy(IPinInfo *This,IDispatch **ppUnk);", "IPinInfo_Connect_Proxy": "HRESULT WINAPI IPinInfo_Connect_Proxy(IPinInfo *This,IUnknown *pPin);", "IPinInfo_ConnectDirect_Proxy": "HRESULT WINAPI IPinInfo_ConnectDirect_Proxy(IPinInfo *This,IUnknown *pPin);", "IPinInfo_ConnectWithType_Proxy": "HRESULT WINAPI IPinInfo_ConnectWithType_Proxy(IPinInfo *This,IUnknown *pPin,IDispatch *pMediaType);", "IPinInfo_Disconnect_Proxy": "HRESULT WINAPI IPinInfo_Disconnect_Proxy(IPinInfo *This);", "IPinInfo_Render_Proxy": "HRESULT WINAPI IPinInfo_Render_Proxy(IPinInfo *This);", "IAMStats_Reset_Proxy": "HRESULT WINAPI IAMStats_Reset_Proxy(IAMStats *This);", "IAMStats_get_Count_Proxy": "HRESULT WINAPI IAMStats_get_Count_Proxy(IAMStats *This,LONG *plCount);", "IAMStats_GetValueByIndex_Proxy": "HRESULT WINAPI IAMStats_GetValueByIndex_Proxy(IAMStats *This,__LONG32 lIndex,BSTR *szName,__LONG32 *lCount,double *dLast,double *dAverage,double *dStdDev,double *dMin,double *dMax);", "IAMStats_GetValueByName_Proxy": "HRESULT WINAPI IAMStats_GetValueByName_Proxy(IAMStats *This,BSTR szName,__LONG32 *lIndex,__LONG32 *lCount,double *dLast,double *dAverage,double *dStdDev,double *dMin,double *dMax);", "IAMStats_GetIndex_Proxy": "HRESULT WINAPI IAMStats_GetIndex_Proxy(IAMStats *This,BSTR szName,__LONG32 lCreate,__LONG32 *plIndex);", "IAMStats_AddValue_Proxy": "HRESULT WINAPI IAMStats_AddValue_Proxy(IAMStats *This,__LONG32 lIndex,double dValue);", "GetSystemTime": "WINBASEAPI VOID WINAPI GetSystemTime (LPSYSTEMTIME lpSystemTime);", "GetSystemTimeAsFileTime": "WINBASEAPI VOID WINAPI GetSystemTimeAsFileTime (LPFILETIME lpSystemTimeAsFileTime);", "GetLocalTime": "WINBASEAPI VOID WINAPI GetLocalTime (LPSYSTEMTIME lpSystemTime);", "GetNativeSystemInfo": "WINBASEAPI VOID WINAPI GetNativeSystemInfo (LPSYSTEM_INFO lpSystemInfo);", "GetTickCount64": "WINBASEAPI ULONGLONG WINAPI GetTickCount64 (VOID);", "GetSystemInfo": "WINBASEAPI VOID WINAPI GetSystemInfo (LPSYSTEM_INFO lpSystemInfo);", "GlobalMemoryStatusEx": "WINBASEAPI WINBOOL WINAPI GlobalMemoryStatusEx (LPMEMORYSTATUSEX lpBuffer);", "GetTickCount": "WINBASEAPI DWORD WINAPI GetTickCount (VOID);", "GetSystemTimePreciseAsFileTime": "WINBASEAPI VOID WINAPI GetSystemTimePreciseAsFileTime (LPFILETIME lpSystemTimeAsFileTime);", "GetVersionExA": "WINBASEAPI WINBOOL WINAPI GetVersionExA (LPOSVERSIONINFOA lpVersionInformation);", "GetVersionExW": "WINBASEAPI WINBOOL WINAPI GetVersionExW (LPOSVERSIONINFOW lpVersionInformation);", "GetVersion": "WINBASEAPI DWORD WINAPI GetVersion (VOID);", "SetLocalTime": "WINBASEAPI WINBOOL WINAPI SetLocalTime (CONST SYSTEMTIME *lpSystemTime);", "GetSystemTimeAdjustment": "WINBASEAPI WINBOOL WINAPI GetSystemTimeAdjustment (PDWORD lpTimeAdjustment, PDWORD lpTimeIncrement, PBOOL lpTimeAdjustmentDisabled);", "GetWindowsDirectoryA": "WINBASEAPI UINT WINAPI GetWindowsDirectoryA (LPSTR lpBuffer, UINT uSize);", "GetWindowsDirectoryW": "WINBASEAPI UINT WINAPI GetWindowsDirectoryW (LPWSTR lpBuffer, UINT uSize);", "GetSystemWindowsDirectoryA": "WINBASEAPI UINT WINAPI GetSystemWindowsDirectoryA (LPSTR lpBuffer, UINT uSize);", "GetSystemWindowsDirectoryW": "WINBASEAPI UINT WINAPI GetSystemWindowsDirectoryW (LPWSTR lpBuffer, UINT uSize);", "GetComputerNameExA": "WINBASEAPI WINBOOL WINAPI GetComputerNameExA (COMPUTER_NAME_FORMAT NameType, LPSTR lpBuffer, LPDWORD nSize);", "GetComputerNameExW": "WINBASEAPI WINBOOL WINAPI GetComputerNameExW (COMPUTER_NAME_FORMAT NameType, LPWSTR lpBuffer, LPDWORD nSize);", "SetComputerNameExW": "WINBASEAPI WINBOOL WINAPI SetComputerNameExW (COMPUTER_NAME_FORMAT NameType, LPCWSTR lpBuffer);", "SetSystemTime": "WINBASEAPI WINBOOL WINAPI SetSystemTime (CONST SYSTEMTIME *lpSystemTime);", "GetOsSafeBootMode": "WINBASEAPI WINBOOL WINAPI GetOsSafeBootMode (PDWORD Flags);", "GetSystemDirectoryA": "WINBASEAPI UINT WINAPI GetSystemDirectoryA (LPSTR lpBuffer, UINT uSize);", "GetSystemDirectoryW": "WINBASEAPI UINT WINAPI GetSystemDirectoryW (LPWSTR lpBuffer, UINT uSize);", "GetLogicalProcessorInformation": "WINBASEAPI WINBOOL WINAPI GetLogicalProcessorInformation (PSYSTEM_LOGICAL_PROCESSOR_INFORMATION Buffer, PDWORD ReturnedLength);", "EnumSystemFirmwareTables": "WINBASEAPI UINT WINAPI EnumSystemFirmwareTables (DWORD FirmwareTableProviderSignature, PVOID pFirmwareTableEnumBuffer, DWORD BufferSize);", "GetSystemFirmwareTable": "WINBASEAPI UINT WINAPI GetSystemFirmwareTable (DWORD FirmwareTableProviderSignature, DWORD FirmwareTableID, PVOID pFirmwareTableBuffer, DWORD BufferSize);", "GetProductInfo": "WINBASEAPI WINBOOL WINAPI GetProductInfo (DWORD dwOSMajorVersion, DWORD dwOSMinorVersion, DWORD dwSpMajorVersion, DWORD dwSpMinorVersion, PDWORD pdwReturnedProductType);", "GetLogicalProcessorInformationEx": "WINBASEAPI WINBOOL WINAPI GetLogicalProcessorInformationEx (LOGICAL_PROCESSOR_RELATIONSHIP RelationshipType, PSYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX Buffer, PDWORD ReturnedLength);", "RasPhonebookDlgA": "WINBOOL WINAPI RasPhonebookDlgA(LPSTR lpszPhonebook,LPSTR lpszEntry,LPRASPBDLGA lpInfo);", "RasPhonebookDlgW": "WINBOOL WINAPI RasPhonebookDlgW(LPWSTR lpszPhonebook,LPWSTR lpszEntry,LPRASPBDLGW lpInfo);", "RasEntryDlgA": "WINBOOL WINAPI RasEntryDlgA(LPSTR lpszPhonebook,LPSTR lpszEntry,LPRASENTRYDLGA lpInfo);", "RasEntryDlgW": "WINBOOL WINAPI RasEntryDlgW(LPWSTR lpszPhonebook,LPWSTR lpszEntry,LPRASENTRYDLGW lpInfo);", "RasDialDlgA": "WINBOOL WINAPI RasDialDlgA(LPSTR lpszPhonebook,LPSTR lpszEntry,LPSTR lpszPhoneNumber,LPRASDIALDLG lpInfo);", "RasDialDlgW": "WINBOOL WINAPI RasDialDlgW(LPWSTR lpszPhonebook,LPWSTR lpszEntry,LPWSTR lpszPhoneNumber,LPRASDIALDLG lpInfo);", "StartXpsPrintJob": "HRESULT WINAPI StartXpsPrintJob (LPCWSTR printerName, LPCWSTR jobName, LPCWSTR outputFileName, HANDLE progressEvent, HANDLE completionEvent, UINT8 *printablePagesOn, UINT32 printablePagesOnCount, IXpsPrintJob **xpsPrintJob, IXpsPrintJobStream **documentStream, IXpsPrintJobStream **printTicketStream);", "StartXpsPrintJob1": "HRESULT WINAPI StartXpsPrintJob1 (LPCWSTR printerName, LPCWSTR jobName, LPCWSTR outputFileName, HANDLE progressEvent, HANDLE completionEvent, IXpsPrintJob **xpsPrintJob, IXpsOMPackageTarget **printContentReceiver);", "RoActivateInstance": "HRESULT WINAPI RoActivateInstance(HSTRING activatableClassId, IInspectable **instance);", "RoGetActivationFactory": "HRESULT WINAPI RoGetActivationFactory(HSTRING activatableClassId, REFIID iid, void **factory);", "RoGetApartmentIdentifier": "HRESULT WINAPI RoGetApartmentIdentifier (UINT64 *apartmentId);", "RoInitialize": "HRESULT WINAPI RoInitialize(RO_INIT_TYPE initType);", "RoRegisterActivationFactories": "HRESULT WINAPI RoRegisterActivationFactories(HSTRING *activatableClassIds, PFNGETACTIVATIONFACTORY *activationFactoryCallbacks, UINT32 count, RO_REGISTRATION_COOKIE *cookie);", "RoRevokeActivationFactories": "void WINAPI RoRevokeActivationFactories(RO_REGISTRATION_COOKIE cookie);", "RoUninitialize": "void WINAPI RoUninitialize(void);", "RoRegisterForApartmentShutdown": "HRESULT WINAPI RoRegisterForApartmentShutdown (IApartmentShutdown *callbackObj, UINT64 *apartmentId, APARTMENT_SHUTDOWN_REGISTRATION_COOKIE *regCookie);", "RoUnregisterForApartmentShutdown": "HRESULT WINAPI RoUnregisterForApartmentShutdown (APARTMENT_SHUTDOWN_REGISTRATION_COOKIE regCookie);", "FreeMUILibrary": "WINBOOL WINAPI FreeMUILibrary(HMODULE hResModule);", "LoadMUILibrary": "HINSTANCE WINAPI LoadMUILibrary(LPCTSTR pszFullModuleName,DWORD dwLangConvention,LANGID LangID);", "GetUILanguageFallbackList": "WINBOOL WINAPI GetUILanguageFallbackList(PWSTR pFallbackList,ULONG cchFallbackList,PULONG pcchFallbackListOut);", "IEnumMsmString_Next_Proxy": "HRESULT WINAPI IEnumMsmString_Next_Proxy(IEnumMsmString *This,unsigned __LONG32 cFetch,BSTR *rgbstrStrings,unsigned __LONG32 *pcFetched);", "IEnumMsmString_Skip_Proxy": "HRESULT WINAPI IEnumMsmString_Skip_Proxy(IEnumMsmString *This,unsigned __LONG32 cSkip);", "IEnumMsmString_Reset_Proxy": "HRESULT WINAPI IEnumMsmString_Reset_Proxy(IEnumMsmString *This);", "IEnumMsmString_Clone_Proxy": "HRESULT WINAPI IEnumMsmString_Clone_Proxy(IEnumMsmString *This,IEnumMsmString **pemsmStrings);", "IMsmStrings_get_Item_Proxy": "HRESULT WINAPI IMsmStrings_get_Item_Proxy(IMsmStrings *This,__LONG32 Item,BSTR *Return);", "IMsmStrings_get_Count_Proxy": "HRESULT WINAPI IMsmStrings_get_Count_Proxy(IMsmStrings *This,__LONG32 *Count);", "IMsmStrings_get__NewEnum_Proxy": "HRESULT WINAPI IMsmStrings_get__NewEnum_Proxy(IMsmStrings *This,IUnknown **NewEnum);", "IMsmError_get_Type_Proxy": "HRESULT WINAPI IMsmError_get_Type_Proxy(IMsmError *This,msmErrorType *ErrorType);", "IMsmError_get_Path_Proxy": "HRESULT WINAPI IMsmError_get_Path_Proxy(IMsmError *This,BSTR *ErrorPath);", "IMsmError_get_Language_Proxy": "HRESULT WINAPI IMsmError_get_Language_Proxy(IMsmError *This,short *ErrorLanguage);", "IMsmError_get_DatabaseTable_Proxy": "HRESULT WINAPI IMsmError_get_DatabaseTable_Proxy(IMsmError *This,BSTR *ErrorTable);", "IMsmError_get_DatabaseKeys_Proxy": "HRESULT WINAPI IMsmError_get_DatabaseKeys_Proxy(IMsmError *This,IMsmStrings **ErrorKeys);", "IMsmError_get_ModuleTable_Proxy": "HRESULT WINAPI IMsmError_get_ModuleTable_Proxy(IMsmError *This,BSTR *ErrorTable);", "IMsmError_get_ModuleKeys_Proxy": "HRESULT WINAPI IMsmError_get_ModuleKeys_Proxy(IMsmError *This,IMsmStrings **ErrorKeys);", "IEnumMsmError_Next_Proxy": "HRESULT WINAPI IEnumMsmError_Next_Proxy(IEnumMsmError *This,unsigned __LONG32 cFetch,IMsmError **rgmsmErrors,unsigned __LONG32 *pcFetched);", "IEnumMsmError_Skip_Proxy": "HRESULT WINAPI IEnumMsmError_Skip_Proxy(IEnumMsmError *This,unsigned __LONG32 cSkip);", "IEnumMsmError_Reset_Proxy": "HRESULT WINAPI IEnumMsmError_Reset_Proxy(IEnumMsmError *This);", "IEnumMsmError_Clone_Proxy": "HRESULT WINAPI IEnumMsmError_Clone_Proxy(IEnumMsmError *This,IEnumMsmError **pemsmErrors);", "IMsmErrors_get_Item_Proxy": "HRESULT WINAPI IMsmErrors_get_Item_Proxy(IMsmErrors *This,__LONG32 Item,IMsmError **Return);", "IMsmErrors_get_Count_Proxy": "HRESULT WINAPI IMsmErrors_get_Count_Proxy(IMsmErrors *This,__LONG32 *Count);", "IMsmErrors_get__NewEnum_Proxy": "HRESULT WINAPI IMsmErrors_get__NewEnum_Proxy(IMsmErrors *This,IUnknown **NewEnum);", "IMsmDependency_get_Module_Proxy": "HRESULT WINAPI IMsmDependency_get_Module_Proxy(IMsmDependency *This,BSTR *Module);", "IMsmDependency_get_Language_Proxy": "HRESULT WINAPI IMsmDependency_get_Language_Proxy(IMsmDependency *This,short *Language);", "IMsmDependency_get_Version_Proxy": "HRESULT WINAPI IMsmDependency_get_Version_Proxy(IMsmDependency *This,BSTR *Version);", "IEnumMsmDependency_Next_Proxy": "HRESULT WINAPI IEnumMsmDependency_Next_Proxy(IEnumMsmDependency *This,unsigned __LONG32 cFetch,IMsmDependency **rgmsmDependencies,unsigned __LONG32 *pcFetched);", "IEnumMsmDependency_Skip_Proxy": "HRESULT WINAPI IEnumMsmDependency_Skip_Proxy(IEnumMsmDependency *This,unsigned __LONG32 cSkip);", "IEnumMsmDependency_Reset_Proxy": "HRESULT WINAPI IEnumMsmDependency_Reset_Proxy(IEnumMsmDependency *This);", "IEnumMsmDependency_Clone_Proxy": "HRESULT WINAPI IEnumMsmDependency_Clone_Proxy(IEnumMsmDependency *This,IEnumMsmDependency **pemsmDependencies);", "IMsmDependencies_get_Item_Proxy": "HRESULT WINAPI IMsmDependencies_get_Item_Proxy(IMsmDependencies *This,__LONG32 Item,IMsmDependency **Return);", "IMsmDependencies_get_Count_Proxy": "HRESULT WINAPI IMsmDependencies_get_Count_Proxy(IMsmDependencies *This,__LONG32 *Count);", "IMsmDependencies_get__NewEnum_Proxy": "HRESULT WINAPI IMsmDependencies_get__NewEnum_Proxy(IMsmDependencies *This,IUnknown **NewEnum);", "IMsmConfigurableItem_get_Name_Proxy": "HRESULT WINAPI IMsmConfigurableItem_get_Name_Proxy(IMsmConfigurableItem *This,BSTR *Name);", "IMsmConfigurableItem_get_Format_Proxy": "HRESULT WINAPI IMsmConfigurableItem_get_Format_Proxy(IMsmConfigurableItem *This,msmConfigurableItemFormat *Format);", "IMsmConfigurableItem_get_Type_Proxy": "HRESULT WINAPI IMsmConfigurableItem_get_Type_Proxy(IMsmConfigurableItem *This,BSTR *Type);", "IMsmConfigurableItem_get_Context_Proxy": "HRESULT WINAPI IMsmConfigurableItem_get_Context_Proxy(IMsmConfigurableItem *This,BSTR *Context);", "IMsmConfigurableItem_get_DefaultValue_Proxy": "HRESULT WINAPI IMsmConfigurableItem_get_DefaultValue_Proxy(IMsmConfigurableItem *This,BSTR *DefaultValue);", "IMsmConfigurableItem_get_Attributes_Proxy": "HRESULT WINAPI IMsmConfigurableItem_get_Attributes_Proxy(IMsmConfigurableItem *This,__LONG32 *Attributes);", "IMsmConfigurableItem_get_DisplayName_Proxy": "HRESULT WINAPI IMsmConfigurableItem_get_DisplayName_Proxy(IMsmConfigurableItem *This,BSTR *DisplayName);", "IMsmConfigurableItem_get_Description_Proxy": "HRESULT WINAPI IMsmConfigurableItem_get_Description_Proxy(IMsmConfigurableItem *This,BSTR *Description);", "IMsmConfigurableItem_get_HelpLocation_Proxy": "HRESULT WINAPI IMsmConfigurableItem_get_HelpLocation_Proxy(IMsmConfigurableItem *This,BSTR *HelpLocation);", "IMsmConfigurableItem_get_HelpKeyword_Proxy": "HRESULT WINAPI IMsmConfigurableItem_get_HelpKeyword_Proxy(IMsmConfigurableItem *This,BSTR *HelpKeyword);", "IEnumMsmConfigurableItem_Next_Proxy": "HRESULT WINAPI IEnumMsmConfigurableItem_Next_Proxy(IEnumMsmConfigurableItem *This,unsigned __LONG32 cFetch,IMsmConfigurableItem **rgmsmItems,unsigned __LONG32 *pcFetched);", "IEnumMsmConfigurableItem_Skip_Proxy": "HRESULT WINAPI IEnumMsmConfigurableItem_Skip_Proxy(IEnumMsmConfigurableItem *This,unsigned __LONG32 cSkip);", "IEnumMsmConfigurableItem_Reset_Proxy": "HRESULT WINAPI IEnumMsmConfigurableItem_Reset_Proxy(IEnumMsmConfigurableItem *This);", "IEnumMsmConfigurableItem_Clone_Proxy": "HRESULT WINAPI IEnumMsmConfigurableItem_Clone_Proxy(IEnumMsmConfigurableItem *This,IEnumMsmConfigurableItem **pemsmConfigurableItem);", "IMsmConfigurableItems_get_Item_Proxy": "HRESULT WINAPI IMsmConfigurableItems_get_Item_Proxy(IMsmConfigurableItems *This,__LONG32 Item,IMsmConfigurableItem **Return);", "IMsmConfigurableItems_get_Count_Proxy": "HRESULT WINAPI IMsmConfigurableItems_get_Count_Proxy(IMsmConfigurableItems *This,__LONG32 *Count);", "IMsmConfigurableItems_get__NewEnum_Proxy": "HRESULT WINAPI IMsmConfigurableItems_get__NewEnum_Proxy(IMsmConfigurableItems *This,IUnknown **NewEnum);", "IMsmConfigureModule_ProvideTextData_Proxy": "HRESULT WINAPI IMsmConfigureModule_ProvideTextData_Proxy(IMsmConfigureModule *This,const BSTR Name,BSTR *ConfigData);", "IMsmConfigureModule_ProvideIntegerData_Proxy": "HRESULT WINAPI IMsmConfigureModule_ProvideIntegerData_Proxy(IMsmConfigureModule *This,const BSTR Name,__LONG32 *ConfigData);", "IMsmMerge_OpenDatabase_Proxy": "HRESULT WINAPI IMsmMerge_OpenDatabase_Proxy(IMsmMerge *This,const BSTR Path);", "IMsmMerge_OpenModule_Proxy": "HRESULT WINAPI IMsmMerge_OpenModule_Proxy(IMsmMerge *This,const BSTR Path,const short Language);", "IMsmMerge_CloseDatabase_Proxy": "HRESULT WINAPI IMsmMerge_CloseDatabase_Proxy(IMsmMerge *This,const VARIANT_BOOL Commit);", "IMsmMerge_CloseModule_Proxy": "HRESULT WINAPI IMsmMerge_CloseModule_Proxy(IMsmMerge *This);", "IMsmMerge_OpenLog_Proxy": "HRESULT WINAPI IMsmMerge_OpenLog_Proxy(IMsmMerge *This,const BSTR Path);", "IMsmMerge_CloseLog_Proxy": "HRESULT WINAPI IMsmMerge_CloseLog_Proxy(IMsmMerge *This);", "IMsmMerge_Log_Proxy": "HRESULT WINAPI IMsmMerge_Log_Proxy(IMsmMerge *This,const BSTR Message);", "IMsmMerge_get_Errors_Proxy": "HRESULT WINAPI IMsmMerge_get_Errors_Proxy(IMsmMerge *This,IMsmErrors **Errors);", "IMsmMerge_get_Dependencies_Proxy": "HRESULT WINAPI IMsmMerge_get_Dependencies_Proxy(IMsmMerge *This,IMsmDependencies **Dependencies);", "IMsmMerge_Merge_Proxy": "HRESULT WINAPI IMsmMerge_Merge_Proxy(IMsmMerge *This,const BSTR Feature,const BSTR RedirectDir);", "IMsmMerge_Connect_Proxy": "HRESULT WINAPI IMsmMerge_Connect_Proxy(IMsmMerge *This,const BSTR Feature);", "IMsmMerge_ExtractCAB_Proxy": "HRESULT WINAPI IMsmMerge_ExtractCAB_Proxy(IMsmMerge *This,const BSTR FileName);", "IMsmMerge_ExtractFiles_Proxy": "HRESULT WINAPI IMsmMerge_ExtractFiles_Proxy(IMsmMerge *This,const BSTR Path);", "IMsmGetFiles_get_ModuleFiles_Proxy": "HRESULT WINAPI IMsmGetFiles_get_ModuleFiles_Proxy(IMsmGetFiles *This,IMsmStrings **Files);", "IMsmMerge2_OpenDatabase_Proxy": "HRESULT WINAPI IMsmMerge2_OpenDatabase_Proxy(IMsmMerge2 *This,const BSTR Path);", "IMsmMerge2_OpenModule_Proxy": "HRESULT WINAPI IMsmMerge2_OpenModule_Proxy(IMsmMerge2 *This,const BSTR Path,const short Language);", "IMsmMerge2_CloseDatabase_Proxy": "HRESULT WINAPI IMsmMerge2_CloseDatabase_Proxy(IMsmMerge2 *This,const VARIANT_BOOL Commit);", "IMsmMerge2_CloseModule_Proxy": "HRESULT WINAPI IMsmMerge2_CloseModule_Proxy(IMsmMerge2 *This);", "IMsmMerge2_OpenLog_Proxy": "HRESULT WINAPI IMsmMerge2_OpenLog_Proxy(IMsmMerge2 *This,const BSTR Path);", "IMsmMerge2_CloseLog_Proxy": "HRESULT WINAPI IMsmMerge2_CloseLog_Proxy(IMsmMerge2 *This);", "IMsmMerge2_Log_Proxy": "HRESULT WINAPI IMsmMerge2_Log_Proxy(IMsmMerge2 *This,const BSTR Message);", "IMsmMerge2_get_Errors_Proxy": "HRESULT WINAPI IMsmMerge2_get_Errors_Proxy(IMsmMerge2 *This,IMsmErrors **Errors);", "IMsmMerge2_get_Dependencies_Proxy": "HRESULT WINAPI IMsmMerge2_get_Dependencies_Proxy(IMsmMerge2 *This,IMsmDependencies **Dependencies);", "IMsmMerge2_Merge_Proxy": "HRESULT WINAPI IMsmMerge2_Merge_Proxy(IMsmMerge2 *This,const BSTR Feature,const BSTR RedirectDir);", "IMsmMerge2_Connect_Proxy": "HRESULT WINAPI IMsmMerge2_Connect_Proxy(IMsmMerge2 *This,const BSTR Feature);", "IMsmMerge2_ExtractCAB_Proxy": "HRESULT WINAPI IMsmMerge2_ExtractCAB_Proxy(IMsmMerge2 *This,const BSTR FileName);", "IMsmMerge2_ExtractFiles_Proxy": "HRESULT WINAPI IMsmMerge2_ExtractFiles_Proxy(IMsmMerge2 *This,const BSTR Path);", "IMsmMerge2_MergeEx_Proxy": "HRESULT WINAPI IMsmMerge2_MergeEx_Proxy(IMsmMerge2 *This,const BSTR Feature,const BSTR RedirectDir,IMsmConfigureModule *pConfiguration);", "IMsmMerge2_ExtractFilesEx_Proxy": "HRESULT WINAPI IMsmMerge2_ExtractFilesEx_Proxy(IMsmMerge2 *This,const BSTR Path,VARIANT_BOOL fLongFileNames,IMsmStrings **pFilePaths);", "IMsmMerge2_get_ConfigurableItems_Proxy": "HRESULT WINAPI IMsmMerge2_get_ConfigurableItems_Proxy(IMsmMerge2 *This,IMsmConfigurableItems **ConfigurableItems);", "IMsmMerge2_CreateSourceImage_Proxy": "HRESULT WINAPI IMsmMerge2_CreateSourceImage_Proxy(IMsmMerge2 *This,const BSTR Path,VARIANT_BOOL fLongFileNames,IMsmStrings **pFilePaths);", "IMsmMerge2_get_ModuleFiles_Proxy": "HRESULT WINAPI IMsmMerge2_get_ModuleFiles_Proxy(IMsmMerge2 *This,IMsmStrings **Files);", "CreateGPOLink": "GPEDITAPI HRESULT WINAPI CreateGPOLink(LPOLESTR lpGPO,LPOLESTR lpContainer,WINBOOL fHighPriority);", "DeleteGPOLink": "GPEDITAPI HRESULT WINAPI DeleteGPOLink(LPOLESTR lpGPO,LPOLESTR lpContainer);", "DeleteAllGPOLinks": "GPEDITAPI HRESULT WINAPI DeleteAllGPOLinks(LPOLESTR lpContainer);", "BrowseForGPO": "GPEDITAPI HRESULT WINAPI BrowseForGPO(LPGPOBROWSEINFO lpBrowseInfo);", "ImportRSoPData": "GPEDITAPI HRESULT WINAPI ImportRSoPData(LPOLESTR lpNameSpace,LPOLESTR lpFileName);", "ExportRSoPData": "GPEDITAPI HRESULT WINAPI ExportRSoPData(LPOLESTR lpNameSpace,LPOLESTR lpFileName);", "D3DXGetImageInfoFromFileA": "HRESULT WINAPI D3DXGetImageInfoFromFileA(const char *file, D3DXIMAGE_INFO *info);", "D3DXGetImageInfoFromFileW": "HRESULT WINAPI D3DXGetImageInfoFromFileW(const WCHAR *file, D3DXIMAGE_INFO *info);", "D3DXGetImageInfoFromResourceA": "HRESULT WINAPI D3DXGetImageInfoFromResourceA(HMODULE module, const char *resource, D3DXIMAGE_INFO *info);", "D3DXGetImageInfoFromResourceW": "HRESULT WINAPI D3DXGetImageInfoFromResourceW(HMODULE module, const WCHAR *resource, D3DXIMAGE_INFO *info);", "D3DXGetImageInfoFromFileInMemory": "HRESULT WINAPI D3DXGetImageInfoFromFileInMemory(const void *data, UINT data_size, D3DXIMAGE_INFO *info);", "D3DXLoadSurfaceFromFileA": "HRESULT WINAPI D3DXLoadSurfaceFromFileA(struct IDirect3DSurface9 *destsurface,", "D3DXLoadSurfaceFromFileW": "HRESULT WINAPI D3DXLoadSurfaceFromFileW(struct IDirect3DSurface9 *destsurface,", "D3DXLoadSurfaceFromResourceA": "HRESULT WINAPI D3DXLoadSurfaceFromResourceA(struct IDirect3DSurface9 *destsurface,", "D3DXLoadSurfaceFromResourceW": "HRESULT WINAPI D3DXLoadSurfaceFromResourceW(struct IDirect3DSurface9 *destsurface,", "D3DXLoadSurfaceFromFileInMemory": "HRESULT WINAPI D3DXLoadSurfaceFromFileInMemory(struct IDirect3DSurface9 *destsurface,", "D3DXLoadSurfaceFromSurface": "HRESULT WINAPI D3DXLoadSurfaceFromSurface(struct IDirect3DSurface9 *destsurface,", "D3DXLoadSurfaceFromMemory": "HRESULT WINAPI D3DXLoadSurfaceFromMemory(IDirect3DSurface9 *dst_surface,", "D3DXSaveSurfaceToFileInMemory": "HRESULT WINAPI D3DXSaveSurfaceToFileInMemory(struct ID3DXBuffer **destbuffer,", "D3DXSaveSurfaceToFileA": "HRESULT WINAPI D3DXSaveSurfaceToFileA(const char *destfile, D3DXIMAGE_FILEFORMAT destformat,", "D3DXSaveSurfaceToFileW": "HRESULT WINAPI D3DXSaveSurfaceToFileW(const WCHAR *destfile, D3DXIMAGE_FILEFORMAT destformat,", "D3DXLoadVolumeFromFileA": "HRESULT WINAPI D3DXLoadVolumeFromFileA(struct IDirect3DVolume9 *destvolume,", "D3DXLoadVolumeFromFileW": "HRESULT WINAPI D3DXLoadVolumeFromFileW( struct IDirect3DVolume9 *destvolume,", "D3DXLoadVolumeFromResourceA": "HRESULT WINAPI D3DXLoadVolumeFromResourceA(struct IDirect3DVolume9 *destvolume,", "D3DXLoadVolumeFromResourceW": "HRESULT WINAPI D3DXLoadVolumeFromResourceW(struct IDirect3DVolume9 *destvolume,", "D3DXLoadVolumeFromFileInMemory": "HRESULT WINAPI D3DXLoadVolumeFromFileInMemory(struct IDirect3DVolume9 *destvolume,", "D3DXLoadVolumeFromVolume": "HRESULT WINAPI D3DXLoadVolumeFromVolume(struct IDirect3DVolume9 *destvolume,", "D3DXLoadVolumeFromMemory": "HRESULT WINAPI D3DXLoadVolumeFromMemory(struct IDirect3DVolume9 *destvolume,", "D3DXSaveVolumeToFileA": "HRESULT WINAPI D3DXSaveVolumeToFileA(const char *destfile, D3DXIMAGE_FILEFORMAT destformat,", "D3DXSaveVolumeToFileW": "HRESULT WINAPI D3DXSaveVolumeToFileW(const WCHAR *destfile, D3DXIMAGE_FILEFORMAT destformat,", "D3DXCheckTextureRequirements": "HRESULT WINAPI D3DXCheckTextureRequirements(struct IDirect3DDevice9 *device, UINT *width, UINT *height,", "D3DXCheckCubeTextureRequirements": "HRESULT WINAPI D3DXCheckCubeTextureRequirements(struct IDirect3DDevice9 *device, UINT *size,", "D3DXCheckVolumeTextureRequirements": "HRESULT WINAPI D3DXCheckVolumeTextureRequirements(struct IDirect3DDevice9 *device, UINT *width, UINT *height,", "D3DXCreateTexture": "HRESULT WINAPI D3DXCreateTexture(struct IDirect3DDevice9 *device, UINT width, UINT height,", "D3DXCreateCubeTexture": "HRESULT WINAPI D3DXCreateCubeTexture(struct IDirect3DDevice9 *device, UINT size,", "D3DXCreateVolumeTexture": "HRESULT WINAPI D3DXCreateVolumeTexture(struct IDirect3DDevice9 *device, UINT width, UINT height, UINT depth,", "D3DXCreateTextureFromFileA": "HRESULT WINAPI D3DXCreateTextureFromFileA(struct IDirect3DDevice9 *device,", "D3DXCreateTextureFromFileW": "HRESULT WINAPI D3DXCreateTextureFromFileW(struct IDirect3DDevice9 *device,", "D3DXCreateCubeTextureFromFileA": "HRESULT WINAPI D3DXCreateCubeTextureFromFileA(struct IDirect3DDevice9 *device,", "D3DXCreateCubeTextureFromFileW": "HRESULT WINAPI D3DXCreateCubeTextureFromFileW(struct IDirect3DDevice9 *device,", "D3DXCreateVolumeTextureFromFileA": "HRESULT WINAPI D3DXCreateVolumeTextureFromFileA(struct IDirect3DDevice9 *device,", "D3DXCreateVolumeTextureFromFileW": "HRESULT WINAPI D3DXCreateVolumeTextureFromFileW(struct IDirect3DDevice9 *device,", "D3DXCreateTextureFromResourceA": "HRESULT WINAPI D3DXCreateTextureFromResourceA(struct IDirect3DDevice9 *device,", "D3DXCreateTextureFromResourceW": "HRESULT WINAPI D3DXCreateTextureFromResourceW(struct IDirect3DDevice9 *device,", "D3DXCreateCubeTextureFromResourceA": "HRESULT WINAPI D3DXCreateCubeTextureFromResourceA(struct IDirect3DDevice9 *device,", "D3DXCreateCubeTextureFromResourceW": "HRESULT WINAPI D3DXCreateCubeTextureFromResourceW(struct IDirect3DDevice9 *device,", "D3DXCreateVolumeTextureFromResourceA": "HRESULT WINAPI D3DXCreateVolumeTextureFromResourceA(struct IDirect3DDevice9 *device,", "D3DXCreateVolumeTextureFromResourceW": "HRESULT WINAPI D3DXCreateVolumeTextureFromResourceW(struct IDirect3DDevice9 *device,", "D3DXCreateTextureFromFileExA": "HRESULT WINAPI D3DXCreateTextureFromFileExA(struct IDirect3DDevice9 *device, const char *srcfile,", "D3DXCreateTextureFromFileExW": "HRESULT WINAPI D3DXCreateTextureFromFileExW(struct IDirect3DDevice9 *device, const WCHAR *srcfile,", "D3DXCreateCubeTextureFromFileExA": "HRESULT WINAPI D3DXCreateCubeTextureFromFileExA(struct IDirect3DDevice9 *device, const char *srcfile,", "D3DXCreateCubeTextureFromFileExW": "HRESULT WINAPI D3DXCreateCubeTextureFromFileExW(struct IDirect3DDevice9 *device, const WCHAR *srcfile,", "D3DXCreateVolumeTextureFromFileExA": "HRESULT WINAPI D3DXCreateVolumeTextureFromFileExA(struct IDirect3DDevice9 *device, const char *srcfile,", "D3DXCreateVolumeTextureFromFileExW": "HRESULT WINAPI D3DXCreateVolumeTextureFromFileExW(struct IDirect3DDevice9 *device, const WCHAR *srcfile,", "D3DXCreateTextureFromResourceExA": "HRESULT WINAPI D3DXCreateTextureFromResourceExA(struct IDirect3DDevice9 *device, HMODULE srcmodule,", "D3DXCreateTextureFromResourceExW": "HRESULT WINAPI D3DXCreateTextureFromResourceExW(struct IDirect3DDevice9 *device, HMODULE srcmodule,", "D3DXCreateCubeTextureFromResourceExA": "HRESULT WINAPI D3DXCreateCubeTextureFromResourceExA(struct IDirect3DDevice9 *device, HMODULE srcmodule,", "D3DXCreateCubeTextureFromResourceExW": "HRESULT WINAPI D3DXCreateCubeTextureFromResourceExW(struct IDirect3DDevice9 *device, HMODULE srcmodule,", "D3DXCreateVolumeTextureFromResourceExA": "HRESULT WINAPI D3DXCreateVolumeTextureFromResourceExA(struct IDirect3DDevice9 *device, HMODULE srcmodule,", "D3DXCreateVolumeTextureFromResourceExW": "HRESULT WINAPI D3DXCreateVolumeTextureFromResourceExW(struct IDirect3DDevice9 *device, HMODULE srcmodule,", "D3DXCreateTextureFromFileInMemory": "HRESULT WINAPI D3DXCreateTextureFromFileInMemory(struct IDirect3DDevice9 *device,", "D3DXCreateCubeTextureFromFileInMemory": "HRESULT WINAPI D3DXCreateCubeTextureFromFileInMemory(struct IDirect3DDevice9 *device,", "D3DXCreateVolumeTextureFromFileInMemory": "HRESULT WINAPI D3DXCreateVolumeTextureFromFileInMemory(struct IDirect3DDevice9 *device,", "D3DXCreateTextureFromFileInMemoryEx": "HRESULT WINAPI D3DXCreateTextureFromFileInMemoryEx(struct IDirect3DDevice9 *device, const void *srcdata,", "D3DXCreateCubeTextureFromFileInMemoryEx": "HRESULT WINAPI D3DXCreateCubeTextureFromFileInMemoryEx(struct IDirect3DDevice9 *device, const void *srcdata,", "D3DXCreateVolumeTextureFromFileInMemoryEx": "HRESULT WINAPI D3DXCreateVolumeTextureFromFileInMemoryEx(struct IDirect3DDevice9 *device, const void *srcdata,", "D3DXSaveTextureToFileInMemory": "HRESULT WINAPI D3DXSaveTextureToFileInMemory(struct ID3DXBuffer **destbuffer, D3DXIMAGE_FILEFORMAT destformat,", "D3DXSaveTextureToFileA": "HRESULT WINAPI D3DXSaveTextureToFileA(const char *destfile, D3DXIMAGE_FILEFORMAT destformat,", "D3DXSaveTextureToFileW": "HRESULT WINAPI D3DXSaveTextureToFileW(const WCHAR *destfile, D3DXIMAGE_FILEFORMAT destformat,", "D3DXFilterTexture": "HRESULT WINAPI D3DXFilterTexture(struct IDirect3DBaseTexture9 *texture,", "D3DXFillTexture": "HRESULT WINAPI D3DXFillTexture(struct IDirect3DTexture9 *texture, LPD3DXFILL2D function, void *data);", "D3DXFillCubeTexture": "HRESULT WINAPI D3DXFillCubeTexture(struct IDirect3DCubeTexture9 *cube, LPD3DXFILL3D function, void *data);", "D3DXFillVolumeTexture": "HRESULT WINAPI D3DXFillVolumeTexture(struct IDirect3DVolumeTexture9 *volume, LPD3DXFILL3D function, void *data);", "D3DXFillTextureTX": "HRESULT WINAPI D3DXFillTextureTX(struct IDirect3DTexture9 *texture, ID3DXTextureShader *texture_shader);", "D3DXFillCubeTextureTX": "HRESULT WINAPI D3DXFillCubeTextureTX(struct IDirect3DCubeTexture9 *cube, ID3DXTextureShader *texture_shader);", "D3DXFillVolumeTextureTX": "HRESULT WINAPI D3DXFillVolumeTextureTX(struct IDirect3DVolumeTexture9 *volume, ID3DXTextureShader *texture_shader);", "D3DXComputeNormalMap": "HRESULT WINAPI D3DXComputeNormalMap(IDirect3DTexture9 *texture, IDirect3DTexture9 *srctexture,", "WinHttpAddRequestHeaders": "WINHTTPAPI WINBOOL     WINAPI WinHttpAddRequestHeaders(HINTERNET,LPCWSTR,DWORD,DWORD);", "WinHttpDetectAutoProxyConfigUrl": "WINHTTPAPI WINBOOL     WINAPI WinHttpDetectAutoProxyConfigUrl(DWORD,LPWSTR*);", "WinHttpCheckPlatform": "WINHTTPAPI WINBOOL     WINAPI WinHttpCheckPlatform(void);", "WinHttpCloseHandle": "WINHTTPAPI WINBOOL     WINAPI WinHttpCloseHandle(HINTERNET);", "WinHttpConnect": "WINHTTPAPI HINTERNET   WINAPI WinHttpConnect(HINTERNET,LPCWSTR,INTERNET_PORT,DWORD);", "WinHttpCrackUrl": "WINHTTPAPI WINBOOL     WINAPI WinHttpCrackUrl(LPCWSTR,DWORD,DWORD,LPURL_COMPONENTS);", "WinHttpCreateProxyResolver": "WINHTTPAPI DWORD       WINAPI WinHttpCreateProxyResolver(HINTERNET,HINTERNET*);", "WinHttpCreateUrl": "WINHTTPAPI WINBOOL     WINAPI WinHttpCreateUrl(LPURL_COMPONENTS,DWORD,LPWSTR,LPDWORD);", "WinHttpFreeProxyResult": "WINHTTPAPI VOID        WINAPI WinHttpFreeProxyResult(WINHTTP_PROXY_RESULT*);", "WinHttpFreeProxyResultEx": "WINHTTPAPI VOID        WINAPI WinHttpFreeProxyResultEx(WINHTTP_PROXY_RESULT_EX*);", "WinHttpFreeProxySettings": "WINHTTPAPI VOID        WINAPI WinHttpFreeProxySettings(WINHTTP_PROXY_SETTINGS*);", "WinHttpGetDefaultProxyConfiguration": "WINHTTPAPI WINBOOL     WINAPI WinHttpGetDefaultProxyConfiguration(WINHTTP_PROXY_INFO*);", "WinHttpGetIEProxyConfigForCurrentUser": "WINHTTPAPI WINBOOL     WINAPI WinHttpGetIEProxyConfigForCurrentUser(WINHTTP_CURRENT_USER_IE_PROXY_CONFIG*);", "WinHttpGetProxyForUrl": "WINHTTPAPI WINBOOL     WINAPI WinHttpGetProxyForUrl(HINTERNET,LPCWSTR,WINHTTP_AUTOPROXY_OPTIONS*,WINHTTP_PROXY_INFO*);", "WinHttpGetProxyForUrlEx": "WINHTTPAPI DWORD       WINAPI WinHttpGetProxyForUrlEx(HINTERNET,PCWSTR,WINHTTP_AUTOPROXY_OPTIONS*,DWORD_PTR);", "WinHttpGetProxyForUrlEx2": "WINHTTPAPI DWORD       WINAPI WinHttpGetProxyForUrlEx2(HINTERNET,PCWSTR,WINHTTP_AUTOPROXY_OPTIONS*,DWORD,BYTE*,DWORD_PTR);", "WinHttpGetProxyResult": "WINHTTPAPI DWORD       WINAPI WinHttpGetProxyResult(HINTERNET,WINHTTP_PROXY_RESULT*);", "WinHttpGetProxyResultEx": "WINHTTPAPI DWORD       WINAPI WinHttpGetProxyResultEx(HINTERNET,WINHTTP_PROXY_RESULT_EX*);", "WinHttpGetProxySettingsVersion": "WINHTTPAPI DWORD       WINAPI WinHttpGetProxySettingsVersion(HINTERNET,DWORD*);", "WinHttpIsHostInProxyBypassList": "WINHTTPAPI DWORD       WINAPI WinHttpIsHostInProxyBypassList(const WINHTTP_PROXY_INFO*,PCWSTR,INTERNET_SCHEME,INTERNET_PORT,WINBOOL*);", "WinHttpOpen": "WINHTTPAPI HINTERNET   WINAPI WinHttpOpen(LPCWSTR,DWORD,LPCWSTR,LPCWSTR,DWORD);", "WinHttpOpenRequest": "WINHTTPAPI HINTERNET   WINAPI WinHttpOpenRequest(HINTERNET,LPCWSTR,LPCWSTR,LPCWSTR,LPCWSTR,LPCWSTR*,DWORD);", "WinHttpQueryAuthParams": "WINHTTPAPI WINBOOL     WINAPI WinHttpQueryAuthParams(HINTERNET,DWORD,LPVOID*);", "WinHttpQueryAuthSchemes": "WINHTTPAPI WINBOOL     WINAPI WinHttpQueryAuthSchemes(HINTERNET,LPDWORD,LPDWORD,LPDWORD);", "WinHttpQueryDataAvailable": "WINHTTPAPI WINBOOL     WINAPI WinHttpQueryDataAvailable(HINTERNET,LPDWORD);", "WinHttpQueryHeaders": "WINHTTPAPI WINBOOL     WINAPI WinHttpQueryHeaders(HINTERNET,DWORD,LPCWSTR,LPVOID,LPDWORD,LPDWORD);", "WinHttpQueryOption": "WINHTTPAPI WINBOOL     WINAPI WinHttpQueryOption(HINTERNET,DWORD,LPVOID,LPDWORD);", "WinHttpReadData": "WINHTTPAPI WINBOOL     WINAPI WinHttpReadData(HINTERNET,LPVOID,DWORD,LPDWORD);", "WinHttpReadProxySettings": "WINHTTPAPI DWORD       WINAPI WinHttpReadProxySettings(HINTERNET,PCWSTR,WINBOOL,WINBOOL,DWORD*,WINBOOL*,WINHTTP_PROXY_SETTINGS*);", "WinHttpReceiveResponse": "WINHTTPAPI WINBOOL     WINAPI WinHttpReceiveResponse(HINTERNET,LPVOID);", "WinHttpResetAutoProxy": "WINHTTPAPI DWORD       WINAPI WinHttpResetAutoProxy(HINTERNET,DWORD);", "WinHttpSendRequest": "WINHTTPAPI WINBOOL     WINAPI WinHttpSendRequest(HINTERNET,LPCWSTR,DWORD,LPVOID,DWORD,DWORD,DWORD_PTR);", "WinHttpSetDefaultProxyConfiguration": "WINHTTPAPI WINBOOL     WINAPI WinHttpSetDefaultProxyConfiguration(WINHTTP_PROXY_INFO*);", "WinHttpSetCredentials": "WINHTTPAPI WINBOOL     WINAPI WinHttpSetCredentials(HINTERNET,DWORD,DWORD,LPCWSTR,LPCWSTR,LPVOID);", "WinHttpSetOption": "WINHTTPAPI WINBOOL     WINAPI WinHttpSetOption(HINTERNET,DWORD,LPVOID,DWORD);", "WinHttpSetStatusCallback": "WINHTTPAPI WINHTTP_STATUS_CALLBACK WINAPI WinHttpSetStatusCallback(HINTERNET,WINHTTP_STATUS_CALLBACK,DWORD,DWORD_PTR);", "WinHttpSetTimeouts": "WINHTTPAPI WINBOOL     WINAPI WinHttpSetTimeouts(HINTERNET,int,int,int,int);", "WinHttpTimeFromSystemTime": "WINHTTPAPI WINBOOL     WINAPI WinHttpTimeFromSystemTime(const SYSTEMTIME *,LPWSTR);", "WinHttpTimeToSystemTime": "WINHTTPAPI WINBOOL     WINAPI WinHttpTimeToSystemTime(LPCWSTR,SYSTEMTIME*);", "WinHttpWebSocketClose": "WINHTTPAPI DWORD       WINAPI WinHttpWebSocketClose(HINTERNET,USHORT,void *,DWORD);", "WinHttpWebSocketCompleteUpgrade": "WINHTTPAPI HINTERNET   WINAPI WinHttpWebSocketCompleteUpgrade(HINTERNET,DWORD_PTR);", "WinHttpWebSocketQueryCloseStatus": "WINHTTPAPI DWORD       WINAPI WinHttpWebSocketQueryCloseStatus(HINTERNET,USHORT*,void*,DWORD,DWORD*);", "WinHttpWebSocketReceive": "WINHTTPAPI DWORD       WINAPI WinHttpWebSocketReceive(HINTERNET,void*,DWORD,DWORD*,WINHTTP_WEB_SOCKET_BUFFER_TYPE*);", "WinHttpWebSocketSend": "WINHTTPAPI DWORD       WINAPI WinHttpWebSocketSend(HINTERNET,WINHTTP_WEB_SOCKET_BUFFER_TYPE,void*,DWORD);", "WinHttpWebSocketShutdown": "WINHTTPAPI DWORD       WINAPI WinHttpWebSocketShutdown(HINTERNET,USHORT,void*,DWORD);", "WinHttpWriteData": "WINHTTPAPI WINBOOL     WINAPI WinHttpWriteData(HINTERNET,LPCVOID,DWORD,LPDWORD);", "WinHttpWriteProxySettings": "WINHTTPAPI DWORD       WINAPI WinHttpWriteProxySettings(HINTERNET,WINBOOL,WINHTTP_PROXY_SETTINGS*);", "IClusCfgNodeInfo_GetName_Proxy": "HRESULT WINAPI IClusCfgNodeInfo_GetName_Proxy(IClusCfgNodeInfo *This,BSTR *pbstrNameOut);", "IClusCfgNodeInfo_SetName_Proxy": "HRESULT WINAPI IClusCfgNodeInfo_SetName_Proxy(IClusCfgNodeInfo *This,LPCWSTR pcszNameIn);", "IClusCfgNodeInfo_IsMemberOfCluster_Proxy": "HRESULT WINAPI IClusCfgNodeInfo_IsMemberOfCluster_Proxy(IClusCfgNodeInfo *This);", "IClusCfgNodeInfo_GetClusterConfigInfo_Proxy": "HRESULT WINAPI IClusCfgNodeInfo_GetClusterConfigInfo_Proxy(IClusCfgNodeInfo *This,IClusCfgClusterInfo **ppClusCfgClusterInfoOut);", "IClusCfgNodeInfo_GetOSVersion_Proxy": "HRESULT WINAPI IClusCfgNodeInfo_GetOSVersion_Proxy(IClusCfgNodeInfo *This,DWORD *pdwMajorVersionOut,DWORD *pdwMinorVersionOut,WORD *pwSuiteMaskOut,BYTE *pbProductTypeOut,BSTR *pbstrCSDVersionOut);", "IClusCfgNodeInfo_GetClusterVersion_Proxy": "HRESULT WINAPI IClusCfgNodeInfo_GetClusterVersion_Proxy(IClusCfgNodeInfo *This,DWORD *pdwNodeHighestVersion,DWORD *pdwNodeLowestVersion);", "IClusCfgNodeInfo_GetDriveLetterMappings_Proxy": "HRESULT WINAPI IClusCfgNodeInfo_GetDriveLetterMappings_Proxy(IClusCfgNodeInfo *This,SDriveLetterMapping *pdlmDriveLetterUsageOut);", "IClusCfgNodeInfo_GetMaxNodeCount_Proxy": "HRESULT WINAPI IClusCfgNodeInfo_GetMaxNodeCount_Proxy(IClusCfgNodeInfo *This,DWORD *pcMaxNodesOut);", "IClusCfgNodeInfo_GetProcessorInfo_Proxy": "HRESULT WINAPI IClusCfgNodeInfo_GetProcessorInfo_Proxy(IClusCfgNodeInfo *This,WORD *pwProcessorArchitectureOut,WORD *pwProcessorLevelOut);", "AsyncIClusCfgNodeInfo_Begin_GetName_Proxy": "HRESULT WINAPI AsyncIClusCfgNodeInfo_Begin_GetName_Proxy(AsyncIClusCfgNodeInfo *This);", "AsyncIClusCfgNodeInfo_Finish_GetName_Proxy": "HRESULT WINAPI AsyncIClusCfgNodeInfo_Finish_GetName_Proxy(AsyncIClusCfgNodeInfo *This,BSTR *pbstrNameOut);", "AsyncIClusCfgNodeInfo_Begin_SetName_Proxy": "HRESULT WINAPI AsyncIClusCfgNodeInfo_Begin_SetName_Proxy(AsyncIClusCfgNodeInfo *This,LPCWSTR pcszNameIn);", "AsyncIClusCfgNodeInfo_Finish_SetName_Proxy": "HRESULT WINAPI AsyncIClusCfgNodeInfo_Finish_SetName_Proxy(AsyncIClusCfgNodeInfo *This);", "AsyncIClusCfgNodeInfo_Begin_IsMemberOfCluster_Proxy": "HRESULT WINAPI AsyncIClusCfgNodeInfo_Begin_IsMemberOfCluster_Proxy(AsyncIClusCfgNodeInfo *This);", "AsyncIClusCfgNodeInfo_Finish_IsMemberOfCluster_Proxy": "HRESULT WINAPI AsyncIClusCfgNodeInfo_Finish_IsMemberOfCluster_Proxy(AsyncIClusCfgNodeInfo *This);", "AsyncIClusCfgNodeInfo_Begin_GetClusterConfigInfo_Proxy": "HRESULT WINAPI AsyncIClusCfgNodeInfo_Begin_GetClusterConfigInfo_Proxy(AsyncIClusCfgNodeInfo *This);", "AsyncIClusCfgNodeInfo_Finish_GetClusterConfigInfo_Proxy": "HRESULT WINAPI AsyncIClusCfgNodeInfo_Finish_GetClusterConfigInfo_Proxy(AsyncIClusCfgNodeInfo *This,IClusCfgClusterInfo **ppClusCfgClusterInfoOut);", "AsyncIClusCfgNodeInfo_Begin_GetOSVersion_Proxy": "HRESULT WINAPI AsyncIClusCfgNodeInfo_Begin_GetOSVersion_Proxy(AsyncIClusCfgNodeInfo *This);", "AsyncIClusCfgNodeInfo_Finish_GetOSVersion_Proxy": "HRESULT WINAPI AsyncIClusCfgNodeInfo_Finish_GetOSVersion_Proxy(AsyncIClusCfgNodeInfo *This,DWORD *pdwMajorVersionOut,DWORD *pdwMinorVersionOut,WORD *pwSuiteMaskOut,BYTE *pbProductTypeOut,BSTR *pbstrCSDVersionOut);", "AsyncIClusCfgNodeInfo_Begin_GetClusterVersion_Proxy": "HRESULT WINAPI AsyncIClusCfgNodeInfo_Begin_GetClusterVersion_Proxy(AsyncIClusCfgNodeInfo *This);", "AsyncIClusCfgNodeInfo_Finish_GetClusterVersion_Proxy": "HRESULT WINAPI AsyncIClusCfgNodeInfo_Finish_GetClusterVersion_Proxy(AsyncIClusCfgNodeInfo *This,DWORD *pdwNodeHighestVersion,DWORD *pdwNodeLowestVersion);", "AsyncIClusCfgNodeInfo_Begin_GetDriveLetterMappings_Proxy": "HRESULT WINAPI AsyncIClusCfgNodeInfo_Begin_GetDriveLetterMappings_Proxy(AsyncIClusCfgNodeInfo *This);", "AsyncIClusCfgNodeInfo_Finish_GetDriveLetterMappings_Proxy": "HRESULT WINAPI AsyncIClusCfgNodeInfo_Finish_GetDriveLetterMappings_Proxy(AsyncIClusCfgNodeInfo *This,SDriveLetterMapping *pdlmDriveLetterUsageOut);", "AsyncIClusCfgNodeInfo_Begin_GetMaxNodeCount_Proxy": "HRESULT WINAPI AsyncIClusCfgNodeInfo_Begin_GetMaxNodeCount_Proxy(AsyncIClusCfgNodeInfo *This);", "AsyncIClusCfgNodeInfo_Finish_GetMaxNodeCount_Proxy": "HRESULT WINAPI AsyncIClusCfgNodeInfo_Finish_GetMaxNodeCount_Proxy(AsyncIClusCfgNodeInfo *This,DWORD *pcMaxNodesOut);", "AsyncIClusCfgNodeInfo_Begin_GetProcessorInfo_Proxy": "HRESULT WINAPI AsyncIClusCfgNodeInfo_Begin_GetProcessorInfo_Proxy(AsyncIClusCfgNodeInfo *This);", "AsyncIClusCfgNodeInfo_Finish_GetProcessorInfo_Proxy": "HRESULT WINAPI AsyncIClusCfgNodeInfo_Finish_GetProcessorInfo_Proxy(AsyncIClusCfgNodeInfo *This,WORD *pwProcessorArchitectureOut,WORD *pwProcessorLevelOut);", "IEnumClusCfgManagedResources_Next_Proxy": "HRESULT WINAPI IEnumClusCfgManagedResources_Next_Proxy(IEnumClusCfgManagedResources *This,ULONG cNumberRequestedIn,IClusCfgManagedResourceInfo **rgpManagedResourceInfoOut,ULONG *pcNumberFetchedOut);", "IEnumClusCfgManagedResources_Reset_Proxy": "HRESULT WINAPI IEnumClusCfgManagedResources_Reset_Proxy(IEnumClusCfgManagedResources *This);", "IEnumClusCfgManagedResources_Skip_Proxy": "HRESULT WINAPI IEnumClusCfgManagedResources_Skip_Proxy(IEnumClusCfgManagedResources *This,ULONG cNumberToSkip);", "IEnumClusCfgManagedResources_Clone_Proxy": "HRESULT WINAPI IEnumClusCfgManagedResources_Clone_Proxy(IEnumClusCfgManagedResources *This,IEnumClusCfgManagedResources **ppEnumManagedResourcesOut);", "IEnumClusCfgManagedResources_Count_Proxy": "HRESULT WINAPI IEnumClusCfgManagedResources_Count_Proxy(IEnumClusCfgManagedResources *This,DWORD *pnCountOut);", "AsyncIEnumClusCfgManagedResources_Begin_Next_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgManagedResources_Begin_Next_Proxy(AsyncIEnumClusCfgManagedResources *This,ULONG cNumberRequestedIn);", "AsyncIEnumClusCfgManagedResources_Finish_Next_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgManagedResources_Finish_Next_Proxy(AsyncIEnumClusCfgManagedResources *This,IClusCfgManagedResourceInfo **rgpManagedResourceInfoOut,ULONG *pcNumberFetchedOut);", "AsyncIEnumClusCfgManagedResources_Begin_Reset_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgManagedResources_Begin_Reset_Proxy(AsyncIEnumClusCfgManagedResources *This);", "AsyncIEnumClusCfgManagedResources_Finish_Reset_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgManagedResources_Finish_Reset_Proxy(AsyncIEnumClusCfgManagedResources *This);", "AsyncIEnumClusCfgManagedResources_Begin_Skip_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgManagedResources_Begin_Skip_Proxy(AsyncIEnumClusCfgManagedResources *This,ULONG cNumberToSkip);", "AsyncIEnumClusCfgManagedResources_Finish_Skip_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgManagedResources_Finish_Skip_Proxy(AsyncIEnumClusCfgManagedResources *This);", "AsyncIEnumClusCfgManagedResources_Begin_Clone_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgManagedResources_Begin_Clone_Proxy(AsyncIEnumClusCfgManagedResources *This);", "AsyncIEnumClusCfgManagedResources_Finish_Clone_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgManagedResources_Finish_Clone_Proxy(AsyncIEnumClusCfgManagedResources *This,IEnumClusCfgManagedResources **ppEnumManagedResourcesOut);", "AsyncIEnumClusCfgManagedResources_Begin_Count_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgManagedResources_Begin_Count_Proxy(AsyncIEnumClusCfgManagedResources *This);", "AsyncIEnumClusCfgManagedResources_Finish_Count_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgManagedResources_Finish_Count_Proxy(AsyncIEnumClusCfgManagedResources *This,DWORD *pnCountOut);", "IEnumClusCfgNetworks_Next_Proxy": "HRESULT WINAPI IEnumClusCfgNetworks_Next_Proxy(IEnumClusCfgNetworks *This,ULONG cNumberRequestedIn,IClusCfgNetworkInfo **rgpNetworkInfoOut,ULONG *pcNumberFetchedOut);", "IEnumClusCfgNetworks_Skip_Proxy": "HRESULT WINAPI IEnumClusCfgNetworks_Skip_Proxy(IEnumClusCfgNetworks *This,ULONG cNumberToSkipIn);", "IEnumClusCfgNetworks_Reset_Proxy": "HRESULT WINAPI IEnumClusCfgNetworks_Reset_Proxy(IEnumClusCfgNetworks *This);", "IEnumClusCfgNetworks_Clone_Proxy": "HRESULT WINAPI IEnumClusCfgNetworks_Clone_Proxy(IEnumClusCfgNetworks *This,IEnumClusCfgNetworks **ppEnumNetworksOut);", "IEnumClusCfgNetworks_Count_Proxy": "HRESULT WINAPI IEnumClusCfgNetworks_Count_Proxy(IEnumClusCfgNetworks *This,DWORD *pnCountOut);", "AsyncIEnumClusCfgNetworks_Begin_Next_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgNetworks_Begin_Next_Proxy(AsyncIEnumClusCfgNetworks *This,ULONG cNumberRequestedIn);", "AsyncIEnumClusCfgNetworks_Finish_Next_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgNetworks_Finish_Next_Proxy(AsyncIEnumClusCfgNetworks *This,IClusCfgNetworkInfo **rgpNetworkInfoOut,ULONG *pcNumberFetchedOut);", "AsyncIEnumClusCfgNetworks_Begin_Skip_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgNetworks_Begin_Skip_Proxy(AsyncIEnumClusCfgNetworks *This,ULONG cNumberToSkipIn);", "AsyncIEnumClusCfgNetworks_Finish_Skip_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgNetworks_Finish_Skip_Proxy(AsyncIEnumClusCfgNetworks *This);", "AsyncIEnumClusCfgNetworks_Begin_Reset_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgNetworks_Begin_Reset_Proxy(AsyncIEnumClusCfgNetworks *This);", "AsyncIEnumClusCfgNetworks_Finish_Reset_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgNetworks_Finish_Reset_Proxy(AsyncIEnumClusCfgNetworks *This);", "AsyncIEnumClusCfgNetworks_Begin_Clone_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgNetworks_Begin_Clone_Proxy(AsyncIEnumClusCfgNetworks *This);", "AsyncIEnumClusCfgNetworks_Finish_Clone_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgNetworks_Finish_Clone_Proxy(AsyncIEnumClusCfgNetworks *This,IEnumClusCfgNetworks **ppEnumNetworksOut);", "AsyncIEnumClusCfgNetworks_Begin_Count_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgNetworks_Begin_Count_Proxy(AsyncIEnumClusCfgNetworks *This);", "AsyncIEnumClusCfgNetworks_Finish_Count_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgNetworks_Finish_Count_Proxy(AsyncIEnumClusCfgNetworks *This,DWORD *pnCountOut);", "IClusCfgManagedResourceInfo_GetUID_Proxy": "HRESULT WINAPI IClusCfgManagedResourceInfo_GetUID_Proxy(IClusCfgManagedResourceInfo *This,BSTR *pbstrUIDOut);", "IClusCfgManagedResourceInfo_GetName_Proxy": "HRESULT WINAPI IClusCfgManagedResourceInfo_GetName_Proxy(IClusCfgManagedResourceInfo *This,BSTR *pbstrNameOut);", "IClusCfgManagedResourceInfo_SetName_Proxy": "HRESULT WINAPI IClusCfgManagedResourceInfo_SetName_Proxy(IClusCfgManagedResourceInfo *This,LPCWSTR pcszNameIn);", "IClusCfgManagedResourceInfo_IsManaged_Proxy": "HRESULT WINAPI IClusCfgManagedResourceInfo_IsManaged_Proxy(IClusCfgManagedResourceInfo *This);", "IClusCfgManagedResourceInfo_SetManaged_Proxy": "HRESULT WINAPI IClusCfgManagedResourceInfo_SetManaged_Proxy(IClusCfgManagedResourceInfo *This,WINBOOL fIsManagedIn);", "IClusCfgManagedResourceInfo_IsQuorumResource_Proxy": "HRESULT WINAPI IClusCfgManagedResourceInfo_IsQuorumResource_Proxy(IClusCfgManagedResourceInfo *This);", "IClusCfgManagedResourceInfo_SetQuorumResource_Proxy": "HRESULT WINAPI IClusCfgManagedResourceInfo_SetQuorumResource_Proxy(IClusCfgManagedResourceInfo *This,WINBOOL fIsQuorumResourceIn);", "IClusCfgManagedResourceInfo_IsQuorumCapable_Proxy": "HRESULT WINAPI IClusCfgManagedResourceInfo_IsQuorumCapable_Proxy(IClusCfgManagedResourceInfo *This);", "IClusCfgManagedResourceInfo_SetQuorumCapable_Proxy": "HRESULT WINAPI IClusCfgManagedResourceInfo_SetQuorumCapable_Proxy(IClusCfgManagedResourceInfo *This,WINBOOL fIsQuorumCapableIn);", "IClusCfgManagedResourceInfo_GetDriveLetterMappings_Proxy": "HRESULT WINAPI IClusCfgManagedResourceInfo_GetDriveLetterMappings_Proxy(IClusCfgManagedResourceInfo *This,SDriveLetterMapping *pdlmDriveLetterMappingOut);", "IClusCfgManagedResourceInfo_SetDriveLetterMappings_Proxy": "HRESULT WINAPI IClusCfgManagedResourceInfo_SetDriveLetterMappings_Proxy(IClusCfgManagedResourceInfo *This,SDriveLetterMapping dlmDriveLetterMappingIn);", "IClusCfgManagedResourceInfo_IsManagedByDefault_Proxy": "HRESULT WINAPI IClusCfgManagedResourceInfo_IsManagedByDefault_Proxy(IClusCfgManagedResourceInfo *This);", "IClusCfgManagedResourceInfo_SetManagedByDefault_Proxy": "HRESULT WINAPI IClusCfgManagedResourceInfo_SetManagedByDefault_Proxy(IClusCfgManagedResourceInfo *This,WINBOOL fIsManagedByDefaultIn);", "AsyncIClusCfgManagedResourceInfo_Begin_GetUID_Proxy": "HRESULT WINAPI AsyncIClusCfgManagedResourceInfo_Begin_GetUID_Proxy(AsyncIClusCfgManagedResourceInfo *This);", "AsyncIClusCfgManagedResourceInfo_Finish_GetUID_Proxy": "HRESULT WINAPI AsyncIClusCfgManagedResourceInfo_Finish_GetUID_Proxy(AsyncIClusCfgManagedResourceInfo *This,BSTR *pbstrUIDOut);", "AsyncIClusCfgManagedResourceInfo_Begin_GetName_Proxy": "HRESULT WINAPI AsyncIClusCfgManagedResourceInfo_Begin_GetName_Proxy(AsyncIClusCfgManagedResourceInfo *This);", "AsyncIClusCfgManagedResourceInfo_Finish_GetName_Proxy": "HRESULT WINAPI AsyncIClusCfgManagedResourceInfo_Finish_GetName_Proxy(AsyncIClusCfgManagedResourceInfo *This,BSTR *pbstrNameOut);", "AsyncIClusCfgManagedResourceInfo_Begin_SetName_Proxy": "HRESULT WINAPI AsyncIClusCfgManagedResourceInfo_Begin_SetName_Proxy(AsyncIClusCfgManagedResourceInfo *This,LPCWSTR pcszNameIn);", "AsyncIClusCfgManagedResourceInfo_Finish_SetName_Proxy": "HRESULT WINAPI AsyncIClusCfgManagedResourceInfo_Finish_SetName_Proxy(AsyncIClusCfgManagedResourceInfo *This);", "AsyncIClusCfgManagedResourceInfo_Begin_IsManaged_Proxy": "HRESULT WINAPI AsyncIClusCfgManagedResourceInfo_Begin_IsManaged_Proxy(AsyncIClusCfgManagedResourceInfo *This);", "AsyncIClusCfgManagedResourceInfo_Finish_IsManaged_Proxy": "HRESULT WINAPI AsyncIClusCfgManagedResourceInfo_Finish_IsManaged_Proxy(AsyncIClusCfgManagedResourceInfo *This);", "AsyncIClusCfgManagedResourceInfo_Begin_SetManaged_Proxy": "HRESULT WINAPI AsyncIClusCfgManagedResourceInfo_Begin_SetManaged_Proxy(AsyncIClusCfgManagedResourceInfo *This,WINBOOL fIsManagedIn);", "AsyncIClusCfgManagedResourceInfo_Finish_SetManaged_Proxy": "HRESULT WINAPI AsyncIClusCfgManagedResourceInfo_Finish_SetManaged_Proxy(AsyncIClusCfgManagedResourceInfo *This);", "AsyncIClusCfgManagedResourceInfo_Begin_IsQuorumResource_Proxy": "HRESULT WINAPI AsyncIClusCfgManagedResourceInfo_Begin_IsQuorumResource_Proxy(AsyncIClusCfgManagedResourceInfo *This);", "AsyncIClusCfgManagedResourceInfo_Finish_IsQuorumResource_Proxy": "HRESULT WINAPI AsyncIClusCfgManagedResourceInfo_Finish_IsQuorumResource_Proxy(AsyncIClusCfgManagedResourceInfo *This);", "AsyncIClusCfgManagedResourceInfo_Begin_SetQuorumResource_Proxy": "HRESULT WINAPI AsyncIClusCfgManagedResourceInfo_Begin_SetQuorumResource_Proxy(AsyncIClusCfgManagedResourceInfo *This,WINBOOL fIsQuorumResourceIn);", "AsyncIClusCfgManagedResourceInfo_Finish_SetQuorumResource_Proxy": "HRESULT WINAPI AsyncIClusCfgManagedResourceInfo_Finish_SetQuorumResource_Proxy(AsyncIClusCfgManagedResourceInfo *This);", "AsyncIClusCfgManagedResourceInfo_Begin_IsQuorumCapable_Proxy": "HRESULT WINAPI AsyncIClusCfgManagedResourceInfo_Begin_IsQuorumCapable_Proxy(AsyncIClusCfgManagedResourceInfo *This);", "AsyncIClusCfgManagedResourceInfo_Finish_IsQuorumCapable_Proxy": "HRESULT WINAPI AsyncIClusCfgManagedResourceInfo_Finish_IsQuorumCapable_Proxy(AsyncIClusCfgManagedResourceInfo *This);", "AsyncIClusCfgManagedResourceInfo_Begin_SetQuorumCapable_Proxy": "HRESULT WINAPI AsyncIClusCfgManagedResourceInfo_Begin_SetQuorumCapable_Proxy(AsyncIClusCfgManagedResourceInfo *This,WINBOOL fIsQuorumCapableIn);", "AsyncIClusCfgManagedResourceInfo_Finish_SetQuorumCapable_Proxy": "HRESULT WINAPI AsyncIClusCfgManagedResourceInfo_Finish_SetQuorumCapable_Proxy(AsyncIClusCfgManagedResourceInfo *This);", "AsyncIClusCfgManagedResourceInfo_Begin_GetDriveLetterMappings_Proxy": "HRESULT WINAPI AsyncIClusCfgManagedResourceInfo_Begin_GetDriveLetterMappings_Proxy(AsyncIClusCfgManagedResourceInfo *This);", "AsyncIClusCfgManagedResourceInfo_Finish_GetDriveLetterMappings_Proxy": "HRESULT WINAPI AsyncIClusCfgManagedResourceInfo_Finish_GetDriveLetterMappings_Proxy(AsyncIClusCfgManagedResourceInfo *This,SDriveLetterMapping *pdlmDriveLetterMappingOut);", "AsyncIClusCfgManagedResourceInfo_Begin_SetDriveLetterMappings_Proxy": "HRESULT WINAPI AsyncIClusCfgManagedResourceInfo_Begin_SetDriveLetterMappings_Proxy(AsyncIClusCfgManagedResourceInfo *This,SDriveLetterMapping dlmDriveLetterMappingIn);", "AsyncIClusCfgManagedResourceInfo_Finish_SetDriveLetterMappings_Proxy": "HRESULT WINAPI AsyncIClusCfgManagedResourceInfo_Finish_SetDriveLetterMappings_Proxy(AsyncIClusCfgManagedResourceInfo *This);", "AsyncIClusCfgManagedResourceInfo_Begin_IsManagedByDefault_Proxy": "HRESULT WINAPI AsyncIClusCfgManagedResourceInfo_Begin_IsManagedByDefault_Proxy(AsyncIClusCfgManagedResourceInfo *This);", "AsyncIClusCfgManagedResourceInfo_Finish_IsManagedByDefault_Proxy": "HRESULT WINAPI AsyncIClusCfgManagedResourceInfo_Finish_IsManagedByDefault_Proxy(AsyncIClusCfgManagedResourceInfo *This);", "AsyncIClusCfgManagedResourceInfo_Begin_SetManagedByDefault_Proxy": "HRESULT WINAPI AsyncIClusCfgManagedResourceInfo_Begin_SetManagedByDefault_Proxy(AsyncIClusCfgManagedResourceInfo *This,WINBOOL fIsManagedByDefaultIn);", "AsyncIClusCfgManagedResourceInfo_Finish_SetManagedByDefault_Proxy": "HRESULT WINAPI AsyncIClusCfgManagedResourceInfo_Finish_SetManagedByDefault_Proxy(AsyncIClusCfgManagedResourceInfo *This);", "IEnumClusCfgPartitions_Next_Proxy": "HRESULT WINAPI IEnumClusCfgPartitions_Next_Proxy(IEnumClusCfgPartitions *This,ULONG cNumberRequestedIn,IClusCfgPartitionInfo **rgpPartitionInfoOut,ULONG *pcNumberFetchedOut);", "IEnumClusCfgPartitions_Reset_Proxy": "HRESULT WINAPI IEnumClusCfgPartitions_Reset_Proxy(IEnumClusCfgPartitions *This);", "IEnumClusCfgPartitions_Skip_Proxy": "HRESULT WINAPI IEnumClusCfgPartitions_Skip_Proxy(IEnumClusCfgPartitions *This,ULONG cNumberToSkip);", "IEnumClusCfgPartitions_Clone_Proxy": "HRESULT WINAPI IEnumClusCfgPartitions_Clone_Proxy(IEnumClusCfgPartitions *This,IEnumClusCfgPartitions **ppEnumPartitions);", "IEnumClusCfgPartitions_Count_Proxy": "HRESULT WINAPI IEnumClusCfgPartitions_Count_Proxy(IEnumClusCfgPartitions *This,DWORD *pnCountOut);", "AsyncIEnumClusCfgPartitions_Begin_Next_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgPartitions_Begin_Next_Proxy(AsyncIEnumClusCfgPartitions *This,ULONG cNumberRequestedIn);", "AsyncIEnumClusCfgPartitions_Finish_Next_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgPartitions_Finish_Next_Proxy(AsyncIEnumClusCfgPartitions *This,IClusCfgPartitionInfo **rgpPartitionInfoOut,ULONG *pcNumberFetchedOut);", "AsyncIEnumClusCfgPartitions_Begin_Reset_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgPartitions_Begin_Reset_Proxy(AsyncIEnumClusCfgPartitions *This);", "AsyncIEnumClusCfgPartitions_Finish_Reset_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgPartitions_Finish_Reset_Proxy(AsyncIEnumClusCfgPartitions *This);", "AsyncIEnumClusCfgPartitions_Begin_Skip_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgPartitions_Begin_Skip_Proxy(AsyncIEnumClusCfgPartitions *This,ULONG cNumberToSkip);", "AsyncIEnumClusCfgPartitions_Finish_Skip_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgPartitions_Finish_Skip_Proxy(AsyncIEnumClusCfgPartitions *This);", "AsyncIEnumClusCfgPartitions_Begin_Clone_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgPartitions_Begin_Clone_Proxy(AsyncIEnumClusCfgPartitions *This);", "AsyncIEnumClusCfgPartitions_Finish_Clone_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgPartitions_Finish_Clone_Proxy(AsyncIEnumClusCfgPartitions *This,IEnumClusCfgPartitions **ppEnumPartitions);", "AsyncIEnumClusCfgPartitions_Begin_Count_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgPartitions_Begin_Count_Proxy(AsyncIEnumClusCfgPartitions *This);", "AsyncIEnumClusCfgPartitions_Finish_Count_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgPartitions_Finish_Count_Proxy(AsyncIEnumClusCfgPartitions *This,DWORD *pnCountOut);", "IClusCfgPartitionInfo_GetUID_Proxy": "HRESULT WINAPI IClusCfgPartitionInfo_GetUID_Proxy(IClusCfgPartitionInfo *This,BSTR *pbstrUIDOut);", "IClusCfgPartitionInfo_GetName_Proxy": "HRESULT WINAPI IClusCfgPartitionInfo_GetName_Proxy(IClusCfgPartitionInfo *This,BSTR *pbstrNameOut);", "IClusCfgPartitionInfo_SetName_Proxy": "HRESULT WINAPI IClusCfgPartitionInfo_SetName_Proxy(IClusCfgPartitionInfo *This,LPCWSTR pcszNameIn);", "IClusCfgPartitionInfo_GetDescription_Proxy": "HRESULT WINAPI IClusCfgPartitionInfo_GetDescription_Proxy(IClusCfgPartitionInfo *This,BSTR *pbstrDescriptionOut);", "IClusCfgPartitionInfo_SetDescription_Proxy": "HRESULT WINAPI IClusCfgPartitionInfo_SetDescription_Proxy(IClusCfgPartitionInfo *This,LPCWSTR pcszDescriptionIn);", "IClusCfgPartitionInfo_GetDriveLetterMappings_Proxy": "HRESULT WINAPI IClusCfgPartitionInfo_GetDriveLetterMappings_Proxy(IClusCfgPartitionInfo *This,SDriveLetterMapping *pdlmDriveLetterUsageOut);", "IClusCfgPartitionInfo_SetDriveLetterMappings_Proxy": "HRESULT WINAPI IClusCfgPartitionInfo_SetDriveLetterMappings_Proxy(IClusCfgPartitionInfo *This,SDriveLetterMapping dlmDriveLetterMappingIn);", "IClusCfgPartitionInfo_GetSize_Proxy": "HRESULT WINAPI IClusCfgPartitionInfo_GetSize_Proxy(IClusCfgPartitionInfo *This,ULONG *pcMegaBytes);", "AsyncIClusCfgPartitionInfo_Begin_GetUID_Proxy": "HRESULT WINAPI AsyncIClusCfgPartitionInfo_Begin_GetUID_Proxy(AsyncIClusCfgPartitionInfo *This);", "AsyncIClusCfgPartitionInfo_Finish_GetUID_Proxy": "HRESULT WINAPI AsyncIClusCfgPartitionInfo_Finish_GetUID_Proxy(AsyncIClusCfgPartitionInfo *This,BSTR *pbstrUIDOut);", "AsyncIClusCfgPartitionInfo_Begin_GetName_Proxy": "HRESULT WINAPI AsyncIClusCfgPartitionInfo_Begin_GetName_Proxy(AsyncIClusCfgPartitionInfo *This);", "AsyncIClusCfgPartitionInfo_Finish_GetName_Proxy": "HRESULT WINAPI AsyncIClusCfgPartitionInfo_Finish_GetName_Proxy(AsyncIClusCfgPartitionInfo *This,BSTR *pbstrNameOut);", "AsyncIClusCfgPartitionInfo_Begin_SetName_Proxy": "HRESULT WINAPI AsyncIClusCfgPartitionInfo_Begin_SetName_Proxy(AsyncIClusCfgPartitionInfo *This,LPCWSTR pcszNameIn);", "AsyncIClusCfgPartitionInfo_Finish_SetName_Proxy": "HRESULT WINAPI AsyncIClusCfgPartitionInfo_Finish_SetName_Proxy(AsyncIClusCfgPartitionInfo *This);", "AsyncIClusCfgPartitionInfo_Begin_GetDescription_Proxy": "HRESULT WINAPI AsyncIClusCfgPartitionInfo_Begin_GetDescription_Proxy(AsyncIClusCfgPartitionInfo *This);", "AsyncIClusCfgPartitionInfo_Finish_GetDescription_Proxy": "HRESULT WINAPI AsyncIClusCfgPartitionInfo_Finish_GetDescription_Proxy(AsyncIClusCfgPartitionInfo *This,BSTR *pbstrDescriptionOut);", "AsyncIClusCfgPartitionInfo_Begin_SetDescription_Proxy": "HRESULT WINAPI AsyncIClusCfgPartitionInfo_Begin_SetDescription_Proxy(AsyncIClusCfgPartitionInfo *This,LPCWSTR pcszDescriptionIn);", "AsyncIClusCfgPartitionInfo_Finish_SetDescription_Proxy": "HRESULT WINAPI AsyncIClusCfgPartitionInfo_Finish_SetDescription_Proxy(AsyncIClusCfgPartitionInfo *This);", "AsyncIClusCfgPartitionInfo_Begin_GetDriveLetterMappings_Proxy": "HRESULT WINAPI AsyncIClusCfgPartitionInfo_Begin_GetDriveLetterMappings_Proxy(AsyncIClusCfgPartitionInfo *This);", "AsyncIClusCfgPartitionInfo_Finish_GetDriveLetterMappings_Proxy": "HRESULT WINAPI AsyncIClusCfgPartitionInfo_Finish_GetDriveLetterMappings_Proxy(AsyncIClusCfgPartitionInfo *This,SDriveLetterMapping *pdlmDriveLetterUsageOut);", "AsyncIClusCfgPartitionInfo_Begin_SetDriveLetterMappings_Proxy": "HRESULT WINAPI AsyncIClusCfgPartitionInfo_Begin_SetDriveLetterMappings_Proxy(AsyncIClusCfgPartitionInfo *This,SDriveLetterMapping dlmDriveLetterMappingIn);", "AsyncIClusCfgPartitionInfo_Finish_SetDriveLetterMappings_Proxy": "HRESULT WINAPI AsyncIClusCfgPartitionInfo_Finish_SetDriveLetterMappings_Proxy(AsyncIClusCfgPartitionInfo *This);", "AsyncIClusCfgPartitionInfo_Begin_GetSize_Proxy": "HRESULT WINAPI AsyncIClusCfgPartitionInfo_Begin_GetSize_Proxy(AsyncIClusCfgPartitionInfo *This);", "AsyncIClusCfgPartitionInfo_Finish_GetSize_Proxy": "HRESULT WINAPI AsyncIClusCfgPartitionInfo_Finish_GetSize_Proxy(AsyncIClusCfgPartitionInfo *This,ULONG *pcMegaBytes);", "IEnumClusCfgIPAddresses_Next_Proxy": "HRESULT WINAPI IEnumClusCfgIPAddresses_Next_Proxy(IEnumClusCfgIPAddresses *This,ULONG cNumberRequestedIn,IClusCfgIPAddressInfo **rgpIPAddressInfoOut,ULONG *pcNumberFetchedOut);", "IEnumClusCfgIPAddresses_Skip_Proxy": "HRESULT WINAPI IEnumClusCfgIPAddresses_Skip_Proxy(IEnumClusCfgIPAddresses *This,ULONG cNumberToSkipIn);", "IEnumClusCfgIPAddresses_Reset_Proxy": "HRESULT WINAPI IEnumClusCfgIPAddresses_Reset_Proxy(IEnumClusCfgIPAddresses *This);", "IEnumClusCfgIPAddresses_Clone_Proxy": "HRESULT WINAPI IEnumClusCfgIPAddresses_Clone_Proxy(IEnumClusCfgIPAddresses *This,IEnumClusCfgIPAddresses **ppEnumIPAddressesOut);", "IEnumClusCfgIPAddresses_Count_Proxy": "HRESULT WINAPI IEnumClusCfgIPAddresses_Count_Proxy(IEnumClusCfgIPAddresses *This,DWORD *pnCountOut);", "AsyncIEnumClusCfgIPAddresses_Begin_Next_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgIPAddresses_Begin_Next_Proxy(AsyncIEnumClusCfgIPAddresses *This,ULONG cNumberRequestedIn);", "AsyncIEnumClusCfgIPAddresses_Finish_Next_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgIPAddresses_Finish_Next_Proxy(AsyncIEnumClusCfgIPAddresses *This,IClusCfgIPAddressInfo **rgpIPAddressInfoOut,ULONG *pcNumberFetchedOut);", "AsyncIEnumClusCfgIPAddresses_Begin_Skip_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgIPAddresses_Begin_Skip_Proxy(AsyncIEnumClusCfgIPAddresses *This,ULONG cNumberToSkipIn);", "AsyncIEnumClusCfgIPAddresses_Finish_Skip_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgIPAddresses_Finish_Skip_Proxy(AsyncIEnumClusCfgIPAddresses *This);", "AsyncIEnumClusCfgIPAddresses_Begin_Reset_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgIPAddresses_Begin_Reset_Proxy(AsyncIEnumClusCfgIPAddresses *This);", "AsyncIEnumClusCfgIPAddresses_Finish_Reset_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgIPAddresses_Finish_Reset_Proxy(AsyncIEnumClusCfgIPAddresses *This);", "AsyncIEnumClusCfgIPAddresses_Begin_Clone_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgIPAddresses_Begin_Clone_Proxy(AsyncIEnumClusCfgIPAddresses *This);", "AsyncIEnumClusCfgIPAddresses_Finish_Clone_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgIPAddresses_Finish_Clone_Proxy(AsyncIEnumClusCfgIPAddresses *This,IEnumClusCfgIPAddresses **ppEnumIPAddressesOut);", "AsyncIEnumClusCfgIPAddresses_Begin_Count_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgIPAddresses_Begin_Count_Proxy(AsyncIEnumClusCfgIPAddresses *This);", "AsyncIEnumClusCfgIPAddresses_Finish_Count_Proxy": "HRESULT WINAPI AsyncIEnumClusCfgIPAddresses_Finish_Count_Proxy(AsyncIEnumClusCfgIPAddresses *This,DWORD *pnCountOut);", "IClusCfgIPAddressInfo_GetUID_Proxy": "HRESULT WINAPI IClusCfgIPAddressInfo_GetUID_Proxy(IClusCfgIPAddressInfo *This,BSTR *pbstrUIDOut);", "IClusCfgIPAddressInfo_GetIPAddress_Proxy": "HRESULT WINAPI IClusCfgIPAddressInfo_GetIPAddress_Proxy(IClusCfgIPAddressInfo *This,ULONG *pulDottedQuadOut);", "IClusCfgIPAddressInfo_SetIPAddress_Proxy": "HRESULT WINAPI IClusCfgIPAddressInfo_SetIPAddress_Proxy(IClusCfgIPAddressInfo *This,ULONG ulDottedQuadIn);", "IClusCfgIPAddressInfo_GetSubnetMask_Proxy": "HRESULT WINAPI IClusCfgIPAddressInfo_GetSubnetMask_Proxy(IClusCfgIPAddressInfo *This,ULONG *pulDottedQuadOut);", "IClusCfgIPAddressInfo_SetSubnetMask_Proxy": "HRESULT WINAPI IClusCfgIPAddressInfo_SetSubnetMask_Proxy(IClusCfgIPAddressInfo *This,ULONG ulDottedQuadIn);", "AsyncIClusCfgIPAddressInfo_Begin_GetUID_Proxy": "HRESULT WINAPI AsyncIClusCfgIPAddressInfo_Begin_GetUID_Proxy(AsyncIClusCfgIPAddressInfo *This);", "AsyncIClusCfgIPAddressInfo_Finish_GetUID_Proxy": "HRESULT WINAPI AsyncIClusCfgIPAddressInfo_Finish_GetUID_Proxy(AsyncIClusCfgIPAddressInfo *This,BSTR *pbstrUIDOut);", "AsyncIClusCfgIPAddressInfo_Begin_GetIPAddress_Proxy": "HRESULT WINAPI AsyncIClusCfgIPAddressInfo_Begin_GetIPAddress_Proxy(AsyncIClusCfgIPAddressInfo *This);", "AsyncIClusCfgIPAddressInfo_Finish_GetIPAddress_Proxy": "HRESULT WINAPI AsyncIClusCfgIPAddressInfo_Finish_GetIPAddress_Proxy(AsyncIClusCfgIPAddressInfo *This,ULONG *pulDottedQuadOut);", "AsyncIClusCfgIPAddressInfo_Begin_SetIPAddress_Proxy": "HRESULT WINAPI AsyncIClusCfgIPAddressInfo_Begin_SetIPAddress_Proxy(AsyncIClusCfgIPAddressInfo *This,ULONG ulDottedQuadIn);", "AsyncIClusCfgIPAddressInfo_Finish_SetIPAddress_Proxy": "HRESULT WINAPI AsyncIClusCfgIPAddressInfo_Finish_SetIPAddress_Proxy(AsyncIClusCfgIPAddressInfo *This);", "AsyncIClusCfgIPAddressInfo_Begin_GetSubnetMask_Proxy": "HRESULT WINAPI AsyncIClusCfgIPAddressInfo_Begin_GetSubnetMask_Proxy(AsyncIClusCfgIPAddressInfo *This);", "AsyncIClusCfgIPAddressInfo_Finish_GetSubnetMask_Proxy": "HRESULT WINAPI AsyncIClusCfgIPAddressInfo_Finish_GetSubnetMask_Proxy(AsyncIClusCfgIPAddressInfo *This,ULONG *pulDottedQuadOut);", "AsyncIClusCfgIPAddressInfo_Begin_SetSubnetMask_Proxy": "HRESULT WINAPI AsyncIClusCfgIPAddressInfo_Begin_SetSubnetMask_Proxy(AsyncIClusCfgIPAddressInfo *This,ULONG ulDottedQuadIn);", "AsyncIClusCfgIPAddressInfo_Finish_SetSubnetMask_Proxy": "HRESULT WINAPI AsyncIClusCfgIPAddressInfo_Finish_SetSubnetMask_Proxy(AsyncIClusCfgIPAddressInfo *This);", "IClusCfgNetworkInfo_GetUID_Proxy": "HRESULT WINAPI IClusCfgNetworkInfo_GetUID_Proxy(IClusCfgNetworkInfo *This,BSTR *pbstrUIDOut);", "IClusCfgNetworkInfo_GetName_Proxy": "HRESULT WINAPI IClusCfgNetworkInfo_GetName_Proxy(IClusCfgNetworkInfo *This,BSTR *pbstrNameOut);", "IClusCfgNetworkInfo_SetName_Proxy": "HRESULT WINAPI IClusCfgNetworkInfo_SetName_Proxy(IClusCfgNetworkInfo *This,LPCWSTR pcszNameIn);", "IClusCfgNetworkInfo_GetDescription_Proxy": "HRESULT WINAPI IClusCfgNetworkInfo_GetDescription_Proxy(IClusCfgNetworkInfo *This,BSTR *pbstrDescriptionOut);", "IClusCfgNetworkInfo_SetDescription_Proxy": "HRESULT WINAPI IClusCfgNetworkInfo_SetDescription_Proxy(IClusCfgNetworkInfo *This,LPCWSTR pcszDescriptionIn);", "IClusCfgNetworkInfo_GetPrimaryNetworkAddress_Proxy": "HRESULT WINAPI IClusCfgNetworkInfo_GetPrimaryNetworkAddress_Proxy(IClusCfgNetworkInfo *This,IClusCfgIPAddressInfo **ppIPAddressOut);", "IClusCfgNetworkInfo_SetPrimaryNetworkAddress_Proxy": "HRESULT WINAPI IClusCfgNetworkInfo_SetPrimaryNetworkAddress_Proxy(IClusCfgNetworkInfo *This,IClusCfgIPAddressInfo *pIPAddressIn);", "IClusCfgNetworkInfo_IsPublic_Proxy": "HRESULT WINAPI IClusCfgNetworkInfo_IsPublic_Proxy(IClusCfgNetworkInfo *This);", "IClusCfgNetworkInfo_SetPublic_Proxy": "HRESULT WINAPI IClusCfgNetworkInfo_SetPublic_Proxy(IClusCfgNetworkInfo *This,WINBOOL fIsPublicIn);", "IClusCfgNetworkInfo_IsPrivate_Proxy": "HRESULT WINAPI IClusCfgNetworkInfo_IsPrivate_Proxy(IClusCfgNetworkInfo *This);", "IClusCfgNetworkInfo_SetPrivate_Proxy": "HRESULT WINAPI IClusCfgNetworkInfo_SetPrivate_Proxy(IClusCfgNetworkInfo *This,WINBOOL fIsPrivateIn);", "AsyncIClusCfgNetworkInfo_Begin_GetUID_Proxy": "HRESULT WINAPI AsyncIClusCfgNetworkInfo_Begin_GetUID_Proxy(AsyncIClusCfgNetworkInfo *This);", "AsyncIClusCfgNetworkInfo_Finish_GetUID_Proxy": "HRESULT WINAPI AsyncIClusCfgNetworkInfo_Finish_GetUID_Proxy(AsyncIClusCfgNetworkInfo *This,BSTR *pbstrUIDOut);", "AsyncIClusCfgNetworkInfo_Begin_GetName_Proxy": "HRESULT WINAPI AsyncIClusCfgNetworkInfo_Begin_GetName_Proxy(AsyncIClusCfgNetworkInfo *This);", "AsyncIClusCfgNetworkInfo_Finish_GetName_Proxy": "HRESULT WINAPI AsyncIClusCfgNetworkInfo_Finish_GetName_Proxy(AsyncIClusCfgNetworkInfo *This,BSTR *pbstrNameOut);", "AsyncIClusCfgNetworkInfo_Begin_SetName_Proxy": "HRESULT WINAPI AsyncIClusCfgNetworkInfo_Begin_SetName_Proxy(AsyncIClusCfgNetworkInfo *This,LPCWSTR pcszNameIn);", "AsyncIClusCfgNetworkInfo_Finish_SetName_Proxy": "HRESULT WINAPI AsyncIClusCfgNetworkInfo_Finish_SetName_Proxy(AsyncIClusCfgNetworkInfo *This);", "AsyncIClusCfgNetworkInfo_Begin_GetDescription_Proxy": "HRESULT WINAPI AsyncIClusCfgNetworkInfo_Begin_GetDescription_Proxy(AsyncIClusCfgNetworkInfo *This);", "AsyncIClusCfgNetworkInfo_Finish_GetDescription_Proxy": "HRESULT WINAPI AsyncIClusCfgNetworkInfo_Finish_GetDescription_Proxy(AsyncIClusCfgNetworkInfo *This,BSTR *pbstrDescriptionOut);", "AsyncIClusCfgNetworkInfo_Begin_SetDescription_Proxy": "HRESULT WINAPI AsyncIClusCfgNetworkInfo_Begin_SetDescription_Proxy(AsyncIClusCfgNetworkInfo *This,LPCWSTR pcszDescriptionIn);", "AsyncIClusCfgNetworkInfo_Finish_SetDescription_Proxy": "HRESULT WINAPI AsyncIClusCfgNetworkInfo_Finish_SetDescription_Proxy(AsyncIClusCfgNetworkInfo *This);", "AsyncIClusCfgNetworkInfo_Begin_GetPrimaryNetworkAddress_Proxy": "HRESULT WINAPI AsyncIClusCfgNetworkInfo_Begin_GetPrimaryNetworkAddress_Proxy(AsyncIClusCfgNetworkInfo *This);", "AsyncIClusCfgNetworkInfo_Finish_GetPrimaryNetworkAddress_Proxy": "HRESULT WINAPI AsyncIClusCfgNetworkInfo_Finish_GetPrimaryNetworkAddress_Proxy(AsyncIClusCfgNetworkInfo *This,IClusCfgIPAddressInfo **ppIPAddressOut);", "AsyncIClusCfgNetworkInfo_Begin_SetPrimaryNetworkAddress_Proxy": "HRESULT WINAPI AsyncIClusCfgNetworkInfo_Begin_SetPrimaryNetworkAddress_Proxy(AsyncIClusCfgNetworkInfo *This,IClusCfgIPAddressInfo *pIPAddressIn);", "AsyncIClusCfgNetworkInfo_Finish_SetPrimaryNetworkAddress_Proxy": "HRESULT WINAPI AsyncIClusCfgNetworkInfo_Finish_SetPrimaryNetworkAddress_Proxy(AsyncIClusCfgNetworkInfo *This);", "AsyncIClusCfgNetworkInfo_Begin_IsPublic_Proxy": "HRESULT WINAPI AsyncIClusCfgNetworkInfo_Begin_IsPublic_Proxy(AsyncIClusCfgNetworkInfo *This);", "AsyncIClusCfgNetworkInfo_Finish_IsPublic_Proxy": "HRESULT WINAPI AsyncIClusCfgNetworkInfo_Finish_IsPublic_Proxy(AsyncIClusCfgNetworkInfo *This);", "AsyncIClusCfgNetworkInfo_Begin_SetPublic_Proxy": "HRESULT WINAPI AsyncIClusCfgNetworkInfo_Begin_SetPublic_Proxy(AsyncIClusCfgNetworkInfo *This,WINBOOL fIsPublicIn);", "AsyncIClusCfgNetworkInfo_Finish_SetPublic_Proxy": "HRESULT WINAPI AsyncIClusCfgNetworkInfo_Finish_SetPublic_Proxy(AsyncIClusCfgNetworkInfo *This);", "AsyncIClusCfgNetworkInfo_Begin_IsPrivate_Proxy": "HRESULT WINAPI AsyncIClusCfgNetworkInfo_Begin_IsPrivate_Proxy(AsyncIClusCfgNetworkInfo *This);", "AsyncIClusCfgNetworkInfo_Finish_IsPrivate_Proxy": "HRESULT WINAPI AsyncIClusCfgNetworkInfo_Finish_IsPrivate_Proxy(AsyncIClusCfgNetworkInfo *This);", "AsyncIClusCfgNetworkInfo_Begin_SetPrivate_Proxy": "HRESULT WINAPI AsyncIClusCfgNetworkInfo_Begin_SetPrivate_Proxy(AsyncIClusCfgNetworkInfo *This,WINBOOL fIsPrivateIn);", "AsyncIClusCfgNetworkInfo_Finish_SetPrivate_Proxy": "HRESULT WINAPI AsyncIClusCfgNetworkInfo_Finish_SetPrivate_Proxy(AsyncIClusCfgNetworkInfo *This);", "IClusCfgClusterInfo_SetCommitMode_Proxy": "HRESULT WINAPI IClusCfgClusterInfo_SetCommitMode_Proxy(IClusCfgClusterInfo *This,ECommitMode ecmNewModeIn);", "IClusCfgClusterInfo_GetCommitMode_Proxy": "HRESULT WINAPI IClusCfgClusterInfo_GetCommitMode_Proxy(IClusCfgClusterInfo *This,ECommitMode *pecmCurrentModeOut);", "IClusCfgClusterInfo_GetName_Proxy": "HRESULT WINAPI IClusCfgClusterInfo_GetName_Proxy(IClusCfgClusterInfo *This,BSTR *pbstrNameOut);", "IClusCfgClusterInfo_SetName_Proxy": "HRESULT WINAPI IClusCfgClusterInfo_SetName_Proxy(IClusCfgClusterInfo *This,LPCWSTR pcszNameIn);", "IClusCfgClusterInfo_GetIPAddress_Proxy": "HRESULT WINAPI IClusCfgClusterInfo_GetIPAddress_Proxy(IClusCfgClusterInfo *This,ULONG *pulDottedQuadOut);", "IClusCfgClusterInfo_SetIPAddress_Proxy": "HRESULT WINAPI IClusCfgClusterInfo_SetIPAddress_Proxy(IClusCfgClusterInfo *This,ULONG ulDottedQuadIn);", "IClusCfgClusterInfo_GetSubnetMask_Proxy": "HRESULT WINAPI IClusCfgClusterInfo_GetSubnetMask_Proxy(IClusCfgClusterInfo *This,ULONG *pulDottedQuadOut);", "IClusCfgClusterInfo_SetSubnetMask_Proxy": "HRESULT WINAPI IClusCfgClusterInfo_SetSubnetMask_Proxy(IClusCfgClusterInfo *This,ULONG ulDottedQuadIn);", "IClusCfgClusterInfo_GetNetworkInfo_Proxy": "HRESULT WINAPI IClusCfgClusterInfo_GetNetworkInfo_Proxy(IClusCfgClusterInfo *This,IClusCfgNetworkInfo **ppiccniOut);", "IClusCfgClusterInfo_SetNetworkInfo_Proxy": "HRESULT WINAPI IClusCfgClusterInfo_SetNetworkInfo_Proxy(IClusCfgClusterInfo *This,IClusCfgNetworkInfo *piccniIn);", "IClusCfgClusterInfo_GetClusterServiceAccountCredentials_Proxy": "HRESULT WINAPI IClusCfgClusterInfo_GetClusterServiceAccountCredentials_Proxy(IClusCfgClusterInfo *This,IClusCfgCredentials **ppicccCredentialsOut);", "IClusCfgClusterInfo_GetBindingString_Proxy": "HRESULT WINAPI IClusCfgClusterInfo_GetBindingString_Proxy(IClusCfgClusterInfo *This,BSTR *pbstrBindingStringOut);", "IClusCfgClusterInfo_SetBindingString_Proxy": "HRESULT WINAPI IClusCfgClusterInfo_SetBindingString_Proxy(IClusCfgClusterInfo *This,LPCWSTR pcszBindingStringIn);", "IClusCfgClusterInfo_GetMaxNodeCount_Proxy": "HRESULT WINAPI IClusCfgClusterInfo_GetMaxNodeCount_Proxy(IClusCfgClusterInfo *This,DWORD *pcMaxNodesOut);", "AsyncIClusCfgClusterInfo_Begin_SetCommitMode_Proxy": "HRESULT WINAPI AsyncIClusCfgClusterInfo_Begin_SetCommitMode_Proxy(AsyncIClusCfgClusterInfo *This,ECommitMode ecmNewModeIn);", "AsyncIClusCfgClusterInfo_Finish_SetCommitMode_Proxy": "HRESULT WINAPI AsyncIClusCfgClusterInfo_Finish_SetCommitMode_Proxy(AsyncIClusCfgClusterInfo *This);", "AsyncIClusCfgClusterInfo_Begin_GetCommitMode_Proxy": "HRESULT WINAPI AsyncIClusCfgClusterInfo_Begin_GetCommitMode_Proxy(AsyncIClusCfgClusterInfo *This);", "AsyncIClusCfgClusterInfo_Finish_GetCommitMode_Proxy": "HRESULT WINAPI AsyncIClusCfgClusterInfo_Finish_GetCommitMode_Proxy(AsyncIClusCfgClusterInfo *This,ECommitMode *pecmCurrentModeOut);", "AsyncIClusCfgClusterInfo_Begin_GetName_Proxy": "HRESULT WINAPI AsyncIClusCfgClusterInfo_Begin_GetName_Proxy(AsyncIClusCfgClusterInfo *This);", "AsyncIClusCfgClusterInfo_Finish_GetName_Proxy": "HRESULT WINAPI AsyncIClusCfgClusterInfo_Finish_GetName_Proxy(AsyncIClusCfgClusterInfo *This,BSTR *pbstrNameOut);", "AsyncIClusCfgClusterInfo_Begin_SetName_Proxy": "HRESULT WINAPI AsyncIClusCfgClusterInfo_Begin_SetName_Proxy(AsyncIClusCfgClusterInfo *This,LPCWSTR pcszNameIn);", "AsyncIClusCfgClusterInfo_Finish_SetName_Proxy": "HRESULT WINAPI AsyncIClusCfgClusterInfo_Finish_SetName_Proxy(AsyncIClusCfgClusterInfo *This);", "AsyncIClusCfgClusterInfo_Begin_GetIPAddress_Proxy": "HRESULT WINAPI AsyncIClusCfgClusterInfo_Begin_GetIPAddress_Proxy(AsyncIClusCfgClusterInfo *This);", "AsyncIClusCfgClusterInfo_Finish_GetIPAddress_Proxy": "HRESULT WINAPI AsyncIClusCfgClusterInfo_Finish_GetIPAddress_Proxy(AsyncIClusCfgClusterInfo *This,ULONG *pulDottedQuadOut);", "AsyncIClusCfgClusterInfo_Begin_SetIPAddress_Proxy": "HRESULT WINAPI AsyncIClusCfgClusterInfo_Begin_SetIPAddress_Proxy(AsyncIClusCfgClusterInfo *This,ULONG ulDottedQuadIn);", "AsyncIClusCfgClusterInfo_Finish_SetIPAddress_Proxy": "HRESULT WINAPI AsyncIClusCfgClusterInfo_Finish_SetIPAddress_Proxy(AsyncIClusCfgClusterInfo *This);", "AsyncIClusCfgClusterInfo_Begin_GetSubnetMask_Proxy": "HRESULT WINAPI AsyncIClusCfgClusterInfo_Begin_GetSubnetMask_Proxy(AsyncIClusCfgClusterInfo *This);", "AsyncIClusCfgClusterInfo_Finish_GetSubnetMask_Proxy": "HRESULT WINAPI AsyncIClusCfgClusterInfo_Finish_GetSubnetMask_Proxy(AsyncIClusCfgClusterInfo *This,ULONG *pulDottedQuadOut);", "AsyncIClusCfgClusterInfo_Begin_SetSubnetMask_Proxy": "HRESULT WINAPI AsyncIClusCfgClusterInfo_Begin_SetSubnetMask_Proxy(AsyncIClusCfgClusterInfo *This,ULONG ulDottedQuadIn);", "AsyncIClusCfgClusterInfo_Finish_SetSubnetMask_Proxy": "HRESULT WINAPI AsyncIClusCfgClusterInfo_Finish_SetSubnetMask_Proxy(AsyncIClusCfgClusterInfo *This);", "AsyncIClusCfgClusterInfo_Begin_GetNetworkInfo_Proxy": "HRESULT WINAPI AsyncIClusCfgClusterInfo_Begin_GetNetworkInfo_Proxy(AsyncIClusCfgClusterInfo *This);", "AsyncIClusCfgClusterInfo_Finish_GetNetworkInfo_Proxy": "HRESULT WINAPI AsyncIClusCfgClusterInfo_Finish_GetNetworkInfo_Proxy(AsyncIClusCfgClusterInfo *This,IClusCfgNetworkInfo **ppiccniOut);", "AsyncIClusCfgClusterInfo_Begin_SetNetworkInfo_Proxy": "HRESULT WINAPI AsyncIClusCfgClusterInfo_Begin_SetNetworkInfo_Proxy(AsyncIClusCfgClusterInfo *This,IClusCfgNetworkInfo *piccniIn);", "AsyncIClusCfgClusterInfo_Finish_SetNetworkInfo_Proxy": "HRESULT WINAPI AsyncIClusCfgClusterInfo_Finish_SetNetworkInfo_Proxy(AsyncIClusCfgClusterInfo *This);", "AsyncIClusCfgClusterInfo_Begin_GetClusterServiceAccountCredentials_Proxy": "HRESULT WINAPI AsyncIClusCfgClusterInfo_Begin_GetClusterServiceAccountCredentials_Proxy(AsyncIClusCfgClusterInfo *This);", "AsyncIClusCfgClusterInfo_Finish_GetClusterServiceAccountCredentials_Proxy": "HRESULT WINAPI AsyncIClusCfgClusterInfo_Finish_GetClusterServiceAccountCredentials_Proxy(AsyncIClusCfgClusterInfo *This,IClusCfgCredentials **ppicccCredentialsOut);", "AsyncIClusCfgClusterInfo_Begin_GetBindingString_Proxy": "HRESULT WINAPI AsyncIClusCfgClusterInfo_Begin_GetBindingString_Proxy(AsyncIClusCfgClusterInfo *This);", "AsyncIClusCfgClusterInfo_Finish_GetBindingString_Proxy": "HRESULT WINAPI AsyncIClusCfgClusterInfo_Finish_GetBindingString_Proxy(AsyncIClusCfgClusterInfo *This,BSTR *pbstrBindingStringOut);", "AsyncIClusCfgClusterInfo_Begin_SetBindingString_Proxy": "HRESULT WINAPI AsyncIClusCfgClusterInfo_Begin_SetBindingString_Proxy(AsyncIClusCfgClusterInfo *This,LPCWSTR pcszBindingStringIn);", "AsyncIClusCfgClusterInfo_Finish_SetBindingString_Proxy": "HRESULT WINAPI AsyncIClusCfgClusterInfo_Finish_SetBindingString_Proxy(AsyncIClusCfgClusterInfo *This);", "AsyncIClusCfgClusterInfo_Begin_GetMaxNodeCount_Proxy": "HRESULT WINAPI AsyncIClusCfgClusterInfo_Begin_GetMaxNodeCount_Proxy(AsyncIClusCfgClusterInfo *This);", "AsyncIClusCfgClusterInfo_Finish_GetMaxNodeCount_Proxy": "HRESULT WINAPI AsyncIClusCfgClusterInfo_Finish_GetMaxNodeCount_Proxy(AsyncIClusCfgClusterInfo *This,DWORD *pcMaxNodesOut);", "IClusCfgInitialize_Initialize_Proxy": "HRESULT WINAPI IClusCfgInitialize_Initialize_Proxy(IClusCfgInitialize *This,IUnknown *punkCallbackIn,LCID lcidIn);", "AsyncIClusCfgInitialize_Begin_Initialize_Proxy": "HRESULT WINAPI AsyncIClusCfgInitialize_Begin_Initialize_Proxy(AsyncIClusCfgInitialize *This,IUnknown *punkCallbackIn,LCID lcidIn);", "AsyncIClusCfgInitialize_Finish_Initialize_Proxy": "HRESULT WINAPI AsyncIClusCfgInitialize_Finish_Initialize_Proxy(AsyncIClusCfgInitialize *This);", "IClusCfgCallback_SendStatusReport_Proxy": "HRESULT WINAPI IClusCfgCallback_SendStatusReport_Proxy(IClusCfgCallback *This,LPCWSTR pcszNodeNameIn,CLSID clsidTaskMajorIn,CLSID clsidTaskMinorIn,ULONG ulMinIn,ULONG ulMaxIn,ULONG ulCurrentIn,HRESULT hrStatusIn,LPCWSTR pcszDescriptionIn,FILETIME *pftTimeIn,LPCWSTR pcszReferenceIn);", "AsyncIClusCfgCallback_Begin_SendStatusReport_Proxy": "HRESULT WINAPI AsyncIClusCfgCallback_Begin_SendStatusReport_Proxy(AsyncIClusCfgCallback *This,LPCWSTR pcszNodeNameIn,CLSID clsidTaskMajorIn,CLSID clsidTaskMinorIn,ULONG ulMinIn,ULONG ulMaxIn,ULONG ulCurrentIn,HRESULT hrStatusIn,LPCWSTR pcszDescriptionIn,FILETIME *pftTimeIn,LPCWSTR pcszReferenceIn);", "AsyncIClusCfgCallback_Finish_SendStatusReport_Proxy": "HRESULT WINAPI AsyncIClusCfgCallback_Finish_SendStatusReport_Proxy(AsyncIClusCfgCallback *This);", "IClusCfgCredentials_SetCredentials_Proxy": "HRESULT WINAPI IClusCfgCredentials_SetCredentials_Proxy(IClusCfgCredentials *This,LPCWSTR pcszUserIn,LPCWSTR pcszDomainIn,LPCWSTR pcszPasswordIn);", "IClusCfgCredentials_GetCredentials_Proxy": "HRESULT WINAPI IClusCfgCredentials_GetCredentials_Proxy(IClusCfgCredentials *This,BSTR *pbstrUserOut,BSTR *pbstrDomainOut,BSTR *pbstrPasswordOut);", "IClusCfgCredentials_GetIdentity_Proxy": "HRESULT WINAPI IClusCfgCredentials_GetIdentity_Proxy(IClusCfgCredentials *This,BSTR *pbstrUserOut,BSTR *pbstrDomainOut);", "IClusCfgCredentials_GetPassword_Proxy": "HRESULT WINAPI IClusCfgCredentials_GetPassword_Proxy(IClusCfgCredentials *This,BSTR *pbstrPasswordOut);", "IClusCfgCredentials_AssignTo_Proxy": "HRESULT WINAPI IClusCfgCredentials_AssignTo_Proxy(IClusCfgCredentials *This,IClusCfgCredentials *picccDestIn);", "IClusCfgCredentials_AssignFrom_Proxy": "HRESULT WINAPI IClusCfgCredentials_AssignFrom_Proxy(IClusCfgCredentials *This,IClusCfgCredentials *picccSourceIn);", "AsyncIClusCfgCredentials_Begin_SetCredentials_Proxy": "HRESULT WINAPI AsyncIClusCfgCredentials_Begin_SetCredentials_Proxy(AsyncIClusCfgCredentials *This,LPCWSTR pcszUserIn,LPCWSTR pcszDomainIn,LPCWSTR pcszPasswordIn);", "AsyncIClusCfgCredentials_Finish_SetCredentials_Proxy": "HRESULT WINAPI AsyncIClusCfgCredentials_Finish_SetCredentials_Proxy(AsyncIClusCfgCredentials *This);", "AsyncIClusCfgCredentials_Begin_GetCredentials_Proxy": "HRESULT WINAPI AsyncIClusCfgCredentials_Begin_GetCredentials_Proxy(AsyncIClusCfgCredentials *This);", "AsyncIClusCfgCredentials_Finish_GetCredentials_Proxy": "HRESULT WINAPI AsyncIClusCfgCredentials_Finish_GetCredentials_Proxy(AsyncIClusCfgCredentials *This,BSTR *pbstrUserOut,BSTR *pbstrDomainOut,BSTR *pbstrPasswordOut);", "AsyncIClusCfgCredentials_Begin_GetIdentity_Proxy": "HRESULT WINAPI AsyncIClusCfgCredentials_Begin_GetIdentity_Proxy(AsyncIClusCfgCredentials *This);", "AsyncIClusCfgCredentials_Finish_GetIdentity_Proxy": "HRESULT WINAPI AsyncIClusCfgCredentials_Finish_GetIdentity_Proxy(AsyncIClusCfgCredentials *This,BSTR *pbstrUserOut,BSTR *pbstrDomainOut);", "AsyncIClusCfgCredentials_Begin_GetPassword_Proxy": "HRESULT WINAPI AsyncIClusCfgCredentials_Begin_GetPassword_Proxy(AsyncIClusCfgCredentials *This);", "AsyncIClusCfgCredentials_Finish_GetPassword_Proxy": "HRESULT WINAPI AsyncIClusCfgCredentials_Finish_GetPassword_Proxy(AsyncIClusCfgCredentials *This,BSTR *pbstrPasswordOut);", "AsyncIClusCfgCredentials_Begin_AssignTo_Proxy": "HRESULT WINAPI AsyncIClusCfgCredentials_Begin_AssignTo_Proxy(AsyncIClusCfgCredentials *This,IClusCfgCredentials *picccDestIn);", "AsyncIClusCfgCredentials_Finish_AssignTo_Proxy": "HRESULT WINAPI AsyncIClusCfgCredentials_Finish_AssignTo_Proxy(AsyncIClusCfgCredentials *This);", "AsyncIClusCfgCredentials_Begin_AssignFrom_Proxy": "HRESULT WINAPI AsyncIClusCfgCredentials_Begin_AssignFrom_Proxy(AsyncIClusCfgCredentials *This,IClusCfgCredentials *picccSourceIn);", "AsyncIClusCfgCredentials_Finish_AssignFrom_Proxy": "HRESULT WINAPI AsyncIClusCfgCredentials_Finish_AssignFrom_Proxy(AsyncIClusCfgCredentials *This);", "IClusCfgCapabilities_CanNodeBeClustered_Proxy": "HRESULT WINAPI IClusCfgCapabilities_CanNodeBeClustered_Proxy(IClusCfgCapabilities *This);", "IClusCfgManagedResourceCfg_PreCreate_Proxy": "HRESULT WINAPI IClusCfgManagedResourceCfg_PreCreate_Proxy(IClusCfgManagedResourceCfg *This,IUnknown *punkServicesIn);", "IClusCfgManagedResourceCfg_Create_Proxy": "HRESULT WINAPI IClusCfgManagedResourceCfg_Create_Proxy(IClusCfgManagedResourceCfg *This,IUnknown *punkServicesIn);", "IClusCfgManagedResourceCfg_PostCreate_Proxy": "HRESULT WINAPI IClusCfgManagedResourceCfg_PostCreate_Proxy(IClusCfgManagedResourceCfg *This,IUnknown *punkServicesIn);", "IClusCfgManagedResourceCfg_Evict_Proxy": "HRESULT WINAPI IClusCfgManagedResourceCfg_Evict_Proxy(IClusCfgManagedResourceCfg *This,IUnknown *punkServicesIn);", "IClusCfgResourcePreCreate_SetDependency_Proxy": "HRESULT WINAPI IClusCfgResourcePreCreate_SetDependency_Proxy(IClusCfgResourcePreCreate *This,LPCLSID pclsidDepResTypeIn,DWORD dfIn);", "IClusCfgResourcePreCreate_SetType_Proxy": "HRESULT WINAPI IClusCfgResourcePreCreate_SetType_Proxy(IClusCfgResourcePreCreate *This,CLSID *pclsidIn);", "IClusCfgResourcePreCreate_SetClassType_Proxy": "HRESULT WINAPI IClusCfgResourcePreCreate_SetClassType_Proxy(IClusCfgResourcePreCreate *This,CLSID *pclsidIn);", "IClusCfgResourceCreate_SetPropertyBinary_Proxy": "HRESULT WINAPI IClusCfgResourceCreate_SetPropertyBinary_Proxy(IClusCfgResourceCreate *This,LPCWSTR pcszNameIn,const DWORD cbSizeIn,const BYTE *pbyteIn);", "IClusCfgResourceCreate_SetPropertyDWORD_Proxy": "HRESULT WINAPI IClusCfgResourceCreate_SetPropertyDWORD_Proxy(IClusCfgResourceCreate *This,LPCWSTR pcszNameIn,const DWORD dwDWORDIn);", "IClusCfgResourceCreate_SetPropertyString_Proxy": "HRESULT WINAPI IClusCfgResourceCreate_SetPropertyString_Proxy(IClusCfgResourceCreate *This,LPCWSTR pcszNameIn,LPCWSTR pcszStringIn);", "IClusCfgResourceCreate_SetPropertyExpandString_Proxy": "HRESULT WINAPI IClusCfgResourceCreate_SetPropertyExpandString_Proxy(IClusCfgResourceCreate *This,LPCWSTR pcszNameIn,LPCWSTR pcszStringIn);", "IClusCfgResourceCreate_SetPropertyMultiString_Proxy": "HRESULT WINAPI IClusCfgResourceCreate_SetPropertyMultiString_Proxy(IClusCfgResourceCreate *This,LPCWSTR pcszNameIn,const DWORD cbMultiStringIn,LPCWSTR pcszMultiStringIn);", "IClusCfgResourceCreate_SetPropertyUnsignedLargeInt_Proxy": "HRESULT WINAPI IClusCfgResourceCreate_SetPropertyUnsignedLargeInt_Proxy(IClusCfgResourceCreate *This,LPCWSTR pcszNameIn,const ULARGE_INTEGER ulIntIn);", "IClusCfgResourceCreate_SetPropertyLong_Proxy": "HRESULT WINAPI IClusCfgResourceCreate_SetPropertyLong_Proxy(IClusCfgResourceCreate *This,LPCWSTR pcszNameIn,const LONG lLongIn);", "IClusCfgResourceCreate_SetPropertySecurityDescriptor_Proxy": "HRESULT WINAPI IClusCfgResourceCreate_SetPropertySecurityDescriptor_Proxy(IClusCfgResourceCreate *This,LPCWSTR pcszNameIn,const SECURITY_DESCRIPTOR *pcsdIn);", "IClusCfgResourceCreate_SetPropertyLargeInt_Proxy": "HRESULT WINAPI IClusCfgResourceCreate_SetPropertyLargeInt_Proxy(IClusCfgResourceCreate *This,LPCWSTR pcszNameIn,const LARGE_INTEGER lIntIn);", "IClusCfgResourceCreate_SendResourceControl_Proxy": "HRESULT WINAPI IClusCfgResourceCreate_SendResourceControl_Proxy(IClusCfgResourceCreate *This,DWORD dwControlCodeIn,LPVOID lpBufferIn,DWORD cbBufferSizeIn);", "IClusCfgResourcePostCreate_ChangeName_Proxy": "HRESULT WINAPI IClusCfgResourcePostCreate_ChangeName_Proxy(IClusCfgResourcePostCreate *This,LPCWSTR pcszNameIn);", "IClusCfgResourcePostCreate_SendResourceControl_Proxy": "HRESULT WINAPI IClusCfgResourcePostCreate_SendResourceControl_Proxy(IClusCfgResourcePostCreate *This,DWORD dwControlCodeIn,LPVOID lpBufferIn,DWORD cbBufferSizeIn,LPVOID lBufferInout,DWORD cbOutBufferSizeIn,LPDWORD lpcbBytesReturnedOut);", "IClusCfgGroupCfg_SetName_Proxy": "HRESULT WINAPI IClusCfgGroupCfg_SetName_Proxy(IClusCfgGroupCfg *This,LPCWSTR pcszNameIn);", "IClusCfgGroupCfg_GetName_Proxy": "HRESULT WINAPI IClusCfgGroupCfg_GetName_Proxy(IClusCfgGroupCfg *This,BSTR *pbstrNameOut);", "IClusCfgMemberSetChangeListener_Notify_Proxy": "HRESULT WINAPI IClusCfgMemberSetChangeListener_Notify_Proxy(IClusCfgMemberSetChangeListener *This,IUnknown *punkClusterInfoIn);", "AsyncIClusCfgMemberSetChangeListener_Begin_Notify_Proxy": "HRESULT WINAPI AsyncIClusCfgMemberSetChangeListener_Begin_Notify_Proxy(AsyncIClusCfgMemberSetChangeListener *This,IUnknown *punkClusterInfoIn);", "AsyncIClusCfgMemberSetChangeListener_Finish_Notify_Proxy": "HRESULT WINAPI AsyncIClusCfgMemberSetChangeListener_Finish_Notify_Proxy(AsyncIClusCfgMemberSetChangeListener *This);", "IClusCfgResourceTypeInfo_CommitChanges_Proxy": "HRESULT WINAPI IClusCfgResourceTypeInfo_CommitChanges_Proxy(IClusCfgResourceTypeInfo *This,IUnknown *punkClusterInfoIn,IUnknown *punkResTypeServicesIn);", "IClusCfgResourceTypeInfo_GetTypeName_Proxy": "HRESULT WINAPI IClusCfgResourceTypeInfo_GetTypeName_Proxy(IClusCfgResourceTypeInfo *This,BSTR *pbstrTypeNameOut);", "IClusCfgResourceTypeInfo_GetTypeGUID_Proxy": "HRESULT WINAPI IClusCfgResourceTypeInfo_GetTypeGUID_Proxy(IClusCfgResourceTypeInfo *This,GUID *pguidGUIDOut);", "AsyncIClusCfgResourceTypeInfo_Begin_CommitChanges_Proxy": "HRESULT WINAPI AsyncIClusCfgResourceTypeInfo_Begin_CommitChanges_Proxy(AsyncIClusCfgResourceTypeInfo *This,IUnknown *punkClusterInfoIn,IUnknown *punkResTypeServicesIn);", "AsyncIClusCfgResourceTypeInfo_Finish_CommitChanges_Proxy": "HRESULT WINAPI AsyncIClusCfgResourceTypeInfo_Finish_CommitChanges_Proxy(AsyncIClusCfgResourceTypeInfo *This);", "AsyncIClusCfgResourceTypeInfo_Begin_GetTypeName_Proxy": "HRESULT WINAPI AsyncIClusCfgResourceTypeInfo_Begin_GetTypeName_Proxy(AsyncIClusCfgResourceTypeInfo *This);", "AsyncIClusCfgResourceTypeInfo_Finish_GetTypeName_Proxy": "HRESULT WINAPI AsyncIClusCfgResourceTypeInfo_Finish_GetTypeName_Proxy(AsyncIClusCfgResourceTypeInfo *This,BSTR *pbstrTypeNameOut);", "AsyncIClusCfgResourceTypeInfo_Begin_GetTypeGUID_Proxy": "HRESULT WINAPI AsyncIClusCfgResourceTypeInfo_Begin_GetTypeGUID_Proxy(AsyncIClusCfgResourceTypeInfo *This);", "AsyncIClusCfgResourceTypeInfo_Finish_GetTypeGUID_Proxy": "HRESULT WINAPI AsyncIClusCfgResourceTypeInfo_Finish_GetTypeGUID_Proxy(AsyncIClusCfgResourceTypeInfo *This,GUID *pguidGUIDOut);", "IClusCfgResourceTypeCreate_Create_Proxy": "HRESULT WINAPI IClusCfgResourceTypeCreate_Create_Proxy(IClusCfgResourceTypeCreate *This,const WCHAR *pcszResTypeNameIn,const WCHAR *pcszResTypeDisplayNameIn,const WCHAR *pcszResDllNameIn,DWORD dwLooksAliveIntervalIn,DWORD dwIsAliveIntervalIn);", "IClusCfgResourceTypeCreate_RegisterAdminExtensions_Proxy": "HRESULT WINAPI IClusCfgResourceTypeCreate_RegisterAdminExtensions_Proxy(IClusCfgResourceTypeCreate *This,const WCHAR *pcszResTypeNameIn,ULONG cExtClsidCountIn,const CLSID *rgclsidExtClsidsIn);", "AsyncIClusCfgResourceTypeCreate_Begin_Create_Proxy": "HRESULT WINAPI AsyncIClusCfgResourceTypeCreate_Begin_Create_Proxy(AsyncIClusCfgResourceTypeCreate *This,const WCHAR *pcszResTypeNameIn,const WCHAR *pcszResTypeDisplayNameIn,const WCHAR *pcszResDllNameIn,DWORD dwLooksAliveIntervalIn,DWORD dwIsAliveIntervalIn);", "AsyncIClusCfgResourceTypeCreate_Finish_Create_Proxy": "HRESULT WINAPI AsyncIClusCfgResourceTypeCreate_Finish_Create_Proxy(AsyncIClusCfgResourceTypeCreate *This);", "AsyncIClusCfgResourceTypeCreate_Begin_RegisterAdminExtensions_Proxy": "HRESULT WINAPI AsyncIClusCfgResourceTypeCreate_Begin_RegisterAdminExtensions_Proxy(AsyncIClusCfgResourceTypeCreate *This,const WCHAR *pcszResTypeNameIn,ULONG cExtClsidCountIn,const CLSID *rgclsidExtClsidsIn);", "AsyncIClusCfgResourceTypeCreate_Finish_RegisterAdminExtensions_Proxy": "HRESULT WINAPI AsyncIClusCfgResourceTypeCreate_Finish_RegisterAdminExtensions_Proxy(AsyncIClusCfgResourceTypeCreate *This);", "IClusCfgEvictCleanup_CleanupLocalNode_Proxy": "HRESULT WINAPI IClusCfgEvictCleanup_CleanupLocalNode_Proxy(IClusCfgEvictCleanup *This,DWORD dwDelayIn);", "IClusCfgEvictCleanup_CleanupRemoteNode_Proxy": "HRESULT WINAPI IClusCfgEvictCleanup_CleanupRemoteNode_Proxy(IClusCfgEvictCleanup *This,const WCHAR *pcszEvictedNodeNameIn,DWORD dwDelayIn);", "AsyncIClusCfgEvictCleanup_Begin_CleanupLocalNode_Proxy": "HRESULT WINAPI AsyncIClusCfgEvictCleanup_Begin_CleanupLocalNode_Proxy(AsyncIClusCfgEvictCleanup *This,DWORD dwDelayIn);", "AsyncIClusCfgEvictCleanup_Finish_CleanupLocalNode_Proxy": "HRESULT WINAPI AsyncIClusCfgEvictCleanup_Finish_CleanupLocalNode_Proxy(AsyncIClusCfgEvictCleanup *This);", "AsyncIClusCfgEvictCleanup_Begin_CleanupRemoteNode_Proxy": "HRESULT WINAPI AsyncIClusCfgEvictCleanup_Begin_CleanupRemoteNode_Proxy(AsyncIClusCfgEvictCleanup *This,const WCHAR *pcszEvictedNodeNameIn,DWORD dwDelayIn);", "AsyncIClusCfgEvictCleanup_Finish_CleanupRemoteNode_Proxy": "HRESULT WINAPI AsyncIClusCfgEvictCleanup_Finish_CleanupRemoteNode_Proxy(AsyncIClusCfgEvictCleanup *This);", "IClusCfgStartupListener_Notify_Proxy": "HRESULT WINAPI IClusCfgStartupListener_Notify_Proxy(IClusCfgStartupListener *This,IUnknown *punkIn);", "AsyncIClusCfgStartupListener_Begin_Notify_Proxy": "HRESULT WINAPI AsyncIClusCfgStartupListener_Begin_Notify_Proxy(AsyncIClusCfgStartupListener *This,IUnknown *punkIn);", "AsyncIClusCfgStartupListener_Finish_Notify_Proxy": "HRESULT WINAPI AsyncIClusCfgStartupListener_Finish_Notify_Proxy(AsyncIClusCfgStartupListener *This);", "IClusCfgStartupNotify_SendNotifications_Proxy": "HRESULT WINAPI IClusCfgStartupNotify_SendNotifications_Proxy(IClusCfgStartupNotify *This);", "AsyncIClusCfgStartupNotify_Begin_SendNotifications_Proxy": "HRESULT WINAPI AsyncIClusCfgStartupNotify_Begin_SendNotifications_Proxy(AsyncIClusCfgStartupNotify *This);", "AsyncIClusCfgStartupNotify_Finish_SendNotifications_Proxy": "HRESULT WINAPI AsyncIClusCfgStartupNotify_Finish_SendNotifications_Proxy(AsyncIClusCfgStartupNotify *This);", "IClusCfgManagedResourceData_GetResourcePrivateData_Proxy": "HRESULT WINAPI IClusCfgManagedResourceData_GetResourcePrivateData_Proxy(IClusCfgManagedResourceData *This,BYTE *pbBufferOut,DWORD *pcbBufferInout);", "IClusCfgManagedResourceData_SetResourcePrivateData_Proxy": "HRESULT WINAPI IClusCfgManagedResourceData_SetResourcePrivateData_Proxy(IClusCfgManagedResourceData *This,const BYTE *pcbBufferIn,DWORD cbBufferIn);", "IClusCfgVerifyQuorum_PrepareToHostQuorumResource_Proxy": "HRESULT WINAPI IClusCfgVerifyQuorum_PrepareToHostQuorumResource_Proxy(IClusCfgVerifyQuorum *This);", "IClusCfgVerifyQuorum_Cleanup_Proxy": "HRESULT WINAPI IClusCfgVerifyQuorum_Cleanup_Proxy(IClusCfgVerifyQuorum *This,EClusCfgCleanupReason cccrReasonIn);", "IClusCfgVerifyQuorum_IsMultiNodeCapable_Proxy": "HRESULT WINAPI IClusCfgVerifyQuorum_IsMultiNodeCapable_Proxy(IClusCfgVerifyQuorum *This);", "IClusCfgVerifyQuorum_SetMultiNodeCapable_Proxy": "HRESULT WINAPI IClusCfgVerifyQuorum_SetMultiNodeCapable_Proxy(IClusCfgVerifyQuorum *This,WINBOOL fMultiNodeCapableIn);", "IClusCfgEvictListener_EvictNotify_Proxy": "HRESULT WINAPI IClusCfgEvictListener_EvictNotify_Proxy(IClusCfgEvictListener *This,LPCWSTR pcszNodeNameIn);", "AsyncIClusCfgEvictListener_Begin_EvictNotify_Proxy": "HRESULT WINAPI AsyncIClusCfgEvictListener_Begin_EvictNotify_Proxy(AsyncIClusCfgEvictListener *This,LPCWSTR pcszNodeNameIn);", "AsyncIClusCfgEvictListener_Finish_EvictNotify_Proxy": "HRESULT WINAPI AsyncIClusCfgEvictListener_Finish_EvictNotify_Proxy(AsyncIClusCfgEvictListener *This);", "IClusCfgEvictNotify_SendNotifications_Proxy": "HRESULT WINAPI IClusCfgEvictNotify_SendNotifications_Proxy(IClusCfgEvictNotify *This,LPCWSTR pcszNodeNameIn);", "AsyncIClusCfgEvictNotify_Begin_SendNotifications_Proxy": "HRESULT WINAPI AsyncIClusCfgEvictNotify_Begin_SendNotifications_Proxy(AsyncIClusCfgEvictNotify *This,LPCWSTR pcszNodeNameIn);", "AsyncIClusCfgEvictNotify_Finish_SendNotifications_Proxy": "HRESULT WINAPI AsyncIClusCfgEvictNotify_Finish_SendNotifications_Proxy(AsyncIClusCfgEvictNotify *This);", "IDataSource_get_SourceClass_Proxy": "HRESULT WINAPI IDataSource_get_SourceClass_Proxy(IDataSource *This,BSTR *varSourceClass);", "IDataSource_get_Source_Proxy": "HRESULT WINAPI IDataSource_get_Source_Proxy(IDataSource *This,IUnknown **varSource);", "IDataSource_get_IsDirty_Proxy": "HRESULT WINAPI IDataSource_get_IsDirty_Proxy(IDataSource *This,VARIANT_BOOL *pIsDirty);", "IDataSource_put_IsDirty_Proxy": "HRESULT WINAPI IDataSource_put_IsDirty_Proxy(IDataSource *This,VARIANT_BOOL varIsDirty);", "IDataSource_get_SourceURL_Proxy": "HRESULT WINAPI IDataSource_get_SourceURL_Proxy(IDataSource *This,BSTR *varSourceURL);", "IDataSource_get_ActiveConnection_Proxy": "HRESULT WINAPI IDataSource_get_ActiveConnection_Proxy(IDataSource *This,_Connection **varActiveConnection);", "IDataSource_SaveToObject_Proxy": "HRESULT WINAPI IDataSource_SaveToObject_Proxy(IDataSource *This,IUnknown *Source,BSTR InterfaceName);", "IDataSource_OpenObject_Proxy": "HRESULT WINAPI IDataSource_OpenObject_Proxy(IDataSource *This,IUnknown *Source,BSTR InterfaceName);", "IDataSource_SaveTo_Proxy": "HRESULT WINAPI IDataSource_SaveTo_Proxy(IDataSource *This,BSTR SourceURL,IDispatch *ActiveConnection,ConnectModeEnum Mode,RecordCreateOptionsEnum CreateOptions,RecordOpenOptionsEnum Options,BSTR UserName,BSTR Password);", "IDataSource_Open_Proxy": "HRESULT WINAPI IDataSource_Open_Proxy(IDataSource *This,BSTR SourceURL,IDispatch *ActiveConnection,ConnectModeEnum Mode,RecordCreateOptionsEnum CreateOptions,RecordOpenOptionsEnum Options,BSTR UserName,BSTR Password);", "IDataSource_Save_Proxy": "HRESULT WINAPI IDataSource_Save_Proxy(IDataSource *This);", "IDataSource_SaveToContainer_Proxy": "HRESULT WINAPI IDataSource_SaveToContainer_Proxy(IDataSource *This,BSTR ContainerURL,IDispatch *ActiveConnection,ConnectModeEnum Mode,RecordCreateOptionsEnum CreateOptions,RecordOpenOptionsEnum Options,BSTR UserName,BSTR Password);", "IMessage_get_BCC_Proxy": "HRESULT WINAPI IMessage_get_BCC_Proxy(IMessage *This,BSTR *pBCC);", "IMessage_put_BCC_Proxy": "HRESULT WINAPI IMessage_put_BCC_Proxy(IMessage *This,BSTR varBCC);", "IMessage_get_CC_Proxy": "HRESULT WINAPI IMessage_get_CC_Proxy(IMessage *This,BSTR *pCC);", "IMessage_put_CC_Proxy": "HRESULT WINAPI IMessage_put_CC_Proxy(IMessage *This,BSTR varCC);", "IMessage_get_FollowUpTo_Proxy": "HRESULT WINAPI IMessage_get_FollowUpTo_Proxy(IMessage *This,BSTR *pFollowUpTo);", "IMessage_put_FollowUpTo_Proxy": "HRESULT WINAPI IMessage_put_FollowUpTo_Proxy(IMessage *This,BSTR varFollowUpTo);", "IMessage_get_From_Proxy": "HRESULT WINAPI IMessage_get_From_Proxy(IMessage *This,BSTR *pFrom);", "IMessage_put_From_Proxy": "HRESULT WINAPI IMessage_put_From_Proxy(IMessage *This,BSTR varFrom);", "IMessage_get_Keywords_Proxy": "HRESULT WINAPI IMessage_get_Keywords_Proxy(IMessage *This,BSTR *pKeywords);", "IMessage_put_Keywords_Proxy": "HRESULT WINAPI IMessage_put_Keywords_Proxy(IMessage *This,BSTR varKeywords);", "IMessage_get_MimeFormatted_Proxy": "HRESULT WINAPI IMessage_get_MimeFormatted_Proxy(IMessage *This,VARIANT_BOOL *pMimeFormatted);", "IMessage_put_MimeFormatted_Proxy": "HRESULT WINAPI IMessage_put_MimeFormatted_Proxy(IMessage *This,VARIANT_BOOL varMimeFormatted);", "IMessage_get_Newsgroups_Proxy": "HRESULT WINAPI IMessage_get_Newsgroups_Proxy(IMessage *This,BSTR *pNewsgroups);", "IMessage_put_Newsgroups_Proxy": "HRESULT WINAPI IMessage_put_Newsgroups_Proxy(IMessage *This,BSTR varNewsgroups);", "IMessage_get_Organization_Proxy": "HRESULT WINAPI IMessage_get_Organization_Proxy(IMessage *This,BSTR *pOrganization);", "IMessage_put_Organization_Proxy": "HRESULT WINAPI IMessage_put_Organization_Proxy(IMessage *This,BSTR varOrganization);", "IMessage_get_ReceivedTime_Proxy": "HRESULT WINAPI IMessage_get_ReceivedTime_Proxy(IMessage *This,DATE *varReceivedTime);", "IMessage_get_ReplyTo_Proxy": "HRESULT WINAPI IMessage_get_ReplyTo_Proxy(IMessage *This,BSTR *pReplyTo);", "IMessage_put_ReplyTo_Proxy": "HRESULT WINAPI IMessage_put_ReplyTo_Proxy(IMessage *This,BSTR varReplyTo);", "IMessage_get_DSNOptions_Proxy": "HRESULT WINAPI IMessage_get_DSNOptions_Proxy(IMessage *This,CdoDSNOptions *pDSNOptions);", "IMessage_put_DSNOptions_Proxy": "HRESULT WINAPI IMessage_put_DSNOptions_Proxy(IMessage *This,CdoDSNOptions varDSNOptions);", "IMessage_get_SentOn_Proxy": "HRESULT WINAPI IMessage_get_SentOn_Proxy(IMessage *This,DATE *varSentOn);", "IMessage_get_Subject_Proxy": "HRESULT WINAPI IMessage_get_Subject_Proxy(IMessage *This,BSTR *pSubject);", "IMessage_put_Subject_Proxy": "HRESULT WINAPI IMessage_put_Subject_Proxy(IMessage *This,BSTR varSubject);", "IMessage_get_To_Proxy": "HRESULT WINAPI IMessage_get_To_Proxy(IMessage *This,BSTR *pTo);", "IMessage_put_To_Proxy": "HRESULT WINAPI IMessage_put_To_Proxy(IMessage *This,BSTR varTo);", "IMessage_get_TextBody_Proxy": "HRESULT WINAPI IMessage_get_TextBody_Proxy(IMessage *This,BSTR *pTextBody);", "IMessage_put_TextBody_Proxy": "HRESULT WINAPI IMessage_put_TextBody_Proxy(IMessage *This,BSTR varTextBody);", "IMessage_get_HTMLBody_Proxy": "HRESULT WINAPI IMessage_get_HTMLBody_Proxy(IMessage *This,BSTR *pHTMLBody);", "IMessage_put_HTMLBody_Proxy": "HRESULT WINAPI IMessage_put_HTMLBody_Proxy(IMessage *This,BSTR varHTMLBody);", "IMessage_get_Attachments_Proxy": "HRESULT WINAPI IMessage_get_Attachments_Proxy(IMessage *This,IBodyParts **varAttachments);", "IMessage_get_Sender_Proxy": "HRESULT WINAPI IMessage_get_Sender_Proxy(IMessage *This,BSTR *pSender);", "IMessage_put_Sender_Proxy": "HRESULT WINAPI IMessage_put_Sender_Proxy(IMessage *This,BSTR varSender);", "IMessage_get_Configuration_Proxy": "HRESULT WINAPI IMessage_get_Configuration_Proxy(IMessage *This,IConfiguration **pConfiguration);", "IMessage_put_Configuration_Proxy": "HRESULT WINAPI IMessage_put_Configuration_Proxy(IMessage *This,IConfiguration *varConfiguration);", "IMessage_putref_Configuration_Proxy": "HRESULT WINAPI IMessage_putref_Configuration_Proxy(IMessage *This,IConfiguration *varConfiguration);", "IMessage_get_AutoGenerateTextBody_Proxy": "HRESULT WINAPI IMessage_get_AutoGenerateTextBody_Proxy(IMessage *This,VARIANT_BOOL *pAutoGenerateTextBody);", "IMessage_put_AutoGenerateTextBody_Proxy": "HRESULT WINAPI IMessage_put_AutoGenerateTextBody_Proxy(IMessage *This,VARIANT_BOOL varAutoGenerateTextBody);", "IMessage_get_EnvelopeFields_Proxy": "HRESULT WINAPI IMessage_get_EnvelopeFields_Proxy(IMessage *This,Fields **varEnvelopeFields);", "IMessage_get_TextBodyPart_Proxy": "HRESULT WINAPI IMessage_get_TextBodyPart_Proxy(IMessage *This,IBodyPart **varTextBodyPart);", "IMessage_get_HTMLBodyPart_Proxy": "HRESULT WINAPI IMessage_get_HTMLBodyPart_Proxy(IMessage *This,IBodyPart **varHTMLBodyPart);", "IMessage_get_BodyPart_Proxy": "HRESULT WINAPI IMessage_get_BodyPart_Proxy(IMessage *This,IBodyPart **varBodyPart);", "IMessage_get_DataSource_Proxy": "HRESULT WINAPI IMessage_get_DataSource_Proxy(IMessage *This,IDataSource **varDataSource);", "IMessage_get_Fields_Proxy": "HRESULT WINAPI IMessage_get_Fields_Proxy(IMessage *This,Fields **varFields);", "IMessage_get_MDNRequested_Proxy": "HRESULT WINAPI IMessage_get_MDNRequested_Proxy(IMessage *This,VARIANT_BOOL *pMDNRequested);", "IMessage_put_MDNRequested_Proxy": "HRESULT WINAPI IMessage_put_MDNRequested_Proxy(IMessage *This,VARIANT_BOOL varMDNRequested);", "IMessage_AddRelatedBodyPart_Proxy": "HRESULT WINAPI IMessage_AddRelatedBodyPart_Proxy(IMessage *This,BSTR URL,BSTR Reference,CdoReferenceType ReferenceType,BSTR UserName,BSTR Password,IBodyPart **ppBody);", "IMessage_AddAttachment_Proxy": "HRESULT WINAPI IMessage_AddAttachment_Proxy(IMessage *This,BSTR URL,BSTR UserName,BSTR Password,IBodyPart **ppBody);", "IMessage_CreateMHTMLBody_Proxy": "HRESULT WINAPI IMessage_CreateMHTMLBody_Proxy(IMessage *This,BSTR URL,CdoMHTMLFlags Flags,BSTR UserName,BSTR Password);", "IMessage_Forward_Proxy": "HRESULT WINAPI IMessage_Forward_Proxy(IMessage *This,IMessage **ppMsg);", "IMessage_Post_Proxy": "HRESULT WINAPI IMessage_Post_Proxy(IMessage *This);", "IMessage_PostReply_Proxy": "HRESULT WINAPI IMessage_PostReply_Proxy(IMessage *This,IMessage **ppMsg);", "IMessage_Reply_Proxy": "HRESULT WINAPI IMessage_Reply_Proxy(IMessage *This,IMessage **ppMsg);", "IMessage_ReplyAll_Proxy": "HRESULT WINAPI IMessage_ReplyAll_Proxy(IMessage *This,IMessage **ppMsg);", "IMessage_Send_Proxy": "HRESULT WINAPI IMessage_Send_Proxy(IMessage *This);", "IMessage_GetStream_Proxy": "HRESULT WINAPI IMessage_GetStream_Proxy(IMessage *This,_Stream **ppStream);", "IMessage_GetInterface_Proxy": "HRESULT WINAPI IMessage_GetInterface_Proxy(IMessage *This,BSTR Interface,IDispatch **ppUnknown);", "IBodyPart_get_BodyParts_Proxy": "HRESULT WINAPI IBodyPart_get_BodyParts_Proxy(IBodyPart *This,IBodyParts **varBodyParts);", "IBodyPart_get_ContentTransferEncoding_Proxy": "HRESULT WINAPI IBodyPart_get_ContentTransferEncoding_Proxy(IBodyPart *This,BSTR *pContentTransferEncoding);", "IBodyPart_put_ContentTransferEncoding_Proxy": "HRESULT WINAPI IBodyPart_put_ContentTransferEncoding_Proxy(IBodyPart *This,BSTR varContentTransferEncoding);", "IBodyPart_get_ContentMediaType_Proxy": "HRESULT WINAPI IBodyPart_get_ContentMediaType_Proxy(IBodyPart *This,BSTR *pContentMediaType);", "IBodyPart_put_ContentMediaType_Proxy": "HRESULT WINAPI IBodyPart_put_ContentMediaType_Proxy(IBodyPart *This,BSTR varContentMediaType);", "IBodyPart_get_Fields_Proxy": "HRESULT WINAPI IBodyPart_get_Fields_Proxy(IBodyPart *This,Fields **varFields);", "IBodyPart_get_Charset_Proxy": "HRESULT WINAPI IBodyPart_get_Charset_Proxy(IBodyPart *This,BSTR *pCharset);", "IBodyPart_put_Charset_Proxy": "HRESULT WINAPI IBodyPart_put_Charset_Proxy(IBodyPart *This,BSTR varCharset);", "IBodyPart_get_FileName_Proxy": "HRESULT WINAPI IBodyPart_get_FileName_Proxy(IBodyPart *This,BSTR *varFileName);", "IBodyPart_get_DataSource_Proxy": "HRESULT WINAPI IBodyPart_get_DataSource_Proxy(IBodyPart *This,IDataSource **varDataSource);", "IBodyPart_get_ContentClass_Proxy": "HRESULT WINAPI IBodyPart_get_ContentClass_Proxy(IBodyPart *This,BSTR *pContentClass);", "IBodyPart_put_ContentClass_Proxy": "HRESULT WINAPI IBodyPart_put_ContentClass_Proxy(IBodyPart *This,BSTR varContentClass);", "IBodyPart_get_ContentClassName_Proxy": "HRESULT WINAPI IBodyPart_get_ContentClassName_Proxy(IBodyPart *This,BSTR *pContentClassName);", "IBodyPart_put_ContentClassName_Proxy": "HRESULT WINAPI IBodyPart_put_ContentClassName_Proxy(IBodyPart *This,BSTR varContentClassName);", "IBodyPart_get_Parent_Proxy": "HRESULT WINAPI IBodyPart_get_Parent_Proxy(IBodyPart *This,IBodyPart **varParent);", "IBodyPart_AddBodyPart_Proxy": "HRESULT WINAPI IBodyPart_AddBodyPart_Proxy(IBodyPart *This,__LONG32 Index,IBodyPart **ppPart);", "IBodyPart_SaveToFile_Proxy": "HRESULT WINAPI IBodyPart_SaveToFile_Proxy(IBodyPart *This,BSTR FileName);", "IBodyPart_GetEncodedContentStream_Proxy": "HRESULT WINAPI IBodyPart_GetEncodedContentStream_Proxy(IBodyPart *This,_Stream **ppStream);", "IBodyPart_GetDecodedContentStream_Proxy": "HRESULT WINAPI IBodyPart_GetDecodedContentStream_Proxy(IBodyPart *This,_Stream **ppStream);", "IBodyPart_GetStream_Proxy": "HRESULT WINAPI IBodyPart_GetStream_Proxy(IBodyPart *This,_Stream **ppStream);", "IBodyPart_GetFieldParameter_Proxy": "HRESULT WINAPI IBodyPart_GetFieldParameter_Proxy(IBodyPart *This,BSTR FieldName,BSTR Parameter,BSTR *pbstrValue);", "IBodyPart_GetInterface_Proxy": "HRESULT WINAPI IBodyPart_GetInterface_Proxy(IBodyPart *This,BSTR Interface,IDispatch **ppUnknown);", "IConfiguration_get_Fields_Proxy": "HRESULT WINAPI IConfiguration_get_Fields_Proxy(IConfiguration *This,Fields **varFields);", "IConfiguration_Load_Proxy": "HRESULT WINAPI IConfiguration_Load_Proxy(IConfiguration *This,CdoConfigSource LoadFrom,BSTR URL);", "IConfiguration_GetInterface_Proxy": "HRESULT WINAPI IConfiguration_GetInterface_Proxy(IConfiguration *This,BSTR Interface,IDispatch **ppUnknown);", "IMessages_get_Item_Proxy": "HRESULT WINAPI IMessages_get_Item_Proxy(IMessages *This,__LONG32 Index,IMessage **ppMessage);", "IMessages_get_Count_Proxy": "HRESULT WINAPI IMessages_get_Count_Proxy(IMessages *This,__LONG32 *varCount);", "IMessages_Delete_Proxy": "HRESULT WINAPI IMessages_Delete_Proxy(IMessages *This,__LONG32 Index);", "IMessages_DeleteAll_Proxy": "HRESULT WINAPI IMessages_DeleteAll_Proxy(IMessages *This);", "IMessages_get__NewEnum_Proxy": "HRESULT WINAPI IMessages_get__NewEnum_Proxy(IMessages *This,IUnknown **retval);", "IMessages_get_Filename_Proxy": "HRESULT WINAPI IMessages_get_Filename_Proxy(IMessages *This,VARIANT var,BSTR *Filename);", "IDropDirectory_GetMessages_Proxy": "HRESULT WINAPI IDropDirectory_GetMessages_Proxy(IDropDirectory *This,BSTR DirName,IMessages **Msgs);", "IBodyParts_get_Count_Proxy": "HRESULT WINAPI IBodyParts_get_Count_Proxy(IBodyParts *This,__LONG32 *varCount);", "IBodyParts_get_Item_Proxy": "HRESULT WINAPI IBodyParts_get_Item_Proxy(IBodyParts *This,__LONG32 Index,IBodyPart **ppBody);", "IBodyParts_get__NewEnum_Proxy": "HRESULT WINAPI IBodyParts_get__NewEnum_Proxy(IBodyParts *This,IUnknown **retval);", "IBodyParts_Delete_Proxy": "HRESULT WINAPI IBodyParts_Delete_Proxy(IBodyParts *This,VARIANT varBP);", "IBodyParts_DeleteAll_Proxy": "HRESULT WINAPI IBodyParts_DeleteAll_Proxy(IBodyParts *This);", "IBodyParts_Add_Proxy": "HRESULT WINAPI IBodyParts_Add_Proxy(IBodyParts *This,__LONG32 Index,IBodyPart **ppPart);", "ISMTPOnArrival_OnArrival_Proxy": "HRESULT WINAPI ISMTPOnArrival_OnArrival_Proxy(ISMTPOnArrival *This,IMessage *Msg,CdoEventStatus *EventStatus);", "INNTPOnPostEarly_OnPostEarly_Proxy": "HRESULT WINAPI INNTPOnPostEarly_OnPostEarly_Proxy(INNTPOnPostEarly *This,IMessage *Msg,CdoEventStatus *EventStatus);", "INNTPOnPost_OnPost_Proxy": "HRESULT WINAPI INNTPOnPost_OnPost_Proxy(INNTPOnPost *This,IMessage *Msg,CdoEventStatus *EventStatus);", "INNTPOnPostFinal_OnPostFinal_Proxy": "HRESULT WINAPI INNTPOnPostFinal_OnPostFinal_Proxy(INNTPOnPostFinal *This,IMessage *Msg,CdoEventStatus *EventStatus);", "IProxyObject_get_Object_Proxy": "HRESULT WINAPI IProxyObject_get_Object_Proxy(IProxyObject *This,IUnknown **ppParent);", "IItem_GetInterface_Proxy": "HRESULT WINAPI IItem_GetInterface_Proxy(IItem *This,BSTR Interface,IDispatch **ppUnknown);", "IItem_GetStream_Proxy": "HRESULT WINAPI IItem_GetStream_Proxy(IItem *This,_Stream **ppStream);", "IItem_get_ChildCount_Proxy": "HRESULT WINAPI IItem_get_ChildCount_Proxy(IItem *This,__LONG32 *varChildCount);", "IItem_get_Configuration_Proxy": "HRESULT WINAPI IItem_get_Configuration_Proxy(IItem *This,IConfiguration **pConfiguration);", "IItem_put_Configuration_Proxy": "HRESULT WINAPI IItem_put_Configuration_Proxy(IItem *This,IConfiguration *varConfiguration);", "IItem_putref_Configuration_Proxy": "HRESULT WINAPI IItem_putref_Configuration_Proxy(IItem *This,IConfiguration *varConfiguration);", "IItem_get_ContentClass_Proxy": "HRESULT WINAPI IItem_get_ContentClass_Proxy(IItem *This,BSTR *pContentClass);", "IItem_put_ContentClass_Proxy": "HRESULT WINAPI IItem_put_ContentClass_Proxy(IItem *This,BSTR varContentClass);", "IItem_get_CreationDate_Proxy": "HRESULT WINAPI IItem_get_CreationDate_Proxy(IItem *This,DATE *varCreationDate);", "IItem_get_DataSource_Proxy": "HRESULT WINAPI IItem_get_DataSource_Proxy(IItem *This,IDataSource **varDataSource);", "IItem_get_DisplayName_Proxy": "HRESULT WINAPI IItem_get_DisplayName_Proxy(IItem *This,BSTR *varDisplayName);", "IItem_get_Fields_Proxy": "HRESULT WINAPI IItem_get_Fields_Proxy(IItem *This,Fields **varFields);", "IItem_get_IsCollection_Proxy": "HRESULT WINAPI IItem_get_IsCollection_Proxy(IItem *This,VARIANT_BOOL *varIsCollection);", "IItem_get_IsHidden_Proxy": "HRESULT WINAPI IItem_get_IsHidden_Proxy(IItem *This,VARIANT_BOOL *pIsHidden);", "IItem_put_IsHidden_Proxy": "HRESULT WINAPI IItem_put_IsHidden_Proxy(IItem *This,VARIANT_BOOL varIsHidden);", "IItem_get_IsStructuredDocument_Proxy": "HRESULT WINAPI IItem_get_IsStructuredDocument_Proxy(IItem *This,VARIANT_BOOL *varIsStructuredDocument);", "IItem_get_LastModified_Proxy": "HRESULT WINAPI IItem_get_LastModified_Proxy(IItem *This,DATE *varLastModified);", "IItem_get_ObjectCount_Proxy": "HRESULT WINAPI IItem_get_ObjectCount_Proxy(IItem *This,__LONG32 *varObjectCount);", "IItem_get_ParentURL_Proxy": "HRESULT WINAPI IItem_get_ParentURL_Proxy(IItem *This,BSTR *varParentURL);", "IItem_get_VisibleCount_Proxy": "HRESULT WINAPI IItem_get_VisibleCount_Proxy(IItem *This,__LONG32 *varVisibleCount);", "IAppointment_get_Attachments_Proxy": "HRESULT WINAPI IAppointment_get_Attachments_Proxy(IAppointment *This,IBodyParts **varAttachments);", "IAppointment_get_Attendees_Proxy": "HRESULT WINAPI IAppointment_get_Attendees_Proxy(IAppointment *This,IAttendees **varAttendees);", "IAppointment_get_BusyStatus_Proxy": "HRESULT WINAPI IAppointment_get_BusyStatus_Proxy(IAppointment *This,BSTR *pBusyStatus);", "IAppointment_put_BusyStatus_Proxy": "HRESULT WINAPI IAppointment_put_BusyStatus_Proxy(IAppointment *This,BSTR varBusyStatus);", "IAppointment_get_Keywords_Proxy": "HRESULT WINAPI IAppointment_get_Keywords_Proxy(IAppointment *This,VARIANT *pKeywords);", "IAppointment_put_Keywords_Proxy": "HRESULT WINAPI IAppointment_put_Keywords_Proxy(IAppointment *This,VARIANT varKeywords);", "IAppointment_get_Configuration_Proxy": "HRESULT WINAPI IAppointment_get_Configuration_Proxy(IAppointment *This,IConfiguration **pConfiguration);", "IAppointment_put_Configuration_Proxy": "HRESULT WINAPI IAppointment_put_Configuration_Proxy(IAppointment *This,IConfiguration *varConfiguration);", "IAppointment_putref_Configuration_Proxy": "HRESULT WINAPI IAppointment_putref_Configuration_Proxy(IAppointment *This,IConfiguration *varConfiguration);", "IAppointment_get_Contact_Proxy": "HRESULT WINAPI IAppointment_get_Contact_Proxy(IAppointment *This,BSTR *pContact);", "IAppointment_put_Contact_Proxy": "HRESULT WINAPI IAppointment_put_Contact_Proxy(IAppointment *This,BSTR varContact);", "IAppointment_get_ContactURL_Proxy": "HRESULT WINAPI IAppointment_get_ContactURL_Proxy(IAppointment *This,BSTR *pContactURL);", "IAppointment_put_ContactURL_Proxy": "HRESULT WINAPI IAppointment_put_ContactURL_Proxy(IAppointment *This,BSTR varContactURL);", "IAppointment_get_DataSource_Proxy": "HRESULT WINAPI IAppointment_get_DataSource_Proxy(IAppointment *This,IDataSource **varDataSource);", "IAppointment_get_EndTime_Proxy": "HRESULT WINAPI IAppointment_get_EndTime_Proxy(IAppointment *This,DATE *pEndTime);", "IAppointment_put_EndTime_Proxy": "HRESULT WINAPI IAppointment_put_EndTime_Proxy(IAppointment *This,DATE varEndTime);", "IAppointment_get_Exceptions_Proxy": "HRESULT WINAPI IAppointment_get_Exceptions_Proxy(IAppointment *This,IExceptions **varExceptions);", "IAppointment_get_Duration_Proxy": "HRESULT WINAPI IAppointment_get_Duration_Proxy(IAppointment *This,__LONG32 *pDuration);", "IAppointment_put_Duration_Proxy": "HRESULT WINAPI IAppointment_put_Duration_Proxy(IAppointment *This,__LONG32 varDuration);", "IAppointment_get_Fields_Proxy": "HRESULT WINAPI IAppointment_get_Fields_Proxy(IAppointment *This,Fields **varFields);", "IAppointment_get_Location_Proxy": "HRESULT WINAPI IAppointment_get_Location_Proxy(IAppointment *This,BSTR *pLocation);", "IAppointment_put_Location_Proxy": "HRESULT WINAPI IAppointment_put_Location_Proxy(IAppointment *This,BSTR varLocation);", "IAppointment_get_LocationURL_Proxy": "HRESULT WINAPI IAppointment_get_LocationURL_Proxy(IAppointment *This,BSTR *pLocationURL);", "IAppointment_put_LocationURL_Proxy": "HRESULT WINAPI IAppointment_put_LocationURL_Proxy(IAppointment *This,BSTR varLocationURL);", "IAppointment_get_Priority_Proxy": "HRESULT WINAPI IAppointment_get_Priority_Proxy(IAppointment *This,__LONG32 *pPriority);", "IAppointment_put_Priority_Proxy": "HRESULT WINAPI IAppointment_put_Priority_Proxy(IAppointment *This,__LONG32 varPriority);", "IAppointment_get_ReplyTime_Proxy": "HRESULT WINAPI IAppointment_get_ReplyTime_Proxy(IAppointment *This,DATE *varReplyTime);", "IAppointment_get_Resources_Proxy": "HRESULT WINAPI IAppointment_get_Resources_Proxy(IAppointment *This,BSTR *pResources);", "IAppointment_put_Resources_Proxy": "HRESULT WINAPI IAppointment_put_Resources_Proxy(IAppointment *This,BSTR varResources);", "IAppointment_get_ResponseRequested_Proxy": "HRESULT WINAPI IAppointment_get_ResponseRequested_Proxy(IAppointment *This,VARIANT_BOOL *pResponseRequested);", "IAppointment_put_ResponseRequested_Proxy": "HRESULT WINAPI IAppointment_put_ResponseRequested_Proxy(IAppointment *This,VARIANT_BOOL varResponseRequested);", "IAppointment_get_RecurrencePatterns_Proxy": "HRESULT WINAPI IAppointment_get_RecurrencePatterns_Proxy(IAppointment *This,IRecurrencePatterns **varRecurrencePatterns);", "IAppointment_get_Sensitivity_Proxy": "HRESULT WINAPI IAppointment_get_Sensitivity_Proxy(IAppointment *This,__LONG32 *pSensitivity);", "IAppointment_put_Sensitivity_Proxy": "HRESULT WINAPI IAppointment_put_Sensitivity_Proxy(IAppointment *This,__LONG32 varSensitivity);", "IAppointment_get_StartTime_Proxy": "HRESULT WINAPI IAppointment_get_StartTime_Proxy(IAppointment *This,DATE *pStartTime);", "IAppointment_put_StartTime_Proxy": "HRESULT WINAPI IAppointment_put_StartTime_Proxy(IAppointment *This,DATE varStartTime);", "IAppointment_get_MeetingStatus_Proxy": "HRESULT WINAPI IAppointment_get_MeetingStatus_Proxy(IAppointment *This,BSTR *pMeetingStatus);", "IAppointment_put_MeetingStatus_Proxy": "HRESULT WINAPI IAppointment_put_MeetingStatus_Proxy(IAppointment *This,BSTR varMeetingStatus);", "IAppointment_get_Subject_Proxy": "HRESULT WINAPI IAppointment_get_Subject_Proxy(IAppointment *This,BSTR *pSubject);", "IAppointment_put_Subject_Proxy": "HRESULT WINAPI IAppointment_put_Subject_Proxy(IAppointment *This,BSTR varSubject);", "IAppointment_get_Transparent_Proxy": "HRESULT WINAPI IAppointment_get_Transparent_Proxy(IAppointment *This,BSTR *pTransparent);", "IAppointment_put_Transparent_Proxy": "HRESULT WINAPI IAppointment_put_Transparent_Proxy(IAppointment *This,BSTR varTransparent);", "IAppointment_get_BodyPart_Proxy": "HRESULT WINAPI IAppointment_get_BodyPart_Proxy(IAppointment *This,IBodyPart **varBodyPart);", "IAppointment_get_GEOLatitude_Proxy": "HRESULT WINAPI IAppointment_get_GEOLatitude_Proxy(IAppointment *This,double *pGEOLatitude);", "IAppointment_put_GEOLatitude_Proxy": "HRESULT WINAPI IAppointment_put_GEOLatitude_Proxy(IAppointment *This,double varGEOLatitude);", "IAppointment_get_GEOLongitude_Proxy": "HRESULT WINAPI IAppointment_get_GEOLongitude_Proxy(IAppointment *This,double *pGEOLongitude);", "IAppointment_put_GEOLongitude_Proxy": "HRESULT WINAPI IAppointment_put_GEOLongitude_Proxy(IAppointment *This,double varGEOLongitude);", "IAppointment_get_AllDayEvent_Proxy": "HRESULT WINAPI IAppointment_get_AllDayEvent_Proxy(IAppointment *This,VARIANT_BOOL *pAllDayEvent);", "IAppointment_put_AllDayEvent_Proxy": "HRESULT WINAPI IAppointment_put_AllDayEvent_Proxy(IAppointment *This,VARIANT_BOOL varAllDayEvent);", "IAppointment_get_TextBody_Proxy": "HRESULT WINAPI IAppointment_get_TextBody_Proxy(IAppointment *This,BSTR *pTextBody);", "IAppointment_put_TextBody_Proxy": "HRESULT WINAPI IAppointment_put_TextBody_Proxy(IAppointment *This,BSTR varTextBody);", "IAppointment_get_ResponseText_Proxy": "HRESULT WINAPI IAppointment_get_ResponseText_Proxy(IAppointment *This,BSTR *pResponseText);", "IAppointment_put_ResponseText_Proxy": "HRESULT WINAPI IAppointment_put_ResponseText_Proxy(IAppointment *This,BSTR varResponseText);", "IAppointment_Accept_Proxy": "HRESULT WINAPI IAppointment_Accept_Proxy(IAppointment *This,ICalendarMessage **Response);", "IAppointment_AcceptTentative_Proxy": "HRESULT WINAPI IAppointment_AcceptTentative_Proxy(IAppointment *This,ICalendarMessage **Response);", "IAppointment_Cancel_Proxy": "HRESULT WINAPI IAppointment_Cancel_Proxy(IAppointment *This,BSTR EmailList,VARIANT_BOOL CleanupCalendar,BSTR UserName,BSTR Password,ICalendarMessage **Request);", "IAppointment_CreateRequest_Proxy": "HRESULT WINAPI IAppointment_CreateRequest_Proxy(IAppointment *This,ICalendarMessage **Request);", "IAppointment_Decline_Proxy": "HRESULT WINAPI IAppointment_Decline_Proxy(IAppointment *This,VARIANT_BOOL CleanupCalendar,BSTR UserName,BSTR Password,ICalendarMessage **Response);", "IAppointment_Invite_Proxy": "HRESULT WINAPI IAppointment_Invite_Proxy(IAppointment *This,BSTR EmailList,ICalendarMessage **Request);", "IAppointment_Publish_Proxy": "HRESULT WINAPI IAppointment_Publish_Proxy(IAppointment *This,ICalendarMessage **Request);", "IAppointment_GetFirstInstance_Proxy": "HRESULT WINAPI IAppointment_GetFirstInstance_Proxy(IAppointment *This,DATE MinDate,DATE MaxDate,IAppointment **Appointment);", "IAppointment_GetNextInstance_Proxy": "HRESULT WINAPI IAppointment_GetNextInstance_Proxy(IAppointment *This,IAppointment **Appointment);", "IAppointment_GetInterface_Proxy": "HRESULT WINAPI IAppointment_GetInterface_Proxy(IAppointment *This,BSTR Interface,IDispatch **ppUnknown);", "IAppointment_GetRecurringMaster_Proxy": "HRESULT WINAPI IAppointment_GetRecurringMaster_Proxy(IAppointment *This,BSTR CalendarLocation,BSTR UserName,BSTR Password,IAppointment **Appointment);", "ICalendarMessage_GetInterface_Proxy": "HRESULT WINAPI ICalendarMessage_GetInterface_Proxy(ICalendarMessage *This,BSTR Interface,IDispatch **ppUnknown);", "ICalendarMessage_get_CalendarParts_Proxy": "HRESULT WINAPI ICalendarMessage_get_CalendarParts_Proxy(ICalendarMessage *This,ICalendarParts **varCalendarParts);", "ICalendarMessage_get_Message_Proxy": "HRESULT WINAPI ICalendarMessage_get_Message_Proxy(ICalendarMessage *This,IMessage **varMessage);", "ICalendarMessage_get_DataSource_Proxy": "HRESULT WINAPI ICalendarMessage_get_DataSource_Proxy(ICalendarMessage *This,IDataSource **varDataSource);", "ICalendarMessage_get_Configuration_Proxy": "HRESULT WINAPI ICalendarMessage_get_Configuration_Proxy(ICalendarMessage *This,IConfiguration **pConfiguration);", "ICalendarMessage_put_Configuration_Proxy": "HRESULT WINAPI ICalendarMessage_put_Configuration_Proxy(ICalendarMessage *This,IConfiguration *varConfiguration);", "ICalendarMessage_putref_Configuration_Proxy": "HRESULT WINAPI ICalendarMessage_putref_Configuration_Proxy(ICalendarMessage *This,IConfiguration *varConfiguration);", "IIntegers_get_Item_Proxy": "HRESULT WINAPI IIntegers_get_Item_Proxy(IIntegers *This,__LONG32 Index,__LONG32 *Value);", "IIntegers_get_Count_Proxy": "HRESULT WINAPI IIntegers_get_Count_Proxy(IIntegers *This,__LONG32 *Count);", "IIntegers_Delete_Proxy": "HRESULT WINAPI IIntegers_Delete_Proxy(IIntegers *This,__LONG32 *Value);", "IIntegers_Add_Proxy": "HRESULT WINAPI IIntegers_Add_Proxy(IIntegers *This,__LONG32 NewValue);", "IIntegers_get__NewEnum_Proxy": "HRESULT WINAPI IIntegers_get__NewEnum_Proxy(IIntegers *This,IUnknown **Unknown);", "IVariants_get_Item_Proxy": "HRESULT WINAPI IVariants_get_Item_Proxy(IVariants *This,__LONG32 Index,VARIANT *Value);", "IVariants_get_Count_Proxy": "HRESULT WINAPI IVariants_get_Count_Proxy(IVariants *This,__LONG32 *Count);", "IVariants_Delete_Proxy": "HRESULT WINAPI IVariants_Delete_Proxy(IVariants *This,VARIANT *Value);", "IVariants_Add_Proxy": "HRESULT WINAPI IVariants_Add_Proxy(IVariants *This,VARIANT NewValue);", "IVariants_get__NewEnum_Proxy": "HRESULT WINAPI IVariants_get__NewEnum_Proxy(IVariants *This,IUnknown **Unknown);", "IRecurrencePattern_get_Interval_Proxy": "HRESULT WINAPI IRecurrencePattern_get_Interval_Proxy(IRecurrencePattern *This,__LONG32 *pInterval);", "IRecurrencePattern_put_Interval_Proxy": "HRESULT WINAPI IRecurrencePattern_put_Interval_Proxy(IRecurrencePattern *This,__LONG32 varInterval);", "IRecurrencePattern_get_Instances_Proxy": "HRESULT WINAPI IRecurrencePattern_get_Instances_Proxy(IRecurrencePattern *This,__LONG32 *pInstances);", "IRecurrencePattern_put_Instances_Proxy": "HRESULT WINAPI IRecurrencePattern_put_Instances_Proxy(IRecurrencePattern *This,__LONG32 varInstances);", "IRecurrencePattern_get_Frequency_Proxy": "HRESULT WINAPI IRecurrencePattern_get_Frequency_Proxy(IRecurrencePattern *This,CdoFrequency *pFrequency);", "IRecurrencePattern_put_Frequency_Proxy": "HRESULT WINAPI IRecurrencePattern_put_Frequency_Proxy(IRecurrencePattern *This,CdoFrequency varFrequency);", "IRecurrencePattern_get_PatternEndDate_Proxy": "HRESULT WINAPI IRecurrencePattern_get_PatternEndDate_Proxy(IRecurrencePattern *This,DATE *pPatternEndDate);", "IRecurrencePattern_put_PatternEndDate_Proxy": "HRESULT WINAPI IRecurrencePattern_put_PatternEndDate_Proxy(IRecurrencePattern *This,DATE varPatternEndDate);", "IRecurrencePattern_get_Type_Proxy": "HRESULT WINAPI IRecurrencePattern_get_Type_Proxy(IRecurrencePattern *This,BSTR *varType);", "IRecurrencePattern_get_EndType_Proxy": "HRESULT WINAPI IRecurrencePattern_get_EndType_Proxy(IRecurrencePattern *This,CdoPatternEndType *pEndType);", "IRecurrencePattern_put_EndType_Proxy": "HRESULT WINAPI IRecurrencePattern_put_EndType_Proxy(IRecurrencePattern *This,CdoPatternEndType varEndType);", "IRecurrencePattern_get_FirstDayOfWeek_Proxy": "HRESULT WINAPI IRecurrencePattern_get_FirstDayOfWeek_Proxy(IRecurrencePattern *This,CdoDayOfWeek *pFirstDayOfWeek);", "IRecurrencePattern_put_FirstDayOfWeek_Proxy": "HRESULT WINAPI IRecurrencePattern_put_FirstDayOfWeek_Proxy(IRecurrencePattern *This,CdoDayOfWeek varFirstDayOfWeek);", "IRecurrencePattern_get_DaysOfMonth_Proxy": "HRESULT WINAPI IRecurrencePattern_get_DaysOfMonth_Proxy(IRecurrencePattern *This,IIntegers **varDaysOfMonth);", "IRecurrencePattern_get_DaysOfWeek_Proxy": "HRESULT WINAPI IRecurrencePattern_get_DaysOfWeek_Proxy(IRecurrencePattern *This,IIntegers **varDaysOfWeek);", "IRecurrencePattern_get_DaysOfYear_Proxy": "HRESULT WINAPI IRecurrencePattern_get_DaysOfYear_Proxy(IRecurrencePattern *This,IIntegers **varDaysOfYear);", "IRecurrencePattern_get_SecondsOfMinute_Proxy": "HRESULT WINAPI IRecurrencePattern_get_SecondsOfMinute_Proxy(IRecurrencePattern *This,IIntegers **varSecondsOfMinute);", "IRecurrencePattern_get_MinutesOfHour_Proxy": "HRESULT WINAPI IRecurrencePattern_get_MinutesOfHour_Proxy(IRecurrencePattern *This,IIntegers **varMinutesOfHour);", "IRecurrencePattern_get_HoursOfDay_Proxy": "HRESULT WINAPI IRecurrencePattern_get_HoursOfDay_Proxy(IRecurrencePattern *This,IIntegers **varHoursOfDay);", "IRecurrencePattern_get_WeekDays_Proxy": "HRESULT WINAPI IRecurrencePattern_get_WeekDays_Proxy(IRecurrencePattern *This,IVariants **varWeekDays);", "IRecurrencePattern_get_WeeksOfYear_Proxy": "HRESULT WINAPI IRecurrencePattern_get_WeeksOfYear_Proxy(IRecurrencePattern *This,IIntegers **varWeeksOfYear);", "IRecurrencePattern_get_MonthsOfYear_Proxy": "HRESULT WINAPI IRecurrencePattern_get_MonthsOfYear_Proxy(IRecurrencePattern *This,IIntegers **varMonthsOfYear);", "IRecurrencePattern_get_ByPosition_Proxy": "HRESULT WINAPI IRecurrencePattern_get_ByPosition_Proxy(IRecurrencePattern *This,IIntegers **varByPosition);", "IException_get_Type_Proxy": "HRESULT WINAPI IException_get_Type_Proxy(IException *This,BSTR *varType);", "IException_get_RecurrenceIDRange_Proxy": "HRESULT WINAPI IException_get_RecurrenceIDRange_Proxy(IException *This,BSTR *pRecurrenceIDRange);", "IException_put_RecurrenceIDRange_Proxy": "HRESULT WINAPI IException_put_RecurrenceIDRange_Proxy(IException *This,BSTR varRecurrenceIDRange);", "IException_get_RecurrenceID_Proxy": "HRESULT WINAPI IException_get_RecurrenceID_Proxy(IException *This,DATE *pRecurrenceID);", "IException_put_RecurrenceID_Proxy": "HRESULT WINAPI IException_put_RecurrenceID_Proxy(IException *This,DATE varRecurrenceID);", "IException_get_StartTime_Proxy": "HRESULT WINAPI IException_get_StartTime_Proxy(IException *This,DATE *pStartTime);", "IException_put_StartTime_Proxy": "HRESULT WINAPI IException_put_StartTime_Proxy(IException *This,DATE varStartTime);", "IException_get_EndTime_Proxy": "HRESULT WINAPI IException_get_EndTime_Proxy(IException *This,DATE *pEndTime);", "IException_put_EndTime_Proxy": "HRESULT WINAPI IException_put_EndTime_Proxy(IException *This,DATE varEndTime);", "IException_get_Fields_Proxy": "HRESULT WINAPI IException_get_Fields_Proxy(IException *This,Fields **varFields);", "IRecurrencePatterns_get_Item_Proxy": "HRESULT WINAPI IRecurrencePatterns_get_Item_Proxy(IRecurrencePatterns *This,__LONG32 Index,IRecurrencePattern **RecurrencePattern);", "IRecurrencePatterns_get_Count_Proxy": "HRESULT WINAPI IRecurrencePatterns_get_Count_Proxy(IRecurrencePatterns *This,__LONG32 *Count);", "IRecurrencePatterns_Delete_Proxy": "HRESULT WINAPI IRecurrencePatterns_Delete_Proxy(IRecurrencePatterns *This,__LONG32 Index);", "IRecurrencePatterns_Add_Proxy": "HRESULT WINAPI IRecurrencePatterns_Add_Proxy(IRecurrencePatterns *This,BSTR Type,IRecurrencePattern **RecurrencePattern);", "IRecurrencePatterns_get__NewEnum_Proxy": "HRESULT WINAPI IRecurrencePatterns_get__NewEnum_Proxy(IRecurrencePatterns *This,IUnknown **Unknown);", "IExceptions_get_Item_Proxy": "HRESULT WINAPI IExceptions_get_Item_Proxy(IExceptions *This,__LONG32 Index,IException **Exception);", "IExceptions_get_Count_Proxy": "HRESULT WINAPI IExceptions_get_Count_Proxy(IExceptions *This,__LONG32 *Count);", "IExceptions_Delete_Proxy": "HRESULT WINAPI IExceptions_Delete_Proxy(IExceptions *This,__LONG32 Index);", "IExceptions_Add_Proxy": "HRESULT WINAPI IExceptions_Add_Proxy(IExceptions *This,BSTR Type,IException **Exception);", "IExceptions_get__NewEnum_Proxy": "HRESULT WINAPI IExceptions_get__NewEnum_Proxy(IExceptions *This,IUnknown **Unknown);", "ICalendarPart_GetAssociatedItem_Proxy": "HRESULT WINAPI ICalendarPart_GetAssociatedItem_Proxy(ICalendarPart *This,BSTR CalendarLocation,BSTR UserName,BSTR Password,IDispatch **Item);", "ICalendarPart_GetInterface_Proxy": "HRESULT WINAPI ICalendarPart_GetInterface_Proxy(ICalendarPart *This,BSTR Interface,IDispatch **ppUnknown);", "ICalendarPart_get_ComponentType_Proxy": "HRESULT WINAPI ICalendarPart_get_ComponentType_Proxy(ICalendarPart *This,CdoComponentType *varComponentType);", "ICalendarPart_get_ProdID_Proxy": "HRESULT WINAPI ICalendarPart_get_ProdID_Proxy(ICalendarPart *This,BSTR *varProdID);", "ICalendarPart_get_CalendarVersion_Proxy": "HRESULT WINAPI ICalendarPart_get_CalendarVersion_Proxy(ICalendarPart *This,BSTR *varCalendarVersion);", "ICalendarPart_get_CalendarMethod_Proxy": "HRESULT WINAPI ICalendarPart_get_CalendarMethod_Proxy(ICalendarPart *This,BSTR *varCalendarMethod);", "ICalendarPart_GetUpdatedItem_Proxy": "HRESULT WINAPI ICalendarPart_GetUpdatedItem_Proxy(ICalendarPart *This,BSTR CalendarLocation,BSTR UserName,BSTR Password,IDispatch **Item);", "ICalendarParts_get_Item_Proxy": "HRESULT WINAPI ICalendarParts_get_Item_Proxy(ICalendarParts *This,__LONG32 Index,ICalendarPart **CalendarPart);", "ICalendarParts_get_Count_Proxy": "HRESULT WINAPI ICalendarParts_get_Count_Proxy(ICalendarParts *This,__LONG32 *Count);", "ICalendarParts_Delete_Proxy": "HRESULT WINAPI ICalendarParts_Delete_Proxy(ICalendarParts *This,__LONG32 Index);", "ICalendarParts_Add_Proxy": "HRESULT WINAPI ICalendarParts_Add_Proxy(ICalendarParts *This,IUnknown *CalendarPart,CdoComponentType ComponentType);", "ICalendarParts_get__NewEnum_Proxy": "HRESULT WINAPI ICalendarParts_get__NewEnum_Proxy(ICalendarParts *This,IUnknown **Unknown);", "IAttendee_get_DisplayName_Proxy": "HRESULT WINAPI IAttendee_get_DisplayName_Proxy(IAttendee *This,BSTR *pDisplayName);", "IAttendee_put_DisplayName_Proxy": "HRESULT WINAPI IAttendee_put_DisplayName_Proxy(IAttendee *This,BSTR varDisplayName);", "IAttendee_get_Type_Proxy": "HRESULT WINAPI IAttendee_get_Type_Proxy(IAttendee *This,BSTR *pType);", "IAttendee_put_Type_Proxy": "HRESULT WINAPI IAttendee_put_Type_Proxy(IAttendee *This,BSTR varType);", "IAttendee_get_Address_Proxy": "HRESULT WINAPI IAttendee_get_Address_Proxy(IAttendee *This,BSTR *pAddress);", "IAttendee_put_Address_Proxy": "HRESULT WINAPI IAttendee_put_Address_Proxy(IAttendee *This,BSTR varAddress);", "IAttendee_get_IsOrganizer_Proxy": "HRESULT WINAPI IAttendee_get_IsOrganizer_Proxy(IAttendee *This,VARIANT_BOOL *pIsOrganizer);", "IAttendee_put_IsOrganizer_Proxy": "HRESULT WINAPI IAttendee_put_IsOrganizer_Proxy(IAttendee *This,VARIANT_BOOL varIsOrganizer);", "IAttendee_get_Role_Proxy": "HRESULT WINAPI IAttendee_get_Role_Proxy(IAttendee *This,CdoAttendeeRoleValues *pRole);", "IAttendee_put_Role_Proxy": "HRESULT WINAPI IAttendee_put_Role_Proxy(IAttendee *This,CdoAttendeeRoleValues varRole);", "IAttendee_get_Status_Proxy": "HRESULT WINAPI IAttendee_get_Status_Proxy(IAttendee *This,CdoAttendeeStatusValues *pStatus);", "IAttendee_put_Status_Proxy": "HRESULT WINAPI IAttendee_put_Status_Proxy(IAttendee *This,CdoAttendeeStatusValues varStatus);", "IAttendees_get_Item_Proxy": "HRESULT WINAPI IAttendees_get_Item_Proxy(IAttendees *This,__LONG32 Index,IAttendee **Attendee);", "IAttendees_get_Count_Proxy": "HRESULT WINAPI IAttendees_get_Count_Proxy(IAttendees *This,__LONG32 *Count);", "IAttendees_Delete_Proxy": "HRESULT WINAPI IAttendees_Delete_Proxy(IAttendees *This,__LONG32 Index);", "IAttendees_Add_Proxy": "HRESULT WINAPI IAttendees_Add_Proxy(IAttendees *This,BSTR Address,IAttendee **Attendee);", "IAttendees_get__NewEnum_Proxy": "HRESULT WINAPI IAttendees_get__NewEnum_Proxy(IAttendees *This,IUnknown **Unknown);", "IMailbox_get_BaseFolder_Proxy": "HRESULT WINAPI IMailbox_get_BaseFolder_Proxy(IMailbox *This,BSTR *varBaseFolder);", "IMailbox_get_RootFolder_Proxy": "HRESULT WINAPI IMailbox_get_RootFolder_Proxy(IMailbox *This,BSTR *varRootFolder);", "IMailbox_get_Inbox_Proxy": "HRESULT WINAPI IMailbox_get_Inbox_Proxy(IMailbox *This,BSTR *varInbox);", "IMailbox_get_Outbox_Proxy": "HRESULT WINAPI IMailbox_get_Outbox_Proxy(IMailbox *This,BSTR *varOutbox);", "IMailbox_get_SentItems_Proxy": "HRESULT WINAPI IMailbox_get_SentItems_Proxy(IMailbox *This,BSTR *varSentItems);", "IMailbox_get_Drafts_Proxy": "HRESULT WINAPI IMailbox_get_Drafts_Proxy(IMailbox *This,BSTR *varDrafts);", "IMailbox_get_DeletedItems_Proxy": "HRESULT WINAPI IMailbox_get_DeletedItems_Proxy(IMailbox *This,BSTR *varDeletedItems);", "IMailbox_get_Calendar_Proxy": "HRESULT WINAPI IMailbox_get_Calendar_Proxy(IMailbox *This,BSTR *varCalendar);", "IMailbox_get_Tasks_Proxy": "HRESULT WINAPI IMailbox_get_Tasks_Proxy(IMailbox *This,BSTR *varTasks);", "IMailbox_get_Contacts_Proxy": "HRESULT WINAPI IMailbox_get_Contacts_Proxy(IMailbox *This,BSTR *varContacts);", "IMailbox_get_Notes_Proxy": "HRESULT WINAPI IMailbox_get_Notes_Proxy(IMailbox *This,BSTR *varNotes);", "IMailbox_get_Journal_Proxy": "HRESULT WINAPI IMailbox_get_Journal_Proxy(IMailbox *This,BSTR *varJournal);", "IFolder_get_DisplayName_Proxy": "HRESULT WINAPI IFolder_get_DisplayName_Proxy(IFolder *This,BSTR *varDisplayName);", "IFolder_get_Configuration_Proxy": "HRESULT WINAPI IFolder_get_Configuration_Proxy(IFolder *This,IConfiguration **pConfiguration);", "IFolder_put_Configuration_Proxy": "HRESULT WINAPI IFolder_put_Configuration_Proxy(IFolder *This,IConfiguration *varConfiguration);", "IFolder_putref_Configuration_Proxy": "HRESULT WINAPI IFolder_putref_Configuration_Proxy(IFolder *This,IConfiguration *varConfiguration);", "IFolder_get_DataSource_Proxy": "HRESULT WINAPI IFolder_get_DataSource_Proxy(IFolder *This,IDataSource **varDataSource);", "IFolder_get_EmailAddress_Proxy": "HRESULT WINAPI IFolder_get_EmailAddress_Proxy(IFolder *This,BSTR *varEmailAddress);", "IFolder_get_UnreadItemCount_Proxy": "HRESULT WINAPI IFolder_get_UnreadItemCount_Proxy(IFolder *This,LONG *varUnreadItemCount);", "IFolder_get_VisibleCount_Proxy": "HRESULT WINAPI IFolder_get_VisibleCount_Proxy(IFolder *This,LONG *varVisibleCount);", "IFolder_get_ItemCount_Proxy": "HRESULT WINAPI IFolder_get_ItemCount_Proxy(IFolder *This,LONG *varItemCount);", "IFolder_get_HasSubFolders_Proxy": "HRESULT WINAPI IFolder_get_HasSubFolders_Proxy(IFolder *This,VARIANT_BOOL *varHasSubFolders);", "IFolder_get_Description_Proxy": "HRESULT WINAPI IFolder_get_Description_Proxy(IFolder *This,BSTR *pDescription);", "IFolder_put_Description_Proxy": "HRESULT WINAPI IFolder_put_Description_Proxy(IFolder *This,BSTR varDescription);", "IFolder_get_Fields_Proxy": "HRESULT WINAPI IFolder_get_Fields_Proxy(IFolder *This,Fields **varFields);", "IFolder_get_ContentClass_Proxy": "HRESULT WINAPI IFolder_get_ContentClass_Proxy(IFolder *This,BSTR *pContentClass);", "IFolder_put_ContentClass_Proxy": "HRESULT WINAPI IFolder_put_ContentClass_Proxy(IFolder *This,BSTR varContentClass);", "IFolder_GetInterface_Proxy": "HRESULT WINAPI IFolder_GetInterface_Proxy(IFolder *This,BSTR Interface,IDispatch **ppUnknown);", "IContactGroupMembers_get_Item_Proxy": "HRESULT WINAPI IContactGroupMembers_get_Item_Proxy(IContactGroupMembers *This,__LONG32 Index,BSTR *pVal);", "IContactGroupMembers_get_Count_Proxy": "HRESULT WINAPI IContactGroupMembers_get_Count_Proxy(IContactGroupMembers *This,__LONG32 *Count);", "IContactGroupMembers_Delete_Proxy": "HRESULT WINAPI IContactGroupMembers_Delete_Proxy(IContactGroupMembers *This,BSTR *Member);", "IContactGroupMembers_Add_Proxy": "HRESULT WINAPI IContactGroupMembers_Add_Proxy(IContactGroupMembers *This,BSTR val);", "IContactGroupMembers_get__NewEnum_Proxy": "HRESULT WINAPI IContactGroupMembers_get__NewEnum_Proxy(IContactGroupMembers *This,IUnknown **Unknown);", "IPerson_get_DataSource_Proxy": "HRESULT WINAPI IPerson_get_DataSource_Proxy(IPerson *This,IDataSource **varDataSource);", "IPerson_get_Configuration_Proxy": "HRESULT WINAPI IPerson_get_Configuration_Proxy(IPerson *This,IConfiguration **pConfiguration);", "IPerson_put_Configuration_Proxy": "HRESULT WINAPI IPerson_put_Configuration_Proxy(IPerson *This,IConfiguration *varConfiguration);", "IPerson_putref_Configuration_Proxy": "HRESULT WINAPI IPerson_putref_Configuration_Proxy(IPerson *This,IConfiguration *varConfiguration);", "IPerson_get_Fields_Proxy": "HRESULT WINAPI IPerson_get_Fields_Proxy(IPerson *This,Fields **varFields);", "IPerson_get_MailingAddressID_Proxy": "HRESULT WINAPI IPerson_get_MailingAddressID_Proxy(IPerson *This,CdoMailingAddressIdValues *pMailingAddressID);", "IPerson_put_MailingAddressID_Proxy": "HRESULT WINAPI IPerson_put_MailingAddressID_Proxy(IPerson *This,CdoMailingAddressIdValues varMailingAddressID);", "IPerson_get_MailingAddress_Proxy": "HRESULT WINAPI IPerson_get_MailingAddress_Proxy(IPerson *This,BSTR *varMailingAddress);", "IPerson_get_FileAsMapping_Proxy": "HRESULT WINAPI IPerson_get_FileAsMapping_Proxy(IPerson *This,CdoFileAsMappingId *pFileAsMapping);", "IPerson_put_FileAsMapping_Proxy": "HRESULT WINAPI IPerson_put_FileAsMapping_Proxy(IPerson *This,CdoFileAsMappingId varFileAsMapping);", "IPerson_get_FileAs_Proxy": "HRESULT WINAPI IPerson_get_FileAs_Proxy(IPerson *This,BSTR *pFileAs);", "IPerson_put_FileAs_Proxy": "HRESULT WINAPI IPerson_put_FileAs_Proxy(IPerson *This,BSTR varFileAs);", "IPerson_get_WorkPhone_Proxy": "HRESULT WINAPI IPerson_get_WorkPhone_Proxy(IPerson *This,BSTR *pWorkPhone);", "IPerson_put_WorkPhone_Proxy": "HRESULT WINAPI IPerson_put_WorkPhone_Proxy(IPerson *This,BSTR varWorkPhone);", "IPerson_get_WorkFax_Proxy": "HRESULT WINAPI IPerson_get_WorkFax_Proxy(IPerson *This,BSTR *pWorkFax);", "IPerson_put_WorkFax_Proxy": "HRESULT WINAPI IPerson_put_WorkFax_Proxy(IPerson *This,BSTR varWorkFax);", "IPerson_get_HomePhone_Proxy": "HRESULT WINAPI IPerson_get_HomePhone_Proxy(IPerson *This,BSTR *pHomePhone);", "IPerson_put_HomePhone_Proxy": "HRESULT WINAPI IPerson_put_HomePhone_Proxy(IPerson *This,BSTR varHomePhone);", "IPerson_get_MobilePhone_Proxy": "HRESULT WINAPI IPerson_get_MobilePhone_Proxy(IPerson *This,BSTR *pMobilePhone);", "IPerson_put_MobilePhone_Proxy": "HRESULT WINAPI IPerson_put_MobilePhone_Proxy(IPerson *This,BSTR varMobilePhone);", "IPerson_get_FirstName_Proxy": "HRESULT WINAPI IPerson_get_FirstName_Proxy(IPerson *This,BSTR *pFirstName);", "IPerson_put_FirstName_Proxy": "HRESULT WINAPI IPerson_put_FirstName_Proxy(IPerson *This,BSTR varFirstName);", "IPerson_get_LastName_Proxy": "HRESULT WINAPI IPerson_get_LastName_Proxy(IPerson *This,BSTR *pLastName);", "IPerson_put_LastName_Proxy": "HRESULT WINAPI IPerson_put_LastName_Proxy(IPerson *This,BSTR varLastName);", "IPerson_get_NamePrefix_Proxy": "HRESULT WINAPI IPerson_get_NamePrefix_Proxy(IPerson *This,BSTR *pNamePrefix);", "IPerson_put_NamePrefix_Proxy": "HRESULT WINAPI IPerson_put_NamePrefix_Proxy(IPerson *This,BSTR varNamePrefix);", "IPerson_get_NameSuffix_Proxy": "HRESULT WINAPI IPerson_get_NameSuffix_Proxy(IPerson *This,BSTR *pNameSuffix);", "IPerson_put_NameSuffix_Proxy": "HRESULT WINAPI IPerson_put_NameSuffix_Proxy(IPerson *This,BSTR varNameSuffix);", "IPerson_get_Email_Proxy": "HRESULT WINAPI IPerson_get_Email_Proxy(IPerson *This,BSTR *pEmail);", "IPerson_put_Email_Proxy": "HRESULT WINAPI IPerson_put_Email_Proxy(IPerson *This,BSTR varEmail);", "IPerson_get_Email2_Proxy": "HRESULT WINAPI IPerson_get_Email2_Proxy(IPerson *This,BSTR *pEmail2);", "IPerson_put_Email2_Proxy": "HRESULT WINAPI IPerson_put_Email2_Proxy(IPerson *This,BSTR varEmail2);", "IPerson_get_Email3_Proxy": "HRESULT WINAPI IPerson_get_Email3_Proxy(IPerson *This,BSTR *pEmail3);", "IPerson_put_Email3_Proxy": "HRESULT WINAPI IPerson_put_Email3_Proxy(IPerson *This,BSTR varEmail3);", "IPerson_GetVCardStream_Proxy": "HRESULT WINAPI IPerson_GetVCardStream_Proxy(IPerson *This,_Stream **Stream);", "IPerson_GetInterface_Proxy": "HRESULT WINAPI IPerson_GetInterface_Proxy(IPerson *This,BSTR Interface,IDispatch **ppUnknown);", "IPerson_get_WorkStreet_Proxy": "HRESULT WINAPI IPerson_get_WorkStreet_Proxy(IPerson *This,BSTR *pWorkStreet);", "IPerson_put_WorkStreet_Proxy": "HRESULT WINAPI IPerson_put_WorkStreet_Proxy(IPerson *This,BSTR varWorkStreet);", "IPerson_get_WorkCity_Proxy": "HRESULT WINAPI IPerson_get_WorkCity_Proxy(IPerson *This,BSTR *pWorkCity);", "IPerson_put_WorkCity_Proxy": "HRESULT WINAPI IPerson_put_WorkCity_Proxy(IPerson *This,BSTR varWorkCity);", "IPerson_get_WorkCountry_Proxy": "HRESULT WINAPI IPerson_get_WorkCountry_Proxy(IPerson *This,BSTR *pWorkCountry);", "IPerson_put_WorkCountry_Proxy": "HRESULT WINAPI IPerson_put_WorkCountry_Proxy(IPerson *This,BSTR varWorkCountry);", "IPerson_get_WorkPostalCode_Proxy": "HRESULT WINAPI IPerson_get_WorkPostalCode_Proxy(IPerson *This,BSTR *pWorkPostalCode);", "IPerson_put_WorkPostalCode_Proxy": "HRESULT WINAPI IPerson_put_WorkPostalCode_Proxy(IPerson *This,BSTR varWorkPostalCode);", "IPerson_get_WorkPostOfficeBox_Proxy": "HRESULT WINAPI IPerson_get_WorkPostOfficeBox_Proxy(IPerson *This,BSTR *pWorkPostOfficeBox);", "IPerson_put_WorkPostOfficeBox_Proxy": "HRESULT WINAPI IPerson_put_WorkPostOfficeBox_Proxy(IPerson *This,BSTR varWorkPostOfficeBox);", "IPerson_get_WorkPostalAddress_Proxy": "HRESULT WINAPI IPerson_get_WorkPostalAddress_Proxy(IPerson *This,BSTR *varWorkPostalAddress);", "IPerson_get_WorkState_Proxy": "HRESULT WINAPI IPerson_get_WorkState_Proxy(IPerson *This,BSTR *pWorkState);", "IPerson_put_WorkState_Proxy": "HRESULT WINAPI IPerson_put_WorkState_Proxy(IPerson *This,BSTR varWorkState);", "IPerson_get_WorkPager_Proxy": "HRESULT WINAPI IPerson_get_WorkPager_Proxy(IPerson *This,BSTR *pWorkPager);", "IPerson_put_WorkPager_Proxy": "HRESULT WINAPI IPerson_put_WorkPager_Proxy(IPerson *This,BSTR varWorkPager);", "IPerson_get_HomeStreet_Proxy": "HRESULT WINAPI IPerson_get_HomeStreet_Proxy(IPerson *This,BSTR *pHomeStreet);", "IPerson_put_HomeStreet_Proxy": "HRESULT WINAPI IPerson_put_HomeStreet_Proxy(IPerson *This,BSTR varHomeStreet);", "IPerson_get_HomeCity_Proxy": "HRESULT WINAPI IPerson_get_HomeCity_Proxy(IPerson *This,BSTR *pHomeCity);", "IPerson_put_HomeCity_Proxy": "HRESULT WINAPI IPerson_put_HomeCity_Proxy(IPerson *This,BSTR varHomeCity);", "IPerson_get_HomeCountry_Proxy": "HRESULT WINAPI IPerson_get_HomeCountry_Proxy(IPerson *This,BSTR *pHomeCountry);", "IPerson_put_HomeCountry_Proxy": "HRESULT WINAPI IPerson_put_HomeCountry_Proxy(IPerson *This,BSTR varHomeCountry);", "IPerson_get_HomePostalCode_Proxy": "HRESULT WINAPI IPerson_get_HomePostalCode_Proxy(IPerson *This,BSTR *pHomePostalCode);", "IPerson_put_HomePostalCode_Proxy": "HRESULT WINAPI IPerson_put_HomePostalCode_Proxy(IPerson *This,BSTR varHomePostalCode);", "IPerson_get_HomePostOfficeBox_Proxy": "HRESULT WINAPI IPerson_get_HomePostOfficeBox_Proxy(IPerson *This,BSTR *pHomePostOfficeBox);", "IPerson_put_HomePostOfficeBox_Proxy": "HRESULT WINAPI IPerson_put_HomePostOfficeBox_Proxy(IPerson *This,BSTR varHomePostOfficeBox);", "IPerson_get_HomePostalAddress_Proxy": "HRESULT WINAPI IPerson_get_HomePostalAddress_Proxy(IPerson *This,BSTR *varHomePostalAddress);", "IPerson_get_HomeState_Proxy": "HRESULT WINAPI IPerson_get_HomeState_Proxy(IPerson *This,BSTR *pHomeState);", "IPerson_put_HomeState_Proxy": "HRESULT WINAPI IPerson_put_HomeState_Proxy(IPerson *This,BSTR varHomeState);", "IPerson_get_HomeFax_Proxy": "HRESULT WINAPI IPerson_get_HomeFax_Proxy(IPerson *This,BSTR *pHomeFax);", "IPerson_put_HomeFax_Proxy": "HRESULT WINAPI IPerson_put_HomeFax_Proxy(IPerson *This,BSTR varHomeFax);", "IPerson_get_MiddleName_Proxy": "HRESULT WINAPI IPerson_get_MiddleName_Proxy(IPerson *This,BSTR *pMiddleName);", "IPerson_put_MiddleName_Proxy": "HRESULT WINAPI IPerson_put_MiddleName_Proxy(IPerson *This,BSTR varMiddleName);", "IPerson_get_Initials_Proxy": "HRESULT WINAPI IPerson_get_Initials_Proxy(IPerson *This,BSTR *pInitials);", "IPerson_put_Initials_Proxy": "HRESULT WINAPI IPerson_put_Initials_Proxy(IPerson *This,BSTR varInitials);", "IPerson_get_EmailAddresses_Proxy": "HRESULT WINAPI IPerson_get_EmailAddresses_Proxy(IPerson *This,VARIANT *pEmailAddresses);", "IPerson_put_EmailAddresses_Proxy": "HRESULT WINAPI IPerson_put_EmailAddresses_Proxy(IPerson *This,VARIANT varEmailAddresses);", "IPerson_get_Company_Proxy": "HRESULT WINAPI IPerson_get_Company_Proxy(IPerson *This,BSTR *pCompany);", "IPerson_put_Company_Proxy": "HRESULT WINAPI IPerson_put_Company_Proxy(IPerson *This,BSTR varCompany);", "IPerson_get_Title_Proxy": "HRESULT WINAPI IPerson_get_Title_Proxy(IPerson *This,BSTR *pTitle);", "IPerson_put_Title_Proxy": "HRESULT WINAPI IPerson_put_Title_Proxy(IPerson *This,BSTR varTitle);", "IAddressee_get_Fields_Proxy": "HRESULT WINAPI IAddressee_get_Fields_Proxy(IAddressee *This,Fields **varFields);", "IAddressee_get_Configuration_Proxy": "HRESULT WINAPI IAddressee_get_Configuration_Proxy(IAddressee *This,IConfiguration **pConfiguration);", "IAddressee_put_Configuration_Proxy": "HRESULT WINAPI IAddressee_put_Configuration_Proxy(IAddressee *This,IConfiguration *varConfiguration);", "IAddressee_putref_Configuration_Proxy": "HRESULT WINAPI IAddressee_putref_Configuration_Proxy(IAddressee *This,IConfiguration *varConfiguration);", "IAddressee_get_DisplayName_Proxy": "HRESULT WINAPI IAddressee_get_DisplayName_Proxy(IAddressee *This,BSTR *pDisplayName);", "IAddressee_put_DisplayName_Proxy": "HRESULT WINAPI IAddressee_put_DisplayName_Proxy(IAddressee *This,BSTR varDisplayName);", "IAddressee_get_EmailAddress_Proxy": "HRESULT WINAPI IAddressee_get_EmailAddress_Proxy(IAddressee *This,BSTR *pEmailAddress);", "IAddressee_put_EmailAddress_Proxy": "HRESULT WINAPI IAddressee_put_EmailAddress_Proxy(IAddressee *This,BSTR varEmailAddress);", "IAddressee_get_DataSource_Proxy": "HRESULT WINAPI IAddressee_get_DataSource_Proxy(IAddressee *This,IDataSource **varDataSource);", "IAddressee_get_DirURL_Proxy": "HRESULT WINAPI IAddressee_get_DirURL_Proxy(IAddressee *This,BSTR *varDirURL);", "IAddressee_get_ResolvedStatus_Proxy": "HRESULT WINAPI IAddressee_get_ResolvedStatus_Proxy(IAddressee *This,CdoResolvedStatus *pResolvedStatus);", "IAddressee_put_ResolvedStatus_Proxy": "HRESULT WINAPI IAddressee_put_ResolvedStatus_Proxy(IAddressee *This,CdoResolvedStatus varResolvedStatus);", "IAddressee_get_ContentClass_Proxy": "HRESULT WINAPI IAddressee_get_ContentClass_Proxy(IAddressee *This,BSTR *varContentClass);", "IAddressee_get_AmbiguousNames_Proxy": "HRESULT WINAPI IAddressee_get_AmbiguousNames_Proxy(IAddressee *This,IAddressees **varAmbiguousNames);", "IAddressee_GetInterface_Proxy": "HRESULT WINAPI IAddressee_GetInterface_Proxy(IAddressee *This,BSTR Interface,IDispatch **ppUnknown);", "IAddressee_GetFreeBusy_Proxy": "HRESULT WINAPI IAddressee_GetFreeBusy_Proxy(IAddressee *This,DATE StartTime,DATE EndTime,__LONG32 Interval,BSTR HTTPHost,BSTR VRoot,BSTR UserName,BSTR Password,BSTR *pbstrRet);", "IAddressee_CheckName_Proxy": "HRESULT WINAPI IAddressee_CheckName_Proxy(IAddressee *This,BSTR Directory,BSTR UserName,BSTR Password,VARIANT_BOOL *pBRet);", "IAddressees_get_Item_Proxy": "HRESULT WINAPI IAddressees_get_Item_Proxy(IAddressees *This,__LONG32 Index,IAddressee **Value);", "IAddressees_get_Count_Proxy": "HRESULT WINAPI IAddressees_get_Count_Proxy(IAddressees *This,__LONG32 *Count);", "IAddressees_get__NewEnum_Proxy": "HRESULT WINAPI IAddressees_get__NewEnum_Proxy(IAddressees *This,IUnknown **Unknown);", "IGetInterface_GetInterface_Proxy": "HRESULT WINAPI IGetInterface_GetInterface_Proxy(IGetInterface *This,BSTR Interface,IDispatch **ppUnknown);", "IGetInterface_GetInterfaceInner_Proxy": "HRESULT WINAPI IGetInterface_GetInterfaceInner_Proxy(IGetInterface *This,BSTR Interface,IDispatch **ppUnknown);", "UnDecorateSymbolName": "DWORD IMAGEAPI WINAPI UnDecorateSymbolName(PCSTR DecoratedName,PSTR UnDecoratedName,DWORD UndecoratedLength,DWORD Flags);", "UnDecorateSymbolNameW": "DWORD IMAGEAPI WINAPI UnDecorateSymbolNameW(PCWSTR DecoratedName,PWSTR UnDecoratedName,DWORD UndecoratedLength,DWORD Flags);", "DbgHelpCreateUserDump": "WINBOOL WINAPI DbgHelpCreateUserDump(LPCSTR FileName,PDBGHELP_CREATE_USER_DUMP_CALLBACK Callback,PVOID UserData);", "DbgHelpCreateUserDumpW": "WINBOOL WINAPI DbgHelpCreateUserDumpW(LPCWSTR FileName,PDBGHELP_CREATE_USER_DUMP_CALLBACK Callback,PVOID UserData);", "MiniDumpWriteDump": "WINBOOL WINAPI MiniDumpWriteDump(HANDLE hProcess,DWORD ProcessId,HANDLE hFile,MINIDUMP_TYPE DumpType,CONST PMINIDUMP_EXCEPTION_INFORMATION ExceptionParam,CONST PMINIDUMP_USER_STREAM_INFORMATION UserStreamParam,CONST PMINIDUMP_CALLBACK_INFORMATION CallbackParam);", "MiniDumpReadDumpStream": "WINBOOL WINAPI MiniDumpReadDumpStream(PVOID BaseOfDump,ULONG StreamNumber,PMINIDUMP_DIRECTORY *Dir,PVOID *StreamPointer,ULONG *StreamSize);", "EnumerateLoadedModulesEx": "WINBOOL WINAPI EnumerateLoadedModulesEx(", "EnumerateLoadedModulesExW": "WINBOOL WINAPI EnumerateLoadedModulesExW(", "SymAddSourceStream": "WINBOOL WINAPI SymAddSourceStream(", "SymAddSourceStreamW": "WINBOOL WINAPI SymAddSourceStreamW(", "SymEnumSourceLines": "WINBOOL WINAPI SymEnumSourceLines(", "SymEnumSourceLinesW": "WINBOOL WINAPI SymEnumSourceLinesW(", "SymEnumTypesByName": "WINBOOL WINAPI SymEnumTypesByName(", "SymEnumTypesByNameW": "WINBOOL WINAPI SymEnumTypesByNameW(", "SymFindDebugInfoFile": "HANDLE WINAPI SymFindDebugInfoFile(", "SymFindDebugInfoFileW": "HANDLE WINAPI SymFindDebugInfoFileW(", "SymFindExecutableImage": "HANDLE WINAPI SymFindExecutableImage(", "SymFindExecutableImageW": "HANDLE WINAPI SymFindExecutableImageW(", "SymFromIndex": "WINBOOL WINAPI SymFromIndex(", "SymFromIndexW": "WINBOOL WINAPI SymFromIndexW(", "SymGetScope": "WINBOOL WINAPI SymGetScope(", "SymGetScopeW": "WINBOOL WINAPI SymGetScopeW(", "SymGetSourceFileFromToken": "WINBOOL WINAPI SymGetSourceFileFromToken(", "SymGetSourceFileFromTokenW": "WINBOOL WINAPI SymGetSourceFileFromTokenW(", "SymGetSourceFileToken": "WINBOOL WINAPI SymGetSourceFileToken(", "SymGetSourceFileTokenW": "WINBOOL WINAPI SymGetSourceFileTokenW(", "SymGetSourceFile": "WINBOOL WINAPI SymGetSourceFile(", "SymGetSourceFileW": "WINBOOL WINAPI SymGetSourceFileW(", "SymGetSourceVarFromToken": "WINBOOL WINAPI SymGetSourceVarFromToken(", "SymGetSourceVarFromTokenW": "WINBOOL WINAPI SymGetSourceVarFromTokenW(", "SymGetSymbolFile": "WINBOOL WINAPI SymGetSymbolFile(", "SymGetSymbolFileW": "WINBOOL WINAPI SymGetSymbolFileW(", "SymNext": "WINBOOL WINAPI SymNext(", "SymNextW": "WINBOOL WINAPI SymNextW(", "SymPrev": "WINBOOL WINAPI SymPrev(", "SymPrevW": "WINBOOL WINAPI SymPrevW(", "SymRefreshModuleList": "WINBOOL WINAPI SymRefreshModuleList(", "SymSearch": "WINBOOL WINAPI SymSearch(", "SymSearchW": "WINBOOL WINAPI SymSearchW(", "SymSrvGetFileIndexString": "WINBOOL WINAPI SymSrvGetFileIndexString(", "SymSrvGetFileIndexStringW": "WINBOOL WINAPI SymSrvGetFileIndexStringW(", "SymSrvGetFileIndexInfo": "WINBOOL WINAPI SymSrvGetFileIndexInfo(", "SymSrvGetFileIndexInfoW": "WINBOOL WINAPI SymSrvGetFileIndexInfoW(", "SymSrvGetFileIndexes": "WINBOOL WINAPI SymSrvGetFileIndexes(", "SymSrvGetFileIndexesW": "WINBOOL WINAPI SymSrvGetFileIndexesW(", "SymSrvGetSupplement": "PCSTR WINAPI SymSrvGetSupplement(", "SymSrvGetSupplementW": "PCWSTR WINAPI SymSrvGetSupplementW(", "SymSrvIsStore": "WINBOOL WINAPI SymSrvIsStore(", "SymSrvIsStoreW": "WINBOOL WINAPI SymSrvIsStoreW(", "SymSrvStoreFile": "PCSTR WINAPI SymSrvStoreFile(", "SymSrvStoreFileW": "PCWSTR WINAPI SymSrvStoreFileW(", "SymSrvStoreSupplement": "PCSTR WINAPI SymSrvStoreSupplement(", "SymSrvStoreSupplementW": "PCWSTR WINAPI SymSrvStoreSupplementW(", "SymSrvDeltaName": "PCSTR WINAPI SymSrvDeltaName(", "SymSrvDeltaNameW": "PCWSTR WINAPI SymSrvDeltaNameW(", "WebAuthNGetApiVersionNumber": "DWORD WINAPI WebAuthNGetApiVersionNumber(void);", "WebAuthNIsUserVerifyingPlatformAuthenticatorAvailable": "HRESULT WINAPI WebAuthNIsUserVerifyingPlatformAuthenticatorAvailable(WINBOOL *pbIsUserVerifyingPlatformAuthenticatorAvailable);", "WebAuthNAuthenticatorMakeCredential": "HRESULT WINAPI WebAuthNAuthenticatorMakeCredential(HWND hWnd, PCWEBAUTHN_RP_ENTITY_INFORMATION pRpInformation, PCWEBAUTHN_USER_ENTITY_INFORMATION pUserInformation, PCWEBAUTHN_COSE_CREDENTIAL_PARAMETERS pPubKeyCredParams, PCWEBAUTHN_CLIENT_DATA pWebAuthNClientData, PCWEBAUTHN_AUTHENTICATOR_MAKE_CREDENTIAL_OPTIONS pWebAuthNMakeCredentialOptions, PWEBAUTHN_CREDENTIAL_ATTESTATION *ppWebAuthNCredentialAttestation);", "WebAuthNAuthenticatorGetAssertion": "HRESULT WINAPI WebAuthNAuthenticatorGetAssertion(HWND hWnd, LPCWSTR pwszRpId, PCWEBAUTHN_CLIENT_DATA pWebAuthNClientData, PCWEBAUTHN_AUTHENTICATOR_GET_ASSERTION_OPTIONS pWebAuthNGetAssertionOptions, PWEBAUTHN_ASSERTION *ppWebAuthNAssertion);", "WebAuthNFreeCredentialAttestation": "void WINAPI WebAuthNFreeCredentialAttestation(PWEBAUTHN_CREDENTIAL_ATTESTATION pWebAuthNCredentialAttestation);", "WebAuthNFreeAssertion": "void WINAPI WebAuthNFreeAssertion(PWEBAUTHN_ASSERTION pWebAuthNAssertion);", "WebAuthNGetCancellationId": "HRESULT WINAPI WebAuthNGetCancellationId(GUID* pCancellationId);", "WebAuthNCancelCurrentOperation": "HRESULT WINAPI WebAuthNCancelCurrentOperation(const GUID* pCancellationId);", "WebAuthNGetErrorName": "PCWSTR WINAPI WebAuthNGetErrorName(HRESULT hr);", "WebAuthNGetW3CExceptionDOMError": "HRESULT WINAPI WebAuthNGetW3CExceptionDOMError(HRESULT hr);", "MFCreateTransformActivate": "HRESULT WINAPI MFCreateTransformActivate(IMFActivate **activate);", "SaferGetPolicyInformation": "WINADVAPI WINBOOL WINAPI SaferGetPolicyInformation(DWORD dwScopeId,SAFER_POLICY_INFO_CLASS SaferPolicyInfoClass,DWORD InfoBufferSize,PVOID InfoBuffer,PDWORD InfoBufferRetSize,LPVOID lpReserved);", "SaferSetPolicyInformation": "WINADVAPI WINBOOL WINAPI SaferSetPolicyInformation(DWORD dwScopeId,SAFER_POLICY_INFO_CLASS SaferPolicyInfoClass,DWORD InfoBufferSize,PVOID InfoBuffer,LPVOID lpReserved);", "SaferCreateLevel": "WINADVAPI WINBOOL WINAPI SaferCreateLevel(DWORD dwScopeId,DWORD dwLevelId,DWORD OpenFlags,SAFER_LEVEL_HANDLE *pLevelHandle,LPVOID lpReserved);", "SaferCloseLevel": "WINADVAPI WINBOOL WINAPI SaferCloseLevel(SAFER_LEVEL_HANDLE hLevelHandle);", "SaferIdentifyLevel": "WINADVAPI WINBOOL WINAPI SaferIdentifyLevel(DWORD dwNumProperties,PSAFER_CODE_PROPERTIES pCodeProperties,SAFER_LEVEL_HANDLE *pLevelHandle,LPVOID lpReserved);", "SaferComputeTokenFromLevel": "WINADVAPI WINBOOL WINAPI SaferComputeTokenFromLevel(SAFER_LEVEL_HANDLE LevelHandle,HANDLE InAccessToken,PHANDLE OutAccessToken,DWORD dwFlags,LPVOID lpReserved);", "SaferGetLevelInformation": "WINADVAPI WINBOOL WINAPI SaferGetLevelInformation(SAFER_LEVEL_HANDLE LevelHandle,SAFER_OBJECT_INFO_CLASS dwInfoType,LPVOID lpQueryBuffer,DWORD dwInBufferSize,LPDWORD lpdwOutBufferSize);", "SaferSetLevelInformation": "WINADVAPI WINBOOL WINAPI SaferSetLevelInformation(SAFER_LEVEL_HANDLE LevelHandle,SAFER_OBJECT_INFO_CLASS dwInfoType,LPVOID lpQueryBuffer,DWORD dwInBufferSize);", "SaferRecordEventLogEntry": "WINADVAPI WINBOOL WINAPI SaferRecordEventLogEntry(SAFER_LEVEL_HANDLE hLevel,LPCWSTR szTargetPath,LPVOID lpReserved);", "SaferiIsExecutableFileType": "WINADVAPI WINBOOL WINAPI SaferiIsExecutableFileType(LPCWSTR szFullPathname,BOOLEAN bFromShellExecute);", "ICertRequestD_Request_Proxy": "HRESULT WINAPI ICertRequestD_Request_Proxy(ICertRequestD *This,DWORD dwFlags,const wchar_t *pwszAuthority,DWORD *pdwRequestId,DWORD *pdwDisposition,const wchar_t *pwszAttributes,const CERTTRANSBLOB *pctbRequest,CERTTRANSBLOB *pctbCertChain,CERTTRANSBLOB *pctbEncodedCert,CERTTRANSBLOB *pctbDispositionMessage);", "ICertRequestD_GetCACert_Proxy": "HRESULT WINAPI ICertRequestD_GetCACert_Proxy(ICertRequestD *This,DWORD fchain,const wchar_t *pwszAuthority,CERTTRANSBLOB *pctbOut);", "ICertRequestD_Ping_Proxy": "HRESULT WINAPI ICertRequestD_Ping_Proxy(ICertRequestD *This,const wchar_t *pwszAuthority);", "ICertRequestD2_Request2_Proxy": "HRESULT WINAPI ICertRequestD2_Request2_Proxy(ICertRequestD2 *This,const wchar_t *pwszAuthority,DWORD dwFlags,const wchar_t *pwszSerialNumber,DWORD *pdwRequestId,DWORD *pdwDisposition,const wchar_t *pwszAttributes,const CERTTRANSBLOB *pctbRequest,CERTTRANSBLOB *pctbFullResponse,CERTTRANSBLOB *pctbEncodedCert,CERTTRANSBLOB *pctbDispositionMessage);", "ICertRequestD2_GetCAProperty_Proxy": "HRESULT WINAPI ICertRequestD2_GetCAProperty_Proxy(ICertRequestD2 *This,const wchar_t *pwszAuthority,LONG PropId,LONG PropIndex,LONG PropType,CERTTRANSBLOB *pctbPropertyValue);", "ICertRequestD2_GetCAPropertyInfo_Proxy": "HRESULT WINAPI ICertRequestD2_GetCAPropertyInfo_Proxy(ICertRequestD2 *This,const wchar_t *pwszAuthority,LONG *pcProperty,CERTTRANSBLOB *pctbPropInfo);", "ICertRequestD2_Ping2_Proxy": "HRESULT WINAPI ICertRequestD2_Ping2_Proxy(ICertRequestD2 *This,const wchar_t *pwszAuthority);", "NetShareAdd": "NET_API_STATUS WINAPI NetShareAdd(LMSTR servername,DWORD level,LPBYTE buf,LPDWORD parm_err);", "NetShareEnum": "NET_API_STATUS WINAPI NetShareEnum(LMSTR servername,DWORD level,LPBYTE *bufptr,DWORD prefmaxlen,LPDWORD entriesread,LPDWORD totalentries,LPDWORD resume_handle);", "NetShareEnumSticky": "NET_API_STATUS WINAPI NetShareEnumSticky(LMSTR servername,DWORD level,LPBYTE *bufptr,DWORD prefmaxlen,LPDWORD entriesread,LPDWORD totalentries,LPDWORD resume_handle);", "NetShareGetInfo": "NET_API_STATUS WINAPI NetShareGetInfo(LMSTR servername,LMSTR netname,DWORD level,LPBYTE *bufptr);", "NetShareSetInfo": "NET_API_STATUS WINAPI NetShareSetInfo(LMSTR servername,LMSTR netname,DWORD level,LPBYTE buf,LPDWORD parm_err);", "NetShareDel": "NET_API_STATUS WINAPI NetShareDel(LMSTR servername,LMSTR netname,DWORD reserved);", "NetShareDelSticky": "NET_API_STATUS WINAPI NetShareDelSticky(LMSTR servername,LMSTR netname,DWORD reserved);", "NetShareCheck": "NET_API_STATUS WINAPI NetShareCheck(LMSTR servername,LMSTR device,LPDWORD type);", "NetSessionEnum": "NET_API_STATUS WINAPI NetSessionEnum(LMSTR servername,LMSTR UncClientName,LMSTR username,DWORD level,LPBYTE *bufptr,DWORD prefmaxlen,LPDWORD entriesread,LPDWORD totalentries,LPDWORD resume_handle);", "NetSessionDel": "NET_API_STATUS WINAPI NetSessionDel(LMSTR servername,LMSTR UncClientName,LMSTR username);", "NetSessionGetInfo": "NET_API_STATUS WINAPI NetSessionGetInfo(LMSTR servername,LMSTR UncClientName,LMSTR username,DWORD level,LPBYTE *bufptr);", "NetConnectionEnum": "NET_API_STATUS WINAPI NetConnectionEnum(LMSTR servername,LMSTR qualifier,DWORD level,LPBYTE *bufptr,DWORD prefmaxlen,LPDWORD entriesread,LPDWORD totalentries,LPDWORD resume_handle);", "NetFileClose": "NET_API_STATUS WINAPI NetFileClose(LMSTR servername,DWORD fileid);", "NetFileEnum": "NET_API_STATUS WINAPI NetFileEnum(LMSTR servername,LMSTR basepath,LMSTR username,DWORD level,LPBYTE *bufptr,DWORD prefmaxlen,LPDWORD entriesread,LPDWORD totalentries,PDWORD_PTR resume_handle);", "NetFileGetInfo": "NET_API_STATUS WINAPI NetFileGetInfo(LMSTR servername,DWORD fileid,DWORD level,LPBYTE *bufptr);", "cmc_send": "CMC_return_code WINAPI cmc_send(CMC_session_id session,CMC_message *message,CMC_flags send_flags,CMC_ui_id ui_id,CMC_extension *send_extensions);", "cmc_send_documents": "CMC_return_code WINAPI cmc_send_documents(CMC_string recipient_addresses,CMC_string subject,CMC_string text_note,CMC_flags send_doc_flags,CMC_string file_paths,CMC_string file_names,CMC_string delimiter,CMC_ui_id ui_id);", "cmc_act_on": "CMC_return_code WINAPI cmc_act_on(CMC_session_id session,CMC_message_reference *message_reference,CMC_enum operation,CMC_flags act_on_flags,CMC_ui_id ui_id,CMC_extension *act_on_extensions);", "cmc_list": "CMC_return_code WINAPI cmc_list(CMC_session_id session,CMC_string message_type,CMC_flags list_flags,CMC_message_reference *seed,CMC_uint32 *count,CMC_ui_id ui_id,CMC_message_summary **result,CMC_extension *list_extensions);", "cmc_read": "CMC_return_code WINAPI cmc_read(CMC_session_id session,CMC_message_reference *message_reference,CMC_flags read_flags,CMC_message **message,CMC_ui_id ui_id,CMC_extension *read_extensions);", "cmc_look_up": "CMC_return_code WINAPI cmc_look_up(CMC_session_id session,CMC_recipient *recipient_in,CMC_flags look_up_flags,CMC_ui_id ui_id,CMC_uint32 *count,CMC_recipient **recipient_out,CMC_extension *look_up_extensions);", "cmc_free": "CMC_return_code WINAPI cmc_free(CMC_buffer memory);", "cmc_logoff": "CMC_return_code WINAPI cmc_logoff(CMC_session_id session,CMC_ui_id ui_id,CMC_flags logoff_flags,CMC_extension *logoff_extensions);", "cmc_logon": "CMC_return_code WINAPI cmc_logon(CMC_string service,CMC_string user,CMC_string password,CMC_object_identifier character_set,CMC_ui_id ui_id,CMC_uint16 caller_cmc_version,CMC_flags logon_flags,CMC_session_id *session,CMC_extension *logon_extensions);", "cmc_query_configuration": "CMC_return_code WINAPI cmc_query_configuration(CMC_session_id session,CMC_enum item,CMC_buffer reference,CMC_extension *config_extensions);", "ICertExit_Initialize_Proxy": "HRESULT WINAPI ICertExit_Initialize_Proxy(ICertExit *This,const BSTR strConfig,LONG *pEventMask);", "ICertExit_Notify_Proxy": "HRESULT WINAPI ICertExit_Notify_Proxy(ICertExit *This,LONG ExitEvent,LONG Context);", "ICertExit_GetDescription_Proxy": "HRESULT WINAPI ICertExit_GetDescription_Proxy(ICertExit *This,BSTR *pstrDescription);", "ICertExit2_GetManageModule_Proxy": "HRESULT WINAPI ICertExit2_GetManageModule_Proxy(ICertExit2 *This,ICertManageModule **ppManageModule);", "IGPM_GetDomain_Proxy": "HRESULT WINAPI IGPM_GetDomain_Proxy(IGPM *This,BSTR bstrDomain,BSTR bstrDomainController,__LONG32 lDCFlags,IGPMDomain **pIGPMDomain);", "IGPM_GetBackupDir_Proxy": "HRESULT WINAPI IGPM_GetBackupDir_Proxy(IGPM *This,BSTR bstrBackupDir,IGPMBackupDir **pIGPMBackupDir);", "IGPM_GetSitesContainer_Proxy": "HRESULT WINAPI IGPM_GetSitesContainer_Proxy(IGPM *This,BSTR bstrForest,BSTR bstrDomain,BSTR bstrDomainController,__LONG32 lDCFlags,IGPMSitesContainer **ppIGPMSitesContainer);", "IGPM_GetRSOP_Proxy": "HRESULT WINAPI IGPM_GetRSOP_Proxy(IGPM *This,GPMRSOPMode gpmRSoPMode,BSTR bstrNamespace,__LONG32 lFlags,IGPMRSOP **ppIGPMRSOP);", "IGPM_CreatePermission_Proxy": "HRESULT WINAPI IGPM_CreatePermission_Proxy(IGPM *This,BSTR bstrTrustee,GPMPermissionType perm,VARIANT_BOOL bInheritable,IGPMPermission **ppPerm);", "IGPM_CreateSearchCriteria_Proxy": "HRESULT WINAPI IGPM_CreateSearchCriteria_Proxy(IGPM *This,IGPMSearchCriteria **ppIGPMSearchCriteria);", "IGPM_CreateTrustee_Proxy": "HRESULT WINAPI IGPM_CreateTrustee_Proxy(IGPM *This,BSTR bstrTrustee,IGPMTrustee **ppIGPMTrustee);", "IGPM_GetClientSideExtensions_Proxy": "HRESULT WINAPI IGPM_GetClientSideExtensions_Proxy(IGPM *This,IGPMCSECollection **ppIGPMCSECollection);", "IGPM_GetConstants_Proxy": "HRESULT WINAPI IGPM_GetConstants_Proxy(IGPM *This,IGPMConstants **ppIGPMConstants);", "IGPM_GetMigrationTable_Proxy": "HRESULT WINAPI IGPM_GetMigrationTable_Proxy(IGPM *This,BSTR bstrMigrationTablePath,IGPMMigrationTable **ppMigrationTable);", "IGPM_CreateMigrationTable_Proxy": "HRESULT WINAPI IGPM_CreateMigrationTable_Proxy(IGPM *This,IGPMMigrationTable **ppMigrationTable);", "IGPM_InitializeReporting_Proxy": "HRESULT WINAPI IGPM_InitializeReporting_Proxy(IGPM *This,BSTR bstrAdmPath);", "IGPMDomain_get_DomainController_Proxy": "HRESULT WINAPI IGPMDomain_get_DomainController_Proxy(IGPMDomain *This,BSTR *pVal);", "IGPMDomain_get_Domain_Proxy": "HRESULT WINAPI IGPMDomain_get_Domain_Proxy(IGPMDomain *This,BSTR *pVal);", "IGPMDomain_CreateGPO_Proxy": "HRESULT WINAPI IGPMDomain_CreateGPO_Proxy(IGPMDomain *This,IGPMGPO **ppNewGPO);", "IGPMDomain_GetGPO_Proxy": "HRESULT WINAPI IGPMDomain_GetGPO_Proxy(IGPMDomain *This,BSTR bstrGuid,IGPMGPO **ppGPO);", "IGPMDomain_SearchGPOs_Proxy": "HRESULT WINAPI IGPMDomain_SearchGPOs_Proxy(IGPMDomain *This,IGPMSearchCriteria *pIGPMSearchCriteria,IGPMGPOCollection **ppIGPMGPOCollection);", "IGPMDomain_RestoreGPO_Proxy": "HRESULT WINAPI IGPMDomain_RestoreGPO_Proxy(IGPMDomain *This,IGPMBackup *pIGPMBackup,__LONG32 lDCFlags,VARIANT *pvarGPMProgress,VARIANT *pvarGPMCancel,IGPMResult **ppIGPMResult);", "IGPMDomain_GetSOM_Proxy": "HRESULT WINAPI IGPMDomain_GetSOM_Proxy(IGPMDomain *This,BSTR bstrPath,IGPMSOM **ppSOM);", "IGPMDomain_SearchSOMs_Proxy": "HRESULT WINAPI IGPMDomain_SearchSOMs_Proxy(IGPMDomain *This,IGPMSearchCriteria *pIGPMSearchCriteria,IGPMSOMCollection **ppIGPMSOMCollection);", "IGPMDomain_GetWMIFilter_Proxy": "HRESULT WINAPI IGPMDomain_GetWMIFilter_Proxy(IGPMDomain *This,BSTR bstrPath,IGPMWMIFilter **ppWMIFilter);", "IGPMDomain_SearchWMIFilters_Proxy": "HRESULT WINAPI IGPMDomain_SearchWMIFilters_Proxy(IGPMDomain *This,IGPMSearchCriteria *pIGPMSearchCriteria,IGPMWMIFilterCollection **ppIGPMWMIFilterCollection);", "IGPMBackupDir_get_BackupDirectory_Proxy": "HRESULT WINAPI IGPMBackupDir_get_BackupDirectory_Proxy(IGPMBackupDir *This,BSTR *pVal);", "IGPMBackupDir_GetBackup_Proxy": "HRESULT WINAPI IGPMBackupDir_GetBackup_Proxy(IGPMBackupDir *This,BSTR bstrID,IGPMBackup **ppBackup);", "IGPMBackupDir_SearchBackups_Proxy": "HRESULT WINAPI IGPMBackupDir_SearchBackups_Proxy(IGPMBackupDir *This,IGPMSearchCriteria *pIGPMSearchCriteria,IGPMBackupCollection **ppIGPMBackupCollection);", "IGPMSitesContainer_get_DomainController_Proxy": "HRESULT WINAPI IGPMSitesContainer_get_DomainController_Proxy(IGPMSitesContainer *This,BSTR *pVal);", "IGPMSitesContainer_get_Domain_Proxy": "HRESULT WINAPI IGPMSitesContainer_get_Domain_Proxy(IGPMSitesContainer *This,BSTR *pVal);", "IGPMSitesContainer_get_Forest_Proxy": "HRESULT WINAPI IGPMSitesContainer_get_Forest_Proxy(IGPMSitesContainer *This,BSTR *pVal);", "IGPMSitesContainer_GetSite_Proxy": "HRESULT WINAPI IGPMSitesContainer_GetSite_Proxy(IGPMSitesContainer *This,BSTR bstrSiteName,IGPMSOM **ppSOM);", "IGPMSitesContainer_SearchSites_Proxy": "HRESULT WINAPI IGPMSitesContainer_SearchSites_Proxy(IGPMSitesContainer *This,IGPMSearchCriteria *pIGPMSearchCriteria,IGPMSOMCollection **ppIGPMSOMCollection);", "IGPMSearchCriteria_Add_Proxy": "HRESULT WINAPI IGPMSearchCriteria_Add_Proxy(IGPMSearchCriteria *This,GPMSearchProperty searchProperty,GPMSearchOperation searchOperation,VARIANT varValue);", "IGPMTrustee_get_TrusteeSid_Proxy": "HRESULT WINAPI IGPMTrustee_get_TrusteeSid_Proxy(IGPMTrustee *This,BSTR *bstrVal);", "IGPMTrustee_get_TrusteeName_Proxy": "HRESULT WINAPI IGPMTrustee_get_TrusteeName_Proxy(IGPMTrustee *This,BSTR *bstrVal);", "IGPMTrustee_get_TrusteeDomain_Proxy": "HRESULT WINAPI IGPMTrustee_get_TrusteeDomain_Proxy(IGPMTrustee *This,BSTR *bstrVal);", "IGPMTrustee_get_TrusteeDSPath_Proxy": "HRESULT WINAPI IGPMTrustee_get_TrusteeDSPath_Proxy(IGPMTrustee *This,BSTR *pVal);", "IGPMTrustee_get_TrusteeType_Proxy": "HRESULT WINAPI IGPMTrustee_get_TrusteeType_Proxy(IGPMTrustee *This,__LONG32 *lVal);", "IGPMPermission_get_Inherited_Proxy": "HRESULT WINAPI IGPMPermission_get_Inherited_Proxy(IGPMPermission *This,VARIANT_BOOL *pVal);", "IGPMPermission_get_Inheritable_Proxy": "HRESULT WINAPI IGPMPermission_get_Inheritable_Proxy(IGPMPermission *This,VARIANT_BOOL *pVal);", "IGPMPermission_get_Denied_Proxy": "HRESULT WINAPI IGPMPermission_get_Denied_Proxy(IGPMPermission *This,VARIANT_BOOL *pVal);", "IGPMPermission_get_Permission_Proxy": "HRESULT WINAPI IGPMPermission_get_Permission_Proxy(IGPMPermission *This,GPMPermissionType *pVal);", "IGPMPermission_get_Trustee_Proxy": "HRESULT WINAPI IGPMPermission_get_Trustee_Proxy(IGPMPermission *This,IGPMTrustee **ppIGPMTrustee);", "IGPMSecurityInfo_get_Count_Proxy": "HRESULT WINAPI IGPMSecurityInfo_get_Count_Proxy(IGPMSecurityInfo *This,__LONG32 *pVal);", "IGPMSecurityInfo_get_Item_Proxy": "HRESULT WINAPI IGPMSecurityInfo_get_Item_Proxy(IGPMSecurityInfo *This,__LONG32 lIndex,VARIANT *pVal);", "IGPMSecurityInfo_get__NewEnum_Proxy": "HRESULT WINAPI IGPMSecurityInfo_get__NewEnum_Proxy(IGPMSecurityInfo *This,IEnumVARIANT **ppEnum);", "IGPMSecurityInfo_Add_Proxy": "HRESULT WINAPI IGPMSecurityInfo_Add_Proxy(IGPMSecurityInfo *This,IGPMPermission *pPerm);", "IGPMSecurityInfo_Remove_Proxy": "HRESULT WINAPI IGPMSecurityInfo_Remove_Proxy(IGPMSecurityInfo *This,IGPMPermission *pPerm);", "IGPMSecurityInfo_RemoveTrustee_Proxy": "HRESULT WINAPI IGPMSecurityInfo_RemoveTrustee_Proxy(IGPMSecurityInfo *This,BSTR bstrTrustee);", "IGPMBackup_get_ID_Proxy": "HRESULT WINAPI IGPMBackup_get_ID_Proxy(IGPMBackup *This,BSTR *pVal);", "IGPMBackup_get_GPOID_Proxy": "HRESULT WINAPI IGPMBackup_get_GPOID_Proxy(IGPMBackup *This,BSTR *pVal);", "IGPMBackup_get_GPODomain_Proxy": "HRESULT WINAPI IGPMBackup_get_GPODomain_Proxy(IGPMBackup *This,BSTR *pVal);", "IGPMBackup_get_GPODisplayName_Proxy": "HRESULT WINAPI IGPMBackup_get_GPODisplayName_Proxy(IGPMBackup *This,BSTR *pVal);", "IGPMBackup_get_Timestamp_Proxy": "HRESULT WINAPI IGPMBackup_get_Timestamp_Proxy(IGPMBackup *This,DATE *pVal);", "IGPMBackup_get_Comment_Proxy": "HRESULT WINAPI IGPMBackup_get_Comment_Proxy(IGPMBackup *This,BSTR *pVal);", "IGPMBackup_get_BackupDir_Proxy": "HRESULT WINAPI IGPMBackup_get_BackupDir_Proxy(IGPMBackup *This,BSTR *pVal);", "IGPMBackup_Delete_Proxy": "HRESULT WINAPI IGPMBackup_Delete_Proxy(IGPMBackup *This);", "IGPMBackup_GenerateReport_Proxy": "HRESULT WINAPI IGPMBackup_GenerateReport_Proxy(IGPMBackup *This,GPMReportType gpmReportType,VARIANT *pvarGPMProgress,VARIANT *pvarGPMCancel,IGPMResult **ppIGPMResult);", "IGPMBackup_GenerateReportToFile_Proxy": "HRESULT WINAPI IGPMBackup_GenerateReportToFile_Proxy(IGPMBackup *This,GPMReportType gpmReportType,BSTR bstrTargetFilePath,IGPMResult **ppIGPMResult);", "IGPMBackupCollection_get_Count_Proxy": "HRESULT WINAPI IGPMBackupCollection_get_Count_Proxy(IGPMBackupCollection *This,__LONG32 *pVal);", "IGPMBackupCollection_get_Item_Proxy": "HRESULT WINAPI IGPMBackupCollection_get_Item_Proxy(IGPMBackupCollection *This,__LONG32 lIndex,VARIANT *pVal);", "IGPMBackupCollection_get__NewEnum_Proxy": "HRESULT WINAPI IGPMBackupCollection_get__NewEnum_Proxy(IGPMBackupCollection *This,IEnumVARIANT **ppIGPMBackup);", "IGPMSOM_get_GPOInheritanceBlocked_Proxy": "HRESULT WINAPI IGPMSOM_get_GPOInheritanceBlocked_Proxy(IGPMSOM *This,VARIANT_BOOL *pVal);", "IGPMSOM_put_GPOInheritanceBlocked_Proxy": "HRESULT WINAPI IGPMSOM_put_GPOInheritanceBlocked_Proxy(IGPMSOM *This,VARIANT_BOOL newVal);", "IGPMSOM_get_Name_Proxy": "HRESULT WINAPI IGPMSOM_get_Name_Proxy(IGPMSOM *This,BSTR *pVal);", "IGPMSOM_get_Path_Proxy": "HRESULT WINAPI IGPMSOM_get_Path_Proxy(IGPMSOM *This,BSTR *pVal);", "IGPMSOM_CreateGPOLink_Proxy": "HRESULT WINAPI IGPMSOM_CreateGPOLink_Proxy(IGPMSOM *This,__LONG32 lLinkPos,IGPMGPO *pGPO,IGPMGPOLink **ppNewGPOLink);", "IGPMSOM_get_Type_Proxy": "HRESULT WINAPI IGPMSOM_get_Type_Proxy(IGPMSOM *This,GPMSOMType *pVal);", "IGPMSOM_GetGPOLinks_Proxy": "HRESULT WINAPI IGPMSOM_GetGPOLinks_Proxy(IGPMSOM *This,IGPMGPOLinksCollection **ppGPOLinks);", "IGPMSOM_GetInheritedGPOLinks_Proxy": "HRESULT WINAPI IGPMSOM_GetInheritedGPOLinks_Proxy(IGPMSOM *This,IGPMGPOLinksCollection **ppGPOLinks);", "IGPMSOM_GetSecurityInfo_Proxy": "HRESULT WINAPI IGPMSOM_GetSecurityInfo_Proxy(IGPMSOM *This,IGPMSecurityInfo **ppSecurityInfo);", "IGPMSOM_SetSecurityInfo_Proxy": "HRESULT WINAPI IGPMSOM_SetSecurityInfo_Proxy(IGPMSOM *This,IGPMSecurityInfo *pSecurityInfo);", "IGPMSOMCollection_get_Count_Proxy": "HRESULT WINAPI IGPMSOMCollection_get_Count_Proxy(IGPMSOMCollection *This,__LONG32 *pVal);", "IGPMSOMCollection_get_Item_Proxy": "HRESULT WINAPI IGPMSOMCollection_get_Item_Proxy(IGPMSOMCollection *This,__LONG32 lIndex,VARIANT *pVal);", "IGPMSOMCollection_get__NewEnum_Proxy": "HRESULT WINAPI IGPMSOMCollection_get__NewEnum_Proxy(IGPMSOMCollection *This,IEnumVARIANT **ppIGPMSOM);", "IGPMWMIFilter_get_Path_Proxy": "HRESULT WINAPI IGPMWMIFilter_get_Path_Proxy(IGPMWMIFilter *This,BSTR *pVal);", "IGPMWMIFilter_put_Name_Proxy": "HRESULT WINAPI IGPMWMIFilter_put_Name_Proxy(IGPMWMIFilter *This,BSTR newVal);", "IGPMWMIFilter_get_Name_Proxy": "HRESULT WINAPI IGPMWMIFilter_get_Name_Proxy(IGPMWMIFilter *This,BSTR *pVal);", "IGPMWMIFilter_put_Description_Proxy": "HRESULT WINAPI IGPMWMIFilter_put_Description_Proxy(IGPMWMIFilter *This,BSTR newVal);", "IGPMWMIFilter_get_Description_Proxy": "HRESULT WINAPI IGPMWMIFilter_get_Description_Proxy(IGPMWMIFilter *This,BSTR *pVal);", "IGPMWMIFilter_GetQueryList_Proxy": "HRESULT WINAPI IGPMWMIFilter_GetQueryList_Proxy(IGPMWMIFilter *This,VARIANT *pQryList);", "IGPMWMIFilter_GetSecurityInfo_Proxy": "HRESULT WINAPI IGPMWMIFilter_GetSecurityInfo_Proxy(IGPMWMIFilter *This,IGPMSecurityInfo **ppSecurityInfo);", "IGPMWMIFilter_SetSecurityInfo_Proxy": "HRESULT WINAPI IGPMWMIFilter_SetSecurityInfo_Proxy(IGPMWMIFilter *This,IGPMSecurityInfo *pSecurityInfo);", "IGPMWMIFilterCollection_get_Count_Proxy": "HRESULT WINAPI IGPMWMIFilterCollection_get_Count_Proxy(IGPMWMIFilterCollection *This,__LONG32 *pVal);", "IGPMWMIFilterCollection_get_Item_Proxy": "HRESULT WINAPI IGPMWMIFilterCollection_get_Item_Proxy(IGPMWMIFilterCollection *This,__LONG32 lIndex,VARIANT *pVal);", "IGPMWMIFilterCollection_get__NewEnum_Proxy": "HRESULT WINAPI IGPMWMIFilterCollection_get__NewEnum_Proxy(IGPMWMIFilterCollection *This,IEnumVARIANT **pVal);", "IGPMRSOP_get_Mode_Proxy": "HRESULT WINAPI IGPMRSOP_get_Mode_Proxy(IGPMRSOP *This,GPMRSOPMode *pVal);", "IGPMRSOP_get_Namespace_Proxy": "HRESULT WINAPI IGPMRSOP_get_Namespace_Proxy(IGPMRSOP *This,BSTR *bstrVal);", "IGPMRSOP_put_LoggingComputer_Proxy": "HRESULT WINAPI IGPMRSOP_put_LoggingComputer_Proxy(IGPMRSOP *This,BSTR bstrVal);", "IGPMRSOP_get_LoggingComputer_Proxy": "HRESULT WINAPI IGPMRSOP_get_LoggingComputer_Proxy(IGPMRSOP *This,BSTR *bstrVal);", "IGPMRSOP_put_LoggingUser_Proxy": "HRESULT WINAPI IGPMRSOP_put_LoggingUser_Proxy(IGPMRSOP *This,BSTR bstrVal);", "IGPMRSOP_get_LoggingUser_Proxy": "HRESULT WINAPI IGPMRSOP_get_LoggingUser_Proxy(IGPMRSOP *This,BSTR *bstrVal);", "IGPMRSOP_put_LoggingFlags_Proxy": "HRESULT WINAPI IGPMRSOP_put_LoggingFlags_Proxy(IGPMRSOP *This,__LONG32 lVal);", "IGPMRSOP_get_LoggingFlags_Proxy": "HRESULT WINAPI IGPMRSOP_get_LoggingFlags_Proxy(IGPMRSOP *This,__LONG32 *lVal);", "IGPMRSOP_put_PlanningFlags_Proxy": "HRESULT WINAPI IGPMRSOP_put_PlanningFlags_Proxy(IGPMRSOP *This,__LONG32 lVal);", "IGPMRSOP_get_PlanningFlags_Proxy": "HRESULT WINAPI IGPMRSOP_get_PlanningFlags_Proxy(IGPMRSOP *This,__LONG32 *lVal);", "IGPMRSOP_put_PlanningDomainController_Proxy": "HRESULT WINAPI IGPMRSOP_put_PlanningDomainController_Proxy(IGPMRSOP *This,BSTR bstrVal);", "IGPMRSOP_get_PlanningDomainController_Proxy": "HRESULT WINAPI IGPMRSOP_get_PlanningDomainController_Proxy(IGPMRSOP *This,BSTR *bstrVal);", "IGPMRSOP_put_PlanningSiteName_Proxy": "HRESULT WINAPI IGPMRSOP_put_PlanningSiteName_Proxy(IGPMRSOP *This,BSTR bstrVal);", "IGPMRSOP_get_PlanningSiteName_Proxy": "HRESULT WINAPI IGPMRSOP_get_PlanningSiteName_Proxy(IGPMRSOP *This,BSTR *bstrVal);", "IGPMRSOP_put_PlanningUser_Proxy": "HRESULT WINAPI IGPMRSOP_put_PlanningUser_Proxy(IGPMRSOP *This,BSTR bstrVal);", "IGPMRSOP_get_PlanningUser_Proxy": "HRESULT WINAPI IGPMRSOP_get_PlanningUser_Proxy(IGPMRSOP *This,BSTR *bstrVal);", "IGPMRSOP_put_PlanningUserSOM_Proxy": "HRESULT WINAPI IGPMRSOP_put_PlanningUserSOM_Proxy(IGPMRSOP *This,BSTR bstrVal);", "IGPMRSOP_get_PlanningUserSOM_Proxy": "HRESULT WINAPI IGPMRSOP_get_PlanningUserSOM_Proxy(IGPMRSOP *This,BSTR *bstrVal);", "IGPMRSOP_put_PlanningUserWMIFilters_Proxy": "HRESULT WINAPI IGPMRSOP_put_PlanningUserWMIFilters_Proxy(IGPMRSOP *This,VARIANT varVal);", "IGPMRSOP_get_PlanningUserWMIFilters_Proxy": "HRESULT WINAPI IGPMRSOP_get_PlanningUserWMIFilters_Proxy(IGPMRSOP *This,VARIANT *varVal);", "IGPMRSOP_put_PlanningUserSecurityGroups_Proxy": "HRESULT WINAPI IGPMRSOP_put_PlanningUserSecurityGroups_Proxy(IGPMRSOP *This,VARIANT varVal);", "IGPMRSOP_get_PlanningUserSecurityGroups_Proxy": "HRESULT WINAPI IGPMRSOP_get_PlanningUserSecurityGroups_Proxy(IGPMRSOP *This,VARIANT *varVal);", "IGPMRSOP_put_PlanningComputer_Proxy": "HRESULT WINAPI IGPMRSOP_put_PlanningComputer_Proxy(IGPMRSOP *This,BSTR bstrVal);", "IGPMRSOP_get_PlanningComputer_Proxy": "HRESULT WINAPI IGPMRSOP_get_PlanningComputer_Proxy(IGPMRSOP *This,BSTR *bstrVal);", "IGPMRSOP_put_PlanningComputerSOM_Proxy": "HRESULT WINAPI IGPMRSOP_put_PlanningComputerSOM_Proxy(IGPMRSOP *This,BSTR bstrVal);", "IGPMRSOP_get_PlanningComputerSOM_Proxy": "HRESULT WINAPI IGPMRSOP_get_PlanningComputerSOM_Proxy(IGPMRSOP *This,BSTR *bstrVal);", "IGPMRSOP_put_PlanningComputerWMIFilters_Proxy": "HRESULT WINAPI IGPMRSOP_put_PlanningComputerWMIFilters_Proxy(IGPMRSOP *This,VARIANT varVal);", "IGPMRSOP_get_PlanningComputerWMIFilters_Proxy": "HRESULT WINAPI IGPMRSOP_get_PlanningComputerWMIFilters_Proxy(IGPMRSOP *This,VARIANT *varVal);", "IGPMRSOP_put_PlanningComputerSecurityGroups_Proxy": "HRESULT WINAPI IGPMRSOP_put_PlanningComputerSecurityGroups_Proxy(IGPMRSOP *This,VARIANT varVal);", "IGPMRSOP_get_PlanningComputerSecurityGroups_Proxy": "HRESULT WINAPI IGPMRSOP_get_PlanningComputerSecurityGroups_Proxy(IGPMRSOP *This,VARIANT *varVal);", "IGPMRSOP_LoggingEnumerateUsers_Proxy": "HRESULT WINAPI IGPMRSOP_LoggingEnumerateUsers_Proxy(IGPMRSOP *This,VARIANT *varVal);", "IGPMRSOP_CreateQueryResults_Proxy": "HRESULT WINAPI IGPMRSOP_CreateQueryResults_Proxy(IGPMRSOP *This);", "IGPMRSOP_ReleaseQueryResults_Proxy": "HRESULT WINAPI IGPMRSOP_ReleaseQueryResults_Proxy(IGPMRSOP *This);", "IGPMRSOP_GenerateReport_Proxy": "HRESULT WINAPI IGPMRSOP_GenerateReport_Proxy(IGPMRSOP *This,GPMReportType gpmReportType,VARIANT *pvarGPMProgress,VARIANT *pvarGPMCancel,IGPMResult **ppIGPMResult);", "IGPMRSOP_GenerateReportToFile_Proxy": "HRESULT WINAPI IGPMRSOP_GenerateReportToFile_Proxy(IGPMRSOP *This,GPMReportType gpmReportType,BSTR bstrTargetFilePath,IGPMResult **ppIGPMResult);", "IGPMGPO_get_DisplayName_Proxy": "HRESULT WINAPI IGPMGPO_get_DisplayName_Proxy(IGPMGPO *This,BSTR *pVal);", "IGPMGPO_put_DisplayName_Proxy": "HRESULT WINAPI IGPMGPO_put_DisplayName_Proxy(IGPMGPO *This,BSTR newVal);", "IGPMGPO_get_Path_Proxy": "HRESULT WINAPI IGPMGPO_get_Path_Proxy(IGPMGPO *This,BSTR *pVal);", "IGPMGPO_get_ID_Proxy": "HRESULT WINAPI IGPMGPO_get_ID_Proxy(IGPMGPO *This,BSTR *pVal);", "IGPMGPO_get_DomainName_Proxy": "HRESULT WINAPI IGPMGPO_get_DomainName_Proxy(IGPMGPO *This,BSTR *pVal);", "IGPMGPO_get_CreationTime_Proxy": "HRESULT WINAPI IGPMGPO_get_CreationTime_Proxy(IGPMGPO *This,DATE *pDate);", "IGPMGPO_get_ModificationTime_Proxy": "HRESULT WINAPI IGPMGPO_get_ModificationTime_Proxy(IGPMGPO *This,DATE *pDate);", "IGPMGPO_get_UserDSVersionNumber_Proxy": "HRESULT WINAPI IGPMGPO_get_UserDSVersionNumber_Proxy(IGPMGPO *This,__LONG32 *pVal);", "IGPMGPO_get_ComputerDSVersionNumber_Proxy": "HRESULT WINAPI IGPMGPO_get_ComputerDSVersionNumber_Proxy(IGPMGPO *This,__LONG32 *pVal);", "IGPMGPO_get_UserSysvolVersionNumber_Proxy": "HRESULT WINAPI IGPMGPO_get_UserSysvolVersionNumber_Proxy(IGPMGPO *This,__LONG32 *pVal);", "IGPMGPO_get_ComputerSysvolVersionNumber_Proxy": "HRESULT WINAPI IGPMGPO_get_ComputerSysvolVersionNumber_Proxy(IGPMGPO *This,__LONG32 *pVal);", "IGPMGPO_GetWMIFilter_Proxy": "HRESULT WINAPI IGPMGPO_GetWMIFilter_Proxy(IGPMGPO *This,IGPMWMIFilter **ppIGPMWMIFilter);", "IGPMGPO_SetWMIFilter_Proxy": "HRESULT WINAPI IGPMGPO_SetWMIFilter_Proxy(IGPMGPO *This,IGPMWMIFilter *pIGPMWMIFilter);", "IGPMGPO_SetUserEnabled_Proxy": "HRESULT WINAPI IGPMGPO_SetUserEnabled_Proxy(IGPMGPO *This,VARIANT_BOOL vbEnabled);", "IGPMGPO_SetComputerEnabled_Proxy": "HRESULT WINAPI IGPMGPO_SetComputerEnabled_Proxy(IGPMGPO *This,VARIANT_BOOL vbEnabled);", "IGPMGPO_IsUserEnabled_Proxy": "HRESULT WINAPI IGPMGPO_IsUserEnabled_Proxy(IGPMGPO *This,VARIANT_BOOL *pvbEnabled);", "IGPMGPO_IsComputerEnabled_Proxy": "HRESULT WINAPI IGPMGPO_IsComputerEnabled_Proxy(IGPMGPO *This,VARIANT_BOOL *pvbEnabled);", "IGPMGPO_GetSecurityInfo_Proxy": "HRESULT WINAPI IGPMGPO_GetSecurityInfo_Proxy(IGPMGPO *This,IGPMSecurityInfo **ppSecurityInfo);", "IGPMGPO_SetSecurityInfo_Proxy": "HRESULT WINAPI IGPMGPO_SetSecurityInfo_Proxy(IGPMGPO *This,IGPMSecurityInfo *pSecurityInfo);", "IGPMGPO_Delete_Proxy": "HRESULT WINAPI IGPMGPO_Delete_Proxy(IGPMGPO *This);", "IGPMGPO_Backup_Proxy": "HRESULT WINAPI IGPMGPO_Backup_Proxy(IGPMGPO *This,BSTR bstrBackupDir,BSTR bstrComment,VARIANT *pvarGPMProgress,VARIANT *pvarGPMCancel,IGPMResult **ppIGPMResult);", "IGPMGPO_Import_Proxy": "HRESULT WINAPI IGPMGPO_Import_Proxy(IGPMGPO *This,__LONG32 lFlags,IGPMBackup *pIGPMBackup,VARIANT *pvarMigrationTable,VARIANT *pvarGPMProgress,VARIANT *pvarGPMCancel,IGPMResult **ppIGPMResult);", "IGPMGPO_GenerateReport_Proxy": "HRESULT WINAPI IGPMGPO_GenerateReport_Proxy(IGPMGPO *This,GPMReportType gpmReportType,VARIANT *pvarGPMProgress,VARIANT *pvarGPMCancel,IGPMResult **ppIGPMResult);", "IGPMGPO_GenerateReportToFile_Proxy": "HRESULT WINAPI IGPMGPO_GenerateReportToFile_Proxy(IGPMGPO *This,GPMReportType gpmReportType,BSTR bstrTargetFilePath,IGPMResult **ppIGPMResult);", "IGPMGPO_CopyTo_Proxy": "HRESULT WINAPI IGPMGPO_CopyTo_Proxy(IGPMGPO *This,__LONG32 lFlags,IGPMDomain *pIGPMDomain,VARIANT *pvarNewDisplayName,VARIANT *pvarMigrationTable,VARIANT *pvarGPMProgress,VARIANT *pvarGPMCancel,IGPMResult **ppIGPMResult);", "IGPMGPO_SetSecurityDescriptor_Proxy": "HRESULT WINAPI IGPMGPO_SetSecurityDescriptor_Proxy(IGPMGPO *This,__LONG32 lFlags,IDispatch *pSD);", "IGPMGPO_GetSecurityDescriptor_Proxy": "HRESULT WINAPI IGPMGPO_GetSecurityDescriptor_Proxy(IGPMGPO *This,__LONG32 lFlags,IDispatch **ppSD);", "IGPMGPO_IsACLConsistent_Proxy": "HRESULT WINAPI IGPMGPO_IsACLConsistent_Proxy(IGPMGPO *This,VARIANT_BOOL *pvbConsistent);", "IGPMGPO_MakeACLConsistent_Proxy": "HRESULT WINAPI IGPMGPO_MakeACLConsistent_Proxy(IGPMGPO *This);", "IGPMGPOCollection_get_Count_Proxy": "HRESULT WINAPI IGPMGPOCollection_get_Count_Proxy(IGPMGPOCollection *This,__LONG32 *pVal);", "IGPMGPOCollection_get_Item_Proxy": "HRESULT WINAPI IGPMGPOCollection_get_Item_Proxy(IGPMGPOCollection *This,__LONG32 lIndex,VARIANT *pVal);", "IGPMGPOCollection_get__NewEnum_Proxy": "HRESULT WINAPI IGPMGPOCollection_get__NewEnum_Proxy(IGPMGPOCollection *This,IEnumVARIANT **ppIGPMGPOs);", "IGPMGPOLink_get_GPOID_Proxy": "HRESULT WINAPI IGPMGPOLink_get_GPOID_Proxy(IGPMGPOLink *This,BSTR *pVal);", "IGPMGPOLink_get_GPODomain_Proxy": "HRESULT WINAPI IGPMGPOLink_get_GPODomain_Proxy(IGPMGPOLink *This,BSTR *pVal);", "IGPMGPOLink_get_Enabled_Proxy": "HRESULT WINAPI IGPMGPOLink_get_Enabled_Proxy(IGPMGPOLink *This,VARIANT_BOOL *pVal);", "IGPMGPOLink_put_Enabled_Proxy": "HRESULT WINAPI IGPMGPOLink_put_Enabled_Proxy(IGPMGPOLink *This,VARIANT_BOOL newVal);", "IGPMGPOLink_get_Enforced_Proxy": "HRESULT WINAPI IGPMGPOLink_get_Enforced_Proxy(IGPMGPOLink *This,VARIANT_BOOL *pVal);", "IGPMGPOLink_put_Enforced_Proxy": "HRESULT WINAPI IGPMGPOLink_put_Enforced_Proxy(IGPMGPOLink *This,VARIANT_BOOL newVal);", "IGPMGPOLink_get_SOMLinkOrder_Proxy": "HRESULT WINAPI IGPMGPOLink_get_SOMLinkOrder_Proxy(IGPMGPOLink *This,__LONG32 *lVal);", "IGPMGPOLink_get_SOM_Proxy": "HRESULT WINAPI IGPMGPOLink_get_SOM_Proxy(IGPMGPOLink *This,IGPMSOM **ppIGPMSOM);", "IGPMGPOLink_Delete_Proxy": "HRESULT WINAPI IGPMGPOLink_Delete_Proxy(IGPMGPOLink *This);", "IGPMGPOLinksCollection_get_Count_Proxy": "HRESULT WINAPI IGPMGPOLinksCollection_get_Count_Proxy(IGPMGPOLinksCollection *This,__LONG32 *pVal);", "IGPMGPOLinksCollection_get_Item_Proxy": "HRESULT WINAPI IGPMGPOLinksCollection_get_Item_Proxy(IGPMGPOLinksCollection *This,__LONG32 lIndex,VARIANT *pVal);", "IGPMGPOLinksCollection_get__NewEnum_Proxy": "HRESULT WINAPI IGPMGPOLinksCollection_get__NewEnum_Proxy(IGPMGPOLinksCollection *This,IEnumVARIANT **ppIGPMLinks);", "IGPMCSECollection_get_Count_Proxy": "HRESULT WINAPI IGPMCSECollection_get_Count_Proxy(IGPMCSECollection *This,__LONG32 *pVal);", "IGPMCSECollection_get_Item_Proxy": "HRESULT WINAPI IGPMCSECollection_get_Item_Proxy(IGPMCSECollection *This,__LONG32 lIndex,VARIANT *pVal);", "IGPMCSECollection_get__NewEnum_Proxy": "HRESULT WINAPI IGPMCSECollection_get__NewEnum_Proxy(IGPMCSECollection *This,IEnumVARIANT **ppIGPMCSEs);", "IGPMClientSideExtension_get_ID_Proxy": "HRESULT WINAPI IGPMClientSideExtension_get_ID_Proxy(IGPMClientSideExtension *This,BSTR *pVal);", "IGPMClientSideExtension_get_DisplayName_Proxy": "HRESULT WINAPI IGPMClientSideExtension_get_DisplayName_Proxy(IGPMClientSideExtension *This,BSTR *pVal);", "IGPMClientSideExtension_IsUserEnabled_Proxy": "HRESULT WINAPI IGPMClientSideExtension_IsUserEnabled_Proxy(IGPMClientSideExtension *This,VARIANT_BOOL *pvbEnabled);", "IGPMClientSideExtension_IsComputerEnabled_Proxy": "HRESULT WINAPI IGPMClientSideExtension_IsComputerEnabled_Proxy(IGPMClientSideExtension *This,VARIANT_BOOL *pvbEnabled);", "IGPMAsyncCancel_Cancel_Proxy": "HRESULT WINAPI IGPMAsyncCancel_Cancel_Proxy(IGPMAsyncCancel *This);", "IGPMAsyncProgress_Status_Proxy": "HRESULT WINAPI IGPMAsyncProgress_Status_Proxy(IGPMAsyncProgress *This,__LONG32 lProgressNumerator,__LONG32 lProgressDenominator,HRESULT hrStatus,VARIANT *pResult,IGPMStatusMsgCollection *ppIGPMStatusMsgCollection);", "IGPMStatusMsgCollection_get_Count_Proxy": "HRESULT WINAPI IGPMStatusMsgCollection_get_Count_Proxy(IGPMStatusMsgCollection *This,__LONG32 *pVal);", "IGPMStatusMsgCollection_get_Item_Proxy": "HRESULT WINAPI IGPMStatusMsgCollection_get_Item_Proxy(IGPMStatusMsgCollection *This,__LONG32 lIndex,VARIANT *pVal);", "IGPMStatusMsgCollection_get__NewEnum_Proxy": "HRESULT WINAPI IGPMStatusMsgCollection_get__NewEnum_Proxy(IGPMStatusMsgCollection *This,IEnumVARIANT **pVal);", "IGPMStatusMessage_get_ObjectPath_Proxy": "HRESULT WINAPI IGPMStatusMessage_get_ObjectPath_Proxy(IGPMStatusMessage *This,BSTR *pVal);", "IGPMStatusMessage_ErrorCode_Proxy": "HRESULT WINAPI IGPMStatusMessage_ErrorCode_Proxy(IGPMStatusMessage *This);", "IGPMStatusMessage_get_ExtensionName_Proxy": "HRESULT WINAPI IGPMStatusMessage_get_ExtensionName_Proxy(IGPMStatusMessage *This,BSTR *pVal);", "IGPMStatusMessage_get_SettingsName_Proxy": "HRESULT WINAPI IGPMStatusMessage_get_SettingsName_Proxy(IGPMStatusMessage *This,BSTR *pVal);", "IGPMStatusMessage_OperationCode_Proxy": "HRESULT WINAPI IGPMStatusMessage_OperationCode_Proxy(IGPMStatusMessage *This);", "IGPMStatusMessage_get_Message_Proxy": "HRESULT WINAPI IGPMStatusMessage_get_Message_Proxy(IGPMStatusMessage *This,BSTR *pVal);", "IGPMConstants_get_PermGPOApply_Proxy": "HRESULT WINAPI IGPMConstants_get_PermGPOApply_Proxy(IGPMConstants *This,GPMPermissionType *pVal);", "IGPMConstants_get_PermGPORead_Proxy": "HRESULT WINAPI IGPMConstants_get_PermGPORead_Proxy(IGPMConstants *This,GPMPermissionType *pVal);", "IGPMConstants_get_PermGPOEdit_Proxy": "HRESULT WINAPI IGPMConstants_get_PermGPOEdit_Proxy(IGPMConstants *This,GPMPermissionType *pVal);", "IGPMConstants_get_PermGPOEditSecurityAndDelete_Proxy": "HRESULT WINAPI IGPMConstants_get_PermGPOEditSecurityAndDelete_Proxy(IGPMConstants *This,GPMPermissionType *pVal);", "IGPMConstants_get_PermGPOCustom_Proxy": "HRESULT WINAPI IGPMConstants_get_PermGPOCustom_Proxy(IGPMConstants *This,GPMPermissionType *pVal);", "IGPMConstants_get_PermWMIFilterEdit_Proxy": "HRESULT WINAPI IGPMConstants_get_PermWMIFilterEdit_Proxy(IGPMConstants *This,GPMPermissionType *pVal);", "IGPMConstants_get_PermWMIFilterFullControl_Proxy": "HRESULT WINAPI IGPMConstants_get_PermWMIFilterFullControl_Proxy(IGPMConstants *This,GPMPermissionType *pVal);", "IGPMConstants_get_PermWMIFilterCustom_Proxy": "HRESULT WINAPI IGPMConstants_get_PermWMIFilterCustom_Proxy(IGPMConstants *This,GPMPermissionType *pVal);", "IGPMConstants_get_PermSOMLink_Proxy": "HRESULT WINAPI IGPMConstants_get_PermSOMLink_Proxy(IGPMConstants *This,GPMPermissionType *pVal);", "IGPMConstants_get_PermSOMLogging_Proxy": "HRESULT WINAPI IGPMConstants_get_PermSOMLogging_Proxy(IGPMConstants *This,GPMPermissionType *pVal);", "IGPMConstants_get_PermSOMPlanning_Proxy": "HRESULT WINAPI IGPMConstants_get_PermSOMPlanning_Proxy(IGPMConstants *This,GPMPermissionType *pVal);", "IGPMConstants_get_PermSOMGPOCreate_Proxy": "HRESULT WINAPI IGPMConstants_get_PermSOMGPOCreate_Proxy(IGPMConstants *This,GPMPermissionType *pVal);", "IGPMConstants_get_PermSOMWMICreate_Proxy": "HRESULT WINAPI IGPMConstants_get_PermSOMWMICreate_Proxy(IGPMConstants *This,GPMPermissionType *pVal);", "IGPMConstants_get_PermSOMWMIFullControl_Proxy": "HRESULT WINAPI IGPMConstants_get_PermSOMWMIFullControl_Proxy(IGPMConstants *This,GPMPermissionType *pVal);", "IGPMConstants_get_SearchPropertyGPOPermissions_Proxy": "HRESULT WINAPI IGPMConstants_get_SearchPropertyGPOPermissions_Proxy(IGPMConstants *This,GPMSearchProperty *pVal);", "IGPMConstants_get_SearchPropertyGPOEffectivePermissions_Proxy": "HRESULT WINAPI IGPMConstants_get_SearchPropertyGPOEffectivePermissions_Proxy(IGPMConstants *This,GPMSearchProperty *pVal);", "IGPMConstants_get_SearchPropertyGPODisplayName_Proxy": "HRESULT WINAPI IGPMConstants_get_SearchPropertyGPODisplayName_Proxy(IGPMConstants *This,GPMSearchProperty *pVal);", "IGPMConstants_get_SearchPropertyGPOWMIFilter_Proxy": "HRESULT WINAPI IGPMConstants_get_SearchPropertyGPOWMIFilter_Proxy(IGPMConstants *This,GPMSearchProperty *pVal);", "IGPMConstants_get_SearchPropertyGPOID_Proxy": "HRESULT WINAPI IGPMConstants_get_SearchPropertyGPOID_Proxy(IGPMConstants *This,GPMSearchProperty *pVal);", "IGPMConstants_get_SearchPropertyGPOComputerExtensions_Proxy": "HRESULT WINAPI IGPMConstants_get_SearchPropertyGPOComputerExtensions_Proxy(IGPMConstants *This,GPMSearchProperty *pVal);", "IGPMConstants_get_SearchPropertyGPOUserExtensions_Proxy": "HRESULT WINAPI IGPMConstants_get_SearchPropertyGPOUserExtensions_Proxy(IGPMConstants *This,GPMSearchProperty *pVal);", "IGPMConstants_get_SearchPropertySOMLinks_Proxy": "HRESULT WINAPI IGPMConstants_get_SearchPropertySOMLinks_Proxy(IGPMConstants *This,GPMSearchProperty *pVal);", "IGPMConstants_get_SearchPropertyGPODomain_Proxy": "HRESULT WINAPI IGPMConstants_get_SearchPropertyGPODomain_Proxy(IGPMConstants *This,GPMSearchProperty *pVal);", "IGPMConstants_get_SearchPropertyBackupMostRecent_Proxy": "HRESULT WINAPI IGPMConstants_get_SearchPropertyBackupMostRecent_Proxy(IGPMConstants *This,GPMSearchProperty *pVal);", "IGPMConstants_get_SearchOpEquals_Proxy": "HRESULT WINAPI IGPMConstants_get_SearchOpEquals_Proxy(IGPMConstants *This,GPMSearchOperation *pVal);", "IGPMConstants_get_SearchOpContains_Proxy": "HRESULT WINAPI IGPMConstants_get_SearchOpContains_Proxy(IGPMConstants *This,GPMSearchOperation *pVal);", "IGPMConstants_get_SearchOpNotContains_Proxy": "HRESULT WINAPI IGPMConstants_get_SearchOpNotContains_Proxy(IGPMConstants *This,GPMSearchOperation *pVal);", "IGPMConstants_get_SearchOpNotEquals_Proxy": "HRESULT WINAPI IGPMConstants_get_SearchOpNotEquals_Proxy(IGPMConstants *This,GPMSearchOperation *pVal);", "IGPMConstants_get_UsePDC_Proxy": "HRESULT WINAPI IGPMConstants_get_UsePDC_Proxy(IGPMConstants *This,__LONG32 *pVal);", "IGPMConstants_get_UseAnyDC_Proxy": "HRESULT WINAPI IGPMConstants_get_UseAnyDC_Proxy(IGPMConstants *This,__LONG32 *pVal);", "IGPMConstants_get_DoNotUseW2KDC_Proxy": "HRESULT WINAPI IGPMConstants_get_DoNotUseW2KDC_Proxy(IGPMConstants *This,__LONG32 *pVal);", "IGPMConstants_get_SOMSite_Proxy": "HRESULT WINAPI IGPMConstants_get_SOMSite_Proxy(IGPMConstants *This,GPMSOMType *pVal);", "IGPMConstants_get_SOMDomain_Proxy": "HRESULT WINAPI IGPMConstants_get_SOMDomain_Proxy(IGPMConstants *This,GPMSOMType *pVal);", "IGPMConstants_get_SOMOU_Proxy": "HRESULT WINAPI IGPMConstants_get_SOMOU_Proxy(IGPMConstants *This,GPMSOMType *pVal);", "IGPMConstants_get_SecurityFlags_Proxy": "HRESULT WINAPI IGPMConstants_get_SecurityFlags_Proxy(IGPMConstants *This,VARIANT_BOOL vbOwner,VARIANT_BOOL vbGroup,VARIANT_BOOL vbDACL,VARIANT_BOOL vbSACL,__LONG32 *pVal);", "IGPMConstants_get_DoNotValidateDC_Proxy": "HRESULT WINAPI IGPMConstants_get_DoNotValidateDC_Proxy(IGPMConstants *This,__LONG32 *pVal);", "IGPMConstants_get_ReportHTML_Proxy": "HRESULT WINAPI IGPMConstants_get_ReportHTML_Proxy(IGPMConstants *This,GPMReportType *pVal);", "IGPMConstants_get_ReportXML_Proxy": "HRESULT WINAPI IGPMConstants_get_ReportXML_Proxy(IGPMConstants *This,GPMReportType *pVal);", "IGPMConstants_get_RSOPModeUnknown_Proxy": "HRESULT WINAPI IGPMConstants_get_RSOPModeUnknown_Proxy(IGPMConstants *This,GPMRSOPMode *pVal);", "IGPMConstants_get_RSOPModePlanning_Proxy": "HRESULT WINAPI IGPMConstants_get_RSOPModePlanning_Proxy(IGPMConstants *This,GPMRSOPMode *pVal);", "IGPMConstants_get_RSOPModeLogging_Proxy": "HRESULT WINAPI IGPMConstants_get_RSOPModeLogging_Proxy(IGPMConstants *This,GPMRSOPMode *pVal);", "IGPMConstants_get_EntryTypeUser_Proxy": "HRESULT WINAPI IGPMConstants_get_EntryTypeUser_Proxy(IGPMConstants *This,GPMEntryType *pVal);", "IGPMConstants_get_EntryTypeComputer_Proxy": "HRESULT WINAPI IGPMConstants_get_EntryTypeComputer_Proxy(IGPMConstants *This,GPMEntryType *pVal);", "IGPMConstants_get_EntryTypeLocalGroup_Proxy": "HRESULT WINAPI IGPMConstants_get_EntryTypeLocalGroup_Proxy(IGPMConstants *This,GPMEntryType *pVal);", "IGPMConstants_get_EntryTypeGlobalGroup_Proxy": "HRESULT WINAPI IGPMConstants_get_EntryTypeGlobalGroup_Proxy(IGPMConstants *This,GPMEntryType *pVal);", "IGPMConstants_get_EntryTypeUniversalGroup_Proxy": "HRESULT WINAPI IGPMConstants_get_EntryTypeUniversalGroup_Proxy(IGPMConstants *This,GPMEntryType *pVal);", "IGPMConstants_get_EntryTypeUNCPath_Proxy": "HRESULT WINAPI IGPMConstants_get_EntryTypeUNCPath_Proxy(IGPMConstants *This,GPMEntryType *pVal);", "IGPMConstants_get_EntryTypeUnknown_Proxy": "HRESULT WINAPI IGPMConstants_get_EntryTypeUnknown_Proxy(IGPMConstants *This,GPMEntryType *pVal);", "IGPMConstants_get_DestinationOptionSameAsSource_Proxy": "HRESULT WINAPI IGPMConstants_get_DestinationOptionSameAsSource_Proxy(IGPMConstants *This,GPMDestinationOption *pVal);", "IGPMConstants_get_DestinationOptionNone_Proxy": "HRESULT WINAPI IGPMConstants_get_DestinationOptionNone_Proxy(IGPMConstants *This,GPMDestinationOption *pVal);", "IGPMConstants_get_DestinationOptionByRelativeName_Proxy": "HRESULT WINAPI IGPMConstants_get_DestinationOptionByRelativeName_Proxy(IGPMConstants *This,GPMDestinationOption *pVal);", "IGPMConstants_get_DestinationOptionSet_Proxy": "HRESULT WINAPI IGPMConstants_get_DestinationOptionSet_Proxy(IGPMConstants *This,GPMDestinationOption *pVal);", "IGPMConstants_get_MigrationTableOnly_Proxy": "HRESULT WINAPI IGPMConstants_get_MigrationTableOnly_Proxy(IGPMConstants *This,__LONG32 *pVal);", "IGPMConstants_get_ProcessSecurity_Proxy": "HRESULT WINAPI IGPMConstants_get_ProcessSecurity_Proxy(IGPMConstants *This,__LONG32 *pVal);", "IGPMConstants_get_RsopLoggingNoComputer_Proxy": "HRESULT WINAPI IGPMConstants_get_RsopLoggingNoComputer_Proxy(IGPMConstants *This,__LONG32 *pVal);", "IGPMConstants_get_RsopLoggingNoUser_Proxy": "HRESULT WINAPI IGPMConstants_get_RsopLoggingNoUser_Proxy(IGPMConstants *This,__LONG32 *pVal);", "IGPMConstants_get_RsopPlanningAssumeSlowLink_Proxy": "HRESULT WINAPI IGPMConstants_get_RsopPlanningAssumeSlowLink_Proxy(IGPMConstants *This,__LONG32 *pVal);", "IGPMConstants_get_RsopPlanningLoopbackOption_Proxy": "HRESULT WINAPI IGPMConstants_get_RsopPlanningLoopbackOption_Proxy(IGPMConstants *This,VARIANT_BOOL vbMerge,__LONG32 *pVal);", "IGPMConstants_get_RsopPlanningAssumeUserWQLFilterTrue_Proxy": "HRESULT WINAPI IGPMConstants_get_RsopPlanningAssumeUserWQLFilterTrue_Proxy(IGPMConstants *This,__LONG32 *pVal);", "IGPMConstants_get_RsopPlanningAssumeCompWQLFilterTrue_Proxy": "HRESULT WINAPI IGPMConstants_get_RsopPlanningAssumeCompWQLFilterTrue_Proxy(IGPMConstants *This,__LONG32 *pVal);", "IGPMResult_get_Status_Proxy": "HRESULT WINAPI IGPMResult_get_Status_Proxy(IGPMResult *This,IGPMStatusMsgCollection **ppIGPMStatusMsgCollection);", "IGPMResult_get_Result_Proxy": "HRESULT WINAPI IGPMResult_get_Result_Proxy(IGPMResult *This,VARIANT *pvarResult);", "IGPMResult_OverallStatus_Proxy": "HRESULT WINAPI IGPMResult_OverallStatus_Proxy(IGPMResult *This);", "IGPMMapEntryCollection_get_Count_Proxy": "HRESULT WINAPI IGPMMapEntryCollection_get_Count_Proxy(IGPMMapEntryCollection *This,__LONG32 *pVal);", "IGPMMapEntryCollection_get_Item_Proxy": "HRESULT WINAPI IGPMMapEntryCollection_get_Item_Proxy(IGPMMapEntryCollection *This,__LONG32 lIndex,VARIANT *pVal);", "IGPMMapEntryCollection_get__NewEnum_Proxy": "HRESULT WINAPI IGPMMapEntryCollection_get__NewEnum_Proxy(IGPMMapEntryCollection *This,IEnumVARIANT **pVal);", "IGPMMapEntry_get_Source_Proxy": "HRESULT WINAPI IGPMMapEntry_get_Source_Proxy(IGPMMapEntry *This,BSTR *pbstrSource);", "IGPMMapEntry_get_Destination_Proxy": "HRESULT WINAPI IGPMMapEntry_get_Destination_Proxy(IGPMMapEntry *This,BSTR *pbstrDestination);", "IGPMMapEntry_get_DestinationOption_Proxy": "HRESULT WINAPI IGPMMapEntry_get_DestinationOption_Proxy(IGPMMapEntry *This,GPMDestinationOption *pgpmDestOption);", "IGPMMapEntry_get_EntryType_Proxy": "HRESULT WINAPI IGPMMapEntry_get_EntryType_Proxy(IGPMMapEntry *This,GPMEntryType *pgpmEntryType);", "IGPMMigrationTable_Save_Proxy": "HRESULT WINAPI IGPMMigrationTable_Save_Proxy(IGPMMigrationTable *This,BSTR bstrMigrationTablePath);", "IGPMMigrationTable_Add_Proxy": "HRESULT WINAPI IGPMMigrationTable_Add_Proxy(IGPMMigrationTable *This,__LONG32 lFlags,VARIANT var);", "IGPMMigrationTable_AddEntry_Proxy": "HRESULT WINAPI IGPMMigrationTable_AddEntry_Proxy(IGPMMigrationTable *This,BSTR bstrSource,GPMEntryType gpmEntryType,VARIANT *pvarDestination,IGPMMapEntry **ppEntry);", "IGPMMigrationTable_GetEntry_Proxy": "HRESULT WINAPI IGPMMigrationTable_GetEntry_Proxy(IGPMMigrationTable *This,BSTR bstrSource,IGPMMapEntry **ppEntry);", "IGPMMigrationTable_DeleteEntry_Proxy": "HRESULT WINAPI IGPMMigrationTable_DeleteEntry_Proxy(IGPMMigrationTable *This,BSTR bstrSource);", "IGPMMigrationTable_UpdateDestination_Proxy": "HRESULT WINAPI IGPMMigrationTable_UpdateDestination_Proxy(IGPMMigrationTable *This,BSTR bstrSource,VARIANT *pvarDestination,IGPMMapEntry **ppEntry);", "IGPMMigrationTable_Validate_Proxy": "HRESULT WINAPI IGPMMigrationTable_Validate_Proxy(IGPMMigrationTable *This,IGPMResult **ppResult);", "IGPMMigrationTable_GetEntries_Proxy": "HRESULT WINAPI IGPMMigrationTable_GetEntries_Proxy(IGPMMigrationTable *This,IGPMMapEntryCollection **ppEntries);", "CryptProtectData": "DPAPI_IMP WINBOOL WINAPI CryptProtectData (DATA_BLOB *pDataIn, LPCWSTR szDataDescr, DATA_BLOB *pOptionalEntropy, PVOID pvReserved, CRYPTPROTECT_PROMPTSTRUCT *pPromptStruct, DWORD dwFlags, DATA_BLOB *pDataOut);", "CryptUnprotectData": "DPAPI_IMP WINBOOL WINAPI CryptUnprotectData (DATA_BLOB *pDataIn, LPWSTR *ppszDataDescr, DATA_BLOB *pOptionalEntropy, PVOID pvReserved, CRYPTPROTECT_PROMPTSTRUCT *pPromptStruct, DWORD dwFlags, DATA_BLOB *pDataOut);", "CryptProtectDataNoUI": "WINBOOL WINAPI CryptProtectDataNoUI (DATA_BLOB *pDataIn, LPCWSTR szDataDescr, DATA_BLOB *pOptionalEntropy, PVOID pvReserved, CRYPTPROTECT_PROMPTSTRUCT *pPromptStruct, DWORD dwFlags, const BYTE *pbOptionalPassword, DWORD cbOptionalPassword, DATA_BLOB *pDataOut);", "CryptUnprotectDataNoUI": "WINBOOL WINAPI CryptUnprotectDataNoUI (DATA_BLOB *pDataIn, LPWSTR *ppszDataDescr, DATA_BLOB *pOptionalEntropy, PVOID pvReserved, CRYPTPROTECT_PROMPTSTRUCT *pPromptStruct, DWORD dwFlags, const BYTE *pbOptionalPassword, DWORD cbOptionalPassword, DATA_BLOB *pDataOut);", "CryptUpdateProtectedState": "DPAPI_IMP WINBOOL WINAPI CryptUpdateProtectedState (PSID pOldSid, LPCWSTR pwszOldPassword, DWORD dwFlags, DWORD *pdwSuccessCount, DWORD *pdwFailureCount);", "CryptProtectMemory": "DPAPI_IMP WINBOOL WINAPI CryptProtectMemory (LPVOID pDataIn, DWORD cbDataIn, DWORD dwFlags);", "CryptUnprotectMemory": "DPAPI_IMP WINBOOL WINAPI CryptUnprotectMemory (LPVOID pDataIn, DWORD cbDataIn, DWORD dwFlags);", "WlanAllocateMemory": "PVOID WINAPI WlanAllocateMemory(", "WlanCloseHandle": "DWORD WINAPI WlanCloseHandle(", "WlanConnect": "DWORD WINAPI WlanConnect(", "WlanConnect2": "DWORD WINAPI WlanConnect2(", "WlanDeleteProfile": "DWORD WINAPI WlanDeleteProfile(", "WlanDeviceServiceCommand": "DWORD WINAPI WlanDeviceServiceCommand(", "WlanDisconnect": "DWORD WINAPI WlanDisconnect(", "WlanEnumInterfaces": "DWORD WINAPI WlanEnumInterfaces(", "WlanFreeMemory": "VOID WINAPI WlanFreeMemory(", "WlanGetAvailableNetworkList": "DWORD WINAPI WlanGetAvailableNetworkList(", "WlanGetAvailableNetworkList2": "DWORD WINAPI WlanGetAvailableNetworkList2(", "WlanGetProfile": "DWORD WINAPI WlanGetProfile(", "WlanGetProfileList": "DWORD WINAPI WlanGetProfileList(", "WlanOpenHandle": "DWORD WINAPI WlanOpenHandle(", "WlanQueryInterface": "DWORD WINAPI WlanQueryInterface(", "WlanReasonCodeToString": "DWORD WINAPI WlanReasonCodeToString(", "WlanRegisterNotification": "DWORD WINAPI WlanRegisterNotification(", "WlanSetInterface": "DWORD WINAPI WlanSetInterface(", "WlanSetProfile": "DWORD WINAPI WlanSetProfile(", "WlanSetProfileEapXmlUserData": "DWORD WINAPI WlanSetProfileEapXmlUserData(", "WlanSetProfileList": "DWORD WINAPI WlanSetProfileList(", "WlanSetProfilePosition": "DWORD WINAPI WlanSetProfilePosition(", "WlanExtractPsdIEDataList": "DWORD WINAPI WlanExtractPsdIEDataList(", "WlanGetFilterList": "DWORD WINAPI WlanGetFilterList(", "WlanGetInterfaceCapability": "DWORD WINAPI WlanGetInterfaceCapability(", "WlanGetNetworkBssList": "DWORD WINAPI WlanGetNetworkBssList(", "WlanGetProfileCustomUserData": "DWORD WINAPI WlanGetProfileCustomUserData(", "WlanGetSecuritySettings": "DWORD WINAPI WlanGetSecuritySettings(", "WlanGetSupportedDeviceServices": "DWORD WINAPI WlanGetSupportedDeviceServices(", "WlanIhvControl": "DWORD WINAPI WlanIhvControl(", "WlanQueryAutoConfigParameter": "DWORD WINAPI WlanQueryAutoConfigParameter(", "WlanRegisterDeviceServiceNotification": "DWORD WINAPI WlanRegisterDeviceServiceNotification(", "WlanRenameProfile": "DWORD WINAPI WlanRenameProfile(", "WlanSaveTemporaryProfile": "DWORD WINAPI WlanSaveTemporaryProfile(", "WlanScan": "DWORD WINAPI WlanScan(", "WlanSetAutoConfigParameter": "DWORD WINAPI WlanSetAutoConfigParameter(", "WlanSetFilterList": "DWORD WINAPI WlanSetFilterList(", "WlanSetProfileCustomUserData": "DWORD WINAPI WlanSetProfileCustomUserData(", "WlanSetPsdIEDataList": "DWORD WINAPI WlanSetPsdIEDataList(", "WlanSetSecuritySettings": "DWORD WINAPI WlanSetSecuritySettings(", "WlanUIEditProfile": "DWORD WINAPI WlanUIEditProfile(", "SslGetMaximumKeySize": "DWORD WINAPI SslGetMaximumKeySize(DWORD Reserved);", "SslGetServerIdentity": "SECURITY_STATUS WINAPI SslGetServerIdentity(PBYTE ClientHello, DWORD ClientHelloSize, PBYTE *ServerIdentity, PDWORD ServerIdentitySize, DWORD Flags);", "SslGetExtensions": "SECURITY_STATUS WINAPI SslGetExtensions(const BYTE *clientHello, DWORD clientHelloByteSize, SCH_EXTENSION_DATA *genericExtensions, BYTE genericExtensionsCount, DWORD *bytesToRead, SchGetExtensionsOptions flags);", "LoadUserProfileA": "USERENVAPI WINBOOL WINAPI LoadUserProfileA (HANDLE hToken, LPPROFILEINFOA lpProfileInfo);", "LoadUserProfileW": "USERENVAPI WINBOOL WINAPI LoadUserProfileW (HANDLE hToken, LPPROFILEINFOW lpProfileInfo);", "UnloadUserProfile": "USERENVAPI WINBOOL WINAPI UnloadUserProfile (HANDLE hToken, HANDLE hProfile);", "GetProfilesDirectoryA": "USERENVAPI WINBOOL WINAPI GetProfilesDirectoryA (LPSTR lpProfileDir, LPDWORD lpcchSize);", "GetProfilesDirectoryW": "USERENVAPI WINBOOL WINAPI GetProfilesDirectoryW (LPWSTR lpProfileDir, LPDWORD lpcchSize);", "GetProfileType": "USERENVAPI WINBOOL WINAPI GetProfileType (DWORD *dwFlags);", "DeleteProfileA": "USERENVAPI WINBOOL WINAPI DeleteProfileA (LPCSTR lpSidString, LPCSTR lpProfilePath, LPCSTR lpComputerName);", "DeleteProfileW": "USERENVAPI WINBOOL WINAPI DeleteProfileW (LPCWSTR lpSidString, LPCWSTR lpProfilePath, LPCWSTR lpComputerName);", "GetDefaultUserProfileDirectoryA": "USERENVAPI WINBOOL WINAPI GetDefaultUserProfileDirectoryA (LPSTR lpProfileDir, LPDWORD lpcchSize);", "GetDefaultUserProfileDirectoryW": "USERENVAPI WINBOOL WINAPI GetDefaultUserProfileDirectoryW (LPWSTR lpProfileDir, LPDWORD lpcchSize);", "GetAllUsersProfileDirectoryA": "USERENVAPI WINBOOL WINAPI GetAllUsersProfileDirectoryA (LPSTR lpProfileDir, LPDWORD lpcchSize);", "GetAllUsersProfileDirectoryW": "USERENVAPI WINBOOL WINAPI GetAllUsersProfileDirectoryW (LPWSTR lpProfileDir, LPDWORD lpcchSize);", "GetUserProfileDirectoryA": "USERENVAPI WINBOOL WINAPI GetUserProfileDirectoryA (HANDLE hToken, LPSTR lpProfileDir, LPDWORD lpcchSize);", "GetUserProfileDirectoryW": "USERENVAPI WINBOOL WINAPI GetUserProfileDirectoryW (HANDLE hToken, LPWSTR lpProfileDir, LPDWORD lpcchSize);", "CreateEnvironmentBlock": "WINBOOL WINAPI CreateEnvironmentBlock (LPVOID *lpEnvironment, HANDLE hToken, WINBOOL bInherit);", "DestroyEnvironmentBlock": "WINBOOL WINAPI DestroyEnvironmentBlock (LPVOID lpEnvironment);", "ExpandEnvironmentStringsForUserA": "USERENVAPI WINBOOL WINAPI ExpandEnvironmentStringsForUserA (HANDLE hToken, LPCSTR lpSrc, LPSTR lpDest, DWORD dwSize);", "ExpandEnvironmentStringsForUserW": "USERENVAPI WINBOOL WINAPI ExpandEnvironmentStringsForUserW (HANDLE hToken, LPCWSTR lpSrc, LPWSTR lpDest, DWORD dwSize);", "RefreshPolicy": "USERENVAPI WINBOOL WINAPI RefreshPolicy (WINBOOL bMachine);", "RefreshPolicyEx": "USERENVAPI WINBOOL WINAPI RefreshPolicyEx (WINBOOL bMachine, DWORD dwOptions);", "EnterCriticalPolicySection": "USERENVAPI HANDLE WINAPI EnterCriticalPolicySection (WINBOOL bMachine);", "LeaveCriticalPolicySection": "USERENVAPI WINBOOL WINAPI LeaveCriticalPolicySection (HANDLE hSection);", "RegisterGPNotification": "USERENVAPI WINBOOL WINAPI RegisterGPNotification (HANDLE hEvent, WINBOOL bMachine);", "UnregisterGPNotification": "USERENVAPI WINBOOL WINAPI UnregisterGPNotification (HANDLE hEvent);", "CreateProfile": "USERENVAPI HRESULT WINAPI CreateProfile (LPCWSTR pszUserSid, LPCWSTR pszUserName, LPWSTR pszProfilePath, DWORD cchProfilePath);", "GetGPOListA": "USERENVAPI WINBOOL WINAPI GetGPOListA (HANDLE hToken, LPCSTR lpName, LPCSTR lpHostName, LPCSTR lpComputerName, DWORD dwFlags, PGROUP_POLICY_OBJECTA *pGPOList);", "GetGPOListW": "USERENVAPI WINBOOL WINAPI GetGPOListW (HANDLE hToken, LPCWSTR lpName, LPCWSTR lpHostName, LPCWSTR lpComputerName, DWORD dwFlags, PGROUP_POLICY_OBJECTW *pGPOList);", "FreeGPOListA": "USERENVAPI WINBOOL WINAPI FreeGPOListA (PGROUP_POLICY_OBJECTA pGPOList);", "FreeGPOListW": "USERENVAPI WINBOOL WINAPI FreeGPOListW (PGROUP_POLICY_OBJECTW pGPOList);", "GetAppliedGPOListA": "USERENVAPI DWORD WINAPI GetAppliedGPOListA (DWORD dwFlags, LPCSTR pMachineName, PSID pSidUser, GUID *pGuidExtension, PGROUP_POLICY_OBJECTA *ppGPOList);", "GetAppliedGPOListW": "USERENVAPI DWORD WINAPI GetAppliedGPOListW (DWORD dwFlags, LPCWSTR pMachineName, PSID pSidUser, GUID *pGuidExtension, PGROUP_POLICY_OBJECTW *ppGPOList);", "ProcessGroupPolicyCompleted": "USERENVAPI DWORD WINAPI ProcessGroupPolicyCompleted (REFGPEXTENSIONID extensionId, ASYNCCOMPLETIONHANDLE pAsyncHandle, DWORD dwStatus);", "ProcessGroupPolicyCompletedEx": "USERENVAPI DWORD WINAPI ProcessGroupPolicyCompletedEx (REFGPEXTENSIONID extensionId, ASYNCCOMPLETIONHANDLE pAsyncHandle, DWORD dwStatus, HRESULT RsopStatus);", "RsopAccessCheckByType": "USERENVAPI HRESULT WINAPI RsopAccessCheckByType (PSECURITY_DESCRIPTOR pSecurityDescriptor, PSID pPrincipalSelfSid, PRSOPTOKEN pRsopToken, DWORD dwDesiredAccessMask, POBJECT_TYPE_LIST pObjectTypeList, DWORD ObjectTypeListLength, PGENERIC_MAPPING pGenericMapping, PPRIVILEGE_SET pPrivilegeSet, LPDWORD pdwPrivilegeSetLength, LPDWORD pdwGrantedAccessMask, LPBOOL pbAccessStatus);", "RsopFileAccessCheck": "USERENVAPI HRESULT WINAPI RsopFileAccessCheck (LPWSTR pszFileName, PRSOPTOKEN pRsopToken, DWORD dwDesiredAccessMask, LPDWORD pdwGrantedAccessMask, LPBOOL pbAccessStatus);", "RsopSetPolicySettingStatus": "USERENVAPI HRESULT WINAPI RsopSetPolicySettingStatus (DWORD dwFlags, IWbemServices *pServices, IWbemClassObject *pSettingInstance, DWORD nInfo, POLICYSETTINGSTATUSINFO *pStatus);", "RsopResetPolicySettingStatus": "USERENVAPI HRESULT WINAPI RsopResetPolicySettingStatus (DWORD dwFlags, IWbemServices *pServices, IWbemClassObject *pSettingInstance);", "GenerateGPNotification": "USERENVAPI DWORD WINAPI GenerateGPNotification (WINBOOL bMachine, LPCWSTR lpwszMgmtProduct, DWORD dwMgmtProductOptions);", "CreateAppContainerProfile": "USERENVAPI HRESULT WINAPI CreateAppContainerProfile (PCWSTR pszAppContainerName, PCWSTR pszDisplayName, PCWSTR pszDescription, PSID_AND_ATTRIBUTES pCapabilities, DWORD dwCapabilityCount, PSID *ppSidAppContainerSid);", "DeleteAppContainerProfile": "USERENVAPI HRESULT WINAPI DeleteAppContainerProfile (PCWSTR pszAppContainerName);", "GetAppContainerRegistryLocation": "USERENVAPI HRESULT WINAPI GetAppContainerRegistryLocation (REGSAM desiredAccess, PHKEY phAppContainerKey);", "GetAppContainerFolderPath": "USERENVAPI HRESULT WINAPI GetAppContainerFolderPath (PCWSTR pszAppContainerSid, PWSTR *ppszPath);", "DeriveAppContainerSidFromAppContainerName": "USERENVAPI HRESULT WINAPI DeriveAppContainerSidFromAppContainerName (PCWSTR pszAppContainerName, PSID *ppsidAppContainerSid);", "IEnumPStoreItems_Next_Proxy": "HRESULT WINAPI IEnumPStoreItems_Next_Proxy(IEnumPStoreItems *This,DWORD celt,LPWSTR *rgelt,DWORD *pceltFetched);", "IEnumPStoreItems_Skip_Proxy": "HRESULT WINAPI IEnumPStoreItems_Skip_Proxy(IEnumPStoreItems *This,DWORD celt);", "IEnumPStoreItems_Reset_Proxy": "HRESULT WINAPI IEnumPStoreItems_Reset_Proxy(IEnumPStoreItems *This);", "IEnumPStoreItems_Clone_Proxy": "HRESULT WINAPI IEnumPStoreItems_Clone_Proxy(IEnumPStoreItems *This,IEnumPStoreItems **ppenum);", "IEnumPStoreTypes_Next_Proxy": "HRESULT WINAPI IEnumPStoreTypes_Next_Proxy(IEnumPStoreTypes *This,DWORD celt,GUID *rgelt,DWORD *pceltFetched);", "IEnumPStoreTypes_Skip_Proxy": "HRESULT WINAPI IEnumPStoreTypes_Skip_Proxy(IEnumPStoreTypes *This,DWORD celt);", "IEnumPStoreTypes_Reset_Proxy": "HRESULT WINAPI IEnumPStoreTypes_Reset_Proxy(IEnumPStoreTypes *This);", "IEnumPStoreTypes_Clone_Proxy": "HRESULT WINAPI IEnumPStoreTypes_Clone_Proxy(IEnumPStoreTypes *This,IEnumPStoreTypes **ppenum);", "IPStore_GetInfo_Proxy": "HRESULT WINAPI IPStore_GetInfo_Proxy(IPStore *This,PPST_PROVIDERINFO *ppProperties);", "IPStore_GetProvParam_Proxy": "HRESULT WINAPI IPStore_GetProvParam_Proxy(IPStore *This,DWORD dwParam,DWORD *pcbData,BYTE **ppbData,DWORD dwFlags);", "IPStore_SetProvParam_Proxy": "HRESULT WINAPI IPStore_SetProvParam_Proxy(IPStore *This,DWORD dwParam,DWORD cbData,BYTE *pbData,DWORD dwFlags);", "IPStore_CreateType_Proxy": "HRESULT WINAPI IPStore_CreateType_Proxy(IPStore *This,PST_KEY Key,const GUID *pType,PPST_TYPEINFO pInfo,DWORD dwFlags);", "IPStore_GetTypeInfo_Proxy": "HRESULT WINAPI IPStore_GetTypeInfo_Proxy(IPStore *This,PST_KEY Key,const GUID *pType,PPST_TYPEINFO *ppInfo,DWORD dwFlags);", "IPStore_DeleteType_Proxy": "HRESULT WINAPI IPStore_DeleteType_Proxy(IPStore *This,PST_KEY Key,const GUID *pType,DWORD dwFlags);", "IPStore_CreateSubtype_Proxy": "HRESULT WINAPI IPStore_CreateSubtype_Proxy(IPStore *This,PST_KEY Key,const GUID *pType,const GUID *pSubtype,PPST_TYPEINFO pInfo,PPST_ACCESSRULESET pRules,DWORD dwFlags);", "IPStore_GetSubtypeInfo_Proxy": "HRESULT WINAPI IPStore_GetSubtypeInfo_Proxy(IPStore *This,PST_KEY Key,const GUID *pType,const GUID *pSubtype,PPST_TYPEINFO *ppInfo,DWORD dwFlags);", "IPStore_DeleteSubtype_Proxy": "HRESULT WINAPI IPStore_DeleteSubtype_Proxy(IPStore *This,PST_KEY Key,const GUID *pType,const GUID *pSubtype,DWORD dwFlags);", "IPStore_ReadAccessRuleset_Proxy": "HRESULT WINAPI IPStore_ReadAccessRuleset_Proxy(IPStore *This,PST_KEY Key,const GUID *pType,const GUID *pSubtype,PPST_ACCESSRULESET *ppRules,DWORD dwFlags);", "IPStore_WriteAccessRuleset_Proxy": "HRESULT WINAPI IPStore_WriteAccessRuleset_Proxy(IPStore *This,PST_KEY Key,const GUID *pType,const GUID *pSubtype,PPST_ACCESSRULESET pRules,DWORD dwFlags);", "IPStore_EnumTypes_Proxy": "HRESULT WINAPI IPStore_EnumTypes_Proxy(IPStore *This,PST_KEY Key,DWORD dwFlags,IEnumPStoreTypes **ppenum);", "IPStore_EnumSubtypes_Proxy": "HRESULT WINAPI IPStore_EnumSubtypes_Proxy(IPStore *This,PST_KEY Key,const GUID *pType,DWORD dwFlags,IEnumPStoreTypes **ppenum);", "IPStore_DeleteItem_Proxy": "HRESULT WINAPI IPStore_DeleteItem_Proxy(IPStore *This,PST_KEY Key,const GUID *pItemType,const GUID *pItemSubtype,LPCWSTR szItemName,PPST_PROMPTINFO pPromptInfo,DWORD dwFlags);", "IPStore_ReadItem_Proxy": "HRESULT WINAPI IPStore_ReadItem_Proxy(IPStore *This,PST_KEY Key,const GUID *pItemType,const GUID *pItemSubtype,LPCWSTR szItemName,DWORD *pcbData,BYTE **ppbData,PPST_PROMPTINFO pPromptInfo,DWORD dwFlags);", "IPStore_WriteItem_Proxy": "HRESULT WINAPI IPStore_WriteItem_Proxy(IPStore *This,PST_KEY Key,const GUID *pItemType,const GUID *pItemSubtype,LPCWSTR szItemName,DWORD cbData,BYTE *pbData,PPST_PROMPTINFO pPromptInfo,DWORD dwDefaultConfirmationStyle,DWORD dwFlags);", "IPStore_OpenItem_Proxy": "HRESULT WINAPI IPStore_OpenItem_Proxy(IPStore *This,PST_KEY Key,const GUID *pItemType,const GUID *pItemSubtype,LPCWSTR szItemName,PST_ACCESSMODE ModeFlags,PPST_PROMPTINFO pPromptInfo,DWORD dwFlags);", "IPStore_CloseItem_Proxy": "HRESULT WINAPI IPStore_CloseItem_Proxy(IPStore *This,PST_KEY Key,const GUID *pItemType,const GUID *pItemSubtype,LPCWSTR szItemName,DWORD dwFlags);", "IPStore_EnumItems_Proxy": "HRESULT WINAPI IPStore_EnumItems_Proxy(IPStore *This,PST_KEY Key,const GUID *pItemType,const GUID *pItemSubtype,DWORD dwFlags,IEnumPStoreItems **ppenum);", "IEnumPStoreProviders_Next_Proxy": "HRESULT WINAPI IEnumPStoreProviders_Next_Proxy(IEnumPStoreProviders *This,DWORD celt,PST_PROVIDERINFO **rgelt,DWORD *pceltFetched);", "IEnumPStoreProviders_Skip_Proxy": "HRESULT WINAPI IEnumPStoreProviders_Skip_Proxy(IEnumPStoreProviders *This,DWORD celt);", "IEnumPStoreProviders_Reset_Proxy": "HRESULT WINAPI IEnumPStoreProviders_Reset_Proxy(IEnumPStoreProviders *This);", "IEnumPStoreProviders_Clone_Proxy": "HRESULT WINAPI IEnumPStoreProviders_Clone_Proxy(IEnumPStoreProviders *This,IEnumPStoreProviders **ppenum);", "PStoreCreateInstance": "HRESULT WINAPI PStoreCreateInstance(IPStore **ppProvider,PST_PROVIDERID *pProviderID,void *pReserved,DWORD dwFlags);", "PStoreEnumProviders": "HRESULT WINAPI PStoreEnumProviders(DWORD dwFlags,IEnumPStoreProviders **ppenum);", "SQLInstallODBC": "WINBOOL WINAPI SQLInstallODBC(HWND hwndParent,LPCSTR lpszInfFile,LPCSTR lpszSrcPath,LPCSTR lpszDrivers);", "SQLManageDataSources": "WINBOOL WINAPI SQLManageDataSources(HWND hwndParent);", "SQLCreateDataSource": "WINBOOL WINAPI SQLCreateDataSource(HWND hwndParent,LPCSTR lpszDSN);", "SQLGetTranslator": "WINBOOL WINAPI SQLGetTranslator(HWND hwnd,LPSTR lpszName,WORD cbNameMax,WORD *pcbNameOut,LPSTR lpszPath,WORD cbPathMax,WORD *pcbPathOut,DWORD *pvOption);", "SQLInstallDriver": "WINBOOL WINAPI SQLInstallDriver(LPCSTR lpszInfFile,LPCSTR lpszDriver,LPSTR lpszPath,WORD cbPathMax,WORD *pcbPathOut);", "SQLInstallDriverManager": "WINBOOL WINAPI SQLInstallDriverManager (LPSTR lpszPath,WORD cbPathMax,WORD *pcbPathOut);", "SQLGetInstalledDrivers": "WINBOOL WINAPI SQLGetInstalledDrivers (LPSTR lpszBuf,WORD cbBufMax,WORD *pcbBufOut);", "SQLGetAvailableDrivers": "WINBOOL WINAPI SQLGetAvailableDrivers(LPCSTR lpszInfFile,LPSTR lpszBuf,WORD cbBufMax,WORD *pcbBufOut);", "SQLConfigDataSource": "WINBOOL WINAPI SQLConfigDataSource(HWND hwndParent,WORD fRequest,LPCSTR lpszDriver,LPCSTR lpszAttributes);", "SQLRemoveDefaultDataSource": "WINBOOL WINAPI SQLRemoveDefaultDataSource(void);", "SQLWriteDSNToIni": "WINBOOL WINAPI SQLWriteDSNToIni(LPCSTR lpszDSN,LPCSTR lpszDriver);", "SQLRemoveDSNFromIni": "WINBOOL WINAPI SQLRemoveDSNFromIni(LPCSTR lpszDSN);", "SQLValidDSN": "WINBOOL WINAPI SQLValidDSN(LPCSTR lpszDSN);", "SQLWritePrivateProfileString": "WINBOOL WINAPI SQLWritePrivateProfileString(LPCSTR lpszSection,LPCSTR lpszEntry,LPCSTR lpszString,LPCSTR lpszFilename);", "SQLGetPrivateProfileString": "int WINAPI SQLGetPrivateProfileString(LPCSTR lpszSection,LPCSTR lpszEntry,LPCSTR lpszDefault,LPSTR lpszRetBuffer,int cbRetBuffer,LPCSTR lpszFilename);", "SQLRemoveDriverManager": "WINBOOL WINAPI SQLRemoveDriverManager(LPDWORD lpdwUsageCount);", "SQLInstallTranslator": "WINBOOL WINAPI SQLInstallTranslator(LPCSTR lpszInfFile,LPCSTR lpszTranslator,LPCSTR lpszPathIn,LPSTR lpszPathOut,WORD cbPathOutMax,WORD *pcbPathOut,WORD fRequest,LPDWORD lpdwUsageCount);", "SQLRemoveTranslator": "WINBOOL WINAPI SQLRemoveTranslator(LPCSTR lpszTranslator,LPDWORD lpdwUsageCount);", "SQLRemoveDriver": "WINBOOL WINAPI SQLRemoveDriver(LPCSTR lpszDriver,WINBOOL fRemoveDSN,LPDWORD lpdwUsageCount);", "SQLConfigDriver": "WINBOOL WINAPI SQLConfigDriver(HWND hwndParent,WORD fRequest,LPCSTR lpszDriver,LPCSTR lpszArgs,LPSTR lpszMsg,WORD cbMsgMax,WORD *pcbMsgOut);", "SQLInstallerError": "SQLRETURN WINAPI SQLInstallerError(WORD iError,DWORD *pfErrorCode,LPSTR lpszErrorMsg,WORD cbErrorMsgMax,WORD *pcbErrorMsg);", "SQLPostInstallerError": "SQLRETURN WINAPI SQLPostInstallerError(DWORD dwErrorCode,LPCSTR lpszErrMsg);", "SQLWriteFileDSN": "WINBOOL WINAPI SQLWriteFileDSN(LPCSTR lpszFileName,LPCSTR lpszAppName,LPCSTR lpszKeyName,LPCSTR lpszString);", "SQLReadFileDSN": "WINBOOL WINAPI SQLReadFileDSN(LPCSTR lpszFileName,LPCSTR lpszAppName,LPCSTR lpszKeyName,LPSTR lpszString,WORD cbString,WORD *pcbString);", "SQLInstallDriverEx": "WINBOOL WINAPI SQLInstallDriverEx(LPCSTR lpszDriver,LPCSTR lpszPathIn,LPSTR lpszPathOut,WORD cbPathOutMax,WORD *pcbPathOut,WORD fRequest,LPDWORD lpdwUsageCount);", "SQLInstallTranslatorEx": "WINBOOL WINAPI SQLInstallTranslatorEx(LPCSTR lpszTranslator,LPCSTR lpszPathIn,LPSTR lpszPathOut,WORD cbPathOutMax,WORD *pcbPathOut,WORD fRequest,LPDWORD lpdwUsageCount);", "SQLGetConfigMode": "WINBOOL WINAPI SQLGetConfigMode(UWORD *pwConfigMode);", "SQLSetConfigMode": "WINBOOL WINAPI SQLSetConfigMode(UWORD wConfigMode);", "ConfigDSN": "WINBOOL WINAPI ConfigDSN(HWND hwndParent,WORD fRequest,LPCSTR lpszDriver,LPCSTR lpszAttributes);", "ConfigTranslator": "WINBOOL WINAPI ConfigTranslator(HWND hwndParent,DWORD *pvOption);", "ConfigDriver": "WINBOOL WINAPI ConfigDriver(HWND hwndParent,WORD fRequest,LPCSTR lpszDriver,LPCSTR lpszArgs,LPSTR lpszMsg,WORD cbMsgMax,WORD *pcbMsgOut);", "SQLInstallODBCW": "WINBOOL WINAPI SQLInstallODBCW(HWND hwndParent,LPCWSTR lpszInfFile,LPCWSTR lpszSrcPath,LPCWSTR lpszDrivers);", "SQLCreateDataSourceW": "WINBOOL WINAPI SQLCreateDataSourceW(HWND hwndParent,LPCWSTR lpszDSN);", "SQLGetTranslatorW": "WINBOOL WINAPI SQLGetTranslatorW(HWND hwnd,LPWSTR lpszName,WORD cbNameMax,WORD *pcbNameOut,LPWSTR lpszPath,WORD cbPathMax,WORD *pcbPathOut,DWORD *pvOption);", "SQLInstallDriverW": "WINBOOL WINAPI SQLInstallDriverW (LPCWSTR lpszInfFile,LPCWSTR lpszDriver,LPWSTR lpszPath,WORD cbPathMax,WORD *pcbPathOut);", "SQLInstallDriverManagerW": "WINBOOL WINAPI SQLInstallDriverManagerW (LPWSTR lpszPath,WORD cbPathMax,WORD *pcbPathOut);", "SQLGetInstalledDriversW": "WINBOOL WINAPI SQLGetInstalledDriversW (LPWSTR lpszBuf,WORD cbBufMax,WORD *pcbBufOut);", "SQLGetAvailableDriversW": "WINBOOL WINAPI SQLGetAvailableDriversW (LPCWSTR lpszInfFile,LPWSTR lpszBuf,WORD cbBufMax,WORD *pcbBufOut);", "SQLConfigDataSourceW": "WINBOOL WINAPI SQLConfigDataSourceW(HWND hwndParent,WORD fRequest,LPCWSTR lpszDriver,LPCWSTR lpszAttributes);", "SQLWriteDSNToIniW": "WINBOOL WINAPI SQLWriteDSNToIniW (LPCWSTR lpszDSN,LPCWSTR lpszDriver);", "SQLRemoveDSNFromIniW": "WINBOOL WINAPI SQLRemoveDSNFromIniW (LPCWSTR lpszDSN);", "SQLValidDSNW": "WINBOOL WINAPI SQLValidDSNW (LPCWSTR lpszDSN);", "SQLWritePrivateProfileStringW": "WINBOOL WINAPI SQLWritePrivateProfileStringW(LPCWSTR lpszSection,LPCWSTR lpszEntry,LPCWSTR lpszString,LPCWSTR lpszFilename);", "SQLGetPrivateProfileStringW": "int WINAPI SQLGetPrivateProfileStringW(LPCWSTR lpszSection,LPCWSTR lpszEntry,LPCWSTR lpszDefault,LPWSTR lpszRetBuffer,int cbRetBuffer,LPCWSTR lpszFilename);", "SQLInstallTranslatorW": "WINBOOL WINAPI SQLInstallTranslatorW(LPCWSTR lpszInfFile,LPCWSTR lpszTranslator,LPCWSTR lpszPathIn,LPWSTR lpszPathOut,WORD cbPathOutMax,WORD *pcbPathOut,WORD fRequest,LPDWORD lpdwUsageCount);", "SQLRemoveTranslatorW": "WINBOOL WINAPI SQLRemoveTranslatorW(LPCWSTR lpszTranslator,LPDWORD lpdwUsageCount);", "SQLRemoveDriverW": "WINBOOL WINAPI SQLRemoveDriverW(LPCWSTR lpszDriver,WINBOOL fRemoveDSN,LPDWORD lpdwUsageCount);", "SQLConfigDriverW": "WINBOOL WINAPI SQLConfigDriverW(HWND hwndParent,WORD fRequest,LPCWSTR lpszDriver,LPCWSTR lpszArgs,LPWSTR lpszMsg,WORD cbMsgMax,WORD *pcbMsgOut);", "SQLInstallerErrorW": "SQLRETURN WINAPI SQLInstallerErrorW(WORD iError,DWORD *pfErrorCode,LPWSTR lpszErrorMsg,WORD cbErrorMsgMax,WORD *pcbErrorMsg);", "SQLPostInstallerErrorW": "SQLRETURN WINAPI SQLPostInstallerErrorW(DWORD dwErrorCode,LPCWSTR lpszErrorMsg);", "SQLWriteFileDSNW": "WINBOOL WINAPI SQLWriteFileDSNW(LPCWSTR lpszFileName,LPCWSTR lpszAppName,LPCWSTR lpszKeyName,LPCWSTR lpszString);", "SQLReadFileDSNW": "WINBOOL WINAPI SQLReadFileDSNW(LPCWSTR lpszFileName,LPCWSTR lpszAppName,LPCWSTR lpszKeyName,LPWSTR lpszString,WORD cbString,WORD *pcbString);", "SQLInstallDriverExW": "WINBOOL WINAPI SQLInstallDriverExW(LPCWSTR lpszDriver,LPCWSTR lpszPathIn,LPWSTR lpszPathOut,WORD cbPathOutMax,WORD *pcbPathOut,WORD fRequest,LPDWORD lpdwUsageCount);", "SQLInstallTranslatorExW": "WINBOOL WINAPI SQLInstallTranslatorExW(LPCWSTR lpszTranslator,LPCWSTR lpszPathIn,LPWSTR lpszPathOut,WORD cbPathOutMax,WORD *pcbPathOut,WORD fRequest,LPDWORD lpdwUsageCount);", "ConfigDSNW": "WINBOOL WINAPI ConfigDSNW(HWND hwndParent,WORD fRequest,LPCWSTR lpszDriver,LPCWSTR lpszAttributes);", "ConfigDriverW": "WINBOOL WINAPI ConfigDriverW(HWND hwndParent,WORD fRequest,LPCWSTR lpszDriver,LPCWSTR lpszArgs,LPWSTR lpszMsg,WORD cbMsgMax,WORD *pcbMsgOut);", "ConvertStringToBSTR": "BSTR WINAPI ConvertStringToBSTR(const char *pSrc);", "ConvertBSTRToString": "char *WINAPI ConvertBSTRToString(BSTR pSrc);", "__CPPValidateParameters": "HRESULT WINAPI __CPPValidateParameters(METHODS eMethod,const LPVOID ppFirst);", "__ValidateParameters": "HRESULT WINAPI __ValidateParameters(METHODS eMethod,LPVOID ppThis);", "ISimpleDataConverter_ConvertData_Proxy": "HRESULT WINAPI ISimpleDataConverter_ConvertData_Proxy(ISimpleDataConverter *This,VARIANT varSrc,__LONG32 vtDest,IUnknown *pUnknownElement,VARIANT *pvarDest);", "ISimpleDataConverter_CanConvertData_Proxy": "HRESULT WINAPI ISimpleDataConverter_CanConvertData_Proxy(ISimpleDataConverter *This,__LONG32 vt1,__LONG32 vt2);", "AuxUlibInitialize": "WINBOOL WINAPI AuxUlibInitialize (VOID);", "AuxUlibSetSystemFileCacheSize": "WINBOOL WINAPI AuxUlibSetSystemFileCacheSize (SIZE_T MinimumFileCacheSize, SIZE_T MaximumFileCacheSize, DWORD Flags);", "AuxUlibIsDLLSynchronizationHeld": "WINBOOL WINAPI AuxUlibIsDLLSynchronizationHeld (PBOOL SynchronizationHeld);", "GetPSTUIUserData": "ULONG_PTR WINAPI GetPSTUIUserData(HWND);", "SetPSTUIUserData": "WINBOOL WINAPI SetPSTUIUserData(HWND, ULONG_PTR);", "TranslateURLA": "INTSHCUTAPI HRESULT WINAPI TranslateURLA(PCSTR pcszURL,DWORD dwInFlags,PSTR *ppszTranslatedURL);", "TranslateURLW": "INTSHCUTAPI HRESULT WINAPI TranslateURLW(PCWSTR pcszURL,DWORD dwInFlags,PWSTR UNALIGNED *ppszTranslatedURL);", "URLAssociationDialogA": "INTSHCUTAPI HRESULT WINAPI URLAssociationDialogA(HWND hwndParent,DWORD dwInFlags,PCSTR pcszFile,PCSTR pcszURL,PSTR pszAppBuf,UINT ucAppBufLen);", "URLAssociationDialogW": "INTSHCUTAPI HRESULT WINAPI URLAssociationDialogW(HWND hwndParent,DWORD dwInFlags,PCWSTR pcszFile,PCWSTR pcszURL,PWSTR pszAppBuf,UINT ucAppBufLen);", "MIMEAssociationDialogA": "INTSHCUTAPI HRESULT WINAPI MIMEAssociationDialogA(HWND hwndParent,DWORD dwInFlags,PCSTR pcszFile,PCSTR pcszMIMEContentType,PSTR pszAppBuf,UINT ucAppBufLen);", "MIMEAssociationDialogW": "INTSHCUTAPI HRESULT WINAPI MIMEAssociationDialogW(HWND hwndParent,DWORD dwInFlags,PCWSTR pcszFile,PCWSTR pcszMIMEContentType,PWSTR pszAppBuf,UINT ucAppBufLen);", "InetIsOffline": "INTSHCUTAPI WINBOOL WINAPI InetIsOffline(DWORD dwFlags);", "CorBindToRuntimeHost": "HRESULT     WINAPI CorBindToRuntimeHost(LPCWSTR,LPCWSTR,LPCWSTR,VOID*,DWORD,REFCLSID,REFIID,LPVOID*);", "CorExitProcess": "void        WINAPI CorExitProcess(int);", "GetCORSystemDirectory": "HRESULT     WINAPI GetCORSystemDirectory(LPWSTR,DWORD,DWORD*);", "GetCORVersion": "HRESULT     WINAPI GetCORVersion(LPWSTR,DWORD,DWORD*);", "GetRequestedRuntimeInfo": "HRESULT     WINAPI GetRequestedRuntimeInfo(LPCWSTR,LPCWSTR,LPCWSTR,DWORD,DWORD,LPWSTR,DWORD,DWORD*,LPWSTR,DWORD,DWORD*);", "LoadLibraryShim": "HRESULT     WINAPI LoadLibraryShim(LPCWSTR,LPCWSTR,LPVOID,HMODULE*);", "LockClrVersion": "HRESULT     WINAPI LockClrVersion(FLockClrVersionCallback,FLockClrVersionCallback*,FLockClrVersionCallback*);", "ICertServerPolicy_SetContext_Proxy": "HRESULT WINAPI ICertServerPolicy_SetContext_Proxy(ICertServerPolicy *This,LONG Context);", "ICertServerPolicy_GetRequestProperty_Proxy": "HRESULT WINAPI ICertServerPolicy_GetRequestProperty_Proxy(ICertServerPolicy *This,const BSTR strPropertyName,LONG PropertyType,VARIANT *pvarPropertyValue);", "ICertServerPolicy_GetRequestAttribute_Proxy": "HRESULT WINAPI ICertServerPolicy_GetRequestAttribute_Proxy(ICertServerPolicy *This,const BSTR strAttributeName,BSTR *pstrAttributeValue);", "ICertServerPolicy_GetCertificateProperty_Proxy": "HRESULT WINAPI ICertServerPolicy_GetCertificateProperty_Proxy(ICertServerPolicy *This,const BSTR strPropertyName,LONG PropertyType,VARIANT *pvarPropertyValue);", "ICertServerPolicy_SetCertificateProperty_Proxy": "HRESULT WINAPI ICertServerPolicy_SetCertificateProperty_Proxy(ICertServerPolicy *This,const BSTR strPropertyName,LONG PropertyType,const VARIANT *pvarPropertyValue);", "ICertServerPolicy_GetCertificateExtension_Proxy": "HRESULT WINAPI ICertServerPolicy_GetCertificateExtension_Proxy(ICertServerPolicy *This,const BSTR strExtensionName,LONG Type,VARIANT *pvarValue);", "ICertServerPolicy_GetCertificateExtensionFlags_Proxy": "HRESULT WINAPI ICertServerPolicy_GetCertificateExtensionFlags_Proxy(ICertServerPolicy *This,LONG *pExtFlags);", "ICertServerPolicy_SetCertificateExtension_Proxy": "HRESULT WINAPI ICertServerPolicy_SetCertificateExtension_Proxy(ICertServerPolicy *This,const BSTR strExtensionName,LONG Type,LONG ExtFlags,const VARIANT *pvarValue);", "ICertServerPolicy_EnumerateExtensionsSetup_Proxy": "HRESULT WINAPI ICertServerPolicy_EnumerateExtensionsSetup_Proxy(ICertServerPolicy *This,LONG Flags);", "ICertServerPolicy_EnumerateExtensions_Proxy": "HRESULT WINAPI ICertServerPolicy_EnumerateExtensions_Proxy(ICertServerPolicy *This,BSTR *pstrExtensionName);", "ICertServerPolicy_EnumerateExtensionsClose_Proxy": "HRESULT WINAPI ICertServerPolicy_EnumerateExtensionsClose_Proxy(ICertServerPolicy *This);", "ICertServerPolicy_EnumerateAttributesSetup_Proxy": "HRESULT WINAPI ICertServerPolicy_EnumerateAttributesSetup_Proxy(ICertServerPolicy *This,LONG Flags);", "ICertServerPolicy_EnumerateAttributes_Proxy": "HRESULT WINAPI ICertServerPolicy_EnumerateAttributes_Proxy(ICertServerPolicy *This,BSTR *pstrAttributeName);", "ICertServerPolicy_EnumerateAttributesClose_Proxy": "HRESULT WINAPI ICertServerPolicy_EnumerateAttributesClose_Proxy(ICertServerPolicy *This);", "ICertServerExit_SetContext_Proxy": "HRESULT WINAPI ICertServerExit_SetContext_Proxy(ICertServerExit *This,LONG Context);", "ICertServerExit_GetRequestProperty_Proxy": "HRESULT WINAPI ICertServerExit_GetRequestProperty_Proxy(ICertServerExit *This,const BSTR strPropertyName,LONG PropertyType,VARIANT *pvarPropertyValue);", "ICertServerExit_GetRequestAttribute_Proxy": "HRESULT WINAPI ICertServerExit_GetRequestAttribute_Proxy(ICertServerExit *This,const BSTR strAttributeName,BSTR *pstrAttributeValue);", "ICertServerExit_GetCertificateProperty_Proxy": "HRESULT WINAPI ICertServerExit_GetCertificateProperty_Proxy(ICertServerExit *This,const BSTR strPropertyName,LONG PropertyType,VARIANT *pvarPropertyValue);", "ICertServerExit_GetCertificateExtension_Proxy": "HRESULT WINAPI ICertServerExit_GetCertificateExtension_Proxy(ICertServerExit *This,const BSTR strExtensionName,LONG Type,VARIANT *pvarValue);", "ICertServerExit_GetCertificateExtensionFlags_Proxy": "HRESULT WINAPI ICertServerExit_GetCertificateExtensionFlags_Proxy(ICertServerExit *This,LONG *pExtFlags);", "ICertServerExit_EnumerateExtensionsSetup_Proxy": "HRESULT WINAPI ICertServerExit_EnumerateExtensionsSetup_Proxy(ICertServerExit *This,LONG Flags);", "ICertServerExit_EnumerateExtensions_Proxy": "HRESULT WINAPI ICertServerExit_EnumerateExtensions_Proxy(ICertServerExit *This,BSTR *pstrExtensionName);", "ICertServerExit_EnumerateExtensionsClose_Proxy": "HRESULT WINAPI ICertServerExit_EnumerateExtensionsClose_Proxy(ICertServerExit *This);", "ICertServerExit_EnumerateAttributesSetup_Proxy": "HRESULT WINAPI ICertServerExit_EnumerateAttributesSetup_Proxy(ICertServerExit *This,LONG Flags);", "ICertServerExit_EnumerateAttributes_Proxy": "HRESULT WINAPI ICertServerExit_EnumerateAttributes_Proxy(ICertServerExit *This,BSTR *pstrAttributeName);", "ICertServerExit_EnumerateAttributesClose_Proxy": "HRESULT WINAPI ICertServerExit_EnumerateAttributesClose_Proxy(ICertServerExit *This);", "IBackgroundCopyJob1_CancelJob_Proxy": "HRESULT WINAPI IBackgroundCopyJob1_CancelJob_Proxy(IBackgroundCopyJob1 *This);", "IBackgroundCopyJob1_GetProgress_Proxy": "HRESULT WINAPI IBackgroundCopyJob1_GetProgress_Proxy(IBackgroundCopyJob1 *This,DWORD dwFlags,DWORD *pdwProgress);", "IBackgroundCopyJob1_GetStatus_Proxy": "HRESULT WINAPI IBackgroundCopyJob1_GetStatus_Proxy(IBackgroundCopyJob1 *This,DWORD *pdwStatus,DWORD *pdwWin32Result,DWORD *pdwTransportResult,DWORD *pdwNumOfRetries);", "IBackgroundCopyJob1_AddFiles_Proxy": "HRESULT WINAPI IBackgroundCopyJob1_AddFiles_Proxy(IBackgroundCopyJob1 *This,ULONG cFileCount,FILESETINFO **ppFileSet);", "IBackgroundCopyJob1_GetFile_Proxy": "HRESULT WINAPI IBackgroundCopyJob1_GetFile_Proxy(IBackgroundCopyJob1 *This,ULONG cFileIndex,FILESETINFO *pFileInfo);", "IBackgroundCopyJob1_GetFileCount_Proxy": "HRESULT WINAPI IBackgroundCopyJob1_GetFileCount_Proxy(IBackgroundCopyJob1 *This,DWORD *pdwFileCount);", "IBackgroundCopyJob1_SwitchToForeground_Proxy": "HRESULT WINAPI IBackgroundCopyJob1_SwitchToForeground_Proxy(IBackgroundCopyJob1 *This);", "IBackgroundCopyJob1_get_JobID_Proxy": "HRESULT WINAPI IBackgroundCopyJob1_get_JobID_Proxy(IBackgroundCopyJob1 *This,GUID *pguidJobID);", "IEnumBackgroundCopyJobs1_Next_Proxy": "HRESULT WINAPI IEnumBackgroundCopyJobs1_Next_Proxy(IEnumBackgroundCopyJobs1 *This,ULONG celt,GUID *rgelt,ULONG *pceltFetched);", "IEnumBackgroundCopyJobs1_Skip_Proxy": "HRESULT WINAPI IEnumBackgroundCopyJobs1_Skip_Proxy(IEnumBackgroundCopyJobs1 *This,ULONG celt);", "IEnumBackgroundCopyJobs1_Reset_Proxy": "HRESULT WINAPI IEnumBackgroundCopyJobs1_Reset_Proxy(IEnumBackgroundCopyJobs1 *This);", "IEnumBackgroundCopyJobs1_Clone_Proxy": "HRESULT WINAPI IEnumBackgroundCopyJobs1_Clone_Proxy(IEnumBackgroundCopyJobs1 *This,IEnumBackgroundCopyJobs1 **ppenum);", "IEnumBackgroundCopyJobs1_GetCount_Proxy": "HRESULT WINAPI IEnumBackgroundCopyJobs1_GetCount_Proxy(IEnumBackgroundCopyJobs1 *This,ULONG *puCount);", "IBackgroundCopyGroup_GetProp_Proxy": "HRESULT WINAPI IBackgroundCopyGroup_GetProp_Proxy(IBackgroundCopyGroup *This,GROUPPROP propID,VARIANT *pvarVal);", "IBackgroundCopyGroup_InternalSetProp_Proxy": "HRESULT WINAPI IBackgroundCopyGroup_InternalSetProp_Proxy(IBackgroundCopyGroup *This,GROUPPROP propID,VARIANT *pvarVal);", "IBackgroundCopyGroup_GetProgress_Proxy": "HRESULT WINAPI IBackgroundCopyGroup_GetProgress_Proxy(IBackgroundCopyGroup *This,DWORD dwFlags,DWORD *pdwProgress);", "IBackgroundCopyGroup_GetStatus_Proxy": "HRESULT WINAPI IBackgroundCopyGroup_GetStatus_Proxy(IBackgroundCopyGroup *This,DWORD *pdwStatus,DWORD *pdwJobIndex);", "IBackgroundCopyGroup_GetJob_Proxy": "HRESULT WINAPI IBackgroundCopyGroup_GetJob_Proxy(IBackgroundCopyGroup *This,GUID jobID,IBackgroundCopyJob1 **ppJob);", "IBackgroundCopyGroup_SuspendGroup_Proxy": "HRESULT WINAPI IBackgroundCopyGroup_SuspendGroup_Proxy(IBackgroundCopyGroup *This);", "IBackgroundCopyGroup_ResumeGroup_Proxy": "HRESULT WINAPI IBackgroundCopyGroup_ResumeGroup_Proxy(IBackgroundCopyGroup *This);", "IBackgroundCopyGroup_CancelGroup_Proxy": "HRESULT WINAPI IBackgroundCopyGroup_CancelGroup_Proxy(IBackgroundCopyGroup *This);", "IBackgroundCopyGroup_get_Size_Proxy": "HRESULT WINAPI IBackgroundCopyGroup_get_Size_Proxy(IBackgroundCopyGroup *This,DWORD *pdwSize);", "IBackgroundCopyGroup_get_GroupID_Proxy": "HRESULT WINAPI IBackgroundCopyGroup_get_GroupID_Proxy(IBackgroundCopyGroup *This,GUID *pguidGroupID);", "IBackgroundCopyGroup_CreateJob_Proxy": "HRESULT WINAPI IBackgroundCopyGroup_CreateJob_Proxy(IBackgroundCopyGroup *This,GUID guidJobID,IBackgroundCopyJob1 **ppJob);", "IBackgroundCopyGroup_EnumJobs_Proxy": "HRESULT WINAPI IBackgroundCopyGroup_EnumJobs_Proxy(IBackgroundCopyGroup *This,DWORD dwFlags,IEnumBackgroundCopyJobs1 **ppEnumJobs);", "IBackgroundCopyGroup_SwitchToForeground_Proxy": "HRESULT WINAPI IBackgroundCopyGroup_SwitchToForeground_Proxy(IBackgroundCopyGroup *This);", "IBackgroundCopyGroup_QueryNewJobInterface_Proxy": "HRESULT WINAPI IBackgroundCopyGroup_QueryNewJobInterface_Proxy(IBackgroundCopyGroup *This,REFIID iid,IUnknown **pUnk);", "IBackgroundCopyGroup_SetNotificationPointer_Proxy": "HRESULT WINAPI IBackgroundCopyGroup_SetNotificationPointer_Proxy(IBackgroundCopyGroup *This,REFIID iid,IUnknown *pUnk);", "IEnumBackgroundCopyGroups_Next_Proxy": "HRESULT WINAPI IEnumBackgroundCopyGroups_Next_Proxy(IEnumBackgroundCopyGroups *This,ULONG celt,GUID *rgelt,ULONG *pceltFetched);", "IEnumBackgroundCopyGroups_Skip_Proxy": "HRESULT WINAPI IEnumBackgroundCopyGroups_Skip_Proxy(IEnumBackgroundCopyGroups *This,ULONG celt);", "IEnumBackgroundCopyGroups_Reset_Proxy": "HRESULT WINAPI IEnumBackgroundCopyGroups_Reset_Proxy(IEnumBackgroundCopyGroups *This);", "IEnumBackgroundCopyGroups_Clone_Proxy": "HRESULT WINAPI IEnumBackgroundCopyGroups_Clone_Proxy(IEnumBackgroundCopyGroups *This,IEnumBackgroundCopyGroups **ppenum);", "IEnumBackgroundCopyGroups_GetCount_Proxy": "HRESULT WINAPI IEnumBackgroundCopyGroups_GetCount_Proxy(IEnumBackgroundCopyGroups *This,ULONG *puCount);", "IBackgroundCopyCallback1_OnStatus_Proxy": "HRESULT WINAPI IBackgroundCopyCallback1_OnStatus_Proxy(IBackgroundCopyCallback1 *This,IBackgroundCopyGroup *pGroup,IBackgroundCopyJob1 *pJob,DWORD dwFileIndex,DWORD dwStatus,DWORD dwNumOfRetries,DWORD dwWin32Result,DWORD dwTransportResult);", "IBackgroundCopyCallback1_OnProgress_Proxy": "HRESULT WINAPI IBackgroundCopyCallback1_OnProgress_Proxy(IBackgroundCopyCallback1 *This,DWORD ProgressType,IBackgroundCopyGroup *pGroup,IBackgroundCopyJob1 *pJob,DWORD dwFileIndex,DWORD dwProgressValue);", "IBackgroundCopyCallback1_OnProgressEx_Proxy": "HRESULT WINAPI IBackgroundCopyCallback1_OnProgressEx_Proxy(IBackgroundCopyCallback1 *This,DWORD ProgressType,IBackgroundCopyGroup *pGroup,IBackgroundCopyJob1 *pJob,DWORD dwFileIndex,DWORD dwProgressValue,DWORD dwByteArraySize,BYTE *pByte);", "IBackgroundCopyQMgr_CreateGroup_Proxy": "HRESULT WINAPI IBackgroundCopyQMgr_CreateGroup_Proxy(IBackgroundCopyQMgr *This,GUID guidGroupID,IBackgroundCopyGroup **ppGroup);", "IBackgroundCopyQMgr_GetGroup_Proxy": "HRESULT WINAPI IBackgroundCopyQMgr_GetGroup_Proxy(IBackgroundCopyQMgr *This,GUID groupID,IBackgroundCopyGroup **ppGroup);", "IBackgroundCopyQMgr_EnumGroups_Proxy": "HRESULT WINAPI IBackgroundCopyQMgr_EnumGroups_Proxy(IBackgroundCopyQMgr *This,DWORD dwFlags,IEnumBackgroundCopyGroups **ppEnumGroups);", "IBackgroundCopyGroup_SetProp_Proxy": "HRESULT WINAPI IBackgroundCopyGroup_SetProp_Proxy(IBackgroundCopyGroup *This,GROUPPROP propID,VARIANT *pvarVal);", "IBackgroundCopyGroup_SetProp_Stub": "HRESULT WINAPI IBackgroundCopyGroup_SetProp_Stub(IBackgroundCopyGroup *This,GROUPPROP propID,VARIANT *pvarVal);", "GetCurrentPackageId": "WINBASEAPI LONG WINAPI GetCurrentPackageId(UINT32 *bufferLength, BYTE *buffer);", "GetCurrentPackageFullName": "WINBASEAPI LONG WINAPI GetCurrentPackageFullName(UINT32 *packageFullNameLength, PWSTR packageFullName);", "GetCurrentPackageFamilyName": "WINBASEAPI LONG WINAPI GetCurrentPackageFamilyName(UINT32 *packageFamilyNameLength, PWSTR packageFamilyName);", "GetCurrentPackagePath": "WINBASEAPI LONG WINAPI GetCurrentPackagePath(UINT32 *pathLength, PWSTR path);", "GetPackageId": "WINBASEAPI LONG WINAPI GetPackageId(HANDLE hProcess, UINT32 *bufferLength, BYTE *buffer);", "GetPackageFullName": "WINBASEAPI LONG WINAPI GetPackageFullName(HANDLE hProcess, UINT32 *packageFullNameLength, PWSTR packageFullName);", "GetPackageFullNameFromToken": "WINBASEAPI LONG WINAPI GetPackageFullNameFromToken(HANDLE token, UINT32 *packageFullNameLength, PWSTR packageFullName);", "GetPackageFamilyName": "WINBASEAPI LONG WINAPI GetPackageFamilyName(HANDLE hProcess, UINT32 *packageFamilyNameLength, PWSTR packageFamilyName);", "GetPackageFamilyNameFromToken": "WINBASEAPI LONG WINAPI GetPackageFamilyNameFromToken(HANDLE token, UINT32 *packageFamilyNameLength, PWSTR packageFamilyName);", "GetPackagePath": "WINBASEAPI LONG WINAPI GetPackagePath(const PACKAGE_ID *packageId, const UINT32 reserved, UINT32 *pathLength, PWSTR path);", "GetPackagePathByFullName": "WINBASEAPI LONG WINAPI GetPackagePathByFullName(PCWSTR packageFullName, UINT32 *pathLength, PWSTR path);", "GetStagedPackagePathByFullName": "WINBASEAPI LONG WINAPI GetStagedPackagePathByFullName(PCWSTR packageFullName, UINT32 *pathLength, PWSTR path);", "GetPackagePathByFullName2": "WINBASEAPI LONG WINAPI GetPackagePathByFullName2(PCWSTR packageFullName, PackagePathType packagePathType, UINT32 *pathLength, PWSTR path);", "GetStagedPackagePathByFullName2": "WINBASEAPI LONG WINAPI GetStagedPackagePathByFullName2(PCWSTR packageFullName, PackagePathType packagePathType, UINT32 *pathLength, PWSTR path);", "GetCurrentPackageInfo2": "WINBASEAPI LONG WINAPI GetCurrentPackageInfo2(const UINT32 flags, PackagePathType packagePathType, UINT32 *bufferLength, BYTE *buffer, UINT32 *count);", "GetCurrentPackagePath2": "WINBASEAPI LONG WINAPI GetCurrentPackagePath2(PackagePathType packagePathType, UINT32 *pathLength, PWSTR path);", "GetCurrentApplicationUserModelId": "WINBASEAPI LONG WINAPI GetCurrentApplicationUserModelId(UINT32 *applicationUserModelIdLength, PWSTR applicationUserModelId);", "GetApplicationUserModelId": "WINBASEAPI LONG WINAPI GetApplicationUserModelId(HANDLE hProcess, UINT32 *applicationUserModelIdLength, PWSTR applicationUserModelId);", "GetApplicationUserModelIdFromToken": "WINBASEAPI LONG WINAPI GetApplicationUserModelIdFromToken(HANDLE token, UINT32 *applicationUserModelIdLength, PWSTR applicationUserModelId);", "VerifyPackageFullName": "WINBASEAPI LONG WINAPI VerifyPackageFullName(PCWSTR packageFullName);", "VerifyPackageFamilyName": "WINBASEAPI LONG WINAPI VerifyPackageFamilyName(PCWSTR packageFamilyName);", "VerifyPackageId": "WINBASEAPI LONG WINAPI VerifyPackageId(const PACKAGE_ID *packageId);", "VerifyApplicationUserModelId": "WINBASEAPI LONG WINAPI VerifyApplicationUserModelId(PCWSTR applicationUserModelId);", "VerifyPackageRelativeApplicationId": "WINBASEAPI LONG WINAPI VerifyPackageRelativeApplicationId(PCWSTR packageRelativeApplicationId);", "PackageIdFromFullName": "WINBASEAPI LONG WINAPI PackageIdFromFullName(PCWSTR packageFullName, const UINT32 flags, UINT32 *bufferLength, BYTE *buffer);", "PackageFullNameFromId": "WINBASEAPI LONG WINAPI PackageFullNameFromId(const PACKAGE_ID *packageId, UINT32 *packageFullNameLength, PWSTR packageFullName);", "PackageFamilyNameFromId": "WINBASEAPI LONG WINAPI PackageFamilyNameFromId(const PACKAGE_ID *packageId, UINT32 *packageFamilyNameLength, PWSTR packageFamilyName);", "PackageFamilyNameFromFullName": "WINBASEAPI LONG WINAPI PackageFamilyNameFromFullName(PCWSTR packageFullName, UINT32 *packageFamilyNameLength, PWSTR packageFamilyName);", "PackageNameAndPublisherIdFromFamilyName": "WINBASEAPI LONG WINAPI PackageNameAndPublisherIdFromFamilyName(PCWSTR packageFamilyName, UINT32 *packageNameLength, PWSTR packageName, UINT32 *packagePublisherIdLength, PWSTR packagePublisherId);", "FormatApplicationUserModelId": "WINBASEAPI LONG WINAPI FormatApplicationUserModelId(PCWSTR packageFamilyName, PCWSTR packageRelativeApplicationId, UINT32 *applicationUserModelIdLength, PWSTR applicationUserModelId);", "ParseApplicationUserModelId": "WINBASEAPI LONG WINAPI ParseApplicationUserModelId(PCWSTR applicationUserModelId, UINT32 *packageFamilyNameLength, PWSTR packageFamilyName, UINT32 *packageRelativeApplicationIdLength, PWSTR packageRelativeApplicationId);", "GetPackagesByPackageFamily": "WINBASEAPI LONG WINAPI GetPackagesByPackageFamily(PCWSTR packageFamilyName, UINT32 *count, PWSTR *packageFullNames, UINT32 *bufferLength, WCHAR *buffer);", "FindPackagesByPackageFamily": "WINBASEAPI LONG WINAPI FindPackagesByPackageFamily(PCWSTR packageFamilyName, UINT32 packageFilters, UINT32 *count, PWSTR *packageFullNames, UINT32 *bufferLength, WCHAR *buffer, UINT32 *packageProperties);", "GetStagedPackageOrigin": "WINBASEAPI LONG WINAPI GetStagedPackageOrigin(PCWSTR packageFullName, PackageOrigin *origin);", "GetCurrentPackageInfo": "WINBASEAPI LONG WINAPI GetCurrentPackageInfo(const UINT32 flags, UINT32 *bufferLength, BYTE *buffer, UINT32 *count);", "OpenPackageInfoByFullName": "WINBASEAPI LONG WINAPI OpenPackageInfoByFullName(PCWSTR packageFullName, const UINT32 reserved, PACKAGE_INFO_REFERENCE *packageInfoReference);", "OpenPackageInfoByFullNameForUser": "WINBASEAPI LONG WINAPI OpenPackageInfoByFullNameForUser(PSID userSid, PCWSTR packageFullName, const UINT32 reserved, PACKAGE_INFO_REFERENCE *packageInfoReference);", "ClosePackageInfo": "WINBASEAPI LONG WINAPI ClosePackageInfo(PACKAGE_INFO_REFERENCE packageInfoReference);", "GetPackageInfo": "WINBASEAPI LONG WINAPI GetPackageInfo(PACKAGE_INFO_REFERENCE packageInfoReference, const UINT32 flags, UINT32 *bufferLength, BYTE *buffer, UINT32 *count);", "GetPackageApplicationIds": "WINBASEAPI LONG WINAPI GetPackageApplicationIds(PACKAGE_INFO_REFERENCE packageInfoReference, UINT32 *bufferLength, BYTE *buffer, UINT32 *count);", "GetPackageInfo2": "WINBASEAPI LONG WINAPI GetPackageInfo2(PACKAGE_INFO_REFERENCE packageInfoReference, const UINT32 flags, PackagePathType packagePathType, UINT32 *bufferLength, BYTE *buffer, UINT32 *count);", "CheckIsMSIXPackage": "WINBASEAPI HRESULT WINAPI CheckIsMSIXPackage(PCWSTR packageFullName, WINBOOL *isMSIXPackage);", "TryCreatePackageDependency": "WINBASEAPI HRESULT WINAPI TryCreatePackageDependency(PSID user, PCWSTR packageFamilyName, PACKAGE_VERSION minVersion, PackageDependencyProcessorArchitectures packageDependencyProcessorArchitectures, PackageDependencyLifetimeKind lifetimeKind, PCWSTR lifetimeArtifact, CreatePackageDependencyOptions options, PWSTR *packageDependencyId);", "DeletePackageDependency": "WINBASEAPI HRESULT WINAPI DeletePackageDependency(PCWSTR packageDependencyId);", "AddPackageDependency": "WINBASEAPI HRESULT WINAPI AddPackageDependency(PCWSTR packageDependencyId, INT32 rank, AddPackageDependencyOptions options, PACKAGEDEPENDENCY_CONTEXT *packageDependencyContext, PWSTR *packageFullName);", "RemovePackageDependency": "WINBASEAPI HRESULT WINAPI RemovePackageDependency(PACKAGEDEPENDENCY_CONTEXT packageDependencyContext);", "GetResolvedPackageFullNameForPackageDependency": "WINBASEAPI HRESULT WINAPI GetResolvedPackageFullNameForPackageDependency(PCWSTR packageDependencyId, PWSTR *packageFullName);", "GetIdForPackageDependencyContext": "WINBASEAPI HRESULT WINAPI GetIdForPackageDependencyContext(PACKAGEDEPENDENCY_CONTEXT packageDependencyContext, PWSTR *packageDependencyId);", "GetPackageGraphRevisionId": "WINBASEAPI UINT32 WINAPI GetPackageGraphRevisionId(void);", "AppPolicyGetLifecycleManagement": "WINBASEAPI LONG WINAPI AppPolicyGetLifecycleManagement(HANDLE processToken, AppPolicyLifecycleManagement *policy);", "AppPolicyGetWindowingModel": "WINBASEAPI LONG WINAPI AppPolicyGetWindowingModel(HANDLE processToken, AppPolicyWindowingModel *policy);", "AppPolicyGetMediaFoundationCodecLoading": "WINBASEAPI LONG WINAPI AppPolicyGetMediaFoundationCodecLoading(HANDLE processToken, AppPolicyMediaFoundationCodecLoading *policy);", "AppPolicyGetClrCompat": "WINBASEAPI LONG WINAPI AppPolicyGetClrCompat(HANDLE processToken, AppPolicyClrCompat *policy);", "AppPolicyGetThreadInitializationType": "WINBASEAPI LONG WINAPI AppPolicyGetThreadInitializationType(HANDLE processToken, AppPolicyThreadInitializationType *policy);", "AppPolicyGetShowDeveloperDiagnostic": "WINBASEAPI LONG WINAPI AppPolicyGetShowDeveloperDiagnostic(HANDLE processToken, AppPolicyShowDeveloperDiagnostic *policy);", "AppPolicyGetProcessTerminationMethod": "WINBASEAPI LONG WINAPI AppPolicyGetProcessTerminationMethod(HANDLE processToken, AppPolicyProcessTerminationMethod *policy);", "AppPolicyGetCreateFileAccess": "WINBASEAPI LONG WINAPI AppPolicyGetCreateFileAccess(HANDLE processToken, AppPolicyCreateFileAccess *policy);", "NetApiBufferAllocate": "NET_API_STATUS WINAPI NetApiBufferAllocate(DWORD ByteCount,LPVOID *Buffer);", "NetApiBufferFree": "NET_API_STATUS WINAPI NetApiBufferFree(LPVOID Buffer);", "NetApiBufferReallocate": "NET_API_STATUS WINAPI NetApiBufferReallocate(LPVOID OldBuffer,DWORD NewByteCount,LPVOID *NewBuffer);", "NetApiBufferSize": "NET_API_STATUS WINAPI NetApiBufferSize(LPVOID Buffer,LPDWORD ByteCount);", "NetapipBufferAllocate": "NET_API_STATUS WINAPI NetapipBufferAllocate(DWORD ByteCount,LPVOID *Buffer);", "CredWriteW": "WINADVAPI WINBOOL WINAPI CredWriteW(PCREDENTIALW Credential,DWORD Flags);", "CredWriteA": "WINADVAPI WINBOOL WINAPI CredWriteA(PCREDENTIALA Credential,DWORD Flags);", "CredReadW": "WINADVAPI WINBOOL WINAPI CredReadW(LPCWSTR TargetName,DWORD Type,DWORD Flags,PCREDENTIALW *Credential);", "CredReadA": "WINADVAPI WINBOOL WINAPI CredReadA(LPCSTR TargetName,DWORD Type,DWORD Flags,PCREDENTIALA *Credential);", "CredEnumerateW": "WINADVAPI WINBOOL WINAPI CredEnumerateW(LPCWSTR Filter,DWORD Flags,DWORD *Count,PCREDENTIALW **Credential);", "CredEnumerateA": "WINADVAPI WINBOOL WINAPI CredEnumerateA(LPCSTR Filter,DWORD Flags,DWORD *Count,PCREDENTIALA **Credential);", "CredWriteDomainCredentialsW": "WINADVAPI WINBOOL WINAPI CredWriteDomainCredentialsW(PCREDENTIAL_TARGET_INFORMATIONW TargetInfo,PCREDENTIALW Credential,DWORD Flags);", "CredWriteDomainCredentialsA": "WINADVAPI WINBOOL WINAPI CredWriteDomainCredentialsA(PCREDENTIAL_TARGET_INFORMATIONA TargetInfo,PCREDENTIALA Credential,DWORD Flags);", "CredReadDomainCredentialsW": "WINADVAPI WINBOOL WINAPI CredReadDomainCredentialsW(PCREDENTIAL_TARGET_INFORMATIONW TargetInfo,DWORD Flags,DWORD *Count,PCREDENTIALW **Credential);", "CredReadDomainCredentialsA": "WINADVAPI WINBOOL WINAPI CredReadDomainCredentialsA(PCREDENTIAL_TARGET_INFORMATIONA TargetInfo,DWORD Flags,DWORD *Count,PCREDENTIALA **Credential);", "CredDeleteW": "WINADVAPI WINBOOL WINAPI CredDeleteW(LPCWSTR TargetName,DWORD Type,DWORD Flags);", "CredDeleteA": "WINADVAPI WINBOOL WINAPI CredDeleteA(LPCSTR TargetName,DWORD Type,DWORD Flags);", "CredRenameW": "WINADVAPI WINBOOL WINAPI CredRenameW(LPCWSTR OldTargetName,LPCWSTR NewTargetName,DWORD Type,DWORD Flags);", "CredRenameA": "WINADVAPI WINBOOL WINAPI CredRenameA(LPCSTR OldTargetName,LPCSTR NewTargetName,DWORD Type,DWORD Flags);", "CredGetTargetInfoW": "WINADVAPI WINBOOL WINAPI CredGetTargetInfoW(LPCWSTR TargetName,DWORD Flags,PCREDENTIAL_TARGET_INFORMATIONW *TargetInfo);", "CredGetTargetInfoA": "WINADVAPI WINBOOL WINAPI CredGetTargetInfoA(LPCSTR TargetName,DWORD Flags,PCREDENTIAL_TARGET_INFORMATIONA *TargetInfo);", "CredMarshalCredentialW": "WINADVAPI WINBOOL WINAPI CredMarshalCredentialW(CRED_MARSHAL_TYPE CredType,PVOID Credential,LPWSTR *MarshaledCredential);", "CredMarshalCredentialA": "WINADVAPI WINBOOL WINAPI CredMarshalCredentialA(CRED_MARSHAL_TYPE CredType,PVOID Credential,LPSTR *MarshaledCredential);", "CredUnmarshalCredentialW": "WINADVAPI WINBOOL WINAPI CredUnmarshalCredentialW(LPCWSTR MarshaledCredential,PCRED_MARSHAL_TYPE CredType,PVOID *Credential);", "CredUnmarshalCredentialA": "WINADVAPI WINBOOL WINAPI CredUnmarshalCredentialA(LPCSTR MarshaledCredential,PCRED_MARSHAL_TYPE CredType,PVOID *Credential);", "CredIsMarshaledCredentialW": "WINADVAPI WINBOOL WINAPI CredIsMarshaledCredentialW(LPCWSTR MarshaledCredential);", "CredIsMarshaledCredentialA": "WINADVAPI WINBOOL WINAPI CredIsMarshaledCredentialA(LPCSTR MarshaledCredential);", "CredGetSessionTypes": "WINADVAPI WINBOOL WINAPI CredGetSessionTypes (DWORD MaximumPersistCount,LPDWORD MaximumPersist);", "CredFree": "WINADVAPI VOID WINAPI CredFree (PVOID Buffer);", "CredUIPromptForCredentialsW": "CREDUIAPI DWORD WINAPI CredUIPromptForCredentialsW(PCREDUI_INFOW pUiInfo,PCWSTR pszTargetName,PCtxtHandle pContext,DWORD dwAuthError,PWSTR pszUserName,ULONG ulUserNameBufferSize,PWSTR pszPassword,ULONG ulPasswordBufferSize,WINBOOL *save,DWORD dwFlags);", "CredUIPromptForCredentialsA": "CREDUIAPI DWORD WINAPI CredUIPromptForCredentialsA(PCREDUI_INFOA pUiInfo,PCSTR pszTargetName,PCtxtHandle pContext,DWORD dwAuthError,PSTR pszUserName,ULONG ulUserNameBufferSize,PSTR pszPassword,ULONG ulPasswordBufferSize,WINBOOL *save,DWORD dwFlags);", "CredUIParseUserNameW": "CREDUIAPI DWORD WINAPI CredUIParseUserNameW(CONST WCHAR *UserName,WCHAR *user,ULONG userBufferSize,WCHAR *domain,ULONG domainBufferSize);", "CredUIParseUserNameA": "CREDUIAPI DWORD WINAPI CredUIParseUserNameA(CONST CHAR *userName,CHAR *user,ULONG userBufferSize,CHAR *domain,ULONG domainBufferSize);", "CredUICmdLinePromptForCredentialsW": "CREDUIAPI DWORD WINAPI CredUICmdLinePromptForCredentialsW(PCWSTR pszTargetName,PCtxtHandle pContext,DWORD dwAuthError,PWSTR UserName,ULONG ulUserBufferSize,PWSTR pszPassword,ULONG ulPasswordBufferSize,PBOOL pfSave,DWORD dwFlags);", "CredUICmdLinePromptForCredentialsA": "CREDUIAPI DWORD WINAPI CredUICmdLinePromptForCredentialsA(PCSTR pszTargetName,PCtxtHandle pContext,DWORD dwAuthError,PSTR UserName,ULONG ulUserBufferSize,PSTR pszPassword,ULONG ulPasswordBufferSize,PBOOL pfSave,DWORD dwFlags);", "CredUIConfirmCredentialsW": "CREDUIAPI DWORD WINAPI CredUIConfirmCredentialsW(PCWSTR pszTargetName,WINBOOL bConfirm);", "CredUIConfirmCredentialsA": "CREDUIAPI DWORD WINAPI CredUIConfirmCredentialsA(PCSTR pszTargetName,WINBOOL bConfirm);", "CredUIStoreSSOCredW": "CREDUIAPI DWORD WINAPI CredUIStoreSSOCredW (PCWSTR pszRealm,PCWSTR pszUsername,PCWSTR pszPassword,WINBOOL bPersist);", "CredUIReadSSOCredW": "CREDUIAPI DWORD WINAPI CredUIReadSSOCredW (PCWSTR pszRealm,PWSTR *ppszUsername);", "CredFindBestCredentialA": "WINADVAPI WINBOOL WINAPI CredFindBestCredentialA(", "CredFindBestCredentialW": "WINADVAPI WINBOOL WINAPI CredFindBestCredentialW(", "CredIsProtectedA": "WINADVAPI WINBOOL WINAPI CredIsProtectedA(", "CredIsProtectedW": "WINADVAPI WINBOOL WINAPI CredIsProtectedW(", "CredPackAuthenticationBufferA": "CREDUIAPI WINBOOL WINAPI CredPackAuthenticationBufferA(", "CredPackAuthenticationBufferW": "CREDUIAPI WINBOOL WINAPI CredPackAuthenticationBufferW(", "CredProtectW": "WINADVAPI WINBOOL WINAPI CredProtectW(", "CredProtectA": "WINADVAPI WINBOOL WINAPI CredProtectA(", "CredUIPromptForWindowsCredentialsA": "CREDUIAPI DWORD WINAPI CredUIPromptForWindowsCredentialsA(", "CredUIPromptForWindowsCredentialsW": "CREDUIAPI DWORD WINAPI CredUIPromptForWindowsCredentialsW(", "CredUnPackAuthenticationBufferA": "CREDUIAPI WINBOOL WINAPI CredUnPackAuthenticationBufferA(", "CredUnPackAuthenticationBufferW": "CREDUIAPI WINBOOL WINAPI CredUnPackAuthenticationBufferW(", "CredUnprotectA": "WINADVAPI WINBOOL WINAPI CredUnprotectA(", "CredUnprotectW": "WINADVAPI WINBOOL WINAPI CredUnprotectW(", "WSDCreateDiscoveryProvider": "HRESULT WINAPI WSDCreateDiscoveryProvider(IWSDXMLContext *pContext, IWSDiscoveryProvider **ppProvider);", "WSDCreateDiscoveryPublisher": "HRESULT WINAPI WSDCreateDiscoveryPublisher(IWSDXMLContext* pContext, IWSDiscoveryPublisher **ppPublisher);", "WSDCreateDiscoveryProvider2": "HRESULT WINAPI WSDCreateDiscoveryProvider2(IWSDXMLContext *pContext, WSD_CONFIG_PARAM *pConfigParams, DWORD dwConfigParamCount, IWSDiscoveryProvider **ppProvider);", "WSDCreateDiscoveryPublisher2": "HRESULT WINAPI WSDCreateDiscoveryPublisher2(IWSDXMLContext *pContext, WSD_CONFIG_PARAM *pConfigParams, DWORD dwConfigParamCount, IWSDiscoveryPublisher **ppPublisher);", "NetScheduleJobAdd": "NET_API_STATUS WINAPI NetScheduleJobAdd(LPCWSTR Servername,LPBYTE Buffer,LPDWORD JobId);", "NetScheduleJobDel": "NET_API_STATUS WINAPI NetScheduleJobDel(LPCWSTR Servername,DWORD MinJobId,DWORD MaxJobId);", "NetScheduleJobEnum": "NET_API_STATUS WINAPI NetScheduleJobEnum(LPCWSTR Servername,LPBYTE *PointerToBuffer,DWORD PrefferedMaximumLength,LPDWORD EntriesRead,LPDWORD TotalEntries,LPDWORD ResumeHandle);", "NetScheduleJobGetInfo": "NET_API_STATUS WINAPI NetScheduleJobGetInfo(LPCWSTR Servername,DWORD JobId,LPBYTE *PointerToBuffer);", "MxdcGetPDEVAdjustment": "HRESULT WINAPI MxdcGetPDEVAdjustment (HANDLE hPrinter, ULONG cbDevMode, const DEVMODE *pDevMode, ULONG cbIn, const VOID *pvIn, ULONG cbPrintPropertiesCollection, PrintPropertiesCollection *pPrintPropertiesCollection);", "RunSetupCommand": "HRESULT WINAPI RunSetupCommand(HWND hWnd,LPCSTR szCmdName,LPCSTR szInfSection,LPCSTR szDir,LPCSTR lpszTitle,HANDLE *phEXE,DWORD dwFlags,LPVOID pvReserved);", "NeedRebootInit": "DWORD WINAPI NeedRebootInit(VOID);", "NeedReboot": "WINBOOL WINAPI NeedReboot(DWORD dwRebootCheck);", "RebootCheckOnInstall": "HRESULT WINAPI RebootCheckOnInstall(HWND hwnd,PCSTR pszINF,PCSTR pszSec,DWORD dwReserved);", "TranslateInfString": "HRESULT WINAPI TranslateInfString(PCSTR pszInfFilename,PCSTR pszInstallSection,PCSTR pszTranslateSection,PCSTR pszTranslateKey,PSTR pszBuffer,DWORD dwBufferSize,PDWORD pdwRequiredSize,PVOID pvReserved);", "RegInstall": "HRESULT WINAPI RegInstall(HMODULE hm,LPCSTR pszSection,LPCSTRTABLE pstTable);", "LaunchINFSectionEx": "HRESULT WINAPI LaunchINFSectionEx(HWND hwnd,HINSTANCE hInstance,PSTR pszParms,INT nShow);", "ExecuteCab": "HRESULT WINAPI ExecuteCab(HWND hwnd,PCABINFO pCab,LPVOID pReserved);", "AdvInstallFile": "HRESULT WINAPI AdvInstallFile(HWND hwnd,LPCSTR lpszSourceDir,LPCSTR lpszSourceFile,LPCSTR lpszDestDir,LPCSTR lpszDestFile,DWORD dwFlags,DWORD dwReserved);", "RegSaveRestore": "HRESULT WINAPI RegSaveRestore(HWND hWnd,PCSTR pszTitleString,HKEY hkBckupKey,PCSTR pcszRootKey,PCSTR pcszSubKey,PCSTR pcszValueName,DWORD dwFlags);", "RegSaveRestoreOnINF": "HRESULT WINAPI RegSaveRestoreOnINF(HWND hWnd,PCSTR pszTitle,PCSTR pszINF,PCSTR pszSection,HKEY hHKLMBackKey,HKEY hHKCUBackKey,DWORD dwFlags);", "RegRestoreAll": "HRESULT WINAPI RegRestoreAll(HWND hWnd,PSTR pszTitleString,HKEY hkBckupKey);", "FileSaveRestore": "HRESULT WINAPI FileSaveRestore(HWND hDlg,LPSTR lpFileList,LPSTR lpDir,LPSTR lpBaseName,DWORD dwFlags);", "FileSaveRestoreOnINF": "HRESULT WINAPI FileSaveRestoreOnINF(HWND hWnd,PCSTR pszTitle,PCSTR pszINF,PCSTR pszSection,PCSTR pszBackupDir,PCSTR pszBaseBackupFile,DWORD dwFlags);", "AddDelBackupEntry": "HRESULT WINAPI AddDelBackupEntry(LPCSTR lpcszFileList,LPCSTR lpcszBackupDir,LPCSTR lpcszBaseName,DWORD dwFlags);", "FileSaveMarkNotExist": "HRESULT WINAPI FileSaveMarkNotExist(LPSTR lpFileList,LPSTR lpDir,LPSTR lpBaseName);", "GetVersionFromFile": "HRESULT WINAPI GetVersionFromFile(LPSTR lpszFilename,LPDWORD pdwMSVer,LPDWORD pdwLSVer,WINBOOL bVersion);", "GetVersionFromFileEx": "HRESULT WINAPI GetVersionFromFileEx(LPSTR lpszFilename,LPDWORD pdwMSVer,LPDWORD pdwLSVer,WINBOOL bVersion);", "IsNTAdmin": "WINBOOL WINAPI IsNTAdmin(DWORD dwReserved,DWORD *lpdwReserved);", "DelNode": "HRESULT WINAPI DelNode(LPCSTR pszFileOrDirName,DWORD dwFlags);", "DelNodeRunDLL32": "HRESULT WINAPI DelNodeRunDLL32(HWND hwnd,HINSTANCE hInstance,PSTR pszParms,INT nShow);", "OpenINFEngine": "HRESULT WINAPI OpenINFEngine(PCSTR pszInfFilename,PCSTR pszInstallSection,DWORD dwFlags,HINF *phInf,PVOID pvReserved);", "TranslateInfStringEx": "HRESULT WINAPI TranslateInfStringEx(HINF hInf,PCSTR pszInfFilename,PCSTR pszTranslateSection,PCSTR pszTranslateKey,PSTR pszBuffer,DWORD dwBufferSize,PDWORD pdwRequiredSize,PVOID pvReserved);", "CloseINFEngine": "HRESULT WINAPI CloseINFEngine(HINF hInf);", "ExtractFiles": "HRESULT WINAPI ExtractFiles(LPCSTR pszCabName,LPCSTR pszExpandDir,DWORD dwFlags,LPCSTR pszFileList,LPVOID lpReserved,DWORD dwReserved);", "LaunchINFSection": "INT WINAPI LaunchINFSection(HWND,HINSTANCE,PSTR,INT);", "UserInstStubWrapper": "HRESULT WINAPI UserInstStubWrapper(HWND hwnd,HINSTANCE hInstance,PSTR pszParms,INT nShow);", "UserUnInstStubWrapper": "HRESULT WINAPI UserUnInstStubWrapper(HWND hwnd,HINSTANCE hInstance,PSTR pszParms,INT nShow);", "SetPerUserSecValues": "HRESULT WINAPI SetPerUserSecValues(PPERUSERSECTION pPerUser);", "SfcGetNextProtectedFile": "WINBOOL WINAPI SfcGetNextProtectedFile(HANDLE RpcHandle,PPROTECTED_FILE_DATA ProtFileData);", "SfcIsFileProtected": "WINBOOL WINAPI SfcIsFileProtected(HANDLE RpcHandle,LPCWSTR ProtFileName);", "SfpVerifyFile": "WINBOOL WINAPI SfpVerifyFile(LPCSTR pszFileName,LPSTR pszError,DWORD dwErrSize);", "SfcIsKeyProtected": "WINBOOL WINAPI SfcIsKeyProtected(", "ShowKeyboard": "WINBOOL WINAPI ShowKeyboard(HWND,UINT,LPPOINT,LPSKBINFO);", "BeginEnumStrokes": "LPPENDATA WINAPI BeginEnumStrokes(HPENDATA);", "EndEnumStrokes": "LPPENDATA WINAPI EndEnumStrokes(HPENDATA);", "CompactPenData": "HPENDATA WINAPI CompactPenData(HPENDATA,UINT);", "CreatePenData": "HPENDATA WINAPI CreatePenData(LPPENINFO,int,UINT,UINT);", "DrawPenData": "VOID WINAPI DrawPenData(HDC,LPRECT,HPENDATA);", "GetPenDataStroke": "WINBOOL WINAPI GetPenDataStroke(LPPENDATA,UINT,LPPOINT *,LPVOID *,LPSTROKEINFO);", "AddPointsPenData": "HPENDATA WINAPI AddPointsPenData(HPENDATA,LPPOINT,LPVOID,LPSTROKEINFO);", "CompressPenData": "int WINAPI CompressPenData(HPENDATA,UINT,DWORD);", "CreatePenDataEx": "HPENDATA WINAPI CreatePenDataEx(LPPENINFO,UINT,UINT,UINT);", "CreatePenDataRegion": "HRGN WINAPI CreatePenDataRegion(HPENDATA,UINT);", "DestroyPenData": "WINBOOL WINAPI DestroyPenData(HPENDATA);", "DrawPenDataEx": "int WINAPI DrawPenDataEx(HDC,LPRECT,HPENDATA,UINT,UINT,UINT,UINT,ANIMATEPROC,LPANIMATEINFO,UINT);", "DuplicatePenData": "HPENDATA WINAPI DuplicatePenData(HPENDATA,UINT);", "ExtractPenDataPoints": "int WINAPI ExtractPenDataPoints(HPENDATA,UINT,UINT,UINT,LPPOINT,LPVOID,UINT);", "ExtractPenDataStrokes": "int WINAPI ExtractPenDataStrokes(HPENDATA,UINT,LPARAM,LPHPENDATA,UINT);", "GetPenDataAttributes": "int WINAPI GetPenDataAttributes(HPENDATA,LPVOID,UINT);", "GetPenDataInfo": "WINBOOL WINAPI GetPenDataInfo(HPENDATA,LPPENDATAHEADER,LPPENINFO,DWORD);", "GetPointsFromPenData": "WINBOOL WINAPI GetPointsFromPenData(HPENDATA,UINT,UINT,UINT,LPPOINT);", "GetStrokeAttributes": "int WINAPI GetStrokeAttributes(HPENDATA,UINT,LPVOID,UINT);", "GetStrokeTableAttributes": "int WINAPI GetStrokeTableAttributes(HPENDATA,UINT,LPVOID,UINT);", "HitTestPenData": "int WINAPI HitTestPenData(HPENDATA,LPPOINT,UINT,UINT *,UINT *);", "InsertPenData": "int WINAPI InsertPenData(HPENDATA,HPENDATA,UINT);", "InsertPenDataPoints": "int WINAPI InsertPenDataPoints(HPENDATA,UINT,UINT,UINT,LPPOINT,LPVOID);", "InsertPenDataStroke": "int WINAPI InsertPenDataStroke(HPENDATA,UINT,LPPOINT,LPVOID,LPSTROKEINFO);", "MetricScalePenData": "WINBOOL WINAPI MetricScalePenData(HPENDATA,UINT);", "OffsetPenData": "WINBOOL WINAPI OffsetPenData(HPENDATA,int,int);", "PenDataFromBuffer": "LONG WINAPI PenDataFromBuffer(LPHPENDATA,UINT,LPBYTE,LONG,LPDWORD);", "PenDataToBuffer": "LONG WINAPI PenDataToBuffer(HPENDATA,LPBYTE,LONG,LPDWORD);", "RedisplayPenData": "WINBOOL WINAPI RedisplayPenData(HDC,HPENDATA,LPPOINT,LPPOINT,int,DWORD);", "RemovePenDataStrokes": "int WINAPI RemovePenDataStrokes(HPENDATA,UINT,UINT);", "ResizePenData": "WINBOOL WINAPI ResizePenData(HPENDATA,LPRECT);", "SetStrokeAttributes": "int WINAPI SetStrokeAttributes(HPENDATA,UINT,LPARAM,UINT);", "SetStrokeTableAttributes": "int WINAPI SetStrokeTableAttributes(HPENDATA,UINT,LPARAM,UINT);", "TrimPenData": "int WINAPI TrimPenData(HPENDATA,DWORD,DWORD);", "DictionarySearch": "WINBOOL WINAPI DictionarySearch(LPRC,LPSYE,int,LPSYV,int);", "EndPenCollection": "WINBOOL WINAPI EndPenCollection(REC);", "GetPenHwData": "REC WINAPI GetPenHwData(LPPOINT,LPVOID,int,UINT,LPSTROKEINFO);", "GetPenHwEventData": "REC WINAPI GetPenHwEventData(UINT,UINT,LPPOINT,LPVOID,int,LPSTROKEINFO);", "SetPenHook": "WINBOOL WINAPI SetPenHook(HKP,LPFNRAWHOOK);", "UpdatePenInfo": "VOID WINAPI UpdatePenInfo(LPPENINFO);", "GetPenAsyncState": "WINBOOL WINAPI GetPenAsyncState(UINT);", "IsPenEvent": "WINBOOL WINAPI IsPenEvent(UINT,LONG);", "AddPenDataHRC": "int WINAPI AddPenDataHRC(HRC,HPENDATA);", "AddPenInputHRC": "int WINAPI AddPenInputHRC(HRC,LPPOINT,LPVOID,UINT,LPSTROKEINFO);", "AddWordsHWL": "int WINAPI AddWordsHWL(HWL,LPSTR,UINT);", "ConfigHREC": "int WINAPI ConfigHREC(HREC,UINT,WPARAM,LPARAM);", "CreateCompatibleHRC": "HRC WINAPI CreateCompatibleHRC(HRC,HREC);", "CreateHWL": "HWL WINAPI CreateHWL(HREC,LPSTR,UINT,DWORD);", "CreateInksetHRCRESULT": "HINKSET WINAPI CreateInksetHRCRESULT(HRCRESULT,UINT,UINT);", "CreatePenDataHRC": "HPENDATA WINAPI CreatePenDataHRC(HRC);", "DestroyHRC": "int WINAPI DestroyHRC(HRC);", "DestroyHRCRESULT": "int WINAPI DestroyHRCRESULT(HRCRESULT);", "DestroyHWL": "int WINAPI DestroyHWL(HWL);", "EnableGestureSetHRC": "int WINAPI EnableGestureSetHRC(HRC,SYV,WINBOOL);", "EnableSystemDictionaryHRC": "int WINAPI EnableSystemDictionaryHRC(HRC,WINBOOL);", "EndPenInputHRC": "int WINAPI EndPenInputHRC(HRC);", "GetAlphabetHRC": "int WINAPI GetAlphabetHRC(HRC,LPALC,LPBYTE);", "GetAlphabetPriorityHRC": "int WINAPI GetAlphabetPriorityHRC(HRC,LPALC,LPBYTE);", "GetAlternateWordsHRCRESULT": "int WINAPI GetAlternateWordsHRCRESULT(HRCRESULT,UINT,UINT,LPHRCRESULT,UINT);", "GetBoxMappingHRCRESULT": "int WINAPI GetBoxMappingHRCRESULT(HRCRESULT,UINT,UINT,UINT *);", "GetBoxResultsHRC": "int WINAPI GetBoxResultsHRC(HRC,UINT,UINT,UINT,LPBOXRESULTS,WINBOOL);", "GetGuideHRC": "int WINAPI GetGuideHRC(HRC,LPGUIDE,UINT *);", "GetHotspotsHRCRESULT": "int WINAPI GetHotspotsHRCRESULT(HRCRESULT,UINT,LPPOINT,UINT);", "GetHRECFromHRC": "HREC WINAPI GetHRECFromHRC(HRC);", "GetInternationalHRC": "int WINAPI GetInternationalHRC(HRC,UINT *,LPSTR,UINT *,UINT *);", "GetMaxResultsHRC": "int WINAPI GetMaxResultsHRC(HRC);", "GetResultsHRC": "int WINAPI GetResultsHRC(HRC,UINT,LPHRCRESULT,UINT);", "GetSymbolCountHRCRESULT": "int WINAPI GetSymbolCountHRCRESULT(HRCRESULT);", "GetSymbolsHRCRESULT": "int WINAPI GetSymbolsHRCRESULT(HRCRESULT,UINT,LPSYV,UINT);", "GetWordlistHRC": "int WINAPI GetWordlistHRC(HRC,LPHWL);", "GetWordlistCoercionHRC": "int WINAPI GetWordlistCoercionHRC(HRC);", "ProcessHRC": "int WINAPI ProcessHRC(HRC,DWORD);", "ReadHWL": "int WINAPI ReadHWL(HWL,HFILE);", "SetAlphabetHRC": "int WINAPI SetAlphabetHRC(HRC,ALC,LPBYTE);", "SetAlphabetPriorityHRC": "int WINAPI SetAlphabetPriorityHRC(HRC,ALC,LPBYTE);", "SetBoxAlphabetHRC": "int WINAPI SetBoxAlphabetHRC(HRC,LPALC,UINT);", "SetGuideHRC": "int WINAPI SetGuideHRC(HRC,LPGUIDE,UINT);", "SetInternationalHRC": "int WINAPI SetInternationalHRC(HRC,UINT,LPCSTR,UINT,UINT);", "SetMaxResultsHRC": "int WINAPI SetMaxResultsHRC(HRC,UINT);", "SetResultsHookHREC": "HRECHOOK WINAPI SetResultsHookHREC(HREC,HRCRESULTHOOKPROC);", "SetWordlistCoercionHRC": "int WINAPI SetWordlistCoercionHRC(HRC,UINT);", "SetWordlistHRC": "int WINAPI SetWordlistHRC(HRC,HWL);", "TrainHREC": "int WINAPI TrainHREC(HREC,LPSYV,UINT,HPENDATA,UINT);", "UnhookResultsHookHREC": "int WINAPI UnhookResultsHookHREC(HREC,HRECHOOK);", "WriteHWL": "int WINAPI WriteHWL(HWL,HFILE);", "InstallRecognizer": "HREC WINAPI InstallRecognizer(LPSTR);", "UninstallRecognizer": "VOID WINAPI UninstallRecognizer(HREC);", "AddInksetInterval": "WINBOOL WINAPI AddInksetInterval(HINKSET,LPINTERVAL);", "CreateInkset": "HINKSET WINAPI CreateInkset(UINT);", "DestroyInkset": "WINBOOL WINAPI DestroyInkset(HINKSET);", "GetInksetInterval": "int WINAPI GetInksetInterval(HINKSET,UINT,LPINTERVAL);", "GetInksetIntervalCount": "int WINAPI GetInksetIntervalCount(HINKSET);", "CharacterToSymbol": "int WINAPI CharacterToSymbol(LPSTR,int,LPSYV);", "SymbolToCharacter": "WINBOOL WINAPI SymbolToCharacter(LPSYV,int,LPSTR,LPINT);", "DoDefaultPenInput": "int WINAPI DoDefaultPenInput(HWND,UINT);", "GetPenInput": "int WINAPI GetPenInput(HPCM,LPPOINT,LPVOID,UINT,UINT,LPSTROKEINFO);", "PeekPenInput": "int WINAPI PeekPenInput(HPCM,UINT,LPPOINT,LPVOID,UINT);", "StartInking": "int WINAPI StartInking(HPCM,UINT,LPINKINGINFO);", "StartPenInput": "HPCM WINAPI StartPenInput(HWND,UINT,LPPCMINFO,LPINT);", "StopInking": "int WINAPI StopInking(HPCM);", "StopPenInput": "int WINAPI StopPenInput(HPCM,UINT,int);", "BoundingRectFromPoints": "VOID WINAPI BoundingRectFromPoints(LPPOINT,UINT,LPRECT);", "DPtoTP": "WINBOOL WINAPI DPtoTP(LPPOINT,int);", "GetPenAppFlags": "UINT WINAPI GetPenAppFlags(VOID);", "SetPenAppFlags": "VOID WINAPI SetPenAppFlags(UINT,UINT);", "GetPenMiscInfo": "LONG WINAPI GetPenMiscInfo(WPARAM,LPARAM);", "GetVersionPenWin": "UINT WINAPI GetVersionPenWin(VOID);", "SetPenMiscInfo": "LONG WINAPI SetPenMiscInfo(WPARAM,LPARAM);", "TPtoDP": "WINBOOL WINAPI TPtoDP(LPPOINT,int);", "CorrectWriting": "WINBOOL WINAPI CorrectWriting(HWND,LPSTR,UINT,LPVOID,DWORD,DWORD);", "CorrectWritingEx": "int WINAPI CorrectWritingEx(HWND,LPSTR,UINT,LPCWX);", "GetPenResource": "HANDLE WINAPI GetPenResource(WPARAM);", "EmulatePen": "VOID WINAPI EmulatePen(WINBOOL);", "EnumSymbols": "UINT WINAPI EnumSymbols(LPSYG,UINT,ENUMPROC,LPVOID);", "ExecuteGesture": "WINBOOL WINAPI ExecuteGesture(HWND,SYV,LPRCRESULT);", "FirstSymbolFromGraph": "VOID WINAPI FirstSymbolFromGraph(LPSYG,LPSYV,int,LPINT);", "GetGlobalRC": "UINT WINAPI GetGlobalRC(LPRC,LPSTR,LPSTR,int);", "GetSymbolCount": "int WINAPI GetSymbolCount(LPSYG);", "GetSymbolMaxLength": "int WINAPI GetSymbolMaxLength(LPSYG);", "InitRC": "VOID WINAPI InitRC(HWND,LPRC);", "ProcessWriting": "REC WINAPI ProcessWriting(HWND,LPRC);", "Recognize": "REC WINAPI Recognize(LPRC);", "RecognizeData": "REC WINAPI RecognizeData(LPRC,HPENDATA);", "SetGlobalRC": "UINT WINAPI SetGlobalRC(LPRC,LPSTR,LPSTR);", "SetRecogHook": "WINBOOL WINAPI SetRecogHook(UINT,UINT,HWND);", "TrainContext": "WINBOOL WINAPI TrainContext(LPRCRESULT,LPSYE,int,LPSYC,int);", "TrainInk": "WINBOOL WINAPI TrainInk(LPRC,HPENDATA,LPSYV);", "CloseRecognizer": "VOID WINAPI CloseRecognizer(VOID);", "ConfigRecognizer": "UINT WINAPI ConfigRecognizer(UINT,WPARAM,LPARAM);", "InitRecognizer": "WINBOOL WINAPI InitRecognizer(LPRC);", "RecognizeDataInternal": "REC WINAPI RecognizeDataInternal(LPRC,HPENDATA,LPFUNCRESULTS);", "RecognizeInternal": "REC WINAPI RecognizeInternal(LPRC,LPFUNCRESULTS);", "TrainContextInternal": "WINBOOL WINAPI TrainContextInternal(LPRCRESULT,LPSYE,int,LPSYC,int);", "TrainInkInternal": "WINBOOL WINAPI TrainInkInternal(LPRC,HPENDATA,LPSYV);", "TargetPoints": "int WINAPI TargetPoints(LPTARGINFO,LPPOINT,DWORD,UINT,LPSTROKEINFO);", "AtomicVirtualEvent": "VOID WINAPI AtomicVirtualEvent(WINBOOL);", "PostVirtualKeyEvent": "VOID WINAPI PostVirtualKeyEvent(UINT,WINBOOL);", "PostVirtualMouseEvent": "VOID WINAPI PostVirtualMouseEvent(UINT,int,int);", "KKConvert": "WINBOOL WINAPI KKConvert(HWND hwndConvert,HWND hwndCaller,LPSTR lpBuf,UINT cbBuf,LPPOINT lpPnt);", "MFCreateVideoPresenter": "HRESULT WINAPI MFCreateVideoPresenter(IUnknown *pOwner, REFIID riidDevice, REFIID riid, void **ppVideoPresenter);", "MFCreateVideoMixer": "HRESULT WINAPI MFCreateVideoMixer(IUnknown *pOwner, REFIID riidDevice, REFIID riid, void **ppv);", "MFCreateVideoMixerAndPresenter": "HRESULT WINAPI MFCreateVideoMixerAndPresenter(IUnknown *pMixerOwner, IUnknown *pPresenterOwner, REFIID riidMixer, void **ppvVideoMixer, REFIID riidPresenter, void **ppvVideoPresenter);", "MFCreateVideoSampleFromSurface": "HRESULT WINAPI MFCreateVideoSampleFromSurface(IUnknown *pUnkSurface, IMFSample **ppSample);", "MFCreateVideoSampleAllocator": "HRESULT WINAPI MFCreateVideoSampleAllocator(REFIID riid, void **ppSampleAllocator);", "ISQLServerErrorInfo_GetErrorInfo_Proxy": "HRESULT WINAPI ISQLServerErrorInfo_GetErrorInfo_Proxy(ISQLServerErrorInfo *This,SSERRORINFO **ppErrorInfo,OLECHAR **ppStringsBuffer);", "IRowsetFastLoad_InsertRow_Proxy": "HRESULT WINAPI IRowsetFastLoad_InsertRow_Proxy(IRowsetFastLoad *This,HACCESSOR hAccessor,void *pData);", "IRowsetFastLoad_Commit_Proxy": "HRESULT WINAPI IRowsetFastLoad_Commit_Proxy(IRowsetFastLoad *This,WINBOOL fDone);", "ISchemaLock_GetSchemaLock_Proxy": "HRESULT WINAPI ISchemaLock_GetSchemaLock_Proxy(ISchemaLock *This,DBID *pTableID,LOCKMODE lmMode,HANDLE *phLockHandle,ULONGLONG *pTableVersion);", "ISchemaLock_ReleaseSchemaLock_Proxy": "HRESULT WINAPI ISchemaLock_ReleaseSchemaLock_Proxy(ISchemaLock *This,HANDLE hLockHandle);", "CloseDriver": "WINMMAPI LRESULT WINAPI CloseDriver(HDRVR hDriver, LPARAM lParam1, LPARAM lParam2);", "OpenDriver": "WINMMAPI HDRVR WINAPI OpenDriver(LPCWSTR szDriverName, LPCWSTR szSectionName, LPARAM lParam2);", "SendDriverMessage": "WINMMAPI LRESULT WINAPI SendDriverMessage(HDRVR hDriver, UINT message, LPARAM lParam1, LPARAM lParam2);", "DrvGetModuleHandle": "WINMMAPI HMODULE WINAPI DrvGetModuleHandle(HDRVR hDriver);", "GetDriverModuleHandle": "WINMMAPI HMODULE WINAPI GetDriverModuleHandle(HDRVR hDriver);", "DefDriverProc": "WINMMAPI LRESULT WINAPI DefDriverProc(DWORD_PTR dwDriverIdentifier, HDRVR hdrvr, UINT uMsg, LPARAM lParam1, LPARAM lParam2);", "sndOpenSound": "LONG WINAPI sndOpenSound(LPCWSTR EventName, LPCWSTR AppName, INT32 Flags, PHANDLE FileHandle);", "mmioStringToFOURCCA": "WINMMAPI FOURCC WINAPI mmioStringToFOURCCA(LPCSTR sz, UINT uFlags);", "mmioStringToFOURCCW": "WINMMAPI FOURCC WINAPI mmioStringToFOURCCW(LPCWSTR sz, UINT uFlags);", "mmioInstallIOProcA": "WINMMAPI LPMMIOPROC WINAPI mmioInstallIOProcA(FOURCC fccIOProc, LPMMIOPROC pIOProc, DWORD dwFlags);", "mmioInstallIOProcW": "WINMMAPI LPMMIOPROC WINAPI mmioInstallIOProcW(FOURCC fccIOProc, LPMMIOPROC pIOProc, DWORD dwFlags);", "mmioOpenA": "WINMMAPI HMMIO WINAPI mmioOpenA(LPSTR pszFileName, LPMMIOINFO pmmioinfo, DWORD fdwOpen);", "mmioOpenW": "WINMMAPI HMMIO WINAPI mmioOpenW(LPWSTR pszFileName, LPMMIOINFO pmmioinfo, DWORD fdwOpen);", "mmioRenameA": "WINMMAPI MMRESULT WINAPI mmioRenameA(LPCSTR pszFileName, LPCSTR pszNewFileName, LPCMMIOINFO pmmioinfo, DWORD fdwRename);", "mmioRenameW": "WINMMAPI MMRESULT WINAPI mmioRenameW(LPCWSTR pszFileName, LPCWSTR pszNewFileName, LPCMMIOINFO pmmioinfo, DWORD fdwRename);", "mmioClose": "WINMMAPI MMRESULT WINAPI mmioClose(HMMIO hmmio, UINT fuClose);", "mmioRead": "WINMMAPI LONG WINAPI mmioRead(HMMIO hmmio, HPSTR pch, LONG cch);", "mmioWrite": "WINMMAPI LONG WINAPI mmioWrite(HMMIO hmmio, const char _huge * pch, LONG cch);", "mmioSeek": "WINMMAPI LONG WINAPI mmioSeek(HMMIO hmmio, LONG lOffset, int iOrigin);", "mmioGetInfo": "WINMMAPI MMRESULT WINAPI mmioGetInfo(HMMIO hmmio, LPMMIOINFO pmmioinfo, UINT fuInfo);", "mmioSetInfo": "WINMMAPI MMRESULT WINAPI mmioSetInfo(HMMIO hmmio, LPCMMIOINFO pmmioinfo, UINT fuInfo);", "mmioSetBuffer": "WINMMAPI MMRESULT WINAPI mmioSetBuffer(HMMIO hmmio, LPSTR pchBuffer, LONG cchBuffer, UINT fuBuffer);", "mmioFlush": "WINMMAPI MMRESULT WINAPI mmioFlush(HMMIO hmmio, UINT fuFlush);", "mmioAdvance": "WINMMAPI MMRESULT WINAPI mmioAdvance(HMMIO hmmio, LPMMIOINFO pmmioinfo, UINT fuAdvance);", "mmioSendMessage": "WINMMAPI LRESULT WINAPI mmioSendMessage(HMMIO hmmio, UINT uMsg, LPARAM lParam1, LPARAM lParam2);", "mmioDescend": "WINMMAPI MMRESULT WINAPI mmioDescend(HMMIO hmmio, LPMMCKINFO pmmcki, const MMCKINFO *pmmckiParent, UINT fuDescend);", "mmioAscend": "WINMMAPI MMRESULT WINAPI mmioAscend(HMMIO hmmio, LPMMCKINFO pmmcki, UINT fuAscend);", "mmioCreateChunk": "WINMMAPI MMRESULT WINAPI mmioCreateChunk(HMMIO hmmio, LPMMCKINFO pmmcki, UINT fuCreate);", "NetStatisticsGet": "NET_API_STATUS WINAPI NetStatisticsGet(LMSTR server,LMSTR service,DWORD level,DWORD options,LPBYTE *bufptr);", "DhcpGetVersion": "DWORD WINAPI DhcpGetVersion(LPWSTR ServerIpAddress,LPDWORD MajorVersion,LPDWORD MinorVersion);", "DhcpSetServerBindingInfo": "DWORD WINAPI DhcpSetServerBindingInfo(DHCP_CONST WCHAR *ServerIpAddress,ULONG Flags,LPDHCP_BIND_ELEMENT_ARRAY BindElementInfo);", "DhcpGetServerBindingInfo": "DWORD WINAPI DhcpGetServerBindingInfo(DHCP_CONST WCHAR *ServerIpAddress,ULONG Flags,LPDHCP_BIND_ELEMENT_ARRAY *BindElementsInfo);", "DhcpCreateClientInfo": "DWORD WINAPI DhcpCreateClientInfo(DHCP_CONST WCHAR *ServerIpAddress,DHCP_CONST DHCP_CLIENT_INFO *ClientInfo);", "DhcpSetClientInfo": "DWORD WINAPI DhcpSetClientInfo(DHCP_CONST WCHAR *ServerIpAddress,DHCP_CONST DHCP_CLIENT_INFO *ClientInfo);", "DhcpGetClientInfo": "DWORD WINAPI DhcpGetClientInfo(DHCP_CONST WCHAR *ServerIpAddress,DHCP_CONST DHCP_SEARCH_INFO *SearchInfo,LPDHCP_CLIENT_INFO *ClientInfo);", "DhcpDeleteClientInfo": "DWORD WINAPI DhcpDeleteClientInfo(DHCP_CONST WCHAR *ServerIpAddress,DHCP_CONST DHCP_SEARCH_INFO *ClientInfo);", "DhcpEnumSubnetClients": "DWORD WINAPI DhcpEnumSubnetClients(DHCP_CONST WCHAR *ServerIpAddress,DHCP_IP_ADDRESS SubnetAddress,DHCP_RESUME_HANDLE *ResumeHandle,DWORD PreferredMaximum,LPDHCP_CLIENT_INFO_ARRAY *ClientInfo,DWORD *ClientsRead,DWORD *ClientsTotal);", "DhcpEnumSubnets": "DWORD WINAPI DhcpEnumSubnets(DHCP_CONST WCHAR *ServerIpAddress,DHCP_RESUME_HANDLE *ResumeHandle,DWORD PreferredMaximum,LPDHCP_IP_ARRAY *EnumInfo,DWORD *ElementsRead,DWORD *ElementsTotal);", "DhcpGetSubnetInfo": "DWORD WINAPI DhcpGetSubnetInfo(DHCP_CONST WCHAR *ServerIpAddress,DHCP_IP_ADDRESS SubnetAddress,LPDHCP_SUBNET_INFO *SubnetInfo);", "DhcpGetOptionValue": "DWORD WINAPI DhcpGetOptionValue(DHCP_CONST WCHAR *ServerIpAddress,DHCP_OPTION_ID OptionID,DHCP_CONST DHCP_OPTION_SCOPE_INFO *ScopeInfo,LPDHCP_OPTION_VALUE *OptionValue);", "DhcpRpcFreeMemory": "VOID WINAPI DhcpRpcFreeMemory(PVOID BufferPointer);", "ICommandTree_FindErrorNodes_Proxy": "HRESULT WINAPI ICommandTree_FindErrorNodes_Proxy(ICommandTree *This,const DBCOMMANDTREE *pRoot,ULONG *pcErrorNodes,DBCOMMANDTREE ***prgErrorNodes);", "ICommandTree_FreeCommandTree_Proxy": "HRESULT WINAPI ICommandTree_FreeCommandTree_Proxy(ICommandTree *This,DBCOMMANDTREE **ppRoot);", "ICommandTree_GetCommandTree_Proxy": "HRESULT WINAPI ICommandTree_GetCommandTree_Proxy(ICommandTree *This,DBCOMMANDTREE **ppRoot);", "ICommandTree_SetCommandTree_Proxy": "HRESULT WINAPI ICommandTree_SetCommandTree_Proxy(ICommandTree *This,DBCOMMANDTREE **ppRoot,DBCOMMANDREUSE dwCommandReuse,WINBOOL fCopy);", "IQuery_AddPostProcessing_Proxy": "HRESULT WINAPI IQuery_AddPostProcessing_Proxy(IQuery *This,DBCOMMANDTREE **ppRoot,WINBOOL fCopy);", "IQuery_GetCardinalityEstimate_Proxy": "HRESULT WINAPI IQuery_GetCardinalityEstimate_Proxy(IQuery *This,DBORDINAL *pulCardinality);", "WSDXMLGetNameFromBuiltinNamespace": "HRESULT WINAPI WSDXMLGetNameFromBuiltinNamespace(LPCWSTR pszNamespace, LPCWSTR pszName, WSDXML_NAME **ppName);", "WSDXMLCreateContext": "HRESULT WINAPI WSDXMLCreateContext(IWSDXMLContext **ppContext);", "WSDCreateOutboundAttachment": "HRESULT WINAPI WSDCreateOutboundAttachment(IWSDOutboundAttachment **ppAttachment);", "QOSAddSocketToFlow": "WINBOOL WINAPI QOSAddSocketToFlow(", "QOSCancel": "WINBOOL WINAPI QOSCancel(", "QOSCloseHandle": "WINBOOL WINAPI QOSCloseHandle(", "QOSCreateHandle": "WINBOOL WINAPI QOSCreateHandle(", "QOSEnumerateFlows": "WINBOOL WINAPI QOSEnumerateFlows(", "QOSNotifyFlow": "WINBOOL WINAPI QOSNotifyFlow(", "QOSQueryFlow": "WINBOOL WINAPI QOSQueryFlow(", "QOSRemoveSocketFromFlow": "WINBOOL WINAPI QOSRemoveSocketFromFlow(", "QOSSetFlow": "WINBOOL WINAPI QOSSetFlow(", "QOSStartTrackingClient": "WINBOOL WINAPI QOSStartTrackingClient(", "QOSStopTrackingClient": "WINBOOL WINAPI QOSStopTrackingClient(", "IMSIMHost_CreateContext_Proxy": "HRESULT WINAPI IMSIMHost_CreateContext_Proxy(IMSIMHost *This,VARIANT Profile,VARIANT Flags,IDispatch **ppInterface);", "IMSIMHost_ShowOptions_Proxy": "HRESULT WINAPI IMSIMHost_ShowOptions_Proxy(IMSIMHost *This);", "IMSIMHost_get_Profiles_Proxy": "HRESULT WINAPI IMSIMHost_get_Profiles_Proxy(IMSIMHost *This,IDispatch **pProfile);", "IMSIMHost_HostWindow_Proxy": "HRESULT WINAPI IMSIMHost_HostWindow_Proxy(IMSIMHost *This,BSTR bstrControl,__LONG32 lStyle,VARIANT_BOOL fShowOnTaskbar,IDispatch **ppMSIMWnd);", "IMSIMHost_CreateProfile_Proxy": "HRESULT WINAPI IMSIMHost_CreateProfile_Proxy(IMSIMHost *This,BSTR bstrProfile,IDispatch **ppProfile);", "IMSIMHost_PopupMessage_Proxy": "HRESULT WINAPI IMSIMHost_PopupMessage_Proxy(IMSIMHost *This,BSTR bstrMessage,__LONG32 nTimeout,VARIANT_BOOL fClick,__LONG32 *plCookie);", "IMSIMHost_HostWindowEx_Proxy": "HRESULT WINAPI IMSIMHost_HostWindowEx_Proxy(IMSIMHost *This,BSTR bstrControl,__LONG32 lStyle,__LONG32 lExStyle,IStream *pStream,IMSIMWindow **ppMSIMWindow,IUnknown **ppUnk,REFIID iidAdvise,IUnknown *punkSink);", "IMSIMWindow_get_Object_Proxy": "HRESULT WINAPI IMSIMWindow_get_Object_Proxy(IMSIMWindow *This,IDispatch **ppDisp);", "IMSIMWindow_Move_Proxy": "HRESULT WINAPI IMSIMWindow_Move_Proxy(IMSIMWindow *This,__LONG32 nX,__LONG32 nY,__LONG32 nWidth,__LONG32 nHeight);", "IMSIMWindow_Focus_Proxy": "HRESULT WINAPI IMSIMWindow_Focus_Proxy(IMSIMWindow *This);", "IMSIMWindow_Show_Proxy": "HRESULT WINAPI IMSIMWindow_Show_Proxy(IMSIMWindow *This);", "IMSIMWindow_Hide_Proxy": "HRESULT WINAPI IMSIMWindow_Hide_Proxy(IMSIMWindow *This);", "IMSIMWindow_get_Title_Proxy": "HRESULT WINAPI IMSIMWindow_get_Title_Proxy(IMSIMWindow *This,BSTR *pVal);", "IMSIMWindow_put_Title_Proxy": "HRESULT WINAPI IMSIMWindow_put_Title_Proxy(IMSIMWindow *This,BSTR newVal);", "IMSIMWindow_Close_Proxy": "HRESULT WINAPI IMSIMWindow_Close_Proxy(IMSIMWindow *This);", "IMSIMWindow_get_HasFocus_Proxy": "HRESULT WINAPI IMSIMWindow_get_HasFocus_Proxy(IMSIMWindow *This,VARIANT_BOOL *pVal);", "IMSIMWindow_get_IsVisible_Proxy": "HRESULT WINAPI IMSIMWindow_get_IsVisible_Proxy(IMSIMWindow *This,VARIANT_BOOL *pVal);", "IMSIMWindow_GetPosition_Proxy": "HRESULT WINAPI IMSIMWindow_GetPosition_Proxy(IMSIMWindow *This,VARIANT *pvarX,VARIANT *pvarY,VARIANT *pvarWidth,VARIANT *pvarHeight);", "IMSIMWindow_get_TopMost_Proxy": "HRESULT WINAPI IMSIMWindow_get_TopMost_Proxy(IMSIMWindow *This,VARIANT_BOOL *pVal);", "IMSIMWindow_put_TopMost_Proxy": "HRESULT WINAPI IMSIMWindow_put_TopMost_Proxy(IMSIMWindow *This,VARIANT_BOOL newVal);", "IMSIMWindow_get_Window_Proxy": "HRESULT WINAPI IMSIMWindow_get_Window_Proxy(IMSIMWindow *This,__LONG32 *pVal);", "IIMService_get_Server_Proxy": "HRESULT WINAPI IIMService_get_Server_Proxy(IIMService *This,BSTR *pbstrName);", "IIMService_get_IMAddress_Proxy": "HRESULT WINAPI IIMService_get_IMAddress_Proxy(IIMService *This,BSTR *pbstrName);", "IIMService_put_FriendlyName_Proxy": "HRESULT WINAPI IIMService_put_FriendlyName_Proxy(IIMService *This,BSTR bstrName);", "IIMService_get_FriendlyName_Proxy": "HRESULT WINAPI IIMService_get_FriendlyName_Proxy(IIMService *This,BSTR *pbstrName);", "IIMService_Logoff_Proxy": "HRESULT WINAPI IIMService_Logoff_Proxy(IIMService *This);", "IIMService_FindContact_Proxy": "HRESULT WINAPI IIMService_FindContact_Proxy(IIMService *This,BSTR bstrFirstName,BSTR bstrLastName,BSTR bstrAlias,BSTR bstrCity,BSTR bstrState,BSTR bstrCountry,LONG *plCookie);", "IIMService_Logon_Proxy": "HRESULT WINAPI IIMService_Logon_Proxy(IIMService *This,VARIANT varParameter);", "IIMService_CreateContact_Proxy": "HRESULT WINAPI IIMService_CreateContact_Proxy(IIMService *This,BSTR bstrAlias,IDispatch **ppContact);", "IIMService_SetLocalState_Proxy": "HRESULT WINAPI IIMService_SetLocalState_Proxy(IIMService *This,__LONG32 lState,BSTR bstrDescription,VARIANT varData);", "IIMService_GetLocalState_Proxy": "HRESULT WINAPI IIMService_GetLocalState_Proxy(IIMService *This,VARIANT *pvarState,VARIANT *pvarDescription,VARIANT *pvarData);", "IIMService_CreateIMSession_Proxy": "HRESULT WINAPI IIMService_CreateIMSession_Proxy(IIMService *This,VARIANT varIMContact,IDispatch **ppIMSession);", "IIMService_get_IMSessions_Proxy": "HRESULT WINAPI IIMService_get_IMSessions_Proxy(IIMService *This,IDispatch **ppIMSessions);", "IIMService_NewList_Proxy": "HRESULT WINAPI IIMService_NewList_Proxy(IIMService *This,BSTR bstrListName,__LONG32 bfProperties,IDispatch **ppList);", "IIMService_List_Proxy": "HRESULT WINAPI IIMService_List_Proxy(IIMService *This,BSTR bstrListName,IDispatch **ppList);", "IIMService_RemoveList_Proxy": "HRESULT WINAPI IIMService_RemoveList_Proxy(IIMService *This,BSTR bstrListName);", "IIMService_SendNetMeetingInvite_Proxy": "HRESULT WINAPI IIMService_SendNetMeetingInvite_Proxy(IIMService *This,VARIANT varContact,__LONG32 lInviteCookie,__LONG32 *plSendCookie);", "IIMService_SendNetMeetingAccept_Proxy": "HRESULT WINAPI IIMService_SendNetMeetingAccept_Proxy(IIMService *This,VARIANT varContact,__LONG32 lInviteCookie,__LONG32 lInviteType,__LONG32 *plSendCookie);", "IIMService_SendNetMeetingCancel_Proxy": "HRESULT WINAPI IIMService_SendNetMeetingCancel_Proxy(IIMService *This,VARIANT varContact,__LONG32 lInviteCookie,__LONG32 hrReason,__LONG32 *plSendCookie);", "IIMService_get_BlockByDefault_Proxy": "HRESULT WINAPI IIMService_get_BlockByDefault_Proxy(IIMService *This,VARIANT_BOOL *pVal);", "IIMService_put_BlockByDefault_Proxy": "HRESULT WINAPI IIMService_put_BlockByDefault_Proxy(IIMService *This,VARIANT_BOOL newVal);", "IIMContact_put_FriendlyName_Proxy": "HRESULT WINAPI IIMContact_put_FriendlyName_Proxy(IIMContact *This,BSTR bstrFriendlyName);", "IIMContact_get_FriendlyName_Proxy": "HRESULT WINAPI IIMContact_get_FriendlyName_Proxy(IIMContact *This,BSTR *pbstrFriendlyName);", "IIMContact_get_EmailAddress_Proxy": "HRESULT WINAPI IIMContact_get_EmailAddress_Proxy(IIMContact *This,BSTR *pbstrEmailAddress);", "IIMContact_get_State_Proxy": "HRESULT WINAPI IIMContact_get_State_Proxy(IIMContact *This,IM_STATE *pmState);", "IIMContact_get_LogonName_Proxy": "HRESULT WINAPI IIMContact_get_LogonName_Proxy(IIMContact *This,BSTR *pbstrLogonName);", "IIMContact_SendText_Proxy": "HRESULT WINAPI IIMContact_SendText_Proxy(IIMContact *This,BSTR bstrMsgHeader,BSTR bstrMsgText,IM_MSG_TYPE MsgType,LONG *plCookie);", "IIMContact_get_Service_Proxy": "HRESULT WINAPI IIMContact_get_Service_Proxy(IIMContact *This,IDispatch **ppService);", "IIMContacts_Item_Proxy": "HRESULT WINAPI IIMContacts_Item_Proxy(IIMContacts *This,VARIANT varItem,IDispatch **ppContact);", "IIMContacts_get_Count_Proxy": "HRESULT WINAPI IIMContacts_get_Count_Proxy(IIMContacts *This,__LONG32 *pVal);", "IIMContacts_Add_Proxy": "HRESULT WINAPI IIMContacts_Add_Proxy(IIMContacts *This,IDispatch *pContact);", "IIMContacts_Remove_Proxy": "HRESULT WINAPI IIMContacts_Remove_Proxy(IIMContacts *This,IDispatch *pContact);", "IIMContacts_get_Name_Proxy": "HRESULT WINAPI IIMContacts_get_Name_Proxy(IIMContacts *This,BSTR *pVal);", "IIMContacts_put_Name_Proxy": "HRESULT WINAPI IIMContacts_put_Name_Proxy(IIMContacts *This,BSTR newVal);", "IIMContacts_get_Properties_Proxy": "HRESULT WINAPI IIMContacts_get_Properties_Proxy(IIMContacts *This,__LONG32 *pVal);", "IIMContacts_get_Cookie_Proxy": "HRESULT WINAPI IIMContacts_get_Cookie_Proxy(IIMContacts *This,__LONG32 *pVal);", "IIMContacts_get__NewEnum_Proxy": "HRESULT WINAPI IIMContacts_get__NewEnum_Proxy(IIMContacts *This,IUnknown **ppVal);", "IIMSession_get_Members_Proxy": "HRESULT WINAPI IIMSession_get_Members_Proxy(IIMSession *This,IDispatch **ppMembers);", "IIMSession_get_State_Proxy": "HRESULT WINAPI IIMSession_get_State_Proxy(IIMSession *This,IM_SSTATE *psState);", "IIMSession_get_Service_Proxy": "HRESULT WINAPI IIMSession_get_Service_Proxy(IIMSession *This,IDispatch **ppService);", "IIMSession_get_Invitees_Proxy": "HRESULT WINAPI IIMSession_get_Invitees_Proxy(IIMSession *This,IDispatch **ppInvitees);", "IIMSession_LeaveSession_Proxy": "HRESULT WINAPI IIMSession_LeaveSession_Proxy(IIMSession *This);", "IIMSession_InviteContact_Proxy": "HRESULT WINAPI IIMSession_InviteContact_Proxy(IIMSession *This,VARIANT vContact);", "IIMSession_SendText_Proxy": "HRESULT WINAPI IIMSession_SendText_Proxy(IIMSession *This,BSTR bstrMsgHeader,BSTR bstrMsgText,IM_MSG_TYPE MsgType,LONG *plCookie);", "IIMSessions_get_Count_Proxy": "HRESULT WINAPI IIMSessions_get_Count_Proxy(IIMSessions *This,__LONG32 *pcSessions);", "IIMSessions_Item_Proxy": "HRESULT WINAPI IIMSessions_Item_Proxy(IIMSessions *This,__LONG32 Index,IDispatch **ppIMSession);", "IIMSessions_get__NewEnum_Proxy": "HRESULT WINAPI IIMSessions_get__NewEnum_Proxy(IIMSessions *This,IUnknown **ppUnknown);", "WSDCreateDeviceHost": "HRESULT WINAPI WSDCreateDeviceHost(LPCWSTR pszLocalId, IWSDXMLContext *pContext, IWSDDeviceHost **ppDeviceHost);", "WSDCreateDeviceHost2": "HRESULT WINAPI WSDCreateDeviceHost2(LPCWSTR pszLocalId, IWSDXMLContext *pContext, WSD_CONFIG_PARAM *pConfigParams, DWORD dwConfigParamCount, IWSDDeviceHost **ppDeviceHost);", "WSDCreateDeviceHostAdvanced": "HRESULT WINAPI WSDCreateDeviceHostAdvanced(LPCWSTR pszLocalId, IWSDXMLContext *pContext, IWSDAddress** ppHostAddresses, DWORD dwHostAddressCount, IWSDDeviceHost **ppDeviceHost);", "RasDialA": "DWORD WINAPI RasDialA(LPRASDIALEXTENSIONS,LPCSTR,LPRASDIALPARAMSA,DWORD,LPVOID,LPHRASCONN);", "RasDialW": "DWORD WINAPI RasDialW(LPRASDIALEXTENSIONS,LPCWSTR,LPRASDIALPARAMSW,DWORD,LPVOID,LPHRASCONN);", "RasEnumConnectionsA": "DWORD WINAPI RasEnumConnectionsA(LPRASCONNA,LPDWORD,LPDWORD);", "RasEnumConnectionsW": "DWORD WINAPI RasEnumConnectionsW(LPRASCONNW,LPDWORD,LPDWORD);", "RasEnumEntriesA": "DWORD WINAPI RasEnumEntriesA(LPCSTR,LPCSTR,LPRASENTRYNAMEA,LPDWORD,LPDWORD);", "RasEnumEntriesW": "DWORD WINAPI RasEnumEntriesW(LPCWSTR,LPCWSTR,LPRASENTRYNAMEW,LPDWORD,LPDWORD);", "RasGetConnectStatusA": "DWORD WINAPI RasGetConnectStatusA(HRASCONN,LPRASCONNSTATUSA);", "RasGetConnectStatusW": "DWORD WINAPI RasGetConnectStatusW(HRASCONN,LPRASCONNSTATUSW);", "RasGetErrorStringA": "DWORD WINAPI RasGetErrorStringA(UINT,LPSTR,DWORD);", "RasGetErrorStringW": "DWORD WINAPI RasGetErrorStringW(UINT,LPWSTR,DWORD);", "RasHangUpA": "DWORD WINAPI RasHangUpA(HRASCONN);", "RasHangUpW": "DWORD WINAPI RasHangUpW(HRASCONN);", "RasGetProjectionInfoA": "DWORD WINAPI RasGetProjectionInfoA(HRASCONN,RASPROJECTION,LPVOID,LPDWORD);", "RasGetProjectionInfoW": "DWORD WINAPI RasGetProjectionInfoW(HRASCONN,RASPROJECTION,LPVOID,LPDWORD);", "RasCreatePhonebookEntryA": "DWORD WINAPI RasCreatePhonebookEntryA(HWND,LPCSTR);", "RasCreatePhonebookEntryW": "DWORD WINAPI RasCreatePhonebookEntryW(HWND,LPCWSTR);", "RasEditPhonebookEntryA": "DWORD WINAPI RasEditPhonebookEntryA(HWND,LPCSTR,LPCSTR);", "RasEditPhonebookEntryW": "DWORD WINAPI RasEditPhonebookEntryW(HWND,LPCWSTR,LPCWSTR);", "RasSetEntryDialParamsA": "DWORD WINAPI RasSetEntryDialParamsA(LPCSTR,LPRASDIALPARAMSA,WINBOOL);", "RasSetEntryDialParamsW": "DWORD WINAPI RasSetEntryDialParamsW(LPCWSTR,LPRASDIALPARAMSW,WINBOOL);", "RasGetEntryDialParamsA": "DWORD WINAPI RasGetEntryDialParamsA(LPCSTR,LPRASDIALPARAMSA,LPBOOL);", "RasGetEntryDialParamsW": "DWORD WINAPI RasGetEntryDialParamsW(LPCWSTR,LPRASDIALPARAMSW,LPBOOL);", "RasEnumDevicesA": "DWORD WINAPI RasEnumDevicesA(LPRASDEVINFOA,LPDWORD,LPDWORD);", "RasEnumDevicesW": "DWORD WINAPI RasEnumDevicesW(LPRASDEVINFOW,LPDWORD,LPDWORD);", "RasGetCountryInfoA": "DWORD WINAPI RasGetCountryInfoA(LPRASCTRYINFOA,LPDWORD);", "RasGetCountryInfoW": "DWORD WINAPI RasGetCountryInfoW(LPRASCTRYINFOW,LPDWORD);", "RasGetEntryPropertiesA": "DWORD WINAPI RasGetEntryPropertiesA(LPCSTR,LPCSTR,LPRASENTRYA,LPDWORD,LPBYTE,LPDWORD);", "RasGetEntryPropertiesW": "DWORD WINAPI RasGetEntryPropertiesW(LPCWSTR,LPCWSTR,LPRASENTRYW,LPDWORD,LPBYTE,LPDWORD);", "RasSetEntryPropertiesA": "DWORD WINAPI RasSetEntryPropertiesA(LPCSTR,LPCSTR,LPRASENTRYA,DWORD,LPBYTE,DWORD);", "RasSetEntryPropertiesW": "DWORD WINAPI RasSetEntryPropertiesW(LPCWSTR,LPCWSTR,LPRASENTRYW,DWORD,LPBYTE,DWORD);", "RasRenameEntryA": "DWORD WINAPI RasRenameEntryA(LPCSTR,LPCSTR,LPCSTR);", "RasRenameEntryW": "DWORD WINAPI RasRenameEntryW(LPCWSTR,LPCWSTR,LPCWSTR);", "RasDeleteEntryA": "DWORD WINAPI RasDeleteEntryA(LPCSTR,LPCSTR);", "RasDeleteEntryW": "DWORD WINAPI RasDeleteEntryW(LPCWSTR,LPCWSTR);", "RasValidateEntryNameA": "DWORD WINAPI RasValidateEntryNameA(LPCSTR,LPCSTR);", "RasValidateEntryNameW": "DWORD WINAPI RasValidateEntryNameW(LPCWSTR,LPCWSTR);", "RasConnectionNotificationA": "DWORD WINAPI RasConnectionNotificationA(HRASCONN,HANDLE,DWORD);", "RasConnectionNotificationW": "DWORD WINAPI RasConnectionNotificationW(HRASCONN,HANDLE,DWORD);", "RasGetSubEntryHandleA": "DWORD WINAPI RasGetSubEntryHandleA(HRASCONN,DWORD,LPHRASCONN);", "RasGetSubEntryHandleW": "DWORD WINAPI RasGetSubEntryHandleW(HRASCONN,DWORD,LPHRASCONN);", "RasGetCredentialsA": "DWORD WINAPI RasGetCredentialsA(LPCSTR,LPCSTR,LPRASCREDENTIALSA);", "RasGetCredentialsW": "DWORD WINAPI RasGetCredentialsW(LPCWSTR,LPCWSTR,LPRASCREDENTIALSW);", "RasSetCredentialsA": "DWORD WINAPI RasSetCredentialsA(LPCSTR,LPCSTR,LPRASCREDENTIALSA,WINBOOL);", "RasSetCredentialsW": "DWORD WINAPI RasSetCredentialsW(LPCWSTR,LPCWSTR,LPRASCREDENTIALSW,WINBOOL);", "RasGetSubEntryPropertiesA": "DWORD WINAPI RasGetSubEntryPropertiesA(LPCSTR,LPCSTR,DWORD,LPRASSUBENTRYA,LPDWORD,LPBYTE,LPDWORD);", "RasGetSubEntryPropertiesW": "DWORD WINAPI RasGetSubEntryPropertiesW(LPCWSTR,LPCWSTR,DWORD,LPRASSUBENTRYW,LPDWORD,LPBYTE,LPDWORD);", "RasSetSubEntryPropertiesA": "DWORD WINAPI RasSetSubEntryPropertiesA(LPCSTR,LPCSTR,DWORD,LPRASSUBENTRYA,DWORD,LPBYTE,DWORD);", "RasSetSubEntryPropertiesW": "DWORD WINAPI RasSetSubEntryPropertiesW(LPCWSTR,LPCWSTR,DWORD,LPRASSUBENTRYW,DWORD,LPBYTE,DWORD);", "RasGetAutodialAddressA": "DWORD WINAPI RasGetAutodialAddressA(LPCSTR,LPDWORD,LPRASAUTODIALENTRYA,LPDWORD,LPDWORD);", "RasGetAutodialAddressW": "DWORD WINAPI RasGetAutodialAddressW(LPCWSTR,LPDWORD,LPRASAUTODIALENTRYW,LPDWORD,LPDWORD);", "RasSetAutodialAddressA": "DWORD WINAPI RasSetAutodialAddressA(LPCSTR,DWORD,LPRASAUTODIALENTRYA,DWORD,DWORD);", "RasSetAutodialAddressW": "DWORD WINAPI RasSetAutodialAddressW(LPCWSTR,DWORD,LPRASAUTODIALENTRYW,DWORD,DWORD);", "RasEnumAutodialAddressesA": "DWORD WINAPI RasEnumAutodialAddressesA(LPSTR *,LPDWORD,LPDWORD);", "RasEnumAutodialAddressesW": "DWORD WINAPI RasEnumAutodialAddressesW(LPWSTR *,LPDWORD,LPDWORD);", "RasGetAutodialEnableA": "DWORD WINAPI RasGetAutodialEnableA(DWORD,LPBOOL);", "RasGetAutodialEnableW": "DWORD WINAPI RasGetAutodialEnableW(DWORD,LPBOOL);", "RasSetAutodialEnableA": "DWORD WINAPI RasSetAutodialEnableA(DWORD,WINBOOL);", "RasSetAutodialEnableW": "DWORD WINAPI RasSetAutodialEnableW(DWORD,WINBOOL);", "RasGetAutodialParamA": "DWORD WINAPI RasGetAutodialParamA(DWORD,LPVOID,LPDWORD);", "RasGetAutodialParamW": "DWORD WINAPI RasGetAutodialParamW(DWORD,LPVOID,LPDWORD);", "RasSetAutodialParamA": "DWORD WINAPI RasSetAutodialParamA(DWORD,LPVOID,DWORD);", "RasSetAutodialParamW": "DWORD WINAPI RasSetAutodialParamW(DWORD,LPVOID,DWORD);", "RasInvokeEapUI": "DWORD WINAPI RasInvokeEapUI(HRASCONN,DWORD,LPRASDIALEXTENSIONS,HWND);", "RasGetLinkStatistics": "DWORD WINAPI RasGetLinkStatistics(HRASCONN hRasConn,DWORD dwSubEntry,RAS_STATS *lpStatistics);", "RasGetConnectionStatistics": "DWORD WINAPI RasGetConnectionStatistics(HRASCONN hRasConn,RAS_STATS *lpStatistics);", "RasClearLinkStatistics": "DWORD WINAPI RasClearLinkStatistics(HRASCONN hRasConn,DWORD dwSubEntry);", "RasClearConnectionStatistics": "DWORD WINAPI RasClearConnectionStatistics(HRASCONN hRasConn);", "RasGetEapUserDataA": "DWORD WINAPI RasGetEapUserDataA(HANDLE hToken,LPCSTR pszPhonebook,LPCSTR pszEntry,BYTE *pbEapData,DWORD *pdwSizeofEapData);", "RasGetEapUserDataW": "DWORD WINAPI RasGetEapUserDataW(HANDLE hToken,LPCWSTR pszPhonebook,LPCWSTR pszEntry,BYTE *pbEapData,DWORD *pdwSizeofEapData);", "RasSetEapUserDataA": "DWORD WINAPI RasSetEapUserDataA(HANDLE hToken,LPCSTR pszPhonebook,LPCSTR pszEntry,BYTE *pbEapData,DWORD dwSizeofEapData);", "RasSetEapUserDataW": "DWORD WINAPI RasSetEapUserDataW(HANDLE hToken,LPCWSTR pszPhonebook,LPCWSTR pszEntry,BYTE *pbEapData,DWORD dwSizeofEapData);", "RasGetCustomAuthDataA": "DWORD WINAPI RasGetCustomAuthDataA(LPCSTR pszPhonebook,LPCSTR pszEntry,BYTE *pbCustomAuthData,DWORD *pdwSizeofCustomAuthData);", "RasGetCustomAuthDataW": "DWORD WINAPI RasGetCustomAuthDataW(LPCWSTR pszPhonebook,LPCWSTR pszEntry,BYTE *pbCustomAuthData,DWORD *pdwSizeofCustomAuthData);", "RasSetCustomAuthDataA": "DWORD WINAPI RasSetCustomAuthDataA(LPCSTR pszPhonebook,LPCSTR pszEntry,BYTE *pbCustomAuthData,DWORD dwSizeofCustomAuthData);", "RasSetCustomAuthDataW": "DWORD WINAPI RasSetCustomAuthDataW(LPCWSTR pszPhonebook,LPCWSTR pszEntry,BYTE *pbCustomAuthData,DWORD dwSizeofCustomAuthData);", "RasGetEapUserIdentityW": "DWORD WINAPI RasGetEapUserIdentityW(LPCWSTR pszPhonebook,LPCWSTR pszEntry,DWORD dwFlags,HWND hwnd,LPRASEAPUSERIDENTITYW *ppRasEapUserIdentity);", "RasGetEapUserIdentityA": "DWORD WINAPI RasGetEapUserIdentityA(LPCSTR pszPhonebook,LPCSTR pszEntry,DWORD dwFlags,HWND hwnd,LPRASEAPUSERIDENTITYA *ppRasEapUserIdentity);", "RasFreeEapUserIdentityW": "VOID WINAPI RasFreeEapUserIdentityW(LPRASEAPUSERIDENTITYW pRasEapUserIdentity);", "RasFreeEapUserIdentityA": "VOID WINAPI RasFreeEapUserIdentityA(LPRASEAPUSERIDENTITYA pRasEapUserIdentity);", "RasDeleteSubEntryA": "DWORD WINAPI RasDeleteSubEntryA(LPCSTR pszPhonebook,LPCSTR pszEntry,DWORD dwSubentryId);", "RasDeleteSubEntryW": "DWORD WINAPI RasDeleteSubEntryW(LPCWSTR pszPhonebook,LPCWSTR pszEntry,DWORD dwSubEntryId);", "DnsQueryConfig": "DNS_STATUS WINAPI DnsQueryConfig(DNS_CONFIG_TYPE Config,DWORD Flag,PWSTR pwsAdapterName,PVOID pReserved,PVOID pBuffer,PDWORD pBufferLength);", "DnsRecordCopyEx": "PDNS_RECORD WINAPI DnsRecordCopyEx(PDNS_RECORD pRecord,DNS_CHARSET CharSetIn,DNS_CHARSET CharSetOut);", "DnsRecordSetCopyEx": "PDNS_RECORD WINAPI DnsRecordSetCopyEx(PDNS_RECORD pRecordSet,DNS_CHARSET CharSetIn,DNS_CHARSET CharSetOut);", "DnsRecordCompare": "WINBOOL WINAPI DnsRecordCompare(PDNS_RECORD pRecord1,PDNS_RECORD pRecord2);", "DnsRecordSetCompare": "WINBOOL WINAPI DnsRecordSetCompare(PDNS_RECORD pRR1,PDNS_RECORD pRR2,PDNS_RECORD *ppDiff1,PDNS_RECORD *ppDiff2);", "DnsFree": "VOID WINAPI DnsFree(PVOID pData,DNS_FREE_TYPE FreeType);", "DnsRecordListFree": "VOID WINAPI DnsRecordListFree(PDNS_RECORD pRecordList,DNS_FREE_TYPE FreeType);", "DnsQuery_A": "DNS_STATUS WINAPI DnsQuery_A(PCSTR pszName,WORD wType,DWORD Options,PIP4_ARRAY aipServers,PDNS_RECORD *ppQueryResults,PVOID *pReserved);", "DnsQuery_UTF8": "DNS_STATUS WINAPI DnsQuery_UTF8(PCSTR pszName,WORD wType,DWORD Options,PIP4_ARRAY aipServers,PDNS_RECORDA *ppQueryResults,PVOID *pReserved);", "DnsQuery_W": "DNS_STATUS WINAPI DnsQuery_W(PCWSTR pszName,WORD wType,DWORD Options,PIP4_ARRAY aipServers,PDNS_RECORD *ppQueryResults,PVOID *pReserved);", "DNS_QUERY_COMPLETION_ROUTINE": "typedef VOID WINAPI DNS_QUERY_COMPLETION_ROUTINE(PVOID pQueryContext,PDNS_QUERY_RESULT pQueryResults);", "DnsAcquireContextHandle_W": "DNS_STATUS WINAPI DnsAcquireContextHandle_W(DWORD CredentialFlags,PVOID pCredentials,PHANDLE pContextHandle);", "DnsAcquireContextHandle_A": "DNS_STATUS WINAPI DnsAcquireContextHandle_A(DWORD CredentialFlags,PVOID pCredentials,PHANDLE pContextHandle);", "DnsReleaseContextHandle": "VOID WINAPI DnsReleaseContextHandle(HANDLE hContext);", "DnsModifyRecordsInSet_W": "DNS_STATUS WINAPI DnsModifyRecordsInSet_W(PDNS_RECORD pAddRecords,PDNS_RECORD pDeleteRecords,DWORD Options,HANDLE hContext,PIP4_ARRAY pServerList,PVOID pReserved);", "DnsModifyRecordsInSet_A": "DNS_STATUS WINAPI DnsModifyRecordsInSet_A(PDNS_RECORD pAddRecords,PDNS_RECORD pDeleteRecords,DWORD Options,HANDLE hContext,PIP4_ARRAY pServerList,PVOID pReserved);", "DnsModifyRecordsInSet_UTF8": "DNS_STATUS WINAPI DnsModifyRecordsInSet_UTF8(PDNS_RECORDA pAddRecords,PDNS_RECORDA pDeleteRecords,DWORD Options,HANDLE hContext,PIP4_ARRAY pServerList,PVOID pReserved);", "DnsReplaceRecordSetW": "DNS_STATUS WINAPI DnsReplaceRecordSetW(PDNS_RECORD pNewSet,DWORD Options,HANDLE hContext,PIP4_ARRAY pServerList,PVOID pReserved);", "DnsReplaceRecordSetA": "DNS_STATUS WINAPI DnsReplaceRecordSetA(PDNS_RECORD pNewSet,DWORD Options,HANDLE hContext,PIP4_ARRAY pServerList,PVOID pReserved);", "DnsReplaceRecordSetUTF8": "DNS_STATUS WINAPI DnsReplaceRecordSetUTF8(PDNS_RECORDA pNewSet,DWORD Options,HANDLE hContext,PIP4_ARRAY pServerList,PVOID pReserved);", "DnsNameCompare_A": "WINBOOL WINAPI DnsNameCompare_A(LPSTR pName1,LPSTR pName2);", "DnsNameCompare_W": "WINBOOL WINAPI DnsNameCompare_W(LPWSTR pName1,LPWSTR pName2);", "DnsWriteQuestionToBuffer_W": "WINBOOL WINAPI DnsWriteQuestionToBuffer_W(PDNS_MESSAGE_BUFFER pDnsBuffer,PDWORD pdwBufferSize,LPWSTR pszName,WORD wType,WORD Xid,WINBOOL fRecursionDesired);", "DnsWriteQuestionToBuffer_UTF8": "WINBOOL WINAPI DnsWriteQuestionToBuffer_UTF8(PDNS_MESSAGE_BUFFER pDnsBuffer,LPDWORD pdwBufferSize,LPSTR pszName,WORD wType,WORD Xid,WINBOOL fRecursionDesired);", "DnsExtractRecordsFromMessage_W": "DNS_STATUS WINAPI DnsExtractRecordsFromMessage_W(PDNS_MESSAGE_BUFFER pDnsBuffer,WORD wMessageLength,PDNS_RECORD *ppRecord);", "DnsExtractRecordsFromMessage_UTF8": "DNS_STATUS WINAPI DnsExtractRecordsFromMessage_UTF8(PDNS_MESSAGE_BUFFER pDnsBuffer,WORD wMessageLength,PDNS_RECORDA *ppRecord);", "DnsGetProxyInformation": "DWORD WINAPI DnsGetProxyInformation(PCWSTR hostName,DNS_PROXY_INFORMATION *proxyInformation,DNS_PROXY_INFORMATION *defaultProxyInformation,DNS_PROXY_COMPLETION_ROUTINE completionRoutine,void *completionContext);", "DnsFreeProxyName": "VOID WINAPI DnsFreeProxyName(PWSTR proxyName);", "DnsServiceConstructInstance": "PDNS_SERVICE_INSTANCE WINAPI DnsServiceConstructInstance(PCWSTR pServiceName,PCWSTR pHostName,PIP4_ADDRESS pIp4,PIP6_ADDRESS pIp6,WORD wPort,WORD wPriority,WORD wWeight,DWORD dwPropertiesCount,PCWSTR *keys,PCWSTR *values);", "DnsServiceCopyInstance": "PDNS_SERVICE_INSTANCE WINAPI DnsServiceCopyInstance(PDNS_SERVICE_INSTANCE pOrig);", "DnsServiceFreeInstance": "VOID WINAPI DnsServiceFreeInstance(PDNS_SERVICE_INSTANCE pInstance);", "DNS_SERVICE_BROWSE_CALLBACK": "typedef VOID WINAPI DNS_SERVICE_BROWSE_CALLBACK(DWORD Status,PVOID pQueryContext,PDNS_RECORD pDnsRecord);", "DnsServiceBrowse": "DNS_STATUS WINAPI DnsServiceBrowse(PDNS_SERVICE_BROWSE_REQUEST pRequest,PDNS_SERVICE_CANCEL pCancel);", "DnsServiceBrowseCancel": "DNS_STATUS WINAPI DnsServiceBrowseCancel(PDNS_SERVICE_CANCEL pCancelHandle);", "DNS_SERVICE_RESOLVE_COMPLETE": "typedef VOID WINAPI DNS_SERVICE_RESOLVE_COMPLETE(DWORD Status,PVOID pQueryContext,PDNS_SERVICE_INSTANCE pInstance);", "DnsServiceResolve": "DNS_STATUS WINAPI DnsServiceResolve(PDNS_SERVICE_RESOLVE_REQUEST pRequest,PDNS_SERVICE_CANCEL pCancel);", "DnsServiceResolveCancel": "DNS_STATUS WINAPI DnsServiceResolveCancel(PDNS_SERVICE_CANCEL pCancelHandle);", "DNS_SERVICE_REGISTER_COMPLETE": "typedef VOID WINAPI DNS_SERVICE_REGISTER_COMPLETE(DWORD Status,PVOID pQueryContext,PDNS_SERVICE_INSTANCE pInstance);", "DnsServiceRegister": "DWORD WINAPI DnsServiceRegister(PDNS_SERVICE_REGISTER_REQUEST pRequest,PDNS_SERVICE_CANCEL pCancel);", "DnsServiceDeRegister": "DWORD WINAPI DnsServiceDeRegister(PDNS_SERVICE_REGISTER_REQUEST pRequest,PDNS_SERVICE_CANCEL pCancel);", "DnsServiceRegisterCancel": "DWORD WINAPI DnsServiceRegisterCancel(PDNS_SERVICE_CANCEL pCancelHandle);", "MDNS_QUERY_CALLBACK": "typedef VOID WINAPI MDNS_QUERY_CALLBACK(PVOID pQueryContext,PMDNS_QUERY_HANDLE pQueryHandle,PDNS_QUERY_RESULT pQueryResults);", "DnsStartMulticastQuery": "DNS_STATUS WINAPI DnsStartMulticastQuery(PMDNS_QUERY_REQUEST pQueryRequest,PMDNS_QUERY_HANDLE pHandle);", "DnsStopMulticastQuery": "DNS_STATUS WINAPI DnsStopMulticastQuery(PMDNS_QUERY_HANDLE pHandle);", "IEnumNetConnection_Next_Proxy": "HRESULT WINAPI IEnumNetConnection_Next_Proxy(IEnumNetConnection *This,ULONG celt,INetConnection **rgelt,ULONG *pceltFetched);", "IEnumNetConnection_Skip_Proxy": "HRESULT WINAPI IEnumNetConnection_Skip_Proxy(IEnumNetConnection *This,ULONG celt);", "IEnumNetConnection_Reset_Proxy": "HRESULT WINAPI IEnumNetConnection_Reset_Proxy(IEnumNetConnection *This);", "IEnumNetConnection_Clone_Proxy": "HRESULT WINAPI IEnumNetConnection_Clone_Proxy(IEnumNetConnection *This,IEnumNetConnection **ppenum);", "INetConnection_Connect_Proxy": "HRESULT WINAPI INetConnection_Connect_Proxy(INetConnection *This);", "INetConnection_Disconnect_Proxy": "HRESULT WINAPI INetConnection_Disconnect_Proxy(INetConnection *This);", "INetConnection_Delete_Proxy": "HRESULT WINAPI INetConnection_Delete_Proxy(INetConnection *This);", "INetConnection_Duplicate_Proxy": "HRESULT WINAPI INetConnection_Duplicate_Proxy(INetConnection *This,LPCWSTR pszwDuplicateName,INetConnection **ppCon);", "INetConnection_GetProperties_Proxy": "HRESULT WINAPI INetConnection_GetProperties_Proxy(INetConnection *This,NETCON_PROPERTIES **ppProps);", "INetConnection_GetUiObjectClassId_Proxy": "HRESULT WINAPI INetConnection_GetUiObjectClassId_Proxy(INetConnection *This,CLSID *pclsid);", "INetConnection_Rename_Proxy": "HRESULT WINAPI INetConnection_Rename_Proxy(INetConnection *This,LPCWSTR pszwNewName);", "INetConnectionManager_EnumConnections_Proxy": "HRESULT WINAPI INetConnectionManager_EnumConnections_Proxy(INetConnectionManager *This,NETCONMGR_ENUM_FLAGS Flags,IEnumNetConnection **ppEnum);", "INetConnectionManagerEvents_RefreshConnections_Proxy": "HRESULT WINAPI INetConnectionManagerEvents_RefreshConnections_Proxy(INetConnectionManagerEvents *This);", "INetConnectionManagerEvents_Enable_Proxy": "HRESULT WINAPI INetConnectionManagerEvents_Enable_Proxy(INetConnectionManagerEvents *This);", "INetConnectionManagerEvents_Disable_Proxy": "HRESULT WINAPI INetConnectionManagerEvents_Disable_Proxy(INetConnectionManagerEvents *This,ULONG ulDisableTimeout);", "INetConnectionConnectUi_SetConnection_Proxy": "HRESULT WINAPI INetConnectionConnectUi_SetConnection_Proxy(INetConnectionConnectUi *This,INetConnection *pCon);", "INetConnectionConnectUi_Connect_Proxy": "HRESULT WINAPI INetConnectionConnectUi_Connect_Proxy(INetConnectionConnectUi *This,HWND hwndParent,DWORD dwFlags);", "INetConnectionConnectUi_Disconnect_Proxy": "HRESULT WINAPI INetConnectionConnectUi_Disconnect_Proxy(INetConnectionConnectUi *This,HWND hwndParent,DWORD dwFlags);", "INetConnectionPropertyUi_SetConnection_Proxy": "HRESULT WINAPI INetConnectionPropertyUi_SetConnection_Proxy(INetConnectionPropertyUi *This,INetConnection *pCon);", "INetConnectionPropertyUi_AddPages_Proxy": "HRESULT WINAPI INetConnectionPropertyUi_AddPages_Proxy(INetConnectionPropertyUi *This,HWND hwndParent,LPFNADDPROPSHEETPAGE pfnAddPage,LPARAM lParam);", "INetConnectionPropertyUi2_GetIcon_Proxy": "HRESULT WINAPI INetConnectionPropertyUi2_GetIcon_Proxy(INetConnectionPropertyUi2 *This,DWORD dwSize,HICON *phIcon);", "INetConnectionCommonUi_ChooseConnection_Proxy": "HRESULT WINAPI INetConnectionCommonUi_ChooseConnection_Proxy(INetConnectionCommonUi *This,NETCON_CHOOSECONN *pChooseConn,INetConnection **ppCon);", "INetConnectionCommonUi_ShowConnectionProperties_Proxy": "HRESULT WINAPI INetConnectionCommonUi_ShowConnectionProperties_Proxy(INetConnectionCommonUi *This,HWND hwndParent,INetConnection *pCon);", "INetConnectionCommonUi_StartNewConnectionWizard_Proxy": "HRESULT WINAPI INetConnectionCommonUi_StartNewConnectionWizard_Proxy(INetConnectionCommonUi *This,HWND hwndParent,INetConnection **ppCon);", "IEnumNetSharingPortMapping_Next_Proxy": "HRESULT WINAPI IEnumNetSharingPortMapping_Next_Proxy(IEnumNetSharingPortMapping *This,ULONG celt,VARIANT *rgVar,ULONG *pceltFetched);", "IEnumNetSharingPortMapping_Skip_Proxy": "HRESULT WINAPI IEnumNetSharingPortMapping_Skip_Proxy(IEnumNetSharingPortMapping *This,ULONG celt);", "IEnumNetSharingPortMapping_Reset_Proxy": "HRESULT WINAPI IEnumNetSharingPortMapping_Reset_Proxy(IEnumNetSharingPortMapping *This);", "IEnumNetSharingPortMapping_Clone_Proxy": "HRESULT WINAPI IEnumNetSharingPortMapping_Clone_Proxy(IEnumNetSharingPortMapping *This,IEnumNetSharingPortMapping **ppenum);", "INetSharingPortMappingProps_get_Name_Proxy": "HRESULT WINAPI INetSharingPortMappingProps_get_Name_Proxy(INetSharingPortMappingProps *This,BSTR *pbstrName);", "INetSharingPortMappingProps_get_IPProtocol_Proxy": "HRESULT WINAPI INetSharingPortMappingProps_get_IPProtocol_Proxy(INetSharingPortMappingProps *This,UCHAR *pucIPProt);", "INetSharingPortMappingProps_get_ExternalPort_Proxy": "HRESULT WINAPI INetSharingPortMappingProps_get_ExternalPort_Proxy(INetSharingPortMappingProps *This,__LONG32 *pusPort);", "INetSharingPortMappingProps_get_InternalPort_Proxy": "HRESULT WINAPI INetSharingPortMappingProps_get_InternalPort_Proxy(INetSharingPortMappingProps *This,__LONG32 *pusPort);", "INetSharingPortMappingProps_get_Options_Proxy": "HRESULT WINAPI INetSharingPortMappingProps_get_Options_Proxy(INetSharingPortMappingProps *This,__LONG32 *pdwOptions);", "INetSharingPortMappingProps_get_TargetName_Proxy": "HRESULT WINAPI INetSharingPortMappingProps_get_TargetName_Proxy(INetSharingPortMappingProps *This,BSTR *pbstrTargetName);", "INetSharingPortMappingProps_get_TargetIPAddress_Proxy": "HRESULT WINAPI INetSharingPortMappingProps_get_TargetIPAddress_Proxy(INetSharingPortMappingProps *This,BSTR *pbstrTargetIPAddress);", "INetSharingPortMappingProps_get_Enabled_Proxy": "HRESULT WINAPI INetSharingPortMappingProps_get_Enabled_Proxy(INetSharingPortMappingProps *This,VARIANT_BOOL *pbool);", "INetSharingPortMapping_Disable_Proxy": "HRESULT WINAPI INetSharingPortMapping_Disable_Proxy(INetSharingPortMapping *This);", "INetSharingPortMapping_Enable_Proxy": "HRESULT WINAPI INetSharingPortMapping_Enable_Proxy(INetSharingPortMapping *This);", "INetSharingPortMapping_get_Properties_Proxy": "HRESULT WINAPI INetSharingPortMapping_get_Properties_Proxy(INetSharingPortMapping *This,INetSharingPortMappingProps **ppNSPMP);", "INetSharingPortMapping_Delete_Proxy": "HRESULT WINAPI INetSharingPortMapping_Delete_Proxy(INetSharingPortMapping *This);", "IEnumNetSharingEveryConnection_Next_Proxy": "HRESULT WINAPI IEnumNetSharingEveryConnection_Next_Proxy(IEnumNetSharingEveryConnection *This,ULONG celt,VARIANT *rgVar,ULONG *pceltFetched);", "IEnumNetSharingEveryConnection_Skip_Proxy": "HRESULT WINAPI IEnumNetSharingEveryConnection_Skip_Proxy(IEnumNetSharingEveryConnection *This,ULONG celt);", "IEnumNetSharingEveryConnection_Reset_Proxy": "HRESULT WINAPI IEnumNetSharingEveryConnection_Reset_Proxy(IEnumNetSharingEveryConnection *This);", "IEnumNetSharingEveryConnection_Clone_Proxy": "HRESULT WINAPI IEnumNetSharingEveryConnection_Clone_Proxy(IEnumNetSharingEveryConnection *This,IEnumNetSharingEveryConnection **ppenum);", "IEnumNetSharingPublicConnection_Next_Proxy": "HRESULT WINAPI IEnumNetSharingPublicConnection_Next_Proxy(IEnumNetSharingPublicConnection *This,ULONG celt,VARIANT *rgVar,ULONG *pceltFetched);", "IEnumNetSharingPublicConnection_Skip_Proxy": "HRESULT WINAPI IEnumNetSharingPublicConnection_Skip_Proxy(IEnumNetSharingPublicConnection *This,ULONG celt);", "IEnumNetSharingPublicConnection_Reset_Proxy": "HRESULT WINAPI IEnumNetSharingPublicConnection_Reset_Proxy(IEnumNetSharingPublicConnection *This);", "IEnumNetSharingPublicConnection_Clone_Proxy": "HRESULT WINAPI IEnumNetSharingPublicConnection_Clone_Proxy(IEnumNetSharingPublicConnection *This,IEnumNetSharingPublicConnection **ppenum);", "IEnumNetSharingPrivateConnection_Next_Proxy": "HRESULT WINAPI IEnumNetSharingPrivateConnection_Next_Proxy(IEnumNetSharingPrivateConnection *This,ULONG celt,VARIANT *rgVar,ULONG *pCeltFetched);", "IEnumNetSharingPrivateConnection_Skip_Proxy": "HRESULT WINAPI IEnumNetSharingPrivateConnection_Skip_Proxy(IEnumNetSharingPrivateConnection *This,ULONG celt);", "IEnumNetSharingPrivateConnection_Reset_Proxy": "HRESULT WINAPI IEnumNetSharingPrivateConnection_Reset_Proxy(IEnumNetSharingPrivateConnection *This);", "IEnumNetSharingPrivateConnection_Clone_Proxy": "HRESULT WINAPI IEnumNetSharingPrivateConnection_Clone_Proxy(IEnumNetSharingPrivateConnection *This,IEnumNetSharingPrivateConnection **ppenum);", "INetSharingPortMappingCollection_get__NewEnum_Proxy": "HRESULT WINAPI INetSharingPortMappingCollection_get__NewEnum_Proxy(INetSharingPortMappingCollection *This,IUnknown **pVal);", "INetSharingPortMappingCollection_get_Count_Proxy": "HRESULT WINAPI INetSharingPortMappingCollection_get_Count_Proxy(INetSharingPortMappingCollection *This,__LONG32 *pVal);", "INetConnectionProps_get_Guid_Proxy": "HRESULT WINAPI INetConnectionProps_get_Guid_Proxy(INetConnectionProps *This,BSTR *pbstrGuid);", "INetConnectionProps_get_Name_Proxy": "HRESULT WINAPI INetConnectionProps_get_Name_Proxy(INetConnectionProps *This,BSTR *pbstrName);", "INetConnectionProps_get_DeviceName_Proxy": "HRESULT WINAPI INetConnectionProps_get_DeviceName_Proxy(INetConnectionProps *This,BSTR *pbstrDeviceName);", "INetConnectionProps_get_Status_Proxy": "HRESULT WINAPI INetConnectionProps_get_Status_Proxy(INetConnectionProps *This,NETCON_STATUS *pStatus);", "INetConnectionProps_get_MediaType_Proxy": "HRESULT WINAPI INetConnectionProps_get_MediaType_Proxy(INetConnectionProps *This,NETCON_MEDIATYPE *pMediaType);", "INetConnectionProps_get_Characteristics_Proxy": "HRESULT WINAPI INetConnectionProps_get_Characteristics_Proxy(INetConnectionProps *This,DWORD *pdwFlags);", "INetSharingConfiguration_get_SharingEnabled_Proxy": "HRESULT WINAPI INetSharingConfiguration_get_SharingEnabled_Proxy(INetSharingConfiguration *This,VARIANT_BOOL *pbEnabled);", "INetSharingConfiguration_get_SharingConnectionType_Proxy": "HRESULT WINAPI INetSharingConfiguration_get_SharingConnectionType_Proxy(INetSharingConfiguration *This,SHARINGCONNECTIONTYPE *pType);", "INetSharingConfiguration_DisableSharing_Proxy": "HRESULT WINAPI INetSharingConfiguration_DisableSharing_Proxy(INetSharingConfiguration *This);", "INetSharingConfiguration_EnableSharing_Proxy": "HRESULT WINAPI INetSharingConfiguration_EnableSharing_Proxy(INetSharingConfiguration *This,SHARINGCONNECTIONTYPE Type);", "INetSharingConfiguration_get_InternetFirewallEnabled_Proxy": "HRESULT WINAPI INetSharingConfiguration_get_InternetFirewallEnabled_Proxy(INetSharingConfiguration *This,VARIANT_BOOL *pbEnabled);", "INetSharingConfiguration_DisableInternetFirewall_Proxy": "HRESULT WINAPI INetSharingConfiguration_DisableInternetFirewall_Proxy(INetSharingConfiguration *This);", "INetSharingConfiguration_EnableInternetFirewall_Proxy": "HRESULT WINAPI INetSharingConfiguration_EnableInternetFirewall_Proxy(INetSharingConfiguration *This);", "INetSharingConfiguration_get_EnumPortMappings_Proxy": "HRESULT WINAPI INetSharingConfiguration_get_EnumPortMappings_Proxy(INetSharingConfiguration *This,SHARINGCONNECTION_ENUM_FLAGS Flags,INetSharingPortMappingCollection **ppColl);", "INetSharingConfiguration_AddPortMapping_Proxy": "HRESULT WINAPI INetSharingConfiguration_AddPortMapping_Proxy(INetSharingConfiguration *This,BSTR bstrName,UCHAR ucIPProtocol,USHORT usExternalPort,USHORT usInternalPort,DWORD dwOptions,BSTR bstrTargetNameOrIPAddress,ICS_TARGETTYPE eTargetType,INetSharingPortMapping **ppMapping);", "INetSharingConfiguration_RemovePortMapping_Proxy": "HRESULT WINAPI INetSharingConfiguration_RemovePortMapping_Proxy(INetSharingConfiguration *This,INetSharingPortMapping *pMapping);", "INetSharingEveryConnectionCollection_get__NewEnum_Proxy": "HRESULT WINAPI INetSharingEveryConnectionCollection_get__NewEnum_Proxy(INetSharingEveryConnectionCollection *This,IUnknown **pVal);", "INetSharingEveryConnectionCollection_get_Count_Proxy": "HRESULT WINAPI INetSharingEveryConnectionCollection_get_Count_Proxy(INetSharingEveryConnectionCollection *This,__LONG32 *pVal);", "INetSharingPublicConnectionCollection_get__NewEnum_Proxy": "HRESULT WINAPI INetSharingPublicConnectionCollection_get__NewEnum_Proxy(INetSharingPublicConnectionCollection *This,IUnknown **pVal);", "INetSharingPublicConnectionCollection_get_Count_Proxy": "HRESULT WINAPI INetSharingPublicConnectionCollection_get_Count_Proxy(INetSharingPublicConnectionCollection *This,__LONG32 *pVal);", "INetSharingPrivateConnectionCollection_get__NewEnum_Proxy": "HRESULT WINAPI INetSharingPrivateConnectionCollection_get__NewEnum_Proxy(INetSharingPrivateConnectionCollection *This,IUnknown **pVal);", "INetSharingPrivateConnectionCollection_get_Count_Proxy": "HRESULT WINAPI INetSharingPrivateConnectionCollection_get_Count_Proxy(INetSharingPrivateConnectionCollection *This,__LONG32 *pVal);", "INetSharingManager_get_SharingInstalled_Proxy": "HRESULT WINAPI INetSharingManager_get_SharingInstalled_Proxy(INetSharingManager *This,VARIANT_BOOL *pbInstalled);", "INetSharingManager_get_EnumPublicConnections_Proxy": "HRESULT WINAPI INetSharingManager_get_EnumPublicConnections_Proxy(INetSharingManager *This,SHARINGCONNECTION_ENUM_FLAGS Flags,INetSharingPublicConnectionCollection **ppColl);", "INetSharingManager_get_EnumPrivateConnections_Proxy": "HRESULT WINAPI INetSharingManager_get_EnumPrivateConnections_Proxy(INetSharingManager *This,SHARINGCONNECTION_ENUM_FLAGS Flags,INetSharingPrivateConnectionCollection **ppColl);", "INetSharingManager_get_INetSharingConfigurationForINetConnection_Proxy": "HRESULT WINAPI INetSharingManager_get_INetSharingConfigurationForINetConnection_Proxy(INetSharingManager *This,INetConnection *pNetConnection,INetSharingConfiguration **ppNetSharingConfiguration);", "INetSharingManager_get_EnumEveryConnection_Proxy": "HRESULT WINAPI INetSharingManager_get_EnumEveryConnection_Proxy(INetSharingManager *This,INetSharingEveryConnectionCollection **ppColl);", "INetSharingManager_get_NetConnectionProps_Proxy": "HRESULT WINAPI INetSharingManager_get_NetConnectionProps_Proxy(INetSharingManager *This,INetConnection *pNetConnection,INetConnectionProps **ppProps);", "VidMemAlloc": "extern FLATPTR WINAPI VidMemAlloc (LPVMEMHEAP pvmh, DWORD width, DWORD height);", "HeapVidMemAllocAligned": "extern FLATPTR WINAPI HeapVidMemAllocAligned (LPVIDMEM lpVidMem, DWORD dwWidth, DWORD dwHeight, LPSURFACEALIGNMENT lpAlignment, LPLONG lpNewPitch);", "VidMemFree": "extern void WINAPI VidMemFree (LPVMEMHEAP pvmh, FLATPTR ptr);", "AsyncMultiGraphEvent": "DWORD WINAPI AsyncMultiGraphEvent(LPVOID pVoid);", "BluetoothAuthenticateMultipleDevices": "DWORD WINAPI BluetoothAuthenticateMultipleDevices(", "BluetoothAuthenticateDevice": "DWORD WINAPI BluetoothAuthenticateDevice(", "BluetoothAuthenticateDeviceEx": "DWORD WINAPI BluetoothAuthenticateDeviceEx(", "BluetoothDisplayDeviceProperties": "WINBOOL WINAPI BluetoothDisplayDeviceProperties(", "BluetoothEnableDiscovery": "WINBOOL WINAPI BluetoothEnableDiscovery(", "BluetoothEnableIncomingConnections": "WINBOOL WINAPI BluetoothEnableIncomingConnections(", "BluetoothEnumerateInstalledServices": "DWORD WINAPI BluetoothEnumerateInstalledServices(", "BluetoothFindDeviceClose": "WINBOOL WINAPI BluetoothFindDeviceClose(", "BluetoothFindFirstDevice": "HBLUETOOTH_DEVICE_FIND WINAPI BluetoothFindFirstDevice(", "BluetoothFindFirstRadio": "HBLUETOOTH_RADIO_FIND WINAPI BluetoothFindFirstRadio(", "BluetoothFindNextDevice": "WINBOOL WINAPI BluetoothFindNextDevice(", "BluetoothFindNextRadio": "WINBOOL WINAPI BluetoothFindNextRadio(", "BluetoothFindRadioClose": "WINBOOL WINAPI BluetoothFindRadioClose(", "BluetoothGetDeviceInfo": "DWORD WINAPI BluetoothGetDeviceInfo(", "BluetoothGetRadioInfo": "DWORD WINAPI BluetoothGetRadioInfo(", "BluetoothIsDiscoverable": "WINBOOL WINAPI BluetoothIsDiscoverable(", "BluetoothIsConnectable": "WINBOOL WINAPI BluetoothIsConnectable(", "BluetoothIsVersionAvailable": "WINBOOL WINAPI BluetoothIsVersionAvailable(", "BluetoothRegisterForAuthentication": "DWORD WINAPI BluetoothRegisterForAuthentication(", "BluetoothRegisterForAuthenticationEx": "DWORD WINAPI BluetoothRegisterForAuthenticationEx(", "BluetoothRemoveDevice": "DWORD WINAPI BluetoothRemoveDevice(", "BluetoothSdpEnumAttributes": "WINBOOL WINAPI BluetoothSdpEnumAttributes(", "BluetoothSdpGetAttributeValue": "DWORD WINAPI BluetoothSdpGetAttributeValue(", "BluetoothSdpGetContainerElementData": "DWORD WINAPI BluetoothSdpGetContainerElementData(", "BluetoothSelectDevices": "WINBOOL WINAPI BluetoothSelectDevices(", "BluetoothSelectDevicesFree": "WINBOOL WINAPI BluetoothSelectDevicesFree(", "BluetoothSendAuthenticationResponse": "DWORD WINAPI BluetoothSendAuthenticationResponse(", "BluetoothSendAuthenticationResponseEx": "DWORD WINAPI BluetoothSendAuthenticationResponseEx(", "BluetoothSetLocalServiceInfo": "DWORD WINAPI BluetoothSetLocalServiceInfo(", "BluetoothSetServiceState": "DWORD WINAPI BluetoothSetServiceState(", "BluetoothUnregisterAuthentication": "WINBOOL WINAPI BluetoothUnregisterAuthentication(", "BluetoothUpdateDeviceRecord": "DWORD WINAPI BluetoothUpdateDeviceRecord(", "IDebugAutoAttach_AutoAttach_Proxy": "HRESULT WINAPI IDebugAutoAttach_AutoAttach_Proxy(IDebugAutoAttach *This,REFGUID guidPort,DWORD dwPid,AUTOATTACH_PROGRAM_TYPE dwProgramType,DWORD dwProgramId,LPCWSTR pszSessionId);", "DirectPlay8AddressCreate": "HRESULT WINAPI DirectPlay8AddressCreate(const GUID* pcIID, LPVOID* ppvInterface, IUnknown* pUnknown);", "RasSecurityDialogComplete": "VOID WINAPI RasSecurityDialogComplete(SECURITY_MESSAGE *pSecMsg);", "RasSecurityDialogEnd": "DWORD WINAPI RasSecurityDialogEnd(HPORT hPort);", "RasSecurityDialogSend": "DWORD WINAPI RasSecurityDialogSend(HPORT hPort,PBYTE pBuffer,WORD BufferLength);", "RasSecurityDialogReceive": "DWORD WINAPI RasSecurityDialogReceive(HPORT hPort,PBYTE pBuffer,PWORD pBufferLength,DWORD Timeout,HANDLE hEvent);", "RasSecurityDialogGetInfo": "DWORD WINAPI RasSecurityDialogGetInfo(HPORT hPort,RAS_SECURITY_INFO *pBuffer);", "IISMimeType_get_MimeType_Proxy": "HRESULT WINAPI IISMimeType_get_MimeType_Proxy(IISMimeType *This,BSTR *retval);", "IISMimeType_put_MimeType_Proxy": "HRESULT WINAPI IISMimeType_put_MimeType_Proxy(IISMimeType *This,BSTR bstrMimeType);", "IISMimeType_get_Extension_Proxy": "HRESULT WINAPI IISMimeType_get_Extension_Proxy(IISMimeType *This,BSTR *retval);", "IISMimeType_put_Extension_Proxy": "HRESULT WINAPI IISMimeType_put_Extension_Proxy(IISMimeType *This,BSTR bstrExtension);", "IISIPSecurity_get_IPDeny_Proxy": "HRESULT WINAPI IISIPSecurity_get_IPDeny_Proxy(IISIPSecurity *This,VARIANT *retval);", "IISIPSecurity_put_IPDeny_Proxy": "HRESULT WINAPI IISIPSecurity_put_IPDeny_Proxy(IISIPSecurity *This,VARIANT vIPDeny);", "IISIPSecurity_get_IPGrant_Proxy": "HRESULT WINAPI IISIPSecurity_get_IPGrant_Proxy(IISIPSecurity *This,VARIANT *retval);", "IISIPSecurity_put_IPGrant_Proxy": "HRESULT WINAPI IISIPSecurity_put_IPGrant_Proxy(IISIPSecurity *This,VARIANT vIPGrant);", "IISIPSecurity_get_DomainDeny_Proxy": "HRESULT WINAPI IISIPSecurity_get_DomainDeny_Proxy(IISIPSecurity *This,VARIANT *retval);", "IISIPSecurity_put_DomainDeny_Proxy": "HRESULT WINAPI IISIPSecurity_put_DomainDeny_Proxy(IISIPSecurity *This,VARIANT vDomainDeny);", "IISIPSecurity_get_DomainGrant_Proxy": "HRESULT WINAPI IISIPSecurity_get_DomainGrant_Proxy(IISIPSecurity *This,VARIANT *retval);", "IISIPSecurity_put_DomainGrant_Proxy": "HRESULT WINAPI IISIPSecurity_put_DomainGrant_Proxy(IISIPSecurity *This,VARIANT vDomainGrant);", "IISIPSecurity_get_GrantByDefault_Proxy": "HRESULT WINAPI IISIPSecurity_get_GrantByDefault_Proxy(IISIPSecurity *This,VARIANT_BOOL *retval);", "IISIPSecurity_put_GrantByDefault_Proxy": "HRESULT WINAPI IISIPSecurity_put_GrantByDefault_Proxy(IISIPSecurity *This,VARIANT_BOOL fGrantByDefault);", "IISBaseObject_GetDataPaths_Proxy": "HRESULT WINAPI IISBaseObject_GetDataPaths_Proxy(IISBaseObject *This,BSTR bstrName,LONG lnAttribute,VARIANT *pvPaths);", "IISBaseObject_GetPropertyAttribObj_Proxy": "HRESULT WINAPI IISBaseObject_GetPropertyAttribObj_Proxy(IISBaseObject *This,BSTR bstrName,IDispatch **ppObject);", "IISSchemaObject_GetSchemaPropertyAttributes_Proxy": "HRESULT WINAPI IISSchemaObject_GetSchemaPropertyAttributes_Proxy(IISSchemaObject *This,BSTR bstrName,IDispatch **ppObject);", "IISSchemaObject_PutSchemaPropertyAttributes_Proxy": "HRESULT WINAPI IISSchemaObject_PutSchemaPropertyAttributes_Proxy(IISSchemaObject *This,IDispatch *pObject);", "IISPropertyAttribute_get_PropName_Proxy": "HRESULT WINAPI IISPropertyAttribute_get_PropName_Proxy(IISPropertyAttribute *This,BSTR *retval);", "IISPropertyAttribute_get_MetaId_Proxy": "HRESULT WINAPI IISPropertyAttribute_get_MetaId_Proxy(IISPropertyAttribute *This,__LONG32 *retval);", "IISPropertyAttribute_put_MetaId_Proxy": "HRESULT WINAPI IISPropertyAttribute_put_MetaId_Proxy(IISPropertyAttribute *This,__LONG32 lnMetaId);", "IISPropertyAttribute_get_UserType_Proxy": "HRESULT WINAPI IISPropertyAttribute_get_UserType_Proxy(IISPropertyAttribute *This,__LONG32 *retval);", "IISPropertyAttribute_put_UserType_Proxy": "HRESULT WINAPI IISPropertyAttribute_put_UserType_Proxy(IISPropertyAttribute *This,__LONG32 lnUserType);", "IISPropertyAttribute_get_AllAttributes_Proxy": "HRESULT WINAPI IISPropertyAttribute_get_AllAttributes_Proxy(IISPropertyAttribute *This,__LONG32 *retval);", "IISPropertyAttribute_get_Inherit_Proxy": "HRESULT WINAPI IISPropertyAttribute_get_Inherit_Proxy(IISPropertyAttribute *This,VARIANT_BOOL *retval);", "IISPropertyAttribute_put_Inherit_Proxy": "HRESULT WINAPI IISPropertyAttribute_put_Inherit_Proxy(IISPropertyAttribute *This,VARIANT_BOOL fInherit);", "IISPropertyAttribute_get_Secure_Proxy": "HRESULT WINAPI IISPropertyAttribute_get_Secure_Proxy(IISPropertyAttribute *This,VARIANT_BOOL *retval);", "IISPropertyAttribute_put_Secure_Proxy": "HRESULT WINAPI IISPropertyAttribute_put_Secure_Proxy(IISPropertyAttribute *This,VARIANT_BOOL fSecure);", "IISPropertyAttribute_get_Reference_Proxy": "HRESULT WINAPI IISPropertyAttribute_get_Reference_Proxy(IISPropertyAttribute *This,VARIANT_BOOL *retval);", "IISPropertyAttribute_put_Reference_Proxy": "HRESULT WINAPI IISPropertyAttribute_put_Reference_Proxy(IISPropertyAttribute *This,VARIANT_BOOL fReference);", "IISPropertyAttribute_get_Volatile_Proxy": "HRESULT WINAPI IISPropertyAttribute_get_Volatile_Proxy(IISPropertyAttribute *This,VARIANT_BOOL *retval);", "IISPropertyAttribute_put_Volatile_Proxy": "HRESULT WINAPI IISPropertyAttribute_put_Volatile_Proxy(IISPropertyAttribute *This,VARIANT_BOOL fVolatile);", "IISPropertyAttribute_get_Isinherit_Proxy": "HRESULT WINAPI IISPropertyAttribute_get_Isinherit_Proxy(IISPropertyAttribute *This,VARIANT_BOOL *retval);", "IISPropertyAttribute_get_Default_Proxy": "HRESULT WINAPI IISPropertyAttribute_get_Default_Proxy(IISPropertyAttribute *This,VARIANT *retval);", "IISPropertyAttribute_put_Default_Proxy": "HRESULT WINAPI IISPropertyAttribute_put_Default_Proxy(IISPropertyAttribute *This,VARIANT vDefault);", "__FUnloadDelayLoadedDLL2": "ExternC WINBOOL WINAPI __FUnloadDelayLoadedDLL2(LPCSTR szDll);", "__HrLoadAllImportsForDll": "ExternC HRESULT WINAPI __HrLoadAllImportsForDll(LPCSTR szDll);", "MFHeapAlloc": "EXTERN_C void *WINAPI MFHeapAlloc (size_t nSize, ULONG dwFlags, char *pszFile, int line, EAllocationType eat);", "MFHeapFree": "EXTERN_C void WINAPI MFHeapFree (void *pv);", "MFllMulDiv": "LONGLONG WINAPI MFllMulDiv (LONGLONG a, LONGLONG b, LONGLONG c, LONGLONG d);", "VirtualFree": "WINBASEAPI WINBOOL WINAPI VirtualFree (LPVOID lpAddress, SIZE_T dwSize, DWORD dwFreeType);", "VirtualAlloc": "WINBASEAPI LPVOID WINAPI VirtualAlloc (LPVOID lpAddress, SIZE_T dwSize, DWORD flAllocationType, DWORD flProtect);", "VirtualAllocEx": "WINBASEAPI LPVOID WINAPI VirtualAllocEx (HANDLE hProcess, LPVOID lpAddress, SIZE_T dwSize, DWORD flAllocationType, DWORD flProtect);", "VirtualQuery": "WINBASEAPI SIZE_T WINAPI VirtualQuery (LPCVOID lpAddress, PMEMORY_BASIC_INFORMATION lpBuffer, SIZE_T dwLength);", "FlushViewOfFile": "WINBASEAPI WINBOOL WINAPI FlushViewOfFile (LPCVOID lpBaseAddress, SIZE_T dwNumberOfBytesToFlush);", "UnmapViewOfFile": "WINBASEAPI WINBOOL WINAPI UnmapViewOfFile (LPCVOID lpBaseAddress);", "UnmapViewOfFile2": "WINBASEAPI WINBOOL WINAPI UnmapViewOfFile2(HANDLE Process, PVOID BaseAddress, ULONG UnmapFlags);", "CreateFileMappingFromApp": "WINBASEAPI HANDLE WINAPI CreateFileMappingFromApp (HANDLE hFile, PSECURITY_ATTRIBUTES SecurityAttributes, ULONG PageProtection, ULONG64 MaximumSize, PCWSTR Name);", "MapViewOfFileFromApp": "WINBASEAPI PVOID WINAPI MapViewOfFileFromApp (HANDLE hFileMappingObject, ULONG DesiredAccess, ULONG64 FileOffset, SIZE_T NumberOfBytesToMap);", "VirtualUnlockEx": "WINBASEAPI WINBOOL WINAPI VirtualUnlockEx(HANDLE Process, LPVOID Address, SIZE_T Size);", "SetProcessValidCallTargets": "WINBASEAPI WINBOOL WINAPI SetProcessValidCallTargets(HANDLE hProcess, PVOID VirtualAddress, SIZE_T RegionSize, ULONG NumberOfOffsets, PCFG_CALL_TARGET_INFO OffsetInformation);", "SetProcessValidCallTargetsForMappedView": "WINBASEAPI WINBOOL WINAPI SetProcessValidCallTargetsForMappedView(HANDLE Process, PVOID VirtualAddress, SIZE_T RegionSize, ULONG NumberOfOffsets, PCFG_CALL_TARGET_INFO OffsetInformation, HANDLE Section, ULONG64 ExpectedFileOffset);", "VirtualAllocFromApp": "WINBASEAPI PVOID WINAPI VirtualAllocFromApp(PVOID BaseAddress, SIZE_T Size, ULONG AllocationType, ULONG  Protection);", "VirtualProtectFromApp": "WINBASEAPI WINBOOL WINAPI VirtualProtectFromApp (PVOID lpAddress, SIZE_T dwSize, ULONG flNewProtect, PULONG lpflOldProtect);", "OpenFileMappingFromApp": "WINBASEAPI HANDLE WINAPI OpenFileMappingFromApp(ULONG DesiredAccess, WINBOOL InheritHandle, PCWSTR Name);", "VirtualAlloc2FromApp": "WINBASEAPI PVOID WINAPI VirtualAlloc2FromApp(HANDLE Process, PVOID BaseAddress, SIZE_T Size, ULONG AllocationType, ULONG PageProtection, MEM_EXTENDED_PARAMETER* ExtendedParameters, ULONG ParameterCount);", "MapViewOfFile3FromApp": "WINBASEAPI PVOID WINAPI MapViewOfFile3FromApp(HANDLE FileMapping, HANDLE Process, PVOID BaseAddress, ULONG64 Offset, SIZE_T ViewSize, ULONG AllocationType, ULONG PageProtection, MEM_EXTENDED_PARAMETER* ExtendedParameters, ULONG ParameterCount);", "VirtualProtect": "WINBASEAPI WINBOOL WINAPI VirtualProtect (LPVOID lpAddress, SIZE_T dwSize, DWORD flNewProtect, PDWORD lpflOldProtect);", "VirtualProtectEx": "WINBASEAPI WINBOOL WINAPI VirtualProtectEx (HANDLE hProcess, LPVOID lpAddress, SIZE_T dwSize, DWORD flNewProtect, PDWORD lpflOldProtect);", "VirtualQueryEx": "WINBASEAPI SIZE_T WINAPI VirtualQueryEx (HANDLE hProcess, LPCVOID lpAddress, PMEMORY_BASIC_INFORMATION lpBuffer, SIZE_T dwLength);", "ReadProcessMemory": "WINBASEAPI WINBOOL WINAPI ReadProcessMemory (HANDLE hProcess, LPCVOID lpBaseAddress, LPVOID lpBuffer, SIZE_T nSize, SIZE_T *lpNumberOfBytesRead);", "WriteProcessMemory": "WINBASEAPI WINBOOL WINAPI WriteProcessMemory (HANDLE hProcess, LPVOID lpBaseAddress, LPCVOID lpBuffer, SIZE_T nSize, SIZE_T *lpNumberOfBytesWritten);", "CreateFileMappingW": "WINBASEAPI HANDLE WINAPI CreateFileMappingW (HANDLE hFile, LPSECURITY_ATTRIBUTES lpFileMappingAttributes, DWORD flProtect, DWORD dwMaximumSizeHigh, DWORD dwMaximumSizeLow, LPCWSTR lpName);", "OpenFileMappingW": "WINBASEAPI HANDLE WINAPI OpenFileMappingW (DWORD dwDesiredAccess, WINBOOL bInheritHandle, LPCWSTR lpName);", "MapViewOfFile": "WINBASEAPI LPVOID WINAPI MapViewOfFile (HANDLE hFileMappingObject, DWORD dwDesiredAccess, DWORD dwFileOffsetHigh, DWORD dwFileOffsetLow, SIZE_T dwNumberOfBytesToMap);", "MapViewOfFileEx": "WINBASEAPI LPVOID WINAPI MapViewOfFileEx (HANDLE hFileMappingObject, DWORD dwDesiredAccess, DWORD dwFileOffsetHigh, DWORD dwFileOffsetLow, SIZE_T dwNumberOfBytesToMap, LPVOID lpBaseAddress);", "VirtualLock": "WINBASEAPI WINBOOL WINAPI VirtualLock (LPVOID lpAddress, SIZE_T dwSize);", "VirtualUnlock": "WINBASEAPI WINBOOL WINAPI VirtualUnlock (LPVOID lpAddress, SIZE_T dwSize);", "CreateMemoryResourceNotification": "WINBASEAPI HANDLE WINAPI CreateMemoryResourceNotification (MEMORY_RESOURCE_NOTIFICATION_TYPE NotificationType);", "QueryMemoryResourceNotification": "WINBASEAPI WINBOOL WINAPI QueryMemoryResourceNotification (HANDLE ResourceNotificationHandle, PBOOL ResourceState);", "GetSystemFileCacheSize": "WINBASEAPI WINBOOL WINAPI GetSystemFileCacheSize (PSIZE_T lpMinimumFileCacheSize, PSIZE_T lpMaximumFileCacheSize, PDWORD lpFlags);", "SetSystemFileCacheSize": "WINBASEAPI WINBOOL WINAPI SetSystemFileCacheSize (SIZE_T MinimumFileCacheSize, SIZE_T MaximumFileCacheSize, DWORD Flags);", "CreateFileMappingNumaW": "WINBASEAPI HANDLE WINAPI CreateFileMappingNumaW (HANDLE hFile, LPSECURITY_ATTRIBUTES lpFileMappingAttributes, DWORD flProtect, DWORD dwMaximumSizeHigh, DWORD dwMaximumSizeLow, LPCWSTR lpName, DWORD nndPreferred);", "PrefetchVirtualMemory": "WINBASEAPI WINBOOL WINAPI PrefetchVirtualMemory (HANDLE hProcess, ULONG_PTR NumberOfEntries, PWIN32_MEMORY_RANGE_ENTRY VirtualAddresses, ULONG Flags);", "QueryVirtualMemoryInformation": "WINBASEAPI WINBOOL WINAPI QueryVirtualMemoryInformation(HANDLE Process, const VOID* VirtualAddress, WIN32_MEMORY_INFORMATION_CLASS MemoryInformationClass, PVOID MemoryInformation, SIZE_T MemoryInformationSize, PSIZE_T ReturnSize);", "MapViewOfFileNuma2": "WINBASEAPI PVOID WINAPI MapViewOfFileNuma2(HANDLE FileMappingHandle, HANDLE ProcessHandle, ULONG64 Offset, PVOID BaseAddress, SIZE_T ViewSize, ULONG AllocationType, ULONG PageProtection, ULONG PreferredNode);", "VirtualAlloc2": "WINBASEAPI PVOID WINAPI VirtualAlloc2(HANDLE Process, PVOID BaseAddress, SIZE_T Size, ULONG AllocationType, ULONG PageProtection, MEM_EXTENDED_PARAMETER* ExtendedParameters, ULONG ParameterCount);", "MapViewOfFile3": "WINBASEAPI PVOID WINAPI MapViewOfFile3(HANDLE FileMapping, HANDLE Process, PVOID BaseAddress, ULONG64 Offset, SIZE_T ViewSize, ULONG AllocationType, ULONG PageProtection, MEM_EXTENDED_PARAMETER* ExtendedParameters, ULONG ParameterCount);", "CreateFileMapping2": "WINBASEAPI HANDLE WINAPI CreateFileMapping2(HANDLE File, SECURITY_ATTRIBUTES* SecurityAttributes, ULONG DesiredAccess, ULONG PageProtection, ULONG AllocationAttributes, ULONG64 MaximumSize, PCWSTR Name, MEM_EXTENDED_PARAMETER* ExtendedParameters, ULONG ParameterCount);", "GetLargePageMinimum": "WINBASEAPI SIZE_T WINAPI GetLargePageMinimum (VOID);", "GetProcessWorkingSetSizeEx": "WINBASEAPI WINBOOL WINAPI GetProcessWorkingSetSizeEx (HANDLE hProcess, PSIZE_T lpMinimumWorkingSetSize, PSIZE_T lpMaximumWorkingSetSize, PDWORD Flags);", "SetProcessWorkingSetSizeEx": "WINBASEAPI WINBOOL WINAPI SetProcessWorkingSetSizeEx (HANDLE hProcess, SIZE_T dwMinimumWorkingSetSize, SIZE_T dwMaximumWorkingSetSize, DWORD Flags);", "GetWriteWatch": "WINBASEAPI UINT WINAPI GetWriteWatch (DWORD dwFlags, PVOID lpBaseAddress, SIZE_T dwRegionSize, PVOID *lpAddresses, ULONG_PTR *lpdwCount, LPDWORD lpdwGranularity);", "ResetWriteWatch": "WINBASEAPI UINT WINAPI ResetWriteWatch (LPVOID lpBaseAddress, SIZE_T dwRegionSize);", "VirtualFreeEx": "WINBASEAPI WINBOOL WINAPI VirtualFreeEx (HANDLE hProcess, LPVOID lpAddress, SIZE_T dwSize, DWORD dwFreeType);", "DiscardVirtualMemory": "WINBASEAPI DWORD WINAPI DiscardVirtualMemory (PVOID VirtualAddress, SIZE_T Size);", "OfferVirtualMemory": "WINBASEAPI DWORD WINAPI OfferVirtualMemory (PVOID VirtualAddress, SIZE_T Size, OFFER_PRIORITY Priority);", "ReclaimVirtualMemory": "WINBASEAPI DWORD WINAPI ReclaimVirtualMemory (PVOID VirtualAddress, SIZE_T Size);", "UnmapViewOfFileEx": "WINBASEAPI WINBOOL WINAPI UnmapViewOfFileEx (PVOID BaseAddress, ULONG UnmapFlags);", "NetAuditClear": "DWORD WINAPI NetAuditClear(LPCWSTR server,LPCWSTR backupfile,LPCWSTR service);", "NetAuditRead": "DWORD WINAPI NetAuditRead(LPCWSTR server,LPCWSTR service,LPHLOG auditloghandle,DWORD offset,LPDWORD reserved1,DWORD reserved2,DWORD offsetflag,LPBYTE *bufptr,DWORD prefmaxlen,LPDWORD bytesread,LPDWORD totalavailable);", "NetAuditWrite": "DWORD WINAPI NetAuditWrite(DWORD type,LPBYTE buf,DWORD numbytes,LPCWSTR service,LPBYTE reserved);", "IDistributionList_get_HideDLMembership_Proxy": "HRESULT WINAPI IDistributionList_get_HideDLMembership_Proxy(IDistributionList *This,VARIANT_BOOL *pHideDLMembership);", "IDistributionList_put_HideDLMembership_Proxy": "HRESULT WINAPI IDistributionList_put_HideDLMembership_Proxy(IDistributionList *This,VARIANT_BOOL varHideDLMembership);", "IMailRecipient_get_IncomingLimit_Proxy": "HRESULT WINAPI IMailRecipient_get_IncomingLimit_Proxy(IMailRecipient *This,__LONG32 *pIncomingLimit);", "IMailRecipient_put_IncomingLimit_Proxy": "HRESULT WINAPI IMailRecipient_put_IncomingLimit_Proxy(IMailRecipient *This,__LONG32 varIncomingLimit);", "IMailRecipient_get_OutgoingLimit_Proxy": "HRESULT WINAPI IMailRecipient_get_OutgoingLimit_Proxy(IMailRecipient *This,__LONG32 *pOutgoingLimit);", "IMailRecipient_put_OutgoingLimit_Proxy": "HRESULT WINAPI IMailRecipient_put_OutgoingLimit_Proxy(IMailRecipient *This,__LONG32 varOutgoingLimit);", "IMailRecipient_get_RestrictedAddressList_Proxy": "HRESULT WINAPI IMailRecipient_get_RestrictedAddressList_Proxy(IMailRecipient *This,VARIANT *pRestrictedAddressList);", "IMailRecipient_put_RestrictedAddressList_Proxy": "HRESULT WINAPI IMailRecipient_put_RestrictedAddressList_Proxy(IMailRecipient *This,VARIANT varRestrictedAddressList);", "IMailRecipient_get_RestrictedAddresses_Proxy": "HRESULT WINAPI IMailRecipient_get_RestrictedAddresses_Proxy(IMailRecipient *This,CDOEXMRestrictedAddressType *pRestrictedAddresses);", "IMailRecipient_put_RestrictedAddresses_Proxy": "HRESULT WINAPI IMailRecipient_put_RestrictedAddresses_Proxy(IMailRecipient *This,CDOEXMRestrictedAddressType varRestrictedAddresses);", "IMailRecipient_get_ForwardTo_Proxy": "HRESULT WINAPI IMailRecipient_get_ForwardTo_Proxy(IMailRecipient *This,BSTR *pForwardTo);", "IMailRecipient_put_ForwardTo_Proxy": "HRESULT WINAPI IMailRecipient_put_ForwardTo_Proxy(IMailRecipient *This,BSTR varForwardTo);", "IMailRecipient_get_ForwardingStyle_Proxy": "HRESULT WINAPI IMailRecipient_get_ForwardingStyle_Proxy(IMailRecipient *This,CDOEXMDeliverAndRedirect *pForwardingStyle);", "IMailRecipient_put_ForwardingStyle_Proxy": "HRESULT WINAPI IMailRecipient_put_ForwardingStyle_Proxy(IMailRecipient *This,CDOEXMDeliverAndRedirect varForwardingStyle);", "IMailRecipient_get_HideFromAddressBook_Proxy": "HRESULT WINAPI IMailRecipient_get_HideFromAddressBook_Proxy(IMailRecipient *This,VARIANT_BOOL *pHideFromAddressBook);", "IMailRecipient_put_HideFromAddressBook_Proxy": "HRESULT WINAPI IMailRecipient_put_HideFromAddressBook_Proxy(IMailRecipient *This,VARIANT_BOOL varHideFromAddressBook);", "IMailRecipient_get_X400Email_Proxy": "HRESULT WINAPI IMailRecipient_get_X400Email_Proxy(IMailRecipient *This,BSTR *pX400Email);", "IMailRecipient_put_X400Email_Proxy": "HRESULT WINAPI IMailRecipient_put_X400Email_Proxy(IMailRecipient *This,BSTR varX400Email);", "IMailRecipient_get_SMTPEmail_Proxy": "HRESULT WINAPI IMailRecipient_get_SMTPEmail_Proxy(IMailRecipient *This,BSTR *pSMTPEmail);", "IMailRecipient_put_SMTPEmail_Proxy": "HRESULT WINAPI IMailRecipient_put_SMTPEmail_Proxy(IMailRecipient *This,BSTR varSMTPEmail);", "IMailRecipient_get_ProxyAddresses_Proxy": "HRESULT WINAPI IMailRecipient_get_ProxyAddresses_Proxy(IMailRecipient *This,VARIANT *pProxyAddresses);", "IMailRecipient_put_ProxyAddresses_Proxy": "HRESULT WINAPI IMailRecipient_put_ProxyAddresses_Proxy(IMailRecipient *This,VARIANT varProxyAddresses);", "IMailRecipient_get_AutoGenerateEmailAddresses_Proxy": "HRESULT WINAPI IMailRecipient_get_AutoGenerateEmailAddresses_Proxy(IMailRecipient *This,VARIANT_BOOL *pAutoGenerateEmailAddresses);", "IMailRecipient_put_AutoGenerateEmailAddresses_Proxy": "HRESULT WINAPI IMailRecipient_put_AutoGenerateEmailAddresses_Proxy(IMailRecipient *This,VARIANT_BOOL varAutoGenerateEmailAddresses);", "IMailRecipient_get_Alias_Proxy": "HRESULT WINAPI IMailRecipient_get_Alias_Proxy(IMailRecipient *This,BSTR *pAlias);", "IMailRecipient_put_Alias_Proxy": "HRESULT WINAPI IMailRecipient_put_Alias_Proxy(IMailRecipient *This,BSTR varAlias);", "IMailRecipient_get_TargetAddress_Proxy": "HRESULT WINAPI IMailRecipient_get_TargetAddress_Proxy(IMailRecipient *This,BSTR *varTargetAddress);", "IMailRecipient_MailEnable_Proxy": "HRESULT WINAPI IMailRecipient_MailEnable_Proxy(IMailRecipient *This,BSTR TargetMailAddress);", "IMailRecipient_MailDisable_Proxy": "HRESULT WINAPI IMailRecipient_MailDisable_Proxy(IMailRecipient *This);", "IMailboxStore_get_EnableStoreDefaults_Proxy": "HRESULT WINAPI IMailboxStore_get_EnableStoreDefaults_Proxy(IMailboxStore *This,VARIANT *pEnableStoreDefaults);", "IMailboxStore_put_EnableStoreDefaults_Proxy": "HRESULT WINAPI IMailboxStore_put_EnableStoreDefaults_Proxy(IMailboxStore *This,VARIANT varEnableStoreDefaults);", "IMailboxStore_get_StoreQuota_Proxy": "HRESULT WINAPI IMailboxStore_get_StoreQuota_Proxy(IMailboxStore *This,__LONG32 *pStoreQuota);", "IMailboxStore_put_StoreQuota_Proxy": "HRESULT WINAPI IMailboxStore_put_StoreQuota_Proxy(IMailboxStore *This,__LONG32 varStoreQuota);", "IMailboxStore_get_OverQuotaLimit_Proxy": "HRESULT WINAPI IMailboxStore_get_OverQuotaLimit_Proxy(IMailboxStore *This,__LONG32 *pOverQuotaLimit);", "IMailboxStore_put_OverQuotaLimit_Proxy": "HRESULT WINAPI IMailboxStore_put_OverQuotaLimit_Proxy(IMailboxStore *This,__LONG32 varOverQuotaLimit);", "IMailboxStore_get_HardLimit_Proxy": "HRESULT WINAPI IMailboxStore_get_HardLimit_Proxy(IMailboxStore *This,__LONG32 *pHardLimit);", "IMailboxStore_put_HardLimit_Proxy": "HRESULT WINAPI IMailboxStore_put_HardLimit_Proxy(IMailboxStore *This,__LONG32 varHardLimit);", "IMailboxStore_get_OverrideStoreGarbageCollection_Proxy": "HRESULT WINAPI IMailboxStore_get_OverrideStoreGarbageCollection_Proxy(IMailboxStore *This,VARIANT_BOOL *pOverrideStoreGarbageCollection);", "IMailboxStore_put_OverrideStoreGarbageCollection_Proxy": "HRESULT WINAPI IMailboxStore_put_OverrideStoreGarbageCollection_Proxy(IMailboxStore *This,VARIANT_BOOL varOverrideStoreGarbageCollection);", "IMailboxStore_get_DaysBeforeGarbageCollection_Proxy": "HRESULT WINAPI IMailboxStore_get_DaysBeforeGarbageCollection_Proxy(IMailboxStore *This,__LONG32 *pDaysBeforeGarbageCollection);", "IMailboxStore_put_DaysBeforeGarbageCollection_Proxy": "HRESULT WINAPI IMailboxStore_put_DaysBeforeGarbageCollection_Proxy(IMailboxStore *This,__LONG32 varDaysBeforeGarbageCollection);", "IMailboxStore_get_GarbageCollectOnlyAfterBackup_Proxy": "HRESULT WINAPI IMailboxStore_get_GarbageCollectOnlyAfterBackup_Proxy(IMailboxStore *This,VARIANT_BOOL *pGarbageCollectOnlyAfterBackup);", "IMailboxStore_put_GarbageCollectOnlyAfterBackup_Proxy": "HRESULT WINAPI IMailboxStore_put_GarbageCollectOnlyAfterBackup_Proxy(IMailboxStore *This,VARIANT_BOOL varGarbageCollectOnlyAfterBackup);", "IMailboxStore_get_Delegates_Proxy": "HRESULT WINAPI IMailboxStore_get_Delegates_Proxy(IMailboxStore *This,VARIANT *pDelegates);", "IMailboxStore_put_Delegates_Proxy": "HRESULT WINAPI IMailboxStore_put_Delegates_Proxy(IMailboxStore *This,VARIANT varDelegates);", "IMailboxStore_get_HomeMDB_Proxy": "HRESULT WINAPI IMailboxStore_get_HomeMDB_Proxy(IMailboxStore *This,BSTR *varHomeMDB);", "IMailboxStore_get_RecipientLimit_Proxy": "HRESULT WINAPI IMailboxStore_get_RecipientLimit_Proxy(IMailboxStore *This,__LONG32 *pRecipientLimit);", "IMailboxStore_put_RecipientLimit_Proxy": "HRESULT WINAPI IMailboxStore_put_RecipientLimit_Proxy(IMailboxStore *This,__LONG32 varRecipientLimit);", "IMailboxStore_CreateMailbox_Proxy": "HRESULT WINAPI IMailboxStore_CreateMailbox_Proxy(IMailboxStore *This,BSTR HomeMDBURL);", "IMailboxStore_DeleteMailbox_Proxy": "HRESULT WINAPI IMailboxStore_DeleteMailbox_Proxy(IMailboxStore *This);", "IMailboxStore_MoveMailbox_Proxy": "HRESULT WINAPI IMailboxStore_MoveMailbox_Proxy(IMailboxStore *This,BSTR HomeMDBURL);", "ResUtilStartResourceService": "DWORD WINAPI ResUtilStartResourceService (LPCWSTR pszServiceName, LPSC_HANDLE phServiceHandle);", "ResUtilVerifyResourceService": "DWORD WINAPI ResUtilVerifyResourceService (LPCWSTR pszServiceName);", "ResUtilStopResourceService": "DWORD WINAPI ResUtilStopResourceService (LPCWSTR pszServiceName);", "ResUtilVerifyService": "DWORD WINAPI ResUtilVerifyService (SC_HANDLE hServiceHandle);", "ResUtilStopService": "DWORD WINAPI ResUtilStopService (SC_HANDLE hServiceHandle);", "ResUtilCreateDirectoryTree": "DWORD WINAPI ResUtilCreateDirectoryTree (LPCWSTR pszPath);", "ResUtilIsPathValid": "WINBOOL WINAPI ResUtilIsPathValid (LPCWSTR pszPath);", "ResUtilEnumProperties": "DWORD WINAPI ResUtilEnumProperties (const PRESUTIL_PROPERTY_ITEM pPropertyTable, LPWSTR pszOutProperties, DWORD cbOutPropertiesSize, LPDWORD pcbBytesReturned, LPDWORD pcbRequired);", "ResUtilEnumPrivateProperties": "DWORD WINAPI ResUtilEnumPrivateProperties (HKEY hkeyClusterKey, LPWSTR pszOutProperties, DWORD cbOutPropertiesSize, LPDWORD pcbBytesReturned, LPDWORD pcbRequired);", "ResUtilGetProperties": "DWORD WINAPI ResUtilGetProperties (HKEY hkeyClusterKey, const PRESUTIL_PROPERTY_ITEM pPropertyTable, PVOID pOutPropertyList, DWORD cbOutPropertyListSize, LPDWORD pcbBytesReturned, LPDWORD pcbRequired);", "ResUtilGetAllProperties": "DWORD WINAPI ResUtilGetAllProperties (HKEY hkeyClusterKey, const PRESUTIL_PROPERTY_ITEM pPropertyTable, PVOID pOutPropertyList, DWORD cbOutPropertyListSize, LPDWORD pcbBytesReturned, LPDWORD pcbRequired);", "ResUtilGetPrivateProperties": "DWORD WINAPI ResUtilGetPrivateProperties (HKEY hkeyClusterKey, PVOID pOutPropertyList, DWORD cbOutPropertyListSize, LPDWORD pcbBytesReturned, LPDWORD pcbRequired);", "ResUtilGetPropertySize": "DWORD WINAPI ResUtilGetPropertySize (HKEY hkeyClusterKey, const PRESUTIL_PROPERTY_ITEM pPropertyTableItem, LPDWORD pcbOutPropertyListSize, LPDWORD pnPropertyCount);", "ResUtilGetProperty": "DWORD WINAPI ResUtilGetProperty (HKEY hkeyClusterKey, const PRESUTIL_PROPERTY_ITEM pPropertyTableItem, PVOID *pOutPropertyItem, LPDWORD pcbOutPropertyItemSize);", "ResUtilVerifyPropertyTable": "DWORD WINAPI ResUtilVerifyPropertyTable (const PRESUTIL_PROPERTY_ITEM pPropertyTable, PVOID Reserved, WINBOOL bAllowUnknownProperties, const PVOID pInPropertyList, DWORD cbInPropertyListSize, LPBYTE pOutParams);", "ResUtilSetPropertyTable": "DWORD WINAPI ResUtilSetPropertyTable (HKEY hkeyClusterKey, const PRESUTIL_PROPERTY_ITEM pPropertyTable, PVOID Reserved, WINBOOL bAllowUnknownProperties, const PVOID pInPropertyList, DWORD cbInPropertyListSize, LPBYTE pOutParams);", "ResUtilSetPropertyTableEx": "DWORD WINAPI ResUtilSetPropertyTableEx (HKEY hkeyClusterKey, const PRESUTIL_PROPERTY_ITEM pPropertyTable, PVOID Reserved, WINBOOL bAllowUnknownProperties, const PVOID pInPropertyList, DWORD cbInPropertyListSize, WINBOOL bForceWrite, LPBYTE pOutParams);", "ResUtilSetPropertyParameterBlock": "DWORD WINAPI ResUtilSetPropertyParameterBlock (HKEY hkeyClusterKey, const PRESUTIL_PROPERTY_ITEM pPropertyTable, PVOID Reserved, const LPBYTE pInParams, const PVOID pInPropertyList, DWORD cbInPropertyListSize, LPBYTE pOutParams);", "ResUtilSetPropertyParameterBlockEx": "DWORD WINAPI ResUtilSetPropertyParameterBlockEx (HKEY hkeyClusterKey, const PRESUTIL_PROPERTY_ITEM pPropertyTable, PVOID Reserved, const LPBYTE pInParams, const PVOID pInPropertyList, DWORD cbInPropertyListSize, WINBOOL bForceWrite, LPBYTE pOutParams);", "ResUtilSetUnknownProperties": "DWORD WINAPI ResUtilSetUnknownProperties (HKEY hkeyClusterKey, const PRESUTIL_PROPERTY_ITEM pPropertyTable, const PVOID pInPropertyList, DWORD cbInPropertyListSize);", "ResUtilGetPropertiesToParameterBlock": "DWORD WINAPI ResUtilGetPropertiesToParameterBlock (HKEY hkeyClusterKey, const PRESUTIL_PROPERTY_ITEM pPropertyTable, LPBYTE pOutParams, WINBOOL bCheckForRequiredProperties, LPWSTR *pszNameOfPropInError);", "ResUtilPropertyListFromParameterBlock": "DWORD WINAPI ResUtilPropertyListFromParameterBlock (const PRESUTIL_PROPERTY_ITEM pPropertyTable, PVOID pOutPropertyList, LPDWORD pcbOutPropertyListSize, const LPBYTE pInParams, LPDWORD pcbBytesReturned, LPDWORD pcbRequired);", "ResUtilDupParameterBlock": "DWORD WINAPI ResUtilDupParameterBlock (LPBYTE pOutParams, const LPBYTE pInParams, const PRESUTIL_PROPERTY_ITEM pPropertyTable);", "ResUtilFreeParameterBlock": "void WINAPI ResUtilFreeParameterBlock (LPBYTE pOutParams, const LPBYTE pInParams, const PRESUTIL_PROPERTY_ITEM pPropertyTable);", "ResUtilAddUnknownProperties": "DWORD WINAPI ResUtilAddUnknownProperties (HKEY hkeyClusterKey, const PRESUTIL_PROPERTY_ITEM pPropertyTable, PVOID pOutPropertyList, DWORD pcbOutPropertyListSize, LPDWORD pcbBytesReturned, LPDWORD pcbRequired);", "ResUtilSetPrivatePropertyList": "DWORD WINAPI ResUtilSetPrivatePropertyList (HKEY hkeyClusterKey, const PVOID pInPropertyList, DWORD cbInPropertyListSize);", "ResUtilVerifyPrivatePropertyList": "DWORD WINAPI ResUtilVerifyPrivatePropertyList (const PVOID pInPropertyList, DWORD cbInPropertyListSize);", "ResUtilDupString": "PWSTR WINAPI ResUtilDupString (LPCWSTR pszInString);", "ResUtilGetBinaryValue": "DWORD WINAPI ResUtilGetBinaryValue (HKEY hkeyClusterKey, LPCWSTR pszValueName, LPBYTE *ppbOutValue, LPDWORD pcbOutValueSize);", "ResUtilGetSzValue": "LPWSTR WINAPI ResUtilGetSzValue (HKEY hkeyClusterKey, LPCWSTR pszValueName);", "ResUtilGetExpandSzValue": "LPWSTR WINAPI ResUtilGetExpandSzValue (HKEY hkeyClusterKey, LPCWSTR pszValueName, WINBOOL bExpand);", "ResUtilGetDwordValue": "DWORD WINAPI ResUtilGetDwordValue (HKEY hkeyClusterKey, LPCWSTR pszValueName, LPDWORD pdwOutValue, DWORD dwDefaultValue);", "ResUtilGetQwordValue": "DWORD WINAPI ResUtilGetQwordValue (HKEY hkeyClusterKey, LPCWSTR pszValueName, PULONGLONG pqwOutValue, ULONGLONG qwDefaultValue);", "ResUtilSetBinaryValue": "DWORD WINAPI ResUtilSetBinaryValue (HKEY hkeyClusterKey, LPCWSTR pszValueName, const LPBYTE pbNewValue, DWORD cbNewValueSize, LPBYTE *ppbOutValue, LPDWORD pcbOutValueSize);", "ResUtilSetSzValue": "DWORD WINAPI ResUtilSetSzValue (HKEY hkeyClusterKey, LPCWSTR pszValueName, LPCWSTR pszNewValue, LPWSTR *ppszOutString);", "ResUtilSetExpandSzValue": "DWORD WINAPI ResUtilSetExpandSzValue (HKEY hkeyClusterKey, LPCWSTR pszValueName, LPCWSTR pszNewValue, LPWSTR *ppszOutString);", "ResUtilSetMultiSzValue": "DWORD WINAPI ResUtilSetMultiSzValue (HKEY hkeyClusterKey, LPCWSTR pszValueName, LPCWSTR pszNewValue, DWORD cbNewValueSize, LPWSTR *ppszOutValue, LPDWORD pcbOutValueSize);", "ResUtilSetDwordValue": "DWORD WINAPI ResUtilSetDwordValue (HKEY hkeyClusterKey, LPCWSTR pszValueName, DWORD dwNewValue, LPDWORD pdwOutValue);", "ResUtilSetQwordValue": "DWORD WINAPI ResUtilSetQwordValue (HKEY hkeyClusterKey, LPCWSTR pszValueName, ULONGLONG qwNewValue, PULONGLONG pqwOutValue);", "ResUtilGetBinaryProperty": "DWORD WINAPI ResUtilGetBinaryProperty (LPBYTE *ppbOutValue, LPDWORD pcbOutValueSize, const PCLUSPROP_BINARY pValueStruct, const LPBYTE pbOldValue, DWORD cbOldValueSize, LPBYTE *ppPropertyList, LPDWORD pcbPropertyListSize);", "ResUtilGetSzProperty": "DWORD WINAPI ResUtilGetSzProperty (LPWSTR *ppszOutValue, const PCLUSPROP_SZ pValueStruct, LPCWSTR pszOldValue, LPBYTE *ppPropertyList, LPDWORD pcbPropertyListSize);", "ResUtilGetMultiSzProperty": "DWORD WINAPI ResUtilGetMultiSzProperty (LPWSTR *ppszOutValue, LPDWORD pcbOutValueSize, const PCLUSPROP_SZ pValueStruct, LPCWSTR pszOldValue, DWORD cbOldValueSize, LPBYTE *ppPropertyList, LPDWORD pcbPropertyListSize);", "ResUtilGetDwordProperty": "DWORD WINAPI ResUtilGetDwordProperty (LPDWORD pdwOutValue, const PCLUSPROP_DWORD pValueStruct, DWORD dwOldValue, DWORD dwMinimum, DWORD dwMaximum, LPBYTE *ppPropertyList, LPDWORD pcbPropertyListSize);", "ResUtilGetLongProperty": "DWORD WINAPI ResUtilGetLongProperty (LPLONG plOutValue, const PCLUSPROP_LONG pValueStruct, LONG lOldValue, LONG lMinimum, LONG lMaximum, LPBYTE *ppPropertyList, LPDWORD pcbPropertyListSize);", "ResUtilGetFileTimeProperty": "DWORD WINAPI ResUtilGetFileTimeProperty (LPFILETIME pftOutValue, const PCLUSPROP_FILETIME pValueStruct, FILETIME ftOldValue, FILETIME ftMinimum, FILETIME ftMaximum, LPBYTE *ppPropertyList, LPDWORD pcbPropertyListSize);", "ResUtilGetEnvironmentWithNetName": "LPVOID WINAPI ResUtilGetEnvironmentWithNetName (HRESOURCE hResource);", "ResUtilFreeEnvironment": "DWORD WINAPI ResUtilFreeEnvironment (LPVOID lpEnvironment);", "ResUtilExpandEnvironmentStrings": "LPWSTR WINAPI ResUtilExpandEnvironmentStrings (LPCWSTR pszSrc);", "ResUtilSetResourceServiceEnvironment": "DWORD WINAPI ResUtilSetResourceServiceEnvironment (LPCWSTR pszServiceName, HRESOURCE hResource, PLOG_EVENT_ROUTINE pfnLogEvent, RESOURCE_HANDLE hResourceHandle);", "ResUtilRemoveResourceServiceEnvironment": "DWORD WINAPI ResUtilRemoveResourceServiceEnvironment (LPCWSTR pszServiceName, PLOG_EVENT_ROUTINE pfnLogEvent, RESOURCE_HANDLE hResourceHandle);", "ResUtilSetResourceServiceStartParameters": "DWORD WINAPI ResUtilSetResourceServiceStartParameters (LPCWSTR pszServiceName, SC_HANDLE schSCMHandle, LPSC_HANDLE phService, PLOG_EVENT_ROUTINE pfnLogEvent, RESOURCE_HANDLE hResourceHandle);", "ResUtilFindSzProperty": "DWORD WINAPI ResUtilFindSzProperty (const PVOID pPropertyList, DWORD cbPropertyListSize, LPCWSTR pszPropertyName, LPWSTR *pszPropertyValue);", "ResUtilFindExpandSzProperty": "DWORD WINAPI ResUtilFindExpandSzProperty (const PVOID pPropertyList, DWORD cbPropertyListSize, LPCWSTR pszPropertyName, LPWSTR *pszPropertyValue);", "ResUtilFindExpandedSzProperty": "DWORD WINAPI ResUtilFindExpandedSzProperty (const PVOID pPropertyList, DWORD cbPropertyListSize, LPCWSTR pszPropertyName, LPWSTR *pszPropertyValue);", "ResUtilFindDwordProperty": "DWORD WINAPI ResUtilFindDwordProperty (const PVOID pPropertyList, DWORD cbPropertyListSize, LPCWSTR pszPropertyName, LPDWORD pdwPropertyValue);", "ResUtilFindBinaryProperty": "DWORD WINAPI ResUtilFindBinaryProperty (const PVOID pPropertyList, DWORD cbPropertyListSize, LPCWSTR pszPropertyName, LPBYTE *pbPropertyValue, LPDWORD pcbPropertyValueSize);", "ResUtilFindMultiSzProperty": "DWORD WINAPI ResUtilFindMultiSzProperty (const PVOID pPropertyList, DWORD cbPropertyListSize, LPCWSTR pszPropertyName, LPWSTR *pszPropertyValue, LPDWORD pcbPropertyValueSize);", "ResUtilFindLongProperty": "DWORD WINAPI ResUtilFindLongProperty (const PVOID pPropertyList, DWORD cbPropertyListSize, LPCWSTR pszPropertyName, LPLONG plPropertyValue);", "ResUtilFindFileTimeProperty": "DWORD WINAPI ResUtilFindFileTimeProperty (const PVOID pPropertyList, DWORD cbPropertyListSize, LPCWSTR pszPropertyName, LPFILETIME pftPropertyValue);", "ClusWorkerCreate": "DWORD WINAPI ClusWorkerCreate (PCLUS_WORKER lpWorker, PWORKER_START_ROUTINE lpStartAddress, PVOID lpParameter);", "ClusWorkerCheckTerminate": "WINBOOL WINAPI ClusWorkerCheckTerminate (PCLUS_WORKER lpWorker);", "ClusWorkerTerminate": "VOID WINAPI ClusWorkerTerminate (PCLUS_WORKER lpWorker);", "ResUtilResourcesEqual": "WINBOOL WINAPI ResUtilResourcesEqual (HRESOURCE hSelf, HRESOURCE hResource);", "ResUtilResourceTypesEqual": "WINBOOL WINAPI ResUtilResourceTypesEqual (LPCWSTR lpszResourceTypeName, HRESOURCE hResource);", "ResUtilIsResourceClassEqual": "WINBOOL WINAPI ResUtilIsResourceClassEqual (PCLUS_RESOURCE_CLASS_INFO prci, HRESOURCE hResource);", "ResUtilEnumResources": "DWORD WINAPI ResUtilEnumResources (HRESOURCE hSelf, LPCWSTR lpszResTypeName, LPRESOURCE_CALLBACK pResCallBack, PVOID pParameter);", "ResUtilEnumResourcesEx": "DWORD WINAPI ResUtilEnumResourcesEx (HCLUSTER hCluster, HRESOURCE hSelf, LPCWSTR lpszResTypeName, LPRESOURCE_CALLBACK_EX pResCallBack, PVOID pParameter);", "ResUtilGetResourceDependency": "HRESOURCE WINAPI ResUtilGetResourceDependency (HANDLE hSelf, LPCWSTR lpszResourceType);", "ResUtilGetResourceDependencyByName": "HRESOURCE WINAPI ResUtilGetResourceDependencyByName (HCLUSTER hCluster, HANDLE hSelf, LPCWSTR lpszResourceType, WINBOOL bRecurse);", "ResUtilGetResourceDependencyByClass": "HRESOURCE WINAPI ResUtilGetResourceDependencyByClass (HCLUSTER hCluster, HANDLE hSelf, PCLUS_RESOURCE_CLASS_INFO prci, WINBOOL bRecurse);", "ResUtilGetResourceNameDependency": "HRESOURCE WINAPI ResUtilGetResourceNameDependency (LPCWSTR lpszResourceName, LPCWSTR lpszResourceType);", "ResUtilGetResourceDependentIPAddressProps": "DWORD WINAPI ResUtilGetResourceDependentIPAddressProps (HRESOURCE hResource, LPWSTR pszAddress, DWORD *pcchAddress, LPWSTR pszSubnetMask, DWORD *pcchSubnetMask, LPWSTR pszNetwork, DWORD *pcch_Network);", "ResUtilFindDependentDiskResourceDriveLetter": "DWORD WINAPI ResUtilFindDependentDiskResourceDriveLetter (HCLUSTER hCluster, HRESOURCE hResource, LPWSTR pszDriveLetter, DWORD *pcchDriveLetter);", "ResUtilTerminateServiceProcessFromResDll": "DWORD WINAPI ResUtilTerminateServiceProcessFromResDll (DWORD dwServicePid, WINBOOL bOffline, PDWORD pdwResourceState, PLOG_EVENT_ROUTINE pfnLogEvent, RESOURCE_HANDLE hResourceHandle);", "ResUtilGetPropertyFormats": "DWORD WINAPI ResUtilGetPropertyFormats (const PRESUTIL_PROPERTY_ITEM pPropertyTable, PVOID pOutPropertyFormatList, DWORD cbPropertyFormatListSize, LPDWORD pcbBytesReturned, LPDWORD pcbRequired);", "ResUtilGetCoreClusterResources": "DWORD WINAPI ResUtilGetCoreClusterResources (HCLUSTER hCluster, HRESOURCE *phClusterNameResource, HRESOURCE *phClusterIPAddressResource, HRESOURCE *phClusterQuorumResource);", "ResUtilGetResourceName": "DWORD WINAPI ResUtilGetResourceName (HRESOURCE hResource, PWSTR pszResourceName, DWORD *pcchResourceNameInOut);", "ResUtilGetClusterRoleState": "CLUSTER_ROLE_STATE WINAPI ResUtilGetClusterRoleState (HCLUSTER hCluster, CLUSTER_ROLE eClusterRole);", "ClusterIsPathOnSharedVolume": "WINBOOL WINAPI ClusterIsPathOnSharedVolume (LPCWSTR lpszPathName);", "ClusterGetVolumePathName": "WINBOOL WINAPI ClusterGetVolumePathName (LPCWSTR lpszFileName, LPWSTR lpszVolumePathName, DWORD cchBufferLength);", "ClusterGetVolumeNameForVolumeMountPoint": "WINBOOL WINAPI ClusterGetVolumeNameForVolumeMountPoint (LPCWSTR lpszVolumeMountPoint, LPWSTR lpszVolumeName, DWORD cchBufferLength);", "ClusterPrepareSharedVolumeForBackup": "DWORD WINAPI ClusterPrepareSharedVolumeForBackup (LPCWSTR lpszFileName, LPWSTR lpszVolumePathName, LPDWORD lpcchVolumePathName, LPWSTR lpszVolumeName, LPDWORD lpcchVolumeName);", "ClusterClearBackupStateForSharedVolume": "DWORD WINAPI ClusterClearBackupStateForSharedVolume (LPCWSTR lpszVolumePathName);", "ResUtilSetResourceServiceStartParametersEx": "DWORD WINAPI ResUtilSetResourceServiceStartParametersEx (LPCWSTR pszServiceName, SC_HANDLE schSCMHandle, LPSC_HANDLE phService, DWORD dwDesiredAccess, PLOG_EVENT_ROUTINE pfnLogEvent, RESOURCE_HANDLE hResourceHandle);", "ResUtilEnumResourcesEx2": "DWORD WINAPI ResUtilEnumResourcesEx2 (HCLUSTER hCluster, HRESOURCE hSelf, LPCWSTR lpszResTypeName, LPRESOURCE_CALLBACK_EX pResCallBack, PVOID pParameter, DWORD dwDesiredAccess);", "ResUtilGetResourceDependencyEx": "HRESOURCE WINAPI ResUtilGetResourceDependencyEx (HANDLE hSelf, LPCWSTR lpszResourceType, DWORD dwDesiredAccess);", "ResUtilGetResourceDependencyByNameEx": "HRESOURCE WINAPI ResUtilGetResourceDependencyByNameEx (HCLUSTER hCluster, HANDLE hSelf, LPCWSTR lpszResourceType, WINBOOL bRecurse, DWORD dwDesiredAccess);", "ResUtilGetResourceDependencyByClassEx": "HRESOURCE WINAPI ResUtilGetResourceDependencyByClassEx (HCLUSTER hCluster, HANDLE hSelf, PCLUS_RESOURCE_CLASS_INFO prci, WINBOOL bRecurse, DWORD dwDesiredAccess);", "ResUtilGetResourceNameDependencyEx": "HRESOURCE WINAPI ResUtilGetResourceNameDependencyEx (LPCWSTR lpszResourceName, LPCWSTR lpszResourceType, DWORD dwDesiredAccess);", "ResUtilGetCoreClusterResourcesEx": "DWORD WINAPI ResUtilGetCoreClusterResourcesEx (HCLUSTER hClusterIn, HRESOURCE *phClusterNameResourceOut, HRESOURCE *phClusterQuorumResourceOut, DWORD dwDesiredAccess);", "ResUtilGetMultiSzValue": "FORCEINLINE DWORD WINAPI_INLINE ResUtilGetMultiSzValue (HKEY hkeyClusterKey, LPCWSTR pszValueName, LPWSTR *ppszOutValue, LPDWORD pcbOutValueSize) {", "DsRoleGetPrimaryDomainInformation": "DWORD WINAPI DsRoleGetPrimaryDomainInformation(LPCWSTR lpServer,DSROLE_PRIMARY_DOMAIN_INFO_LEVEL InfoLevel,PBYTE *Buffer);", "DsRoleFreeMemory": "VOID WINAPI DsRoleFreeMemory(PVOID Buffer);", "IWiaVideo_get_PreviewVisible_Proxy": "HRESULT WINAPI IWiaVideo_get_PreviewVisible_Proxy(IWiaVideo *This,WINBOOL *pbPreviewVisible);", "IWiaVideo_put_PreviewVisible_Proxy": "HRESULT WINAPI IWiaVideo_put_PreviewVisible_Proxy(IWiaVideo *This,WINBOOL bPreviewVisible);", "IWiaVideo_get_ImagesDirectory_Proxy": "HRESULT WINAPI IWiaVideo_get_ImagesDirectory_Proxy(IWiaVideo *This,BSTR *pbstrImageDirectory);", "IWiaVideo_put_ImagesDirectory_Proxy": "HRESULT WINAPI IWiaVideo_put_ImagesDirectory_Proxy(IWiaVideo *This,BSTR bstrImageDirectory);", "IWiaVideo_CreateVideoByWiaDevID_Proxy": "HRESULT WINAPI IWiaVideo_CreateVideoByWiaDevID_Proxy(IWiaVideo *This,BSTR bstrWiaDeviceID,HWND hwndParent,WINBOOL bStretchToFitParent,WINBOOL bAutoBeginPlayback);", "IWiaVideo_CreateVideoByDevNum_Proxy": "HRESULT WINAPI IWiaVideo_CreateVideoByDevNum_Proxy(IWiaVideo *This,UINT uiDeviceNumber,HWND hwndParent,WINBOOL bStretchToFitParent,WINBOOL bAutoBeginPlayback);", "IWiaVideo_CreateVideoByName_Proxy": "HRESULT WINAPI IWiaVideo_CreateVideoByName_Proxy(IWiaVideo *This,BSTR bstrFriendlyName,HWND hwndParent,WINBOOL bStretchToFitParent,WINBOOL bAutoBeginPlayback);", "IWiaVideo_DestroyVideo_Proxy": "HRESULT WINAPI IWiaVideo_DestroyVideo_Proxy(IWiaVideo *This);", "IWiaVideo_Play_Proxy": "HRESULT WINAPI IWiaVideo_Play_Proxy(IWiaVideo *This);", "IWiaVideo_Pause_Proxy": "HRESULT WINAPI IWiaVideo_Pause_Proxy(IWiaVideo *This);", "IWiaVideo_TakePicture_Proxy": "HRESULT WINAPI IWiaVideo_TakePicture_Proxy(IWiaVideo *This,BSTR *pbstrNewImageFilename);", "IWiaVideo_ResizeVideo_Proxy": "HRESULT WINAPI IWiaVideo_ResizeVideo_Proxy(IWiaVideo *This,WINBOOL bStretchToFitParent);", "IWiaVideo_GetCurrentState_Proxy": "HRESULT WINAPI IWiaVideo_GetCurrentState_Proxy(IWiaVideo *This,WIAVIDEO_STATE *pState);", "NetReplGetInfo": "NET_API_STATUS WINAPI NetReplGetInfo(LPCWSTR servername,DWORD level,LPBYTE *bufptr);", "NetReplSetInfo": "NET_API_STATUS WINAPI NetReplSetInfo(LPCWSTR servername,DWORD level,const LPBYTE buf,LPDWORD parm_err);", "NetReplExportDirAdd": "NET_API_STATUS WINAPI NetReplExportDirAdd(LPCWSTR servername,DWORD level,const LPBYTE buf,LPDWORD parm_err);", "NetReplExportDirDel": "NET_API_STATUS WINAPI NetReplExportDirDel(LPCWSTR servername,LPCWSTR dirname);", "NetReplExportDirEnum": "NET_API_STATUS WINAPI NetReplExportDirEnum(LPCWSTR servername,DWORD level,LPBYTE *bufptr,DWORD prefmaxlen,LPDWORD entriesread,LPDWORD totalentries,LPDWORD resumehandle);", "NetReplExportDirGetInfo": "NET_API_STATUS WINAPI NetReplExportDirGetInfo(LPCWSTR servername,LPCWSTR dirname,DWORD level,LPBYTE *bufptr);", "NetReplExportDirSetInfo": "NET_API_STATUS WINAPI NetReplExportDirSetInfo(LPCWSTR servername,LPCWSTR dirname,DWORD level,const LPBYTE buf,LPDWORD parm_err);", "NetReplExportDirLock": "NET_API_STATUS WINAPI NetReplExportDirLock(LPCWSTR servername,LPCWSTR dirname);", "NetReplExportDirUnlock": "NET_API_STATUS WINAPI NetReplExportDirUnlock(LPCWSTR servername,LPCWSTR dirname,DWORD unlockforce);", "NetReplImportDirAdd": "NET_API_STATUS WINAPI NetReplImportDirAdd(LPCWSTR servername,DWORD level,const LPBYTE buf,LPDWORD parm_err);", "NetReplImportDirDel": "NET_API_STATUS WINAPI NetReplImportDirDel(LPCWSTR servername,LPCWSTR dirname);", "NetReplImportDirEnum": "NET_API_STATUS WINAPI NetReplImportDirEnum(LPCWSTR servername,DWORD level,LPBYTE *bufptr,DWORD prefmaxlen,LPDWORD entriesread,LPDWORD totalentries,LPDWORD resumehandle);", "NetReplImportDirGetInfo": "NET_API_STATUS WINAPI NetReplImportDirGetInfo(LPCWSTR servername,LPCWSTR dirname,DWORD level,LPBYTE *bufptr);", "NetReplImportDirLock": "NET_API_STATUS WINAPI NetReplImportDirLock(LPCWSTR servername,LPCWSTR dirname);", "NetReplImportDirUnlock": "NET_API_STATUS WINAPI NetReplImportDirUnlock(LPCWSTR servername,LPCWSTR dirname,DWORD unlockforce);", "DebugBreak": "WINBASEAPI VOID WINAPI DebugBreak (VOID);", "IsDebuggerPresent": "WINBASEAPI WINBOOL WINAPI IsDebuggerPresent (VOID);", "OutputDebugStringA": "WINBASEAPI VOID WINAPI OutputDebugStringA (LPCSTR lpOutputString);", "OutputDebugStringW": "WINBASEAPI VOID WINAPI OutputDebugStringW (LPCWSTR lpOutputString);", "CheckRemoteDebuggerPresent": "WINBASEAPI WINBOOL WINAPI CheckRemoteDebuggerPresent (HANDLE hProcess, PBOOL pbDebuggerPresent);", "DXGetErrorString8A": "const char*     WINAPI DXGetErrorString8A(HRESULT hr);", "DXGetErrorString8W": "const WCHAR*    WINAPI DXGetErrorString8W(HRESULT hr);", "DXGetErrorDescription8A": "const char*    WINAPI DXGetErrorDescription8A(HRESULT hr);", "DXGetErrorDescription8W": "const WCHAR*   WINAPI DXGetErrorDescription8W(HRESULT hr);", "SnmpUtilDbgPrint": "VOID WINAPIV SnmpUtilDbgPrint(INT nLogLevel,LPSTR szFormat,...);", "IMLangStringBufW_GetStatus_Proxy": "HRESULT WINAPI IMLangStringBufW_GetStatus_Proxy(IMLangStringBufW *This,__LONG32 *plFlags,__LONG32 *pcchBuf);", "IMLangStringBufW_LockBuf_Proxy": "HRESULT WINAPI IMLangStringBufW_LockBuf_Proxy(IMLangStringBufW *This,__LONG32 cchOffset,__LONG32 cchMaxLock,WCHAR **ppszBuf,__LONG32 *pcchBuf);", "IMLangStringBufW_UnlockBuf_Proxy": "HRESULT WINAPI IMLangStringBufW_UnlockBuf_Proxy(IMLangStringBufW *This,const WCHAR *pszBuf,__LONG32 cchOffset,__LONG32 cchWrite);", "IMLangStringBufW_Insert_Proxy": "HRESULT WINAPI IMLangStringBufW_Insert_Proxy(IMLangStringBufW *This,__LONG32 cchOffset,__LONG32 cchMaxInsert,__LONG32 *pcchActual);", "IMLangStringBufW_Delete_Proxy": "HRESULT WINAPI IMLangStringBufW_Delete_Proxy(IMLangStringBufW *This,__LONG32 cchOffset,__LONG32 cchDelete);", "IMLangStringBufA_GetStatus_Proxy": "HRESULT WINAPI IMLangStringBufA_GetStatus_Proxy(IMLangStringBufA *This,__LONG32 *plFlags,__LONG32 *pcchBuf);", "IMLangStringBufA_LockBuf_Proxy": "HRESULT WINAPI IMLangStringBufA_LockBuf_Proxy(IMLangStringBufA *This,__LONG32 cchOffset,__LONG32 cchMaxLock,CHAR **ppszBuf,__LONG32 *pcchBuf);", "IMLangStringBufA_UnlockBuf_Proxy": "HRESULT WINAPI IMLangStringBufA_UnlockBuf_Proxy(IMLangStringBufA *This,const CHAR *pszBuf,__LONG32 cchOffset,__LONG32 cchWrite);", "IMLangStringBufA_Insert_Proxy": "HRESULT WINAPI IMLangStringBufA_Insert_Proxy(IMLangStringBufA *This,__LONG32 cchOffset,__LONG32 cchMaxInsert,__LONG32 *pcchActual);", "IMLangStringBufA_Delete_Proxy": "HRESULT WINAPI IMLangStringBufA_Delete_Proxy(IMLangStringBufA *This,__LONG32 cchOffset,__LONG32 cchDelete);", "IMLangString_Sync_Proxy": "HRESULT WINAPI IMLangString_Sync_Proxy(IMLangString *This,WINBOOL fNoAccess);", "IMLangString_GetLength_Proxy": "HRESULT WINAPI IMLangString_GetLength_Proxy(IMLangString *This,__LONG32 *plLen);", "IMLangString_SetMLStr_Proxy": "HRESULT WINAPI IMLangString_SetMLStr_Proxy(IMLangString *This,__LONG32 lDestPos,__LONG32 lDestLen,IUnknown *pSrcMLStr,__LONG32 lSrcPos,__LONG32 lSrcLen);", "IMLangString_GetMLStr_Proxy": "HRESULT WINAPI IMLangString_GetMLStr_Proxy(IMLangString *This,__LONG32 lSrcPos,__LONG32 lSrcLen,IUnknown *pUnkOuter,DWORD dwClsContext,const IID *piid,IUnknown **ppDestMLStr,__LONG32 *plDestPos,__LONG32 *plDestLen);", "IMLangStringWStr_SetWStr_Proxy": "HRESULT WINAPI IMLangStringWStr_SetWStr_Proxy(IMLangStringWStr *This,__LONG32 lDestPos,__LONG32 lDestLen,const WCHAR *pszSrc,__LONG32 cchSrc,__LONG32 *pcchActual,__LONG32 *plActualLen);", "IMLangStringWStr_SetStrBufW_Proxy": "HRESULT WINAPI IMLangStringWStr_SetStrBufW_Proxy(IMLangStringWStr *This,__LONG32 lDestPos,__LONG32 lDestLen,IMLangStringBufW *pSrcBuf,__LONG32 *pcchActual,__LONG32 *plActualLen);", "IMLangStringWStr_GetWStr_Proxy": "HRESULT WINAPI IMLangStringWStr_GetWStr_Proxy(IMLangStringWStr *This,__LONG32 lSrcPos,__LONG32 lSrcLen,WCHAR *pszDest,__LONG32 cchDest,__LONG32 *pcchActual,__LONG32 *plActualLen);", "IMLangStringWStr_GetStrBufW_Proxy": "HRESULT WINAPI IMLangStringWStr_GetStrBufW_Proxy(IMLangStringWStr *This,__LONG32 lSrcPos,__LONG32 lSrcMaxLen,IMLangStringBufW **ppDestBuf,__LONG32 *plDestLen);", "IMLangStringWStr_LockWStr_Proxy": "HRESULT WINAPI IMLangStringWStr_LockWStr_Proxy(IMLangStringWStr *This,__LONG32 lSrcPos,__LONG32 lSrcLen,__LONG32 lFlags,__LONG32 cchRequest,WCHAR **ppszDest,__LONG32 *pcchDest,__LONG32 *plDestLen);", "IMLangStringWStr_UnlockWStr_Proxy": "HRESULT WINAPI IMLangStringWStr_UnlockWStr_Proxy(IMLangStringWStr *This,const WCHAR *pszSrc,__LONG32 cchSrc,__LONG32 *pcchActual,__LONG32 *plActualLen);", "IMLangStringWStr_SetLocale_Proxy": "HRESULT WINAPI IMLangStringWStr_SetLocale_Proxy(IMLangStringWStr *This,__LONG32 lDestPos,__LONG32 lDestLen,LCID locale);", "IMLangStringWStr_GetLocale_Proxy": "HRESULT WINAPI IMLangStringWStr_GetLocale_Proxy(IMLangStringWStr *This,__LONG32 lSrcPos,__LONG32 lSrcMaxLen,LCID *plocale,__LONG32 *plLocalePos,__LONG32 *plLocaleLen);", "IMLangStringAStr_SetAStr_Proxy": "HRESULT WINAPI IMLangStringAStr_SetAStr_Proxy(IMLangStringAStr *This,__LONG32 lDestPos,__LONG32 lDestLen,UINT uCodePage,const CHAR *pszSrc,__LONG32 cchSrc,__LONG32 *pcchActual,__LONG32 *plActualLen);", "IMLangStringAStr_SetStrBufA_Proxy": "HRESULT WINAPI IMLangStringAStr_SetStrBufA_Proxy(IMLangStringAStr *This,__LONG32 lDestPos,__LONG32 lDestLen,UINT uCodePage,IMLangStringBufA *pSrcBuf,__LONG32 *pcchActual,__LONG32 *plActualLen);", "IMLangStringAStr_GetAStr_Proxy": "HRESULT WINAPI IMLangStringAStr_GetAStr_Proxy(IMLangStringAStr *This,__LONG32 lSrcPos,__LONG32 lSrcLen,UINT uCodePageIn,UINT *puCodePageOut,CHAR *pszDest,__LONG32 cchDest,__LONG32 *pcchActual,__LONG32 *plActualLen);", "IMLangStringAStr_GetStrBufA_Proxy": "HRESULT WINAPI IMLangStringAStr_GetStrBufA_Proxy(IMLangStringAStr *This,__LONG32 lSrcPos,__LONG32 lSrcMaxLen,UINT *puDestCodePage,IMLangStringBufA **ppDestBuf,__LONG32 *plDestLen);", "IMLangStringAStr_LockAStr_Proxy": "HRESULT WINAPI IMLangStringAStr_LockAStr_Proxy(IMLangStringAStr *This,__LONG32 lSrcPos,__LONG32 lSrcLen,__LONG32 lFlags,UINT uCodePageIn,__LONG32 cchRequest,UINT *puCodePageOut,CHAR **ppszDest,__LONG32 *pcchDest,__LONG32 *plDestLen);", "IMLangStringAStr_UnlockAStr_Proxy": "HRESULT WINAPI IMLangStringAStr_UnlockAStr_Proxy(IMLangStringAStr *This,const CHAR *pszSrc,__LONG32 cchSrc,__LONG32 *pcchActual,__LONG32 *plActualLen);", "IMLangStringAStr_SetLocale_Proxy": "HRESULT WINAPI IMLangStringAStr_SetLocale_Proxy(IMLangStringAStr *This,__LONG32 lDestPos,__LONG32 lDestLen,LCID locale);", "IMLangStringAStr_GetLocale_Proxy": "HRESULT WINAPI IMLangStringAStr_GetLocale_Proxy(IMLangStringAStr *This,__LONG32 lSrcPos,__LONG32 lSrcMaxLen,LCID *plocale,__LONG32 *plLocalePos,__LONG32 *plLocaleLen);", "IMLangLineBreakConsole_BreakLineML_Proxy": "HRESULT WINAPI IMLangLineBreakConsole_BreakLineML_Proxy(IMLangLineBreakConsole *This,IMLangString *pSrcMLStr,__LONG32 lSrcPos,__LONG32 lSrcLen,__LONG32 cMinColumns,__LONG32 cMaxColumns,__LONG32 *plLineLen,__LONG32 *plSkipLen);", "IMLangLineBreakConsole_BreakLineW_Proxy": "HRESULT WINAPI IMLangLineBreakConsole_BreakLineW_Proxy(IMLangLineBreakConsole *This,LCID locale,const WCHAR *pszSrc,__LONG32 cchSrc,__LONG32 cMaxColumns,__LONG32 *pcchLine,__LONG32 *pcchSkip);", "IMLangLineBreakConsole_BreakLineA_Proxy": "HRESULT WINAPI IMLangLineBreakConsole_BreakLineA_Proxy(IMLangLineBreakConsole *This,LCID locale,UINT uCodePage,const CHAR *pszSrc,__LONG32 cchSrc,__LONG32 cMaxColumns,__LONG32 *pcchLine,__LONG32 *pcchSkip);", "IEnumCodePage_Clone_Proxy": "HRESULT WINAPI IEnumCodePage_Clone_Proxy(IEnumCodePage *This,IEnumCodePage **ppEnum);", "IEnumCodePage_Next_Proxy": "HRESULT WINAPI IEnumCodePage_Next_Proxy(IEnumCodePage *This,ULONG celt,PMIMECPINFO rgelt,ULONG *pceltFetched);", "IEnumCodePage_Reset_Proxy": "HRESULT WINAPI IEnumCodePage_Reset_Proxy(IEnumCodePage *This);", "IEnumCodePage_Skip_Proxy": "HRESULT WINAPI IEnumCodePage_Skip_Proxy(IEnumCodePage *This,ULONG celt);", "IEnumRfc1766_Clone_Proxy": "HRESULT WINAPI IEnumRfc1766_Clone_Proxy(IEnumRfc1766 *This,IEnumRfc1766 **ppEnum);", "IEnumRfc1766_Next_Proxy": "HRESULT WINAPI IEnumRfc1766_Next_Proxy(IEnumRfc1766 *This,ULONG celt,PRFC1766INFO rgelt,ULONG *pceltFetched);", "IEnumRfc1766_Reset_Proxy": "HRESULT WINAPI IEnumRfc1766_Reset_Proxy(IEnumRfc1766 *This);", "IEnumRfc1766_Skip_Proxy": "HRESULT WINAPI IEnumRfc1766_Skip_Proxy(IEnumRfc1766 *This,ULONG celt);", "IEnumScript_Clone_Proxy": "HRESULT WINAPI IEnumScript_Clone_Proxy(IEnumScript *This,IEnumScript **ppEnum);", "IEnumScript_Next_Proxy": "HRESULT WINAPI IEnumScript_Next_Proxy(IEnumScript *This,ULONG celt,PSCRIPTINFO rgelt,ULONG *pceltFetched);", "IEnumScript_Reset_Proxy": "HRESULT WINAPI IEnumScript_Reset_Proxy(IEnumScript *This);", "IEnumScript_Skip_Proxy": "HRESULT WINAPI IEnumScript_Skip_Proxy(IEnumScript *This,ULONG celt);", "IMLangConvertCharset_Initialize_Proxy": "HRESULT WINAPI IMLangConvertCharset_Initialize_Proxy(IMLangConvertCharset *This,UINT uiSrcCodePage,UINT uiDstCodePage,DWORD dwProperty);", "IMLangConvertCharset_GetSourceCodePage_Proxy": "HRESULT WINAPI IMLangConvertCharset_GetSourceCodePage_Proxy(IMLangConvertCharset *This,UINT *puiSrcCodePage);", "IMLangConvertCharset_GetDestinationCodePage_Proxy": "HRESULT WINAPI IMLangConvertCharset_GetDestinationCodePage_Proxy(IMLangConvertCharset *This,UINT *puiDstCodePage);", "IMLangConvertCharset_GetProperty_Proxy": "HRESULT WINAPI IMLangConvertCharset_GetProperty_Proxy(IMLangConvertCharset *This,DWORD *pdwProperty);", "IMLangConvertCharset_DoConversion_Proxy": "HRESULT WINAPI IMLangConvertCharset_DoConversion_Proxy(IMLangConvertCharset *This,BYTE *pSrcStr,UINT *pcSrcSize,BYTE *pDstStr,UINT *pcDstSize);", "IMLangConvertCharset_DoConversionToUnicode_Proxy": "HRESULT WINAPI IMLangConvertCharset_DoConversionToUnicode_Proxy(IMLangConvertCharset *This,CHAR *pSrcStr,UINT *pcSrcSize,WCHAR *pDstStr,UINT *pcDstSize);", "IMLangConvertCharset_DoConversionFromUnicode_Proxy": "HRESULT WINAPI IMLangConvertCharset_DoConversionFromUnicode_Proxy(IMLangConvertCharset *This,WCHAR *pSrcStr,UINT *pcSrcSize,CHAR *pDstStr,UINT *pcDstSize);", "IMultiLanguage_GetNumberOfCodePageInfo_Proxy": "HRESULT WINAPI IMultiLanguage_GetNumberOfCodePageInfo_Proxy(IMultiLanguage *This,UINT *pcCodePage);", "IMultiLanguage_GetCodePageInfo_Proxy": "HRESULT WINAPI IMultiLanguage_GetCodePageInfo_Proxy(IMultiLanguage *This,UINT uiCodePage,PMIMECPINFO pCodePageInfo);", "IMultiLanguage_GetFamilyCodePage_Proxy": "HRESULT WINAPI IMultiLanguage_GetFamilyCodePage_Proxy(IMultiLanguage *This,UINT uiCodePage,UINT *puiFamilyCodePage);", "IMultiLanguage_EnumCodePages_Proxy": "HRESULT WINAPI IMultiLanguage_EnumCodePages_Proxy(IMultiLanguage *This,DWORD grfFlags,IEnumCodePage **ppEnumCodePage);", "IMultiLanguage_GetCharsetInfo_Proxy": "HRESULT WINAPI IMultiLanguage_GetCharsetInfo_Proxy(IMultiLanguage *This,BSTR Charset,PMIMECSETINFO pCharsetInfo);", "IMultiLanguage_IsConvertible_Proxy": "HRESULT WINAPI IMultiLanguage_IsConvertible_Proxy(IMultiLanguage *This,DWORD dwSrcEncoding,DWORD dwDstEncoding);", "IMultiLanguage_ConvertString_Proxy": "HRESULT WINAPI IMultiLanguage_ConvertString_Proxy(IMultiLanguage *This,DWORD *pdwMode,DWORD dwSrcEncoding,DWORD dwDstEncoding,BYTE *pSrcStr,UINT *pcSrcSize,BYTE *pDstStr,UINT *pcDstSize);", "IMultiLanguage_ConvertStringToUnicode_Proxy": "HRESULT WINAPI IMultiLanguage_ConvertStringToUnicode_Proxy(IMultiLanguage *This,DWORD *pdwMode,DWORD dwEncoding,CHAR *pSrcStr,UINT *pcSrcSize,WCHAR *pDstStr,UINT *pcDstSize);", "IMultiLanguage_ConvertStringFromUnicode_Proxy": "HRESULT WINAPI IMultiLanguage_ConvertStringFromUnicode_Proxy(IMultiLanguage *This,DWORD *pdwMode,DWORD dwEncoding,WCHAR *pSrcStr,UINT *pcSrcSize,CHAR *pDstStr,UINT *pcDstSize);", "IMultiLanguage_ConvertStringReset_Proxy": "HRESULT WINAPI IMultiLanguage_ConvertStringReset_Proxy(IMultiLanguage *This);", "IMultiLanguage_GetRfc1766FromLcid_Proxy": "HRESULT WINAPI IMultiLanguage_GetRfc1766FromLcid_Proxy(IMultiLanguage *This,LCID Locale,BSTR *pbstrRfc1766);", "IMultiLanguage_GetLcidFromRfc1766_Proxy": "HRESULT WINAPI IMultiLanguage_GetLcidFromRfc1766_Proxy(IMultiLanguage *This,LCID *pLocale,BSTR bstrRfc1766);", "IMultiLanguage_EnumRfc1766_Proxy": "HRESULT WINAPI IMultiLanguage_EnumRfc1766_Proxy(IMultiLanguage *This,IEnumRfc1766 **ppEnumRfc1766);", "IMultiLanguage_GetRfc1766Info_Proxy": "HRESULT WINAPI IMultiLanguage_GetRfc1766Info_Proxy(IMultiLanguage *This,LCID Locale,PRFC1766INFO pRfc1766Info);", "IMultiLanguage_CreateConvertCharset_Proxy": "HRESULT WINAPI IMultiLanguage_CreateConvertCharset_Proxy(IMultiLanguage *This,UINT uiSrcCodePage,UINT uiDstCodePage,DWORD dwProperty,IMLangConvertCharset **ppMLangConvertCharset);", "IMultiLanguage2_GetNumberOfCodePageInfo_Proxy": "HRESULT WINAPI IMultiLanguage2_GetNumberOfCodePageInfo_Proxy(IMultiLanguage2 *This,UINT *pcCodePage);", "IMultiLanguage2_GetCodePageInfo_Proxy": "HRESULT WINAPI IMultiLanguage2_GetCodePageInfo_Proxy(IMultiLanguage2 *This,UINT uiCodePage,LANGID LangId,PMIMECPINFO pCodePageInfo);", "IMultiLanguage2_GetFamilyCodePage_Proxy": "HRESULT WINAPI IMultiLanguage2_GetFamilyCodePage_Proxy(IMultiLanguage2 *This,UINT uiCodePage,UINT *puiFamilyCodePage);", "IMultiLanguage2_EnumCodePages_Proxy": "HRESULT WINAPI IMultiLanguage2_EnumCodePages_Proxy(IMultiLanguage2 *This,DWORD grfFlags,LANGID LangId,IEnumCodePage **ppEnumCodePage);", "IMultiLanguage2_GetCharsetInfo_Proxy": "HRESULT WINAPI IMultiLanguage2_GetCharsetInfo_Proxy(IMultiLanguage2 *This,BSTR Charset,PMIMECSETINFO pCharsetInfo);", "IMultiLanguage2_IsConvertible_Proxy": "HRESULT WINAPI IMultiLanguage2_IsConvertible_Proxy(IMultiLanguage2 *This,DWORD dwSrcEncoding,DWORD dwDstEncoding);", "IMultiLanguage2_ConvertString_Proxy": "HRESULT WINAPI IMultiLanguage2_ConvertString_Proxy(IMultiLanguage2 *This,DWORD *pdwMode,DWORD dwSrcEncoding,DWORD dwDstEncoding,BYTE *pSrcStr,UINT *pcSrcSize,BYTE *pDstStr,UINT *pcDstSize);", "IMultiLanguage2_ConvertStringToUnicode_Proxy": "HRESULT WINAPI IMultiLanguage2_ConvertStringToUnicode_Proxy(IMultiLanguage2 *This,DWORD *pdwMode,DWORD dwEncoding,CHAR *pSrcStr,UINT *pcSrcSize,WCHAR *pDstStr,UINT *pcDstSize);", "IMultiLanguage2_ConvertStringFromUnicode_Proxy": "HRESULT WINAPI IMultiLanguage2_ConvertStringFromUnicode_Proxy(IMultiLanguage2 *This,DWORD *pdwMode,DWORD dwEncoding,WCHAR *pSrcStr,UINT *pcSrcSize,CHAR *pDstStr,UINT *pcDstSize);", "IMultiLanguage2_ConvertStringReset_Proxy": "HRESULT WINAPI IMultiLanguage2_ConvertStringReset_Proxy(IMultiLanguage2 *This);", "IMultiLanguage2_GetRfc1766FromLcid_Proxy": "HRESULT WINAPI IMultiLanguage2_GetRfc1766FromLcid_Proxy(IMultiLanguage2 *This,LCID Locale,BSTR *pbstrRfc1766);", "IMultiLanguage2_GetLcidFromRfc1766_Proxy": "HRESULT WINAPI IMultiLanguage2_GetLcidFromRfc1766_Proxy(IMultiLanguage2 *This,LCID *pLocale,BSTR bstrRfc1766);", "IMultiLanguage2_EnumRfc1766_Proxy": "HRESULT WINAPI IMultiLanguage2_EnumRfc1766_Proxy(IMultiLanguage2 *This,LANGID LangId,IEnumRfc1766 **ppEnumRfc1766);", "IMultiLanguage2_GetRfc1766Info_Proxy": "HRESULT WINAPI IMultiLanguage2_GetRfc1766Info_Proxy(IMultiLanguage2 *This,LCID Locale,LANGID LangId,PRFC1766INFO pRfc1766Info);", "IMultiLanguage2_CreateConvertCharset_Proxy": "HRESULT WINAPI IMultiLanguage2_CreateConvertCharset_Proxy(IMultiLanguage2 *This,UINT uiSrcCodePage,UINT uiDstCodePage,DWORD dwProperty,IMLangConvertCharset **ppMLangConvertCharset);", "IMultiLanguage2_ConvertStringInIStream_Proxy": "HRESULT WINAPI IMultiLanguage2_ConvertStringInIStream_Proxy(IMultiLanguage2 *This,DWORD *pdwMode,DWORD dwFlag,WCHAR *lpFallBack,DWORD dwSrcEncoding,DWORD dwDstEncoding,IStream *pstmIn,IStream *pstmOut);", "IMultiLanguage2_ConvertStringToUnicodeEx_Proxy": "HRESULT WINAPI IMultiLanguage2_ConvertStringToUnicodeEx_Proxy(IMultiLanguage2 *This,DWORD *pdwMode,DWORD dwEncoding,CHAR *pSrcStr,UINT *pcSrcSize,WCHAR *pDstStr,UINT *pcDstSize,DWORD dwFlag,WCHAR *lpFallBack);", "IMultiLanguage2_ConvertStringFromUnicodeEx_Proxy": "HRESULT WINAPI IMultiLanguage2_ConvertStringFromUnicodeEx_Proxy(IMultiLanguage2 *This,DWORD *pdwMode,DWORD dwEncoding,WCHAR *pSrcStr,UINT *pcSrcSize,CHAR *pDstStr,UINT *pcDstSize,DWORD dwFlag,WCHAR *lpFallBack);", "IMultiLanguage2_DetectCodepageInIStream_Proxy": "HRESULT WINAPI IMultiLanguage2_DetectCodepageInIStream_Proxy(IMultiLanguage2 *This,DWORD dwFlag,DWORD dwPrefWinCodePage,IStream *pstmIn,DetectEncodingInfo *lpEncoding,INT *pnScores);", "IMultiLanguage2_DetectInputCodepage_Proxy": "HRESULT WINAPI IMultiLanguage2_DetectInputCodepage_Proxy(IMultiLanguage2 *This,DWORD dwFlag,DWORD dwPrefWinCodePage,CHAR *pSrcStr,INT *pcSrcSize,DetectEncodingInfo *lpEncoding,INT *pnScores);", "IMultiLanguage2_ValidateCodePage_Proxy": "HRESULT WINAPI IMultiLanguage2_ValidateCodePage_Proxy(IMultiLanguage2 *This,UINT uiCodePage,HWND hwnd);", "IMultiLanguage2_GetCodePageDescription_Proxy": "HRESULT WINAPI IMultiLanguage2_GetCodePageDescription_Proxy(IMultiLanguage2 *This,UINT uiCodePage,LCID lcid,LPWSTR lpWideCharStr,int cchWideChar);", "IMultiLanguage2_IsCodePageInstallable_Proxy": "HRESULT WINAPI IMultiLanguage2_IsCodePageInstallable_Proxy(IMultiLanguage2 *This,UINT uiCodePage);", "IMultiLanguage2_SetMimeDBSource_Proxy": "HRESULT WINAPI IMultiLanguage2_SetMimeDBSource_Proxy(IMultiLanguage2 *This,MIMECONTF dwSource);", "IMultiLanguage2_GetNumberOfScripts_Proxy": "HRESULT WINAPI IMultiLanguage2_GetNumberOfScripts_Proxy(IMultiLanguage2 *This,UINT *pnScripts);", "IMultiLanguage2_EnumScripts_Proxy": "HRESULT WINAPI IMultiLanguage2_EnumScripts_Proxy(IMultiLanguage2 *This,DWORD dwFlags,LANGID LangId,IEnumScript **ppEnumScript);", "IMultiLanguage2_ValidateCodePageEx_Proxy": "HRESULT WINAPI IMultiLanguage2_ValidateCodePageEx_Proxy(IMultiLanguage2 *This,UINT uiCodePage,HWND hwnd,DWORD dwfIODControl);", "IMLangCodePages_GetCharCodePages_Proxy": "HRESULT WINAPI IMLangCodePages_GetCharCodePages_Proxy(IMLangCodePages *This,WCHAR chSrc,DWORD *pdwCodePages);", "IMLangCodePages_GetStrCodePages_Proxy": "HRESULT WINAPI IMLangCodePages_GetStrCodePages_Proxy(IMLangCodePages *This,const WCHAR *pszSrc,__LONG32 cchSrc,DWORD dwPriorityCodePages,DWORD *pdwCodePages,__LONG32 *pcchCodePages);", "IMLangCodePages_CodePageToCodePages_Proxy": "HRESULT WINAPI IMLangCodePages_CodePageToCodePages_Proxy(IMLangCodePages *This,UINT uCodePage,DWORD *pdwCodePages);", "IMLangCodePages_CodePagesToCodePage_Proxy": "HRESULT WINAPI IMLangCodePages_CodePagesToCodePage_Proxy(IMLangCodePages *This,DWORD dwCodePages,UINT uDefaultCodePage,UINT *puCodePage);", "IMLangFontLink_GetFontCodePages_Proxy": "HRESULT WINAPI IMLangFontLink_GetFontCodePages_Proxy(IMLangFontLink *This,HDC hDC,HFONT hFont,DWORD *pdwCodePages);", "IMLangFontLink_MapFont_Proxy": "HRESULT WINAPI IMLangFontLink_MapFont_Proxy(IMLangFontLink *This,HDC hDC,DWORD dwCodePages,HFONT hSrcFont,HFONT *phDestFont);", "IMLangFontLink_ReleaseFont_Proxy": "HRESULT WINAPI IMLangFontLink_ReleaseFont_Proxy(IMLangFontLink *This,HFONT hFont);", "IMLangFontLink_ResetFontMapping_Proxy": "HRESULT WINAPI IMLangFontLink_ResetFontMapping_Proxy(IMLangFontLink *This);", "IMLangFontLink2_GetFontCodePages_Proxy": "HRESULT WINAPI IMLangFontLink2_GetFontCodePages_Proxy(IMLangFontLink2 *This,HDC hDC,HFONT hFont,DWORD *pdwCodePages);", "IMLangFontLink2_ReleaseFont_Proxy": "HRESULT WINAPI IMLangFontLink2_ReleaseFont_Proxy(IMLangFontLink2 *This,HFONT hFont);", "IMLangFontLink2_ResetFontMapping_Proxy": "HRESULT WINAPI IMLangFontLink2_ResetFontMapping_Proxy(IMLangFontLink2 *This);", "IMLangFontLink2_MapFont_Proxy": "HRESULT WINAPI IMLangFontLink2_MapFont_Proxy(IMLangFontLink2 *This,HDC hDC,DWORD dwCodePages,WCHAR chSrc,HFONT *pFont);", "IMLangFontLink2_GetFontUnicodeRanges_Proxy": "HRESULT WINAPI IMLangFontLink2_GetFontUnicodeRanges_Proxy(IMLangFontLink2 *This,HDC hDC,UINT *puiRanges,UNICODERANGE *pUranges);", "IMLangFontLink2_GetScriptFontInfo_Proxy": "HRESULT WINAPI IMLangFontLink2_GetScriptFontInfo_Proxy(IMLangFontLink2 *This,SCRIPT_ID sid,DWORD dwFlags,UINT *puiFonts,SCRIPTFONTINFO *pScriptFont);", "IMLangFontLink2_CodePageToScriptID_Proxy": "HRESULT WINAPI IMLangFontLink2_CodePageToScriptID_Proxy(IMLangFontLink2 *This,UINT uiCodePage,SCRIPT_ID *pSid);", "IMultiLanguage3_DetectOutboundCodePage_Proxy": "HRESULT WINAPI IMultiLanguage3_DetectOutboundCodePage_Proxy(IMultiLanguage3 *This,DWORD dwFlags,LPCWSTR lpWideCharStr,UINT cchWideChar,UINT *puiPreferredCodePages,UINT nPreferredCodePages,UINT *puiDetectedCodePages,UINT *pnDetectedCodePages,WCHAR *lpSpecialChar);", "IMultiLanguage3_DetectOutboundCodePageInIStream_Proxy": "HRESULT WINAPI IMultiLanguage3_DetectOutboundCodePageInIStream_Proxy(IMultiLanguage3 *This,DWORD dwFlags,IStream *pStrIn,UINT *puiPreferredCodePages,UINT nPreferredCodePages,UINT *puiDetectedCodePages,UINT *pnDetectedCodePages,WCHAR *lpSpecialChar);", "DegaussMonitor": "_BOOL WINAPI DegaussMonitor (HANDLE hMonitor);", "GetMonitorBrightness": "_BOOL WINAPI GetMonitorBrightness (HANDLE hMonitor, LPDWORD pdwMinimumBrightness, LPDWORD pdwCurrentBrightness, LPDWORD pdwMaximumBrightness);", "GetMonitorCapabilities": "_BOOL WINAPI GetMonitorCapabilities (HANDLE hMonitor, LPDWORD pdwMonitorCapabilities, LPDWORD pdwSupportedColorTemperatures);", "GetMonitorColorTemperature": "_BOOL WINAPI GetMonitorColorTemperature (HANDLE hMonitor, LPMC_COLOR_TEMPERATURE pctCurrentColorTemperature);", "GetMonitorContrast": "_BOOL WINAPI GetMonitorContrast (HANDLE hMonitor, LPDWORD pdwMinimumContrast, LPDWORD pdwCurrentContrast, LPDWORD pdwMaximumContrast);", "GetMonitorDisplayAreaSize": "_BOOL WINAPI GetMonitorDisplayAreaSize (HANDLE hMonitor, MC_SIZE_TYPE stSizeType, LPDWORD pdwMinimumWidthOrHeight, LPDWORD pdwCurrentWidthOrHeight, LPDWORD pdwMaximumWidthOrHeight);", "GetMonitorDisplayAreaPosition": "_BOOL WINAPI GetMonitorDisplayAreaPosition (HANDLE hMonitor, MC_POSITION_TYPE ptPositionType, LPDWORD pdwMinimumPosition, LPDWORD pdwCurrentPosition, LPDWORD pdwMaximumPosition);", "GetMonitorRedGreenOrBlueDrive": "_BOOL WINAPI GetMonitorRedGreenOrBlueDrive (HANDLE hMonitor, MC_DRIVE_TYPE dtDriveType, LPDWORD pdwMinimumDrive, LPDWORD pdwCurrentDrive, LPDWORD pdwMaximumDrive);", "GetMonitorRedGreenOrBlueGain": "_BOOL WINAPI GetMonitorRedGreenOrBlueGain (HANDLE hMonitor, MC_GAIN_TYPE gtGainType, LPDWORD pdwMinimumGain, LPDWORD pdwCurrentGain, LPDWORD pdwMaximumGain);", "GetMonitorTechnologyType": "_BOOL WINAPI GetMonitorTechnologyType (HANDLE hMonitor, LPMC_DISPLAY_TECHNOLOGY_TYPE pdtyDisplayTechnologyType);", "RestoreMonitorFactoryColorDefaults": "_BOOL WINAPI RestoreMonitorFactoryColorDefaults (HANDLE hMonitor);", "RestoreMonitorFactoryDefaults": "_BOOL WINAPI RestoreMonitorFactoryDefaults (HANDLE hMonitor);", "SaveCurrentMonitorSettings": "_BOOL WINAPI SaveCurrentMonitorSettings (HANDLE hMonitor);", "SetMonitorBrightness": "_BOOL WINAPI SetMonitorBrightness (HANDLE hMonitor, DWORD dwNewBrightness);", "SetMonitorColorTemperature": "_BOOL WINAPI SetMonitorColorTemperature (HANDLE hMonitor, MC_COLOR_TEMPERATURE ctCurrentColorTemperature);", "SetMonitorContrast": "_BOOL WINAPI SetMonitorContrast (HANDLE hMonitor, DWORD dwNewContrast);", "SetMonitorDisplayAreaSize": "_BOOL WINAPI SetMonitorDisplayAreaSize (HANDLE hMonitor, MC_SIZE_TYPE stSizeType, DWORD dwNewDisplayAreaWidthOrHeight);", "SetMonitorDisplayAreaPosition": "_BOOL WINAPI SetMonitorDisplayAreaPosition (HANDLE hMonitor, MC_POSITION_TYPE ptPositionType, DWORD dwNewPosition);", "SetMonitorRedGreenOrBlueDrive": "_BOOL WINAPI SetMonitorRedGreenOrBlueDrive (HANDLE hMonitor, MC_DRIVE_TYPE dtDriveType, DWORD dwNewDrive);", "SetMonitorRedGreenOrBlueGain": "_BOOL WINAPI SetMonitorRedGreenOrBlueGain (HANDLE hMonitor, MC_GAIN_TYPE gtGainType, DWORD dwNewGain);", "OpenProcess": "WINBASEAPI HANDLE WINAPI OpenProcess (DWORD dwDesiredAccess, WINBOOL bInheritHandle, DWORD dwProcessId);", "QueueUserAPC": "WINBASEAPI DWORD WINAPI QueueUserAPC (PAPCFUNC pfnAPC, HANDLE hThread, ULONG_PTR dwData);", "GetProcessTimes": "WINBASEAPI WINBOOL WINAPI GetProcessTimes (HANDLE hProcess, LPFILETIME lpCreationTime, LPFILETIME lpExitTime, LPFILETIME lpKernelTime, LPFILETIME lpUserTime);", "ExitProcess": "WINBASEAPI DECLSPEC_NORETURN VOID WINAPI ExitProcess (UINT uExitCode);", "GetExitCodeProcess": "WINBASEAPI WINBOOL WINAPI GetExitCodeProcess (HANDLE hProcess, LPDWORD lpExitCode);", "SwitchToThread": "WINBASEAPI WINBOOL WINAPI SwitchToThread (VOID);", "OpenThread": "WINBASEAPI HANDLE WINAPI OpenThread (DWORD dwDesiredAccess, WINBOOL bInheritHandle, DWORD dwThreadId);", "SetThreadPriorityBoost": "WINBASEAPI WINBOOL WINAPI SetThreadPriorityBoost (HANDLE hThread, WINBOOL bDisablePriorityBoost);", "GetThreadPriorityBoost": "WINBASEAPI WINBOOL WINAPI GetThreadPriorityBoost (HANDLE hThread, PBOOL pDisablePriorityBoost);", "OpenProcessToken": "WINADVAPI WINBOOL WINAPI OpenProcessToken (HANDLE ProcessHandle, DWORD DesiredAccess, PHANDLE TokenHandle);", "OpenThreadToken": "WINADVAPI WINBOOL WINAPI OpenThreadToken (HANDLE ThreadHandle, DWORD DesiredAccess, WINBOOL OpenAsSelf, PHANDLE TokenHandle);", "SetPriorityClass": "WINBASEAPI WINBOOL WINAPI SetPriorityClass (HANDLE hProcess, DWORD dwPriorityClass);", "GetPriorityClass": "WINBASEAPI DWORD WINAPI GetPriorityClass (HANDLE hProcess);", "GetProcessId": "WINBASEAPI DWORD WINAPI GetProcessId (HANDLE Process);", "GetThreadId": "WINBASEAPI DWORD WINAPI GetThreadId (HANDLE Thread);", "GetThreadContext": "WINBASEAPI WINBOOL WINAPI GetThreadContext (HANDLE hThread, LPCONTEXT lpContext);", "FlushInstructionCache": "WINBASEAPI WINBOOL WINAPI FlushInstructionCache (HANDLE hProcess, LPCVOID lpBaseAddress, SIZE_T dwSize);", "GetThreadTimes": "WINBASEAPI WINBOOL WINAPI GetThreadTimes (HANDLE hThread, LPFILETIME lpCreationTime, LPFILETIME lpExitTime, LPFILETIME lpKernelTime, LPFILETIME lpUserTime);", "GetCurrentProcessorNumber": "WINBASEAPI DWORD WINAPI GetCurrentProcessorNumber (VOID);", "TerminateProcess": "WINBASEAPI WINBOOL WINAPI TerminateProcess (HANDLE hProcess, UINT uExitCode);", "GetProcessInformation": "WINBASEAPI WINBOOL WINAPI GetProcessInformation (HANDLE hProcess, PROCESS_INFORMATION_CLASS ProcessInformationClass, LPVOID ProcessInformation, DWORD ProcessInformationSize);", "SetProcessInformation": "WINBASEAPI WINBOOL WINAPI SetProcessInformation (HANDLE hProcess, PROCESS_INFORMATION_CLASS ProcessInformationClass, LPVOID ProcessInformation, DWORD ProcessInformationSize);", "GetSystemCpuSetInformation": "WINBASEAPI WINBOOL WINAPI GetSystemCpuSetInformation (PSYSTEM_CPU_SET_INFORMATION Information, ULONG BufferLength, PULONG ReturnedLength, HANDLE Process, ULONG Flags);", "GetProcessDefaultCpuSets": "WINBASEAPI WINBOOL WINAPI GetProcessDefaultCpuSets (HANDLE Process, PULONG CpuSetIds, ULONG CpuSetIdCount, PULONG RequiredIdCount);", "SetProcessDefaultCpuSets": "WINBASEAPI WINBOOL WINAPI SetProcessDefaultCpuSets (HANDLE Process, const ULONG *CpuSetIds, ULONG CpuSetIdCount);", "GetThreadSelectedCpuSets": "WINBASEAPI WINBOOL WINAPI GetThreadSelectedCpuSets (HANDLE Thread, PULONG CpuSetIds, ULONG CpuSetIdCount, PULONG RequiredIdCount);", "SetThreadSelectedCpuSets": "WINBASEAPI WINBOOL WINAPI SetThreadSelectedCpuSets (HANDLE Thread, const ULONG *CpuSetIds, ULONG CpuSetIdCount);", "GetMachineTypeAttributes": "HRESULT WINAPI GetMachineTypeAttributes (USHORT Machine, MACHINE_ATTRIBUTES *MachineTypeAttributes);", "GetProcessDefaultCpuSetMasks": "WINBASEAPI WINBOOL WINAPI GetProcessDefaultCpuSetMasks (HANDLE Process, PGROUP_AFFINITY CpuSetMasks, USHORT CpuSetMaskCount, PUSHORT RequiredMaskCount);", "SetProcessDefaultCpuSetMasks": "WINBASEAPI WINBOOL WINAPI SetProcessDefaultCpuSetMasks (HANDLE Process, PGROUP_AFFINITY CpuSetMasks, USHORT CpuSetMaskCount);", "GetThreadSelectedCpuSetMasks": "WINBASEAPI WINBOOL WINAPI GetThreadSelectedCpuSetMasks (HANDLE Thread, PGROUP_AFFINITY CpuSetMasks, USHORT CpuSetMaskCount, PUSHORT RequiredMaskCount);", "SetThreadSelectedCpuSetMasks": "WINBASEAPI WINBOOL WINAPI SetThreadSelectedCpuSetMasks (HANDLE Thread, PGROUP_AFFINITY CpuSetMasks, USHORT CpuSetMaskCount);", "CreateRemoteThread": "WINBASEAPI HANDLE WINAPI CreateRemoteThread (HANDLE hProcess, LPSECURITY_ATTRIBUTES lpThreadAttributes, SIZE_T dwStackSize, LPTHREAD_START_ROUTINE lpStartAddress, LPVOID lpParameter, DWORD dwCreationFlags, LPDWORD lpThreadId);", "TerminateThread": "WINBASEAPI WINBOOL WINAPI TerminateThread (HANDLE hThread, DWORD dwExitCode);", "SetProcessShutdownParameters": "WINBASEAPI WINBOOL WINAPI SetProcessShutdownParameters (DWORD dwLevel, DWORD dwFlags);", "GetProcessVersion": "WINBASEAPI DWORD WINAPI GetProcessVersion (DWORD ProcessId);", "GetStartupInfoW": "WINBASEAPI VOID WINAPI GetStartupInfoW (LPSTARTUPINFOW lpStartupInfo);", "SetThreadStackGuarantee": "WINBASEAPI WINBOOL WINAPI SetThreadStackGuarantee (PULONG StackSizeInBytes);", "ProcessIdToSessionId": "WINBASEAPI WINBOOL WINAPI ProcessIdToSessionId (DWORD dwProcessId, DWORD *pSessionId);", "CreateRemoteThreadEx": "WINBASEAPI HANDLE WINAPI CreateRemoteThreadEx (HANDLE hProcess, LPSECURITY_ATTRIBUTES lpThreadAttributes, SIZE_T dwStackSize, LPTHREAD_START_ROUTINE lpStartAddress, LPVOID lpParameter, DWORD dwCreationFlags, LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList, LPDWORD lpThreadId);", "SetThreadContext": "WINBASEAPI WINBOOL WINAPI SetThreadContext (HANDLE hThread, CONST CONTEXT *lpContext);", "GetProcessHandleCount": "WINBASEAPI WINBOOL WINAPI GetProcessHandleCount (HANDLE hProcess, PDWORD pdwHandleCount);", "CreateProcessAsUserW": "WINADVAPI WINBOOL WINAPI CreateProcessAsUserW (HANDLE hToken, LPCWSTR lpApplicationName, LPWSTR lpCommandLine, LPSECURITY_ATTRIBUTES lpProcessAttributes, LPSECURITY_ATTRIBUTES lpThreadAttributes, WINBOOL bInheritHandles, DWORD dwCreationFlags, LPVOID lpEnvironment, LPCWSTR lpCurrentDirectory, LPSTARTUPINFOW lpStartupInfo, LPPROCESS_INFORMATION lpProcessInformation);", "GetProcessIdOfThread": "WINBASEAPI DWORD WINAPI GetProcessIdOfThread (HANDLE Thread);", "InitializeProcThreadAttributeList": "WINBASEAPI WINBOOL WINAPI InitializeProcThreadAttributeList (LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList, DWORD dwAttributeCount, DWORD dwFlags, PSIZE_T lpSize);", "DeleteProcThreadAttributeList": "WINBASEAPI VOID WINAPI DeleteProcThreadAttributeList (LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList);", "SetProcessAffinityUpdateMode": "WINBASEAPI WINBOOL WINAPI SetProcessAffinityUpdateMode (HANDLE hProcess, DWORD dwFlags);", "QueryProcessAffinityUpdateMode": "WINBASEAPI WINBOOL WINAPI QueryProcessAffinityUpdateMode (HANDLE hProcess, LPDWORD lpdwFlags);", "UpdateProcThreadAttribute": "WINBASEAPI WINBOOL WINAPI UpdateProcThreadAttribute (LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList, DWORD dwFlags, DWORD_PTR Attribute, PVOID lpValue, SIZE_T cbSize, PVOID lpPreviousValue, PSIZE_T lpReturnSize);", "SetProcessMitigationPolicy": "WINBASEAPI WINBOOL WINAPI SetProcessMitigationPolicy (PROCESS_MITIGATION_POLICY MitigationPolicy, PVOID lpBuffer, SIZE_T dwLength);", "IsProcessCritical": "WINBASEAPI WINBOOL WINAPI IsProcessCritical (HANDLE hProcess, PBOOL Critical);", "SetProtectedPolicy": "WINBASEAPI WINBOOL WINAPI SetProtectedPolicy (LPCGUID PolicyGuid, ULONG_PTR PolicyValue, PULONG_PTR OldPolicyValue);", "QueryProtectedPolicy": "WINBASEAPI WINBOOL WINAPI QueryProtectedPolicy (LPCGUID PolicyGuid, PULONG_PTR PolicyValue);", "CreateProcessA": "WINBASEAPI WINBOOL WINAPI CreateProcessA (LPCSTR lpApplicationName, LPSTR lpCommandLine, LPSECURITY_ATTRIBUTES lpProcessAttributes, LPSECURITY_ATTRIBUTES lpThreadAttributes, WINBOOL bInheritHandles, DWORD dwCreationFlags, LPVOID lpEnvironment, LPCSTR lpCurrentDirectory, LPSTARTUPINFOA lpStartupInfo, LPPROCESS_INFORMATION lpProcessInformation);", "CreateProcessW": "WINBASEAPI WINBOOL WINAPI CreateProcessW (LPCWSTR lpApplicationName, LPWSTR lpCommandLine, LPSECURITY_ATTRIBUTES lpProcessAttributes, LPSECURITY_ATTRIBUTES lpThreadAttributes, WINBOOL bInheritHandles, DWORD dwCreationFlags, LPVOID lpEnvironment, LPCWSTR lpCurrentDirectory, LPSTARTUPINFOW lpStartupInfo, LPPROCESS_INFORMATION lpProcessInformation);", "GetThreadIdealProcessorEx": "WINBASEAPI WINBOOL WINAPI GetThreadIdealProcessorEx (HANDLE hThread, PPROCESSOR_NUMBER lpIdealProcessor);", "GetCurrentProcessorNumberEx": "WINBASEAPI VOID WINAPI GetCurrentProcessorNumberEx (PPROCESSOR_NUMBER ProcNumber);", "GetCurrentThreadStackLimits": "WINBASEAPI VOID WINAPI GetCurrentThreadStackLimits (PULONG_PTR LowLimit, PULONG_PTR HighLimit);", "GetProcessMitigationPolicy": "WINBASEAPI WINBOOL WINAPI GetProcessMitigationPolicy (HANDLE hProcess, PROCESS_MITIGATION_POLICY MitigationPolicy, PVOID lpBuffer, SIZE_T dwLength);", "GetCurrentProcess": "WINBASEAPI HANDLE WINAPI GetCurrentProcess (VOID);", "GetCurrentProcessId": "WINBASEAPI DWORD WINAPI GetCurrentProcessId (VOID);", "GetCurrentThread": "WINBASEAPI HANDLE WINAPI GetCurrentThread (VOID);", "GetCurrentThreadId": "WINBASEAPI DWORD WINAPI GetCurrentThreadId (VOID);", "IsProcessorFeaturePresent": "WINBOOL WINAPI IsProcessorFeaturePresent (DWORD ProcessorFeature);", "FlushProcessWriteBuffers": "WINBASEAPI VOID WINAPI FlushProcessWriteBuffers (VOID);", "CreateThread": "WINBASEAPI HANDLE WINAPI CreateThread (LPSECURITY_ATTRIBUTES lpThreadAttributes, SIZE_T dwStackSize, LPTHREAD_START_ROUTINE lpStartAddress, LPVOID lpParameter, DWORD dwCreationFlags, LPDWORD lpThreadId);", "SetThreadPriority": "WINBASEAPI WINBOOL WINAPI SetThreadPriority (HANDLE hThread, int nPriority);", "GetThreadPriority": "WINBASEAPI int WINAPI GetThreadPriority (HANDLE hThread);", "ExitThread": "WINBASEAPI DECLSPEC_NORETURN VOID WINAPI ExitThread (DWORD dwExitCode);", "GetExitCodeThread": "WINBASEAPI WINBOOL WINAPI GetExitCodeThread (HANDLE hThread, LPDWORD lpExitCode);", "SuspendThread": "WINBASEAPI DWORD WINAPI SuspendThread (HANDLE hThread);", "ResumeThread": "WINBASEAPI DWORD WINAPI ResumeThread (HANDLE hThread);", "TlsAlloc": "WINBASEAPI DWORD WINAPI TlsAlloc (VOID);", "TlsGetValue": "WINBASEAPI LPVOID WINAPI TlsGetValue (DWORD dwTlsIndex);", "TlsSetValue": "WINBASEAPI WINBOOL WINAPI TlsSetValue (DWORD dwTlsIndex, LPVOID lpTlsValue);", "TlsFree": "WINBASEAPI WINBOOL WINAPI TlsFree (DWORD dwTlsIndex);", "SetThreadIdealProcessorEx": "WINBASEAPI WINBOOL WINAPI SetThreadIdealProcessorEx (HANDLE hThread, PPROCESSOR_NUMBER lpIdealProcessor, PPROCESSOR_NUMBER lpPreviousIdealProcessor);", "SetProcessDynamicEHContinuationTargets": "WINBASEAPI WINBOOL WINAPI SetProcessDynamicEHContinuationTargets (HANDLE Process, USHORT NumberOfTargets, PPROCESS_DYNAMIC_EH_CONTINUATION_TARGET Targets);", "QueueUserAPC2": "WINBASEAPI WINBOOL WINAPI QueueUserAPC2 (PAPCFUNC ApcRoutine, HANDLE Thread, ULONG_PTR Data, QUEUE_USER_APC_FLAGS Flags);", "SetProcessDynamicEnforcedCetCompatibleRanges": "WINBASEAPI WINBOOL WINAPI SetProcessDynamicEnforcedCetCompatibleRanges (HANDLE Process, USHORT NumberOfRanges, PPROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGE Ranges);", "SetThreadDescription": "WINBASEAPI HRESULT WINAPI SetThreadDescription (HANDLE hThread, PCWSTR lpThreadDescription);", "GetThreadDescription": "WINBASEAPI HRESULT WINAPI GetThreadDescription (HANDLE hThread, PWSTR *ppszThreadDescription);", "_IUseIMBase_SetService_Proxy": "HRESULT WINAPI _IUseIMBase_SetService_Proxy(_IUseIMBase *This,IDispatch *pService,IDispatch *pApp);", "_IUseIMBase_get_Service_Proxy": "HRESULT WINAPI _IUseIMBase_get_Service_Proxy(_IUseIMBase *This,short *pVal);", "_IUseIMBase_put_Service_Proxy": "HRESULT WINAPI _IUseIMBase_put_Service_Proxy(_IUseIMBase *This,short newVal);", "_IUseIMBase_get_HasService_Proxy": "HRESULT WINAPI _IUseIMBase_get_HasService_Proxy(_IUseIMBase *This,VARIANT_BOOL *pVal);", "_IUseIMBase_get_AutoLogon_Proxy": "HRESULT WINAPI _IUseIMBase_get_AutoLogon_Proxy(_IUseIMBase *This,VARIANT_BOOL *pVal);", "_IUseIMBase_put_AutoLogon_Proxy": "HRESULT WINAPI _IUseIMBase_put_AutoLogon_Proxy(_IUseIMBase *This,VARIANT_BOOL newVal);", "_IUseIMBase_get_LoggedOn_Proxy": "HRESULT WINAPI _IUseIMBase_get_LoggedOn_Proxy(_IUseIMBase *This,VARIANT_BOOL *pVal);", "_IUseIMBase_Logon_Proxy": "HRESULT WINAPI _IUseIMBase_Logon_Proxy(_IUseIMBase *This,BSTR bstrAddress,BSTR bstrName,BSTR bstrPassword,BSTR bstrDomain);", "_IUseIMBase_Logoff_Proxy": "HRESULT WINAPI _IUseIMBase_Logoff_Proxy(_IUseIMBase *This);", "_IUseIMBase_GetLocalState_Proxy": "HRESULT WINAPI _IUseIMBase_GetLocalState_Proxy(_IUseIMBase *This,VARIANT *pvarState,VARIANT *pvarDescription,VARIANT *pvarData);", "_IUseIMBase_SetLocalState_Proxy": "HRESULT WINAPI _IUseIMBase_SetLocalState_Proxy(_IUseIMBase *This,__LONG32 lState,VARIANT varDescription,VARIANT varData);", "IMSIMContactView_Add_Proxy": "HRESULT WINAPI IMSIMContactView_Add_Proxy(IMSIMContactView *This,VARIANT vUser);", "IMSIMContactView_Remove_Proxy": "HRESULT WINAPI IMSIMContactView_Remove_Proxy(IMSIMContactView *This,VARIANT vUser);", "IMSIMContactView_get_List_Proxy": "HRESULT WINAPI IMSIMContactView_get_List_Proxy(IMSIMContactView *This,VARIANT *pvarList);", "IMSIMContactView_put_List_Proxy": "HRESULT WINAPI IMSIMContactView_put_List_Proxy(IMSIMContactView *This,VARIANT varList);", "IMSIMContactView_AddMenuItem_Proxy": "HRESULT WINAPI IMSIMContactView_AddMenuItem_Proxy(IMSIMContactView *This,BSTR bstrItem,__LONG32 lPosition,__LONG32 *plCommand);", "IMSIMContactView_get_SelectedMenuOptions_Proxy": "HRESULT WINAPI IMSIMContactView_get_SelectedMenuOptions_Proxy(IMSIMContactView *This,__LONG32 *pVal);", "IMSIMContactView_IMSelected_Proxy": "HRESULT WINAPI IMSIMContactView_IMSelected_Proxy(IMSIMContactView *This);", "IMSIMContactView_EMailSelected_Proxy": "HRESULT WINAPI IMSIMContactView_EMailSelected_Proxy(IMSIMContactView *This);", "IMSIMContactView_InviteSelected_Proxy": "HRESULT WINAPI IMSIMContactView_InviteSelected_Proxy(IMSIMContactView *This);", "IMSIMContactView_BlockSelected_Proxy": "HRESULT WINAPI IMSIMContactView_BlockSelected_Proxy(IMSIMContactView *This);", "IMSIMContactView_UnblockSelected_Proxy": "HRESULT WINAPI IMSIMContactView_UnblockSelected_Proxy(IMSIMContactView *This);", "IMSIMContactView_get_ExtentWidth_Proxy": "HRESULT WINAPI IMSIMContactView_get_ExtentWidth_Proxy(IMSIMContactView *This,__LONG32 *pX);", "IMSIMContactView_get_ExtentHeight_Proxy": "HRESULT WINAPI IMSIMContactView_get_ExtentHeight_Proxy(IMSIMContactView *This,__LONG32 *pY);", "IMSIMContactView_get_HotTracking_Proxy": "HRESULT WINAPI IMSIMContactView_get_HotTracking_Proxy(IMSIMContactView *This,VARIANT_BOOL *pVal);", "IMSIMContactView_put_HotTracking_Proxy": "HRESULT WINAPI IMSIMContactView_put_HotTracking_Proxy(IMSIMContactView *This,VARIANT_BOOL newVal);", "IMSIMContactView_get_AllowCollapse_Proxy": "HRESULT WINAPI IMSIMContactView_get_AllowCollapse_Proxy(IMSIMContactView *This,VARIANT_BOOL *pVal);", "IMSIMContactView_put_AllowCollapse_Proxy": "HRESULT WINAPI IMSIMContactView_put_AllowCollapse_Proxy(IMSIMContactView *This,VARIANT_BOOL newVal);", "IMSIMContactView_get_ShowSelectAlways_Proxy": "HRESULT WINAPI IMSIMContactView_get_ShowSelectAlways_Proxy(IMSIMContactView *This,VARIANT_BOOL *pVal);", "IMSIMContactView_put_ShowSelectAlways_Proxy": "HRESULT WINAPI IMSIMContactView_put_ShowSelectAlways_Proxy(IMSIMContactView *This,VARIANT_BOOL newVal);", "IMSIMContactView_get_OnlineRootLabel_Proxy": "HRESULT WINAPI IMSIMContactView_get_OnlineRootLabel_Proxy(IMSIMContactView *This,BSTR *pbstrLabel);", "IMSIMContactView_put_OnlineRootLabel_Proxy": "HRESULT WINAPI IMSIMContactView_put_OnlineRootLabel_Proxy(IMSIMContactView *This,BSTR bstrLabel);", "IMSIMContactView_get_OfflineRootLabel_Proxy": "HRESULT WINAPI IMSIMContactView_get_OfflineRootLabel_Proxy(IMSIMContactView *This,BSTR *pbstrLabel);", "IMSIMContactView_put_OfflineRootLabel_Proxy": "HRESULT WINAPI IMSIMContactView_put_OfflineRootLabel_Proxy(IMSIMContactView *This,BSTR bstrLabel);", "IMSIMContactView_get_Window_Proxy": "HRESULT WINAPI IMSIMContactView_get_Window_Proxy(IMSIMContactView *This,__LONG32 *pVal);", "IMSIMContactView_get_ShowLogonButton_Proxy": "HRESULT WINAPI IMSIMContactView_get_ShowLogonButton_Proxy(IMSIMContactView *This,VARIANT_BOOL *pVal);", "IMSIMContactView_put_ShowLogonButton_Proxy": "HRESULT WINAPI IMSIMContactView_put_ShowLogonButton_Proxy(IMSIMContactView *This,VARIANT_BOOL newVal);", "IMSIMContactView_get_OnlineCollapsed_Proxy": "HRESULT WINAPI IMSIMContactView_get_OnlineCollapsed_Proxy(IMSIMContactView *This,VARIANT_BOOL *pVal);", "IMSIMContactView_put_OnlineCollapsed_Proxy": "HRESULT WINAPI IMSIMContactView_put_OnlineCollapsed_Proxy(IMSIMContactView *This,VARIANT_BOOL newVal);", "IMSIMContactView_get_OfflineCollapsed_Proxy": "HRESULT WINAPI IMSIMContactView_get_OfflineCollapsed_Proxy(IMSIMContactView *This,VARIANT_BOOL *pVal);", "IMSIMContactView_put_OfflineCollapsed_Proxy": "HRESULT WINAPI IMSIMContactView_put_OfflineCollapsed_Proxy(IMSIMContactView *This,VARIANT_BOOL newVal);", "IMSIMContactView_get_Group_Proxy": "HRESULT WINAPI IMSIMContactView_get_Group_Proxy(IMSIMContactView *This,VARIANT_BOOL *pVal);", "IMSIMContactView_put_Group_Proxy": "HRESULT WINAPI IMSIMContactView_put_Group_Proxy(IMSIMContactView *This,VARIANT_BOOL newVal);", "IMSIMContactView_get_FilterOffline_Proxy": "HRESULT WINAPI IMSIMContactView_get_FilterOffline_Proxy(IMSIMContactView *This,VARIANT_BOOL *pVal);", "IMSIMContactView_put_FilterOffline_Proxy": "HRESULT WINAPI IMSIMContactView_put_FilterOffline_Proxy(IMSIMContactView *This,VARIANT_BOOL newVal);", "IMSIMContactView_get_ShowIcons_Proxy": "HRESULT WINAPI IMSIMContactView_get_ShowIcons_Proxy(IMSIMContactView *This,VARIANT_BOOL *pVal);", "IMSIMContactView_put_ShowIcons_Proxy": "HRESULT WINAPI IMSIMContactView_put_ShowIcons_Proxy(IMSIMContactView *This,VARIANT_BOOL newVal);", "IMSIMContactView_get_AcceptMessages_Proxy": "HRESULT WINAPI IMSIMContactView_get_AcceptMessages_Proxy(IMSIMContactView *This,VARIANT_BOOL *pVal);", "IMSIMContactView_put_AcceptMessages_Proxy": "HRESULT WINAPI IMSIMContactView_put_AcceptMessages_Proxy(IMSIMContactView *This,VARIANT_BOOL newVal);", "IMSIMMessageView_get_Window_Proxy": "HRESULT WINAPI IMSIMMessageView_get_Window_Proxy(IMSIMMessageView *This,__LONG32 *phwnd);", "IMSIMMessageView_put_Appearance_Proxy": "HRESULT WINAPI IMSIMMessageView_put_Appearance_Proxy(IMSIMMessageView *This,short appearance);", "IMSIMMessageView_get_Appearance_Proxy": "HRESULT WINAPI IMSIMMessageView_get_Appearance_Proxy(IMSIMMessageView *This,short *pappearance);", "IMSIMMessageView_get_ShowParticipants_Proxy": "HRESULT WINAPI IMSIMMessageView_get_ShowParticipants_Proxy(IMSIMMessageView *This,VARIANT_BOOL *pVal);", "IMSIMMessageView_put_ShowParticipants_Proxy": "HRESULT WINAPI IMSIMMessageView_put_ShowParticipants_Proxy(IMSIMMessageView *This,VARIANT_BOOL newVal);", "IMSIMMessageView_get_ShowMembers_Proxy": "HRESULT WINAPI IMSIMMessageView_get_ShowMembers_Proxy(IMSIMMessageView *This,VARIANT_BOOL *pVal);", "IMSIMMessageView_put_ShowMembers_Proxy": "HRESULT WINAPI IMSIMMessageView_put_ShowMembers_Proxy(IMSIMMessageView *This,VARIANT_BOOL newVal);", "IMSIMMessageView_get_ShowAvailable_Proxy": "HRESULT WINAPI IMSIMMessageView_get_ShowAvailable_Proxy(IMSIMMessageView *This,VARIANT_BOOL *pVal);", "IMSIMMessageView_put_ShowAvailable_Proxy": "HRESULT WINAPI IMSIMMessageView_put_ShowAvailable_Proxy(IMSIMMessageView *This,VARIANT_BOOL newVal);", "IMSIMMessageView_get_AvailableList_Proxy": "HRESULT WINAPI IMSIMMessageView_get_AvailableList_Proxy(IMSIMMessageView *This,VARIANT *pVal);", "IMSIMMessageView_put_AvailableList_Proxy": "HRESULT WINAPI IMSIMMessageView_put_AvailableList_Proxy(IMSIMMessageView *This,VARIANT newVal);", "IMSIMMessageView_get_ShowMessageHistory_Proxy": "HRESULT WINAPI IMSIMMessageView_get_ShowMessageHistory_Proxy(IMSIMMessageView *This,VARIANT_BOOL *pVal);", "IMSIMMessageView_put_ShowMessageHistory_Proxy": "HRESULT WINAPI IMSIMMessageView_put_ShowMessageHistory_Proxy(IMSIMMessageView *This,VARIANT_BOOL newVal);", "IMSIMMessageView_get_ShowEdit_Proxy": "HRESULT WINAPI IMSIMMessageView_get_ShowEdit_Proxy(IMSIMMessageView *This,VARIANT_BOOL *pVal);", "IMSIMMessageView_put_ShowEdit_Proxy": "HRESULT WINAPI IMSIMMessageView_put_ShowEdit_Proxy(IMSIMMessageView *This,VARIANT_BOOL newVal);", "IMSIMMessageView_get_HideStatus_Proxy": "HRESULT WINAPI IMSIMMessageView_get_HideStatus_Proxy(IMSIMMessageView *This,VARIANT_BOOL *pVal);", "IMSIMMessageView_put_HideStatus_Proxy": "HRESULT WINAPI IMSIMMessageView_put_HideStatus_Proxy(IMSIMMessageView *This,VARIANT_BOOL newVal);", "IMSIMMessageView_get_MessageHistory_Proxy": "HRESULT WINAPI IMSIMMessageView_get_MessageHistory_Proxy(IMSIMMessageView *This,BSTR *pVal);", "IMSIMMessageView_get_StatusText_Proxy": "HRESULT WINAPI IMSIMMessageView_get_StatusText_Proxy(IMSIMMessageView *This,BSTR *pVal);", "IMSIMMessageView_put_StatusText_Proxy": "HRESULT WINAPI IMSIMMessageView_put_StatusText_Proxy(IMSIMMessageView *This,BSTR newVal);", "IMSIMMessageView_get_MessageText_Proxy": "HRESULT WINAPI IMSIMMessageView_get_MessageText_Proxy(IMSIMMessageView *This,BSTR *pVal);", "IMSIMMessageView_put_MessageText_Proxy": "HRESULT WINAPI IMSIMMessageView_put_MessageText_Proxy(IMSIMMessageView *This,BSTR newVal);", "IMSIMMessageView_Invite_Proxy": "HRESULT WINAPI IMSIMMessageView_Invite_Proxy(IMSIMMessageView *This,VARIANT varContact);", "IMSIMMessageView_EndSession_Proxy": "HRESULT WINAPI IMSIMMessageView_EndSession_Proxy(IMSIMMessageView *This);", "IMSIMMessageView_AddToAvailable_Proxy": "HRESULT WINAPI IMSIMMessageView_AddToAvailable_Proxy(IMSIMMessageView *This,VARIANT varContact);", "IMSIMMessageView_RemoveFromAvailable_Proxy": "HRESULT WINAPI IMSIMMessageView_RemoveFromAvailable_Proxy(IMSIMMessageView *This,VARIANT varContact);", "IMSIMMessageView_InviteNetMeeting_Proxy": "HRESULT WINAPI IMSIMMessageView_InviteNetMeeting_Proxy(IMSIMMessageView *This);", "IMSIMMessageView_NetMeetingInvite_Proxy": "HRESULT WINAPI IMSIMMessageView_NetMeetingInvite_Proxy(IMSIMMessageView *This,IDispatch *pIMSession,IDispatch *pContact,__LONG32 lInviteCookie);", "IMSIMMessageView_get_SourceURL_Proxy": "HRESULT WINAPI IMSIMMessageView_get_SourceURL_Proxy(IMSIMMessageView *This,BSTR *pVal);", "IMSIMMessageView_put_SourceURL_Proxy": "HRESULT WINAPI IMSIMMessageView_put_SourceURL_Proxy(IMSIMMessageView *This,BSTR newVal);", "IMSIMMessageView_get_InSession_Proxy": "HRESULT WINAPI IMSIMMessageView_get_InSession_Proxy(IMSIMMessageView *This,VARIANT_BOOL *pVal);", "IIMSafeContact_get_LogonName_Proxy": "HRESULT WINAPI IIMSafeContact_get_LogonName_Proxy(IIMSafeContact *This,BSTR *pbstrLogonName);", "IIMSafeContact_get_FriendlyName_Proxy": "HRESULT WINAPI IIMSafeContact_get_FriendlyName_Proxy(IIMSafeContact *This,BSTR *pbstrFriendlyName);", "IIMSafeContact_get_EmailAddress_Proxy": "HRESULT WINAPI IIMSafeContact_get_EmailAddress_Proxy(IIMSafeContact *This,BSTR *pbstrEmailAddress);", "IIMSafeContact_get_State_Proxy": "HRESULT WINAPI IIMSafeContact_get_State_Proxy(IIMSafeContact *This,__LONG32 *plState);", "IIMSafeContact__SetBaseContact_Proxy": "HRESULT WINAPI IIMSafeContact__SetBaseContact_Proxy(IIMSafeContact *This,IDispatch *pUnk);", "IIMSafeContact_LaunchInstantMessage_Proxy": "HRESULT WINAPI IIMSafeContact_LaunchInstantMessage_Proxy(IIMSafeContact *This);", "IIMSafeContact_LaunchEmail_Proxy": "HRESULT WINAPI IIMSafeContact_LaunchEmail_Proxy(IIMSafeContact *This);", "IIMSafeContact_LaunchNetMeeting_Proxy": "HRESULT WINAPI IIMSafeContact_LaunchNetMeeting_Proxy(IIMSafeContact *This);", "IMSIMContactList_get_List_Proxy": "HRESULT WINAPI IMSIMContactList_get_List_Proxy(IMSIMContactList *This,VARIANT *pvarList);", "IMSIMContactList_put_List_Proxy": "HRESULT WINAPI IMSIMContactList_put_List_Proxy(IMSIMContactList *This,VARIANT varList);", "IMSIMContactList_Add_Proxy": "HRESULT WINAPI IMSIMContactList_Add_Proxy(IMSIMContactList *This,VARIANT vUser);", "IMSIMContactList_Remove_Proxy": "HRESULT WINAPI IMSIMContactList_Remove_Proxy(IMSIMContactList *This,VARIANT vUser);", "IMSIMContactList_get_SelectedMenuOptions_Proxy": "HRESULT WINAPI IMSIMContactList_get_SelectedMenuOptions_Proxy(IMSIMContactList *This,__LONG32 lRow,__LONG32 *pVal);", "IMSIMContactList_InstantMessage_Proxy": "HRESULT WINAPI IMSIMContactList_InstantMessage_Proxy(IMSIMContactList *This,__LONG32 lRow);", "IMSIMContactList_EMail_Proxy": "HRESULT WINAPI IMSIMContactList_EMail_Proxy(IMSIMContactList *This,__LONG32 lRow);", "IMSIMContactList_Invite_Proxy": "HRESULT WINAPI IMSIMContactList_Invite_Proxy(IMSIMContactList *This,__LONG32 lRow);", "IMSIMContactList_Block_Proxy": "HRESULT WINAPI IMSIMContactList_Block_Proxy(IMSIMContactList *This,__LONG32 lRow);", "IMSIMContactList_Unblock_Proxy": "HRESULT WINAPI IMSIMContactList_Unblock_Proxy(IMSIMContactList *This,__LONG32 lRow);", "IMSIMContactList_get_Count_Proxy": "HRESULT WINAPI IMSIMContactList_get_Count_Proxy(IMSIMContactList *This,__LONG32 *pnCount);", "IMSIMContactList_get_Item_Proxy": "HRESULT WINAPI IMSIMContactList_get_Item_Proxy(IMSIMContactList *This,VARIANT Var,VARIANT *pSafeContact);", "IMSIMContactList_get__NewEnum_Proxy": "HRESULT WINAPI IMSIMContactList_get__NewEnum_Proxy(IMSIMContactList *This,IUnknown **ppunkEnum);", "IMSIMContactList_get_LocalState_Proxy": "HRESULT WINAPI IMSIMContactList_get_LocalState_Proxy(IMSIMContactList *This,__LONG32 *pnState);", "IMSIMContactList_put_LocalState_Proxy": "HRESULT WINAPI IMSIMContactList_put_LocalState_Proxy(IMSIMContactList *This,__LONG32 nState);", "IMSIMContactList_get_LocalLogonName_Proxy": "HRESULT WINAPI IMSIMContactList_get_LocalLogonName_Proxy(IMSIMContactList *This,BSTR *pval);", "AllocFixupInfo": "NAPAPI HRESULT WINAPI AllocFixupInfo(FixupInfo **fixupInfo, UINT16 countResultCodes);", "AllocConnections": "NAPAPI HRESULT WINAPI AllocConnections(Connections **connections, UINT16 connectionsCount);", "AllocCountedString": "NAPAPI HRESULT WINAPI AllocCountedString(CountedString **countedString, CONST WCHAR *string);", "FreeFixupInfo": "NAPAPI VOID WINAPI FreeFixupInfo(FixupInfo *fixupInfo);", "FreeConnections": "NAPAPI VOID WINAPI FreeConnections(Connections *connections);", "FreeIsolationInfo": "NAPAPI VOID WINAPI FreeIsolationInfo(IsolationInfo *isolationInfo);", "FreeIsolationInfoEx": "NAPAPI VOID WINAPI FreeIsolationInfoEx(IsolationInfoEx *isolationInfo);", "FreeCountedString": "NAPAPI VOID WINAPI FreeCountedString(CountedString *countedString);", "FreeSoH": "NAPAPI VOID WINAPI FreeSoH(SoH *soh);", "FreeNetworkSoH": "NAPAPI VOID WINAPI FreeNetworkSoH(NetworkSoH *networkSoh);", "FreePrivateData": "NAPAPI VOID WINAPI FreePrivateData(PrivateData *privateData);", "FreeSoHAttributeValue": "NAPAPI VOID WINAPI FreeSoHAttributeValue(SoHAttributeType type, SoHAttributeValue *value);", "FreeNapComponentRegistrationInfoArray": "NAPAPI VOID WINAPI FreeNapComponentRegistrationInfoArray(UINT16 count, NapComponentRegistrationInfo **info);", "FreeSystemHealthAgentState": "NAPAPI VOID WINAPI FreeSystemHealthAgentState(SystemHealthAgentState *state);", "InitializeNapAgentNotifier": "NAPAPI HRESULT WINAPI InitializeNapAgentNotifier(NapNotifyType type, HANDLE hNotifyEvent);", "UninitializeNapAgentNotifier": "NAPAPI VOID WINAPI UninitializeNapAgentNotifier(NapNotifyType type);", "ISyncMgrSynchronize_Initialize_Proxy": "HRESULT WINAPI ISyncMgrSynchronize_Initialize_Proxy(ISyncMgrSynchronize *This,DWORD dwReserved,DWORD dwSyncMgrFlags,DWORD cbCookie,const BYTE *lpCookie);", "ISyncMgrSynchronize_GetHandlerInfo_Proxy": "HRESULT WINAPI ISyncMgrSynchronize_GetHandlerInfo_Proxy(ISyncMgrSynchronize *This,LPSYNCMGRHANDLERINFO *ppSyncMgrHandlerInfo);", "ISyncMgrSynchronize_EnumSyncMgrItems_Proxy": "HRESULT WINAPI ISyncMgrSynchronize_EnumSyncMgrItems_Proxy(ISyncMgrSynchronize *This,ISyncMgrEnumItems **ppSyncMgrEnumItems);", "ISyncMgrSynchronize_GetItemObject_Proxy": "HRESULT WINAPI ISyncMgrSynchronize_GetItemObject_Proxy(ISyncMgrSynchronize *This,REFSYNCMGRITEMID ItemID,REFIID riid,void **ppv);", "ISyncMgrSynchronize_ShowProperties_Proxy": "HRESULT WINAPI ISyncMgrSynchronize_ShowProperties_Proxy(ISyncMgrSynchronize *This,HWND hWndParent,REFSYNCMGRITEMID ItemID);", "ISyncMgrSynchronize_SetProgressCallback_Proxy": "HRESULT WINAPI ISyncMgrSynchronize_SetProgressCallback_Proxy(ISyncMgrSynchronize *This,ISyncMgrSynchronizeCallback *lpCallBack);", "ISyncMgrSynchronize_PrepareForSync_Proxy": "HRESULT WINAPI ISyncMgrSynchronize_PrepareForSync_Proxy(ISyncMgrSynchronize *This,ULONG cbNumItems,SYNCMGRITEMID *pItemIDs,HWND hWndParent,DWORD dwReserved);", "ISyncMgrSynchronize_Synchronize_Proxy": "HRESULT WINAPI ISyncMgrSynchronize_Synchronize_Proxy(ISyncMgrSynchronize *This,HWND hWndParent);", "ISyncMgrSynchronize_SetItemStatus_Proxy": "HRESULT WINAPI ISyncMgrSynchronize_SetItemStatus_Proxy(ISyncMgrSynchronize *This,REFSYNCMGRITEMID pItemID,DWORD dwSyncMgrStatus);", "ISyncMgrSynchronize_ShowError_Proxy": "HRESULT WINAPI ISyncMgrSynchronize_ShowError_Proxy(ISyncMgrSynchronize *This,HWND hWndParent,REFSYNCMGRERRORID ErrorID);", "ISyncMgrSynchronizeCallback_ShowPropertiesCompleted_Proxy": "HRESULT WINAPI ISyncMgrSynchronizeCallback_ShowPropertiesCompleted_Proxy(ISyncMgrSynchronizeCallback *This,HRESULT hr);", "ISyncMgrSynchronizeCallback_PrepareForSyncCompleted_Proxy": "HRESULT WINAPI ISyncMgrSynchronizeCallback_PrepareForSyncCompleted_Proxy(ISyncMgrSynchronizeCallback *This,HRESULT hr);", "ISyncMgrSynchronizeCallback_SynchronizeCompleted_Proxy": "HRESULT WINAPI ISyncMgrSynchronizeCallback_SynchronizeCompleted_Proxy(ISyncMgrSynchronizeCallback *This,HRESULT hr);", "ISyncMgrSynchronizeCallback_ShowErrorCompleted_Proxy": "HRESULT WINAPI ISyncMgrSynchronizeCallback_ShowErrorCompleted_Proxy(ISyncMgrSynchronizeCallback *This,HRESULT hr,ULONG cbNumItems,SYNCMGRITEMID *pItemIDs);", "ISyncMgrSynchronizeCallback_EnableModeless_Proxy": "HRESULT WINAPI ISyncMgrSynchronizeCallback_EnableModeless_Proxy(ISyncMgrSynchronizeCallback *This,WINBOOL fEnable);", "ISyncMgrSynchronizeCallback_Progress_Proxy": "HRESULT WINAPI ISyncMgrSynchronizeCallback_Progress_Proxy(ISyncMgrSynchronizeCallback *This,REFSYNCMGRITEMID pItemID,LPSYNCMGRPROGRESSITEM lpSyncProgressItem);", "ISyncMgrSynchronizeCallback_LogError_Proxy": "HRESULT WINAPI ISyncMgrSynchronizeCallback_LogError_Proxy(ISyncMgrSynchronizeCallback *This,DWORD dwErrorLevel,LPCWSTR lpcErrorText,LPSYNCMGRLOGERRORINFO lpSyncLogError);", "ISyncMgrSynchronizeCallback_DeleteLogError_Proxy": "HRESULT WINAPI ISyncMgrSynchronizeCallback_DeleteLogError_Proxy(ISyncMgrSynchronizeCallback *This,REFSYNCMGRERRORID ErrorID,DWORD dwReserved);", "ISyncMgrSynchronizeCallback_EstablishConnection_Proxy": "HRESULT WINAPI ISyncMgrSynchronizeCallback_EstablishConnection_Proxy(ISyncMgrSynchronizeCallback *This,LPCWSTR lpwszConnection,DWORD dwReserved);", "ISyncMgrEnumItems_Next_Proxy": "HRESULT WINAPI ISyncMgrEnumItems_Next_Proxy(ISyncMgrEnumItems *This,ULONG celt,LPSYNCMGRITEM rgelt,ULONG *pceltFetched);", "ISyncMgrEnumItems_Skip_Proxy": "HRESULT WINAPI ISyncMgrEnumItems_Skip_Proxy(ISyncMgrEnumItems *This,ULONG celt);", "ISyncMgrEnumItems_Reset_Proxy": "HRESULT WINAPI ISyncMgrEnumItems_Reset_Proxy(ISyncMgrEnumItems *This);", "ISyncMgrEnumItems_Clone_Proxy": "HRESULT WINAPI ISyncMgrEnumItems_Clone_Proxy(ISyncMgrEnumItems *This,ISyncMgrEnumItems **ppenum);", "ISyncMgrSynchronizeInvoke_UpdateItems_Proxy": "HRESULT WINAPI ISyncMgrSynchronizeInvoke_UpdateItems_Proxy(ISyncMgrSynchronizeInvoke *This,DWORD dwInvokeFlags,REFCLSID rclsid,DWORD cbCookie,const BYTE *lpCookie);", "ISyncMgrSynchronizeInvoke_UpdateAll_Proxy": "HRESULT WINAPI ISyncMgrSynchronizeInvoke_UpdateAll_Proxy(ISyncMgrSynchronizeInvoke *This);", "ISyncMgrRegister_RegisterSyncMgrHandler_Proxy": "HRESULT WINAPI ISyncMgrRegister_RegisterSyncMgrHandler_Proxy(ISyncMgrRegister *This,REFCLSID rclsidHandler,LPCWSTR pwszDescription,DWORD dwSyncMgrRegisterFlags);", "ISyncMgrRegister_UnregisterSyncMgrHandler_Proxy": "HRESULT WINAPI ISyncMgrRegister_UnregisterSyncMgrHandler_Proxy(ISyncMgrRegister *This,REFCLSID rclsidHandler,DWORD dwReserved);", "ISyncMgrRegister_GetHandlerRegistrationInfo_Proxy": "HRESULT WINAPI ISyncMgrRegister_GetHandlerRegistrationInfo_Proxy(ISyncMgrRegister *This,REFCLSID rclsidHandler,LPDWORD pdwSyncMgrRegisterFlags);", "SyncMgrResolveConflictW": "int WINAPI SyncMgrResolveConflictW(HWND hWndParent,RFCDLGPARAMW *pdlgParam);", "SyncMgrResolveConflictA": "int WINAPI SyncMgrResolveConflictA(HWND hWndParent,RFCDLGPARAMA *pdlgParam);", "IBITSExtensionSetup_EnableBITSUploads_Proxy": "HRESULT WINAPI IBITSExtensionSetup_EnableBITSUploads_Proxy(IBITSExtensionSetup *This);", "IBITSExtensionSetup_DisableBITSUploads_Proxy": "HRESULT WINAPI IBITSExtensionSetup_DisableBITSUploads_Proxy(IBITSExtensionSetup *This);", "IBITSExtensionSetup_GetCleanupTaskName_Proxy": "HRESULT WINAPI IBITSExtensionSetup_GetCleanupTaskName_Proxy(IBITSExtensionSetup *This,BSTR *pTaskName);", "IBITSExtensionSetup_GetCleanupTask_Proxy": "HRESULT WINAPI IBITSExtensionSetup_GetCleanupTask_Proxy(IBITSExtensionSetup *This,REFIID riid,IUnknown **ppUnk);", "IBITSExtensionSetupFactory_GetObject_Proxy": "HRESULT WINAPI IBITSExtensionSetupFactory_GetObject_Proxy(IBITSExtensionSetupFactory *This,BSTR Path,IBITSExtensionSetup **ppExtensionSetup);", "uaw_CharUpperW": "LPUWSTR WINAPI uaw_CharUpperW(LPUWSTR String);", "uaw_lstrcmpW": "int WINAPI uaw_lstrcmpW(PCUWSTR String1,PCUWSTR String2);", "uaw_lstrcmpiW": "int WINAPI uaw_lstrcmpiW(PCUWSTR String1,PCUWSTR String2);", "uaw_lstrlenW": "int WINAPI uaw_lstrlenW(LPCUWSTR String);", "WSDAllocateLinkedMemory": "void* WINAPI WSDAllocateLinkedMemory(", "WSDAttachLinkedMemory": "void WINAPI WSDAttachLinkedMemory(", "WSDDetachLinkedMemory": "void WINAPI WSDDetachLinkedMemory(", "WSDFreeLinkedMemory": "void WINAPI WSDFreeLinkedMemory(", "WSDGenerateFault": "HRESULT WINAPI WSDGenerateFault(", "WSDGenerateFaultEx": "HRESULT WINAPI WSDGenerateFaultEx(", "WSDGetConfigurationOption": "HRESULT WINAPI WSDGetConfigurationOption(", "WSDSetConfigurationOption": "HRESULT WINAPI WSDSetConfigurationOption(", "WSDXMLCleanupElement": "HRESULT WINAPI WSDXMLCleanupElement(", "ICertManageModule_GetProperty_Proxy": "HRESULT WINAPI ICertManageModule_GetProperty_Proxy(ICertManageModule *This,const BSTR strConfig,BSTR strStorageLocation,BSTR strPropertyName,LONG Flags,VARIANT *pvarProperty);", "ICertManageModule_SetProperty_Proxy": "HRESULT WINAPI ICertManageModule_SetProperty_Proxy(ICertManageModule *This,const BSTR strConfig,BSTR strStorageLocation,BSTR strPropertyName,LONG Flags,const VARIANT *pvarProperty);", "ICertManageModule_Configure_Proxy": "HRESULT WINAPI ICertManageModule_Configure_Proxy(ICertManageModule *This,const BSTR strConfig,BSTR strStorageLocation,LONG Flags);", "IMSAdminReplication_GetSignature_Proxy": "HRESULT WINAPI IMSAdminReplication_GetSignature_Proxy(IMSAdminReplication *This,DWORD dwBufferSize,unsigned char *pbBuffer,DWORD *pdwMDRequiredBufferSize);", "IMSAdminReplication_Propagate_Proxy": "HRESULT WINAPI IMSAdminReplication_Propagate_Proxy(IMSAdminReplication *This,DWORD dwBufferSize,unsigned char *pszBuffer);", "IMSAdminReplication_Propagate2_Proxy": "HRESULT WINAPI IMSAdminReplication_Propagate2_Proxy(IMSAdminReplication *This,DWORD dwBufferSize,unsigned char *pszBuffer,DWORD dwSignatureMismatch);", "IMSAdminReplication_Serialize_Proxy": "HRESULT WINAPI IMSAdminReplication_Serialize_Proxy(IMSAdminReplication *This,DWORD dwBufferSize,unsigned char *pbBuffer,DWORD *pdwMDRequiredBufferSize);", "IMSAdminReplication_DeSerialize_Proxy": "HRESULT WINAPI IMSAdminReplication_DeSerialize_Proxy(IMSAdminReplication *This,DWORD dwBufferSize,unsigned char *pbBuffer);", "IMSAdminCryptoCapabilities_GetProtocols_Proxy": "HRESULT WINAPI IMSAdminCryptoCapabilities_GetProtocols_Proxy(IMSAdminCryptoCapabilities *This,DWORD dwBufferSize,unsigned char *pbBuffer,DWORD *pdwMDRequiredBufferSize);", "IMSAdminCryptoCapabilities_GetMaximumCipherStrength_Proxy": "HRESULT WINAPI IMSAdminCryptoCapabilities_GetMaximumCipherStrength_Proxy(IMSAdminCryptoCapabilities *This,LPDWORD pdwMaximumCipherStrength);", "IMSAdminCryptoCapabilities_GetRootCertificates_Proxy": "HRESULT WINAPI IMSAdminCryptoCapabilities_GetRootCertificates_Proxy(IMSAdminCryptoCapabilities *This,DWORD dwBufferSize,unsigned char *pbBuffer,DWORD *pdwMDRequiredBufferSize);", "IMSAdminCryptoCapabilities_GetSupportedAlgs_Proxy": "HRESULT WINAPI IMSAdminCryptoCapabilities_GetSupportedAlgs_Proxy(IMSAdminCryptoCapabilities *This,DWORD dwBufferSize,DWORD *pbBuffer,DWORD *pdwMDRequiredBufferSize);", "IMSAdminCryptoCapabilities_SetCAList_Proxy": "HRESULT WINAPI IMSAdminCryptoCapabilities_SetCAList_Proxy(IMSAdminCryptoCapabilities *This,DWORD dwBufferSize,unsigned char *pbBuffer);", "WerAddExcludedApplication": "HRESULT WINAPI WerAddExcludedApplication(PCWSTR pwzExeName,WINBOOL bAllUsers);", "WerGetFlags": "HRESULT WINAPI WerGetFlags(HANDLE hProcess,PDWORD pdwFlags);", "WerRegisterFile": "HRESULT WINAPI WerRegisterFile(PCWSTR pwzFile,WER_REGISTER_FILE_TYPE regFileType,DWORD dwFlags);", "WerRegisterMemoryBlock": "HRESULT WINAPI WerRegisterMemoryBlock(PVOID pvAddress,DWORD dwSize);", "WerRemoveExcludedApplication": "HRESULT WINAPI WerRemoveExcludedApplication(PCWSTR pwzExeName,WINBOOL bAllUsers);", "WerReportAddDump": "HRESULT WINAPI WerReportAddDump(HREPORT hReportHandle,HANDLE hProcess,HANDLE hThread,WER_DUMP_TYPE dumpType,PWER_EXCEPTION_INFORMATION pExceptionParam,PWER_DUMP_CUSTOM_OPTIONS pDumpCustomOptions,DWORD dwFlags);", "WerReportAddFile": "HRESULT WINAPI WerReportAddFile(HREPORT hReportHandle,PCWSTR pwzPath,WER_FILE_TYPE repFileType,DWORD dwFileFlags);", "WerReportCloseHandle": "HRESULT WINAPI WerReportCloseHandle(HREPORT hReportHandle);", "WerReportCreate": "HRESULT WINAPI WerReportCreate(PCWSTR pwzEventType,WER_REPORT_TYPE repType,PWER_REPORT_INFORMATION pReportInformation,HREPORT *phReportHandle);", "WerReportHang": "HRESULT WINAPI WerReportHang(HWND hwndHungWindow,PCWSTR wszHungApplicationName);", "WerReportSetParameter": "HRESULT WINAPI WerReportSetParameter(HREPORT hReportHandle,DWORD dwparamID,PCWSTR pwzName,PCWSTR pwzValue);", "WerReportSetUIOption": "HRESULT WINAPI WerReportSetUIOption(HREPORT hReportHandle,WER_REPORT_UI repUITypeID,PCWSTR pwzValue);", "WerReportSubmit": "HRESULT WINAPI WerReportSubmit(HREPORT hReportHandle,WER_CONSENT consent,DWORD dwFlags,PWER_SUBMIT_RESULT pSubmitResult);", "WerSetFlags": "HRESULT WINAPI WerSetFlags(DWORD dwFlags);", "WerUnregisterFile": "HRESULT WINAPI WerUnregisterFile(PCWSTR pwzFilePath);", "WerUnregisterMemoryBlock": "HRESULT WINAPI WerUnregisterMemoryBlock(PVOID pvAddress);", "WerRegisterExcludedMemoryBlock": "HRESULT WINAPI WerRegisterExcludedMemoryBlock(const void* address, DWORD size);", "WerUnregisterExcludedMemoryBlock": "HRESULT WINAPI WerUnregisterExcludedMemoryBlock(const void* address);", "WerRegisterCustomMetadata": "HRESULT WINAPI WerRegisterCustomMetadata(PCWSTR key, PCWSTR value);", "WerUnregisterCustomMetadata": "HRESULT WINAPI WerUnregisterCustomMetadata(PCWSTR key);", "WerRegisterAdditionalProcess": "HRESULT WINAPI WerRegisterAdditionalProcess(DWORD processId, DWORD captureExtraInfoForThreadId);", "WerUnregisterAdditionalProcess": "HRESULT WINAPI WerUnregisterAdditionalProcess(DWORD processId);", "WerRegisterAppLocalDump": "HRESULT WINAPI WerRegisterAppLocalDump(PCWSTR localAppDataRelativePath);", "WerUnregisterAppLocalDump": "HRESULT WINAPI WerUnregisterAppLocalDump(void);", "WerSetMaxProcessHoldMilliseconds": "HRESULT WINAPI WerSetMaxProcessHoldMilliseconds(DWORD dwMilliseconds);", "WerRegisterRuntimeExceptionModule": "HRESULT WINAPI WerRegisterRuntimeExceptionModule(", "WerUnregisterRuntimeExceptionModule": "HRESULT WINAPI WerUnregisterRuntimeExceptionModule(", "WerStoreOpen": "HRESULT WINAPI WerStoreOpen(REPORT_STORE_TYPES repStoreType, PHREPORTSTORE phReportStore);", "WerStoreClose": "VOID WINAPI WerStoreClose(HREPORTSTORE hReportStore);", "WerStoreGetFirstReportKey": "HRESULT WINAPI WerStoreGetFirstReportKey(HREPORTSTORE hReportStore, PCWSTR *ppszReportKey);", "WerStoreGetNextReportKey": "HRESULT WINAPI WerStoreGetNextReportKey(HREPORTSTORE hReportStore, PCWSTR *ppszReportKey);", "WerStoreQueryReportMetadataV1": "HRESULT WINAPI WerStoreQueryReportMetadataV1(HREPORTSTORE hReportStore, PCWSTR pszReportKey, PWER_REPORT_METADATA_V1 pReportMetadata);", "WerStoreQueryReportMetadataV2": "HRESULT WINAPI WerStoreQueryReportMetadataV2(HREPORTSTORE hReportStore, PCWSTR pszReportKey, PWER_REPORT_METADATA_V2 pReportMetadata);", "WerStoreQueryReportMetadataV3": "HRESULT WINAPI WerStoreQueryReportMetadataV3(HREPORTSTORE hReportStore, PCWSTR pszReportKey, PWER_REPORT_METADATA_V3 pReportMetadata);", "WerFreeString": "VOID WINAPI WerFreeString(PCWSTR pwszStr);", "WerStorePurge": "HRESULT WINAPI WerStorePurge(void);", "WerStoreGetReportCount": "HRESULT WINAPI WerStoreGetReportCount(HREPORTSTORE hReportStore, DWORD *pdwReportCount);", "WerStoreGetSizeOnDisk": "HRESULT WINAPI WerStoreGetSizeOnDisk(HREPORTSTORE hReportStore, ULONGLONG *pqwSizeInBytes);", "WerStoreUploadReport": "HRESULT WINAPI WerStoreUploadReport(HREPORTSTORE hReportStore, PCWSTR pszReportKey, DWORD dwFlags, PWER_SUBMIT_RESULT pSubmitResult);", "OleDelete": "OLESTATUS WINAPI OleDelete (LPOLEOBJECT);", "OleRelease": "OLESTATUS WINAPI OleRelease (LPOLEOBJECT);", "OleSaveToStream": "OLESTATUS WINAPI OleSaveToStream (LPOLEOBJECT, LPOLESTREAM);", "OleEqual": "OLESTATUS WINAPI OleEqual (LPOLEOBJECT, LPOLEOBJECT);", "OleCopyToClipboard": "OLESTATUS WINAPI OleCopyToClipboard (LPOLEOBJECT);", "OleSetHostNames": "OLESTATUS WINAPI OleSetHostNames (LPOLEOBJECT, LPCSTR, LPCSTR);", "OleSetTargetDevice": "OLESTATUS WINAPI OleSetTargetDevice (LPOLEOBJECT, HGLOBAL);", "OleSetBounds": "OLESTATUS WINAPI OleSetBounds (LPOLEOBJECT, const RECT *);", "OleSetColorScheme": "OLESTATUS WINAPI OleSetColorScheme (LPOLEOBJECT, const LOGPALETTE *);", "OleQueryBounds": "OLESTATUS WINAPI OleQueryBounds (LPOLEOBJECT, RECT *);", "OleQuerySize": "OLESTATUS WINAPI OleQuerySize (LPOLEOBJECT, DWORD *);", "OleDraw": "OLESTATUS WINAPI OleDraw (LPOLEOBJECT, HDC, const RECT *, const RECT *, HDC);", "OleQueryOpen": "OLESTATUS WINAPI OleQueryOpen (LPOLEOBJECT);", "OleActivate": "OLESTATUS WINAPI OleActivate (LPOLEOBJECT, UINT, WINBOOL, WINBOOL, HWND, const RECT *);", "OleExecute": "OLESTATUS WINAPI OleExecute (LPOLEOBJECT, HGLOBAL, UINT);", "OleClose": "OLESTATUS WINAPI OleClose (LPOLEOBJECT);", "OleUpdate": "OLESTATUS WINAPI OleUpdate (LPOLEOBJECT);", "OleReconnect": "OLESTATUS WINAPI OleReconnect (LPOLEOBJECT);", "OleGetLinkUpdateOptions": "OLESTATUS WINAPI OleGetLinkUpdateOptions (LPOLEOBJECT, OLEOPT_UPDATE *);", "OleSetLinkUpdateOptions": "OLESTATUS WINAPI OleSetLinkUpdateOptions (LPOLEOBJECT, OLEOPT_UPDATE);", "OleQueryProtocol": "void *WINAPI OleQueryProtocol (LPOLEOBJECT, LPCSTR);", "OleQueryReleaseStatus": "OLESTATUS WINAPI OleQueryReleaseStatus (LPOLEOBJECT);", "OleQueryReleaseError": "OLESTATUS WINAPI OleQueryReleaseError (LPOLEOBJECT);", "OleQueryReleaseMethod": "OLE_RELEASE_METHOD WINAPI OleQueryReleaseMethod (LPOLEOBJECT);", "OleQueryType": "OLESTATUS WINAPI OleQueryType (LPOLEOBJECT, LONG *);", "OleQueryClientVersion": "DWORD WINAPI OleQueryClientVersion (void);", "OleQueryServerVersion": "DWORD WINAPI OleQueryServerVersion (void);", "OleEnumFormats": "OLECLIPFORMAT WINAPI OleEnumFormats (LPOLEOBJECT, OLECLIPFORMAT);", "OleGetData": "OLESTATUS WINAPI OleGetData (LPOLEOBJECT, OLECLIPFORMAT, HANDLE *);", "OleSetData": "OLESTATUS WINAPI OleSetData (LPOLEOBJECT, OLECLIPFORMAT, HANDLE);", "OleQueryOutOfDate": "OLESTATUS WINAPI OleQueryOutOfDate (LPOLEOBJECT);", "OleRequestData": "OLESTATUS WINAPI OleRequestData (LPOLEOBJECT, OLECLIPFORMAT);", "OleQueryLinkFromClip": "OLESTATUS WINAPI OleQueryLinkFromClip (LPCSTR, OLEOPT_RENDER, OLECLIPFORMAT);", "OleQueryCreateFromClip": "OLESTATUS WINAPI OleQueryCreateFromClip (LPCSTR, OLEOPT_RENDER, OLECLIPFORMAT);", "OleCreateFromClip": "OLESTATUS WINAPI OleCreateFromClip (LPCSTR, LPOLECLIENT, LHCLIENTDOC, LPCSTR, LPOLEOBJECT *, OLEOPT_RENDER, OLECLIPFORMAT);", "OleCreateLinkFromClip": "OLESTATUS WINAPI OleCreateLinkFromClip (LPCSTR, LPOLECLIENT, LHCLIENTDOC, LPCSTR, LPOLEOBJECT *, OLEOPT_RENDER, OLECLIPFORMAT);", "OleCreateFromFile": "OLESTATUS WINAPI OleCreateFromFile (LPCSTR, LPOLECLIENT, LPCSTR, LPCSTR, LHCLIENTDOC, LPCSTR, LPOLEOBJECT *, OLEOPT_RENDER, OLECLIPFORMAT);", "OleCreateLinkFromFile": "OLESTATUS WINAPI OleCreateLinkFromFile (LPCSTR, LPOLECLIENT, LPCSTR, LPCSTR, LPCSTR, LHCLIENTDOC, LPCSTR, LPOLEOBJECT *, OLEOPT_RENDER, OLECLIPFORMAT);", "OleLoadFromStream": "OLESTATUS WINAPI OleLoadFromStream (LPOLESTREAM, LPCSTR, LPOLECLIENT, LHCLIENTDOC, LPCSTR, LPOLEOBJECT *);", "OleCreate": "OLESTATUS WINAPI OleCreate (LPCSTR, LPOLECLIENT, LPCSTR, LHCLIENTDOC, LPCSTR, LPOLEOBJECT *, OLEOPT_RENDER, OLECLIPFORMAT);", "OleCreateInvisible": "OLESTATUS WINAPI OleCreateInvisible (LPCSTR, LPOLECLIENT, LPCSTR, LHCLIENTDOC, LPCSTR, LPOLEOBJECT *, OLEOPT_RENDER, OLECLIPFORMAT, WINBOOL);", "OleCreateFromTemplate": "OLESTATUS WINAPI OleCreateFromTemplate (LPCSTR, LPOLECLIENT, LPCSTR, LHCLIENTDOC, LPCSTR, LPOLEOBJECT *, OLEOPT_RENDER, OLECLIPFORMAT);", "OleClone": "OLESTATUS WINAPI OleClone (LPOLEOBJECT, LPOLECLIENT, LHCLIENTDOC, LPCSTR, LPOLEOBJECT *);", "OleCopyFromLink": "OLESTATUS WINAPI OleCopyFromLink (LPOLEOBJECT, LPCSTR, LPOLECLIENT, LHCLIENTDOC, LPCSTR, LPOLEOBJECT *);", "OleObjectConvert": "OLESTATUS WINAPI OleObjectConvert (LPOLEOBJECT, LPCSTR, LPOLECLIENT, LHCLIENTDOC, LPCSTR, LPOLEOBJECT *);", "OleRename": "OLESTATUS WINAPI OleRename (LPOLEOBJECT, LPCSTR);", "OleQueryName": "OLESTATUS WINAPI OleQueryName (LPOLEOBJECT lpobj, LPSTR lpBuf, UINT *lpcbBuf);", "OleRevokeObject": "OLESTATUS WINAPI OleRevokeObject (LPOLECLIENT);", "OleIsDcMeta": "WINBOOL WINAPI OleIsDcMeta (HDC);", "OleRegisterClientDoc": "OLESTATUS WINAPI OleRegisterClientDoc (LPCSTR, LPCSTR, LONG, LHCLIENTDOC *);", "OleRevokeClientDoc": "OLESTATUS WINAPI OleRevokeClientDoc (LHCLIENTDOC);", "OleRenameClientDoc": "OLESTATUS WINAPI OleRenameClientDoc (LHCLIENTDOC, LPCSTR);", "OleRevertClientDoc": "OLESTATUS WINAPI OleRevertClientDoc (LHCLIENTDOC);", "OleSavedClientDoc": "OLESTATUS WINAPI OleSavedClientDoc (LHCLIENTDOC);", "OleEnumObjects": "OLESTATUS WINAPI OleEnumObjects (LHCLIENTDOC, LPOLEOBJECT *);", "OleRegisterServer": "OLESTATUS WINAPI OleRegisterServer (LPCSTR, LPOLESERVER, LHSERVER *, HINSTANCE, OLE_SERVER_USE);", "OleRevokeServer": "OLESTATUS WINAPI OleRevokeServer (LHSERVER);", "OleBlockServer": "OLESTATUS WINAPI OleBlockServer (LHSERVER);", "OleUnblockServer": "OLESTATUS WINAPI OleUnblockServer (LHSERVER, WINBOOL *);", "OleLockServer": "OLESTATUS WINAPI OleLockServer (LPOLEOBJECT, LHSERVER *);", "OleUnlockServer": "OLESTATUS WINAPI OleUnlockServer (LHSERVER);", "OleRegisterServerDoc": "OLESTATUS WINAPI OleRegisterServerDoc (LHSERVER, LPCSTR, LPOLESERVERDOC, LHSERVERDOC *);", "OleRevokeServerDoc": "OLESTATUS WINAPI OleRevokeServerDoc (LHSERVERDOC);", "OleRenameServerDoc": "OLESTATUS WINAPI OleRenameServerDoc (LHSERVERDOC, LPCSTR);", "OleRevertServerDoc": "OLESTATUS WINAPI OleRevertServerDoc (LHSERVERDOC);", "OleSavedServerDoc": "OLESTATUS WINAPI OleSavedServerDoc (LHSERVERDOC);", "D3DCompile": "HRESULT WINAPI D3DCompile(const void *data, SIZE_T data_size, const char *filename,", "D3DCompile2": "HRESULT WINAPI D3DCompile2(const void *data, SIZE_T data_size, const char *filename,", "D3DStripShader": "HRESULT WINAPI D3DStripShader(const void *data, SIZE_T data_size, UINT flags, ID3DBlob **blob);", "D3DDisassemble": "HRESULT WINAPI D3DDisassemble(const void *data, SIZE_T data_size,", "D3DCompileFromFile": "HRESULT WINAPI D3DCompileFromFile(const WCHAR *filename, const D3D_SHADER_MACRO *defines, ID3DInclude *includes,", "D3DGetBlobPart": "HRESULT WINAPI D3DGetBlobPart(const void *data, SIZE_T data_size, D3D_BLOB_PART part, UINT flags, ID3DBlob **blob);", "D3DGetInputSignatureBlob": "HRESULT WINAPI D3DGetInputSignatureBlob(const void *data, SIZE_T data_size, ID3DBlob **blob);", "D3DGetOutputSignatureBlob": "HRESULT WINAPI D3DGetOutputSignatureBlob(const void *data, SIZE_T data_size, ID3DBlob **blob);", "D3DGetInputAndOutputSignatureBlob": "HRESULT WINAPI D3DGetInputAndOutputSignatureBlob(const void *data, SIZE_T data_size, ID3DBlob **blob);", "D3DGetDebugInfo": "HRESULT WINAPI D3DGetDebugInfo(const void *data, SIZE_T data_size, ID3DBlob **blob);", "D3DReadFileToBlob": "HRESULT WINAPI D3DReadFileToBlob(const WCHAR *filename, ID3DBlob **contents);", "D3DWriteBlobToFile": "HRESULT WINAPI D3DWriteBlobToFile(ID3DBlob *blob, const WCHAR *filename, WINBOOL overwrite);", "D3DReflect": "HRESULT WINAPI D3DReflect(const void *data, SIZE_T data_size, REFIID riid, void **reflector);", "D3DCreateBlob": "HRESULT WINAPI D3DCreateBlob(SIZE_T data_size, ID3DBlob **blob);", "D3DPreprocess": "HRESULT WINAPI D3DPreprocess(const void *data, SIZE_T size, const char *filename,", "D3DCreateLinker": "HRESULT WINAPI D3DCreateLinker(ID3D11Linker **linker);", "D3DLoadModule": "HRESULT WINAPI D3DLoadModule(const void *data, SIZE_T size, ID3D11Module **module);", "Tbsi_Context_Create": "TBS_RESULT WINAPI Tbsi_Context_Create(const TBS_CONTEXT_PARAMS *pContextParams,TBS_HCONTEXT *phContext);", "Tbsi_Get_TCG_Log": "TBS_RESULT WINAPI Tbsi_Get_TCG_Log(TBS_HCONTEXT hContext,BYTE *pOutputBuf,UINT32 *pOutputBufLen);", "Tbsi_Physical_Presence_Command": "TBS_RESULT WINAPI Tbsi_Physical_Presence_Command(TBS_HCONTEXT hContext,const BYTE *pInputBuf,UINT32 InputBufLen,BYTE *pOutputBuf,UINT32 *pOutputBufLen);", "Tbsip_Cancel_Commands": "TBS_RESULT WINAPI Tbsip_Cancel_Commands(TBS_HCONTEXT hContext);", "Tbsip_Context_Close": "TBS_RESULT WINAPI Tbsip_Context_Close(TBS_HCONTEXT hContext);", "Tbsip_Submit_Command": "TBS_RESULT WINAPI Tbsip_Submit_Command(TBS_HCONTEXT hContext,TBS_COMMAND_LOCALITY locality,TBS_COMMAND_PRIORITY priority,const BYTE *pCommandBuf,UINT32 commandBufLen,BYTE *pResultBuf,UINT32 *pResultBufLen);", "ICallFrame_GetInfo_Proxy": "HRESULT WINAPI ICallFrame_GetInfo_Proxy(ICallFrame *This,CALLFRAMEINFO *pInfo);", "ICallFrame_GetIIDAndMethod_Proxy": "HRESULT WINAPI ICallFrame_GetIIDAndMethod_Proxy(ICallFrame *This,IID *pIID,ULONG *piMethod);", "ICallFrame_GetNames_Proxy": "HRESULT WINAPI ICallFrame_GetNames_Proxy(ICallFrame *This,LPWSTR *pwszInterface,LPWSTR *pwszMethod);", "ICallFrame_GetStackLocation_Proxy": "PVOID WINAPI ICallFrame_GetStackLocation_Proxy(ICallFrame *This);", "ICallFrame_SetStackLocation_Proxy": "void WINAPI ICallFrame_SetStackLocation_Proxy(ICallFrame *This,PVOID pvStack);", "ICallFrame_SetReturnValue_Proxy": "void WINAPI ICallFrame_SetReturnValue_Proxy(ICallFrame *This,HRESULT hr);", "ICallFrame_GetReturnValue_Proxy": "HRESULT WINAPI ICallFrame_GetReturnValue_Proxy(ICallFrame *This);", "ICallFrame_GetParamInfo_Proxy": "HRESULT WINAPI ICallFrame_GetParamInfo_Proxy(ICallFrame *This,ULONG iparam,CALLFRAMEPARAMINFO *pInfo);", "ICallFrame_SetParam_Proxy": "HRESULT WINAPI ICallFrame_SetParam_Proxy(ICallFrame *This,ULONG iparam,VARIANT *pvar);", "ICallFrame_GetParam_Proxy": "HRESULT WINAPI ICallFrame_GetParam_Proxy(ICallFrame *This,ULONG iparam,VARIANT *pvar);", "ICallFrame_Copy_Proxy": "HRESULT WINAPI ICallFrame_Copy_Proxy(ICallFrame *This,CALLFRAME_COPY copyControl,ICallFrameWalker *pWalker,ICallFrame **ppFrame);", "ICallFrame_Free_Proxy": "HRESULT WINAPI ICallFrame_Free_Proxy(ICallFrame *This,ICallFrame *pframeArgsDest,ICallFrameWalker *pWalkerDestFree,ICallFrameWalker *pWalkerCopy,DWORD freeFlags,ICallFrameWalker *pWalkerFree,DWORD nullFlags);", "ICallFrame_FreeParam_Proxy": "HRESULT WINAPI ICallFrame_FreeParam_Proxy(ICallFrame *This,ULONG iparam,DWORD freeFlags,ICallFrameWalker *pWalkerFree,DWORD nullFlags);", "ICallFrame_WalkFrame_Proxy": "HRESULT WINAPI ICallFrame_WalkFrame_Proxy(ICallFrame *This,DWORD walkWhat,ICallFrameWalker *pWalker);", "ICallFrame_GetMarshalSizeMax_Proxy": "HRESULT WINAPI ICallFrame_GetMarshalSizeMax_Proxy(ICallFrame *This,CALLFRAME_MARSHALCONTEXT *pmshlContext,MSHLFLAGS mshlflags,ULONG *pcbBufferNeeded);", "ICallFrame_Marshal_Proxy": "HRESULT WINAPI ICallFrame_Marshal_Proxy(ICallFrame *This,CALLFRAME_MARSHALCONTEXT *pmshlContext,MSHLFLAGS mshlflags,PVOID pBuffer,ULONG cbBuffer,ULONG *pcbBufferUsed,RPCOLEDATAREP *pdataRep,ULONG *prpcFlags);", "ICallFrame_Unmarshal_Proxy": "HRESULT WINAPI ICallFrame_Unmarshal_Proxy(ICallFrame *This,PVOID pBuffer,ULONG cbBuffer,RPCOLEDATAREP dataRep,CALLFRAME_MARSHALCONTEXT *pcontext,ULONG *pcbUnmarshalled);", "ICallFrame_ReleaseMarshalData_Proxy": "HRESULT WINAPI ICallFrame_ReleaseMarshalData_Proxy(ICallFrame *This,PVOID pBuffer,ULONG cbBuffer,ULONG ibFirstRelease,RPCOLEDATAREP dataRep,CALLFRAME_MARSHALCONTEXT *pcontext);", "ICallFrame_Invoke_Proxy": "HRESULT WINAPI ICallFrame_Invoke_Proxy(ICallFrame *This,void *pvReceiver,...);", "ICallIndirect_CallIndirect_Proxy": "HRESULT WINAPI ICallIndirect_CallIndirect_Proxy(ICallIndirect *This,HRESULT *phrReturn,ULONG iMethod,void *pvArgs,ULONG *cbArgs);", "ICallIndirect_GetMethodInfo_Proxy": "HRESULT WINAPI ICallIndirect_GetMethodInfo_Proxy(ICallIndirect *This,ULONG iMethod,CALLFRAMEINFO *pInfo,LPWSTR *pwszMethod);", "ICallIndirect_GetStackSize_Proxy": "HRESULT WINAPI ICallIndirect_GetStackSize_Proxy(ICallIndirect *This,ULONG iMethod,ULONG *cbArgs);", "ICallIndirect_GetIID_Proxy": "HRESULT WINAPI ICallIndirect_GetIID_Proxy(ICallIndirect *This,IID *piid,WINBOOL *pfDerivesFromIDispatch,ULONG *pcMethod,LPWSTR *pwszInterface);", "ICallInterceptor_RegisterSink_Proxy": "HRESULT WINAPI ICallInterceptor_RegisterSink_Proxy(ICallInterceptor *This,ICallFrameEvents *psink);", "ICallInterceptor_GetRegisteredSink_Proxy": "HRESULT WINAPI ICallInterceptor_GetRegisteredSink_Proxy(ICallInterceptor *This,ICallFrameEvents **ppsink);", "ICallFrameEvents_OnCall_Proxy": "HRESULT WINAPI ICallFrameEvents_OnCall_Proxy(ICallFrameEvents *This,ICallFrame *pFrame);", "ICallUnmarshal_Unmarshal_Proxy": "HRESULT WINAPI ICallUnmarshal_Unmarshal_Proxy(ICallUnmarshal *This,ULONG iMethod,PVOID pBuffer,ULONG cbBuffer,WINBOOL fForceBufferCopy,RPCOLEDATAREP dataRep,CALLFRAME_MARSHALCONTEXT *pcontext,ULONG *pcbUnmarshalled,ICallFrame **ppFrame);", "ICallUnmarshal_ReleaseMarshalData_Proxy": "HRESULT WINAPI ICallUnmarshal_ReleaseMarshalData_Proxy(ICallUnmarshal *This,ULONG iMethod,PVOID pBuffer,ULONG cbBuffer,ULONG ibFirstRelease,RPCOLEDATAREP dataRep,CALLFRAME_MARSHALCONTEXT *pcontext);", "ICallFrameWalker_OnWalkInterface_Proxy": "HRESULT WINAPI ICallFrameWalker_OnWalkInterface_Proxy(ICallFrameWalker *This,REFIID iid,PVOID *ppvInterface,WINBOOL fIn,WINBOOL fOut);", "IInterfaceRelated_SetIID_Proxy": "HRESULT WINAPI IInterfaceRelated_SetIID_Proxy(IInterfaceRelated *This,REFIID iid);", "IInterfaceRelated_GetIID_Proxy": "HRESULT WINAPI IInterfaceRelated_GetIID_Proxy(IInterfaceRelated *This,IID *piid);", "CoGetInterceptor": "HRESULT WINAPI CoGetInterceptor(REFIID iidIntercepted,IUnknown *punkOuter,REFIID iid,void **ppv);", "CoGetInterceptorFromTypeInfo": "HRESULT WINAPI CoGetInterceptorFromTypeInfo(REFIID iidIntercepted,IUnknown *punkOuter,ITypeInfo *typeInfo,REFIID iid,void **ppv);", "AuthzAccessCheck": "AUTHZAPI WINBOOL WINAPI AuthzAccessCheck (DWORD Flags, AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext, PAUTHZ_ACCESS_REQUEST pRequest, AUTHZ_AUDIT_EVENT_HANDLE hAuditEvent, PSECURITY_DESCRIPTOR pSecurityDescriptor, PSECURITY_DESCRIPTOR *OptionalSecurityDescriptorArray, DWORD OptionalSecurityDescriptorCount, PAUTHZ_ACCESS_REPLY pReply, PAUTHZ_ACCESS_CHECK_RESULTS_HANDLE phAccessCheckResults);", "AuthzCachedAccessCheck": "AUTHZAPI WINBOOL WINAPI AuthzCachedAccessCheck (DWORD Flags, AUTHZ_ACCESS_CHECK_RESULTS_HANDLE hAccessCheckResults, PAUTHZ_ACCESS_REQUEST pRequest, AUTHZ_AUDIT_EVENT_HANDLE hAuditEvent, PAUTHZ_ACCESS_REPLY pReply);", "AuthzOpenObjectAudit": "AUTHZAPI WINBOOL WINAPI AuthzOpenObjectAudit (DWORD Flags, AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext, PAUTHZ_ACCESS_REQUEST pRequest, AUTHZ_AUDIT_EVENT_HANDLE hAuditEvent, PSECURITY_DESCRIPTOR pSecurityDescriptor, PSECURITY_DESCRIPTOR *OptionalSecurityDescriptorArray, DWORD OptionalSecurityDescriptorCount, PAUTHZ_ACCESS_REPLY pReply);", "AuthzFreeHandle": "AUTHZAPI WINBOOL WINAPI AuthzFreeHandle (AUTHZ_ACCESS_CHECK_RESULTS_HANDLE hAccessCheckResults);", "AuthzInitializeResourceManager": "AUTHZAPI WINBOOL WINAPI AuthzInitializeResourceManager (DWORD Flags, PFN_AUTHZ_DYNAMIC_ACCESS_CHECK pfnDynamicAccessCheck, PFN_AUTHZ_COMPUTE_DYNAMIC_GROUPS pfnComputeDynamicGroups, PFN_AUTHZ_FREE_DYNAMIC_GROUPS pfnFreeDynamicGroups, PCWSTR szResourceManagerName, PAUTHZ_RESOURCE_MANAGER_HANDLE phAuthzResourceManager);", "AuthzInitializeResourceManagerEx": "AUTHZAPI WINBOOL WINAPI AuthzInitializeResourceManagerEx (DWORD Flags, PAUTHZ_INIT_INFO pAuthzInitInfo, PAUTHZ_RESOURCE_MANAGER_HANDLE phAuthzResourceManager);", "AuthzInitializeRemoteResourceManager": "AUTHZAPI WINBOOL WINAPI AuthzInitializeRemoteResourceManager (PAUTHZ_RPC_INIT_INFO_CLIENT pRpcInitInfo, PAUTHZ_RESOURCE_MANAGER_HANDLE phAuthzResourceManager);", "AuthzFreeResourceManager": "AUTHZAPI WINBOOL WINAPI AuthzFreeResourceManager (AUTHZ_RESOURCE_MANAGER_HANDLE hAuthzResourceManager);", "AuthzInitializeContextFromToken": "AUTHZAPI WINBOOL WINAPI AuthzInitializeContextFromToken (DWORD Flags, HANDLE TokenHandle, AUTHZ_RESOURCE_MANAGER_HANDLE hAuthzResourceManager, PLARGE_INTEGER pExpirationTime, LUID Identifier, PVOID DynamicGroupArgs, PAUTHZ_CLIENT_CONTEXT_HANDLE phAuthzClientContext);", "AuthzInitializeContextFromSid": "AUTHZAPI WINBOOL WINAPI AuthzInitializeContextFromSid (DWORD Flags, PSID UserSid, AUTHZ_RESOURCE_MANAGER_HANDLE hAuthzResourceManager, PLARGE_INTEGER pExpirationTime, LUID Identifier, PVOID DynamicGroupArgs, PAUTHZ_CLIENT_CONTEXT_HANDLE phAuthzClientContext);", "AuthzInitializeContextFromAuthzContext": "AUTHZAPI WINBOOL WINAPI AuthzInitializeContextFromAuthzContext (DWORD Flags, AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext, PLARGE_INTEGER pExpirationTime, LUID Identifier, PVOID DynamicGroupArgs, PAUTHZ_CLIENT_CONTEXT_HANDLE phNewAuthzClientContext);", "AuthzInitializeCompoundContext": "AUTHZAPI WINBOOL WINAPI AuthzInitializeCompoundContext (AUTHZ_CLIENT_CONTEXT_HANDLE UserContext, AUTHZ_CLIENT_CONTEXT_HANDLE DeviceContext, PAUTHZ_CLIENT_CONTEXT_HANDLE phCompoundContext);", "AuthzAddSidsToContext": "AUTHZAPI WINBOOL WINAPI AuthzAddSidsToContext (AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext, PSID_AND_ATTRIBUTES Sids, DWORD SidCount, PSID_AND_ATTRIBUTES RestrictedSids, DWORD RestrictedSidCount, PAUTHZ_CLIENT_CONTEXT_HANDLE phNewAuthzClientContext);", "AuthzModifySecurityAttributes": "AUTHZAPI WINBOOL WINAPI AuthzModifySecurityAttributes (AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext, PAUTHZ_SECURITY_ATTRIBUTE_OPERATION pOperations, PAUTHZ_SECURITY_ATTRIBUTES_INFORMATION pAttributes);", "AuthzModifyClaims": "AUTHZAPI WINBOOL WINAPI AuthzModifyClaims (AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext, AUTHZ_CONTEXT_INFORMATION_CLASS ClaimClass, PAUTHZ_SECURITY_ATTRIBUTE_OPERATION pClaimOperations, PAUTHZ_SECURITY_ATTRIBUTES_INFORMATION pClaims);", "AuthzModifySids": "AUTHZAPI WINBOOL WINAPI AuthzModifySids (AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext, AUTHZ_CONTEXT_INFORMATION_CLASS SidClass, PAUTHZ_SID_OPERATION pSidOperations, PTOKEN_GROUPS pSids);", "AuthzSetAppContainerInformation": "AUTHZAPI WINBOOL WINAPI AuthzSetAppContainerInformation (AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext, PSID pAppContainerSid, DWORD CapabilityCount, PSID_AND_ATTRIBUTES pCapabilitySids);", "AuthzGetInformationFromContext": "AUTHZAPI WINBOOL WINAPI AuthzGetInformationFromContext (AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext, AUTHZ_CONTEXT_INFORMATION_CLASS InfoClass, DWORD BufferSize, PDWORD pSizeRequired, PVOID Buffer);", "AuthzFreeContext": "AUTHZAPI WINBOOL WINAPI AuthzFreeContext (AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext);", "AuthzInitializeObjectAccessAuditEvent": "AUTHZAPI WINBOOL WINAPI AuthzInitializeObjectAccessAuditEvent (DWORD Flags, AUTHZ_AUDIT_EVENT_TYPE_HANDLE hAuditEventType, PWSTR szOperationType, PWSTR szObjectType, PWSTR szObjectName, PWSTR szAdditionalInfo, PAUTHZ_AUDIT_EVENT_HANDLE phAuditEvent, DWORD dwAdditionalParameterCount,...);", "AuthzInitializeObjectAccessAuditEvent2": "AUTHZAPI WINBOOL WINAPI AuthzInitializeObjectAccessAuditEvent2 (DWORD Flags, AUTHZ_AUDIT_EVENT_TYPE_HANDLE hAuditEventType, PWSTR szOperationType, PWSTR szObjectType, PWSTR szObjectName, PWSTR szAdditionalInfo, PWSTR szAdditionalInfo2, PAUTHZ_AUDIT_EVENT_HANDLE phAuditEvent, DWORD dwAdditionalParameterCount,...);", "AuthzFreeAuditEvent": "AUTHZAPI WINBOOL WINAPI AuthzFreeAuditEvent (AUTHZ_AUDIT_EVENT_HANDLE hAuditEvent);", "AuthzEvaluateSacl": "AUTHZAPI WINBOOL WINAPI AuthzEvaluateSacl (AUTHZ_CLIENT_CONTEXT_HANDLE AuthzClientContext, PAUTHZ_ACCESS_REQUEST pRequest, PACL Sacl, ACCESS_MASK GrantedAccess, WINBOOL AccessGranted, PBOOL pbGenerateAudit);", "AuthzInstallSecurityEventSource": "AUTHZAPI WINBOOL WINAPI AuthzInstallSecurityEventSource (DWORD dwFlags, PAUTHZ_SOURCE_SCHEMA_REGISTRATION pRegistration);", "AuthzUninstallSecurityEventSource": "AUTHZAPI WINBOOL WINAPI AuthzUninstallSecurityEventSource (DWORD dwFlags, PCWSTR szEventSourceName);", "AuthzEnumerateSecurityEventSources": "AUTHZAPI WINBOOL WINAPI AuthzEnumerateSecurityEventSources (DWORD dwFlags, PAUTHZ_SOURCE_SCHEMA_REGISTRATION Buffer, PDWORD pdwCount, PDWORD pdwLength);", "AuthzRegisterSecurityEventSource": "AUTHZAPI WINBOOL WINAPI AuthzRegisterSecurityEventSource (DWORD dwFlags, PCWSTR szEventSourceName, PAUTHZ_SECURITY_EVENT_PROVIDER_HANDLE phEventProvider);", "AuthzUnregisterSecurityEventSource": "AUTHZAPI WINBOOL WINAPI AuthzUnregisterSecurityEventSource (DWORD dwFlags, PAUTHZ_SECURITY_EVENT_PROVIDER_HANDLE phEventProvider);", "AuthzReportSecurityEvent": "AUTHZAPI WINBOOL WINAPI AuthzReportSecurityEvent (DWORD dwFlags, AUTHZ_SECURITY_EVENT_PROVIDER_HANDLE hEventProvider, DWORD dwAuditId, PSID pUserSid, DWORD dwCount,...);", "AuthzReportSecurityEventFromParams": "AUTHZAPI WINBOOL WINAPI AuthzReportSecurityEventFromParams (DWORD dwFlags, AUTHZ_SECURITY_EVENT_PROVIDER_HANDLE hEventProvider, DWORD dwAuditId, PSID pUserSid, PAUDIT_PARAMS pParams);", "AuthzRegisterCapChangeNotification": "AUTHZAPI WINBOOL WINAPI AuthzRegisterCapChangeNotification (PAUTHZ_CAP_CHANGE_SUBSCRIPTION_HANDLE phCapChangeSubscription, LPTHREAD_START_ROUTINE pfnCapChangeCallback, PVOID pCallbackContext);", "AuthzUnregisterCapChangeNotification": "AUTHZAPI WINBOOL WINAPI AuthzUnregisterCapChangeNotification (AUTHZ_CAP_CHANGE_SUBSCRIPTION_HANDLE hCapChangeSubscription);", "AuthzFreeCentralAccessPolicyCache": "AUTHZAPI WINBOOL WINAPI AuthzFreeCentralAccessPolicyCache ();", "RtwqAddPeriodicCallback": "HRESULT WINAPI RtwqAddPeriodicCallback(RTWQPERIODICCALLBACK callback, IUnknown *context, DWORD *key);", "RtwqAllocateSerialWorkQueue": "HRESULT WINAPI RtwqAllocateSerialWorkQueue(DWORD target_queue, DWORD *queue);", "RtwqAllocateWorkQueue": "HRESULT WINAPI RtwqAllocateWorkQueue(RTWQ_WORKQUEUE_TYPE queue_type, DWORD *queue);", "RtwqBeginRegisterWorkQueueWithMMCSS": "HRESULT WINAPI RtwqBeginRegisterWorkQueueWithMMCSS(DWORD queue, const WCHAR *mmcss_class, DWORD taskid, LONG priority, IRtwqAsyncCallback *callback, IUnknown *state);", "RtwqBeginUnregisterWorkQueueWithMMCSS": "HRESULT WINAPI RtwqBeginUnregisterWorkQueueWithMMCSS(DWORD queue, IRtwqAsyncCallback *callback, IUnknown *state);", "RtwqCancelDeadline": "HRESULT WINAPI RtwqCancelDeadline(HANDLE request);", "RtwqCancelWorkItem": "HRESULT WINAPI RtwqCancelWorkItem(RTWQWORKITEM_KEY key);", "RtwqCreateAsyncResult": "HRESULT WINAPI RtwqCreateAsyncResult(IUnknown *object, IRtwqAsyncCallback *callback, IUnknown *state, IRtwqAsyncResult **result);", "RtwqEndRegisterWorkQueueWithMMCSS": "HRESULT WINAPI RtwqEndRegisterWorkQueueWithMMCSS(IRtwqAsyncResult *result, DWORD *taskid);", "RtwqGetWorkQueueMMCSSClass": "HRESULT WINAPI RtwqGetWorkQueueMMCSSClass(DWORD queue, WCHAR *mmcss_class, DWORD *length);", "RtwqGetWorkQueueMMCSSPriority": "HRESULT WINAPI RtwqGetWorkQueueMMCSSPriority(DWORD queue, LONG *priority);", "RtwqGetWorkQueueMMCSSTaskId": "HRESULT WINAPI RtwqGetWorkQueueMMCSSTaskId(DWORD queue, DWORD *taskid);", "RtwqInvokeCallback": "HRESULT WINAPI RtwqInvokeCallback(IRtwqAsyncResult *result);", "RtwqJoinWorkQueue": "HRESULT WINAPI RtwqJoinWorkQueue(DWORD queue, HANDLE hFile, HANDLE *cookie);", "RtwqLockPlatform": "HRESULT WINAPI RtwqLockPlatform(void);", "RtwqLockSharedWorkQueue": "HRESULT WINAPI RtwqLockSharedWorkQueue(const WCHAR *usageclass, LONG priority, DWORD *taskid, DWORD *queue);", "RtwqLockWorkQueue": "HRESULT WINAPI RtwqLockWorkQueue(DWORD queue);", "RtwqPutWaitingWorkItem": "HRESULT WINAPI RtwqPutWaitingWorkItem(HANDLE event, LONG priority, IRtwqAsyncResult *result, RTWQWORKITEM_KEY *key);", "RtwqPutWorkItem": "HRESULT WINAPI RtwqPutWorkItem(DWORD queue, LONG priority, IRtwqAsyncResult *result);", "RtwqRegisterPlatformEvents": "HRESULT WINAPI RtwqRegisterPlatformEvents(IRtwqPlatformEvents *events);", "RtwqRegisterPlatformWithMMCSS": "HRESULT WINAPI RtwqRegisterPlatformWithMMCSS(const WCHAR *mmcss_class, DWORD *taskid, LONG priority);", "RtwqRemovePeriodicCallback": "HRESULT WINAPI RtwqRemovePeriodicCallback(DWORD key);", "RtwqScheduleWorkItem": "HRESULT WINAPI RtwqScheduleWorkItem(IRtwqAsyncResult *result, INT64 timeout, RTWQWORKITEM_KEY *key);", "RtwqSetDeadline": "HRESULT WINAPI RtwqSetDeadline(DWORD queue_id, LONGLONG deadline, HANDLE *request);", "RtwqSetDeadline2": "HRESULT WINAPI RtwqSetDeadline2(DWORD queue_id, LONGLONG deadline, LONGLONG predeadline, HANDLE *request);", "RtwqSetLongRunning": "HRESULT WINAPI RtwqSetLongRunning(DWORD queue_id, WINBOOL enable);", "RtwqShutdown": "HRESULT WINAPI RtwqShutdown(void);", "RtwqStartup": "HRESULT WINAPI RtwqStartup(void);", "RtwqUnjoinWorkQueue": "HRESULT WINAPI RtwqUnjoinWorkQueue(DWORD queue, HANDLE cookie);", "RtwqUnlockPlatform": "HRESULT WINAPI RtwqUnlockPlatform(void);", "RtwqUnlockWorkQueue": "HRESULT WINAPI RtwqUnlockWorkQueue(DWORD queue);", "RtwqUnregisterPlatformEvents": "HRESULT WINAPI RtwqUnregisterPlatformEvents(IRtwqPlatformEvents *events);", "RtwqUnregisterPlatformFromMMCSS": "HRESULT WINAPI RtwqUnregisterPlatformFromMMCSS(void);", "RasAdminServerGetInfo": "DWORD WINAPI RasAdminServerGetInfo(const WCHAR *lpszServer,PRAS_SERVER_0 pRasServer0);", "RasAdminGetUserAccountServer": "DWORD WINAPI RasAdminGetUserAccountServer(const WCHAR *lpszDomain,const WCHAR *lpszServer,LPWSTR lpszUserAccountServer);", "RasAdminUserGetInfo": "DWORD WINAPI RasAdminUserGetInfo(const WCHAR *lpszUserAccountServer,const WCHAR *lpszUser,PRAS_USER_0 pRasUser0);", "RasAdminUserSetInfo": "DWORD WINAPI RasAdminUserSetInfo(const WCHAR *lpszUserAccountServer,const WCHAR *lpszUser,const PRAS_USER_0 pRasUser0);", "RasAdminPortEnum": "DWORD WINAPI RasAdminPortEnum(const WCHAR *lpszServer,PRAS_PORT_0 *ppRasPort0,WORD *pcEntriesRead);", "RasAdminPortGetInfo": "DWORD WINAPI RasAdminPortGetInfo(const WCHAR *lpszServer,const WCHAR *lpszPort,RAS_PORT_1 *pRasPort1,RAS_PORT_STATISTICS *pRasStats,RAS_PARAMETERS **ppRasParams);", "RasAdminPortClearStatistics": "DWORD WINAPI RasAdminPortClearStatistics(const WCHAR *lpszServer,const WCHAR *lpszPort);", "RasAdminPortDisconnect": "DWORD WINAPI RasAdminPortDisconnect(const WCHAR *lpszServer,const WCHAR *lpszPort);", "RasAdminFreeBuffer": "DWORD WINAPI RasAdminFreeBuffer(PVOID Pointer);", "RasAdminAcceptNewConnection": "WINBOOL WINAPI RasAdminAcceptNewConnection (RAS_PORT_1 *pRasPort1,RAS_PORT_STATISTICS *pRasStats,RAS_PARAMETERS *pRasParams);", "RasAdminConnectionHangupNotification": "VOID WINAPI RasAdminConnectionHangupNotification (RAS_PORT_1 *pRasPort1,RAS_PORT_STATISTICS *pRasStats,RAS_PARAMETERS *pRasParams);", "RasAdminGetIpAddressForUser": "DWORD WINAPI RasAdminGetIpAddressForUser (WCHAR *lpszUserName,WCHAR *lpszPortName,IPADDR *pipAddress,WINBOOL *bNotifyRelease);", "RasAdminReleaseIpAddress": "VOID WINAPI RasAdminReleaseIpAddress (WCHAR *lpszUserName,WCHAR *lpszPortName,IPADDR *pipAddress);", "CM_Add_Empty_Log_Conf": "CMAPI CONFIGRET WINAPI CM_Add_Empty_Log_Conf(PLOG_CONF plcLogConf,DEVINST dnDevInst,PRIORITY Priority,ULONG ulFlags);", "CM_Add_Empty_Log_Conf_Ex": "CMAPI CONFIGRET WINAPI CM_Add_Empty_Log_Conf_Ex(PLOG_CONF plcLogConf,DEVINST dnDevInst,PRIORITY Priority,ULONG ulFlags,HMACHINE hMachine);", "CM_Add_IDA": "CMAPI CONFIGRET WINAPI CM_Add_IDA(DEVINST dnDevInst,PSTR pszID,ULONG ulFlags);", "CM_Add_IDW": "CMAPI CONFIGRET WINAPI CM_Add_IDW(DEVINST dnDevInst,PWSTR pszID,ULONG ulFlags);", "CM_Add_ID_ExA": "CMAPI CONFIGRET WINAPI CM_Add_ID_ExA(DEVINST dnDevInst,PSTR pszID,ULONG ulFlags,HMACHINE hMachine);", "CM_Add_ID_ExW": "CMAPI CONFIGRET WINAPI CM_Add_ID_ExW(DEVINST dnDevInst,PWSTR pszID,ULONG ulFlags,HMACHINE hMachine);", "CM_Add_Range": "CMAPI CONFIGRET WINAPI CM_Add_Range(DWORDLONG ullStartValue,DWORDLONG ullEndValue,RANGE_LIST rlh,ULONG ulFlags);", "CM_Add_Res_Des": "CMAPI CONFIGRET WINAPI CM_Add_Res_Des(PRES_DES prdResDes,LOG_CONF lcLogConf,RESOURCEID ResourceID,PCVOID ResourceData,ULONG ResourceLen,ULONG ulFlags);", "CM_Add_Res_Des_Ex": "CMAPI CONFIGRET WINAPI CM_Add_Res_Des_Ex(PRES_DES prdResDes,LOG_CONF lcLogConf,RESOURCEID ResourceID,PCVOID ResourceData,ULONG ResourceLen,ULONG ulFlags,HMACHINE hMachine);", "CM_Connect_MachineA": "CMAPI CONFIGRET WINAPI CM_Connect_MachineA(PCSTR UNCServerName,PHMACHINE phMachine);", "CM_Connect_MachineW": "CMAPI CONFIGRET WINAPI CM_Connect_MachineW(PCWSTR UNCServerName,PHMACHINE phMachine);", "CM_Create_DevNodeA": "CMAPI CONFIGRET WINAPI CM_Create_DevNodeA(PDEVINST pdnDevInst,DEVINSTID_A pDeviceID,DEVINST dnParent,ULONG ulFlags);", "CM_Create_DevNodeW": "CMAPI CONFIGRET WINAPI CM_Create_DevNodeW(PDEVINST pdnDevInst,DEVINSTID_W pDeviceID,DEVINST dnParent,ULONG ulFlags);", "CM_Create_DevNode_ExA": "CMAPI CONFIGRET WINAPI CM_Create_DevNode_ExA(PDEVINST pdnDevInst,DEVINSTID_A pDeviceID,DEVINST dnParent,ULONG ulFlags,HANDLE hMachine);", "CM_Create_DevNode_ExW": "CMAPI CONFIGRET WINAPI CM_Create_DevNode_ExW(PDEVINST pdnDevInst,DEVINSTID_W pDeviceID,DEVINST dnParent,ULONG ulFlags,HANDLE hMachine);", "CM_Create_Range_List": "CMAPI CONFIGRET WINAPI CM_Create_Range_List(PRANGE_LIST prlh,ULONG ulFlags);", "CM_Delete_Class_Key": "CMAPI CONFIGRET WINAPI CM_Delete_Class_Key(LPGUID ClassGuid,ULONG ulFlags);", "CM_Delete_Class_Key_Ex": "CMAPI CONFIGRET WINAPI CM_Delete_Class_Key_Ex(LPGUID ClassGuid,ULONG ulFlags,HANDLE hMachine);", "CM_Delete_DevNode_Key": "CMAPI CONFIGRET WINAPI CM_Delete_DevNode_Key(DEVNODE dnDevNode,ULONG ulHardwareProfile,ULONG ulFlags);", "CM_Delete_DevNode_Key_Ex": "CMAPI CONFIGRET WINAPI CM_Delete_DevNode_Key_Ex(DEVNODE dnDevNode,ULONG ulHardwareProfile,ULONG ulFlags,HANDLE hMachine);", "CM_Delete_Range": "CMAPI CONFIGRET WINAPI CM_Delete_Range(DWORDLONG ullStartValue,DWORDLONG ullEndValue,RANGE_LIST rlh,ULONG ulFlags);", "CM_Detect_Resource_Conflict": "CMAPI CONFIGRET WINAPI CM_Detect_Resource_Conflict(DEVINST dnDevInst,RESOURCEID ResourceID,PCVOID ResourceData,ULONG ResourceLen,PBOOL pbConflictDetected,ULONG ulFlags);", "CM_Detect_Resource_Conflict_Ex": "CMAPI CONFIGRET WINAPI CM_Detect_Resource_Conflict_Ex(DEVINST dnDevInst,RESOURCEID ResourceID,PCVOID ResourceData,ULONG ResourceLen,PBOOL pbConflictDetected,ULONG ulFlags,HMACHINE hMachine);", "CM_Disable_DevNode": "CMAPI CONFIGRET WINAPI CM_Disable_DevNode(DEVINST dnDevInst,ULONG ulFlags);", "CM_Disable_DevNode_Ex": "CMAPI CONFIGRET WINAPI CM_Disable_DevNode_Ex(DEVINST dnDevInst,ULONG ulFlags,HMACHINE hMachine);", "CM_Disconnect_Machine": "CMAPI CONFIGRET WINAPI CM_Disconnect_Machine(HMACHINE hMachine);", "CM_Dup_Range_List": "CMAPI CONFIGRET WINAPI CM_Dup_Range_List(RANGE_LIST rlhOld,RANGE_LIST rlhNew,ULONG ulFlags);", "CM_Enable_DevNode": "CMAPI CONFIGRET WINAPI CM_Enable_DevNode(DEVINST dnDevInst,ULONG ulFlags);", "CM_Enable_DevNode_Ex": "CMAPI CONFIGRET WINAPI CM_Enable_DevNode_Ex(DEVINST dnDevInst,ULONG ulFlags,HMACHINE hMachine);", "CM_Enumerate_Classes": "CMAPI CONFIGRET WINAPI CM_Enumerate_Classes(ULONG ulClassIndex,LPGUID ClassGuid,ULONG ulFlags);", "CM_Enumerate_Classes_Ex": "CMAPI CONFIGRET WINAPI CM_Enumerate_Classes_Ex(ULONG ulClassIndex,LPGUID ClassGuid,ULONG ulFlags,HMACHINE hMachine);", "CM_Enumerate_EnumeratorsA": "CMAPI CONFIGRET WINAPI CM_Enumerate_EnumeratorsA(ULONG ulEnumIndex,PCHAR Buffer,PULONG pulLength,ULONG ulFlags);", "CM_Enumerate_EnumeratorsW": "CMAPI CONFIGRET WINAPI CM_Enumerate_EnumeratorsW(ULONG ulEnumIndex,PWCHAR Buffer,PULONG pulLength,ULONG ulFlags);", "CM_Enumerate_Enumerators_ExA": "CMAPI CONFIGRET WINAPI CM_Enumerate_Enumerators_ExA(ULONG ulEnumIndex,PCHAR Buffer,PULONG pulLength,ULONG ulFlags,HMACHINE hMachine);", "CM_Enumerate_Enumerators_ExW": "CMAPI CONFIGRET WINAPI CM_Enumerate_Enumerators_ExW(ULONG ulEnumIndex,PWCHAR Buffer,PULONG pulLength,ULONG ulFlags,HMACHINE hMachine);", "CM_Find_Range": "CMAPI CONFIGRET WINAPI CM_Find_Range(PDWORDLONG pullStart,DWORDLONG ullStart,ULONG ulLength,DWORDLONG ullAlignment,DWORDLONG ullEnd,RANGE_LIST rlh,ULONG ulFlags);", "CM_First_Range": "CMAPI CONFIGRET WINAPI CM_First_Range(RANGE_LIST rlh,PDWORDLONG pullStart,PDWORDLONG pullEnd,PRANGE_ELEMENT preElement,ULONG ulFlags);", "CM_Free_Log_Conf": "CMAPI CONFIGRET WINAPI CM_Free_Log_Conf(LOG_CONF lcLogConfToBeFreed,ULONG ulFlags);", "CM_Free_Log_Conf_Ex": "CMAPI CONFIGRET WINAPI CM_Free_Log_Conf_Ex(LOG_CONF lcLogConfToBeFreed,ULONG ulFlags,HMACHINE hMachine);", "CM_Free_Log_Conf_Handle": "CMAPI CONFIGRET WINAPI CM_Free_Log_Conf_Handle(LOG_CONF lcLogConf);", "CM_Free_Range_List": "CMAPI CONFIGRET WINAPI CM_Free_Range_List(RANGE_LIST rlh,ULONG ulFlags);", "CM_Free_Res_Des": "CMAPI CONFIGRET WINAPI CM_Free_Res_Des(PRES_DES prdResDes,RES_DES rdResDes,ULONG ulFlags);", "CM_Free_Res_Des_Ex": "CMAPI CONFIGRET WINAPI CM_Free_Res_Des_Ex(PRES_DES prdResDes,RES_DES rdResDes,ULONG ulFlags,HMACHINE hMachine);", "CM_Free_Res_Des_Handle": "CMAPI CONFIGRET WINAPI CM_Free_Res_Des_Handle(RES_DES rdResDes);", "CM_Get_Child": "CMAPI CONFIGRET WINAPI CM_Get_Child(PDEVINST pdnDevInst,DEVINST dnDevInst,ULONG ulFlags);", "CM_Get_Child_Ex": "CMAPI CONFIGRET WINAPI CM_Get_Child_Ex(PDEVINST pdnDevInst,DEVINST dnDevInst,ULONG ulFlags,HMACHINE hMachine);", "CM_Get_Class_NameA": "CMAPI CONFIGRET WINAPI CM_Get_Class_NameA(LPGUID ClassGuid,PCHAR Buffer,PULONG pulLength,ULONG ulFlags);", "CM_Get_Class_NameW": "CMAPI CONFIGRET WINAPI CM_Get_Class_NameW(LPGUID ClassGuid,PWCHAR Buffer,PULONG pulLength,ULONG ulFlags);", "CM_Get_Class_Name_ExA": "CMAPI CONFIGRET WINAPI CM_Get_Class_Name_ExA(LPGUID ClassGuid,PCHAR Buffer,PULONG pulLength,ULONG ulFlags,HMACHINE hMachine);", "CM_Get_Class_Name_ExW": "CMAPI CONFIGRET WINAPI CM_Get_Class_Name_ExW(LPGUID ClassGuid,PWCHAR Buffer,PULONG pulLength,ULONG ulFlags,HMACHINE hMachine);", "CM_Get_Class_Key_NameA": "CMAPI CONFIGRET WINAPI CM_Get_Class_Key_NameA(LPGUID ClassGuid,LPSTR pszKeyName,PULONG pulLength,ULONG ulFlags);", "CM_Get_Class_Key_NameW": "CMAPI CONFIGRET WINAPI CM_Get_Class_Key_NameW(LPGUID ClassGuid,LPWSTR pszKeyName,PULONG pulLength,ULONG ulFlags);", "CM_Get_Class_Key_Name_ExA": "CMAPI CONFIGRET WINAPI CM_Get_Class_Key_Name_ExA(LPGUID ClassGuid,LPSTR pszKeyName,PULONG pulLength,ULONG ulFlags,HMACHINE hMachine);", "CM_Get_Class_Key_Name_ExW": "CMAPI CONFIGRET WINAPI CM_Get_Class_Key_Name_ExW(LPGUID ClassGuid,LPWSTR pszKeyName,PULONG pulLength,ULONG ulFlags,HMACHINE hMachine);", "CM_Get_Depth": "CMAPI CONFIGRET WINAPI CM_Get_Depth(PULONG pulDepth,DEVINST dnDevInst,ULONG ulFlags);", "CM_Get_Depth_Ex": "CMAPI CONFIGRET WINAPI CM_Get_Depth_Ex(PULONG pulDepth,DEVINST dnDevInst,ULONG ulFlags,HMACHINE hMachine);", "CM_Get_Device_IDA": "CMAPI CONFIGRET WINAPI CM_Get_Device_IDA(DEVINST dnDevInst,PCHAR Buffer,ULONG BufferLen,ULONG ulFlags);", "CM_Get_Device_IDW": "CMAPI CONFIGRET WINAPI CM_Get_Device_IDW(DEVINST dnDevInst,PWCHAR Buffer,ULONG BufferLen,ULONG ulFlags);", "CM_Get_Device_ID_ExA": "CMAPI CONFIGRET WINAPI CM_Get_Device_ID_ExA(DEVINST dnDevInst,PCHAR Buffer,ULONG BufferLen,ULONG ulFlags,HMACHINE hMachine);", "CM_Get_Device_ID_ExW": "CMAPI CONFIGRET WINAPI CM_Get_Device_ID_ExW(DEVINST dnDevInst,PWCHAR Buffer,ULONG BufferLen,ULONG ulFlags,HMACHINE hMachine);", "CM_Get_Device_ID_ListA": "CMAPI CONFIGRET WINAPI CM_Get_Device_ID_ListA(PCSTR pszFilter,PCHAR Buffer,ULONG BufferLen,ULONG ulFlags);", "CM_Get_Device_ID_ListW": "CMAPI CONFIGRET WINAPI CM_Get_Device_ID_ListW(PCWSTR pszFilter,PWCHAR Buffer,ULONG BufferLen,ULONG ulFlags);", "CM_Get_Device_ID_List_ExA": "CMAPI CONFIGRET WINAPI CM_Get_Device_ID_List_ExA(PCSTR pszFilter,PCHAR Buffer,ULONG BufferLen,ULONG ulFlags,HMACHINE hMachine);", "CM_Get_Device_ID_List_ExW": "CMAPI CONFIGRET WINAPI CM_Get_Device_ID_List_ExW(PCWSTR pszFilter,PWCHAR Buffer,ULONG BufferLen,ULONG ulFlags,HMACHINE hMachine);", "CM_Get_Device_ID_List_SizeA": "CMAPI CONFIGRET WINAPI CM_Get_Device_ID_List_SizeA(PULONG pulLen,PCSTR pszFilter,ULONG ulFlags);", "CM_Get_Device_ID_List_SizeW": "CMAPI CONFIGRET WINAPI CM_Get_Device_ID_List_SizeW(PULONG pulLen,PCWSTR pszFilter,ULONG ulFlags);", "CM_Get_Device_ID_List_Size_ExA": "CMAPI CONFIGRET WINAPI CM_Get_Device_ID_List_Size_ExA(PULONG pulLen,PCSTR pszFilter,ULONG ulFlags,HMACHINE hMachine);", "CM_Get_Device_ID_List_Size_ExW": "CMAPI CONFIGRET WINAPI CM_Get_Device_ID_List_Size_ExW(PULONG pulLen,PCWSTR pszFilter,ULONG ulFlags,HMACHINE hMachine);", "CM_Get_Device_ID_Size": "CMAPI CONFIGRET WINAPI CM_Get_Device_ID_Size(PULONG pulLen,DEVINST dnDevInst,ULONG ulFlags);", "CM_Get_Device_ID_Size_Ex": "CMAPI CONFIGRET WINAPI CM_Get_Device_ID_Size_Ex(PULONG pulLen,DEVINST dnDevInst,ULONG ulFlags,HMACHINE hMachine);", "CM_Get_DevNode_Registry_PropertyA": "CMAPI CONFIGRET WINAPI CM_Get_DevNode_Registry_PropertyA(DEVINST dnDevInst,ULONG ulProperty,PULONG pulRegDataType,PVOID Buffer,PULONG pulLength,ULONG ulFlags);", "CM_Get_DevNode_Registry_PropertyW": "CMAPI CONFIGRET WINAPI CM_Get_DevNode_Registry_PropertyW(DEVINST dnDevInst,ULONG ulProperty,PULONG pulRegDataType,PVOID Buffer,PULONG pulLength,ULONG ulFlags);", "CM_Get_DevNode_Registry_Property_ExA": "CMAPI CONFIGRET WINAPI CM_Get_DevNode_Registry_Property_ExA(DEVINST dnDevInst,ULONG ulProperty,PULONG pulRegDataType,PVOID Buffer,PULONG pulLength,ULONG ulFlags,HMACHINE hMachine);", "CM_Get_DevNode_Registry_Property_ExW": "CMAPI CONFIGRET WINAPI CM_Get_DevNode_Registry_Property_ExW(DEVINST dnDevInst,ULONG ulProperty,PULONG pulRegDataType,PVOID Buffer,PULONG pulLength,ULONG ulFlags,HMACHINE hMachine);", "CM_Get_DevNode_Custom_PropertyA": "CMAPI CONFIGRET WINAPI CM_Get_DevNode_Custom_PropertyA(DEVINST dnDevInst,PCSTR pszCustomPropertyName,PULONG pulRegDataType,PVOID Buffer,PULONG pulLength,ULONG ulFlags);", "CM_Get_DevNode_Custom_PropertyW": "CMAPI CONFIGRET WINAPI CM_Get_DevNode_Custom_PropertyW(DEVINST dnDevInst,PCWSTR pszCustomPropertyName,PULONG pulRegDataType,PVOID Buffer,PULONG pulLength,ULONG ulFlags);", "CM_Get_DevNode_Custom_Property_ExA": "CMAPI CONFIGRET WINAPI CM_Get_DevNode_Custom_Property_ExA(DEVINST dnDevInst,PCSTR pszCustomPropertyName,PULONG pulRegDataType,PVOID Buffer,PULONG pulLength,ULONG ulFlags,HMACHINE hMachine);", "CM_Get_DevNode_Custom_Property_ExW": "CMAPI CONFIGRET WINAPI CM_Get_DevNode_Custom_Property_ExW(DEVINST dnDevInst,PCWSTR pszCustomPropertyName,PULONG pulRegDataType,PVOID Buffer,PULONG pulLength,ULONG ulFlags,HMACHINE hMachine);", "CM_Get_DevNode_PropertyW": "CMAPI CONFIGRET WINAPI CM_Get_DevNode_PropertyW(DEVINST dnDevInst, const DEVPROPKEY *PropertyKey, DEVPROPTYPE *PropertyType, PBYTE PropertyBuffer, PULONG PropertyBufferSize, ULONG ulFlags);", "CM_Get_DevNode_Status": "CMAPI CONFIGRET WINAPI CM_Get_DevNode_Status(PULONG pulStatus,PULONG pulProblemNumber,DEVINST dnDevInst,ULONG ulFlags);", "CM_Get_DevNode_Status_Ex": "CMAPI CONFIGRET WINAPI CM_Get_DevNode_Status_Ex(PULONG pulStatus,PULONG pulProblemNumber,DEVINST dnDevInst,ULONG ulFlags,HMACHINE hMachine);", "CM_Get_First_Log_Conf": "CMAPI CONFIGRET WINAPI CM_Get_First_Log_Conf(PLOG_CONF plcLogConf,DEVINST dnDevInst,ULONG ulFlags);", "CM_Get_First_Log_Conf_Ex": "CMAPI CONFIGRET WINAPI CM_Get_First_Log_Conf_Ex(PLOG_CONF plcLogConf,DEVINST dnDevInst,ULONG ulFlags,HMACHINE hMachine);", "CM_Get_Global_State": "CMAPI CONFIGRET WINAPI CM_Get_Global_State(PULONG pulState,ULONG ulFlags);", "CM_Get_Global_State_Ex": "CMAPI CONFIGRET WINAPI CM_Get_Global_State_Ex(PULONG pulState,ULONG ulFlags,HMACHINE hMachine);", "CM_Get_Hardware_Profile_InfoA": "CMAPI CONFIGRET WINAPI CM_Get_Hardware_Profile_InfoA(ULONG ulIndex,PHWPROFILEINFO_A pHWProfileInfo,ULONG ulFlags);", "CM_Get_Hardware_Profile_Info_ExA": "CMAPI CONFIGRET WINAPI CM_Get_Hardware_Profile_Info_ExA(ULONG ulIndex,PHWPROFILEINFO_A pHWProfileInfo,ULONG ulFlags,HMACHINE hMachine);", "CM_Get_Hardware_Profile_InfoW": "CMAPI CONFIGRET WINAPI CM_Get_Hardware_Profile_InfoW(ULONG ulIndex,PHWPROFILEINFO_W pHWProfileInfo,ULONG ulFlags);", "CM_Get_Hardware_Profile_Info_ExW": "CMAPI CONFIGRET WINAPI CM_Get_Hardware_Profile_Info_ExW(ULONG ulIndex,PHWPROFILEINFO_W pHWProfileInfo,ULONG ulFlags,HMACHINE hMachine);", "CM_Get_HW_Prof_FlagsA": "CMAPI CONFIGRET WINAPI CM_Get_HW_Prof_FlagsA(DEVINSTID_A szDevInstName,ULONG ulHardwareProfile,PULONG pulValue,ULONG ulFlags);", "CM_Get_HW_Prof_FlagsW": "CMAPI CONFIGRET WINAPI CM_Get_HW_Prof_FlagsW(DEVINSTID_W szDevInstName,ULONG ulHardwareProfile,PULONG pulValue,ULONG ulFlags);", "CM_Get_HW_Prof_Flags_ExA": "CMAPI CONFIGRET WINAPI CM_Get_HW_Prof_Flags_ExA(DEVINSTID_A szDevInstName,ULONG ulHardwareProfile,PULONG pulValue,ULONG ulFlags,HMACHINE hMachine);", "CM_Get_HW_Prof_Flags_ExW": "CMAPI CONFIGRET WINAPI CM_Get_HW_Prof_Flags_ExW(DEVINSTID_W szDevInstName,ULONG ulHardwareProfile,PULONG pulValue,ULONG ulFlags,HMACHINE hMachine);", "CM_Get_Device_Interface_AliasA": "CMAPI CONFIGRET WINAPI CM_Get_Device_Interface_AliasA(LPCSTR pszDeviceInterface,LPGUID AliasInterfaceGuid,LPSTR pszAliasDeviceInterface,PULONG pulLength,ULONG ulFlags);", "CM_Get_Device_Interface_AliasW": "CMAPI CONFIGRET WINAPI CM_Get_Device_Interface_AliasW(LPCWSTR pszDeviceInterface,LPGUID AliasInterfaceGuid,LPWSTR pszAliasDeviceInterface,PULONG pulLength,ULONG ulFlags);", "CM_Get_Device_Interface_Alias_ExA": "CMAPI CONFIGRET WINAPI CM_Get_Device_Interface_Alias_ExA(LPCSTR pszDeviceInterface,LPGUID AliasInterfaceGuid,LPSTR pszAliasDeviceInterface,PULONG pulLength,ULONG ulFlags,HMACHINE hMachine);", "CM_Get_Device_Interface_Alias_ExW": "CMAPI CONFIGRET WINAPI CM_Get_Device_Interface_Alias_ExW(LPCWSTR pszDeviceInterface,LPGUID AliasInterfaceGuid,LPWSTR pszAliasDeviceInterface,PULONG pulLength,ULONG ulFlags,HMACHINE hMachine);", "CM_Get_Device_Interface_List_ExA": "CMAPI CONFIGRET WINAPI CM_Get_Device_Interface_List_ExA(LPGUID InterfaceClassGuid,DEVINSTID_A pDeviceID,PCHAR Buffer,ULONG BufferLen,ULONG ulFlags,HMACHINE hMachine);", "CM_Get_Device_Interface_List_ExW": "CMAPI CONFIGRET WINAPI CM_Get_Device_Interface_List_ExW(LPGUID InterfaceClassGuid,DEVINSTID_W pDeviceID,PWCHAR Buffer,ULONG BufferLen,ULONG ulFlags,HMACHINE hMachine);", "CM_Get_Device_Interface_List_Size_ExA": "CMAPI CONFIGRET WINAPI CM_Get_Device_Interface_List_Size_ExA(PULONG pulLen,LPGUID InterfaceClassGuid,DEVINSTID_A pDeviceID,ULONG ulFlags,HMACHINE hMachine);", "CM_Get_Device_Interface_List_Size_ExW": "CMAPI CONFIGRET WINAPI CM_Get_Device_Interface_List_Size_ExW(PULONG pulLen,LPGUID InterfaceClassGuid,DEVINSTID_W pDeviceID,ULONG ulFlags,HMACHINE hMachine);", "CM_Get_Log_Conf_Priority": "CMAPI CONFIGRET WINAPI CM_Get_Log_Conf_Priority(LOG_CONF lcLogConf,PPRIORITY pPriority,ULONG ulFlags);", "CM_Get_Log_Conf_Priority_Ex": "CMAPI CONFIGRET WINAPI CM_Get_Log_Conf_Priority_Ex(LOG_CONF lcLogConf,PPRIORITY pPriority,ULONG ulFlags,HMACHINE hMachine);", "CM_Get_Next_Log_Conf": "CMAPI CONFIGRET WINAPI CM_Get_Next_Log_Conf(PLOG_CONF plcLogConf,LOG_CONF lcLogConf,ULONG ulFlags);", "CM_Get_Next_Log_Conf_Ex": "CMAPI CONFIGRET WINAPI CM_Get_Next_Log_Conf_Ex(PLOG_CONF plcLogConf,LOG_CONF lcLogConf,ULONG ulFlags,HMACHINE hMachine);", "CM_Get_Parent": "CMAPI CONFIGRET WINAPI CM_Get_Parent(PDEVINST pdnDevInst,DEVINST dnDevInst,ULONG ulFlags);", "CM_Get_Parent_Ex": "CMAPI CONFIGRET WINAPI CM_Get_Parent_Ex(PDEVINST pdnDevInst,DEVINST dnDevInst,ULONG ulFlags,HMACHINE hMachine);", "CM_Get_Res_Des_Data": "CMAPI CONFIGRET WINAPI CM_Get_Res_Des_Data(RES_DES rdResDes,PVOID Buffer,ULONG BufferLen,ULONG ulFlags);", "CM_Get_Res_Des_Data_Ex": "CMAPI CONFIGRET WINAPI CM_Get_Res_Des_Data_Ex(RES_DES rdResDes,PVOID Buffer,ULONG BufferLen,ULONG ulFlags,HMACHINE hMachine);", "CM_Get_Res_Des_Data_Size": "CMAPI CONFIGRET WINAPI CM_Get_Res_Des_Data_Size(PULONG pulSize,RES_DES rdResDes,ULONG ulFlags);", "CM_Get_Res_Des_Data_Size_Ex": "CMAPI CONFIGRET WINAPI CM_Get_Res_Des_Data_Size_Ex(PULONG pulSize,RES_DES rdResDes,ULONG ulFlags,HMACHINE hMachine);", "CM_Get_Sibling": "CMAPI CONFIGRET WINAPI CM_Get_Sibling(PDEVINST pdnDevInst,DEVINST DevInst,ULONG ulFlags);", "CM_Get_Sibling_Ex": "CMAPI CONFIGRET WINAPI CM_Get_Sibling_Ex(PDEVINST pdnDevInst,DEVINST DevInst,ULONG ulFlags,HMACHINE hMachine);", "CM_Get_Version": "CMAPI WORD WINAPI CM_Get_Version(VOID);", "CM_Get_Version_Ex": "CMAPI WORD WINAPI CM_Get_Version_Ex(HMACHINE hMachine);", "CM_Is_Version_Available": "CMAPI WINBOOL WINAPI CM_Is_Version_Available(WORD wVersion);", "CM_Is_Version_Available_Ex": "CMAPI WINBOOL WINAPI CM_Is_Version_Available_Ex(WORD wVersion,HMACHINE hMachine);", "CM_Intersect_Range_List": "CMAPI CONFIGRET WINAPI CM_Intersect_Range_List(RANGE_LIST rlhOld1,RANGE_LIST rlhOld2,RANGE_LIST rlhNew,ULONG ulFlags);", "CM_Invert_Range_List": "CMAPI CONFIGRET WINAPI CM_Invert_Range_List(RANGE_LIST rlhOld,RANGE_LIST rlhNew,DWORDLONG ullMaxValue,ULONG ulFlags);", "CM_Locate_DevNodeA": "CMAPI CONFIGRET WINAPI CM_Locate_DevNodeA(PDEVINST pdnDevInst,DEVINSTID_A pDeviceID,ULONG ulFlags);", "CM_Locate_DevNodeW": "CMAPI CONFIGRET WINAPI CM_Locate_DevNodeW(PDEVINST pdnDevInst,DEVINSTID_W pDeviceID,ULONG ulFlags);", "CM_Locate_DevNode_ExA": "CMAPI CONFIGRET WINAPI CM_Locate_DevNode_ExA(PDEVINST pdnDevInst,DEVINSTID_A pDeviceID,ULONG ulFlags,HMACHINE hMachine);", "CM_Locate_DevNode_ExW": "CMAPI CONFIGRET WINAPI CM_Locate_DevNode_ExW(PDEVINST pdnDevInst,DEVINSTID_W pDeviceID,ULONG ulFlags,HMACHINE hMachine);", "CM_Merge_Range_List": "CMAPI CONFIGRET WINAPI CM_Merge_Range_List(RANGE_LIST rlhOld1,RANGE_LIST rlhOld2,RANGE_LIST rlhNew,ULONG ulFlags);", "CM_Modify_Res_Des": "CMAPI CONFIGRET WINAPI CM_Modify_Res_Des(PRES_DES prdResDes,RES_DES rdResDes,RESOURCEID ResourceID,PCVOID ResourceData,ULONG ResourceLen,ULONG ulFlags);", "CM_Modify_Res_Des_Ex": "CMAPI CONFIGRET WINAPI CM_Modify_Res_Des_Ex(PRES_DES prdResDes,RES_DES rdResDes,RESOURCEID ResourceID,PCVOID ResourceData,ULONG ResourceLen,ULONG ulFlags,HMACHINE hMachine);", "CM_Move_DevNode": "CMAPI CONFIGRET WINAPI CM_Move_DevNode(DEVINST dnFromDevInst,DEVINST dnToDevInst,ULONG ulFlags);", "CM_Move_DevNode_Ex": "CMAPI CONFIGRET WINAPI CM_Move_DevNode_Ex(DEVINST dnFromDevInst,DEVINST dnToDevInst,ULONG ulFlags,HMACHINE hMachine);", "CM_Next_Range": "CMAPI CONFIGRET WINAPI CM_Next_Range(PRANGE_ELEMENT preElement,PDWORDLONG pullStart,PDWORDLONG pullEnd,ULONG ulFlags);", "CM_Get_Next_Res_Des": "CMAPI CONFIGRET WINAPI CM_Get_Next_Res_Des(PRES_DES prdResDes,RES_DES rdResDes,RESOURCEID ForResource,PRESOURCEID pResourceID,ULONG ulFlags);", "CM_Get_Next_Res_Des_Ex": "CMAPI CONFIGRET WINAPI CM_Get_Next_Res_Des_Ex(PRES_DES prdResDes,RES_DES rdResDes,RESOURCEID ForResource,PRESOURCEID pResourceID,ULONG ulFlags,HMACHINE hMachine);", "CM_Open_Class_KeyA": "CMAPI CONFIGRET WINAPI CM_Open_Class_KeyA(LPGUID ClassGuid,LPCSTR pszClassName,REGSAM samDesired,REGDISPOSITION Disposition,PHKEY phkClass,ULONG ulFlags);", "CM_Open_Class_KeyW": "CMAPI CONFIGRET WINAPI CM_Open_Class_KeyW(LPGUID ClassGuid,LPCWSTR pszClassName,REGSAM samDesired,REGDISPOSITION Disposition,PHKEY phkClass,ULONG ulFlags);", "CM_Open_Class_Key_ExA": "CMAPI CONFIGRET WINAPI CM_Open_Class_Key_ExA(LPGUID pszClassGuid,LPCSTR pszClassName,REGSAM samDesired,REGDISPOSITION Disposition,PHKEY phkClass,ULONG ulFlags,HMACHINE hMachine);", "CM_Open_Class_Key_ExW": "CMAPI CONFIGRET WINAPI CM_Open_Class_Key_ExW(LPGUID pszClassGuid,LPCWSTR pszClassName,REGSAM samDesired,REGDISPOSITION Disposition,PHKEY phkClass,ULONG ulFlags,HMACHINE hMachine);", "CM_Open_DevNode_Key": "CMAPI CONFIGRET WINAPI CM_Open_DevNode_Key(DEVINST dnDevNode,REGSAM samDesired,ULONG ulHardwareProfile,REGDISPOSITION Disposition,PHKEY phkDevice,ULONG ulFlags);", "CM_Open_DevNode_Key_Ex": "CMAPI CONFIGRET WINAPI CM_Open_DevNode_Key_Ex(DEVINST dnDevNode,REGSAM samDesired,ULONG ulHardwareProfile,REGDISPOSITION Disposition,PHKEY phkDevice,ULONG ulFlags,HMACHINE hMachine);", "CM_Query_Arbitrator_Free_Data": "CMAPI CONFIGRET WINAPI CM_Query_Arbitrator_Free_Data(PVOID pData,ULONG DataLen,DEVINST dnDevInst,RESOURCEID ResourceID,ULONG ulFlags);", "CM_Query_Arbitrator_Free_Data_Ex": "CMAPI CONFIGRET WINAPI CM_Query_Arbitrator_Free_Data_Ex(PVOID pData,ULONG DataLen,DEVINST dnDevInst,RESOURCEID ResourceID,ULONG ulFlags,HMACHINE hMachine);", "CM_Query_Arbitrator_Free_Size": "CMAPI CONFIGRET WINAPI CM_Query_Arbitrator_Free_Size(PULONG pulSize,DEVINST dnDevInst,RESOURCEID ResourceID,ULONG ulFlags);", "CM_Query_Arbitrator_Free_Size_Ex": "CMAPI CONFIGRET WINAPI CM_Query_Arbitrator_Free_Size_Ex(PULONG pulSize,DEVINST dnDevInst,RESOURCEID ResourceID,ULONG ulFlags,HMACHINE hMachine);", "CM_Query_Remove_SubTree": "CMAPI CONFIGRET WINAPI CM_Query_Remove_SubTree(DEVINST dnAncestor,ULONG ulFlags);", "CM_Query_Remove_SubTree_Ex": "CMAPI CONFIGRET WINAPI CM_Query_Remove_SubTree_Ex(DEVINST dnAncestor,ULONG ulFlags,HMACHINE hMachine);", "CM_Query_And_Remove_SubTreeA": "CMAPI CONFIGRET WINAPI CM_Query_And_Remove_SubTreeA(DEVINST dnAncestor,PPNP_VETO_TYPE pVetoType,LPSTR pszVetoName,ULONG ulNameLength,ULONG ulFlags);", "CM_Query_And_Remove_SubTree_ExA": "CMAPI CONFIGRET WINAPI CM_Query_And_Remove_SubTree_ExA(DEVINST dnAncestor,PPNP_VETO_TYPE pVetoType,LPSTR pszVetoName,ULONG ulNameLength,ULONG ulFlags,HMACHINE hMachine);", "CM_Query_And_Remove_SubTreeW": "CMAPI CONFIGRET WINAPI CM_Query_And_Remove_SubTreeW(DEVINST dnAncestor,PPNP_VETO_TYPE pVetoType,LPWSTR pszVetoName,ULONG ulNameLength,ULONG ulFlags);", "CM_Query_And_Remove_SubTree_ExW": "CMAPI CONFIGRET WINAPI CM_Query_And_Remove_SubTree_ExW(DEVINST dnAncestor,PPNP_VETO_TYPE pVetoType,LPWSTR pszVetoName,ULONG ulNameLength,ULONG ulFlags,HMACHINE hMachine);", "CM_Request_Device_EjectA": "CMAPI CONFIGRET WINAPI CM_Request_Device_EjectA(DEVINST dnDevInst,PPNP_VETO_TYPE pVetoType,LPSTR pszVetoName,ULONG ulNameLength,ULONG ulFlags);", "CM_Request_Device_Eject_ExA": "CMAPI CONFIGRET WINAPI CM_Request_Device_Eject_ExA(DEVINST dnDevInst,PPNP_VETO_TYPE pVetoType,LPSTR pszVetoName,ULONG ulNameLength,ULONG ulFlags,HMACHINE hMachine);", "CM_Request_Device_EjectW": "CMAPI CONFIGRET WINAPI CM_Request_Device_EjectW(DEVINST dnDevInst,PPNP_VETO_TYPE pVetoType,LPWSTR pszVetoName,ULONG ulNameLength,ULONG ulFlags);", "CM_Request_Device_Eject_ExW": "CMAPI CONFIGRET WINAPI CM_Request_Device_Eject_ExW(DEVINST dnDevInst,PPNP_VETO_TYPE pVetoType,LPWSTR pszVetoName,ULONG ulNameLength,ULONG ulFlags,HMACHINE hMachine);", "CM_Reenumerate_DevNode": "CMAPI CONFIGRET WINAPI CM_Reenumerate_DevNode(DEVINST dnDevInst,ULONG ulFlags);", "CM_Reenumerate_DevNode_Ex": "CMAPI CONFIGRET WINAPI CM_Reenumerate_DevNode_Ex(DEVINST dnDevInst,ULONG ulFlags,HMACHINE hMachine);", "CM_Register_Device_InterfaceA": "CMAPI CONFIGRET WINAPI CM_Register_Device_InterfaceA(DEVINST dnDevInst,LPGUID InterfaceClassGuid,LPCSTR pszReference,LPSTR pszDeviceInterface,PULONG pulLength,ULONG ulFlags);", "CM_Register_Device_InterfaceW": "CMAPI CONFIGRET WINAPI CM_Register_Device_InterfaceW(DEVINST dnDevInst,LPGUID InterfaceClassGuid,LPCWSTR pszReference,LPWSTR pszDeviceInterface,PULONG pulLength,ULONG ulFlags);", "CM_Register_Device_Interface_ExA": "CMAPI CONFIGRET WINAPI CM_Register_Device_Interface_ExA(DEVINST dnDevInst,LPGUID InterfaceClassGuid,LPCSTR pszReference,LPSTR pszDeviceInterface,PULONG pulLength,ULONG ulFlags,HMACHINE hMachine);", "CM_Register_Device_Interface_ExW": "CMAPI CONFIGRET WINAPI CM_Register_Device_Interface_ExW(DEVINST dnDevInst,LPGUID InterfaceClassGuid,LPCWSTR pszReference,LPWSTR pszDeviceInterface,PULONG pulLength,ULONG ulFlags,HMACHINE hMachine);", "CM_Set_DevNode_Problem_Ex": "CMAPI CONFIGRET WINAPI CM_Set_DevNode_Problem_Ex(DEVINST dnDevInst,ULONG ulProblem,ULONG ulFlags,HMACHINE hMachine);", "CM_Set_DevNode_Problem": "CMAPI CONFIGRET WINAPI CM_Set_DevNode_Problem(DEVINST dnDevInst,ULONG ulProblem,ULONG ulFlags);", "CM_Unregister_Device_InterfaceA": "CMAPI CONFIGRET WINAPI CM_Unregister_Device_InterfaceA(LPCSTR pszDeviceInterface,ULONG ulFlags);", "CM_Unregister_Device_InterfaceW": "CMAPI CONFIGRET WINAPI CM_Unregister_Device_InterfaceW(LPCWSTR pszDeviceInterface,ULONG ulFlags);", "CM_Unregister_Device_Interface_ExA": "CMAPI CONFIGRET WINAPI CM_Unregister_Device_Interface_ExA(LPCSTR pszDeviceInterface,ULONG ulFlags,HMACHINE hMachine);", "CM_Unregister_Device_Interface_ExW": "CMAPI CONFIGRET WINAPI CM_Unregister_Device_Interface_ExW(LPCWSTR pszDeviceInterface,ULONG ulFlags,HMACHINE hMachine);", "CM_Register_Device_Driver": "CMAPI CONFIGRET WINAPI CM_Register_Device_Driver(DEVINST dnDevInst,ULONG ulFlags);", "CM_Register_Device_Driver_Ex": "CMAPI CONFIGRET WINAPI CM_Register_Device_Driver_Ex(DEVINST dnDevInst,ULONG ulFlags,HMACHINE hMachine);", "CM_Remove_SubTree": "CMAPI CONFIGRET WINAPI CM_Remove_SubTree(DEVINST dnAncestor,ULONG ulFlags);", "CM_Remove_SubTree_Ex": "CMAPI CONFIGRET WINAPI CM_Remove_SubTree_Ex(DEVINST dnAncestor,ULONG ulFlags,HMACHINE hMachine);", "CM_Set_DevNode_Registry_PropertyA": "CMAPI CONFIGRET WINAPI CM_Set_DevNode_Registry_PropertyA(DEVINST dnDevInst,ULONG ulProperty,PCVOID Buffer,ULONG ulLength,ULONG ulFlags);", "CM_Set_DevNode_Registry_PropertyW": "CMAPI CONFIGRET WINAPI CM_Set_DevNode_Registry_PropertyW(DEVINST dnDevInst,ULONG ulProperty,PCVOID Buffer,ULONG ulLength,ULONG ulFlags);", "CM_Set_DevNode_Registry_Property_ExA": "CMAPI CONFIGRET WINAPI CM_Set_DevNode_Registry_Property_ExA(DEVINST dnDevInst,ULONG ulProperty,PCVOID Buffer,ULONG ulLength,ULONG ulFlags,HMACHINE hMachine);", "CM_Set_DevNode_Registry_Property_ExW": "CMAPI CONFIGRET WINAPI CM_Set_DevNode_Registry_Property_ExW(DEVINST dnDevInst,ULONG ulProperty,PCVOID Buffer,ULONG ulLength,ULONG ulFlags,HMACHINE hMachine);", "CM_Is_Dock_Station_Present": "CMAPI CONFIGRET WINAPI CM_Is_Dock_Station_Present(PBOOL pbPresent);", "CM_Is_Dock_Station_Present_Ex": "CMAPI CONFIGRET WINAPI CM_Is_Dock_Station_Present_Ex(PBOOL pbPresent,HMACHINE hMachine);", "CM_Request_Eject_PC": "CMAPI CONFIGRET WINAPI CM_Request_Eject_PC(VOID);", "CM_Request_Eject_PC_Ex": "CMAPI CONFIGRET WINAPI CM_Request_Eject_PC_Ex(HMACHINE hMachine);", "CM_Set_HW_Prof_FlagsA": "CMAPI CONFIGRET WINAPI CM_Set_HW_Prof_FlagsA(DEVINSTID_A szDevInstName,ULONG ulConfig,ULONG ulValue,ULONG ulFlags);", "CM_Set_HW_Prof_FlagsW": "CMAPI CONFIGRET WINAPI CM_Set_HW_Prof_FlagsW(DEVINSTID_W szDevInstName,ULONG ulConfig,ULONG ulValue,ULONG ulFlags);", "CM_Set_HW_Prof_Flags_ExA": "CMAPI CONFIGRET WINAPI CM_Set_HW_Prof_Flags_ExA(DEVINSTID_A szDevInstName,ULONG ulConfig,ULONG ulValue,ULONG ulFlags,HMACHINE hMachine);", "CM_Set_HW_Prof_Flags_ExW": "CMAPI CONFIGRET WINAPI CM_Set_HW_Prof_Flags_ExW(DEVINSTID_W szDevInstName,ULONG ulConfig,ULONG ulValue,ULONG ulFlags,HMACHINE hMachine);", "CM_Setup_DevNode": "CMAPI CONFIGRET WINAPI CM_Setup_DevNode(DEVINST dnDevInst,ULONG ulFlags);", "CM_Setup_DevNode_Ex": "CMAPI CONFIGRET WINAPI CM_Setup_DevNode_Ex(DEVINST dnDevInst,ULONG ulFlags,HMACHINE hMachine);", "CM_Test_Range_Available": "CMAPI CONFIGRET WINAPI CM_Test_Range_Available(DWORDLONG ullStartValue,DWORDLONG ullEndValue,RANGE_LIST rlh,ULONG ulFlags);", "CM_Uninstall_DevNode": "CMAPI CONFIGRET WINAPI CM_Uninstall_DevNode(DEVNODE dnPhantom,ULONG ulFlags);", "CM_Uninstall_DevNode_Ex": "CMAPI CONFIGRET WINAPI CM_Uninstall_DevNode_Ex(DEVNODE dnPhantom,ULONG ulFlags,HANDLE hMachine);", "CM_Run_Detection": "CMAPI CONFIGRET WINAPI CM_Run_Detection(ULONG ulFlags);", "CM_Run_Detection_Ex": "CMAPI CONFIGRET WINAPI CM_Run_Detection_Ex(ULONG ulFlags,HMACHINE hMachine);", "CM_Set_HW_Prof": "CMAPI CONFIGRET WINAPI CM_Set_HW_Prof(ULONG ulHardwareProfile,ULONG ulFlags);", "CM_Set_HW_Prof_Ex": "CMAPI CONFIGRET WINAPI CM_Set_HW_Prof_Ex(ULONG ulHardwareProfile,ULONG ulFlags,HMACHINE hMachine);", "CM_Query_Resource_Conflict_List": "CMAPI CONFIGRET WINAPI CM_Query_Resource_Conflict_List(PCONFLICT_LIST pclConflictList,DEVINST dnDevInst,RESOURCEID ResourceID,PCVOID ResourceData,ULONG ResourceLen,ULONG ulFlags,HMACHINE hMachine);", "CM_Free_Resource_Conflict_Handle": "CMAPI CONFIGRET WINAPI CM_Free_Resource_Conflict_Handle(CONFLICT_LIST clConflictList);", "CM_Get_Resource_Conflict_Count": "CMAPI CONFIGRET WINAPI CM_Get_Resource_Conflict_Count(CONFLICT_LIST clConflictList,PULONG pulCount);", "CM_Get_Resource_Conflict_DetailsA": "CMAPI CONFIGRET WINAPI CM_Get_Resource_Conflict_DetailsA(CONFLICT_LIST clConflictList,ULONG ulIndex,PCONFLICT_DETAILS_A pConflictDetails);", "CM_Get_Resource_Conflict_DetailsW": "CMAPI CONFIGRET WINAPI CM_Get_Resource_Conflict_DetailsW(CONFLICT_LIST clConflictList,ULONG ulIndex,PCONFLICT_DETAILS_W pConflictDetails);", "CM_Get_Class_Registry_PropertyW": "CMAPI CONFIGRET WINAPI CM_Get_Class_Registry_PropertyW(LPGUID ClassGUID,ULONG ulProperty,PULONG pulRegDataType,PVOID Buffer,PULONG pulLength,ULONG ulFlags,HMACHINE hMachine);", "CM_Set_Class_Registry_PropertyW": "CMAPI CONFIGRET WINAPI CM_Set_Class_Registry_PropertyW(LPGUID ClassGUID,ULONG ulProperty,PCVOID Buffer,ULONG ulLength,ULONG ulFlags,HMACHINE hMachine);", "CM_Get_Class_Registry_PropertyA": "CMAPI CONFIGRET WINAPI CM_Get_Class_Registry_PropertyA(LPGUID ClassGUID,ULONG ulProperty,PULONG pulRegDataType,PVOID Buffer,PULONG pulLength,ULONG ulFlags,HMACHINE hMachine);", "CM_Set_Class_Registry_PropertyA": "CMAPI CONFIGRET WINAPI CM_Set_Class_Registry_PropertyA(LPGUID ClassGUID,ULONG ulProperty,PCVOID Buffer,ULONG ulLength,ULONG ulFlags,HMACHINE hMachine);", "CM_WaitNoPendingInstallEvents": "DWORD WINAPI CM_WaitNoPendingInstallEvents(DWORD dwTimeout);", "CM_Register_Notification": "CMAPI CONFIGRET WINAPI CM_Register_Notification(PCM_NOTIFY_FILTER pFilter, PVOID pContext, PCM_NOTIFY_CALLBACK pCallback, PHCMNOTIFICATION pNotifyContext);", "CM_Unregister_Notification": "CMAPI CONFIGRET WINAPI CM_Unregister_Notification(HCMNOTIFICATION NotifyContext);", "CM_Get_Device_Interface_ListA": "CMAPI CONFIGRET WINAPI CM_Get_Device_Interface_ListA(LPGUID InterfaceClassGuid,DEVINSTID_A pDeviceID,PCHAR Buffer,ULONG BufferLen,ULONG ulFlags);", "CM_Get_Device_Interface_ListW": "CMAPI CONFIGRET WINAPI CM_Get_Device_Interface_ListW(LPGUID InterfaceClassGuid,DEVINSTID_W pDeviceID,PWCHAR Buffer,ULONG BufferLen,ULONG ulFlags);", "CM_Get_Device_Interface_List_SizeA": "CMAPI CONFIGRET WINAPI CM_Get_Device_Interface_List_SizeA(PULONG pulLen,LPGUID InterfaceClassGuid,DEVINSTID_A pDeviceID,ULONG ulFlags);", "CM_Get_Device_Interface_List_SizeW": "CMAPI CONFIGRET WINAPI CM_Get_Device_Interface_List_SizeW(PULONG pulLen,LPGUID InterfaceClassGuid,DEVINSTID_W pDeviceID,ULONG ulFlags);", "DSCreateISecurityInfoObject": "HRESULT WINAPI DSCreateISecurityInfoObject(", "DSCreateISecurityInfoObjectEx": "HRESULT WINAPI DSCreateISecurityInfoObjectEx(", "DSEditSecurity": "HRESULT WINAPI DSEditSecurity(", "ICertAdmin_IsValidCertificate_Proxy": "HRESULT WINAPI ICertAdmin_IsValidCertificate_Proxy(ICertAdmin *This,const BSTR strConfig,const BSTR strSerialNumber,LONG *pDisposition);", "ICertAdmin_GetRevocationReason_Proxy": "HRESULT WINAPI ICertAdmin_GetRevocationReason_Proxy(ICertAdmin *This,LONG *pReason);", "ICertAdmin_RevokeCertificate_Proxy": "HRESULT WINAPI ICertAdmin_RevokeCertificate_Proxy(ICertAdmin *This,const BSTR strConfig,const BSTR strSerialNumber,LONG Reason,DATE Date);", "ICertAdmin_SetRequestAttributes_Proxy": "HRESULT WINAPI ICertAdmin_SetRequestAttributes_Proxy(ICertAdmin *This,const BSTR strConfig,LONG RequestId,const BSTR strAttributes);", "ICertAdmin_SetCertificateExtension_Proxy": "HRESULT WINAPI ICertAdmin_SetCertificateExtension_Proxy(ICertAdmin *This,const BSTR strConfig,LONG RequestId,const BSTR strExtensionName,LONG Type,LONG Flags,const VARIANT *pvarValue);", "ICertAdmin_DenyRequest_Proxy": "HRESULT WINAPI ICertAdmin_DenyRequest_Proxy(ICertAdmin *This,const BSTR strConfig,LONG RequestId);", "ICertAdmin_ResubmitRequest_Proxy": "HRESULT WINAPI ICertAdmin_ResubmitRequest_Proxy(ICertAdmin *This,const BSTR strConfig,LONG RequestId,LONG *pDisposition);", "ICertAdmin_PublishCRL_Proxy": "HRESULT WINAPI ICertAdmin_PublishCRL_Proxy(ICertAdmin *This,const BSTR strConfig,DATE Date);", "ICertAdmin_GetCRL_Proxy": "HRESULT WINAPI ICertAdmin_GetCRL_Proxy(ICertAdmin *This,const BSTR strConfig,LONG Flags,BSTR *pstrCRL);", "ICertAdmin_ImportCertificate_Proxy": "HRESULT WINAPI ICertAdmin_ImportCertificate_Proxy(ICertAdmin *This,const BSTR strConfig,const BSTR strCertificate,LONG Flags,LONG *pRequestId);", "ICertAdmin2_PublishCRLs_Proxy": "HRESULT WINAPI ICertAdmin2_PublishCRLs_Proxy(ICertAdmin2 *This,const BSTR strConfig,DATE Date,LONG CRLFlags);", "ICertAdmin2_GetCAProperty_Proxy": "HRESULT WINAPI ICertAdmin2_GetCAProperty_Proxy(ICertAdmin2 *This,const BSTR strConfig,LONG PropId,LONG PropIndex,LONG PropType,LONG Flags,VARIANT *pvarPropertyValue);", "ICertAdmin2_SetCAProperty_Proxy": "HRESULT WINAPI ICertAdmin2_SetCAProperty_Proxy(ICertAdmin2 *This,const BSTR strConfig,LONG PropId,LONG PropIndex,LONG PropType,VARIANT *pvarPropertyValue);", "ICertAdmin2_GetCAPropertyFlags_Proxy": "HRESULT WINAPI ICertAdmin2_GetCAPropertyFlags_Proxy(ICertAdmin2 *This,const BSTR strConfig,LONG PropId,LONG *pPropFlags);", "ICertAdmin2_GetCAPropertyDisplayName_Proxy": "HRESULT WINAPI ICertAdmin2_GetCAPropertyDisplayName_Proxy(ICertAdmin2 *This,const BSTR strConfig,LONG PropId,BSTR *pstrDisplayName);", "ICertAdmin2_GetArchivedKey_Proxy": "HRESULT WINAPI ICertAdmin2_GetArchivedKey_Proxy(ICertAdmin2 *This,const BSTR strConfig,LONG RequestId,LONG Flags,BSTR *pstrArchivedKey);", "ICertAdmin2_GetConfigEntry_Proxy": "HRESULT WINAPI ICertAdmin2_GetConfigEntry_Proxy(ICertAdmin2 *This,const BSTR strConfig,const BSTR strNodePath,const BSTR strEntryName,VARIANT *pvarEntry);", "ICertAdmin2_SetConfigEntry_Proxy": "HRESULT WINAPI ICertAdmin2_SetConfigEntry_Proxy(ICertAdmin2 *This,const BSTR strConfig,const BSTR strNodePath,const BSTR strEntryName,VARIANT *pvarEntry);", "ICertAdmin2_ImportKey_Proxy": "HRESULT WINAPI ICertAdmin2_ImportKey_Proxy(ICertAdmin2 *This,const BSTR strConfig,LONG RequestId,const BSTR strCertHash,LONG Flags,const BSTR strKey);", "ICertAdmin2_GetMyRoles_Proxy": "HRESULT WINAPI ICertAdmin2_GetMyRoles_Proxy(ICertAdmin2 *This,const BSTR strConfig,LONG *pRoles);", "ICertAdmin2_DeleteRow_Proxy": "HRESULT WINAPI ICertAdmin2_DeleteRow_Proxy(ICertAdmin2 *This,const BSTR strConfig,LONG Flags,DATE Date,LONG Table,LONG RowId,LONG *pcDeleted);", "SHCreatePropSheetExtArray": "WINSHELLAPI HPSXA WINAPI SHCreatePropSheetExtArray (HKEY hKey, PCWSTR pszSubKey, UINT max_iface);", "SHDestroyPropSheetExtArray": "WINSHELLAPI void WINAPI SHDestroyPropSheetExtArray (HPSXA hpsxa);", "SHAddFromPropSheetExtArray": "WINSHELLAPI UINT WINAPI SHAddFromPropSheetExtArray (HPSXA hpsxa, LPFNADDPROPSHEETPAGE lpfnAddPage, LPARAM lParam);", "SHReplaceFromPropSheetExtArray": "WINSHELLAPI UINT WINAPI SHReplaceFromPropSheetExtArray (HPSXA hpsxa, UINT uPageID, LPFNADDPROPSHEETPAGE lpfnReplaceWith, LPARAM lParam);", "ITransactionResourceAsync_PrepareRequest_Proxy": "HRESULT WINAPI ITransactionResourceAsync_PrepareRequest_Proxy(ITransactionResourceAsync *This,WINBOOL fRetaining,DWORD grfRM,WINBOOL fWantMoniker,WINBOOL fSinglePhase);", "ITransactionResourceAsync_CommitRequest_Proxy": "HRESULT WINAPI ITransactionResourceAsync_CommitRequest_Proxy(ITransactionResourceAsync *This,DWORD grfRM,XACTUOW *pNewUOW);", "ITransactionResourceAsync_AbortRequest_Proxy": "HRESULT WINAPI ITransactionResourceAsync_AbortRequest_Proxy(ITransactionResourceAsync *This,BOID *pboidReason,WINBOOL fRetaining,XACTUOW *pNewUOW);", "ITransactionResourceAsync_TMDown_Proxy": "HRESULT WINAPI ITransactionResourceAsync_TMDown_Proxy(ITransactionResourceAsync *This);", "ITransactionLastResourceAsync_DelegateCommit_Proxy": "HRESULT WINAPI ITransactionLastResourceAsync_DelegateCommit_Proxy(ITransactionLastResourceAsync *This,DWORD grfRM);", "ITransactionLastResourceAsync_ForgetRequest_Proxy": "HRESULT WINAPI ITransactionLastResourceAsync_ForgetRequest_Proxy(ITransactionLastResourceAsync *This,XACTUOW *pNewUOW);", "ITransactionResource_PrepareRequest_Proxy": "HRESULT WINAPI ITransactionResource_PrepareRequest_Proxy(ITransactionResource *This,WINBOOL fRetaining,DWORD grfRM,WINBOOL fWantMoniker,WINBOOL fSinglePhase);", "ITransactionResource_CommitRequest_Proxy": "HRESULT WINAPI ITransactionResource_CommitRequest_Proxy(ITransactionResource *This,DWORD grfRM,XACTUOW *pNewUOW);", "ITransactionResource_AbortRequest_Proxy": "HRESULT WINAPI ITransactionResource_AbortRequest_Proxy(ITransactionResource *This,BOID *pboidReason,WINBOOL fRetaining,XACTUOW *pNewUOW);", "ITransactionResource_TMDown_Proxy": "HRESULT WINAPI ITransactionResource_TMDown_Proxy(ITransactionResource *This);", "ITransactionEnlistmentAsync_PrepareRequestDone_Proxy": "HRESULT WINAPI ITransactionEnlistmentAsync_PrepareRequestDone_Proxy(ITransactionEnlistmentAsync *This,HRESULT hr,IMoniker *pmk,BOID *pboidReason);", "ITransactionEnlistmentAsync_CommitRequestDone_Proxy": "HRESULT WINAPI ITransactionEnlistmentAsync_CommitRequestDone_Proxy(ITransactionEnlistmentAsync *This,HRESULT hr);", "ITransactionEnlistmentAsync_AbortRequestDone_Proxy": "HRESULT WINAPI ITransactionEnlistmentAsync_AbortRequestDone_Proxy(ITransactionEnlistmentAsync *This,HRESULT hr);", "ITransactionLastEnlistmentAsync_TransactionOutcome_Proxy": "HRESULT WINAPI ITransactionLastEnlistmentAsync_TransactionOutcome_Proxy(ITransactionLastEnlistmentAsync *This,XACTSTAT XactStat,BOID *pboidReason);", "ITransactionExportFactory_GetRemoteClassId_Proxy": "HRESULT WINAPI ITransactionExportFactory_GetRemoteClassId_Proxy(ITransactionExportFactory *This,CLSID *pclsid);", "ITransactionExportFactory_Create_Proxy": "HRESULT WINAPI ITransactionExportFactory_Create_Proxy(ITransactionExportFactory *This,ULONG cbWhereabouts,byte *rgbWhereabouts,ITransactionExport **ppExport);", "ITransactionImportWhereabouts_GetWhereaboutsSize_Proxy": "HRESULT WINAPI ITransactionImportWhereabouts_GetWhereaboutsSize_Proxy(ITransactionImportWhereabouts *This,ULONG *pcbWhereabouts);", "ITransactionImportWhereabouts_RemoteGetWhereabouts_Proxy": "HRESULT WINAPI ITransactionImportWhereabouts_RemoteGetWhereabouts_Proxy(ITransactionImportWhereabouts *This,ULONG *pcbUsed,ULONG cbWhereabouts,byte *rgbWhereabouts);", "ITransactionExport_Export_Proxy": "HRESULT WINAPI ITransactionExport_Export_Proxy(ITransactionExport *This,IUnknown *punkTransaction,ULONG *pcbTransactionCookie);", "ITransactionExport_RemoteGetTransactionCookie_Proxy": "HRESULT WINAPI ITransactionExport_RemoteGetTransactionCookie_Proxy(ITransactionExport *This,IUnknown *punkTransaction,ULONG *pcbUsed,ULONG cbTransactionCookie,byte *rgbTransactionCookie);", "ITransactionImport_Import_Proxy": "HRESULT WINAPI ITransactionImport_Import_Proxy(ITransactionImport *This,ULONG cbTransactionCookie,byte *rgbTransactionCookie,IID *piid,void **ppvTransaction);", "ITipTransaction_Push_Proxy": "HRESULT WINAPI ITipTransaction_Push_Proxy(ITipTransaction *This,char *i_pszRemoteTmUrl,char **o_ppszRemoteTxUrl);", "ITipTransaction_GetTransactionUrl_Proxy": "HRESULT WINAPI ITipTransaction_GetTransactionUrl_Proxy(ITipTransaction *This,char **o_ppszLocalTxUrl);", "ITipHelper_Pull_Proxy": "HRESULT WINAPI ITipHelper_Pull_Proxy(ITipHelper *This,char *i_pszTxUrl,ITransaction **o_ppITransaction);", "ITipHelper_PullAsync_Proxy": "HRESULT WINAPI ITipHelper_PullAsync_Proxy(ITipHelper *This,char *i_pszTxUrl,ITipPullSink *i_pTipPullSink,ITransaction **o_ppITransaction);", "ITipHelper_GetLocalTmUrl_Proxy": "HRESULT WINAPI ITipHelper_GetLocalTmUrl_Proxy(ITipHelper *This,char **o_ppszLocalTmUrl);", "ITipPullSink_PullComplete_Proxy": "HRESULT WINAPI ITipPullSink_PullComplete_Proxy(ITipPullSink *This,HRESULT i_hrPull);", "IDtcNetworkAccessConfig_GetAnyNetworkAccess_Proxy": "HRESULT WINAPI IDtcNetworkAccessConfig_GetAnyNetworkAccess_Proxy(IDtcNetworkAccessConfig *This,WINBOOL *pbAnyNetworkAccess);", "IDtcNetworkAccessConfig_SetAnyNetworkAccess_Proxy": "HRESULT WINAPI IDtcNetworkAccessConfig_SetAnyNetworkAccess_Proxy(IDtcNetworkAccessConfig *This,WINBOOL bAnyNetworkAccess);", "IDtcNetworkAccessConfig_GetNetworkAdministrationAccess_Proxy": "HRESULT WINAPI IDtcNetworkAccessConfig_GetNetworkAdministrationAccess_Proxy(IDtcNetworkAccessConfig *This,WINBOOL *pbNetworkAdministrationAccess);", "IDtcNetworkAccessConfig_SetNetworkAdministrationAccess_Proxy": "HRESULT WINAPI IDtcNetworkAccessConfig_SetNetworkAdministrationAccess_Proxy(IDtcNetworkAccessConfig *This,WINBOOL bNetworkAdministrationAccess);", "IDtcNetworkAccessConfig_GetNetworkTransactionAccess_Proxy": "HRESULT WINAPI IDtcNetworkAccessConfig_GetNetworkTransactionAccess_Proxy(IDtcNetworkAccessConfig *This,WINBOOL *pbNetworkTransactionAccess);", "IDtcNetworkAccessConfig_SetNetworkTransactionAccess_Proxy": "HRESULT WINAPI IDtcNetworkAccessConfig_SetNetworkTransactionAccess_Proxy(IDtcNetworkAccessConfig *This,WINBOOL bNetworkTransactionAccess);", "IDtcNetworkAccessConfig_GetNetworkClientAccess_Proxy": "HRESULT WINAPI IDtcNetworkAccessConfig_GetNetworkClientAccess_Proxy(IDtcNetworkAccessConfig *This,WINBOOL *pbNetworkClientAccess);", "IDtcNetworkAccessConfig_SetNetworkClientAccess_Proxy": "HRESULT WINAPI IDtcNetworkAccessConfig_SetNetworkClientAccess_Proxy(IDtcNetworkAccessConfig *This,WINBOOL bNetworkClientAccess);", "IDtcNetworkAccessConfig_GetNetworkTIPAccess_Proxy": "HRESULT WINAPI IDtcNetworkAccessConfig_GetNetworkTIPAccess_Proxy(IDtcNetworkAccessConfig *This,WINBOOL *pbNetworkTIPAccess);", "IDtcNetworkAccessConfig_SetNetworkTIPAccess_Proxy": "HRESULT WINAPI IDtcNetworkAccessConfig_SetNetworkTIPAccess_Proxy(IDtcNetworkAccessConfig *This,WINBOOL bNetworkTIPAccess);", "IDtcNetworkAccessConfig_GetXAAccess_Proxy": "HRESULT WINAPI IDtcNetworkAccessConfig_GetXAAccess_Proxy(IDtcNetworkAccessConfig *This,WINBOOL *pbXAAccess);", "IDtcNetworkAccessConfig_SetXAAccess_Proxy": "HRESULT WINAPI IDtcNetworkAccessConfig_SetXAAccess_Proxy(IDtcNetworkAccessConfig *This,WINBOOL bXAAccess);", "IDtcNetworkAccessConfig_RestartDtcService_Proxy": "HRESULT WINAPI IDtcNetworkAccessConfig_RestartDtcService_Proxy(IDtcNetworkAccessConfig *This);", "IDtcNetworkAccessConfig2_GetNetworkInboundAccess_Proxy": "HRESULT WINAPI IDtcNetworkAccessConfig2_GetNetworkInboundAccess_Proxy(IDtcNetworkAccessConfig2 *This,WINBOOL *pbInbound);", "IDtcNetworkAccessConfig2_GetNetworkOutboundAccess_Proxy": "HRESULT WINAPI IDtcNetworkAccessConfig2_GetNetworkOutboundAccess_Proxy(IDtcNetworkAccessConfig2 *This,WINBOOL *pbOutbound);", "IDtcNetworkAccessConfig2_SetNetworkInboundAccess_Proxy": "HRESULT WINAPI IDtcNetworkAccessConfig2_SetNetworkInboundAccess_Proxy(IDtcNetworkAccessConfig2 *This,WINBOOL bInbound);", "IDtcNetworkAccessConfig2_SetNetworkOutboundAccess_Proxy": "HRESULT WINAPI IDtcNetworkAccessConfig2_SetNetworkOutboundAccess_Proxy(IDtcNetworkAccessConfig2 *This,WINBOOL bOutbound);", "IDtcNetworkAccessConfig2_GetAuthenticationLevel_Proxy": "HRESULT WINAPI IDtcNetworkAccessConfig2_GetAuthenticationLevel_Proxy(IDtcNetworkAccessConfig2 *This,AUTHENTICATION_LEVEL *pAuthLevel);", "IDtcNetworkAccessConfig2_SetAuthenticationLevel_Proxy": "HRESULT WINAPI IDtcNetworkAccessConfig2_SetAuthenticationLevel_Proxy(IDtcNetworkAccessConfig2 *This,AUTHENTICATION_LEVEL AuthLevel);", "ITransactionImportWhereabouts_GetWhereabouts_Proxy": "HRESULT WINAPI ITransactionImportWhereabouts_GetWhereabouts_Proxy(ITransactionImportWhereabouts *This,ULONG cbWhereabouts,byte *rgbWhereabouts,ULONG *pcbUsed);", "ITransactionImportWhereabouts_GetWhereabouts_Stub": "HRESULT WINAPI ITransactionImportWhereabouts_GetWhereabouts_Stub(ITransactionImportWhereabouts *This,ULONG *pcbUsed,ULONG cbWhereabouts,byte *rgbWhereabouts);", "ITransactionExport_GetTransactionCookie_Proxy": "HRESULT WINAPI ITransactionExport_GetTransactionCookie_Proxy(ITransactionExport *This,IUnknown *punkTransaction,ULONG cbTransactionCookie,byte *rgbTransactionCookie,ULONG *pcbUsed);", "ITransactionExport_GetTransactionCookie_Stub": "HRESULT WINAPI ITransactionExport_GetTransactionCookie_Stub(ITransactionExport *This,IUnknown *punkTransaction,ULONG *pcbUsed,ULONG cbTransactionCookie,byte *rgbTransactionCookie);", "NetServerEnum": "NET_API_STATUS WINAPI NetServerEnum(LMCSTR servername,DWORD level,LPBYTE *bufptr,DWORD prefmaxlen,LPDWORD entriesread,LPDWORD totalentries,DWORD servertype,LMCSTR domain,LPDWORD resume_handle);", "NetServerEnumEx": "NET_API_STATUS WINAPI NetServerEnumEx(LMCSTR ServerName,DWORD Level,LPBYTE *Bufptr,DWORD PrefMaxlen,LPDWORD EntriesRead,LPDWORD totalentries,DWORD servertype,LMCSTR domain,LMCSTR FirstNameToReturn);", "NetServerGetInfo": "NET_API_STATUS WINAPI NetServerGetInfo(LMSTR servername,DWORD level,LPBYTE *bufptr);", "NetServerSetInfo": "NET_API_STATUS WINAPI NetServerSetInfo(LMSTR servername,DWORD level,LPBYTE buf,LPDWORD ParmError);", "NetServerDiskEnum": "NET_API_STATUS WINAPI NetServerDiskEnum(LMSTR servername,DWORD level,LPBYTE *bufptr,DWORD prefmaxlen,LPDWORD entriesread,LPDWORD totalentries,LPDWORD resume_handle);", "NetServerComputerNameAdd": "NET_API_STATUS WINAPI NetServerComputerNameAdd(LMSTR ServerName,LMSTR EmulatedDomainName,LMSTR EmulatedServerName);", "NetServerComputerNameDel": "NET_API_STATUS WINAPI NetServerComputerNameDel(LMSTR ServerName,LMSTR EmulatedServerName);", "NetServerTransportAdd": "NET_API_STATUS WINAPI NetServerTransportAdd(LMSTR servername,DWORD level,LPBYTE bufptr);", "NetServerTransportAddEx": "NET_API_STATUS WINAPI NetServerTransportAddEx(LMSTR servername,DWORD level,LPBYTE bufptr);", "NetServerTransportDel": "NET_API_STATUS WINAPI NetServerTransportDel(LMSTR servername,DWORD level,LPBYTE bufptr);", "NetServerTransportEnum": "NET_API_STATUS WINAPI NetServerTransportEnum(LMSTR servername,DWORD level,LPBYTE *bufptr,DWORD prefmaxlen,LPDWORD entriesread,LPDWORD totalentries,LPDWORD resumehandle);", "SetServiceBits": "WINBOOL WINAPI SetServiceBits(SERVICE_STATUS_HANDLE hServiceStatus,DWORD dwServiceBits,WINBOOL bSetBitsOn,WINBOOL bUpdateImmediately);", "IShellApp_GetAppInfo_Proxy": "HRESULT WINAPI IShellApp_GetAppInfo_Proxy(IShellApp *This,PAPPINFODATA pai);", "IShellApp_GetPossibleActions_Proxy": "HRESULT WINAPI IShellApp_GetPossibleActions_Proxy(IShellApp *This,DWORD *pdwActions);", "IShellApp_GetSlowAppInfo_Proxy": "HRESULT WINAPI IShellApp_GetSlowAppInfo_Proxy(IShellApp *This,PSLOWAPPINFO psaid);", "IShellApp_GetCachedSlowAppInfo_Proxy": "HRESULT WINAPI IShellApp_GetCachedSlowAppInfo_Proxy(IShellApp *This,PSLOWAPPINFO psaid);", "IShellApp_IsInstalled_Proxy": "HRESULT WINAPI IShellApp_IsInstalled_Proxy(IShellApp *This);", "IPublishedApp_Install_Proxy": "HRESULT WINAPI IPublishedApp_Install_Proxy(IPublishedApp *This,LPSYSTEMTIME pstInstall);", "IPublishedApp_GetPublishedAppInfo_Proxy": "HRESULT WINAPI IPublishedApp_GetPublishedAppInfo_Proxy(IPublishedApp *This,PPUBAPPINFO ppai);", "IPublishedApp_Unschedule_Proxy": "HRESULT WINAPI IPublishedApp_Unschedule_Proxy(IPublishedApp *This);", "IEnumPublishedApps_Next_Proxy": "HRESULT WINAPI IEnumPublishedApps_Next_Proxy(IEnumPublishedApps *This,IPublishedApp **pia);", "IEnumPublishedApps_Reset_Proxy": "HRESULT WINAPI IEnumPublishedApps_Reset_Proxy(IEnumPublishedApps *This);", "IAppPublisher_GetNumberOfCategories_Proxy": "HRESULT WINAPI IAppPublisher_GetNumberOfCategories_Proxy(IAppPublisher *This,DWORD *pdwCat);", "IAppPublisher_GetCategories_Proxy": "HRESULT WINAPI IAppPublisher_GetCategories_Proxy(IAppPublisher *This,APPCATEGORYINFOLIST *pAppCategoryList);", "IAppPublisher_GetNumberOfApps_Proxy": "HRESULT WINAPI IAppPublisher_GetNumberOfApps_Proxy(IAppPublisher *This,DWORD *pdwApps);", "IAppPublisher_EnumApps_Proxy": "HRESULT WINAPI IAppPublisher_EnumApps_Proxy(IAppPublisher *This,GUID *pAppCategoryId,IEnumPublishedApps **ppepa);", "GetProcessGroupAffinity": "WINBASEAPI WINBOOL WINAPI GetProcessGroupAffinity (HANDLE hProcess, PUSHORT GroupCount, PUSHORT GroupArray);", "SetProcessGroupAffinity": "WINBASEAPI WINBOOL WINAPI SetProcessGroupAffinity (HANDLE hProcess, CONST GROUP_AFFINITY *GroupAffinity, PGROUP_AFFINITY PreviousGroupAffinity);", "GetThreadGroupAffinity": "WINBASEAPI WINBOOL WINAPI GetThreadGroupAffinity (HANDLE hThread, PGROUP_AFFINITY GroupAffinity);", "SetThreadGroupAffinity": "WINBASEAPI WINBOOL WINAPI SetThreadGroupAffinity (HANDLE hThread, CONST GROUP_AFFINITY *GroupAffinity, PGROUP_AFFINITY PreviousGroupAffinity);", "GetNumaHighestNodeNumber": "WINBASEAPI WINBOOL WINAPI GetNumaHighestNodeNumber (PULONG HighestNodeNumber);", "GetNumaNodeProcessorMaskEx": "WINBASEAPI WINBOOL WINAPI GetNumaNodeProcessorMaskEx (USHORT Node, PGROUP_AFFINITY ProcessorMask);", "IHTMLFiltersCollection_get_length_Proxy": "HRESULT WINAPI IHTMLFiltersCollection_get_length_Proxy(IHTMLFiltersCollection *This,__LONG32 *p);", "IHTMLFiltersCollection_get__newEnum_Proxy": "HRESULT WINAPI IHTMLFiltersCollection_get__newEnum_Proxy(IHTMLFiltersCollection *This,IUnknown **p);", "IHTMLFiltersCollection_item_Proxy": "HRESULT WINAPI IHTMLFiltersCollection_item_Proxy(IHTMLFiltersCollection *This,VARIANT *pvarIndex,VARIANT *pvarResult);", "IHTMLEventObj_get_srcElement_Proxy": "HRESULT WINAPI IHTMLEventObj_get_srcElement_Proxy(IHTMLEventObj *This,IHTMLElement **p);", "IHTMLEventObj_get_altKey_Proxy": "HRESULT WINAPI IHTMLEventObj_get_altKey_Proxy(IHTMLEventObj *This,VARIANT_BOOL *p);", "IHTMLEventObj_get_ctrlKey_Proxy": "HRESULT WINAPI IHTMLEventObj_get_ctrlKey_Proxy(IHTMLEventObj *This,VARIANT_BOOL *p);", "IHTMLEventObj_get_shiftKey_Proxy": "HRESULT WINAPI IHTMLEventObj_get_shiftKey_Proxy(IHTMLEventObj *This,VARIANT_BOOL *p);", "IHTMLEventObj_put_returnValue_Proxy": "HRESULT WINAPI IHTMLEventObj_put_returnValue_Proxy(IHTMLEventObj *This,VARIANT v);", "IHTMLEventObj_get_returnValue_Proxy": "HRESULT WINAPI IHTMLEventObj_get_returnValue_Proxy(IHTMLEventObj *This,VARIANT *p);", "IHTMLEventObj_put_cancelBubble_Proxy": "HRESULT WINAPI IHTMLEventObj_put_cancelBubble_Proxy(IHTMLEventObj *This,VARIANT_BOOL v);", "IHTMLEventObj_get_cancelBubble_Proxy": "HRESULT WINAPI IHTMLEventObj_get_cancelBubble_Proxy(IHTMLEventObj *This,VARIANT_BOOL *p);", "IHTMLEventObj_get_fromElement_Proxy": "HRESULT WINAPI IHTMLEventObj_get_fromElement_Proxy(IHTMLEventObj *This,IHTMLElement **p);", "IHTMLEventObj_get_toElement_Proxy": "HRESULT WINAPI IHTMLEventObj_get_toElement_Proxy(IHTMLEventObj *This,IHTMLElement **p);", "IHTMLEventObj_put_keyCode_Proxy": "HRESULT WINAPI IHTMLEventObj_put_keyCode_Proxy(IHTMLEventObj *This,__LONG32 v);", "IHTMLEventObj_get_keyCode_Proxy": "HRESULT WINAPI IHTMLEventObj_get_keyCode_Proxy(IHTMLEventObj *This,__LONG32 *p);", "IHTMLEventObj_get_button_Proxy": "HRESULT WINAPI IHTMLEventObj_get_button_Proxy(IHTMLEventObj *This,__LONG32 *p);", "IHTMLEventObj_get_type_Proxy": "HRESULT WINAPI IHTMLEventObj_get_type_Proxy(IHTMLEventObj *This,BSTR *p);", "IHTMLEventObj_get_qualifier_Proxy": "HRESULT WINAPI IHTMLEventObj_get_qualifier_Proxy(IHTMLEventObj *This,BSTR *p);", "IHTMLEventObj_get_reason_Proxy": "HRESULT WINAPI IHTMLEventObj_get_reason_Proxy(IHTMLEventObj *This,__LONG32 *p);", "IHTMLEventObj_get_x_Proxy": "HRESULT WINAPI IHTMLEventObj_get_x_Proxy(IHTMLEventObj *This,__LONG32 *p);", "IHTMLEventObj_get_y_Proxy": "HRESULT WINAPI IHTMLEventObj_get_y_Proxy(IHTMLEventObj *This,__LONG32 *p);", "IHTMLEventObj_get_clientX_Proxy": "HRESULT WINAPI IHTMLEventObj_get_clientX_Proxy(IHTMLEventObj *This,__LONG32 *p);", "IHTMLEventObj_get_clientY_Proxy": "HRESULT WINAPI IHTMLEventObj_get_clientY_Proxy(IHTMLEventObj *This,__LONG32 *p);", "IHTMLEventObj_get_offsetX_Proxy": "HRESULT WINAPI IHTMLEventObj_get_offsetX_Proxy(IHTMLEventObj *This,__LONG32 *p);", "IHTMLEventObj_get_offsetY_Proxy": "HRESULT WINAPI IHTMLEventObj_get_offsetY_Proxy(IHTMLEventObj *This,__LONG32 *p);", "IHTMLEventObj_get_screenX_Proxy": "HRESULT WINAPI IHTMLEventObj_get_screenX_Proxy(IHTMLEventObj *This,__LONG32 *p);", "IHTMLEventObj_get_screenY_Proxy": "HRESULT WINAPI IHTMLEventObj_get_screenY_Proxy(IHTMLEventObj *This,__LONG32 *p);", "IHTMLEventObj_get_srcFilter_Proxy": "HRESULT WINAPI IHTMLEventObj_get_srcFilter_Proxy(IHTMLEventObj *This,IDispatch **p);", "IElementBehaviorSite_GetElement_Proxy": "HRESULT WINAPI IElementBehaviorSite_GetElement_Proxy(IElementBehaviorSite *This,IHTMLElement **ppElement);", "IElementBehaviorSite_RegisterNotification_Proxy": "HRESULT WINAPI IElementBehaviorSite_RegisterNotification_Proxy(IElementBehaviorSite *This,LONG lEvent);", "IElementBehavior_Init_Proxy": "HRESULT WINAPI IElementBehavior_Init_Proxy(IElementBehavior *This,IElementBehaviorSite *pBehaviorSite);", "IElementBehavior_Notify_Proxy": "HRESULT WINAPI IElementBehavior_Notify_Proxy(IElementBehavior *This,LONG lEvent,VARIANT *pVar);", "IElementBehavior_Detach_Proxy": "HRESULT WINAPI IElementBehavior_Detach_Proxy(IElementBehavior *This);", "IElementBehaviorFactory_FindBehavior_Proxy": "HRESULT WINAPI IElementBehaviorFactory_FindBehavior_Proxy(IElementBehaviorFactory *This,BSTR bstrBehavior,BSTR bstrBehaviorUrl,IElementBehaviorSite *pSite,IElementBehavior **ppBehavior);", "IElementBehaviorSiteOM_RegisterEvent_Proxy": "HRESULT WINAPI IElementBehaviorSiteOM_RegisterEvent_Proxy(IElementBehaviorSiteOM *This,LPOLESTR pchEvent,LONG lFlags,LONG *plCookie);", "IElementBehaviorSiteOM_GetEventCookie_Proxy": "HRESULT WINAPI IElementBehaviorSiteOM_GetEventCookie_Proxy(IElementBehaviorSiteOM *This,LPOLESTR pchEvent,LONG *plCookie);", "IElementBehaviorSiteOM_FireEvent_Proxy": "HRESULT WINAPI IElementBehaviorSiteOM_FireEvent_Proxy(IElementBehaviorSiteOM *This,LONG lCookie,IHTMLEventObj *pEventObject);", "IElementBehaviorSiteOM_CreateEventObject_Proxy": "HRESULT WINAPI IElementBehaviorSiteOM_CreateEventObject_Proxy(IElementBehaviorSiteOM *This,IHTMLEventObj **ppEventObject);", "IElementBehaviorSiteOM_RegisterName_Proxy": "HRESULT WINAPI IElementBehaviorSiteOM_RegisterName_Proxy(IElementBehaviorSiteOM *This,LPOLESTR pchName);", "IElementBehaviorSiteOM_RegisterUrn_Proxy": "HRESULT WINAPI IElementBehaviorSiteOM_RegisterUrn_Proxy(IElementBehaviorSiteOM *This,LPOLESTR pchUrn);", "IElementBehaviorRender_Draw_Proxy": "HRESULT WINAPI IElementBehaviorRender_Draw_Proxy(IElementBehaviorRender *This,HDC hdc,LONG lLayer,RECT *pRect,IUnknown *pReserved);", "IElementBehaviorRender_GetRenderInfo_Proxy": "HRESULT WINAPI IElementBehaviorRender_GetRenderInfo_Proxy(IElementBehaviorRender *This,LONG *plRenderInfo);", "IElementBehaviorRender_HitTestPoint_Proxy": "HRESULT WINAPI IElementBehaviorRender_HitTestPoint_Proxy(IElementBehaviorRender *This,POINT *pPoint,IUnknown *pReserved,WINBOOL *pbHit);", "IElementBehaviorSiteRender_Invalidate_Proxy": "HRESULT WINAPI IElementBehaviorSiteRender_Invalidate_Proxy(IElementBehaviorSiteRender *This,RECT *pRect);", "IElementBehaviorSiteRender_InvalidateRenderInfo_Proxy": "HRESULT WINAPI IElementBehaviorSiteRender_InvalidateRenderInfo_Proxy(IElementBehaviorSiteRender *This);", "IElementBehaviorSiteRender_InvalidateStyle_Proxy": "HRESULT WINAPI IElementBehaviorSiteRender_InvalidateStyle_Proxy(IElementBehaviorSiteRender *This);", "IHTMLStyle_put_fontFamily_Proxy": "HRESULT WINAPI IHTMLStyle_put_fontFamily_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_fontFamily_Proxy": "HRESULT WINAPI IHTMLStyle_get_fontFamily_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_fontStyle_Proxy": "HRESULT WINAPI IHTMLStyle_put_fontStyle_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_fontStyle_Proxy": "HRESULT WINAPI IHTMLStyle_get_fontStyle_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_fontVariant_Proxy": "HRESULT WINAPI IHTMLStyle_put_fontVariant_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_fontVariant_Proxy": "HRESULT WINAPI IHTMLStyle_get_fontVariant_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_fontWeight_Proxy": "HRESULT WINAPI IHTMLStyle_put_fontWeight_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_fontWeight_Proxy": "HRESULT WINAPI IHTMLStyle_get_fontWeight_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_fontSize_Proxy": "HRESULT WINAPI IHTMLStyle_put_fontSize_Proxy(IHTMLStyle *This,VARIANT v);", "IHTMLStyle_get_fontSize_Proxy": "HRESULT WINAPI IHTMLStyle_get_fontSize_Proxy(IHTMLStyle *This,VARIANT *p);", "IHTMLStyle_put_font_Proxy": "HRESULT WINAPI IHTMLStyle_put_font_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_font_Proxy": "HRESULT WINAPI IHTMLStyle_get_font_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_color_Proxy": "HRESULT WINAPI IHTMLStyle_put_color_Proxy(IHTMLStyle *This,VARIANT v);", "IHTMLStyle_get_color_Proxy": "HRESULT WINAPI IHTMLStyle_get_color_Proxy(IHTMLStyle *This,VARIANT *p);", "IHTMLStyle_put_background_Proxy": "HRESULT WINAPI IHTMLStyle_put_background_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_background_Proxy": "HRESULT WINAPI IHTMLStyle_get_background_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_backgroundColor_Proxy": "HRESULT WINAPI IHTMLStyle_put_backgroundColor_Proxy(IHTMLStyle *This,VARIANT v);", "IHTMLStyle_get_backgroundColor_Proxy": "HRESULT WINAPI IHTMLStyle_get_backgroundColor_Proxy(IHTMLStyle *This,VARIANT *p);", "IHTMLStyle_put_backgroundImage_Proxy": "HRESULT WINAPI IHTMLStyle_put_backgroundImage_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_backgroundImage_Proxy": "HRESULT WINAPI IHTMLStyle_get_backgroundImage_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_backgroundRepeat_Proxy": "HRESULT WINAPI IHTMLStyle_put_backgroundRepeat_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_backgroundRepeat_Proxy": "HRESULT WINAPI IHTMLStyle_get_backgroundRepeat_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_backgroundAttachment_Proxy": "HRESULT WINAPI IHTMLStyle_put_backgroundAttachment_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_backgroundAttachment_Proxy": "HRESULT WINAPI IHTMLStyle_get_backgroundAttachment_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_backgroundPosition_Proxy": "HRESULT WINAPI IHTMLStyle_put_backgroundPosition_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_backgroundPosition_Proxy": "HRESULT WINAPI IHTMLStyle_get_backgroundPosition_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_backgroundPositionX_Proxy": "HRESULT WINAPI IHTMLStyle_put_backgroundPositionX_Proxy(IHTMLStyle *This,VARIANT v);", "IHTMLStyle_get_backgroundPositionX_Proxy": "HRESULT WINAPI IHTMLStyle_get_backgroundPositionX_Proxy(IHTMLStyle *This,VARIANT *p);", "IHTMLStyle_put_backgroundPositionY_Proxy": "HRESULT WINAPI IHTMLStyle_put_backgroundPositionY_Proxy(IHTMLStyle *This,VARIANT v);", "IHTMLStyle_get_backgroundPositionY_Proxy": "HRESULT WINAPI IHTMLStyle_get_backgroundPositionY_Proxy(IHTMLStyle *This,VARIANT *p);", "IHTMLStyle_put_wordSpacing_Proxy": "HRESULT WINAPI IHTMLStyle_put_wordSpacing_Proxy(IHTMLStyle *This,VARIANT v);", "IHTMLStyle_get_wordSpacing_Proxy": "HRESULT WINAPI IHTMLStyle_get_wordSpacing_Proxy(IHTMLStyle *This,VARIANT *p);", "IHTMLStyle_put_letterSpacing_Proxy": "HRESULT WINAPI IHTMLStyle_put_letterSpacing_Proxy(IHTMLStyle *This,VARIANT v);", "IHTMLStyle_get_letterSpacing_Proxy": "HRESULT WINAPI IHTMLStyle_get_letterSpacing_Proxy(IHTMLStyle *This,VARIANT *p);", "IHTMLStyle_put_textDecoration_Proxy": "HRESULT WINAPI IHTMLStyle_put_textDecoration_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_textDecoration_Proxy": "HRESULT WINAPI IHTMLStyle_get_textDecoration_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_textDecorationNone_Proxy": "HRESULT WINAPI IHTMLStyle_put_textDecorationNone_Proxy(IHTMLStyle *This,VARIANT_BOOL v);", "IHTMLStyle_get_textDecorationNone_Proxy": "HRESULT WINAPI IHTMLStyle_get_textDecorationNone_Proxy(IHTMLStyle *This,VARIANT_BOOL *p);", "IHTMLStyle_put_textDecorationUnderline_Proxy": "HRESULT WINAPI IHTMLStyle_put_textDecorationUnderline_Proxy(IHTMLStyle *This,VARIANT_BOOL v);", "IHTMLStyle_get_textDecorationUnderline_Proxy": "HRESULT WINAPI IHTMLStyle_get_textDecorationUnderline_Proxy(IHTMLStyle *This,VARIANT_BOOL *p);", "IHTMLStyle_put_textDecorationOverline_Proxy": "HRESULT WINAPI IHTMLStyle_put_textDecorationOverline_Proxy(IHTMLStyle *This,VARIANT_BOOL v);", "IHTMLStyle_get_textDecorationOverline_Proxy": "HRESULT WINAPI IHTMLStyle_get_textDecorationOverline_Proxy(IHTMLStyle *This,VARIANT_BOOL *p);", "IHTMLStyle_put_textDecorationLineThrough_Proxy": "HRESULT WINAPI IHTMLStyle_put_textDecorationLineThrough_Proxy(IHTMLStyle *This,VARIANT_BOOL v);", "IHTMLStyle_get_textDecorationLineThrough_Proxy": "HRESULT WINAPI IHTMLStyle_get_textDecorationLineThrough_Proxy(IHTMLStyle *This,VARIANT_BOOL *p);", "IHTMLStyle_put_textDecorationBlink_Proxy": "HRESULT WINAPI IHTMLStyle_put_textDecorationBlink_Proxy(IHTMLStyle *This,VARIANT_BOOL v);", "IHTMLStyle_get_textDecorationBlink_Proxy": "HRESULT WINAPI IHTMLStyle_get_textDecorationBlink_Proxy(IHTMLStyle *This,VARIANT_BOOL *p);", "IHTMLStyle_put_verticalAlign_Proxy": "HRESULT WINAPI IHTMLStyle_put_verticalAlign_Proxy(IHTMLStyle *This,VARIANT v);", "IHTMLStyle_get_verticalAlign_Proxy": "HRESULT WINAPI IHTMLStyle_get_verticalAlign_Proxy(IHTMLStyle *This,VARIANT *p);", "IHTMLStyle_put_textTransform_Proxy": "HRESULT WINAPI IHTMLStyle_put_textTransform_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_textTransform_Proxy": "HRESULT WINAPI IHTMLStyle_get_textTransform_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_textAlign_Proxy": "HRESULT WINAPI IHTMLStyle_put_textAlign_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_textAlign_Proxy": "HRESULT WINAPI IHTMLStyle_get_textAlign_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_textIndent_Proxy": "HRESULT WINAPI IHTMLStyle_put_textIndent_Proxy(IHTMLStyle *This,VARIANT v);", "IHTMLStyle_get_textIndent_Proxy": "HRESULT WINAPI IHTMLStyle_get_textIndent_Proxy(IHTMLStyle *This,VARIANT *p);", "IHTMLStyle_put_lineHeight_Proxy": "HRESULT WINAPI IHTMLStyle_put_lineHeight_Proxy(IHTMLStyle *This,VARIANT v);", "IHTMLStyle_get_lineHeight_Proxy": "HRESULT WINAPI IHTMLStyle_get_lineHeight_Proxy(IHTMLStyle *This,VARIANT *p);", "IHTMLStyle_put_marginTop_Proxy": "HRESULT WINAPI IHTMLStyle_put_marginTop_Proxy(IHTMLStyle *This,VARIANT v);", "IHTMLStyle_get_marginTop_Proxy": "HRESULT WINAPI IHTMLStyle_get_marginTop_Proxy(IHTMLStyle *This,VARIANT *p);", "IHTMLStyle_put_marginRight_Proxy": "HRESULT WINAPI IHTMLStyle_put_marginRight_Proxy(IHTMLStyle *This,VARIANT v);", "IHTMLStyle_get_marginRight_Proxy": "HRESULT WINAPI IHTMLStyle_get_marginRight_Proxy(IHTMLStyle *This,VARIANT *p);", "IHTMLStyle_put_marginBottom_Proxy": "HRESULT WINAPI IHTMLStyle_put_marginBottom_Proxy(IHTMLStyle *This,VARIANT v);", "IHTMLStyle_get_marginBottom_Proxy": "HRESULT WINAPI IHTMLStyle_get_marginBottom_Proxy(IHTMLStyle *This,VARIANT *p);", "IHTMLStyle_put_marginLeft_Proxy": "HRESULT WINAPI IHTMLStyle_put_marginLeft_Proxy(IHTMLStyle *This,VARIANT v);", "IHTMLStyle_get_marginLeft_Proxy": "HRESULT WINAPI IHTMLStyle_get_marginLeft_Proxy(IHTMLStyle *This,VARIANT *p);", "IHTMLStyle_put_margin_Proxy": "HRESULT WINAPI IHTMLStyle_put_margin_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_margin_Proxy": "HRESULT WINAPI IHTMLStyle_get_margin_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_paddingTop_Proxy": "HRESULT WINAPI IHTMLStyle_put_paddingTop_Proxy(IHTMLStyle *This,VARIANT v);", "IHTMLStyle_get_paddingTop_Proxy": "HRESULT WINAPI IHTMLStyle_get_paddingTop_Proxy(IHTMLStyle *This,VARIANT *p);", "IHTMLStyle_put_paddingRight_Proxy": "HRESULT WINAPI IHTMLStyle_put_paddingRight_Proxy(IHTMLStyle *This,VARIANT v);", "IHTMLStyle_get_paddingRight_Proxy": "HRESULT WINAPI IHTMLStyle_get_paddingRight_Proxy(IHTMLStyle *This,VARIANT *p);", "IHTMLStyle_put_paddingBottom_Proxy": "HRESULT WINAPI IHTMLStyle_put_paddingBottom_Proxy(IHTMLStyle *This,VARIANT v);", "IHTMLStyle_get_paddingBottom_Proxy": "HRESULT WINAPI IHTMLStyle_get_paddingBottom_Proxy(IHTMLStyle *This,VARIANT *p);", "IHTMLStyle_put_paddingLeft_Proxy": "HRESULT WINAPI IHTMLStyle_put_paddingLeft_Proxy(IHTMLStyle *This,VARIANT v);", "IHTMLStyle_get_paddingLeft_Proxy": "HRESULT WINAPI IHTMLStyle_get_paddingLeft_Proxy(IHTMLStyle *This,VARIANT *p);", "IHTMLStyle_put_padding_Proxy": "HRESULT WINAPI IHTMLStyle_put_padding_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_padding_Proxy": "HRESULT WINAPI IHTMLStyle_get_padding_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_border_Proxy": "HRESULT WINAPI IHTMLStyle_put_border_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_border_Proxy": "HRESULT WINAPI IHTMLStyle_get_border_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_borderTop_Proxy": "HRESULT WINAPI IHTMLStyle_put_borderTop_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_borderTop_Proxy": "HRESULT WINAPI IHTMLStyle_get_borderTop_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_borderRight_Proxy": "HRESULT WINAPI IHTMLStyle_put_borderRight_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_borderRight_Proxy": "HRESULT WINAPI IHTMLStyle_get_borderRight_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_borderBottom_Proxy": "HRESULT WINAPI IHTMLStyle_put_borderBottom_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_borderBottom_Proxy": "HRESULT WINAPI IHTMLStyle_get_borderBottom_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_borderLeft_Proxy": "HRESULT WINAPI IHTMLStyle_put_borderLeft_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_borderLeft_Proxy": "HRESULT WINAPI IHTMLStyle_get_borderLeft_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_borderColor_Proxy": "HRESULT WINAPI IHTMLStyle_put_borderColor_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_borderColor_Proxy": "HRESULT WINAPI IHTMLStyle_get_borderColor_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_borderTopColor_Proxy": "HRESULT WINAPI IHTMLStyle_put_borderTopColor_Proxy(IHTMLStyle *This,VARIANT v);", "IHTMLStyle_get_borderTopColor_Proxy": "HRESULT WINAPI IHTMLStyle_get_borderTopColor_Proxy(IHTMLStyle *This,VARIANT *p);", "IHTMLStyle_put_borderRightColor_Proxy": "HRESULT WINAPI IHTMLStyle_put_borderRightColor_Proxy(IHTMLStyle *This,VARIANT v);", "IHTMLStyle_get_borderRightColor_Proxy": "HRESULT WINAPI IHTMLStyle_get_borderRightColor_Proxy(IHTMLStyle *This,VARIANT *p);", "IHTMLStyle_put_borderBottomColor_Proxy": "HRESULT WINAPI IHTMLStyle_put_borderBottomColor_Proxy(IHTMLStyle *This,VARIANT v);", "IHTMLStyle_get_borderBottomColor_Proxy": "HRESULT WINAPI IHTMLStyle_get_borderBottomColor_Proxy(IHTMLStyle *This,VARIANT *p);", "IHTMLStyle_put_borderLeftColor_Proxy": "HRESULT WINAPI IHTMLStyle_put_borderLeftColor_Proxy(IHTMLStyle *This,VARIANT v);", "IHTMLStyle_get_borderLeftColor_Proxy": "HRESULT WINAPI IHTMLStyle_get_borderLeftColor_Proxy(IHTMLStyle *This,VARIANT *p);", "IHTMLStyle_put_borderWidth_Proxy": "HRESULT WINAPI IHTMLStyle_put_borderWidth_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_borderWidth_Proxy": "HRESULT WINAPI IHTMLStyle_get_borderWidth_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_borderTopWidth_Proxy": "HRESULT WINAPI IHTMLStyle_put_borderTopWidth_Proxy(IHTMLStyle *This,VARIANT v);", "IHTMLStyle_get_borderTopWidth_Proxy": "HRESULT WINAPI IHTMLStyle_get_borderTopWidth_Proxy(IHTMLStyle *This,VARIANT *p);", "IHTMLStyle_put_borderRightWidth_Proxy": "HRESULT WINAPI IHTMLStyle_put_borderRightWidth_Proxy(IHTMLStyle *This,VARIANT v);", "IHTMLStyle_get_borderRightWidth_Proxy": "HRESULT WINAPI IHTMLStyle_get_borderRightWidth_Proxy(IHTMLStyle *This,VARIANT *p);", "IHTMLStyle_put_borderBottomWidth_Proxy": "HRESULT WINAPI IHTMLStyle_put_borderBottomWidth_Proxy(IHTMLStyle *This,VARIANT v);", "IHTMLStyle_get_borderBottomWidth_Proxy": "HRESULT WINAPI IHTMLStyle_get_borderBottomWidth_Proxy(IHTMLStyle *This,VARIANT *p);", "IHTMLStyle_put_borderLeftWidth_Proxy": "HRESULT WINAPI IHTMLStyle_put_borderLeftWidth_Proxy(IHTMLStyle *This,VARIANT v);", "IHTMLStyle_get_borderLeftWidth_Proxy": "HRESULT WINAPI IHTMLStyle_get_borderLeftWidth_Proxy(IHTMLStyle *This,VARIANT *p);", "IHTMLStyle_put_borderStyle_Proxy": "HRESULT WINAPI IHTMLStyle_put_borderStyle_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_borderStyle_Proxy": "HRESULT WINAPI IHTMLStyle_get_borderStyle_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_borderTopStyle_Proxy": "HRESULT WINAPI IHTMLStyle_put_borderTopStyle_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_borderTopStyle_Proxy": "HRESULT WINAPI IHTMLStyle_get_borderTopStyle_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_borderRightStyle_Proxy": "HRESULT WINAPI IHTMLStyle_put_borderRightStyle_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_borderRightStyle_Proxy": "HRESULT WINAPI IHTMLStyle_get_borderRightStyle_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_borderBottomStyle_Proxy": "HRESULT WINAPI IHTMLStyle_put_borderBottomStyle_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_borderBottomStyle_Proxy": "HRESULT WINAPI IHTMLStyle_get_borderBottomStyle_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_borderLeftStyle_Proxy": "HRESULT WINAPI IHTMLStyle_put_borderLeftStyle_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_borderLeftStyle_Proxy": "HRESULT WINAPI IHTMLStyle_get_borderLeftStyle_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_width_Proxy": "HRESULT WINAPI IHTMLStyle_put_width_Proxy(IHTMLStyle *This,VARIANT v);", "IHTMLStyle_get_width_Proxy": "HRESULT WINAPI IHTMLStyle_get_width_Proxy(IHTMLStyle *This,VARIANT *p);", "IHTMLStyle_put_height_Proxy": "HRESULT WINAPI IHTMLStyle_put_height_Proxy(IHTMLStyle *This,VARIANT v);", "IHTMLStyle_get_height_Proxy": "HRESULT WINAPI IHTMLStyle_get_height_Proxy(IHTMLStyle *This,VARIANT *p);", "IHTMLStyle_put_styleFloat_Proxy": "HRESULT WINAPI IHTMLStyle_put_styleFloat_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_styleFloat_Proxy": "HRESULT WINAPI IHTMLStyle_get_styleFloat_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_clear_Proxy": "HRESULT WINAPI IHTMLStyle_put_clear_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_clear_Proxy": "HRESULT WINAPI IHTMLStyle_get_clear_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_display_Proxy": "HRESULT WINAPI IHTMLStyle_put_display_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_display_Proxy": "HRESULT WINAPI IHTMLStyle_get_display_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_visibility_Proxy": "HRESULT WINAPI IHTMLStyle_put_visibility_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_visibility_Proxy": "HRESULT WINAPI IHTMLStyle_get_visibility_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_listStyleType_Proxy": "HRESULT WINAPI IHTMLStyle_put_listStyleType_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_listStyleType_Proxy": "HRESULT WINAPI IHTMLStyle_get_listStyleType_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_listStylePosition_Proxy": "HRESULT WINAPI IHTMLStyle_put_listStylePosition_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_listStylePosition_Proxy": "HRESULT WINAPI IHTMLStyle_get_listStylePosition_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_listStyleImage_Proxy": "HRESULT WINAPI IHTMLStyle_put_listStyleImage_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_listStyleImage_Proxy": "HRESULT WINAPI IHTMLStyle_get_listStyleImage_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_listStyle_Proxy": "HRESULT WINAPI IHTMLStyle_put_listStyle_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_listStyle_Proxy": "HRESULT WINAPI IHTMLStyle_get_listStyle_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_whiteSpace_Proxy": "HRESULT WINAPI IHTMLStyle_put_whiteSpace_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_whiteSpace_Proxy": "HRESULT WINAPI IHTMLStyle_get_whiteSpace_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_top_Proxy": "HRESULT WINAPI IHTMLStyle_put_top_Proxy(IHTMLStyle *This,VARIANT v);", "IHTMLStyle_get_top_Proxy": "HRESULT WINAPI IHTMLStyle_get_top_Proxy(IHTMLStyle *This,VARIANT *p);", "IHTMLStyle_put_left_Proxy": "HRESULT WINAPI IHTMLStyle_put_left_Proxy(IHTMLStyle *This,VARIANT v);", "IHTMLStyle_get_left_Proxy": "HRESULT WINAPI IHTMLStyle_get_left_Proxy(IHTMLStyle *This,VARIANT *p);", "IHTMLStyle_get_position_Proxy": "HRESULT WINAPI IHTMLStyle_get_position_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_zIndex_Proxy": "HRESULT WINAPI IHTMLStyle_put_zIndex_Proxy(IHTMLStyle *This,VARIANT v);", "IHTMLStyle_get_zIndex_Proxy": "HRESULT WINAPI IHTMLStyle_get_zIndex_Proxy(IHTMLStyle *This,VARIANT *p);", "IHTMLStyle_put_overflow_Proxy": "HRESULT WINAPI IHTMLStyle_put_overflow_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_overflow_Proxy": "HRESULT WINAPI IHTMLStyle_get_overflow_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_pageBreakBefore_Proxy": "HRESULT WINAPI IHTMLStyle_put_pageBreakBefore_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_pageBreakBefore_Proxy": "HRESULT WINAPI IHTMLStyle_get_pageBreakBefore_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_pageBreakAfter_Proxy": "HRESULT WINAPI IHTMLStyle_put_pageBreakAfter_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_pageBreakAfter_Proxy": "HRESULT WINAPI IHTMLStyle_get_pageBreakAfter_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_cssText_Proxy": "HRESULT WINAPI IHTMLStyle_put_cssText_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_cssText_Proxy": "HRESULT WINAPI IHTMLStyle_get_cssText_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_pixelTop_Proxy": "HRESULT WINAPI IHTMLStyle_put_pixelTop_Proxy(IHTMLStyle *This,__LONG32 v);", "IHTMLStyle_get_pixelTop_Proxy": "HRESULT WINAPI IHTMLStyle_get_pixelTop_Proxy(IHTMLStyle *This,__LONG32 *p);", "IHTMLStyle_put_pixelLeft_Proxy": "HRESULT WINAPI IHTMLStyle_put_pixelLeft_Proxy(IHTMLStyle *This,__LONG32 v);", "IHTMLStyle_get_pixelLeft_Proxy": "HRESULT WINAPI IHTMLStyle_get_pixelLeft_Proxy(IHTMLStyle *This,__LONG32 *p);", "IHTMLStyle_put_pixelWidth_Proxy": "HRESULT WINAPI IHTMLStyle_put_pixelWidth_Proxy(IHTMLStyle *This,__LONG32 v);", "IHTMLStyle_get_pixelWidth_Proxy": "HRESULT WINAPI IHTMLStyle_get_pixelWidth_Proxy(IHTMLStyle *This,__LONG32 *p);", "IHTMLStyle_put_pixelHeight_Proxy": "HRESULT WINAPI IHTMLStyle_put_pixelHeight_Proxy(IHTMLStyle *This,__LONG32 v);", "IHTMLStyle_get_pixelHeight_Proxy": "HRESULT WINAPI IHTMLStyle_get_pixelHeight_Proxy(IHTMLStyle *This,__LONG32 *p);", "IHTMLStyle_put_posTop_Proxy": "HRESULT WINAPI IHTMLStyle_put_posTop_Proxy(IHTMLStyle *This,float v);", "IHTMLStyle_get_posTop_Proxy": "HRESULT WINAPI IHTMLStyle_get_posTop_Proxy(IHTMLStyle *This,float *p);", "IHTMLStyle_put_posLeft_Proxy": "HRESULT WINAPI IHTMLStyle_put_posLeft_Proxy(IHTMLStyle *This,float v);", "IHTMLStyle_get_posLeft_Proxy": "HRESULT WINAPI IHTMLStyle_get_posLeft_Proxy(IHTMLStyle *This,float *p);", "IHTMLStyle_put_posWidth_Proxy": "HRESULT WINAPI IHTMLStyle_put_posWidth_Proxy(IHTMLStyle *This,float v);", "IHTMLStyle_get_posWidth_Proxy": "HRESULT WINAPI IHTMLStyle_get_posWidth_Proxy(IHTMLStyle *This,float *p);", "IHTMLStyle_put_posHeight_Proxy": "HRESULT WINAPI IHTMLStyle_put_posHeight_Proxy(IHTMLStyle *This,float v);", "IHTMLStyle_get_posHeight_Proxy": "HRESULT WINAPI IHTMLStyle_get_posHeight_Proxy(IHTMLStyle *This,float *p);", "IHTMLStyle_put_cursor_Proxy": "HRESULT WINAPI IHTMLStyle_put_cursor_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_cursor_Proxy": "HRESULT WINAPI IHTMLStyle_get_cursor_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_clip_Proxy": "HRESULT WINAPI IHTMLStyle_put_clip_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_clip_Proxy": "HRESULT WINAPI IHTMLStyle_get_clip_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_put_filter_Proxy": "HRESULT WINAPI IHTMLStyle_put_filter_Proxy(IHTMLStyle *This,BSTR v);", "IHTMLStyle_get_filter_Proxy": "HRESULT WINAPI IHTMLStyle_get_filter_Proxy(IHTMLStyle *This,BSTR *p);", "IHTMLStyle_setAttribute_Proxy": "HRESULT WINAPI IHTMLStyle_setAttribute_Proxy(IHTMLStyle *This,BSTR strAttributeName,VARIANT AttributeValue,LONG lFlags);", "IHTMLStyle_getAttribute_Proxy": "HRESULT WINAPI IHTMLStyle_getAttribute_Proxy(IHTMLStyle *This,BSTR strAttributeName,LONG lFlags,VARIANT *AttributeValue);", "IHTMLStyle_removeAttribute_Proxy": "HRESULT WINAPI IHTMLStyle_removeAttribute_Proxy(IHTMLStyle *This,BSTR strAttributeName,LONG lFlags,VARIANT_BOOL *pfSuccess);", "IHTMLStyle_toString_Proxy": "HRESULT WINAPI IHTMLStyle_toString_Proxy(IHTMLStyle *This,BSTR *String);", "IHTMLStyle2_put_tableLayout_Proxy": "HRESULT WINAPI IHTMLStyle2_put_tableLayout_Proxy(IHTMLStyle2 *This,BSTR v);", "IHTMLStyle2_get_tableLayout_Proxy": "HRESULT WINAPI IHTMLStyle2_get_tableLayout_Proxy(IHTMLStyle2 *This,BSTR *p);", "IHTMLStyle2_put_borderCollapse_Proxy": "HRESULT WINAPI IHTMLStyle2_put_borderCollapse_Proxy(IHTMLStyle2 *This,BSTR v);", "IHTMLStyle2_get_borderCollapse_Proxy": "HRESULT WINAPI IHTMLStyle2_get_borderCollapse_Proxy(IHTMLStyle2 *This,BSTR *p);", "IHTMLStyle2_put_direction_Proxy": "HRESULT WINAPI IHTMLStyle2_put_direction_Proxy(IHTMLStyle2 *This,BSTR v);", "IHTMLStyle2_get_direction_Proxy": "HRESULT WINAPI IHTMLStyle2_get_direction_Proxy(IHTMLStyle2 *This,BSTR *p);", "IHTMLStyle2_put_behavior_Proxy": "HRESULT WINAPI IHTMLStyle2_put_behavior_Proxy(IHTMLStyle2 *This,BSTR v);", "IHTMLStyle2_get_behavior_Proxy": "HRESULT WINAPI IHTMLStyle2_get_behavior_Proxy(IHTMLStyle2 *This,BSTR *p);", "IHTMLStyle2_setExpression_Proxy": "HRESULT WINAPI IHTMLStyle2_setExpression_Proxy(IHTMLStyle2 *This,BSTR propname,BSTR expression,BSTR language);", "IHTMLStyle2_getExpression_Proxy": "HRESULT WINAPI IHTMLStyle2_getExpression_Proxy(IHTMLStyle2 *This,BSTR propname,VARIANT *expression);", "IHTMLStyle2_removeExpression_Proxy": "HRESULT WINAPI IHTMLStyle2_removeExpression_Proxy(IHTMLStyle2 *This,BSTR propname,VARIANT_BOOL *pfSuccess);", "IHTMLStyle2_put_position_Proxy": "HRESULT WINAPI IHTMLStyle2_put_position_Proxy(IHTMLStyle2 *This,BSTR v);", "IHTMLStyle2_get_position_Proxy": "HRESULT WINAPI IHTMLStyle2_get_position_Proxy(IHTMLStyle2 *This,BSTR *p);", "IHTMLStyle2_put_unicodeBidi_Proxy": "HRESULT WINAPI IHTMLStyle2_put_unicodeBidi_Proxy(IHTMLStyle2 *This,BSTR v);", "IHTMLStyle2_get_unicodeBidi_Proxy": "HRESULT WINAPI IHTMLStyle2_get_unicodeBidi_Proxy(IHTMLStyle2 *This,BSTR *p);", "IHTMLStyle2_put_bottom_Proxy": "HRESULT WINAPI IHTMLStyle2_put_bottom_Proxy(IHTMLStyle2 *This,VARIANT v);", "IHTMLStyle2_get_bottom_Proxy": "HRESULT WINAPI IHTMLStyle2_get_bottom_Proxy(IHTMLStyle2 *This,VARIANT *p);", "IHTMLStyle2_put_right_Proxy": "HRESULT WINAPI IHTMLStyle2_put_right_Proxy(IHTMLStyle2 *This,VARIANT v);", "IHTMLStyle2_get_right_Proxy": "HRESULT WINAPI IHTMLStyle2_get_right_Proxy(IHTMLStyle2 *This,VARIANT *p);", "IHTMLStyle2_put_pixelBottom_Proxy": "HRESULT WINAPI IHTMLStyle2_put_pixelBottom_Proxy(IHTMLStyle2 *This,__LONG32 v);", "IHTMLStyle2_get_pixelBottom_Proxy": "HRESULT WINAPI IHTMLStyle2_get_pixelBottom_Proxy(IHTMLStyle2 *This,__LONG32 *p);", "IHTMLStyle2_put_pixelRight_Proxy": "HRESULT WINAPI IHTMLStyle2_put_pixelRight_Proxy(IHTMLStyle2 *This,__LONG32 v);", "IHTMLStyle2_get_pixelRight_Proxy": "HRESULT WINAPI IHTMLStyle2_get_pixelRight_Proxy(IHTMLStyle2 *This,__LONG32 *p);", "IHTMLStyle2_put_posBottom_Proxy": "HRESULT WINAPI IHTMLStyle2_put_posBottom_Proxy(IHTMLStyle2 *This,float v);", "IHTMLStyle2_get_posBottom_Proxy": "HRESULT WINAPI IHTMLStyle2_get_posBottom_Proxy(IHTMLStyle2 *This,float *p);", "IHTMLStyle2_put_posRight_Proxy": "HRESULT WINAPI IHTMLStyle2_put_posRight_Proxy(IHTMLStyle2 *This,float v);", "IHTMLStyle2_get_posRight_Proxy": "HRESULT WINAPI IHTMLStyle2_get_posRight_Proxy(IHTMLStyle2 *This,float *p);", "IHTMLStyle2_put_imeMode_Proxy": "HRESULT WINAPI IHTMLStyle2_put_imeMode_Proxy(IHTMLStyle2 *This,BSTR v);", "IHTMLStyle2_get_imeMode_Proxy": "HRESULT WINAPI IHTMLStyle2_get_imeMode_Proxy(IHTMLStyle2 *This,BSTR *p);", "IHTMLStyle2_put_rubyAlign_Proxy": "HRESULT WINAPI IHTMLStyle2_put_rubyAlign_Proxy(IHTMLStyle2 *This,BSTR v);", "IHTMLStyle2_get_rubyAlign_Proxy": "HRESULT WINAPI IHTMLStyle2_get_rubyAlign_Proxy(IHTMLStyle2 *This,BSTR *p);", "IHTMLStyle2_put_rubyPosition_Proxy": "HRESULT WINAPI IHTMLStyle2_put_rubyPosition_Proxy(IHTMLStyle2 *This,BSTR v);", "IHTMLStyle2_get_rubyPosition_Proxy": "HRESULT WINAPI IHTMLStyle2_get_rubyPosition_Proxy(IHTMLStyle2 *This,BSTR *p);", "IHTMLStyle2_put_rubyOverhang_Proxy": "HRESULT WINAPI IHTMLStyle2_put_rubyOverhang_Proxy(IHTMLStyle2 *This,BSTR v);", "IHTMLStyle2_get_rubyOverhang_Proxy": "HRESULT WINAPI IHTMLStyle2_get_rubyOverhang_Proxy(IHTMLStyle2 *This,BSTR *p);", "IHTMLStyle2_put_layoutGridChar_Proxy": "HRESULT WINAPI IHTMLStyle2_put_layoutGridChar_Proxy(IHTMLStyle2 *This,VARIANT v);", "IHTMLStyle2_get_layoutGridChar_Proxy": "HRESULT WINAPI IHTMLStyle2_get_layoutGridChar_Proxy(IHTMLStyle2 *This,VARIANT *p);", "IHTMLStyle2_put_layoutGridLine_Proxy": "HRESULT WINAPI IHTMLStyle2_put_layoutGridLine_Proxy(IHTMLStyle2 *This,VARIANT v);", "IHTMLStyle2_get_layoutGridLine_Proxy": "HRESULT WINAPI IHTMLStyle2_get_layoutGridLine_Proxy(IHTMLStyle2 *This,VARIANT *p);", "IHTMLStyle2_put_layoutGridMode_Proxy": "HRESULT WINAPI IHTMLStyle2_put_layoutGridMode_Proxy(IHTMLStyle2 *This,BSTR v);", "IHTMLStyle2_get_layoutGridMode_Proxy": "HRESULT WINAPI IHTMLStyle2_get_layoutGridMode_Proxy(IHTMLStyle2 *This,BSTR *p);", "IHTMLStyle2_put_layoutGridType_Proxy": "HRESULT WINAPI IHTMLStyle2_put_layoutGridType_Proxy(IHTMLStyle2 *This,BSTR v);", "IHTMLStyle2_get_layoutGridType_Proxy": "HRESULT WINAPI IHTMLStyle2_get_layoutGridType_Proxy(IHTMLStyle2 *This,BSTR *p);", "IHTMLStyle2_put_layoutGrid_Proxy": "HRESULT WINAPI IHTMLStyle2_put_layoutGrid_Proxy(IHTMLStyle2 *This,BSTR v);", "IHTMLStyle2_get_layoutGrid_Proxy": "HRESULT WINAPI IHTMLStyle2_get_layoutGrid_Proxy(IHTMLStyle2 *This,BSTR *p);", "IHTMLStyle2_put_wordBreak_Proxy": "HRESULT WINAPI IHTMLStyle2_put_wordBreak_Proxy(IHTMLStyle2 *This,BSTR v);", "IHTMLStyle2_get_wordBreak_Proxy": "HRESULT WINAPI IHTMLStyle2_get_wordBreak_Proxy(IHTMLStyle2 *This,BSTR *p);", "IHTMLStyle2_put_lineBreak_Proxy": "HRESULT WINAPI IHTMLStyle2_put_lineBreak_Proxy(IHTMLStyle2 *This,BSTR v);", "IHTMLStyle2_get_lineBreak_Proxy": "HRESULT WINAPI IHTMLStyle2_get_lineBreak_Proxy(IHTMLStyle2 *This,BSTR *p);", "IHTMLStyle2_put_textJustify_Proxy": "HRESULT WINAPI IHTMLStyle2_put_textJustify_Proxy(IHTMLStyle2 *This,BSTR v);", "IHTMLStyle2_get_textJustify_Proxy": "HRESULT WINAPI IHTMLStyle2_get_textJustify_Proxy(IHTMLStyle2 *This,BSTR *p);", "IHTMLStyle2_put_textJustifyTrim_Proxy": "HRESULT WINAPI IHTMLStyle2_put_textJustifyTrim_Proxy(IHTMLStyle2 *This,BSTR v);", "IHTMLStyle2_get_textJustifyTrim_Proxy": "HRESULT WINAPI IHTMLStyle2_get_textJustifyTrim_Proxy(IHTMLStyle2 *This,BSTR *p);", "IHTMLStyle2_put_textKashida_Proxy": "HRESULT WINAPI IHTMLStyle2_put_textKashida_Proxy(IHTMLStyle2 *This,VARIANT v);", "IHTMLStyle2_get_textKashida_Proxy": "HRESULT WINAPI IHTMLStyle2_get_textKashida_Proxy(IHTMLStyle2 *This,VARIANT *p);", "IHTMLStyle2_put_textAutospace_Proxy": "HRESULT WINAPI IHTMLStyle2_put_textAutospace_Proxy(IHTMLStyle2 *This,BSTR v);", "IHTMLStyle2_get_textAutospace_Proxy": "HRESULT WINAPI IHTMLStyle2_get_textAutospace_Proxy(IHTMLStyle2 *This,BSTR *p);", "IHTMLStyle2_put_overflowX_Proxy": "HRESULT WINAPI IHTMLStyle2_put_overflowX_Proxy(IHTMLStyle2 *This,BSTR v);", "IHTMLStyle2_get_overflowX_Proxy": "HRESULT WINAPI IHTMLStyle2_get_overflowX_Proxy(IHTMLStyle2 *This,BSTR *p);", "IHTMLStyle2_put_overflowY_Proxy": "HRESULT WINAPI IHTMLStyle2_put_overflowY_Proxy(IHTMLStyle2 *This,BSTR v);", "IHTMLStyle2_get_overflowY_Proxy": "HRESULT WINAPI IHTMLStyle2_get_overflowY_Proxy(IHTMLStyle2 *This,BSTR *p);", "IHTMLStyle2_put_accelerator_Proxy": "HRESULT WINAPI IHTMLStyle2_put_accelerator_Proxy(IHTMLStyle2 *This,BSTR v);", "IHTMLStyle2_get_accelerator_Proxy": "HRESULT WINAPI IHTMLStyle2_get_accelerator_Proxy(IHTMLStyle2 *This,BSTR *p);", "IHTMLStyle3_put_layoutFlow_Proxy": "HRESULT WINAPI IHTMLStyle3_put_layoutFlow_Proxy(IHTMLStyle3 *This,BSTR v);", "IHTMLStyle3_get_layoutFlow_Proxy": "HRESULT WINAPI IHTMLStyle3_get_layoutFlow_Proxy(IHTMLStyle3 *This,BSTR *p);", "IHTMLStyle3_put_zoom_Proxy": "HRESULT WINAPI IHTMLStyle3_put_zoom_Proxy(IHTMLStyle3 *This,VARIANT v);", "IHTMLStyle3_get_zoom_Proxy": "HRESULT WINAPI IHTMLStyle3_get_zoom_Proxy(IHTMLStyle3 *This,VARIANT *p);", "IHTMLStyle3_put_wordWrap_Proxy": "HRESULT WINAPI IHTMLStyle3_put_wordWrap_Proxy(IHTMLStyle3 *This,BSTR v);", "IHTMLStyle3_get_wordWrap_Proxy": "HRESULT WINAPI IHTMLStyle3_get_wordWrap_Proxy(IHTMLStyle3 *This,BSTR *p);", "IHTMLStyle3_put_textUnderlinePosition_Proxy": "HRESULT WINAPI IHTMLStyle3_put_textUnderlinePosition_Proxy(IHTMLStyle3 *This,BSTR v);", "IHTMLStyle3_get_textUnderlinePosition_Proxy": "HRESULT WINAPI IHTMLStyle3_get_textUnderlinePosition_Proxy(IHTMLStyle3 *This,BSTR *p);", "IHTMLStyle3_put_scrollbarBaseColor_Proxy": "HRESULT WINAPI IHTMLStyle3_put_scrollbarBaseColor_Proxy(IHTMLStyle3 *This,VARIANT v);", "IHTMLStyle3_get_scrollbarBaseColor_Proxy": "HRESULT WINAPI IHTMLStyle3_get_scrollbarBaseColor_Proxy(IHTMLStyle3 *This,VARIANT *p);", "IHTMLStyle3_put_scrollbarFaceColor_Proxy": "HRESULT WINAPI IHTMLStyle3_put_scrollbarFaceColor_Proxy(IHTMLStyle3 *This,VARIANT v);", "IHTMLStyle3_get_scrollbarFaceColor_Proxy": "HRESULT WINAPI IHTMLStyle3_get_scrollbarFaceColor_Proxy(IHTMLStyle3 *This,VARIANT *p);", "IHTMLStyle3_put_scrollbar3dLightColor_Proxy": "HRESULT WINAPI IHTMLStyle3_put_scrollbar3dLightColor_Proxy(IHTMLStyle3 *This,VARIANT v);", "IHTMLStyle3_get_scrollbar3dLightColor_Proxy": "HRESULT WINAPI IHTMLStyle3_get_scrollbar3dLightColor_Proxy(IHTMLStyle3 *This,VARIANT *p);", "IHTMLStyle3_put_scrollbarShadowColor_Proxy": "HRESULT WINAPI IHTMLStyle3_put_scrollbarShadowColor_Proxy(IHTMLStyle3 *This,VARIANT v);", "IHTMLStyle3_get_scrollbarShadowColor_Proxy": "HRESULT WINAPI IHTMLStyle3_get_scrollbarShadowColor_Proxy(IHTMLStyle3 *This,VARIANT *p);", "IHTMLStyle3_put_scrollbarHighlightColor_Proxy": "HRESULT WINAPI IHTMLStyle3_put_scrollbarHighlightColor_Proxy(IHTMLStyle3 *This,VARIANT v);", "IHTMLStyle3_get_scrollbarHighlightColor_Proxy": "HRESULT WINAPI IHTMLStyle3_get_scrollbarHighlightColor_Proxy(IHTMLStyle3 *This,VARIANT *p);", "IHTMLStyle3_put_scrollbarDarkShadowColor_Proxy": "HRESULT WINAPI IHTMLStyle3_put_scrollbarDarkShadowColor_Proxy(IHTMLStyle3 *This,VARIANT v);", "IHTMLStyle3_get_scrollbarDarkShadowColor_Proxy": "HRESULT WINAPI IHTMLStyle3_get_scrollbarDarkShadowColor_Proxy(IHTMLStyle3 *This,VARIANT *p);", "IHTMLStyle3_put_scrollbarArrowColor_Proxy": "HRESULT WINAPI IHTMLStyle3_put_scrollbarArrowColor_Proxy(IHTMLStyle3 *This,VARIANT v);", "IHTMLStyle3_get_scrollbarArrowColor_Proxy": "HRESULT WINAPI IHTMLStyle3_get_scrollbarArrowColor_Proxy(IHTMLStyle3 *This,VARIANT *p);", "IHTMLStyle3_put_scrollbarTrackColor_Proxy": "HRESULT WINAPI IHTMLStyle3_put_scrollbarTrackColor_Proxy(IHTMLStyle3 *This,VARIANT v);", "IHTMLStyle3_get_scrollbarTrackColor_Proxy": "HRESULT WINAPI IHTMLStyle3_get_scrollbarTrackColor_Proxy(IHTMLStyle3 *This,VARIANT *p);", "IHTMLStyle3_put_writingMode_Proxy": "HRESULT WINAPI IHTMLStyle3_put_writingMode_Proxy(IHTMLStyle3 *This,BSTR v);", "IHTMLStyle3_get_writingMode_Proxy": "HRESULT WINAPI IHTMLStyle3_get_writingMode_Proxy(IHTMLStyle3 *This,BSTR *p);", "IHTMLStyle3_put_textAlignLast_Proxy": "HRESULT WINAPI IHTMLStyle3_put_textAlignLast_Proxy(IHTMLStyle3 *This,BSTR v);", "IHTMLStyle3_get_textAlignLast_Proxy": "HRESULT WINAPI IHTMLStyle3_get_textAlignLast_Proxy(IHTMLStyle3 *This,BSTR *p);", "IHTMLStyle3_put_textKashidaSpace_Proxy": "HRESULT WINAPI IHTMLStyle3_put_textKashidaSpace_Proxy(IHTMLStyle3 *This,VARIANT v);", "IHTMLStyle3_get_textKashidaSpace_Proxy": "HRESULT WINAPI IHTMLStyle3_get_textKashidaSpace_Proxy(IHTMLStyle3 *This,VARIANT *p);", "IHTMLStyle4_put_textOverflow_Proxy": "HRESULT WINAPI IHTMLStyle4_put_textOverflow_Proxy(IHTMLStyle4 *This,BSTR v);", "IHTMLStyle4_get_textOverflow_Proxy": "HRESULT WINAPI IHTMLStyle4_get_textOverflow_Proxy(IHTMLStyle4 *This,BSTR *p);", "IHTMLStyle4_put_minHeight_Proxy": "HRESULT WINAPI IHTMLStyle4_put_minHeight_Proxy(IHTMLStyle4 *This,VARIANT v);", "IHTMLStyle4_get_minHeight_Proxy": "HRESULT WINAPI IHTMLStyle4_get_minHeight_Proxy(IHTMLStyle4 *This,VARIANT *p);", "IHTMLRuleStyle_put_fontFamily_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_fontFamily_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_fontFamily_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_fontFamily_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_fontStyle_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_fontStyle_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_fontStyle_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_fontStyle_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_fontVariant_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_fontVariant_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_fontVariant_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_fontVariant_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_fontWeight_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_fontWeight_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_fontWeight_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_fontWeight_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_fontSize_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_fontSize_Proxy(IHTMLRuleStyle *This,VARIANT v);", "IHTMLRuleStyle_get_fontSize_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_fontSize_Proxy(IHTMLRuleStyle *This,VARIANT *p);", "IHTMLRuleStyle_put_font_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_font_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_font_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_font_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_color_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_color_Proxy(IHTMLRuleStyle *This,VARIANT v);", "IHTMLRuleStyle_get_color_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_color_Proxy(IHTMLRuleStyle *This,VARIANT *p);", "IHTMLRuleStyle_put_background_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_background_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_background_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_background_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_backgroundColor_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_backgroundColor_Proxy(IHTMLRuleStyle *This,VARIANT v);", "IHTMLRuleStyle_get_backgroundColor_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_backgroundColor_Proxy(IHTMLRuleStyle *This,VARIANT *p);", "IHTMLRuleStyle_put_backgroundImage_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_backgroundImage_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_backgroundImage_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_backgroundImage_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_backgroundRepeat_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_backgroundRepeat_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_backgroundRepeat_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_backgroundRepeat_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_backgroundAttachment_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_backgroundAttachment_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_backgroundAttachment_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_backgroundAttachment_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_backgroundPosition_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_backgroundPosition_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_backgroundPosition_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_backgroundPosition_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_backgroundPositionX_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_backgroundPositionX_Proxy(IHTMLRuleStyle *This,VARIANT v);", "IHTMLRuleStyle_get_backgroundPositionX_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_backgroundPositionX_Proxy(IHTMLRuleStyle *This,VARIANT *p);", "IHTMLRuleStyle_put_backgroundPositionY_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_backgroundPositionY_Proxy(IHTMLRuleStyle *This,VARIANT v);", "IHTMLRuleStyle_get_backgroundPositionY_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_backgroundPositionY_Proxy(IHTMLRuleStyle *This,VARIANT *p);", "IHTMLRuleStyle_put_wordSpacing_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_wordSpacing_Proxy(IHTMLRuleStyle *This,VARIANT v);", "IHTMLRuleStyle_get_wordSpacing_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_wordSpacing_Proxy(IHTMLRuleStyle *This,VARIANT *p);", "IHTMLRuleStyle_put_letterSpacing_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_letterSpacing_Proxy(IHTMLRuleStyle *This,VARIANT v);", "IHTMLRuleStyle_get_letterSpacing_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_letterSpacing_Proxy(IHTMLRuleStyle *This,VARIANT *p);", "IHTMLRuleStyle_put_textDecoration_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_textDecoration_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_textDecoration_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_textDecoration_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_textDecorationNone_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_textDecorationNone_Proxy(IHTMLRuleStyle *This,VARIANT_BOOL v);", "IHTMLRuleStyle_get_textDecorationNone_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_textDecorationNone_Proxy(IHTMLRuleStyle *This,VARIANT_BOOL *p);", "IHTMLRuleStyle_put_textDecorationUnderline_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_textDecorationUnderline_Proxy(IHTMLRuleStyle *This,VARIANT_BOOL v);", "IHTMLRuleStyle_get_textDecorationUnderline_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_textDecorationUnderline_Proxy(IHTMLRuleStyle *This,VARIANT_BOOL *p);", "IHTMLRuleStyle_put_textDecorationOverline_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_textDecorationOverline_Proxy(IHTMLRuleStyle *This,VARIANT_BOOL v);", "IHTMLRuleStyle_get_textDecorationOverline_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_textDecorationOverline_Proxy(IHTMLRuleStyle *This,VARIANT_BOOL *p);", "IHTMLRuleStyle_put_textDecorationLineThrough_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_textDecorationLineThrough_Proxy(IHTMLRuleStyle *This,VARIANT_BOOL v);", "IHTMLRuleStyle_get_textDecorationLineThrough_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_textDecorationLineThrough_Proxy(IHTMLRuleStyle *This,VARIANT_BOOL *p);", "IHTMLRuleStyle_put_textDecorationBlink_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_textDecorationBlink_Proxy(IHTMLRuleStyle *This,VARIANT_BOOL v);", "IHTMLRuleStyle_get_textDecorationBlink_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_textDecorationBlink_Proxy(IHTMLRuleStyle *This,VARIANT_BOOL *p);", "IHTMLRuleStyle_put_verticalAlign_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_verticalAlign_Proxy(IHTMLRuleStyle *This,VARIANT v);", "IHTMLRuleStyle_get_verticalAlign_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_verticalAlign_Proxy(IHTMLRuleStyle *This,VARIANT *p);", "IHTMLRuleStyle_put_textTransform_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_textTransform_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_textTransform_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_textTransform_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_textAlign_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_textAlign_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_textAlign_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_textAlign_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_textIndent_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_textIndent_Proxy(IHTMLRuleStyle *This,VARIANT v);", "IHTMLRuleStyle_get_textIndent_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_textIndent_Proxy(IHTMLRuleStyle *This,VARIANT *p);", "IHTMLRuleStyle_put_lineHeight_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_lineHeight_Proxy(IHTMLRuleStyle *This,VARIANT v);", "IHTMLRuleStyle_get_lineHeight_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_lineHeight_Proxy(IHTMLRuleStyle *This,VARIANT *p);", "IHTMLRuleStyle_put_marginTop_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_marginTop_Proxy(IHTMLRuleStyle *This,VARIANT v);", "IHTMLRuleStyle_get_marginTop_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_marginTop_Proxy(IHTMLRuleStyle *This,VARIANT *p);", "IHTMLRuleStyle_put_marginRight_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_marginRight_Proxy(IHTMLRuleStyle *This,VARIANT v);", "IHTMLRuleStyle_get_marginRight_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_marginRight_Proxy(IHTMLRuleStyle *This,VARIANT *p);", "IHTMLRuleStyle_put_marginBottom_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_marginBottom_Proxy(IHTMLRuleStyle *This,VARIANT v);", "IHTMLRuleStyle_get_marginBottom_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_marginBottom_Proxy(IHTMLRuleStyle *This,VARIANT *p);", "IHTMLRuleStyle_put_marginLeft_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_marginLeft_Proxy(IHTMLRuleStyle *This,VARIANT v);", "IHTMLRuleStyle_get_marginLeft_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_marginLeft_Proxy(IHTMLRuleStyle *This,VARIANT *p);", "IHTMLRuleStyle_put_margin_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_margin_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_margin_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_margin_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_paddingTop_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_paddingTop_Proxy(IHTMLRuleStyle *This,VARIANT v);", "IHTMLRuleStyle_get_paddingTop_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_paddingTop_Proxy(IHTMLRuleStyle *This,VARIANT *p);", "IHTMLRuleStyle_put_paddingRight_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_paddingRight_Proxy(IHTMLRuleStyle *This,VARIANT v);", "IHTMLRuleStyle_get_paddingRight_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_paddingRight_Proxy(IHTMLRuleStyle *This,VARIANT *p);", "IHTMLRuleStyle_put_paddingBottom_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_paddingBottom_Proxy(IHTMLRuleStyle *This,VARIANT v);", "IHTMLRuleStyle_get_paddingBottom_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_paddingBottom_Proxy(IHTMLRuleStyle *This,VARIANT *p);", "IHTMLRuleStyle_put_paddingLeft_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_paddingLeft_Proxy(IHTMLRuleStyle *This,VARIANT v);", "IHTMLRuleStyle_get_paddingLeft_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_paddingLeft_Proxy(IHTMLRuleStyle *This,VARIANT *p);", "IHTMLRuleStyle_put_padding_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_padding_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_padding_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_padding_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_border_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_border_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_border_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_border_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_borderTop_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_borderTop_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_borderTop_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_borderTop_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_borderRight_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_borderRight_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_borderRight_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_borderRight_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_borderBottom_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_borderBottom_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_borderBottom_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_borderBottom_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_borderLeft_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_borderLeft_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_borderLeft_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_borderLeft_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_borderColor_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_borderColor_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_borderColor_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_borderColor_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_borderTopColor_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_borderTopColor_Proxy(IHTMLRuleStyle *This,VARIANT v);", "IHTMLRuleStyle_get_borderTopColor_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_borderTopColor_Proxy(IHTMLRuleStyle *This,VARIANT *p);", "IHTMLRuleStyle_put_borderRightColor_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_borderRightColor_Proxy(IHTMLRuleStyle *This,VARIANT v);", "IHTMLRuleStyle_get_borderRightColor_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_borderRightColor_Proxy(IHTMLRuleStyle *This,VARIANT *p);", "IHTMLRuleStyle_put_borderBottomColor_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_borderBottomColor_Proxy(IHTMLRuleStyle *This,VARIANT v);", "IHTMLRuleStyle_get_borderBottomColor_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_borderBottomColor_Proxy(IHTMLRuleStyle *This,VARIANT *p);", "IHTMLRuleStyle_put_borderLeftColor_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_borderLeftColor_Proxy(IHTMLRuleStyle *This,VARIANT v);", "IHTMLRuleStyle_get_borderLeftColor_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_borderLeftColor_Proxy(IHTMLRuleStyle *This,VARIANT *p);", "IHTMLRuleStyle_put_borderWidth_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_borderWidth_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_borderWidth_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_borderWidth_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_borderTopWidth_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_borderTopWidth_Proxy(IHTMLRuleStyle *This,VARIANT v);", "IHTMLRuleStyle_get_borderTopWidth_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_borderTopWidth_Proxy(IHTMLRuleStyle *This,VARIANT *p);", "IHTMLRuleStyle_put_borderRightWidth_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_borderRightWidth_Proxy(IHTMLRuleStyle *This,VARIANT v);", "IHTMLRuleStyle_get_borderRightWidth_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_borderRightWidth_Proxy(IHTMLRuleStyle *This,VARIANT *p);", "IHTMLRuleStyle_put_borderBottomWidth_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_borderBottomWidth_Proxy(IHTMLRuleStyle *This,VARIANT v);", "IHTMLRuleStyle_get_borderBottomWidth_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_borderBottomWidth_Proxy(IHTMLRuleStyle *This,VARIANT *p);", "IHTMLRuleStyle_put_borderLeftWidth_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_borderLeftWidth_Proxy(IHTMLRuleStyle *This,VARIANT v);", "IHTMLRuleStyle_get_borderLeftWidth_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_borderLeftWidth_Proxy(IHTMLRuleStyle *This,VARIANT *p);", "IHTMLRuleStyle_put_borderStyle_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_borderStyle_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_borderStyle_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_borderStyle_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_borderTopStyle_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_borderTopStyle_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_borderTopStyle_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_borderTopStyle_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_borderRightStyle_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_borderRightStyle_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_borderRightStyle_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_borderRightStyle_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_borderBottomStyle_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_borderBottomStyle_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_borderBottomStyle_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_borderBottomStyle_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_borderLeftStyle_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_borderLeftStyle_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_borderLeftStyle_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_borderLeftStyle_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_width_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_width_Proxy(IHTMLRuleStyle *This,VARIANT v);", "IHTMLRuleStyle_get_width_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_width_Proxy(IHTMLRuleStyle *This,VARIANT *p);", "IHTMLRuleStyle_put_height_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_height_Proxy(IHTMLRuleStyle *This,VARIANT v);", "IHTMLRuleStyle_get_height_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_height_Proxy(IHTMLRuleStyle *This,VARIANT *p);", "IHTMLRuleStyle_put_styleFloat_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_styleFloat_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_styleFloat_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_styleFloat_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_clear_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_clear_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_clear_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_clear_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_display_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_display_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_display_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_display_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_visibility_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_visibility_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_visibility_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_visibility_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_listStyleType_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_listStyleType_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_listStyleType_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_listStyleType_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_listStylePosition_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_listStylePosition_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_listStylePosition_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_listStylePosition_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_listStyleImage_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_listStyleImage_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_listStyleImage_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_listStyleImage_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_listStyle_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_listStyle_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_listStyle_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_listStyle_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_whiteSpace_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_whiteSpace_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_whiteSpace_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_whiteSpace_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_top_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_top_Proxy(IHTMLRuleStyle *This,VARIANT v);", "IHTMLRuleStyle_get_top_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_top_Proxy(IHTMLRuleStyle *This,VARIANT *p);", "IHTMLRuleStyle_put_left_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_left_Proxy(IHTMLRuleStyle *This,VARIANT v);", "IHTMLRuleStyle_get_left_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_left_Proxy(IHTMLRuleStyle *This,VARIANT *p);", "IHTMLRuleStyle_get_position_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_position_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_zIndex_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_zIndex_Proxy(IHTMLRuleStyle *This,VARIANT v);", "IHTMLRuleStyle_get_zIndex_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_zIndex_Proxy(IHTMLRuleStyle *This,VARIANT *p);", "IHTMLRuleStyle_put_overflow_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_overflow_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_overflow_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_overflow_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_pageBreakBefore_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_pageBreakBefore_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_pageBreakBefore_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_pageBreakBefore_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_pageBreakAfter_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_pageBreakAfter_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_pageBreakAfter_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_pageBreakAfter_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_cssText_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_cssText_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_cssText_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_cssText_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_cursor_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_cursor_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_cursor_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_cursor_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_clip_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_clip_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_clip_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_clip_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_put_filter_Proxy": "HRESULT WINAPI IHTMLRuleStyle_put_filter_Proxy(IHTMLRuleStyle *This,BSTR v);", "IHTMLRuleStyle_get_filter_Proxy": "HRESULT WINAPI IHTMLRuleStyle_get_filter_Proxy(IHTMLRuleStyle *This,BSTR *p);", "IHTMLRuleStyle_setAttribute_Proxy": "HRESULT WINAPI IHTMLRuleStyle_setAttribute_Proxy(IHTMLRuleStyle *This,BSTR strAttributeName,VARIANT AttributeValue,LONG lFlags);", "IHTMLRuleStyle_getAttribute_Proxy": "HRESULT WINAPI IHTMLRuleStyle_getAttribute_Proxy(IHTMLRuleStyle *This,BSTR strAttributeName,LONG lFlags,VARIANT *AttributeValue);", "IHTMLRuleStyle_removeAttribute_Proxy": "HRESULT WINAPI IHTMLRuleStyle_removeAttribute_Proxy(IHTMLRuleStyle *This,BSTR strAttributeName,LONG lFlags,VARIANT_BOOL *pfSuccess);", "IHTMLRuleStyle2_put_tableLayout_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_put_tableLayout_Proxy(IHTMLRuleStyle2 *This,BSTR v);", "IHTMLRuleStyle2_get_tableLayout_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_get_tableLayout_Proxy(IHTMLRuleStyle2 *This,BSTR *p);", "IHTMLRuleStyle2_put_borderCollapse_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_put_borderCollapse_Proxy(IHTMLRuleStyle2 *This,BSTR v);", "IHTMLRuleStyle2_get_borderCollapse_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_get_borderCollapse_Proxy(IHTMLRuleStyle2 *This,BSTR *p);", "IHTMLRuleStyle2_put_direction_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_put_direction_Proxy(IHTMLRuleStyle2 *This,BSTR v);", "IHTMLRuleStyle2_get_direction_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_get_direction_Proxy(IHTMLRuleStyle2 *This,BSTR *p);", "IHTMLRuleStyle2_put_behavior_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_put_behavior_Proxy(IHTMLRuleStyle2 *This,BSTR v);", "IHTMLRuleStyle2_get_behavior_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_get_behavior_Proxy(IHTMLRuleStyle2 *This,BSTR *p);", "IHTMLRuleStyle2_put_position_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_put_position_Proxy(IHTMLRuleStyle2 *This,BSTR v);", "IHTMLRuleStyle2_get_position_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_get_position_Proxy(IHTMLRuleStyle2 *This,BSTR *p);", "IHTMLRuleStyle2_put_unicodeBidi_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_put_unicodeBidi_Proxy(IHTMLRuleStyle2 *This,BSTR v);", "IHTMLRuleStyle2_get_unicodeBidi_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_get_unicodeBidi_Proxy(IHTMLRuleStyle2 *This,BSTR *p);", "IHTMLRuleStyle2_put_bottom_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_put_bottom_Proxy(IHTMLRuleStyle2 *This,VARIANT v);", "IHTMLRuleStyle2_get_bottom_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_get_bottom_Proxy(IHTMLRuleStyle2 *This,VARIANT *p);", "IHTMLRuleStyle2_put_right_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_put_right_Proxy(IHTMLRuleStyle2 *This,VARIANT v);", "IHTMLRuleStyle2_get_right_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_get_right_Proxy(IHTMLRuleStyle2 *This,VARIANT *p);", "IHTMLRuleStyle2_put_pixelBottom_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_put_pixelBottom_Proxy(IHTMLRuleStyle2 *This,__LONG32 v);", "IHTMLRuleStyle2_get_pixelBottom_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_get_pixelBottom_Proxy(IHTMLRuleStyle2 *This,__LONG32 *p);", "IHTMLRuleStyle2_put_pixelRight_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_put_pixelRight_Proxy(IHTMLRuleStyle2 *This,__LONG32 v);", "IHTMLRuleStyle2_get_pixelRight_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_get_pixelRight_Proxy(IHTMLRuleStyle2 *This,__LONG32 *p);", "IHTMLRuleStyle2_put_posBottom_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_put_posBottom_Proxy(IHTMLRuleStyle2 *This,float v);", "IHTMLRuleStyle2_get_posBottom_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_get_posBottom_Proxy(IHTMLRuleStyle2 *This,float *p);", "IHTMLRuleStyle2_put_posRight_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_put_posRight_Proxy(IHTMLRuleStyle2 *This,float v);", "IHTMLRuleStyle2_get_posRight_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_get_posRight_Proxy(IHTMLRuleStyle2 *This,float *p);", "IHTMLRuleStyle2_put_imeMode_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_put_imeMode_Proxy(IHTMLRuleStyle2 *This,BSTR v);", "IHTMLRuleStyle2_get_imeMode_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_get_imeMode_Proxy(IHTMLRuleStyle2 *This,BSTR *p);", "IHTMLRuleStyle2_put_rubyAlign_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_put_rubyAlign_Proxy(IHTMLRuleStyle2 *This,BSTR v);", "IHTMLRuleStyle2_get_rubyAlign_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_get_rubyAlign_Proxy(IHTMLRuleStyle2 *This,BSTR *p);", "IHTMLRuleStyle2_put_rubyPosition_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_put_rubyPosition_Proxy(IHTMLRuleStyle2 *This,BSTR v);", "IHTMLRuleStyle2_get_rubyPosition_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_get_rubyPosition_Proxy(IHTMLRuleStyle2 *This,BSTR *p);", "IHTMLRuleStyle2_put_rubyOverhang_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_put_rubyOverhang_Proxy(IHTMLRuleStyle2 *This,BSTR v);", "IHTMLRuleStyle2_get_rubyOverhang_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_get_rubyOverhang_Proxy(IHTMLRuleStyle2 *This,BSTR *p);", "IHTMLRuleStyle2_put_layoutGridChar_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_put_layoutGridChar_Proxy(IHTMLRuleStyle2 *This,VARIANT v);", "IHTMLRuleStyle2_get_layoutGridChar_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_get_layoutGridChar_Proxy(IHTMLRuleStyle2 *This,VARIANT *p);", "IHTMLRuleStyle2_put_layoutGridLine_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_put_layoutGridLine_Proxy(IHTMLRuleStyle2 *This,VARIANT v);", "IHTMLRuleStyle2_get_layoutGridLine_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_get_layoutGridLine_Proxy(IHTMLRuleStyle2 *This,VARIANT *p);", "IHTMLRuleStyle2_put_layoutGridMode_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_put_layoutGridMode_Proxy(IHTMLRuleStyle2 *This,BSTR v);", "IHTMLRuleStyle2_get_layoutGridMode_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_get_layoutGridMode_Proxy(IHTMLRuleStyle2 *This,BSTR *p);", "IHTMLRuleStyle2_put_layoutGridType_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_put_layoutGridType_Proxy(IHTMLRuleStyle2 *This,BSTR v);", "IHTMLRuleStyle2_get_layoutGridType_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_get_layoutGridType_Proxy(IHTMLRuleStyle2 *This,BSTR *p);", "IHTMLRuleStyle2_put_layoutGrid_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_put_layoutGrid_Proxy(IHTMLRuleStyle2 *This,BSTR v);", "IHTMLRuleStyle2_get_layoutGrid_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_get_layoutGrid_Proxy(IHTMLRuleStyle2 *This,BSTR *p);", "IHTMLRuleStyle2_put_textAutospace_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_put_textAutospace_Proxy(IHTMLRuleStyle2 *This,BSTR v);", "IHTMLRuleStyle2_get_textAutospace_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_get_textAutospace_Proxy(IHTMLRuleStyle2 *This,BSTR *p);", "IHTMLRuleStyle2_put_wordBreak_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_put_wordBreak_Proxy(IHTMLRuleStyle2 *This,BSTR v);", "IHTMLRuleStyle2_get_wordBreak_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_get_wordBreak_Proxy(IHTMLRuleStyle2 *This,BSTR *p);", "IHTMLRuleStyle2_put_lineBreak_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_put_lineBreak_Proxy(IHTMLRuleStyle2 *This,BSTR v);", "IHTMLRuleStyle2_get_lineBreak_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_get_lineBreak_Proxy(IHTMLRuleStyle2 *This,BSTR *p);", "IHTMLRuleStyle2_put_textJustify_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_put_textJustify_Proxy(IHTMLRuleStyle2 *This,BSTR v);", "IHTMLRuleStyle2_get_textJustify_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_get_textJustify_Proxy(IHTMLRuleStyle2 *This,BSTR *p);", "IHTMLRuleStyle2_put_textJustifyTrim_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_put_textJustifyTrim_Proxy(IHTMLRuleStyle2 *This,BSTR v);", "IHTMLRuleStyle2_get_textJustifyTrim_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_get_textJustifyTrim_Proxy(IHTMLRuleStyle2 *This,BSTR *p);", "IHTMLRuleStyle2_put_textKashida_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_put_textKashida_Proxy(IHTMLRuleStyle2 *This,VARIANT v);", "IHTMLRuleStyle2_get_textKashida_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_get_textKashida_Proxy(IHTMLRuleStyle2 *This,VARIANT *p);", "IHTMLRuleStyle2_put_overflowX_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_put_overflowX_Proxy(IHTMLRuleStyle2 *This,BSTR v);", "IHTMLRuleStyle2_get_overflowX_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_get_overflowX_Proxy(IHTMLRuleStyle2 *This,BSTR *p);", "IHTMLRuleStyle2_put_overflowY_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_put_overflowY_Proxy(IHTMLRuleStyle2 *This,BSTR v);", "IHTMLRuleStyle2_get_overflowY_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_get_overflowY_Proxy(IHTMLRuleStyle2 *This,BSTR *p);", "IHTMLRuleStyle2_put_accelerator_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_put_accelerator_Proxy(IHTMLRuleStyle2 *This,BSTR v);", "IHTMLRuleStyle2_get_accelerator_Proxy": "HRESULT WINAPI IHTMLRuleStyle2_get_accelerator_Proxy(IHTMLRuleStyle2 *This,BSTR *p);", "IHTMLRuleStyle3_put_layoutFlow_Proxy": "HRESULT WINAPI IHTMLRuleStyle3_put_layoutFlow_Proxy(IHTMLRuleStyle3 *This,BSTR v);", "IHTMLRuleStyle3_get_layoutFlow_Proxy": "HRESULT WINAPI IHTMLRuleStyle3_get_layoutFlow_Proxy(IHTMLRuleStyle3 *This,BSTR *p);", "IHTMLRuleStyle3_put_zoom_Proxy": "HRESULT WINAPI IHTMLRuleStyle3_put_zoom_Proxy(IHTMLRuleStyle3 *This,VARIANT v);", "IHTMLRuleStyle3_get_zoom_Proxy": "HRESULT WINAPI IHTMLRuleStyle3_get_zoom_Proxy(IHTMLRuleStyle3 *This,VARIANT *p);", "IHTMLRuleStyle3_put_wordWrap_Proxy": "HRESULT WINAPI IHTMLRuleStyle3_put_wordWrap_Proxy(IHTMLRuleStyle3 *This,BSTR v);", "IHTMLRuleStyle3_get_wordWrap_Proxy": "HRESULT WINAPI IHTMLRuleStyle3_get_wordWrap_Proxy(IHTMLRuleStyle3 *This,BSTR *p);", "IHTMLRuleStyle3_put_textUnderlinePosition_Proxy": "HRESULT WINAPI IHTMLRuleStyle3_put_textUnderlinePosition_Proxy(IHTMLRuleStyle3 *This,BSTR v);", "IHTMLRuleStyle3_get_textUnderlinePosition_Proxy": "HRESULT WINAPI IHTMLRuleStyle3_get_textUnderlinePosition_Proxy(IHTMLRuleStyle3 *This,BSTR *p);", "IHTMLRuleStyle3_put_scrollbarBaseColor_Proxy": "HRESULT WINAPI IHTMLRuleStyle3_put_scrollbarBaseColor_Proxy(IHTMLRuleStyle3 *This,VARIANT v);", "IHTMLRuleStyle3_get_scrollbarBaseColor_Proxy": "HRESULT WINAPI IHTMLRuleStyle3_get_scrollbarBaseColor_Proxy(IHTMLRuleStyle3 *This,VARIANT *p);", "IHTMLRuleStyle3_put_scrollbarFaceColor_Proxy": "HRESULT WINAPI IHTMLRuleStyle3_put_scrollbarFaceColor_Proxy(IHTMLRuleStyle3 *This,VARIANT v);", "IHTMLRuleStyle3_get_scrollbarFaceColor_Proxy": "HRESULT WINAPI IHTMLRuleStyle3_get_scrollbarFaceColor_Proxy(IHTMLRuleStyle3 *This,VARIANT *p);", "IHTMLRuleStyle3_put_scrollbar3dLightColor_Proxy": "HRESULT WINAPI IHTMLRuleStyle3_put_scrollbar3dLightColor_Proxy(IHTMLRuleStyle3 *This,VARIANT v);", "IHTMLRuleStyle3_get_scrollbar3dLightColor_Proxy": "HRESULT WINAPI IHTMLRuleStyle3_get_scrollbar3dLightColor_Proxy(IHTMLRuleStyle3 *This,VARIANT *p);", "IHTMLRuleStyle3_put_scrollbarShadowColor_Proxy": "HRESULT WINAPI IHTMLRuleStyle3_put_scrollbarShadowColor_Proxy(IHTMLRuleStyle3 *This,VARIANT v);", "IHTMLRuleStyle3_get_scrollbarShadowColor_Proxy": "HRESULT WINAPI IHTMLRuleStyle3_get_scrollbarShadowColor_Proxy(IHTMLRuleStyle3 *This,VARIANT *p);", "IHTMLRuleStyle3_put_scrollbarHighlightColor_Proxy": "HRESULT WINAPI IHTMLRuleStyle3_put_scrollbarHighlightColor_Proxy(IHTMLRuleStyle3 *This,VARIANT v);", "IHTMLRuleStyle3_get_scrollbarHighlightColor_Proxy": "HRESULT WINAPI IHTMLRuleStyle3_get_scrollbarHighlightColor_Proxy(IHTMLRuleStyle3 *This,VARIANT *p);", "IHTMLRuleStyle3_put_scrollbarDarkShadowColor_Proxy": "HRESULT WINAPI IHTMLRuleStyle3_put_scrollbarDarkShadowColor_Proxy(IHTMLRuleStyle3 *This,VARIANT v);", "IHTMLRuleStyle3_get_scrollbarDarkShadowColor_Proxy": "HRESULT WINAPI IHTMLRuleStyle3_get_scrollbarDarkShadowColor_Proxy(IHTMLRuleStyle3 *This,VARIANT *p);", "IHTMLRuleStyle3_put_scrollbarArrowColor_Proxy": "HRESULT WINAPI IHTMLRuleStyle3_put_scrollbarArrowColor_Proxy(IHTMLRuleStyle3 *This,VARIANT v);", "IHTMLRuleStyle3_get_scrollbarArrowColor_Proxy": "HRESULT WINAPI IHTMLRuleStyle3_get_scrollbarArrowColor_Proxy(IHTMLRuleStyle3 *This,VARIANT *p);", "IHTMLRuleStyle3_put_scrollbarTrackColor_Proxy": "HRESULT WINAPI IHTMLRuleStyle3_put_scrollbarTrackColor_Proxy(IHTMLRuleStyle3 *This,VARIANT v);", "IHTMLRuleStyle3_get_scrollbarTrackColor_Proxy": "HRESULT WINAPI IHTMLRuleStyle3_get_scrollbarTrackColor_Proxy(IHTMLRuleStyle3 *This,VARIANT *p);", "IHTMLRuleStyle3_put_writingMode_Proxy": "HRESULT WINAPI IHTMLRuleStyle3_put_writingMode_Proxy(IHTMLRuleStyle3 *This,BSTR v);", "IHTMLRuleStyle3_get_writingMode_Proxy": "HRESULT WINAPI IHTMLRuleStyle3_get_writingMode_Proxy(IHTMLRuleStyle3 *This,BSTR *p);", "IHTMLRuleStyle3_put_textAlignLast_Proxy": "HRESULT WINAPI IHTMLRuleStyle3_put_textAlignLast_Proxy(IHTMLRuleStyle3 *This,BSTR v);", "IHTMLRuleStyle3_get_textAlignLast_Proxy": "HRESULT WINAPI IHTMLRuleStyle3_get_textAlignLast_Proxy(IHTMLRuleStyle3 *This,BSTR *p);", "IHTMLRuleStyle3_put_textKashidaSpace_Proxy": "HRESULT WINAPI IHTMLRuleStyle3_put_textKashidaSpace_Proxy(IHTMLRuleStyle3 *This,VARIANT v);", "IHTMLRuleStyle3_get_textKashidaSpace_Proxy": "HRESULT WINAPI IHTMLRuleStyle3_get_textKashidaSpace_Proxy(IHTMLRuleStyle3 *This,VARIANT *p);", "IHTMLRuleStyle4_put_textOverflow_Proxy": "HRESULT WINAPI IHTMLRuleStyle4_put_textOverflow_Proxy(IHTMLRuleStyle4 *This,BSTR v);", "IHTMLRuleStyle4_get_textOverflow_Proxy": "HRESULT WINAPI IHTMLRuleStyle4_get_textOverflow_Proxy(IHTMLRuleStyle4 *This,BSTR *p);", "IHTMLRuleStyle4_put_minHeight_Proxy": "HRESULT WINAPI IHTMLRuleStyle4_put_minHeight_Proxy(IHTMLRuleStyle4 *This,VARIANT v);", "IHTMLRuleStyle4_get_minHeight_Proxy": "HRESULT WINAPI IHTMLRuleStyle4_get_minHeight_Proxy(IHTMLRuleStyle4 *This,VARIANT *p);", "IHTMLRenderStyle_put_textLineThroughStyle_Proxy": "HRESULT WINAPI IHTMLRenderStyle_put_textLineThroughStyle_Proxy(IHTMLRenderStyle *This,BSTR v);", "IHTMLRenderStyle_get_textLineThroughStyle_Proxy": "HRESULT WINAPI IHTMLRenderStyle_get_textLineThroughStyle_Proxy(IHTMLRenderStyle *This,BSTR *p);", "IHTMLRenderStyle_put_textUnderlineStyle_Proxy": "HRESULT WINAPI IHTMLRenderStyle_put_textUnderlineStyle_Proxy(IHTMLRenderStyle *This,BSTR v);", "IHTMLRenderStyle_get_textUnderlineStyle_Proxy": "HRESULT WINAPI IHTMLRenderStyle_get_textUnderlineStyle_Proxy(IHTMLRenderStyle *This,BSTR *p);", "IHTMLRenderStyle_put_textEffect_Proxy": "HRESULT WINAPI IHTMLRenderStyle_put_textEffect_Proxy(IHTMLRenderStyle *This,BSTR v);", "IHTMLRenderStyle_get_textEffect_Proxy": "HRESULT WINAPI IHTMLRenderStyle_get_textEffect_Proxy(IHTMLRenderStyle *This,BSTR *p);", "IHTMLRenderStyle_put_textColor_Proxy": "HRESULT WINAPI IHTMLRenderStyle_put_textColor_Proxy(IHTMLRenderStyle *This,VARIANT v);", "IHTMLRenderStyle_get_textColor_Proxy": "HRESULT WINAPI IHTMLRenderStyle_get_textColor_Proxy(IHTMLRenderStyle *This,VARIANT *p);", "IHTMLRenderStyle_put_textBackgroundColor_Proxy": "HRESULT WINAPI IHTMLRenderStyle_put_textBackgroundColor_Proxy(IHTMLRenderStyle *This,VARIANT v);", "IHTMLRenderStyle_get_textBackgroundColor_Proxy": "HRESULT WINAPI IHTMLRenderStyle_get_textBackgroundColor_Proxy(IHTMLRenderStyle *This,VARIANT *p);", "IHTMLRenderStyle_put_textDecorationColor_Proxy": "HRESULT WINAPI IHTMLRenderStyle_put_textDecorationColor_Proxy(IHTMLRenderStyle *This,VARIANT v);", "IHTMLRenderStyle_get_textDecorationColor_Proxy": "HRESULT WINAPI IHTMLRenderStyle_get_textDecorationColor_Proxy(IHTMLRenderStyle *This,VARIANT *p);", "IHTMLRenderStyle_put_renderingPriority_Proxy": "HRESULT WINAPI IHTMLRenderStyle_put_renderingPriority_Proxy(IHTMLRenderStyle *This,__LONG32 v);", "IHTMLRenderStyle_get_renderingPriority_Proxy": "HRESULT WINAPI IHTMLRenderStyle_get_renderingPriority_Proxy(IHTMLRenderStyle *This,__LONG32 *p);", "IHTMLRenderStyle_put_defaultTextSelection_Proxy": "HRESULT WINAPI IHTMLRenderStyle_put_defaultTextSelection_Proxy(IHTMLRenderStyle *This,BSTR v);", "IHTMLRenderStyle_get_defaultTextSelection_Proxy": "HRESULT WINAPI IHTMLRenderStyle_get_defaultTextSelection_Proxy(IHTMLRenderStyle *This,BSTR *p);", "IHTMLRenderStyle_put_textDecoration_Proxy": "HRESULT WINAPI IHTMLRenderStyle_put_textDecoration_Proxy(IHTMLRenderStyle *This,BSTR v);", "IHTMLRenderStyle_get_textDecoration_Proxy": "HRESULT WINAPI IHTMLRenderStyle_get_textDecoration_Proxy(IHTMLRenderStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_position_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_position_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_styleFloat_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_styleFloat_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_color_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_color_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_backgroundColor_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_backgroundColor_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_fontFamily_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_fontFamily_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_fontStyle_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_fontStyle_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_fontVariant_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_fontVariant_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_fontWeight_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_fontWeight_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_fontSize_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_fontSize_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_backgroundImage_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_backgroundImage_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_backgroundPositionX_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_backgroundPositionX_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_backgroundPositionY_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_backgroundPositionY_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_backgroundRepeat_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_backgroundRepeat_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_borderLeftColor_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_borderLeftColor_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_borderTopColor_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_borderTopColor_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_borderRightColor_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_borderRightColor_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_borderBottomColor_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_borderBottomColor_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_borderTopStyle_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_borderTopStyle_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_borderRightStyle_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_borderRightStyle_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_borderBottomStyle_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_borderBottomStyle_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_borderLeftStyle_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_borderLeftStyle_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_borderTopWidth_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_borderTopWidth_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_borderRightWidth_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_borderRightWidth_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_borderBottomWidth_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_borderBottomWidth_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_borderLeftWidth_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_borderLeftWidth_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_left_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_left_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_top_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_top_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_width_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_width_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_height_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_height_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_paddingLeft_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_paddingLeft_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_paddingTop_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_paddingTop_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_paddingRight_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_paddingRight_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_paddingBottom_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_paddingBottom_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_textAlign_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_textAlign_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_textDecoration_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_textDecoration_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_display_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_display_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_visibility_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_visibility_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_zIndex_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_zIndex_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_letterSpacing_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_letterSpacing_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_lineHeight_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_lineHeight_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_textIndent_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_textIndent_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_verticalAlign_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_verticalAlign_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_backgroundAttachment_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_backgroundAttachment_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_marginTop_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_marginTop_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_marginRight_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_marginRight_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_marginBottom_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_marginBottom_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_marginLeft_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_marginLeft_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_clear_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_clear_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_listStyleType_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_listStyleType_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_listStylePosition_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_listStylePosition_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_listStyleImage_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_listStyleImage_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_clipTop_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_clipTop_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_clipRight_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_clipRight_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_clipBottom_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_clipBottom_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_clipLeft_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_clipLeft_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_overflow_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_overflow_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_pageBreakBefore_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_pageBreakBefore_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_pageBreakAfter_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_pageBreakAfter_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_cursor_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_cursor_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_tableLayout_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_tableLayout_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_borderCollapse_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_borderCollapse_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_direction_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_direction_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_behavior_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_behavior_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_getAttribute_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_getAttribute_Proxy(IHTMLCurrentStyle *This,BSTR strAttributeName,LONG lFlags,VARIANT *AttributeValue);", "IHTMLCurrentStyle_get_unicodeBidi_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_unicodeBidi_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_right_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_right_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_bottom_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_bottom_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_imeMode_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_imeMode_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_rubyAlign_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_rubyAlign_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_rubyPosition_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_rubyPosition_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_rubyOverhang_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_rubyOverhang_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_textAutospace_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_textAutospace_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_lineBreak_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_lineBreak_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_wordBreak_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_wordBreak_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_textJustify_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_textJustify_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_textJustifyTrim_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_textJustifyTrim_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_textKashida_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_textKashida_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_blockDirection_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_blockDirection_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_layoutGridChar_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_layoutGridChar_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_layoutGridLine_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_layoutGridLine_Proxy(IHTMLCurrentStyle *This,VARIANT *p);", "IHTMLCurrentStyle_get_layoutGridMode_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_layoutGridMode_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_layoutGridType_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_layoutGridType_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_borderStyle_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_borderStyle_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_borderColor_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_borderColor_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_borderWidth_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_borderWidth_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_padding_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_padding_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_margin_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_margin_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_accelerator_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_accelerator_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_overflowX_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_overflowX_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_overflowY_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_overflowY_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle_get_textTransform_Proxy": "HRESULT WINAPI IHTMLCurrentStyle_get_textTransform_Proxy(IHTMLCurrentStyle *This,BSTR *p);", "IHTMLCurrentStyle2_get_layoutFlow_Proxy": "HRESULT WINAPI IHTMLCurrentStyle2_get_layoutFlow_Proxy(IHTMLCurrentStyle2 *This,BSTR *p);", "IHTMLCurrentStyle2_get_wordWrap_Proxy": "HRESULT WINAPI IHTMLCurrentStyle2_get_wordWrap_Proxy(IHTMLCurrentStyle2 *This,BSTR *p);", "IHTMLCurrentStyle2_get_textUnderlinePosition_Proxy": "HRESULT WINAPI IHTMLCurrentStyle2_get_textUnderlinePosition_Proxy(IHTMLCurrentStyle2 *This,BSTR *p);", "IHTMLCurrentStyle2_get_hasLayout_Proxy": "HRESULT WINAPI IHTMLCurrentStyle2_get_hasLayout_Proxy(IHTMLCurrentStyle2 *This,VARIANT_BOOL *p);", "IHTMLCurrentStyle2_get_scrollbarBaseColor_Proxy": "HRESULT WINAPI IHTMLCurrentStyle2_get_scrollbarBaseColor_Proxy(IHTMLCurrentStyle2 *This,VARIANT *p);", "IHTMLCurrentStyle2_get_scrollbarFaceColor_Proxy": "HRESULT WINAPI IHTMLCurrentStyle2_get_scrollbarFaceColor_Proxy(IHTMLCurrentStyle2 *This,VARIANT *p);", "IHTMLCurrentStyle2_get_scrollbar3dLightColor_Proxy": "HRESULT WINAPI IHTMLCurrentStyle2_get_scrollbar3dLightColor_Proxy(IHTMLCurrentStyle2 *This,VARIANT *p);", "IHTMLCurrentStyle2_get_scrollbarShadowColor_Proxy": "HRESULT WINAPI IHTMLCurrentStyle2_get_scrollbarShadowColor_Proxy(IHTMLCurrentStyle2 *This,VARIANT *p);", "IHTMLCurrentStyle2_get_scrollbarHighlightColor_Proxy": "HRESULT WINAPI IHTMLCurrentStyle2_get_scrollbarHighlightColor_Proxy(IHTMLCurrentStyle2 *This,VARIANT *p);", "IHTMLCurrentStyle2_get_scrollbarDarkShadowColor_Proxy": "HRESULT WINAPI IHTMLCurrentStyle2_get_scrollbarDarkShadowColor_Proxy(IHTMLCurrentStyle2 *This,VARIANT *p);", "IHTMLCurrentStyle2_get_scrollbarArrowColor_Proxy": "HRESULT WINAPI IHTMLCurrentStyle2_get_scrollbarArrowColor_Proxy(IHTMLCurrentStyle2 *This,VARIANT *p);", "IHTMLCurrentStyle2_get_scrollbarTrackColor_Proxy": "HRESULT WINAPI IHTMLCurrentStyle2_get_scrollbarTrackColor_Proxy(IHTMLCurrentStyle2 *This,VARIANT *p);", "IHTMLCurrentStyle2_get_writingMode_Proxy": "HRESULT WINAPI IHTMLCurrentStyle2_get_writingMode_Proxy(IHTMLCurrentStyle2 *This,BSTR *p);", "IHTMLCurrentStyle2_get_zoom_Proxy": "HRESULT WINAPI IHTMLCurrentStyle2_get_zoom_Proxy(IHTMLCurrentStyle2 *This,VARIANT *p);", "IHTMLCurrentStyle2_get_filter_Proxy": "HRESULT WINAPI IHTMLCurrentStyle2_get_filter_Proxy(IHTMLCurrentStyle2 *This,BSTR *p);", "IHTMLCurrentStyle2_get_textAlignLast_Proxy": "HRESULT WINAPI IHTMLCurrentStyle2_get_textAlignLast_Proxy(IHTMLCurrentStyle2 *This,BSTR *p);", "IHTMLCurrentStyle2_get_textKashidaSpace_Proxy": "HRESULT WINAPI IHTMLCurrentStyle2_get_textKashidaSpace_Proxy(IHTMLCurrentStyle2 *This,VARIANT *p);", "IHTMLCurrentStyle2_get_isBlock_Proxy": "HRESULT WINAPI IHTMLCurrentStyle2_get_isBlock_Proxy(IHTMLCurrentStyle2 *This,VARIANT_BOOL *p);", "IHTMLCurrentStyle3_get_textOverflow_Proxy": "HRESULT WINAPI IHTMLCurrentStyle3_get_textOverflow_Proxy(IHTMLCurrentStyle3 *This,BSTR *p);", "IHTMLCurrentStyle3_get_minHeight_Proxy": "HRESULT WINAPI IHTMLCurrentStyle3_get_minHeight_Proxy(IHTMLCurrentStyle3 *This,VARIANT *p);", "IHTMLCurrentStyle3_get_wordSpacing_Proxy": "HRESULT WINAPI IHTMLCurrentStyle3_get_wordSpacing_Proxy(IHTMLCurrentStyle3 *This,VARIANT *p);", "IHTMLCurrentStyle3_get_whiteSpace_Proxy": "HRESULT WINAPI IHTMLCurrentStyle3_get_whiteSpace_Proxy(IHTMLCurrentStyle3 *This,BSTR *p);", "IHTMLElement_setAttribute_Proxy": "HRESULT WINAPI IHTMLElement_setAttribute_Proxy(IHTMLElement *This,BSTR strAttributeName,VARIANT AttributeValue,LONG lFlags);", "IHTMLElement_getAttribute_Proxy": "HRESULT WINAPI IHTMLElement_getAttribute_Proxy(IHTMLElement *This,BSTR strAttributeName,LONG lFlags,VARIANT *AttributeValue);", "IHTMLElement_removeAttribute_Proxy": "HRESULT WINAPI IHTMLElement_removeAttribute_Proxy(IHTMLElement *This,BSTR strAttributeName,LONG lFlags,VARIANT_BOOL *pfSuccess);", "IHTMLElement_put_className_Proxy": "HRESULT WINAPI IHTMLElement_put_className_Proxy(IHTMLElement *This,BSTR v);", "IHTMLElement_get_className_Proxy": "HRESULT WINAPI IHTMLElement_get_className_Proxy(IHTMLElement *This,BSTR *p);", "IHTMLElement_put_id_Proxy": "HRESULT WINAPI IHTMLElement_put_id_Proxy(IHTMLElement *This,BSTR v);", "IHTMLElement_get_id_Proxy": "HRESULT WINAPI IHTMLElement_get_id_Proxy(IHTMLElement *This,BSTR *p);", "IHTMLElement_get_tagName_Proxy": "HRESULT WINAPI IHTMLElement_get_tagName_Proxy(IHTMLElement *This,BSTR *p);", "IHTMLElement_get_parentElement_Proxy": "HRESULT WINAPI IHTMLElement_get_parentElement_Proxy(IHTMLElement *This,IHTMLElement **p);", "IHTMLElement_get_style_Proxy": "HRESULT WINAPI IHTMLElement_get_style_Proxy(IHTMLElement *This,IHTMLStyle **p);", "IHTMLElement_put_onhelp_Proxy": "HRESULT WINAPI IHTMLElement_put_onhelp_Proxy(IHTMLElement *This,VARIANT v);", "IHTMLElement_get_onhelp_Proxy": "HRESULT WINAPI IHTMLElement_get_onhelp_Proxy(IHTMLElement *This,VARIANT *p);", "IHTMLElement_put_onclick_Proxy": "HRESULT WINAPI IHTMLElement_put_onclick_Proxy(IHTMLElement *This,VARIANT v);", "IHTMLElement_get_onclick_Proxy": "HRESULT WINAPI IHTMLElement_get_onclick_Proxy(IHTMLElement *This,VARIANT *p);", "IHTMLElement_put_ondblclick_Proxy": "HRESULT WINAPI IHTMLElement_put_ondblclick_Proxy(IHTMLElement *This,VARIANT v);", "IHTMLElement_get_ondblclick_Proxy": "HRESULT WINAPI IHTMLElement_get_ondblclick_Proxy(IHTMLElement *This,VARIANT *p);", "IHTMLElement_put_onkeydown_Proxy": "HRESULT WINAPI IHTMLElement_put_onkeydown_Proxy(IHTMLElement *This,VARIANT v);", "IHTMLElement_get_onkeydown_Proxy": "HRESULT WINAPI IHTMLElement_get_onkeydown_Proxy(IHTMLElement *This,VARIANT *p);", "IHTMLElement_put_onkeyup_Proxy": "HRESULT WINAPI IHTMLElement_put_onkeyup_Proxy(IHTMLElement *This,VARIANT v);", "IHTMLElement_get_onkeyup_Proxy": "HRESULT WINAPI IHTMLElement_get_onkeyup_Proxy(IHTMLElement *This,VARIANT *p);", "IHTMLElement_put_onkeypress_Proxy": "HRESULT WINAPI IHTMLElement_put_onkeypress_Proxy(IHTMLElement *This,VARIANT v);", "IHTMLElement_get_onkeypress_Proxy": "HRESULT WINAPI IHTMLElement_get_onkeypress_Proxy(IHTMLElement *This,VARIANT *p);", "IHTMLElement_put_onmouseout_Proxy": "HRESULT WINAPI IHTMLElement_put_onmouseout_Proxy(IHTMLElement *This,VARIANT v);", "IHTMLElement_get_onmouseout_Proxy": "HRESULT WINAPI IHTMLElement_get_onmouseout_Proxy(IHTMLElement *This,VARIANT *p);", "IHTMLElement_put_onmouseover_Proxy": "HRESULT WINAPI IHTMLElement_put_onmouseover_Proxy(IHTMLElement *This,VARIANT v);", "IHTMLElement_get_onmouseover_Proxy": "HRESULT WINAPI IHTMLElement_get_onmouseover_Proxy(IHTMLElement *This,VARIANT *p);", "IHTMLElement_put_onmousemove_Proxy": "HRESULT WINAPI IHTMLElement_put_onmousemove_Proxy(IHTMLElement *This,VARIANT v);", "IHTMLElement_get_onmousemove_Proxy": "HRESULT WINAPI IHTMLElement_get_onmousemove_Proxy(IHTMLElement *This,VARIANT *p);", "IHTMLElement_put_onmousedown_Proxy": "HRESULT WINAPI IHTMLElement_put_onmousedown_Proxy(IHTMLElement *This,VARIANT v);", "IHTMLElement_get_onmousedown_Proxy": "HRESULT WINAPI IHTMLElement_get_onmousedown_Proxy(IHTMLElement *This,VARIANT *p);", "IHTMLElement_put_onmouseup_Proxy": "HRESULT WINAPI IHTMLElement_put_onmouseup_Proxy(IHTMLElement *This,VARIANT v);", "IHTMLElement_get_onmouseup_Proxy": "HRESULT WINAPI IHTMLElement_get_onmouseup_Proxy(IHTMLElement *This,VARIANT *p);", "IHTMLElement_get_document_Proxy": "HRESULT WINAPI IHTMLElement_get_document_Proxy(IHTMLElement *This,IDispatch **p);", "IHTMLElement_put_title_Proxy": "HRESULT WINAPI IHTMLElement_put_title_Proxy(IHTMLElement *This,BSTR v);", "IHTMLElement_get_title_Proxy": "HRESULT WINAPI IHTMLElement_get_title_Proxy(IHTMLElement *This,BSTR *p);", "IHTMLElement_put_language_Proxy": "HRESULT WINAPI IHTMLElement_put_language_Proxy(IHTMLElement *This,BSTR v);", "IHTMLElement_get_language_Proxy": "HRESULT WINAPI IHTMLElement_get_language_Proxy(IHTMLElement *This,BSTR *p);", "IHTMLElement_put_onselectstart_Proxy": "HRESULT WINAPI IHTMLElement_put_onselectstart_Proxy(IHTMLElement *This,VARIANT v);", "IHTMLElement_get_onselectstart_Proxy": "HRESULT WINAPI IHTMLElement_get_onselectstart_Proxy(IHTMLElement *This,VARIANT *p);", "IHTMLElement_scrollIntoView_Proxy": "HRESULT WINAPI IHTMLElement_scrollIntoView_Proxy(IHTMLElement *This,VARIANT varargStart);", "IHTMLElement_contains_Proxy": "HRESULT WINAPI IHTMLElement_contains_Proxy(IHTMLElement *This,IHTMLElement *pChild,VARIANT_BOOL *pfResult);", "IHTMLElement_get_sourceIndex_Proxy": "HRESULT WINAPI IHTMLElement_get_sourceIndex_Proxy(IHTMLElement *This,__LONG32 *p);", "IHTMLElement_get_recordNumber_Proxy": "HRESULT WINAPI IHTMLElement_get_recordNumber_Proxy(IHTMLElement *This,VARIANT *p);", "IHTMLElement_put_lang_Proxy": "HRESULT WINAPI IHTMLElement_put_lang_Proxy(IHTMLElement *This,BSTR v);", "IHTMLElement_get_lang_Proxy": "HRESULT WINAPI IHTMLElement_get_lang_Proxy(IHTMLElement *This,BSTR *p);", "IHTMLElement_get_offsetLeft_Proxy": "HRESULT WINAPI IHTMLElement_get_offsetLeft_Proxy(IHTMLElement *This,__LONG32 *p);", "IHTMLElement_get_offsetTop_Proxy": "HRESULT WINAPI IHTMLElement_get_offsetTop_Proxy(IHTMLElement *This,__LONG32 *p);", "IHTMLElement_get_offsetWidth_Proxy": "HRESULT WINAPI IHTMLElement_get_offsetWidth_Proxy(IHTMLElement *This,__LONG32 *p);", "IHTMLElement_get_offsetHeight_Proxy": "HRESULT WINAPI IHTMLElement_get_offsetHeight_Proxy(IHTMLElement *This,__LONG32 *p);", "IHTMLElement_get_offsetParent_Proxy": "HRESULT WINAPI IHTMLElement_get_offsetParent_Proxy(IHTMLElement *This,IHTMLElement **p);", "IHTMLElement_put_innerHTML_Proxy": "HRESULT WINAPI IHTMLElement_put_innerHTML_Proxy(IHTMLElement *This,BSTR v);", "IHTMLElement_get_innerHTML_Proxy": "HRESULT WINAPI IHTMLElement_get_innerHTML_Proxy(IHTMLElement *This,BSTR *p);", "IHTMLElement_put_innerText_Proxy": "HRESULT WINAPI IHTMLElement_put_innerText_Proxy(IHTMLElement *This,BSTR v);", "IHTMLElement_get_innerText_Proxy": "HRESULT WINAPI IHTMLElement_get_innerText_Proxy(IHTMLElement *This,BSTR *p);", "IHTMLElement_put_outerHTML_Proxy": "HRESULT WINAPI IHTMLElement_put_outerHTML_Proxy(IHTMLElement *This,BSTR v);", "IHTMLElement_get_outerHTML_Proxy": "HRESULT WINAPI IHTMLElement_get_outerHTML_Proxy(IHTMLElement *This,BSTR *p);", "IHTMLElement_put_outerText_Proxy": "HRESULT WINAPI IHTMLElement_put_outerText_Proxy(IHTMLElement *This,BSTR v);", "IHTMLElement_get_outerText_Proxy": "HRESULT WINAPI IHTMLElement_get_outerText_Proxy(IHTMLElement *This,BSTR *p);", "IHTMLElement_insertAdjacentHTML_Proxy": "HRESULT WINAPI IHTMLElement_insertAdjacentHTML_Proxy(IHTMLElement *This,BSTR where,BSTR html);", "IHTMLElement_insertAdjacentText_Proxy": "HRESULT WINAPI IHTMLElement_insertAdjacentText_Proxy(IHTMLElement *This,BSTR where,BSTR text);", "IHTMLElement_get_parentTextEdit_Proxy": "HRESULT WINAPI IHTMLElement_get_parentTextEdit_Proxy(IHTMLElement *This,IHTMLElement **p);", "IHTMLElement_get_isTextEdit_Proxy": "HRESULT WINAPI IHTMLElement_get_isTextEdit_Proxy(IHTMLElement *This,VARIANT_BOOL *p);", "IHTMLElement_click_Proxy": "HRESULT WINAPI IHTMLElement_click_Proxy(IHTMLElement *This);", "IHTMLElement_get_filters_Proxy": "HRESULT WINAPI IHTMLElement_get_filters_Proxy(IHTMLElement *This,IHTMLFiltersCollection **p);", "IHTMLElement_put_ondragstart_Proxy": "HRESULT WINAPI IHTMLElement_put_ondragstart_Proxy(IHTMLElement *This,VARIANT v);", "IHTMLElement_get_ondragstart_Proxy": "HRESULT WINAPI IHTMLElement_get_ondragstart_Proxy(IHTMLElement *This,VARIANT *p);", "IHTMLElement_toString_Proxy": "HRESULT WINAPI IHTMLElement_toString_Proxy(IHTMLElement *This,BSTR *String);", "IHTMLElement_put_onbeforeupdate_Proxy": "HRESULT WINAPI IHTMLElement_put_onbeforeupdate_Proxy(IHTMLElement *This,VARIANT v);", "IHTMLElement_get_onbeforeupdate_Proxy": "HRESULT WINAPI IHTMLElement_get_onbeforeupdate_Proxy(IHTMLElement *This,VARIANT *p);", "IHTMLElement_put_onafterupdate_Proxy": "HRESULT WINAPI IHTMLElement_put_onafterupdate_Proxy(IHTMLElement *This,VARIANT v);", "IHTMLElement_get_onafterupdate_Proxy": "HRESULT WINAPI IHTMLElement_get_onafterupdate_Proxy(IHTMLElement *This,VARIANT *p);", "IHTMLElement_put_onerrorupdate_Proxy": "HRESULT WINAPI IHTMLElement_put_onerrorupdate_Proxy(IHTMLElement *This,VARIANT v);", "IHTMLElement_get_onerrorupdate_Proxy": "HRESULT WINAPI IHTMLElement_get_onerrorupdate_Proxy(IHTMLElement *This,VARIANT *p);", "IHTMLElement_put_onrowexit_Proxy": "HRESULT WINAPI IHTMLElement_put_onrowexit_Proxy(IHTMLElement *This,VARIANT v);", "IHTMLElement_get_onrowexit_Proxy": "HRESULT WINAPI IHTMLElement_get_onrowexit_Proxy(IHTMLElement *This,VARIANT *p);", "IHTMLElement_put_onrowenter_Proxy": "HRESULT WINAPI IHTMLElement_put_onrowenter_Proxy(IHTMLElement *This,VARIANT v);", "IHTMLElement_get_onrowenter_Proxy": "HRESULT WINAPI IHTMLElement_get_onrowenter_Proxy(IHTMLElement *This,VARIANT *p);", "IHTMLElement_put_ondatasetchanged_Proxy": "HRESULT WINAPI IHTMLElement_put_ondatasetchanged_Proxy(IHTMLElement *This,VARIANT v);", "IHTMLElement_get_ondatasetchanged_Proxy": "HRESULT WINAPI IHTMLElement_get_ondatasetchanged_Proxy(IHTMLElement *This,VARIANT *p);", "IHTMLElement_put_ondataavailable_Proxy": "HRESULT WINAPI IHTMLElement_put_ondataavailable_Proxy(IHTMLElement *This,VARIANT v);", "IHTMLElement_get_ondataavailable_Proxy": "HRESULT WINAPI IHTMLElement_get_ondataavailable_Proxy(IHTMLElement *This,VARIANT *p);", "IHTMLElement_put_ondatasetcomplete_Proxy": "HRESULT WINAPI IHTMLElement_put_ondatasetcomplete_Proxy(IHTMLElement *This,VARIANT v);", "IHTMLElement_get_ondatasetcomplete_Proxy": "HRESULT WINAPI IHTMLElement_get_ondatasetcomplete_Proxy(IHTMLElement *This,VARIANT *p);", "IHTMLElement_put_onfilterchange_Proxy": "HRESULT WINAPI IHTMLElement_put_onfilterchange_Proxy(IHTMLElement *This,VARIANT v);", "IHTMLElement_get_onfilterchange_Proxy": "HRESULT WINAPI IHTMLElement_get_onfilterchange_Proxy(IHTMLElement *This,VARIANT *p);", "IHTMLElement_get_children_Proxy": "HRESULT WINAPI IHTMLElement_get_children_Proxy(IHTMLElement *This,IDispatch **p);", "IHTMLElement_get_all_Proxy": "HRESULT WINAPI IHTMLElement_get_all_Proxy(IHTMLElement *This,IDispatch **p);", "IHTMLRect_put_left_Proxy": "HRESULT WINAPI IHTMLRect_put_left_Proxy(IHTMLRect *This,__LONG32 v);", "IHTMLRect_get_left_Proxy": "HRESULT WINAPI IHTMLRect_get_left_Proxy(IHTMLRect *This,__LONG32 *p);", "IHTMLRect_put_top_Proxy": "HRESULT WINAPI IHTMLRect_put_top_Proxy(IHTMLRect *This,__LONG32 v);", "IHTMLRect_get_top_Proxy": "HRESULT WINAPI IHTMLRect_get_top_Proxy(IHTMLRect *This,__LONG32 *p);", "IHTMLRect_put_right_Proxy": "HRESULT WINAPI IHTMLRect_put_right_Proxy(IHTMLRect *This,__LONG32 v);", "IHTMLRect_get_right_Proxy": "HRESULT WINAPI IHTMLRect_get_right_Proxy(IHTMLRect *This,__LONG32 *p);", "IHTMLRect_put_bottom_Proxy": "HRESULT WINAPI IHTMLRect_put_bottom_Proxy(IHTMLRect *This,__LONG32 v);", "IHTMLRect_get_bottom_Proxy": "HRESULT WINAPI IHTMLRect_get_bottom_Proxy(IHTMLRect *This,__LONG32 *p);", "IHTMLRectCollection_get_length_Proxy": "HRESULT WINAPI IHTMLRectCollection_get_length_Proxy(IHTMLRectCollection *This,__LONG32 *p);", "IHTMLRectCollection_get__newEnum_Proxy": "HRESULT WINAPI IHTMLRectCollection_get__newEnum_Proxy(IHTMLRectCollection *This,IUnknown **p);", "IHTMLRectCollection_item_Proxy": "HRESULT WINAPI IHTMLRectCollection_item_Proxy(IHTMLRectCollection *This,VARIANT *pvarIndex,VARIANT *pvarResult);", "IHTMLDOMNode_get_nodeType_Proxy": "HRESULT WINAPI IHTMLDOMNode_get_nodeType_Proxy(IHTMLDOMNode *This,__LONG32 *p);", "IHTMLDOMNode_get_parentNode_Proxy": "HRESULT WINAPI IHTMLDOMNode_get_parentNode_Proxy(IHTMLDOMNode *This,IHTMLDOMNode **p);", "IHTMLDOMNode_hasChildNodes_Proxy": "HRESULT WINAPI IHTMLDOMNode_hasChildNodes_Proxy(IHTMLDOMNode *This,VARIANT_BOOL *fChildren);", "IHTMLDOMNode_get_childNodes_Proxy": "HRESULT WINAPI IHTMLDOMNode_get_childNodes_Proxy(IHTMLDOMNode *This,IDispatch **p);", "IHTMLDOMNode_get_attributes_Proxy": "HRESULT WINAPI IHTMLDOMNode_get_attributes_Proxy(IHTMLDOMNode *This,IDispatch **p);", "IHTMLDOMNode_insertBefore_Proxy": "HRESULT WINAPI IHTMLDOMNode_insertBefore_Proxy(IHTMLDOMNode *This,IHTMLDOMNode *newChild,VARIANT refChild,IHTMLDOMNode **node);", "IHTMLDOMNode_removeChild_Proxy": "HRESULT WINAPI IHTMLDOMNode_removeChild_Proxy(IHTMLDOMNode *This,IHTMLDOMNode *oldChild,IHTMLDOMNode **node);", "IHTMLDOMNode_replaceChild_Proxy": "HRESULT WINAPI IHTMLDOMNode_replaceChild_Proxy(IHTMLDOMNode *This,IHTMLDOMNode *newChild,IHTMLDOMNode *oldChild,IHTMLDOMNode **node);", "IHTMLDOMNode_cloneNode_Proxy": "HRESULT WINAPI IHTMLDOMNode_cloneNode_Proxy(IHTMLDOMNode *This,VARIANT_BOOL fDeep,IHTMLDOMNode **clonedNode);", "IHTMLDOMNode_removeNode_Proxy": "HRESULT WINAPI IHTMLDOMNode_removeNode_Proxy(IHTMLDOMNode *This,VARIANT_BOOL fDeep,IHTMLDOMNode **removed);", "IHTMLDOMNode_swapNode_Proxy": "HRESULT WINAPI IHTMLDOMNode_swapNode_Proxy(IHTMLDOMNode *This,IHTMLDOMNode *otherNode,IHTMLDOMNode **swappedNode);", "IHTMLDOMNode_replaceNode_Proxy": "HRESULT WINAPI IHTMLDOMNode_replaceNode_Proxy(IHTMLDOMNode *This,IHTMLDOMNode *replacement,IHTMLDOMNode **replaced);", "IHTMLDOMNode_appendChild_Proxy": "HRESULT WINAPI IHTMLDOMNode_appendChild_Proxy(IHTMLDOMNode *This,IHTMLDOMNode *newChild,IHTMLDOMNode **node);", "IHTMLDOMNode_get_nodeName_Proxy": "HRESULT WINAPI IHTMLDOMNode_get_nodeName_Proxy(IHTMLDOMNode *This,BSTR *p);", "IHTMLDOMNode_put_nodeValue_Proxy": "HRESULT WINAPI IHTMLDOMNode_put_nodeValue_Proxy(IHTMLDOMNode *This,VARIANT v);", "IHTMLDOMNode_get_nodeValue_Proxy": "HRESULT WINAPI IHTMLDOMNode_get_nodeValue_Proxy(IHTMLDOMNode *This,VARIANT *p);", "IHTMLDOMNode_get_firstChild_Proxy": "HRESULT WINAPI IHTMLDOMNode_get_firstChild_Proxy(IHTMLDOMNode *This,IHTMLDOMNode **p);", "IHTMLDOMNode_get_lastChild_Proxy": "HRESULT WINAPI IHTMLDOMNode_get_lastChild_Proxy(IHTMLDOMNode *This,IHTMLDOMNode **p);", "IHTMLDOMNode_get_previousSibling_Proxy": "HRESULT WINAPI IHTMLDOMNode_get_previousSibling_Proxy(IHTMLDOMNode *This,IHTMLDOMNode **p);", "IHTMLDOMNode_get_nextSibling_Proxy": "HRESULT WINAPI IHTMLDOMNode_get_nextSibling_Proxy(IHTMLDOMNode *This,IHTMLDOMNode **p);", "IHTMLDOMNode2_get_ownerDocument_Proxy": "HRESULT WINAPI IHTMLDOMNode2_get_ownerDocument_Proxy(IHTMLDOMNode2 *This,IDispatch **p);", "IHTMLDOMAttribute_get_nodeName_Proxy": "HRESULT WINAPI IHTMLDOMAttribute_get_nodeName_Proxy(IHTMLDOMAttribute *This,BSTR *p);", "IHTMLDOMAttribute_put_nodeValue_Proxy": "HRESULT WINAPI IHTMLDOMAttribute_put_nodeValue_Proxy(IHTMLDOMAttribute *This,VARIANT v);", "IHTMLDOMAttribute_get_nodeValue_Proxy": "HRESULT WINAPI IHTMLDOMAttribute_get_nodeValue_Proxy(IHTMLDOMAttribute *This,VARIANT *p);", "IHTMLDOMAttribute_get_specified_Proxy": "HRESULT WINAPI IHTMLDOMAttribute_get_specified_Proxy(IHTMLDOMAttribute *This,VARIANT_BOOL *p);", "IHTMLDOMAttribute2_get_name_Proxy": "HRESULT WINAPI IHTMLDOMAttribute2_get_name_Proxy(IHTMLDOMAttribute2 *This,BSTR *p);", "IHTMLDOMAttribute2_put_value_Proxy": "HRESULT WINAPI IHTMLDOMAttribute2_put_value_Proxy(IHTMLDOMAttribute2 *This,BSTR v);", "IHTMLDOMAttribute2_get_value_Proxy": "HRESULT WINAPI IHTMLDOMAttribute2_get_value_Proxy(IHTMLDOMAttribute2 *This,BSTR *p);", "IHTMLDOMAttribute2_get_expando_Proxy": "HRESULT WINAPI IHTMLDOMAttribute2_get_expando_Proxy(IHTMLDOMAttribute2 *This,VARIANT_BOOL *p);", "IHTMLDOMAttribute2_get_nodeType_Proxy": "HRESULT WINAPI IHTMLDOMAttribute2_get_nodeType_Proxy(IHTMLDOMAttribute2 *This,__LONG32 *p);", "IHTMLDOMAttribute2_get_parentNode_Proxy": "HRESULT WINAPI IHTMLDOMAttribute2_get_parentNode_Proxy(IHTMLDOMAttribute2 *This,IHTMLDOMNode **p);", "IHTMLDOMAttribute2_get_childNodes_Proxy": "HRESULT WINAPI IHTMLDOMAttribute2_get_childNodes_Proxy(IHTMLDOMAttribute2 *This,IDispatch **p);", "IHTMLDOMAttribute2_get_firstChild_Proxy": "HRESULT WINAPI IHTMLDOMAttribute2_get_firstChild_Proxy(IHTMLDOMAttribute2 *This,IHTMLDOMNode **p);", "IHTMLDOMAttribute2_get_lastChild_Proxy": "HRESULT WINAPI IHTMLDOMAttribute2_get_lastChild_Proxy(IHTMLDOMAttribute2 *This,IHTMLDOMNode **p);", "IHTMLDOMAttribute2_get_previousSibling_Proxy": "HRESULT WINAPI IHTMLDOMAttribute2_get_previousSibling_Proxy(IHTMLDOMAttribute2 *This,IHTMLDOMNode **p);", "IHTMLDOMAttribute2_get_nextSibling_Proxy": "HRESULT WINAPI IHTMLDOMAttribute2_get_nextSibling_Proxy(IHTMLDOMAttribute2 *This,IHTMLDOMNode **p);", "IHTMLDOMAttribute2_get_attributes_Proxy": "HRESULT WINAPI IHTMLDOMAttribute2_get_attributes_Proxy(IHTMLDOMAttribute2 *This,IDispatch **p);", "IHTMLDOMAttribute2_get_ownerDocument_Proxy": "HRESULT WINAPI IHTMLDOMAttribute2_get_ownerDocument_Proxy(IHTMLDOMAttribute2 *This,IDispatch **p);", "IHTMLDOMAttribute2_insertBefore_Proxy": "HRESULT WINAPI IHTMLDOMAttribute2_insertBefore_Proxy(IHTMLDOMAttribute2 *This,IHTMLDOMNode *newChild,VARIANT refChild,IHTMLDOMNode **node);", "IHTMLDOMAttribute2_replaceChild_Proxy": "HRESULT WINAPI IHTMLDOMAttribute2_replaceChild_Proxy(IHTMLDOMAttribute2 *This,IHTMLDOMNode *newChild,IHTMLDOMNode *oldChild,IHTMLDOMNode **node);", "IHTMLDOMAttribute2_removeChild_Proxy": "HRESULT WINAPI IHTMLDOMAttribute2_removeChild_Proxy(IHTMLDOMAttribute2 *This,IHTMLDOMNode *oldChild,IHTMLDOMNode **node);", "IHTMLDOMAttribute2_appendChild_Proxy": "HRESULT WINAPI IHTMLDOMAttribute2_appendChild_Proxy(IHTMLDOMAttribute2 *This,IHTMLDOMNode *newChild,IHTMLDOMNode **node);", "IHTMLDOMAttribute2_hasChildNodes_Proxy": "HRESULT WINAPI IHTMLDOMAttribute2_hasChildNodes_Proxy(IHTMLDOMAttribute2 *This,VARIANT_BOOL *fChildren);", "IHTMLDOMAttribute2_cloneNode_Proxy": "HRESULT WINAPI IHTMLDOMAttribute2_cloneNode_Proxy(IHTMLDOMAttribute2 *This,VARIANT_BOOL fDeep,IHTMLDOMAttribute **clonedNode);", "IHTMLDOMTextNode_put_data_Proxy": "HRESULT WINAPI IHTMLDOMTextNode_put_data_Proxy(IHTMLDOMTextNode *This,BSTR v);", "IHTMLDOMTextNode_get_data_Proxy": "HRESULT WINAPI IHTMLDOMTextNode_get_data_Proxy(IHTMLDOMTextNode *This,BSTR *p);", "IHTMLDOMTextNode_toString_Proxy": "HRESULT WINAPI IHTMLDOMTextNode_toString_Proxy(IHTMLDOMTextNode *This,BSTR *String);", "IHTMLDOMTextNode_get_length_Proxy": "HRESULT WINAPI IHTMLDOMTextNode_get_length_Proxy(IHTMLDOMTextNode *This,__LONG32 *p);", "IHTMLDOMTextNode_splitText_Proxy": "HRESULT WINAPI IHTMLDOMTextNode_splitText_Proxy(IHTMLDOMTextNode *This,__LONG32 offset,IHTMLDOMNode **pRetNode);", "IHTMLDOMTextNode2_substringData_Proxy": "HRESULT WINAPI IHTMLDOMTextNode2_substringData_Proxy(IHTMLDOMTextNode2 *This,__LONG32 offset,__LONG32 Count,BSTR *pbstrsubString);", "IHTMLDOMTextNode2_appendData_Proxy": "HRESULT WINAPI IHTMLDOMTextNode2_appendData_Proxy(IHTMLDOMTextNode2 *This,BSTR bstrstring);", "IHTMLDOMTextNode2_insertData_Proxy": "HRESULT WINAPI IHTMLDOMTextNode2_insertData_Proxy(IHTMLDOMTextNode2 *This,__LONG32 offset,BSTR bstrstring);", "IHTMLDOMTextNode2_deleteData_Proxy": "HRESULT WINAPI IHTMLDOMTextNode2_deleteData_Proxy(IHTMLDOMTextNode2 *This,__LONG32 offset,__LONG32 Count);", "IHTMLDOMTextNode2_replaceData_Proxy": "HRESULT WINAPI IHTMLDOMTextNode2_replaceData_Proxy(IHTMLDOMTextNode2 *This,__LONG32 offset,__LONG32 Count,BSTR bstrstring);", "IHTMLDOMImplementation_hasFeature_Proxy": "HRESULT WINAPI IHTMLDOMImplementation_hasFeature_Proxy(IHTMLDOMImplementation *This,BSTR bstrfeature,VARIANT version,VARIANT_BOOL *pfHasFeature);", "IHTMLAttributeCollection_get_length_Proxy": "HRESULT WINAPI IHTMLAttributeCollection_get_length_Proxy(IHTMLAttributeCollection *This,__LONG32 *p);", "IHTMLAttributeCollection_get__newEnum_Proxy": "HRESULT WINAPI IHTMLAttributeCollection_get__newEnum_Proxy(IHTMLAttributeCollection *This,IUnknown **p);", "IHTMLAttributeCollection_item_Proxy": "HRESULT WINAPI IHTMLAttributeCollection_item_Proxy(IHTMLAttributeCollection *This,VARIANT *name,IDispatch **pdisp);", "IHTMLAttributeCollection2_getNamedItem_Proxy": "HRESULT WINAPI IHTMLAttributeCollection2_getNamedItem_Proxy(IHTMLAttributeCollection2 *This,BSTR bstrName,IHTMLDOMAttribute **newretNode);", "IHTMLAttributeCollection2_setNamedItem_Proxy": "HRESULT WINAPI IHTMLAttributeCollection2_setNamedItem_Proxy(IHTMLAttributeCollection2 *This,IHTMLDOMAttribute *ppNode,IHTMLDOMAttribute **newretNode);", "IHTMLAttributeCollection2_removeNamedItem_Proxy": "HRESULT WINAPI IHTMLAttributeCollection2_removeNamedItem_Proxy(IHTMLAttributeCollection2 *This,BSTR bstrName,IHTMLDOMAttribute **newretNode);", "IHTMLDOMChildrenCollection_get_length_Proxy": "HRESULT WINAPI IHTMLDOMChildrenCollection_get_length_Proxy(IHTMLDOMChildrenCollection *This,__LONG32 *p);", "IHTMLDOMChildrenCollection_get__newEnum_Proxy": "HRESULT WINAPI IHTMLDOMChildrenCollection_get__newEnum_Proxy(IHTMLDOMChildrenCollection *This,IUnknown **p);", "IHTMLDOMChildrenCollection_item_Proxy": "HRESULT WINAPI IHTMLDOMChildrenCollection_item_Proxy(IHTMLDOMChildrenCollection *This,__LONG32 index,IDispatch **ppItem);", "IHTMLElementCollection_toString_Proxy": "HRESULT WINAPI IHTMLElementCollection_toString_Proxy(IHTMLElementCollection *This,BSTR *String);", "IHTMLElementCollection_put_length_Proxy": "HRESULT WINAPI IHTMLElementCollection_put_length_Proxy(IHTMLElementCollection *This,__LONG32 v);", "IHTMLElementCollection_get_length_Proxy": "HRESULT WINAPI IHTMLElementCollection_get_length_Proxy(IHTMLElementCollection *This,__LONG32 *p);", "IHTMLElementCollection_get__newEnum_Proxy": "HRESULT WINAPI IHTMLElementCollection_get__newEnum_Proxy(IHTMLElementCollection *This,IUnknown **p);", "IHTMLElementCollection_item_Proxy": "HRESULT WINAPI IHTMLElementCollection_item_Proxy(IHTMLElementCollection *This,VARIANT name,VARIANT index,IDispatch **pdisp);", "IHTMLElementCollection_tags_Proxy": "HRESULT WINAPI IHTMLElementCollection_tags_Proxy(IHTMLElementCollection *This,VARIANT tagName,IDispatch **pdisp);", "IHTMLElement2_get_scopeName_Proxy": "HRESULT WINAPI IHTMLElement2_get_scopeName_Proxy(IHTMLElement2 *This,BSTR *p);", "IHTMLElement2_setCapture_Proxy": "HRESULT WINAPI IHTMLElement2_setCapture_Proxy(IHTMLElement2 *This,VARIANT_BOOL containerCapture);", "IHTMLElement2_releaseCapture_Proxy": "HRESULT WINAPI IHTMLElement2_releaseCapture_Proxy(IHTMLElement2 *This);", "IHTMLElement2_put_onlosecapture_Proxy": "HRESULT WINAPI IHTMLElement2_put_onlosecapture_Proxy(IHTMLElement2 *This,VARIANT v);", "IHTMLElement2_get_onlosecapture_Proxy": "HRESULT WINAPI IHTMLElement2_get_onlosecapture_Proxy(IHTMLElement2 *This,VARIANT *p);", "IHTMLElement2_componentFromPoint_Proxy": "HRESULT WINAPI IHTMLElement2_componentFromPoint_Proxy(IHTMLElement2 *This,__LONG32 x,__LONG32 y,BSTR *component);", "IHTMLElement2_doScroll_Proxy": "HRESULT WINAPI IHTMLElement2_doScroll_Proxy(IHTMLElement2 *This,VARIANT component);", "IHTMLElement2_put_onscroll_Proxy": "HRESULT WINAPI IHTMLElement2_put_onscroll_Proxy(IHTMLElement2 *This,VARIANT v);", "IHTMLElement2_get_onscroll_Proxy": "HRESULT WINAPI IHTMLElement2_get_onscroll_Proxy(IHTMLElement2 *This,VARIANT *p);", "IHTMLElement2_put_ondrag_Proxy": "HRESULT WINAPI IHTMLElement2_put_ondrag_Proxy(IHTMLElement2 *This,VARIANT v);", "IHTMLElement2_get_ondrag_Proxy": "HRESULT WINAPI IHTMLElement2_get_ondrag_Proxy(IHTMLElement2 *This,VARIANT *p);", "IHTMLElement2_put_ondragend_Proxy": "HRESULT WINAPI IHTMLElement2_put_ondragend_Proxy(IHTMLElement2 *This,VARIANT v);", "IHTMLElement2_get_ondragend_Proxy": "HRESULT WINAPI IHTMLElement2_get_ondragend_Proxy(IHTMLElement2 *This,VARIANT *p);", "IHTMLElement2_put_ondragenter_Proxy": "HRESULT WINAPI IHTMLElement2_put_ondragenter_Proxy(IHTMLElement2 *This,VARIANT v);", "IHTMLElement2_get_ondragenter_Proxy": "HRESULT WINAPI IHTMLElement2_get_ondragenter_Proxy(IHTMLElement2 *This,VARIANT *p);", "IHTMLElement2_put_ondragover_Proxy": "HRESULT WINAPI IHTMLElement2_put_ondragover_Proxy(IHTMLElement2 *This,VARIANT v);", "IHTMLElement2_get_ondragover_Proxy": "HRESULT WINAPI IHTMLElement2_get_ondragover_Proxy(IHTMLElement2 *This,VARIANT *p);", "IHTMLElement2_put_ondragleave_Proxy": "HRESULT WINAPI IHTMLElement2_put_ondragleave_Proxy(IHTMLElement2 *This,VARIANT v);", "IHTMLElement2_get_ondragleave_Proxy": "HRESULT WINAPI IHTMLElement2_get_ondragleave_Proxy(IHTMLElement2 *This,VARIANT *p);", "IHTMLElement2_put_ondrop_Proxy": "HRESULT WINAPI IHTMLElement2_put_ondrop_Proxy(IHTMLElement2 *This,VARIANT v);", "IHTMLElement2_get_ondrop_Proxy": "HRESULT WINAPI IHTMLElement2_get_ondrop_Proxy(IHTMLElement2 *This,VARIANT *p);", "IHTMLElement2_put_onbeforecut_Proxy": "HRESULT WINAPI IHTMLElement2_put_onbeforecut_Proxy(IHTMLElement2 *This,VARIANT v);", "IHTMLElement2_get_onbeforecut_Proxy": "HRESULT WINAPI IHTMLElement2_get_onbeforecut_Proxy(IHTMLElement2 *This,VARIANT *p);", "IHTMLElement2_put_oncut_Proxy": "HRESULT WINAPI IHTMLElement2_put_oncut_Proxy(IHTMLElement2 *This,VARIANT v);", "IHTMLElement2_get_oncut_Proxy": "HRESULT WINAPI IHTMLElement2_get_oncut_Proxy(IHTMLElement2 *This,VARIANT *p);", "IHTMLElement2_put_onbeforecopy_Proxy": "HRESULT WINAPI IHTMLElement2_put_onbeforecopy_Proxy(IHTMLElement2 *This,VARIANT v);", "IHTMLElement2_get_onbeforecopy_Proxy": "HRESULT WINAPI IHTMLElement2_get_onbeforecopy_Proxy(IHTMLElement2 *This,VARIANT *p);", "IHTMLElement2_put_oncopy_Proxy": "HRESULT WINAPI IHTMLElement2_put_oncopy_Proxy(IHTMLElement2 *This,VARIANT v);", "IHTMLElement2_get_oncopy_Proxy": "HRESULT WINAPI IHTMLElement2_get_oncopy_Proxy(IHTMLElement2 *This,VARIANT *p);", "IHTMLElement2_put_onbeforepaste_Proxy": "HRESULT WINAPI IHTMLElement2_put_onbeforepaste_Proxy(IHTMLElement2 *This,VARIANT v);", "IHTMLElement2_get_onbeforepaste_Proxy": "HRESULT WINAPI IHTMLElement2_get_onbeforepaste_Proxy(IHTMLElement2 *This,VARIANT *p);", "IHTMLElement2_put_onpaste_Proxy": "HRESULT WINAPI IHTMLElement2_put_onpaste_Proxy(IHTMLElement2 *This,VARIANT v);", "IHTMLElement2_get_onpaste_Proxy": "HRESULT WINAPI IHTMLElement2_get_onpaste_Proxy(IHTMLElement2 *This,VARIANT *p);", "IHTMLElement2_get_currentStyle_Proxy": "HRESULT WINAPI IHTMLElement2_get_currentStyle_Proxy(IHTMLElement2 *This,IHTMLCurrentStyle **p);", "IHTMLElement2_put_onpropertychange_Proxy": "HRESULT WINAPI IHTMLElement2_put_onpropertychange_Proxy(IHTMLElement2 *This,VARIANT v);", "IHTMLElement2_get_onpropertychange_Proxy": "HRESULT WINAPI IHTMLElement2_get_onpropertychange_Proxy(IHTMLElement2 *This,VARIANT *p);", "IHTMLElement2_getClientRects_Proxy": "HRESULT WINAPI IHTMLElement2_getClientRects_Proxy(IHTMLElement2 *This,IHTMLRectCollection **pRectCol);", "IHTMLElement2_getBoundingClientRect_Proxy": "HRESULT WINAPI IHTMLElement2_getBoundingClientRect_Proxy(IHTMLElement2 *This,IHTMLRect **pRect);", "IHTMLElement2_setExpression_Proxy": "HRESULT WINAPI IHTMLElement2_setExpression_Proxy(IHTMLElement2 *This,BSTR propname,BSTR expression,BSTR language);", "IHTMLElement2_getExpression_Proxy": "HRESULT WINAPI IHTMLElement2_getExpression_Proxy(IHTMLElement2 *This,BSTR propname,VARIANT *expression);", "IHTMLElement2_removeExpression_Proxy": "HRESULT WINAPI IHTMLElement2_removeExpression_Proxy(IHTMLElement2 *This,BSTR propname,VARIANT_BOOL *pfSuccess);", "IHTMLElement2_put_tabIndex_Proxy": "HRESULT WINAPI IHTMLElement2_put_tabIndex_Proxy(IHTMLElement2 *This,short v);", "IHTMLElement2_get_tabIndex_Proxy": "HRESULT WINAPI IHTMLElement2_get_tabIndex_Proxy(IHTMLElement2 *This,short *p);", "IHTMLElement2_focus_Proxy": "HRESULT WINAPI IHTMLElement2_focus_Proxy(IHTMLElement2 *This);", "IHTMLElement2_put_accessKey_Proxy": "HRESULT WINAPI IHTMLElement2_put_accessKey_Proxy(IHTMLElement2 *This,BSTR v);", "IHTMLElement2_get_accessKey_Proxy": "HRESULT WINAPI IHTMLElement2_get_accessKey_Proxy(IHTMLElement2 *This,BSTR *p);", "IHTMLElement2_put_onblur_Proxy": "HRESULT WINAPI IHTMLElement2_put_onblur_Proxy(IHTMLElement2 *This,VARIANT v);", "IHTMLElement2_get_onblur_Proxy": "HRESULT WINAPI IHTMLElement2_get_onblur_Proxy(IHTMLElement2 *This,VARIANT *p);", "IHTMLElement2_put_onfocus_Proxy": "HRESULT WINAPI IHTMLElement2_put_onfocus_Proxy(IHTMLElement2 *This,VARIANT v);", "IHTMLElement2_get_onfocus_Proxy": "HRESULT WINAPI IHTMLElement2_get_onfocus_Proxy(IHTMLElement2 *This,VARIANT *p);", "IHTMLElement2_put_onresize_Proxy": "HRESULT WINAPI IHTMLElement2_put_onresize_Proxy(IHTMLElement2 *This,VARIANT v);", "IHTMLElement2_get_onresize_Proxy": "HRESULT WINAPI IHTMLElement2_get_onresize_Proxy(IHTMLElement2 *This,VARIANT *p);", "IHTMLElement2_blur_Proxy": "HRESULT WINAPI IHTMLElement2_blur_Proxy(IHTMLElement2 *This);", "IHTMLElement2_addFilter_Proxy": "HRESULT WINAPI IHTMLElement2_addFilter_Proxy(IHTMLElement2 *This,IUnknown *pUnk);", "IHTMLElement2_removeFilter_Proxy": "HRESULT WINAPI IHTMLElement2_removeFilter_Proxy(IHTMLElement2 *This,IUnknown *pUnk);", "IHTMLElement2_get_clientHeight_Proxy": "HRESULT WINAPI IHTMLElement2_get_clientHeight_Proxy(IHTMLElement2 *This,__LONG32 *p);", "IHTMLElement2_get_clientWidth_Proxy": "HRESULT WINAPI IHTMLElement2_get_clientWidth_Proxy(IHTMLElement2 *This,__LONG32 *p);", "IHTMLElement2_get_clientTop_Proxy": "HRESULT WINAPI IHTMLElement2_get_clientTop_Proxy(IHTMLElement2 *This,__LONG32 *p);", "IHTMLElement2_get_clientLeft_Proxy": "HRESULT WINAPI IHTMLElement2_get_clientLeft_Proxy(IHTMLElement2 *This,__LONG32 *p);", "IHTMLElement2_attachEvent_Proxy": "HRESULT WINAPI IHTMLElement2_attachEvent_Proxy(IHTMLElement2 *This,BSTR event,IDispatch *pDisp,VARIANT_BOOL *pfResult);", "IHTMLElement2_detachEvent_Proxy": "HRESULT WINAPI IHTMLElement2_detachEvent_Proxy(IHTMLElement2 *This,BSTR event,IDispatch *pDisp);", "IHTMLElement2_get_readyState_Proxy": "HRESULT WINAPI IHTMLElement2_get_readyState_Proxy(IHTMLElement2 *This,VARIANT *p);", "IHTMLElement2_put_onreadystatechange_Proxy": "HRESULT WINAPI IHTMLElement2_put_onreadystatechange_Proxy(IHTMLElement2 *This,VARIANT v);", "IHTMLElement2_get_onreadystatechange_Proxy": "HRESULT WINAPI IHTMLElement2_get_onreadystatechange_Proxy(IHTMLElement2 *This,VARIANT *p);", "IHTMLElement2_put_onrowsdelete_Proxy": "HRESULT WINAPI IHTMLElement2_put_onrowsdelete_Proxy(IHTMLElement2 *This,VARIANT v);", "IHTMLElement2_get_onrowsdelete_Proxy": "HRESULT WINAPI IHTMLElement2_get_onrowsdelete_Proxy(IHTMLElement2 *This,VARIANT *p);", "IHTMLElement2_put_onrowsinserted_Proxy": "HRESULT WINAPI IHTMLElement2_put_onrowsinserted_Proxy(IHTMLElement2 *This,VARIANT v);", "IHTMLElement2_get_onrowsinserted_Proxy": "HRESULT WINAPI IHTMLElement2_get_onrowsinserted_Proxy(IHTMLElement2 *This,VARIANT *p);", "IHTMLElement2_put_oncellchange_Proxy": "HRESULT WINAPI IHTMLElement2_put_oncellchange_Proxy(IHTMLElement2 *This,VARIANT v);", "IHTMLElement2_get_oncellchange_Proxy": "HRESULT WINAPI IHTMLElement2_get_oncellchange_Proxy(IHTMLElement2 *This,VARIANT *p);", "IHTMLElement2_put_dir_Proxy": "HRESULT WINAPI IHTMLElement2_put_dir_Proxy(IHTMLElement2 *This,BSTR v);", "IHTMLElement2_get_dir_Proxy": "HRESULT WINAPI IHTMLElement2_get_dir_Proxy(IHTMLElement2 *This,BSTR *p);", "IHTMLElement2_createControlRange_Proxy": "HRESULT WINAPI IHTMLElement2_createControlRange_Proxy(IHTMLElement2 *This,IDispatch **range);", "IHTMLElement2_get_scrollHeight_Proxy": "HRESULT WINAPI IHTMLElement2_get_scrollHeight_Proxy(IHTMLElement2 *This,__LONG32 *p);", "IHTMLElement2_get_scrollWidth_Proxy": "HRESULT WINAPI IHTMLElement2_get_scrollWidth_Proxy(IHTMLElement2 *This,__LONG32 *p);", "IHTMLElement2_put_scrollTop_Proxy": "HRESULT WINAPI IHTMLElement2_put_scrollTop_Proxy(IHTMLElement2 *This,__LONG32 v);", "IHTMLElement2_get_scrollTop_Proxy": "HRESULT WINAPI IHTMLElement2_get_scrollTop_Proxy(IHTMLElement2 *This,__LONG32 *p);", "IHTMLElement2_put_scrollLeft_Proxy": "HRESULT WINAPI IHTMLElement2_put_scrollLeft_Proxy(IHTMLElement2 *This,__LONG32 v);", "IHTMLElement2_get_scrollLeft_Proxy": "HRESULT WINAPI IHTMLElement2_get_scrollLeft_Proxy(IHTMLElement2 *This,__LONG32 *p);", "IHTMLElement2_clearAttributes_Proxy": "HRESULT WINAPI IHTMLElement2_clearAttributes_Proxy(IHTMLElement2 *This);", "IHTMLElement2_mergeAttributes_Proxy": "HRESULT WINAPI IHTMLElement2_mergeAttributes_Proxy(IHTMLElement2 *This,IHTMLElement *mergeThis);", "IHTMLElement2_put_oncontextmenu_Proxy": "HRESULT WINAPI IHTMLElement2_put_oncontextmenu_Proxy(IHTMLElement2 *This,VARIANT v);", "IHTMLElement2_get_oncontextmenu_Proxy": "HRESULT WINAPI IHTMLElement2_get_oncontextmenu_Proxy(IHTMLElement2 *This,VARIANT *p);", "IHTMLElement2_insertAdjacentElement_Proxy": "HRESULT WINAPI IHTMLElement2_insertAdjacentElement_Proxy(IHTMLElement2 *This,BSTR where,IHTMLElement *insertedElement,IHTMLElement **inserted);", "IHTMLElement2_applyElement_Proxy": "HRESULT WINAPI IHTMLElement2_applyElement_Proxy(IHTMLElement2 *This,IHTMLElement *apply,BSTR where,IHTMLElement **applied);", "IHTMLElement2_getAdjacentText_Proxy": "HRESULT WINAPI IHTMLElement2_getAdjacentText_Proxy(IHTMLElement2 *This,BSTR where,BSTR *text);", "IHTMLElement2_replaceAdjacentText_Proxy": "HRESULT WINAPI IHTMLElement2_replaceAdjacentText_Proxy(IHTMLElement2 *This,BSTR where,BSTR newText,BSTR *oldText);", "IHTMLElement2_get_canHaveChildren_Proxy": "HRESULT WINAPI IHTMLElement2_get_canHaveChildren_Proxy(IHTMLElement2 *This,VARIANT_BOOL *p);", "IHTMLElement2_addBehavior_Proxy": "HRESULT WINAPI IHTMLElement2_addBehavior_Proxy(IHTMLElement2 *This,BSTR bstrUrl,VARIANT *pvarFactory,__LONG32 *pCookie);", "IHTMLElement2_removeBehavior_Proxy": "HRESULT WINAPI IHTMLElement2_removeBehavior_Proxy(IHTMLElement2 *This,__LONG32 cookie,VARIANT_BOOL *pfResult);", "IHTMLElement2_get_runtimeStyle_Proxy": "HRESULT WINAPI IHTMLElement2_get_runtimeStyle_Proxy(IHTMLElement2 *This,IHTMLStyle **p);", "IHTMLElement2_get_behaviorUrns_Proxy": "HRESULT WINAPI IHTMLElement2_get_behaviorUrns_Proxy(IHTMLElement2 *This,IDispatch **p);", "IHTMLElement2_put_tagUrn_Proxy": "HRESULT WINAPI IHTMLElement2_put_tagUrn_Proxy(IHTMLElement2 *This,BSTR v);", "IHTMLElement2_get_tagUrn_Proxy": "HRESULT WINAPI IHTMLElement2_get_tagUrn_Proxy(IHTMLElement2 *This,BSTR *p);", "IHTMLElement2_put_onbeforeeditfocus_Proxy": "HRESULT WINAPI IHTMLElement2_put_onbeforeeditfocus_Proxy(IHTMLElement2 *This,VARIANT v);", "IHTMLElement2_get_onbeforeeditfocus_Proxy": "HRESULT WINAPI IHTMLElement2_get_onbeforeeditfocus_Proxy(IHTMLElement2 *This,VARIANT *p);", "IHTMLElement2_get_readyStateValue_Proxy": "HRESULT WINAPI IHTMLElement2_get_readyStateValue_Proxy(IHTMLElement2 *This,__LONG32 *p);", "IHTMLElement2_getElementsByTagName_Proxy": "HRESULT WINAPI IHTMLElement2_getElementsByTagName_Proxy(IHTMLElement2 *This,BSTR v,IHTMLElementCollection **pelColl);", "IHTMLElement3_mergeAttributes_Proxy": "HRESULT WINAPI IHTMLElement3_mergeAttributes_Proxy(IHTMLElement3 *This,IHTMLElement *mergeThis,VARIANT *pvarFlags);", "IHTMLElement3_get_isMultiLine_Proxy": "HRESULT WINAPI IHTMLElement3_get_isMultiLine_Proxy(IHTMLElement3 *This,VARIANT_BOOL *p);", "IHTMLElement3_get_canHaveHTML_Proxy": "HRESULT WINAPI IHTMLElement3_get_canHaveHTML_Proxy(IHTMLElement3 *This,VARIANT_BOOL *p);", "IHTMLElement3_put_onlayoutcomplete_Proxy": "HRESULT WINAPI IHTMLElement3_put_onlayoutcomplete_Proxy(IHTMLElement3 *This,VARIANT v);", "IHTMLElement3_get_onlayoutcomplete_Proxy": "HRESULT WINAPI IHTMLElement3_get_onlayoutcomplete_Proxy(IHTMLElement3 *This,VARIANT *p);", "IHTMLElement3_put_onpage_Proxy": "HRESULT WINAPI IHTMLElement3_put_onpage_Proxy(IHTMLElement3 *This,VARIANT v);", "IHTMLElement3_get_onpage_Proxy": "HRESULT WINAPI IHTMLElement3_get_onpage_Proxy(IHTMLElement3 *This,VARIANT *p);", "IHTMLElement3_put_inflateBlock_Proxy": "HRESULT WINAPI IHTMLElement3_put_inflateBlock_Proxy(IHTMLElement3 *This,VARIANT_BOOL v);", "IHTMLElement3_get_inflateBlock_Proxy": "HRESULT WINAPI IHTMLElement3_get_inflateBlock_Proxy(IHTMLElement3 *This,VARIANT_BOOL *p);", "IHTMLElement3_put_onbeforedeactivate_Proxy": "HRESULT WINAPI IHTMLElement3_put_onbeforedeactivate_Proxy(IHTMLElement3 *This,VARIANT v);", "IHTMLElement3_get_onbeforedeactivate_Proxy": "HRESULT WINAPI IHTMLElement3_get_onbeforedeactivate_Proxy(IHTMLElement3 *This,VARIANT *p);", "IHTMLElement3_setActive_Proxy": "HRESULT WINAPI IHTMLElement3_setActive_Proxy(IHTMLElement3 *This);", "IHTMLElement3_put_contentEditable_Proxy": "HRESULT WINAPI IHTMLElement3_put_contentEditable_Proxy(IHTMLElement3 *This,BSTR v);", "IHTMLElement3_get_contentEditable_Proxy": "HRESULT WINAPI IHTMLElement3_get_contentEditable_Proxy(IHTMLElement3 *This,BSTR *p);", "IHTMLElement3_get_isContentEditable_Proxy": "HRESULT WINAPI IHTMLElement3_get_isContentEditable_Proxy(IHTMLElement3 *This,VARIANT_BOOL *p);", "IHTMLElement3_put_hideFocus_Proxy": "HRESULT WINAPI IHTMLElement3_put_hideFocus_Proxy(IHTMLElement3 *This,VARIANT_BOOL v);", "IHTMLElement3_get_hideFocus_Proxy": "HRESULT WINAPI IHTMLElement3_get_hideFocus_Proxy(IHTMLElement3 *This,VARIANT_BOOL *p);", "IHTMLElement3_put_disabled_Proxy": "HRESULT WINAPI IHTMLElement3_put_disabled_Proxy(IHTMLElement3 *This,VARIANT_BOOL v);", "IHTMLElement3_get_disabled_Proxy": "HRESULT WINAPI IHTMLElement3_get_disabled_Proxy(IHTMLElement3 *This,VARIANT_BOOL *p);", "IHTMLElement3_get_isDisabled_Proxy": "HRESULT WINAPI IHTMLElement3_get_isDisabled_Proxy(IHTMLElement3 *This,VARIANT_BOOL *p);", "IHTMLElement3_put_onmove_Proxy": "HRESULT WINAPI IHTMLElement3_put_onmove_Proxy(IHTMLElement3 *This,VARIANT v);", "IHTMLElement3_get_onmove_Proxy": "HRESULT WINAPI IHTMLElement3_get_onmove_Proxy(IHTMLElement3 *This,VARIANT *p);", "IHTMLElement3_put_oncontrolselect_Proxy": "HRESULT WINAPI IHTMLElement3_put_oncontrolselect_Proxy(IHTMLElement3 *This,VARIANT v);", "IHTMLElement3_get_oncontrolselect_Proxy": "HRESULT WINAPI IHTMLElement3_get_oncontrolselect_Proxy(IHTMLElement3 *This,VARIANT *p);", "IHTMLElement3_fireEvent_Proxy": "HRESULT WINAPI IHTMLElement3_fireEvent_Proxy(IHTMLElement3 *This,BSTR bstrEventName,VARIANT *pvarEventObject,VARIANT_BOOL *pfCancelled);", "IHTMLElement3_put_onresizestart_Proxy": "HRESULT WINAPI IHTMLElement3_put_onresizestart_Proxy(IHTMLElement3 *This,VARIANT v);", "IHTMLElement3_get_onresizestart_Proxy": "HRESULT WINAPI IHTMLElement3_get_onresizestart_Proxy(IHTMLElement3 *This,VARIANT *p);", "IHTMLElement3_put_onresizeend_Proxy": "HRESULT WINAPI IHTMLElement3_put_onresizeend_Proxy(IHTMLElement3 *This,VARIANT v);", "IHTMLElement3_get_onresizeend_Proxy": "HRESULT WINAPI IHTMLElement3_get_onresizeend_Proxy(IHTMLElement3 *This,VARIANT *p);", "IHTMLElement3_put_onmovestart_Proxy": "HRESULT WINAPI IHTMLElement3_put_onmovestart_Proxy(IHTMLElement3 *This,VARIANT v);", "IHTMLElement3_get_onmovestart_Proxy": "HRESULT WINAPI IHTMLElement3_get_onmovestart_Proxy(IHTMLElement3 *This,VARIANT *p);", "IHTMLElement3_put_onmoveend_Proxy": "HRESULT WINAPI IHTMLElement3_put_onmoveend_Proxy(IHTMLElement3 *This,VARIANT v);", "IHTMLElement3_get_onmoveend_Proxy": "HRESULT WINAPI IHTMLElement3_get_onmoveend_Proxy(IHTMLElement3 *This,VARIANT *p);", "IHTMLElement3_put_onmouseenter_Proxy": "HRESULT WINAPI IHTMLElement3_put_onmouseenter_Proxy(IHTMLElement3 *This,VARIANT v);", "IHTMLElement3_get_onmouseenter_Proxy": "HRESULT WINAPI IHTMLElement3_get_onmouseenter_Proxy(IHTMLElement3 *This,VARIANT *p);", "IHTMLElement3_put_onmouseleave_Proxy": "HRESULT WINAPI IHTMLElement3_put_onmouseleave_Proxy(IHTMLElement3 *This,VARIANT v);", "IHTMLElement3_get_onmouseleave_Proxy": "HRESULT WINAPI IHTMLElement3_get_onmouseleave_Proxy(IHTMLElement3 *This,VARIANT *p);", "IHTMLElement3_put_onactivate_Proxy": "HRESULT WINAPI IHTMLElement3_put_onactivate_Proxy(IHTMLElement3 *This,VARIANT v);", "IHTMLElement3_get_onactivate_Proxy": "HRESULT WINAPI IHTMLElement3_get_onactivate_Proxy(IHTMLElement3 *This,VARIANT *p);", "IHTMLElement3_put_ondeactivate_Proxy": "HRESULT WINAPI IHTMLElement3_put_ondeactivate_Proxy(IHTMLElement3 *This,VARIANT v);", "IHTMLElement3_get_ondeactivate_Proxy": "HRESULT WINAPI IHTMLElement3_get_ondeactivate_Proxy(IHTMLElement3 *This,VARIANT *p);", "IHTMLElement3_dragDrop_Proxy": "HRESULT WINAPI IHTMLElement3_dragDrop_Proxy(IHTMLElement3 *This,VARIANT_BOOL *pfRet);", "IHTMLElement3_get_glyphMode_Proxy": "HRESULT WINAPI IHTMLElement3_get_glyphMode_Proxy(IHTMLElement3 *This,LONG *p);", "IHTMLElement4_put_onmousewheel_Proxy": "HRESULT WINAPI IHTMLElement4_put_onmousewheel_Proxy(IHTMLElement4 *This,VARIANT v);", "IHTMLElement4_get_onmousewheel_Proxy": "HRESULT WINAPI IHTMLElement4_get_onmousewheel_Proxy(IHTMLElement4 *This,VARIANT *p);", "IHTMLElement4_normalize_Proxy": "HRESULT WINAPI IHTMLElement4_normalize_Proxy(IHTMLElement4 *This);", "IHTMLElement4_getAttributeNode_Proxy": "HRESULT WINAPI IHTMLElement4_getAttributeNode_Proxy(IHTMLElement4 *This,BSTR bstrname,IHTMLDOMAttribute **ppAttribute);", "IHTMLElement4_setAttributeNode_Proxy": "HRESULT WINAPI IHTMLElement4_setAttributeNode_Proxy(IHTMLElement4 *This,IHTMLDOMAttribute *pattr,IHTMLDOMAttribute **ppretAttribute);", "IHTMLElement4_removeAttributeNode_Proxy": "HRESULT WINAPI IHTMLElement4_removeAttributeNode_Proxy(IHTMLElement4 *This,IHTMLDOMAttribute *pattr,IHTMLDOMAttribute **ppretAttribute);", "IHTMLElement4_put_onbeforeactivate_Proxy": "HRESULT WINAPI IHTMLElement4_put_onbeforeactivate_Proxy(IHTMLElement4 *This,VARIANT v);", "IHTMLElement4_get_onbeforeactivate_Proxy": "HRESULT WINAPI IHTMLElement4_get_onbeforeactivate_Proxy(IHTMLElement4 *This,VARIANT *p);", "IHTMLElement4_put_onfocusin_Proxy": "HRESULT WINAPI IHTMLElement4_put_onfocusin_Proxy(IHTMLElement4 *This,VARIANT v);", "IHTMLElement4_get_onfocusin_Proxy": "HRESULT WINAPI IHTMLElement4_get_onfocusin_Proxy(IHTMLElement4 *This,VARIANT *p);", "IHTMLElement4_put_onfocusout_Proxy": "HRESULT WINAPI IHTMLElement4_put_onfocusout_Proxy(IHTMLElement4 *This,VARIANT v);", "IHTMLElement4_get_onfocusout_Proxy": "HRESULT WINAPI IHTMLElement4_get_onfocusout_Proxy(IHTMLElement4 *This,VARIANT *p);", "IHTMLElementRender_DrawToDC_Proxy": "HRESULT WINAPI IHTMLElementRender_DrawToDC_Proxy(IHTMLElementRender *This,HDC hDC);", "IHTMLElementRender_SetDocumentPrinter_Proxy": "HRESULT WINAPI IHTMLElementRender_SetDocumentPrinter_Proxy(IHTMLElementRender *This,BSTR bstrPrinterName,HDC hDC);", "IHTMLUniqueName_get_uniqueNumber_Proxy": "HRESULT WINAPI IHTMLUniqueName_get_uniqueNumber_Proxy(IHTMLUniqueName *This,__LONG32 *p);", "IHTMLUniqueName_get_uniqueID_Proxy": "HRESULT WINAPI IHTMLUniqueName_get_uniqueID_Proxy(IHTMLUniqueName *This,BSTR *p);", "IHTMLDatabinding_put_dataFld_Proxy": "HRESULT WINAPI IHTMLDatabinding_put_dataFld_Proxy(IHTMLDatabinding *This,BSTR v);", "IHTMLDatabinding_get_dataFld_Proxy": "HRESULT WINAPI IHTMLDatabinding_get_dataFld_Proxy(IHTMLDatabinding *This,BSTR *p);", "IHTMLDatabinding_put_dataSrc_Proxy": "HRESULT WINAPI IHTMLDatabinding_put_dataSrc_Proxy(IHTMLDatabinding *This,BSTR v);", "IHTMLDatabinding_get_dataSrc_Proxy": "HRESULT WINAPI IHTMLDatabinding_get_dataSrc_Proxy(IHTMLDatabinding *This,BSTR *p);", "IHTMLDatabinding_put_dataFormatAs_Proxy": "HRESULT WINAPI IHTMLDatabinding_put_dataFormatAs_Proxy(IHTMLDatabinding *This,BSTR v);", "IHTMLDatabinding_get_dataFormatAs_Proxy": "HRESULT WINAPI IHTMLDatabinding_get_dataFormatAs_Proxy(IHTMLDatabinding *This,BSTR *p);", "IHTMLDocument_get_Script_Proxy": "HRESULT WINAPI IHTMLDocument_get_Script_Proxy(IHTMLDocument *This,IDispatch **p);", "IHTMLElementDefaults_get_style_Proxy": "HRESULT WINAPI IHTMLElementDefaults_get_style_Proxy(IHTMLElementDefaults *This,IHTMLStyle **p);", "IHTMLElementDefaults_put_tabStop_Proxy": "HRESULT WINAPI IHTMLElementDefaults_put_tabStop_Proxy(IHTMLElementDefaults *This,VARIANT_BOOL v);", "IHTMLElementDefaults_get_tabStop_Proxy": "HRESULT WINAPI IHTMLElementDefaults_get_tabStop_Proxy(IHTMLElementDefaults *This,VARIANT_BOOL *p);", "IHTMLElementDefaults_put_viewInheritStyle_Proxy": "HRESULT WINAPI IHTMLElementDefaults_put_viewInheritStyle_Proxy(IHTMLElementDefaults *This,VARIANT_BOOL v);", "IHTMLElementDefaults_get_viewInheritStyle_Proxy": "HRESULT WINAPI IHTMLElementDefaults_get_viewInheritStyle_Proxy(IHTMLElementDefaults *This,VARIANT_BOOL *p);", "IHTMLElementDefaults_put_viewMasterTab_Proxy": "HRESULT WINAPI IHTMLElementDefaults_put_viewMasterTab_Proxy(IHTMLElementDefaults *This,VARIANT_BOOL v);", "IHTMLElementDefaults_get_viewMasterTab_Proxy": "HRESULT WINAPI IHTMLElementDefaults_get_viewMasterTab_Proxy(IHTMLElementDefaults *This,VARIANT_BOOL *p);", "IHTMLElementDefaults_put_scrollSegmentX_Proxy": "HRESULT WINAPI IHTMLElementDefaults_put_scrollSegmentX_Proxy(IHTMLElementDefaults *This,__LONG32 v);", "IHTMLElementDefaults_get_scrollSegmentX_Proxy": "HRESULT WINAPI IHTMLElementDefaults_get_scrollSegmentX_Proxy(IHTMLElementDefaults *This,__LONG32 *p);", "IHTMLElementDefaults_put_scrollSegmentY_Proxy": "HRESULT WINAPI IHTMLElementDefaults_put_scrollSegmentY_Proxy(IHTMLElementDefaults *This,__LONG32 v);", "IHTMLElementDefaults_get_scrollSegmentY_Proxy": "HRESULT WINAPI IHTMLElementDefaults_get_scrollSegmentY_Proxy(IHTMLElementDefaults *This,__LONG32 *p);", "IHTMLElementDefaults_put_isMultiLine_Proxy": "HRESULT WINAPI IHTMLElementDefaults_put_isMultiLine_Proxy(IHTMLElementDefaults *This,VARIANT_BOOL v);", "IHTMLElementDefaults_get_isMultiLine_Proxy": "HRESULT WINAPI IHTMLElementDefaults_get_isMultiLine_Proxy(IHTMLElementDefaults *This,VARIANT_BOOL *p);", "IHTMLElementDefaults_put_contentEditable_Proxy": "HRESULT WINAPI IHTMLElementDefaults_put_contentEditable_Proxy(IHTMLElementDefaults *This,BSTR v);", "IHTMLElementDefaults_get_contentEditable_Proxy": "HRESULT WINAPI IHTMLElementDefaults_get_contentEditable_Proxy(IHTMLElementDefaults *This,BSTR *p);", "IHTMLElementDefaults_put_canHaveHTML_Proxy": "HRESULT WINAPI IHTMLElementDefaults_put_canHaveHTML_Proxy(IHTMLElementDefaults *This,VARIANT_BOOL v);", "IHTMLElementDefaults_get_canHaveHTML_Proxy": "HRESULT WINAPI IHTMLElementDefaults_get_canHaveHTML_Proxy(IHTMLElementDefaults *This,VARIANT_BOOL *p);", "IHTMLElementDefaults_putref_viewLink_Proxy": "HRESULT WINAPI IHTMLElementDefaults_putref_viewLink_Proxy(IHTMLElementDefaults *This,IHTMLDocument *v);", "IHTMLElementDefaults_get_viewLink_Proxy": "HRESULT WINAPI IHTMLElementDefaults_get_viewLink_Proxy(IHTMLElementDefaults *This,IHTMLDocument **p);", "IHTMLElementDefaults_put_frozen_Proxy": "HRESULT WINAPI IHTMLElementDefaults_put_frozen_Proxy(IHTMLElementDefaults *This,VARIANT_BOOL v);", "IHTMLElementDefaults_get_frozen_Proxy": "HRESULT WINAPI IHTMLElementDefaults_get_frozen_Proxy(IHTMLElementDefaults *This,VARIANT_BOOL *p);", "IHTCDefaultDispatch_get_element_Proxy": "HRESULT WINAPI IHTCDefaultDispatch_get_element_Proxy(IHTCDefaultDispatch *This,IHTMLElement **p);", "IHTCDefaultDispatch_createEventObject_Proxy": "HRESULT WINAPI IHTCDefaultDispatch_createEventObject_Proxy(IHTCDefaultDispatch *This,IHTMLEventObj **eventObj);", "IHTCDefaultDispatch_get_defaults_Proxy": "HRESULT WINAPI IHTCDefaultDispatch_get_defaults_Proxy(IHTCDefaultDispatch *This,IDispatch **p);", "IHTCDefaultDispatch_get_document_Proxy": "HRESULT WINAPI IHTCDefaultDispatch_get_document_Proxy(IHTCDefaultDispatch *This,IDispatch **p);", "IHTCPropertyBehavior_fireChange_Proxy": "HRESULT WINAPI IHTCPropertyBehavior_fireChange_Proxy(IHTCPropertyBehavior *This);", "IHTCPropertyBehavior_put_value_Proxy": "HRESULT WINAPI IHTCPropertyBehavior_put_value_Proxy(IHTCPropertyBehavior *This,VARIANT v);", "IHTCPropertyBehavior_get_value_Proxy": "HRESULT WINAPI IHTCPropertyBehavior_get_value_Proxy(IHTCPropertyBehavior *This,VARIANT *p);", "IHTCEventBehavior_fire_Proxy": "HRESULT WINAPI IHTCEventBehavior_fire_Proxy(IHTCEventBehavior *This,IHTMLEventObj *pvar);", "IHTCAttachBehavior_fireEvent_Proxy": "HRESULT WINAPI IHTCAttachBehavior_fireEvent_Proxy(IHTCAttachBehavior *This,IDispatch *evt);", "IHTCAttachBehavior_detachEvent_Proxy": "HRESULT WINAPI IHTCAttachBehavior_detachEvent_Proxy(IHTCAttachBehavior *This);", "IHTCAttachBehavior2_fireEvent_Proxy": "HRESULT WINAPI IHTCAttachBehavior2_fireEvent_Proxy(IHTCAttachBehavior2 *This,VARIANT evt);", "IHTCDescBehavior_get_urn_Proxy": "HRESULT WINAPI IHTCDescBehavior_get_urn_Proxy(IHTCDescBehavior *This,BSTR *p);", "IHTCDescBehavior_get_name_Proxy": "HRESULT WINAPI IHTCDescBehavior_get_name_Proxy(IHTCDescBehavior *This,BSTR *p);", "IHTMLUrnCollection_get_length_Proxy": "HRESULT WINAPI IHTMLUrnCollection_get_length_Proxy(IHTMLUrnCollection *This,__LONG32 *p);", "IHTMLUrnCollection_item_Proxy": "HRESULT WINAPI IHTMLUrnCollection_item_Proxy(IHTMLUrnCollection *This,__LONG32 index,BSTR *ppUrn);", "IHTMLGenericElement_get_recordset_Proxy": "HRESULT WINAPI IHTMLGenericElement_get_recordset_Proxy(IHTMLGenericElement *This,IDispatch **p);", "IHTMLGenericElement_namedRecordset_Proxy": "HRESULT WINAPI IHTMLGenericElement_namedRecordset_Proxy(IHTMLGenericElement *This,BSTR dataMember,VARIANT *hierarchy,IDispatch **ppRecordset);", "IHTMLStyleSheetRule_put_selectorText_Proxy": "HRESULT WINAPI IHTMLStyleSheetRule_put_selectorText_Proxy(IHTMLStyleSheetRule *This,BSTR v);", "IHTMLStyleSheetRule_get_selectorText_Proxy": "HRESULT WINAPI IHTMLStyleSheetRule_get_selectorText_Proxy(IHTMLStyleSheetRule *This,BSTR *p);", "IHTMLStyleSheetRule_get_style_Proxy": "HRESULT WINAPI IHTMLStyleSheetRule_get_style_Proxy(IHTMLStyleSheetRule *This,IHTMLRuleStyle **p);", "IHTMLStyleSheetRule_get_readOnly_Proxy": "HRESULT WINAPI IHTMLStyleSheetRule_get_readOnly_Proxy(IHTMLStyleSheetRule *This,VARIANT_BOOL *p);", "IHTMLStyleSheetRulesCollection_get_length_Proxy": "HRESULT WINAPI IHTMLStyleSheetRulesCollection_get_length_Proxy(IHTMLStyleSheetRulesCollection *This,__LONG32 *p);", "IHTMLStyleSheetRulesCollection_item_Proxy": "HRESULT WINAPI IHTMLStyleSheetRulesCollection_item_Proxy(IHTMLStyleSheetRulesCollection *This,__LONG32 index,IHTMLStyleSheetRule **ppHTMLStyleSheetRule);", "IHTMLStyleSheetPage_get_selector_Proxy": "HRESULT WINAPI IHTMLStyleSheetPage_get_selector_Proxy(IHTMLStyleSheetPage *This,BSTR *p);", "IHTMLStyleSheetPage_get_pseudoClass_Proxy": "HRESULT WINAPI IHTMLStyleSheetPage_get_pseudoClass_Proxy(IHTMLStyleSheetPage *This,BSTR *p);", "IHTMLStyleSheetPagesCollection_get_length_Proxy": "HRESULT WINAPI IHTMLStyleSheetPagesCollection_get_length_Proxy(IHTMLStyleSheetPagesCollection *This,__LONG32 *p);", "IHTMLStyleSheetPagesCollection_item_Proxy": "HRESULT WINAPI IHTMLStyleSheetPagesCollection_item_Proxy(IHTMLStyleSheetPagesCollection *This,__LONG32 index,IHTMLStyleSheetPage **ppHTMLStyleSheetPage);", "IHTMLStyleSheetsCollection_get_length_Proxy": "HRESULT WINAPI IHTMLStyleSheetsCollection_get_length_Proxy(IHTMLStyleSheetsCollection *This,__LONG32 *p);", "IHTMLStyleSheetsCollection_get__newEnum_Proxy": "HRESULT WINAPI IHTMLStyleSheetsCollection_get__newEnum_Proxy(IHTMLStyleSheetsCollection *This,IUnknown **p);", "IHTMLStyleSheetsCollection_item_Proxy": "HRESULT WINAPI IHTMLStyleSheetsCollection_item_Proxy(IHTMLStyleSheetsCollection *This,VARIANT *pvarIndex,VARIANT *pvarResult);", "IHTMLStyleSheet_put_title_Proxy": "HRESULT WINAPI IHTMLStyleSheet_put_title_Proxy(IHTMLStyleSheet *This,BSTR v);", "IHTMLStyleSheet_get_title_Proxy": "HRESULT WINAPI IHTMLStyleSheet_get_title_Proxy(IHTMLStyleSheet *This,BSTR *p);", "IHTMLStyleSheet_get_parentStyleSheet_Proxy": "HRESULT WINAPI IHTMLStyleSheet_get_parentStyleSheet_Proxy(IHTMLStyleSheet *This,IHTMLStyleSheet **p);", "IHTMLStyleSheet_get_owningElement_Proxy": "HRESULT WINAPI IHTMLStyleSheet_get_owningElement_Proxy(IHTMLStyleSheet *This,IHTMLElement **p);", "IHTMLStyleSheet_put_disabled_Proxy": "HRESULT WINAPI IHTMLStyleSheet_put_disabled_Proxy(IHTMLStyleSheet *This,VARIANT_BOOL v);", "IHTMLStyleSheet_get_disabled_Proxy": "HRESULT WINAPI IHTMLStyleSheet_get_disabled_Proxy(IHTMLStyleSheet *This,VARIANT_BOOL *p);", "IHTMLStyleSheet_get_readOnly_Proxy": "HRESULT WINAPI IHTMLStyleSheet_get_readOnly_Proxy(IHTMLStyleSheet *This,VARIANT_BOOL *p);", "IHTMLStyleSheet_get_imports_Proxy": "HRESULT WINAPI IHTMLStyleSheet_get_imports_Proxy(IHTMLStyleSheet *This,IHTMLStyleSheetsCollection **p);", "IHTMLStyleSheet_put_href_Proxy": "HRESULT WINAPI IHTMLStyleSheet_put_href_Proxy(IHTMLStyleSheet *This,BSTR v);", "IHTMLStyleSheet_get_href_Proxy": "HRESULT WINAPI IHTMLStyleSheet_get_href_Proxy(IHTMLStyleSheet *This,BSTR *p);", "IHTMLStyleSheet_get_type_Proxy": "HRESULT WINAPI IHTMLStyleSheet_get_type_Proxy(IHTMLStyleSheet *This,BSTR *p);", "IHTMLStyleSheet_get_id_Proxy": "HRESULT WINAPI IHTMLStyleSheet_get_id_Proxy(IHTMLStyleSheet *This,BSTR *p);", "IHTMLStyleSheet_addImport_Proxy": "HRESULT WINAPI IHTMLStyleSheet_addImport_Proxy(IHTMLStyleSheet *This,BSTR bstrURL,__LONG32 lIndex,__LONG32 *plIndex);", "IHTMLStyleSheet_addRule_Proxy": "HRESULT WINAPI IHTMLStyleSheet_addRule_Proxy(IHTMLStyleSheet *This,BSTR bstrSelector,BSTR bstrStyle,__LONG32 lIndex,__LONG32 *plNewIndex);", "IHTMLStyleSheet_removeImport_Proxy": "HRESULT WINAPI IHTMLStyleSheet_removeImport_Proxy(IHTMLStyleSheet *This,__LONG32 lIndex);", "IHTMLStyleSheet_removeRule_Proxy": "HRESULT WINAPI IHTMLStyleSheet_removeRule_Proxy(IHTMLStyleSheet *This,__LONG32 lIndex);", "IHTMLStyleSheet_put_media_Proxy": "HRESULT WINAPI IHTMLStyleSheet_put_media_Proxy(IHTMLStyleSheet *This,BSTR v);", "IHTMLStyleSheet_get_media_Proxy": "HRESULT WINAPI IHTMLStyleSheet_get_media_Proxy(IHTMLStyleSheet *This,BSTR *p);", "IHTMLStyleSheet_put_cssText_Proxy": "HRESULT WINAPI IHTMLStyleSheet_put_cssText_Proxy(IHTMLStyleSheet *This,BSTR v);", "IHTMLStyleSheet_get_cssText_Proxy": "HRESULT WINAPI IHTMLStyleSheet_get_cssText_Proxy(IHTMLStyleSheet *This,BSTR *p);", "IHTMLStyleSheet_get_rules_Proxy": "HRESULT WINAPI IHTMLStyleSheet_get_rules_Proxy(IHTMLStyleSheet *This,IHTMLStyleSheetRulesCollection **p);", "IHTMLStyleSheet2_get_pages_Proxy": "HRESULT WINAPI IHTMLStyleSheet2_get_pages_Proxy(IHTMLStyleSheet2 *This,IHTMLStyleSheetPagesCollection **p);", "IHTMLStyleSheet2_addPageRule_Proxy": "HRESULT WINAPI IHTMLStyleSheet2_addPageRule_Proxy(IHTMLStyleSheet2 *This,BSTR bstrSelector,BSTR bstrStyle,__LONG32 lIndex,__LONG32 *plNewIndex);", "IHTMLLinkElement_put_href_Proxy": "HRESULT WINAPI IHTMLLinkElement_put_href_Proxy(IHTMLLinkElement *This,BSTR v);", "IHTMLLinkElement_get_href_Proxy": "HRESULT WINAPI IHTMLLinkElement_get_href_Proxy(IHTMLLinkElement *This,BSTR *p);", "IHTMLLinkElement_put_rel_Proxy": "HRESULT WINAPI IHTMLLinkElement_put_rel_Proxy(IHTMLLinkElement *This,BSTR v);", "IHTMLLinkElement_get_rel_Proxy": "HRESULT WINAPI IHTMLLinkElement_get_rel_Proxy(IHTMLLinkElement *This,BSTR *p);", "IHTMLLinkElement_put_rev_Proxy": "HRESULT WINAPI IHTMLLinkElement_put_rev_Proxy(IHTMLLinkElement *This,BSTR v);", "IHTMLLinkElement_get_rev_Proxy": "HRESULT WINAPI IHTMLLinkElement_get_rev_Proxy(IHTMLLinkElement *This,BSTR *p);", "IHTMLLinkElement_put_type_Proxy": "HRESULT WINAPI IHTMLLinkElement_put_type_Proxy(IHTMLLinkElement *This,BSTR v);", "IHTMLLinkElement_get_type_Proxy": "HRESULT WINAPI IHTMLLinkElement_get_type_Proxy(IHTMLLinkElement *This,BSTR *p);", "IHTMLLinkElement_get_readyState_Proxy": "HRESULT WINAPI IHTMLLinkElement_get_readyState_Proxy(IHTMLLinkElement *This,BSTR *p);", "IHTMLLinkElement_put_onreadystatechange_Proxy": "HRESULT WINAPI IHTMLLinkElement_put_onreadystatechange_Proxy(IHTMLLinkElement *This,VARIANT v);", "IHTMLLinkElement_get_onreadystatechange_Proxy": "HRESULT WINAPI IHTMLLinkElement_get_onreadystatechange_Proxy(IHTMLLinkElement *This,VARIANT *p);", "IHTMLLinkElement_put_onload_Proxy": "HRESULT WINAPI IHTMLLinkElement_put_onload_Proxy(IHTMLLinkElement *This,VARIANT v);", "IHTMLLinkElement_get_onload_Proxy": "HRESULT WINAPI IHTMLLinkElement_get_onload_Proxy(IHTMLLinkElement *This,VARIANT *p);", "IHTMLLinkElement_put_onerror_Proxy": "HRESULT WINAPI IHTMLLinkElement_put_onerror_Proxy(IHTMLLinkElement *This,VARIANT v);", "IHTMLLinkElement_get_onerror_Proxy": "HRESULT WINAPI IHTMLLinkElement_get_onerror_Proxy(IHTMLLinkElement *This,VARIANT *p);", "IHTMLLinkElement_get_styleSheet_Proxy": "HRESULT WINAPI IHTMLLinkElement_get_styleSheet_Proxy(IHTMLLinkElement *This,IHTMLStyleSheet **p);", "IHTMLLinkElement_put_disabled_Proxy": "HRESULT WINAPI IHTMLLinkElement_put_disabled_Proxy(IHTMLLinkElement *This,VARIANT_BOOL v);", "IHTMLLinkElement_get_disabled_Proxy": "HRESULT WINAPI IHTMLLinkElement_get_disabled_Proxy(IHTMLLinkElement *This,VARIANT_BOOL *p);", "IHTMLLinkElement_put_media_Proxy": "HRESULT WINAPI IHTMLLinkElement_put_media_Proxy(IHTMLLinkElement *This,BSTR v);", "IHTMLLinkElement_get_media_Proxy": "HRESULT WINAPI IHTMLLinkElement_get_media_Proxy(IHTMLLinkElement *This,BSTR *p);", "IHTMLLinkElement2_put_target_Proxy": "HRESULT WINAPI IHTMLLinkElement2_put_target_Proxy(IHTMLLinkElement2 *This,BSTR v);", "IHTMLLinkElement2_get_target_Proxy": "HRESULT WINAPI IHTMLLinkElement2_get_target_Proxy(IHTMLLinkElement2 *This,BSTR *p);", "IHTMLLinkElement3_put_charset_Proxy": "HRESULT WINAPI IHTMLLinkElement3_put_charset_Proxy(IHTMLLinkElement3 *This,BSTR v);", "IHTMLLinkElement3_get_charset_Proxy": "HRESULT WINAPI IHTMLLinkElement3_get_charset_Proxy(IHTMLLinkElement3 *This,BSTR *p);", "IHTMLLinkElement3_put_hreflang_Proxy": "HRESULT WINAPI IHTMLLinkElement3_put_hreflang_Proxy(IHTMLLinkElement3 *This,BSTR v);", "IHTMLLinkElement3_get_hreflang_Proxy": "HRESULT WINAPI IHTMLLinkElement3_get_hreflang_Proxy(IHTMLLinkElement3 *This,BSTR *p);", "IHTMLTxtRange_get_htmlText_Proxy": "HRESULT WINAPI IHTMLTxtRange_get_htmlText_Proxy(IHTMLTxtRange *This,BSTR *p);", "IHTMLTxtRange_put_text_Proxy": "HRESULT WINAPI IHTMLTxtRange_put_text_Proxy(IHTMLTxtRange *This,BSTR v);", "IHTMLTxtRange_get_text_Proxy": "HRESULT WINAPI IHTMLTxtRange_get_text_Proxy(IHTMLTxtRange *This,BSTR *p);", "IHTMLTxtRange_parentElement_Proxy": "HRESULT WINAPI IHTMLTxtRange_parentElement_Proxy(IHTMLTxtRange *This,IHTMLElement **parent);", "IHTMLTxtRange_duplicate_Proxy": "HRESULT WINAPI IHTMLTxtRange_duplicate_Proxy(IHTMLTxtRange *This,IHTMLTxtRange **Duplicate);", "IHTMLTxtRange_inRange_Proxy": "HRESULT WINAPI IHTMLTxtRange_inRange_Proxy(IHTMLTxtRange *This,IHTMLTxtRange *Range,VARIANT_BOOL *InRange);", "IHTMLTxtRange_isEqual_Proxy": "HRESULT WINAPI IHTMLTxtRange_isEqual_Proxy(IHTMLTxtRange *This,IHTMLTxtRange *Range,VARIANT_BOOL *IsEqual);", "IHTMLTxtRange_scrollIntoView_Proxy": "HRESULT WINAPI IHTMLTxtRange_scrollIntoView_Proxy(IHTMLTxtRange *This,VARIANT_BOOL fStart);", "IHTMLTxtRange_collapse_Proxy": "HRESULT WINAPI IHTMLTxtRange_collapse_Proxy(IHTMLTxtRange *This,VARIANT_BOOL Start);", "IHTMLTxtRange_expand_Proxy": "HRESULT WINAPI IHTMLTxtRange_expand_Proxy(IHTMLTxtRange *This,BSTR Unit,VARIANT_BOOL *Success);", "IHTMLTxtRange_move_Proxy": "HRESULT WINAPI IHTMLTxtRange_move_Proxy(IHTMLTxtRange *This,BSTR Unit,__LONG32 Count,__LONG32 *ActualCount);", "IHTMLTxtRange_moveStart_Proxy": "HRESULT WINAPI IHTMLTxtRange_moveStart_Proxy(IHTMLTxtRange *This,BSTR Unit,__LONG32 Count,__LONG32 *ActualCount);", "IHTMLTxtRange_moveEnd_Proxy": "HRESULT WINAPI IHTMLTxtRange_moveEnd_Proxy(IHTMLTxtRange *This,BSTR Unit,__LONG32 Count,__LONG32 *ActualCount);", "IHTMLTxtRange_select_Proxy": "HRESULT WINAPI IHTMLTxtRange_select_Proxy(IHTMLTxtRange *This);", "IHTMLTxtRange_pasteHTML_Proxy": "HRESULT WINAPI IHTMLTxtRange_pasteHTML_Proxy(IHTMLTxtRange *This,BSTR html);", "IHTMLTxtRange_moveToElementText_Proxy": "HRESULT WINAPI IHTMLTxtRange_moveToElementText_Proxy(IHTMLTxtRange *This,IHTMLElement *element);", "IHTMLTxtRange_setEndPoint_Proxy": "HRESULT WINAPI IHTMLTxtRange_setEndPoint_Proxy(IHTMLTxtRange *This,BSTR how,IHTMLTxtRange *SourceRange);", "IHTMLTxtRange_compareEndPoints_Proxy": "HRESULT WINAPI IHTMLTxtRange_compareEndPoints_Proxy(IHTMLTxtRange *This,BSTR how,IHTMLTxtRange *SourceRange,__LONG32 *ret);", "IHTMLTxtRange_findText_Proxy": "HRESULT WINAPI IHTMLTxtRange_findText_Proxy(IHTMLTxtRange *This,BSTR String,__LONG32 count,__LONG32 Flags,VARIANT_BOOL *Success);", "IHTMLTxtRange_moveToPoint_Proxy": "HRESULT WINAPI IHTMLTxtRange_moveToPoint_Proxy(IHTMLTxtRange *This,__LONG32 x,__LONG32 y);", "IHTMLTxtRange_getBookmark_Proxy": "HRESULT WINAPI IHTMLTxtRange_getBookmark_Proxy(IHTMLTxtRange *This,BSTR *Boolmark);", "IHTMLTxtRange_moveToBookmark_Proxy": "HRESULT WINAPI IHTMLTxtRange_moveToBookmark_Proxy(IHTMLTxtRange *This,BSTR Bookmark,VARIANT_BOOL *Success);", "IHTMLTxtRange_queryCommandSupported_Proxy": "HRESULT WINAPI IHTMLTxtRange_queryCommandSupported_Proxy(IHTMLTxtRange *This,BSTR cmdID,VARIANT_BOOL *pfRet);", "IHTMLTxtRange_queryCommandEnabled_Proxy": "HRESULT WINAPI IHTMLTxtRange_queryCommandEnabled_Proxy(IHTMLTxtRange *This,BSTR cmdID,VARIANT_BOOL *pfRet);", "IHTMLTxtRange_queryCommandState_Proxy": "HRESULT WINAPI IHTMLTxtRange_queryCommandState_Proxy(IHTMLTxtRange *This,BSTR cmdID,VARIANT_BOOL *pfRet);", "IHTMLTxtRange_queryCommandIndeterm_Proxy": "HRESULT WINAPI IHTMLTxtRange_queryCommandIndeterm_Proxy(IHTMLTxtRange *This,BSTR cmdID,VARIANT_BOOL *pfRet);", "IHTMLTxtRange_queryCommandText_Proxy": "HRESULT WINAPI IHTMLTxtRange_queryCommandText_Proxy(IHTMLTxtRange *This,BSTR cmdID,BSTR *pcmdText);", "IHTMLTxtRange_queryCommandValue_Proxy": "HRESULT WINAPI IHTMLTxtRange_queryCommandValue_Proxy(IHTMLTxtRange *This,BSTR cmdID,VARIANT *pcmdValue);", "IHTMLTxtRange_execCommand_Proxy": "HRESULT WINAPI IHTMLTxtRange_execCommand_Proxy(IHTMLTxtRange *This,BSTR cmdID,VARIANT_BOOL showUI,VARIANT value,VARIANT_BOOL *pfRet);", "IHTMLTxtRange_execCommandShowHelp_Proxy": "HRESULT WINAPI IHTMLTxtRange_execCommandShowHelp_Proxy(IHTMLTxtRange *This,BSTR cmdID,VARIANT_BOOL *pfRet);", "IHTMLTextRangeMetrics_get_offsetTop_Proxy": "HRESULT WINAPI IHTMLTextRangeMetrics_get_offsetTop_Proxy(IHTMLTextRangeMetrics *This,__LONG32 *p);", "IHTMLTextRangeMetrics_get_offsetLeft_Proxy": "HRESULT WINAPI IHTMLTextRangeMetrics_get_offsetLeft_Proxy(IHTMLTextRangeMetrics *This,__LONG32 *p);", "IHTMLTextRangeMetrics_get_boundingTop_Proxy": "HRESULT WINAPI IHTMLTextRangeMetrics_get_boundingTop_Proxy(IHTMLTextRangeMetrics *This,__LONG32 *p);", "IHTMLTextRangeMetrics_get_boundingLeft_Proxy": "HRESULT WINAPI IHTMLTextRangeMetrics_get_boundingLeft_Proxy(IHTMLTextRangeMetrics *This,__LONG32 *p);", "IHTMLTextRangeMetrics_get_boundingWidth_Proxy": "HRESULT WINAPI IHTMLTextRangeMetrics_get_boundingWidth_Proxy(IHTMLTextRangeMetrics *This,__LONG32 *p);", "IHTMLTextRangeMetrics_get_boundingHeight_Proxy": "HRESULT WINAPI IHTMLTextRangeMetrics_get_boundingHeight_Proxy(IHTMLTextRangeMetrics *This,__LONG32 *p);", "IHTMLTextRangeMetrics2_getClientRects_Proxy": "HRESULT WINAPI IHTMLTextRangeMetrics2_getClientRects_Proxy(IHTMLTextRangeMetrics2 *This,IHTMLRectCollection **pRectCol);", "IHTMLTextRangeMetrics2_getBoundingClientRect_Proxy": "HRESULT WINAPI IHTMLTextRangeMetrics2_getBoundingClientRect_Proxy(IHTMLTextRangeMetrics2 *This,IHTMLRect **pRect);", "IHTMLTxtRangeCollection_get_length_Proxy": "HRESULT WINAPI IHTMLTxtRangeCollection_get_length_Proxy(IHTMLTxtRangeCollection *This,__LONG32 *p);", "IHTMLTxtRangeCollection_get__newEnum_Proxy": "HRESULT WINAPI IHTMLTxtRangeCollection_get__newEnum_Proxy(IHTMLTxtRangeCollection *This,IUnknown **p);", "IHTMLTxtRangeCollection_item_Proxy": "HRESULT WINAPI IHTMLTxtRangeCollection_item_Proxy(IHTMLTxtRangeCollection *This,VARIANT *pvarIndex,VARIANT *pvarResult);", "IHTMLFormElement_put_action_Proxy": "HRESULT WINAPI IHTMLFormElement_put_action_Proxy(IHTMLFormElement *This,BSTR v);", "IHTMLFormElement_get_action_Proxy": "HRESULT WINAPI IHTMLFormElement_get_action_Proxy(IHTMLFormElement *This,BSTR *p);", "IHTMLFormElement_put_dir_Proxy": "HRESULT WINAPI IHTMLFormElement_put_dir_Proxy(IHTMLFormElement *This,BSTR v);", "IHTMLFormElement_get_dir_Proxy": "HRESULT WINAPI IHTMLFormElement_get_dir_Proxy(IHTMLFormElement *This,BSTR *p);", "IHTMLFormElement_put_encoding_Proxy": "HRESULT WINAPI IHTMLFormElement_put_encoding_Proxy(IHTMLFormElement *This,BSTR v);", "IHTMLFormElement_get_encoding_Proxy": "HRESULT WINAPI IHTMLFormElement_get_encoding_Proxy(IHTMLFormElement *This,BSTR *p);", "IHTMLFormElement_put_method_Proxy": "HRESULT WINAPI IHTMLFormElement_put_method_Proxy(IHTMLFormElement *This,BSTR v);", "IHTMLFormElement_get_method_Proxy": "HRESULT WINAPI IHTMLFormElement_get_method_Proxy(IHTMLFormElement *This,BSTR *p);", "IHTMLFormElement_get_elements_Proxy": "HRESULT WINAPI IHTMLFormElement_get_elements_Proxy(IHTMLFormElement *This,IDispatch **p);", "IHTMLFormElement_put_target_Proxy": "HRESULT WINAPI IHTMLFormElement_put_target_Proxy(IHTMLFormElement *This,BSTR v);", "IHTMLFormElement_get_target_Proxy": "HRESULT WINAPI IHTMLFormElement_get_target_Proxy(IHTMLFormElement *This,BSTR *p);", "IHTMLFormElement_put_name_Proxy": "HRESULT WINAPI IHTMLFormElement_put_name_Proxy(IHTMLFormElement *This,BSTR v);", "IHTMLFormElement_get_name_Proxy": "HRESULT WINAPI IHTMLFormElement_get_name_Proxy(IHTMLFormElement *This,BSTR *p);", "IHTMLFormElement_put_onsubmit_Proxy": "HRESULT WINAPI IHTMLFormElement_put_onsubmit_Proxy(IHTMLFormElement *This,VARIANT v);", "IHTMLFormElement_get_onsubmit_Proxy": "HRESULT WINAPI IHTMLFormElement_get_onsubmit_Proxy(IHTMLFormElement *This,VARIANT *p);", "IHTMLFormElement_put_onreset_Proxy": "HRESULT WINAPI IHTMLFormElement_put_onreset_Proxy(IHTMLFormElement *This,VARIANT v);", "IHTMLFormElement_get_onreset_Proxy": "HRESULT WINAPI IHTMLFormElement_get_onreset_Proxy(IHTMLFormElement *This,VARIANT *p);", "IHTMLFormElement_submit_Proxy": "HRESULT WINAPI IHTMLFormElement_submit_Proxy(IHTMLFormElement *This);", "IHTMLFormElement_reset_Proxy": "HRESULT WINAPI IHTMLFormElement_reset_Proxy(IHTMLFormElement *This);", "IHTMLFormElement_put_length_Proxy": "HRESULT WINAPI IHTMLFormElement_put_length_Proxy(IHTMLFormElement *This,__LONG32 v);", "IHTMLFormElement_get_length_Proxy": "HRESULT WINAPI IHTMLFormElement_get_length_Proxy(IHTMLFormElement *This,__LONG32 *p);", "IHTMLFormElement_get__newEnum_Proxy": "HRESULT WINAPI IHTMLFormElement_get__newEnum_Proxy(IHTMLFormElement *This,IUnknown **p);", "IHTMLFormElement_item_Proxy": "HRESULT WINAPI IHTMLFormElement_item_Proxy(IHTMLFormElement *This,VARIANT name,VARIANT index,IDispatch **pdisp);", "IHTMLFormElement_tags_Proxy": "HRESULT WINAPI IHTMLFormElement_tags_Proxy(IHTMLFormElement *This,VARIANT tagName,IDispatch **pdisp);", "IHTMLFormElement2_put_acceptCharset_Proxy": "HRESULT WINAPI IHTMLFormElement2_put_acceptCharset_Proxy(IHTMLFormElement2 *This,BSTR v);", "IHTMLFormElement2_get_acceptCharset_Proxy": "HRESULT WINAPI IHTMLFormElement2_get_acceptCharset_Proxy(IHTMLFormElement2 *This,BSTR *p);", "IHTMLFormElement2_urns_Proxy": "HRESULT WINAPI IHTMLFormElement2_urns_Proxy(IHTMLFormElement2 *This,VARIANT urn,IDispatch **pdisp);", "IHTMLFormElement3_namedItem_Proxy": "HRESULT WINAPI IHTMLFormElement3_namedItem_Proxy(IHTMLFormElement3 *This,BSTR name,IDispatch **pdisp);", "IHTMLSubmitData_appendNameValuePair_Proxy": "HRESULT WINAPI IHTMLSubmitData_appendNameValuePair_Proxy(IHTMLSubmitData *This,BSTR name,BSTR value);", "IHTMLSubmitData_appendNameFilePair_Proxy": "HRESULT WINAPI IHTMLSubmitData_appendNameFilePair_Proxy(IHTMLSubmitData *This,BSTR name,BSTR filename);", "IHTMLSubmitData_appendItemSeparator_Proxy": "HRESULT WINAPI IHTMLSubmitData_appendItemSeparator_Proxy(IHTMLSubmitData *This);", "IHTMLControlElement_put_tabIndex_Proxy": "HRESULT WINAPI IHTMLControlElement_put_tabIndex_Proxy(IHTMLControlElement *This,short v);", "IHTMLControlElement_get_tabIndex_Proxy": "HRESULT WINAPI IHTMLControlElement_get_tabIndex_Proxy(IHTMLControlElement *This,short *p);", "IHTMLControlElement_focus_Proxy": "HRESULT WINAPI IHTMLControlElement_focus_Proxy(IHTMLControlElement *This);", "IHTMLControlElement_put_accessKey_Proxy": "HRESULT WINAPI IHTMLControlElement_put_accessKey_Proxy(IHTMLControlElement *This,BSTR v);", "IHTMLControlElement_get_accessKey_Proxy": "HRESULT WINAPI IHTMLControlElement_get_accessKey_Proxy(IHTMLControlElement *This,BSTR *p);", "IHTMLControlElement_put_onblur_Proxy": "HRESULT WINAPI IHTMLControlElement_put_onblur_Proxy(IHTMLControlElement *This,VARIANT v);", "IHTMLControlElement_get_onblur_Proxy": "HRESULT WINAPI IHTMLControlElement_get_onblur_Proxy(IHTMLControlElement *This,VARIANT *p);", "IHTMLControlElement_put_onfocus_Proxy": "HRESULT WINAPI IHTMLControlElement_put_onfocus_Proxy(IHTMLControlElement *This,VARIANT v);", "IHTMLControlElement_get_onfocus_Proxy": "HRESULT WINAPI IHTMLControlElement_get_onfocus_Proxy(IHTMLControlElement *This,VARIANT *p);", "IHTMLControlElement_put_onresize_Proxy": "HRESULT WINAPI IHTMLControlElement_put_onresize_Proxy(IHTMLControlElement *This,VARIANT v);", "IHTMLControlElement_get_onresize_Proxy": "HRESULT WINAPI IHTMLControlElement_get_onresize_Proxy(IHTMLControlElement *This,VARIANT *p);", "IHTMLControlElement_blur_Proxy": "HRESULT WINAPI IHTMLControlElement_blur_Proxy(IHTMLControlElement *This);", "IHTMLControlElement_addFilter_Proxy": "HRESULT WINAPI IHTMLControlElement_addFilter_Proxy(IHTMLControlElement *This,IUnknown *pUnk);", "IHTMLControlElement_removeFilter_Proxy": "HRESULT WINAPI IHTMLControlElement_removeFilter_Proxy(IHTMLControlElement *This,IUnknown *pUnk);", "IHTMLControlElement_get_clientHeight_Proxy": "HRESULT WINAPI IHTMLControlElement_get_clientHeight_Proxy(IHTMLControlElement *This,__LONG32 *p);", "IHTMLControlElement_get_clientWidth_Proxy": "HRESULT WINAPI IHTMLControlElement_get_clientWidth_Proxy(IHTMLControlElement *This,__LONG32 *p);", "IHTMLControlElement_get_clientTop_Proxy": "HRESULT WINAPI IHTMLControlElement_get_clientTop_Proxy(IHTMLControlElement *This,__LONG32 *p);", "IHTMLControlElement_get_clientLeft_Proxy": "HRESULT WINAPI IHTMLControlElement_get_clientLeft_Proxy(IHTMLControlElement *This,__LONG32 *p);", "IHTMLTextContainer_createControlRange_Proxy": "HRESULT WINAPI IHTMLTextContainer_createControlRange_Proxy(IHTMLTextContainer *This,IDispatch **range);", "IHTMLTextContainer_get_scrollHeight_Proxy": "HRESULT WINAPI IHTMLTextContainer_get_scrollHeight_Proxy(IHTMLTextContainer *This,__LONG32 *p);", "IHTMLTextContainer_get_scrollWidth_Proxy": "HRESULT WINAPI IHTMLTextContainer_get_scrollWidth_Proxy(IHTMLTextContainer *This,__LONG32 *p);", "IHTMLTextContainer_put_scrollTop_Proxy": "HRESULT WINAPI IHTMLTextContainer_put_scrollTop_Proxy(IHTMLTextContainer *This,__LONG32 v);", "IHTMLTextContainer_get_scrollTop_Proxy": "HRESULT WINAPI IHTMLTextContainer_get_scrollTop_Proxy(IHTMLTextContainer *This,__LONG32 *p);", "IHTMLTextContainer_put_scrollLeft_Proxy": "HRESULT WINAPI IHTMLTextContainer_put_scrollLeft_Proxy(IHTMLTextContainer *This,__LONG32 v);", "IHTMLTextContainer_get_scrollLeft_Proxy": "HRESULT WINAPI IHTMLTextContainer_get_scrollLeft_Proxy(IHTMLTextContainer *This,__LONG32 *p);", "IHTMLTextContainer_put_onscroll_Proxy": "HRESULT WINAPI IHTMLTextContainer_put_onscroll_Proxy(IHTMLTextContainer *This,VARIANT v);", "IHTMLTextContainer_get_onscroll_Proxy": "HRESULT WINAPI IHTMLTextContainer_get_onscroll_Proxy(IHTMLTextContainer *This,VARIANT *p);", "IHTMLControlRange_select_Proxy": "HRESULT WINAPI IHTMLControlRange_select_Proxy(IHTMLControlRange *This);", "IHTMLControlRange_add_Proxy": "HRESULT WINAPI IHTMLControlRange_add_Proxy(IHTMLControlRange *This,IHTMLControlElement *item);", "IHTMLControlRange_remove_Proxy": "HRESULT WINAPI IHTMLControlRange_remove_Proxy(IHTMLControlRange *This,__LONG32 index);", "IHTMLControlRange_item_Proxy": "HRESULT WINAPI IHTMLControlRange_item_Proxy(IHTMLControlRange *This,__LONG32 index,IHTMLElement **pdisp);", "IHTMLControlRange_scrollIntoView_Proxy": "HRESULT WINAPI IHTMLControlRange_scrollIntoView_Proxy(IHTMLControlRange *This,VARIANT varargStart);", "IHTMLControlRange_queryCommandSupported_Proxy": "HRESULT WINAPI IHTMLControlRange_queryCommandSupported_Proxy(IHTMLControlRange *This,BSTR cmdID,VARIANT_BOOL *pfRet);", "IHTMLControlRange_queryCommandEnabled_Proxy": "HRESULT WINAPI IHTMLControlRange_queryCommandEnabled_Proxy(IHTMLControlRange *This,BSTR cmdID,VARIANT_BOOL *pfRet);", "IHTMLControlRange_queryCommandState_Proxy": "HRESULT WINAPI IHTMLControlRange_queryCommandState_Proxy(IHTMLControlRange *This,BSTR cmdID,VARIANT_BOOL *pfRet);", "IHTMLControlRange_queryCommandIndeterm_Proxy": "HRESULT WINAPI IHTMLControlRange_queryCommandIndeterm_Proxy(IHTMLControlRange *This,BSTR cmdID,VARIANT_BOOL *pfRet);", "IHTMLControlRange_queryCommandText_Proxy": "HRESULT WINAPI IHTMLControlRange_queryCommandText_Proxy(IHTMLControlRange *This,BSTR cmdID,BSTR *pcmdText);", "IHTMLControlRange_queryCommandValue_Proxy": "HRESULT WINAPI IHTMLControlRange_queryCommandValue_Proxy(IHTMLControlRange *This,BSTR cmdID,VARIANT *pcmdValue);", "IHTMLControlRange_execCommand_Proxy": "HRESULT WINAPI IHTMLControlRange_execCommand_Proxy(IHTMLControlRange *This,BSTR cmdID,VARIANT_BOOL showUI,VARIANT value,VARIANT_BOOL *pfRet);", "IHTMLControlRange_execCommandShowHelp_Proxy": "HRESULT WINAPI IHTMLControlRange_execCommandShowHelp_Proxy(IHTMLControlRange *This,BSTR cmdID,VARIANT_BOOL *pfRet);", "IHTMLControlRange_commonParentElement_Proxy": "HRESULT WINAPI IHTMLControlRange_commonParentElement_Proxy(IHTMLControlRange *This,IHTMLElement **parent);", "IHTMLControlRange_get_length_Proxy": "HRESULT WINAPI IHTMLControlRange_get_length_Proxy(IHTMLControlRange *This,__LONG32 *p);", "IHTMLControlRange2_addElement_Proxy": "HRESULT WINAPI IHTMLControlRange2_addElement_Proxy(IHTMLControlRange2 *This,IHTMLElement *item);", "IHTMLImgElement_put_isMap_Proxy": "HRESULT WINAPI IHTMLImgElement_put_isMap_Proxy(IHTMLImgElement *This,VARIANT_BOOL v);", "IHTMLImgElement_get_isMap_Proxy": "HRESULT WINAPI IHTMLImgElement_get_isMap_Proxy(IHTMLImgElement *This,VARIANT_BOOL *p);", "IHTMLImgElement_put_useMap_Proxy": "HRESULT WINAPI IHTMLImgElement_put_useMap_Proxy(IHTMLImgElement *This,BSTR v);", "IHTMLImgElement_get_useMap_Proxy": "HRESULT WINAPI IHTMLImgElement_get_useMap_Proxy(IHTMLImgElement *This,BSTR *p);", "IHTMLImgElement_get_mimeType_Proxy": "HRESULT WINAPI IHTMLImgElement_get_mimeType_Proxy(IHTMLImgElement *This,BSTR *p);", "IHTMLImgElement_get_fileSize_Proxy": "HRESULT WINAPI IHTMLImgElement_get_fileSize_Proxy(IHTMLImgElement *This,BSTR *p);", "IHTMLImgElement_get_fileCreatedDate_Proxy": "HRESULT WINAPI IHTMLImgElement_get_fileCreatedDate_Proxy(IHTMLImgElement *This,BSTR *p);", "IHTMLImgElement_get_fileModifiedDate_Proxy": "HRESULT WINAPI IHTMLImgElement_get_fileModifiedDate_Proxy(IHTMLImgElement *This,BSTR *p);", "IHTMLImgElement_get_fileUpdatedDate_Proxy": "HRESULT WINAPI IHTMLImgElement_get_fileUpdatedDate_Proxy(IHTMLImgElement *This,BSTR *p);", "IHTMLImgElement_get_protocol_Proxy": "HRESULT WINAPI IHTMLImgElement_get_protocol_Proxy(IHTMLImgElement *This,BSTR *p);", "IHTMLImgElement_get_href_Proxy": "HRESULT WINAPI IHTMLImgElement_get_href_Proxy(IHTMLImgElement *This,BSTR *p);", "IHTMLImgElement_get_nameProp_Proxy": "HRESULT WINAPI IHTMLImgElement_get_nameProp_Proxy(IHTMLImgElement *This,BSTR *p);", "IHTMLImgElement_put_border_Proxy": "HRESULT WINAPI IHTMLImgElement_put_border_Proxy(IHTMLImgElement *This,VARIANT v);", "IHTMLImgElement_get_border_Proxy": "HRESULT WINAPI IHTMLImgElement_get_border_Proxy(IHTMLImgElement *This,VARIANT *p);", "IHTMLImgElement_put_vspace_Proxy": "HRESULT WINAPI IHTMLImgElement_put_vspace_Proxy(IHTMLImgElement *This,__LONG32 v);", "IHTMLImgElement_get_vspace_Proxy": "HRESULT WINAPI IHTMLImgElement_get_vspace_Proxy(IHTMLImgElement *This,__LONG32 *p);", "IHTMLImgElement_put_hspace_Proxy": "HRESULT WINAPI IHTMLImgElement_put_hspace_Proxy(IHTMLImgElement *This,__LONG32 v);", "IHTMLImgElement_get_hspace_Proxy": "HRESULT WINAPI IHTMLImgElement_get_hspace_Proxy(IHTMLImgElement *This,__LONG32 *p);", "IHTMLImgElement_put_alt_Proxy": "HRESULT WINAPI IHTMLImgElement_put_alt_Proxy(IHTMLImgElement *This,BSTR v);", "IHTMLImgElement_get_alt_Proxy": "HRESULT WINAPI IHTMLImgElement_get_alt_Proxy(IHTMLImgElement *This,BSTR *p);", "IHTMLImgElement_put_src_Proxy": "HRESULT WINAPI IHTMLImgElement_put_src_Proxy(IHTMLImgElement *This,BSTR v);", "IHTMLImgElement_get_src_Proxy": "HRESULT WINAPI IHTMLImgElement_get_src_Proxy(IHTMLImgElement *This,BSTR *p);", "IHTMLImgElement_put_lowsrc_Proxy": "HRESULT WINAPI IHTMLImgElement_put_lowsrc_Proxy(IHTMLImgElement *This,BSTR v);", "IHTMLImgElement_get_lowsrc_Proxy": "HRESULT WINAPI IHTMLImgElement_get_lowsrc_Proxy(IHTMLImgElement *This,BSTR *p);", "IHTMLImgElement_put_vrml_Proxy": "HRESULT WINAPI IHTMLImgElement_put_vrml_Proxy(IHTMLImgElement *This,BSTR v);", "IHTMLImgElement_get_vrml_Proxy": "HRESULT WINAPI IHTMLImgElement_get_vrml_Proxy(IHTMLImgElement *This,BSTR *p);", "IHTMLImgElement_put_dynsrc_Proxy": "HRESULT WINAPI IHTMLImgElement_put_dynsrc_Proxy(IHTMLImgElement *This,BSTR v);", "IHTMLImgElement_get_dynsrc_Proxy": "HRESULT WINAPI IHTMLImgElement_get_dynsrc_Proxy(IHTMLImgElement *This,BSTR *p);", "IHTMLImgElement_get_readyState_Proxy": "HRESULT WINAPI IHTMLImgElement_get_readyState_Proxy(IHTMLImgElement *This,BSTR *p);", "IHTMLImgElement_get_complete_Proxy": "HRESULT WINAPI IHTMLImgElement_get_complete_Proxy(IHTMLImgElement *This,VARIANT_BOOL *p);", "IHTMLImgElement_put_loop_Proxy": "HRESULT WINAPI IHTMLImgElement_put_loop_Proxy(IHTMLImgElement *This,VARIANT v);", "IHTMLImgElement_get_loop_Proxy": "HRESULT WINAPI IHTMLImgElement_get_loop_Proxy(IHTMLImgElement *This,VARIANT *p);", "IHTMLImgElement_put_align_Proxy": "HRESULT WINAPI IHTMLImgElement_put_align_Proxy(IHTMLImgElement *This,BSTR v);", "IHTMLImgElement_get_align_Proxy": "HRESULT WINAPI IHTMLImgElement_get_align_Proxy(IHTMLImgElement *This,BSTR *p);", "IHTMLImgElement_put_onload_Proxy": "HRESULT WINAPI IHTMLImgElement_put_onload_Proxy(IHTMLImgElement *This,VARIANT v);", "IHTMLImgElement_get_onload_Proxy": "HRESULT WINAPI IHTMLImgElement_get_onload_Proxy(IHTMLImgElement *This,VARIANT *p);", "IHTMLImgElement_put_onerror_Proxy": "HRESULT WINAPI IHTMLImgElement_put_onerror_Proxy(IHTMLImgElement *This,VARIANT v);", "IHTMLImgElement_get_onerror_Proxy": "HRESULT WINAPI IHTMLImgElement_get_onerror_Proxy(IHTMLImgElement *This,VARIANT *p);", "IHTMLImgElement_put_onabort_Proxy": "HRESULT WINAPI IHTMLImgElement_put_onabort_Proxy(IHTMLImgElement *This,VARIANT v);", "IHTMLImgElement_get_onabort_Proxy": "HRESULT WINAPI IHTMLImgElement_get_onabort_Proxy(IHTMLImgElement *This,VARIANT *p);", "IHTMLImgElement_put_name_Proxy": "HRESULT WINAPI IHTMLImgElement_put_name_Proxy(IHTMLImgElement *This,BSTR v);", "IHTMLImgElement_get_name_Proxy": "HRESULT WINAPI IHTMLImgElement_get_name_Proxy(IHTMLImgElement *This,BSTR *p);", "IHTMLImgElement_put_width_Proxy": "HRESULT WINAPI IHTMLImgElement_put_width_Proxy(IHTMLImgElement *This,__LONG32 v);", "IHTMLImgElement_get_width_Proxy": "HRESULT WINAPI IHTMLImgElement_get_width_Proxy(IHTMLImgElement *This,__LONG32 *p);", "IHTMLImgElement_put_height_Proxy": "HRESULT WINAPI IHTMLImgElement_put_height_Proxy(IHTMLImgElement *This,__LONG32 v);", "IHTMLImgElement_get_height_Proxy": "HRESULT WINAPI IHTMLImgElement_get_height_Proxy(IHTMLImgElement *This,__LONG32 *p);", "IHTMLImgElement_put_start_Proxy": "HRESULT WINAPI IHTMLImgElement_put_start_Proxy(IHTMLImgElement *This,BSTR v);", "IHTMLImgElement_get_start_Proxy": "HRESULT WINAPI IHTMLImgElement_get_start_Proxy(IHTMLImgElement *This,BSTR *p);", "IHTMLImgElement2_put_longDesc_Proxy": "HRESULT WINAPI IHTMLImgElement2_put_longDesc_Proxy(IHTMLImgElement2 *This,BSTR v);", "IHTMLImgElement2_get_longDesc_Proxy": "HRESULT WINAPI IHTMLImgElement2_get_longDesc_Proxy(IHTMLImgElement2 *This,BSTR *p);", "IHTMLImageElementFactory_create_Proxy": "HRESULT WINAPI IHTMLImageElementFactory_create_Proxy(IHTMLImageElementFactory *This,VARIANT width,VARIANT height,IHTMLImgElement **__MIDL_0011);", "IHTMLBodyElement_put_background_Proxy": "HRESULT WINAPI IHTMLBodyElement_put_background_Proxy(IHTMLBodyElement *This,BSTR v);", "IHTMLBodyElement_get_background_Proxy": "HRESULT WINAPI IHTMLBodyElement_get_background_Proxy(IHTMLBodyElement *This,BSTR *p);", "IHTMLBodyElement_put_bgProperties_Proxy": "HRESULT WINAPI IHTMLBodyElement_put_bgProperties_Proxy(IHTMLBodyElement *This,BSTR v);", "IHTMLBodyElement_get_bgProperties_Proxy": "HRESULT WINAPI IHTMLBodyElement_get_bgProperties_Proxy(IHTMLBodyElement *This,BSTR *p);", "IHTMLBodyElement_put_leftMargin_Proxy": "HRESULT WINAPI IHTMLBodyElement_put_leftMargin_Proxy(IHTMLBodyElement *This,VARIANT v);", "IHTMLBodyElement_get_leftMargin_Proxy": "HRESULT WINAPI IHTMLBodyElement_get_leftMargin_Proxy(IHTMLBodyElement *This,VARIANT *p);", "IHTMLBodyElement_put_topMargin_Proxy": "HRESULT WINAPI IHTMLBodyElement_put_topMargin_Proxy(IHTMLBodyElement *This,VARIANT v);", "IHTMLBodyElement_get_topMargin_Proxy": "HRESULT WINAPI IHTMLBodyElement_get_topMargin_Proxy(IHTMLBodyElement *This,VARIANT *p);", "IHTMLBodyElement_put_rightMargin_Proxy": "HRESULT WINAPI IHTMLBodyElement_put_rightMargin_Proxy(IHTMLBodyElement *This,VARIANT v);", "IHTMLBodyElement_get_rightMargin_Proxy": "HRESULT WINAPI IHTMLBodyElement_get_rightMargin_Proxy(IHTMLBodyElement *This,VARIANT *p);", "IHTMLBodyElement_put_bottomMargin_Proxy": "HRESULT WINAPI IHTMLBodyElement_put_bottomMargin_Proxy(IHTMLBodyElement *This,VARIANT v);", "IHTMLBodyElement_get_bottomMargin_Proxy": "HRESULT WINAPI IHTMLBodyElement_get_bottomMargin_Proxy(IHTMLBodyElement *This,VARIANT *p);", "IHTMLBodyElement_put_noWrap_Proxy": "HRESULT WINAPI IHTMLBodyElement_put_noWrap_Proxy(IHTMLBodyElement *This,VARIANT_BOOL v);", "IHTMLBodyElement_get_noWrap_Proxy": "HRESULT WINAPI IHTMLBodyElement_get_noWrap_Proxy(IHTMLBodyElement *This,VARIANT_BOOL *p);", "IHTMLBodyElement_put_bgColor_Proxy": "HRESULT WINAPI IHTMLBodyElement_put_bgColor_Proxy(IHTMLBodyElement *This,VARIANT v);", "IHTMLBodyElement_get_bgColor_Proxy": "HRESULT WINAPI IHTMLBodyElement_get_bgColor_Proxy(IHTMLBodyElement *This,VARIANT *p);", "IHTMLBodyElement_put_text_Proxy": "HRESULT WINAPI IHTMLBodyElement_put_text_Proxy(IHTMLBodyElement *This,VARIANT v);", "IHTMLBodyElement_get_text_Proxy": "HRESULT WINAPI IHTMLBodyElement_get_text_Proxy(IHTMLBodyElement *This,VARIANT *p);", "IHTMLBodyElement_put_link_Proxy": "HRESULT WINAPI IHTMLBodyElement_put_link_Proxy(IHTMLBodyElement *This,VARIANT v);", "IHTMLBodyElement_get_link_Proxy": "HRESULT WINAPI IHTMLBodyElement_get_link_Proxy(IHTMLBodyElement *This,VARIANT *p);", "IHTMLBodyElement_put_vLink_Proxy": "HRESULT WINAPI IHTMLBodyElement_put_vLink_Proxy(IHTMLBodyElement *This,VARIANT v);", "IHTMLBodyElement_get_vLink_Proxy": "HRESULT WINAPI IHTMLBodyElement_get_vLink_Proxy(IHTMLBodyElement *This,VARIANT *p);", "IHTMLBodyElement_put_aLink_Proxy": "HRESULT WINAPI IHTMLBodyElement_put_aLink_Proxy(IHTMLBodyElement *This,VARIANT v);", "IHTMLBodyElement_get_aLink_Proxy": "HRESULT WINAPI IHTMLBodyElement_get_aLink_Proxy(IHTMLBodyElement *This,VARIANT *p);", "IHTMLBodyElement_put_onload_Proxy": "HRESULT WINAPI IHTMLBodyElement_put_onload_Proxy(IHTMLBodyElement *This,VARIANT v);", "IHTMLBodyElement_get_onload_Proxy": "HRESULT WINAPI IHTMLBodyElement_get_onload_Proxy(IHTMLBodyElement *This,VARIANT *p);", "IHTMLBodyElement_put_onunload_Proxy": "HRESULT WINAPI IHTMLBodyElement_put_onunload_Proxy(IHTMLBodyElement *This,VARIANT v);", "IHTMLBodyElement_get_onunload_Proxy": "HRESULT WINAPI IHTMLBodyElement_get_onunload_Proxy(IHTMLBodyElement *This,VARIANT *p);", "IHTMLBodyElement_put_scroll_Proxy": "HRESULT WINAPI IHTMLBodyElement_put_scroll_Proxy(IHTMLBodyElement *This,BSTR v);", "IHTMLBodyElement_get_scroll_Proxy": "HRESULT WINAPI IHTMLBodyElement_get_scroll_Proxy(IHTMLBodyElement *This,BSTR *p);", "IHTMLBodyElement_put_onselect_Proxy": "HRESULT WINAPI IHTMLBodyElement_put_onselect_Proxy(IHTMLBodyElement *This,VARIANT v);", "IHTMLBodyElement_get_onselect_Proxy": "HRESULT WINAPI IHTMLBodyElement_get_onselect_Proxy(IHTMLBodyElement *This,VARIANT *p);", "IHTMLBodyElement_put_onbeforeunload_Proxy": "HRESULT WINAPI IHTMLBodyElement_put_onbeforeunload_Proxy(IHTMLBodyElement *This,VARIANT v);", "IHTMLBodyElement_get_onbeforeunload_Proxy": "HRESULT WINAPI IHTMLBodyElement_get_onbeforeunload_Proxy(IHTMLBodyElement *This,VARIANT *p);", "IHTMLBodyElement_createTextRange_Proxy": "HRESULT WINAPI IHTMLBodyElement_createTextRange_Proxy(IHTMLBodyElement *This,IHTMLTxtRange **range);", "IHTMLBodyElement2_put_onbeforeprint_Proxy": "HRESULT WINAPI IHTMLBodyElement2_put_onbeforeprint_Proxy(IHTMLBodyElement2 *This,VARIANT v);", "IHTMLBodyElement2_get_onbeforeprint_Proxy": "HRESULT WINAPI IHTMLBodyElement2_get_onbeforeprint_Proxy(IHTMLBodyElement2 *This,VARIANT *p);", "IHTMLBodyElement2_put_onafterprint_Proxy": "HRESULT WINAPI IHTMLBodyElement2_put_onafterprint_Proxy(IHTMLBodyElement2 *This,VARIANT v);", "IHTMLBodyElement2_get_onafterprint_Proxy": "HRESULT WINAPI IHTMLBodyElement2_get_onafterprint_Proxy(IHTMLBodyElement2 *This,VARIANT *p);", "IHTMLFontElement_put_color_Proxy": "HRESULT WINAPI IHTMLFontElement_put_color_Proxy(IHTMLFontElement *This,VARIANT v);", "IHTMLFontElement_get_color_Proxy": "HRESULT WINAPI IHTMLFontElement_get_color_Proxy(IHTMLFontElement *This,VARIANT *p);", "IHTMLFontElement_put_face_Proxy": "HRESULT WINAPI IHTMLFontElement_put_face_Proxy(IHTMLFontElement *This,BSTR v);", "IHTMLFontElement_get_face_Proxy": "HRESULT WINAPI IHTMLFontElement_get_face_Proxy(IHTMLFontElement *This,BSTR *p);", "IHTMLFontElement_put_size_Proxy": "HRESULT WINAPI IHTMLFontElement_put_size_Proxy(IHTMLFontElement *This,VARIANT v);", "IHTMLFontElement_get_size_Proxy": "HRESULT WINAPI IHTMLFontElement_get_size_Proxy(IHTMLFontElement *This,VARIANT *p);", "IHTMLAnchorElement_put_href_Proxy": "HRESULT WINAPI IHTMLAnchorElement_put_href_Proxy(IHTMLAnchorElement *This,BSTR v);", "IHTMLAnchorElement_get_href_Proxy": "HRESULT WINAPI IHTMLAnchorElement_get_href_Proxy(IHTMLAnchorElement *This,BSTR *p);", "IHTMLAnchorElement_put_target_Proxy": "HRESULT WINAPI IHTMLAnchorElement_put_target_Proxy(IHTMLAnchorElement *This,BSTR v);", "IHTMLAnchorElement_get_target_Proxy": "HRESULT WINAPI IHTMLAnchorElement_get_target_Proxy(IHTMLAnchorElement *This,BSTR *p);", "IHTMLAnchorElement_put_rel_Proxy": "HRESULT WINAPI IHTMLAnchorElement_put_rel_Proxy(IHTMLAnchorElement *This,BSTR v);", "IHTMLAnchorElement_get_rel_Proxy": "HRESULT WINAPI IHTMLAnchorElement_get_rel_Proxy(IHTMLAnchorElement *This,BSTR *p);", "IHTMLAnchorElement_put_rev_Proxy": "HRESULT WINAPI IHTMLAnchorElement_put_rev_Proxy(IHTMLAnchorElement *This,BSTR v);", "IHTMLAnchorElement_get_rev_Proxy": "HRESULT WINAPI IHTMLAnchorElement_get_rev_Proxy(IHTMLAnchorElement *This,BSTR *p);", "IHTMLAnchorElement_put_urn_Proxy": "HRESULT WINAPI IHTMLAnchorElement_put_urn_Proxy(IHTMLAnchorElement *This,BSTR v);", "IHTMLAnchorElement_get_urn_Proxy": "HRESULT WINAPI IHTMLAnchorElement_get_urn_Proxy(IHTMLAnchorElement *This,BSTR *p);", "IHTMLAnchorElement_put_Methods_Proxy": "HRESULT WINAPI IHTMLAnchorElement_put_Methods_Proxy(IHTMLAnchorElement *This,BSTR v);", "IHTMLAnchorElement_get_Methods_Proxy": "HRESULT WINAPI IHTMLAnchorElement_get_Methods_Proxy(IHTMLAnchorElement *This,BSTR *p);", "IHTMLAnchorElement_put_name_Proxy": "HRESULT WINAPI IHTMLAnchorElement_put_name_Proxy(IHTMLAnchorElement *This,BSTR v);", "IHTMLAnchorElement_get_name_Proxy": "HRESULT WINAPI IHTMLAnchorElement_get_name_Proxy(IHTMLAnchorElement *This,BSTR *p);", "IHTMLAnchorElement_put_host_Proxy": "HRESULT WINAPI IHTMLAnchorElement_put_host_Proxy(IHTMLAnchorElement *This,BSTR v);", "IHTMLAnchorElement_get_host_Proxy": "HRESULT WINAPI IHTMLAnchorElement_get_host_Proxy(IHTMLAnchorElement *This,BSTR *p);", "IHTMLAnchorElement_put_hostname_Proxy": "HRESULT WINAPI IHTMLAnchorElement_put_hostname_Proxy(IHTMLAnchorElement *This,BSTR v);", "IHTMLAnchorElement_get_hostname_Proxy": "HRESULT WINAPI IHTMLAnchorElement_get_hostname_Proxy(IHTMLAnchorElement *This,BSTR *p);", "IHTMLAnchorElement_put_pathname_Proxy": "HRESULT WINAPI IHTMLAnchorElement_put_pathname_Proxy(IHTMLAnchorElement *This,BSTR v);", "IHTMLAnchorElement_get_pathname_Proxy": "HRESULT WINAPI IHTMLAnchorElement_get_pathname_Proxy(IHTMLAnchorElement *This,BSTR *p);", "IHTMLAnchorElement_put_port_Proxy": "HRESULT WINAPI IHTMLAnchorElement_put_port_Proxy(IHTMLAnchorElement *This,BSTR v);", "IHTMLAnchorElement_get_port_Proxy": "HRESULT WINAPI IHTMLAnchorElement_get_port_Proxy(IHTMLAnchorElement *This,BSTR *p);", "IHTMLAnchorElement_put_protocol_Proxy": "HRESULT WINAPI IHTMLAnchorElement_put_protocol_Proxy(IHTMLAnchorElement *This,BSTR v);", "IHTMLAnchorElement_get_protocol_Proxy": "HRESULT WINAPI IHTMLAnchorElement_get_protocol_Proxy(IHTMLAnchorElement *This,BSTR *p);", "IHTMLAnchorElement_put_search_Proxy": "HRESULT WINAPI IHTMLAnchorElement_put_search_Proxy(IHTMLAnchorElement *This,BSTR v);", "IHTMLAnchorElement_get_search_Proxy": "HRESULT WINAPI IHTMLAnchorElement_get_search_Proxy(IHTMLAnchorElement *This,BSTR *p);", "IHTMLAnchorElement_put_hash_Proxy": "HRESULT WINAPI IHTMLAnchorElement_put_hash_Proxy(IHTMLAnchorElement *This,BSTR v);", "IHTMLAnchorElement_get_hash_Proxy": "HRESULT WINAPI IHTMLAnchorElement_get_hash_Proxy(IHTMLAnchorElement *This,BSTR *p);", "IHTMLAnchorElement_put_onblur_Proxy": "HRESULT WINAPI IHTMLAnchorElement_put_onblur_Proxy(IHTMLAnchorElement *This,VARIANT v);", "IHTMLAnchorElement_get_onblur_Proxy": "HRESULT WINAPI IHTMLAnchorElement_get_onblur_Proxy(IHTMLAnchorElement *This,VARIANT *p);", "IHTMLAnchorElement_put_onfocus_Proxy": "HRESULT WINAPI IHTMLAnchorElement_put_onfocus_Proxy(IHTMLAnchorElement *This,VARIANT v);", "IHTMLAnchorElement_get_onfocus_Proxy": "HRESULT WINAPI IHTMLAnchorElement_get_onfocus_Proxy(IHTMLAnchorElement *This,VARIANT *p);", "IHTMLAnchorElement_put_accessKey_Proxy": "HRESULT WINAPI IHTMLAnchorElement_put_accessKey_Proxy(IHTMLAnchorElement *This,BSTR v);", "IHTMLAnchorElement_get_accessKey_Proxy": "HRESULT WINAPI IHTMLAnchorElement_get_accessKey_Proxy(IHTMLAnchorElement *This,BSTR *p);", "IHTMLAnchorElement_get_protocolLong_Proxy": "HRESULT WINAPI IHTMLAnchorElement_get_protocolLong_Proxy(IHTMLAnchorElement *This,BSTR *p);", "IHTMLAnchorElement_get_mimeType_Proxy": "HRESULT WINAPI IHTMLAnchorElement_get_mimeType_Proxy(IHTMLAnchorElement *This,BSTR *p);", "IHTMLAnchorElement_get_nameProp_Proxy": "HRESULT WINAPI IHTMLAnchorElement_get_nameProp_Proxy(IHTMLAnchorElement *This,BSTR *p);", "IHTMLAnchorElement_put_tabIndex_Proxy": "HRESULT WINAPI IHTMLAnchorElement_put_tabIndex_Proxy(IHTMLAnchorElement *This,short v);", "IHTMLAnchorElement_get_tabIndex_Proxy": "HRESULT WINAPI IHTMLAnchorElement_get_tabIndex_Proxy(IHTMLAnchorElement *This,short *p);", "IHTMLAnchorElement_focus_Proxy": "HRESULT WINAPI IHTMLAnchorElement_focus_Proxy(IHTMLAnchorElement *This);", "IHTMLAnchorElement_blur_Proxy": "HRESULT WINAPI IHTMLAnchorElement_blur_Proxy(IHTMLAnchorElement *This);", "IHTMLAnchorElement2_put_charset_Proxy": "HRESULT WINAPI IHTMLAnchorElement2_put_charset_Proxy(IHTMLAnchorElement2 *This,BSTR v);", "IHTMLAnchorElement2_get_charset_Proxy": "HRESULT WINAPI IHTMLAnchorElement2_get_charset_Proxy(IHTMLAnchorElement2 *This,BSTR *p);", "IHTMLAnchorElement2_put_coords_Proxy": "HRESULT WINAPI IHTMLAnchorElement2_put_coords_Proxy(IHTMLAnchorElement2 *This,BSTR v);", "IHTMLAnchorElement2_get_coords_Proxy": "HRESULT WINAPI IHTMLAnchorElement2_get_coords_Proxy(IHTMLAnchorElement2 *This,BSTR *p);", "IHTMLAnchorElement2_put_hreflang_Proxy": "HRESULT WINAPI IHTMLAnchorElement2_put_hreflang_Proxy(IHTMLAnchorElement2 *This,BSTR v);", "IHTMLAnchorElement2_get_hreflang_Proxy": "HRESULT WINAPI IHTMLAnchorElement2_get_hreflang_Proxy(IHTMLAnchorElement2 *This,BSTR *p);", "IHTMLAnchorElement2_put_shape_Proxy": "HRESULT WINAPI IHTMLAnchorElement2_put_shape_Proxy(IHTMLAnchorElement2 *This,BSTR v);", "IHTMLAnchorElement2_get_shape_Proxy": "HRESULT WINAPI IHTMLAnchorElement2_get_shape_Proxy(IHTMLAnchorElement2 *This,BSTR *p);", "IHTMLAnchorElement2_put_type_Proxy": "HRESULT WINAPI IHTMLAnchorElement2_put_type_Proxy(IHTMLAnchorElement2 *This,BSTR v);", "IHTMLAnchorElement2_get_type_Proxy": "HRESULT WINAPI IHTMLAnchorElement2_get_type_Proxy(IHTMLAnchorElement2 *This,BSTR *p);", "IHTMLLabelElement_put_htmlFor_Proxy": "HRESULT WINAPI IHTMLLabelElement_put_htmlFor_Proxy(IHTMLLabelElement *This,BSTR v);", "IHTMLLabelElement_get_htmlFor_Proxy": "HRESULT WINAPI IHTMLLabelElement_get_htmlFor_Proxy(IHTMLLabelElement *This,BSTR *p);", "IHTMLLabelElement_put_accessKey_Proxy": "HRESULT WINAPI IHTMLLabelElement_put_accessKey_Proxy(IHTMLLabelElement *This,BSTR v);", "IHTMLLabelElement_get_accessKey_Proxy": "HRESULT WINAPI IHTMLLabelElement_get_accessKey_Proxy(IHTMLLabelElement *This,BSTR *p);", "IHTMLLabelElement2_get_form_Proxy": "HRESULT WINAPI IHTMLLabelElement2_get_form_Proxy(IHTMLLabelElement2 *This,IHTMLFormElement **p);", "IHTMLListElement2_put_compact_Proxy": "HRESULT WINAPI IHTMLListElement2_put_compact_Proxy(IHTMLListElement2 *This,VARIANT_BOOL v);", "IHTMLListElement2_get_compact_Proxy": "HRESULT WINAPI IHTMLListElement2_get_compact_Proxy(IHTMLListElement2 *This,VARIANT_BOOL *p);", "IHTMLUListElement_put_compact_Proxy": "HRESULT WINAPI IHTMLUListElement_put_compact_Proxy(IHTMLUListElement *This,VARIANT_BOOL v);", "IHTMLUListElement_get_compact_Proxy": "HRESULT WINAPI IHTMLUListElement_get_compact_Proxy(IHTMLUListElement *This,VARIANT_BOOL *p);", "IHTMLUListElement_put_type_Proxy": "HRESULT WINAPI IHTMLUListElement_put_type_Proxy(IHTMLUListElement *This,BSTR v);", "IHTMLUListElement_get_type_Proxy": "HRESULT WINAPI IHTMLUListElement_get_type_Proxy(IHTMLUListElement *This,BSTR *p);", "IHTMLOListElement_put_compact_Proxy": "HRESULT WINAPI IHTMLOListElement_put_compact_Proxy(IHTMLOListElement *This,VARIANT_BOOL v);", "IHTMLOListElement_get_compact_Proxy": "HRESULT WINAPI IHTMLOListElement_get_compact_Proxy(IHTMLOListElement *This,VARIANT_BOOL *p);", "IHTMLOListElement_put_start_Proxy": "HRESULT WINAPI IHTMLOListElement_put_start_Proxy(IHTMLOListElement *This,__LONG32 v);", "IHTMLOListElement_get_start_Proxy": "HRESULT WINAPI IHTMLOListElement_get_start_Proxy(IHTMLOListElement *This,__LONG32 *p);", "IHTMLOListElement_put_type_Proxy": "HRESULT WINAPI IHTMLOListElement_put_type_Proxy(IHTMLOListElement *This,BSTR v);", "IHTMLOListElement_get_type_Proxy": "HRESULT WINAPI IHTMLOListElement_get_type_Proxy(IHTMLOListElement *This,BSTR *p);", "IHTMLLIElement_put_type_Proxy": "HRESULT WINAPI IHTMLLIElement_put_type_Proxy(IHTMLLIElement *This,BSTR v);", "IHTMLLIElement_get_type_Proxy": "HRESULT WINAPI IHTMLLIElement_get_type_Proxy(IHTMLLIElement *This,BSTR *p);", "IHTMLLIElement_put_value_Proxy": "HRESULT WINAPI IHTMLLIElement_put_value_Proxy(IHTMLLIElement *This,__LONG32 v);", "IHTMLLIElement_get_value_Proxy": "HRESULT WINAPI IHTMLLIElement_get_value_Proxy(IHTMLLIElement *This,__LONG32 *p);", "IHTMLBlockElement_put_clear_Proxy": "HRESULT WINAPI IHTMLBlockElement_put_clear_Proxy(IHTMLBlockElement *This,BSTR v);", "IHTMLBlockElement_get_clear_Proxy": "HRESULT WINAPI IHTMLBlockElement_get_clear_Proxy(IHTMLBlockElement *This,BSTR *p);", "IHTMLBlockElement2_put_cite_Proxy": "HRESULT WINAPI IHTMLBlockElement2_put_cite_Proxy(IHTMLBlockElement2 *This,BSTR v);", "IHTMLBlockElement2_get_cite_Proxy": "HRESULT WINAPI IHTMLBlockElement2_get_cite_Proxy(IHTMLBlockElement2 *This,BSTR *p);", "IHTMLBlockElement2_put_width_Proxy": "HRESULT WINAPI IHTMLBlockElement2_put_width_Proxy(IHTMLBlockElement2 *This,BSTR v);", "IHTMLBlockElement2_get_width_Proxy": "HRESULT WINAPI IHTMLBlockElement2_get_width_Proxy(IHTMLBlockElement2 *This,BSTR *p);", "IHTMLDivElement_put_align_Proxy": "HRESULT WINAPI IHTMLDivElement_put_align_Proxy(IHTMLDivElement *This,BSTR v);", "IHTMLDivElement_get_align_Proxy": "HRESULT WINAPI IHTMLDivElement_get_align_Proxy(IHTMLDivElement *This,BSTR *p);", "IHTMLDivElement_put_noWrap_Proxy": "HRESULT WINAPI IHTMLDivElement_put_noWrap_Proxy(IHTMLDivElement *This,VARIANT_BOOL v);", "IHTMLDivElement_get_noWrap_Proxy": "HRESULT WINAPI IHTMLDivElement_get_noWrap_Proxy(IHTMLDivElement *This,VARIANT_BOOL *p);", "IHTMLDDElement_put_noWrap_Proxy": "HRESULT WINAPI IHTMLDDElement_put_noWrap_Proxy(IHTMLDDElement *This,VARIANT_BOOL v);", "IHTMLDDElement_get_noWrap_Proxy": "HRESULT WINAPI IHTMLDDElement_get_noWrap_Proxy(IHTMLDDElement *This,VARIANT_BOOL *p);", "IHTMLDTElement_put_noWrap_Proxy": "HRESULT WINAPI IHTMLDTElement_put_noWrap_Proxy(IHTMLDTElement *This,VARIANT_BOOL v);", "IHTMLDTElement_get_noWrap_Proxy": "HRESULT WINAPI IHTMLDTElement_get_noWrap_Proxy(IHTMLDTElement *This,VARIANT_BOOL *p);", "IHTMLBRElement_put_clear_Proxy": "HRESULT WINAPI IHTMLBRElement_put_clear_Proxy(IHTMLBRElement *This,BSTR v);", "IHTMLBRElement_get_clear_Proxy": "HRESULT WINAPI IHTMLBRElement_get_clear_Proxy(IHTMLBRElement *This,BSTR *p);", "IHTMLDListElement_put_compact_Proxy": "HRESULT WINAPI IHTMLDListElement_put_compact_Proxy(IHTMLDListElement *This,VARIANT_BOOL v);", "IHTMLDListElement_get_compact_Proxy": "HRESULT WINAPI IHTMLDListElement_get_compact_Proxy(IHTMLDListElement *This,VARIANT_BOOL *p);", "IHTMLHRElement_put_align_Proxy": "HRESULT WINAPI IHTMLHRElement_put_align_Proxy(IHTMLHRElement *This,BSTR v);", "IHTMLHRElement_get_align_Proxy": "HRESULT WINAPI IHTMLHRElement_get_align_Proxy(IHTMLHRElement *This,BSTR *p);", "IHTMLHRElement_put_color_Proxy": "HRESULT WINAPI IHTMLHRElement_put_color_Proxy(IHTMLHRElement *This,VARIANT v);", "IHTMLHRElement_get_color_Proxy": "HRESULT WINAPI IHTMLHRElement_get_color_Proxy(IHTMLHRElement *This,VARIANT *p);", "IHTMLHRElement_put_noShade_Proxy": "HRESULT WINAPI IHTMLHRElement_put_noShade_Proxy(IHTMLHRElement *This,VARIANT_BOOL v);", "IHTMLHRElement_get_noShade_Proxy": "HRESULT WINAPI IHTMLHRElement_get_noShade_Proxy(IHTMLHRElement *This,VARIANT_BOOL *p);", "IHTMLHRElement_put_width_Proxy": "HRESULT WINAPI IHTMLHRElement_put_width_Proxy(IHTMLHRElement *This,VARIANT v);", "IHTMLHRElement_get_width_Proxy": "HRESULT WINAPI IHTMLHRElement_get_width_Proxy(IHTMLHRElement *This,VARIANT *p);", "IHTMLHRElement_put_size_Proxy": "HRESULT WINAPI IHTMLHRElement_put_size_Proxy(IHTMLHRElement *This,VARIANT v);", "IHTMLHRElement_get_size_Proxy": "HRESULT WINAPI IHTMLHRElement_get_size_Proxy(IHTMLHRElement *This,VARIANT *p);", "IHTMLParaElement_put_align_Proxy": "HRESULT WINAPI IHTMLParaElement_put_align_Proxy(IHTMLParaElement *This,BSTR v);", "IHTMLParaElement_get_align_Proxy": "HRESULT WINAPI IHTMLParaElement_get_align_Proxy(IHTMLParaElement *This,BSTR *p);", "IHTMLElementCollection2_urns_Proxy": "HRESULT WINAPI IHTMLElementCollection2_urns_Proxy(IHTMLElementCollection2 *This,VARIANT urn,IDispatch **pdisp);", "IHTMLElementCollection3_namedItem_Proxy": "HRESULT WINAPI IHTMLElementCollection3_namedItem_Proxy(IHTMLElementCollection3 *This,BSTR name,IDispatch **pdisp);", "IHTMLHeaderElement_put_align_Proxy": "HRESULT WINAPI IHTMLHeaderElement_put_align_Proxy(IHTMLHeaderElement *This,BSTR v);", "IHTMLHeaderElement_get_align_Proxy": "HRESULT WINAPI IHTMLHeaderElement_get_align_Proxy(IHTMLHeaderElement *This,BSTR *p);", "IHTMLSelectElement_put_size_Proxy": "HRESULT WINAPI IHTMLSelectElement_put_size_Proxy(IHTMLSelectElement *This,__LONG32 v);", "IHTMLSelectElement_get_size_Proxy": "HRESULT WINAPI IHTMLSelectElement_get_size_Proxy(IHTMLSelectElement *This,__LONG32 *p);", "IHTMLSelectElement_put_multiple_Proxy": "HRESULT WINAPI IHTMLSelectElement_put_multiple_Proxy(IHTMLSelectElement *This,VARIANT_BOOL v);", "IHTMLSelectElement_get_multiple_Proxy": "HRESULT WINAPI IHTMLSelectElement_get_multiple_Proxy(IHTMLSelectElement *This,VARIANT_BOOL *p);", "IHTMLSelectElement_put_name_Proxy": "HRESULT WINAPI IHTMLSelectElement_put_name_Proxy(IHTMLSelectElement *This,BSTR v);", "IHTMLSelectElement_get_name_Proxy": "HRESULT WINAPI IHTMLSelectElement_get_name_Proxy(IHTMLSelectElement *This,BSTR *p);", "IHTMLSelectElement_get_options_Proxy": "HRESULT WINAPI IHTMLSelectElement_get_options_Proxy(IHTMLSelectElement *This,IDispatch **p);", "IHTMLSelectElement_put_onchange_Proxy": "HRESULT WINAPI IHTMLSelectElement_put_onchange_Proxy(IHTMLSelectElement *This,VARIANT v);", "IHTMLSelectElement_get_onchange_Proxy": "HRESULT WINAPI IHTMLSelectElement_get_onchange_Proxy(IHTMLSelectElement *This,VARIANT *p);", "IHTMLSelectElement_put_selectedIndex_Proxy": "HRESULT WINAPI IHTMLSelectElement_put_selectedIndex_Proxy(IHTMLSelectElement *This,__LONG32 v);", "IHTMLSelectElement_get_selectedIndex_Proxy": "HRESULT WINAPI IHTMLSelectElement_get_selectedIndex_Proxy(IHTMLSelectElement *This,__LONG32 *p);", "IHTMLSelectElement_get_type_Proxy": "HRESULT WINAPI IHTMLSelectElement_get_type_Proxy(IHTMLSelectElement *This,BSTR *p);", "IHTMLSelectElement_put_value_Proxy": "HRESULT WINAPI IHTMLSelectElement_put_value_Proxy(IHTMLSelectElement *This,BSTR v);", "IHTMLSelectElement_get_value_Proxy": "HRESULT WINAPI IHTMLSelectElement_get_value_Proxy(IHTMLSelectElement *This,BSTR *p);", "IHTMLSelectElement_put_disabled_Proxy": "HRESULT WINAPI IHTMLSelectElement_put_disabled_Proxy(IHTMLSelectElement *This,VARIANT_BOOL v);", "IHTMLSelectElement_get_disabled_Proxy": "HRESULT WINAPI IHTMLSelectElement_get_disabled_Proxy(IHTMLSelectElement *This,VARIANT_BOOL *p);", "IHTMLSelectElement_get_form_Proxy": "HRESULT WINAPI IHTMLSelectElement_get_form_Proxy(IHTMLSelectElement *This,IHTMLFormElement **p);", "IHTMLSelectElement_add_Proxy": "HRESULT WINAPI IHTMLSelectElement_add_Proxy(IHTMLSelectElement *This,IHTMLElement *element,VARIANT before);", "IHTMLSelectElement_remove_Proxy": "HRESULT WINAPI IHTMLSelectElement_remove_Proxy(IHTMLSelectElement *This,__LONG32 index);", "IHTMLSelectElement_put_length_Proxy": "HRESULT WINAPI IHTMLSelectElement_put_length_Proxy(IHTMLSelectElement *This,__LONG32 v);", "IHTMLSelectElement_get_length_Proxy": "HRESULT WINAPI IHTMLSelectElement_get_length_Proxy(IHTMLSelectElement *This,__LONG32 *p);", "IHTMLSelectElement_get__newEnum_Proxy": "HRESULT WINAPI IHTMLSelectElement_get__newEnum_Proxy(IHTMLSelectElement *This,IUnknown **p);", "IHTMLSelectElement_item_Proxy": "HRESULT WINAPI IHTMLSelectElement_item_Proxy(IHTMLSelectElement *This,VARIANT name,VARIANT index,IDispatch **pdisp);", "IHTMLSelectElement_tags_Proxy": "HRESULT WINAPI IHTMLSelectElement_tags_Proxy(IHTMLSelectElement *This,VARIANT tagName,IDispatch **pdisp);", "IHTMLSelectElement2_urns_Proxy": "HRESULT WINAPI IHTMLSelectElement2_urns_Proxy(IHTMLSelectElement2 *This,VARIANT urn,IDispatch **pdisp);", "IHTMLSelectElement4_namedItem_Proxy": "HRESULT WINAPI IHTMLSelectElement4_namedItem_Proxy(IHTMLSelectElement4 *This,BSTR name,IDispatch **pdisp);", "IHTMLSelectionObject_createRange_Proxy": "HRESULT WINAPI IHTMLSelectionObject_createRange_Proxy(IHTMLSelectionObject *This,IDispatch **range);", "IHTMLSelectionObject_empty_Proxy": "HRESULT WINAPI IHTMLSelectionObject_empty_Proxy(IHTMLSelectionObject *This);", "IHTMLSelectionObject_clear_Proxy": "HRESULT WINAPI IHTMLSelectionObject_clear_Proxy(IHTMLSelectionObject *This);", "IHTMLSelectionObject_get_type_Proxy": "HRESULT WINAPI IHTMLSelectionObject_get_type_Proxy(IHTMLSelectionObject *This,BSTR *p);", "IHTMLSelectionObject2_createRangeCollection_Proxy": "HRESULT WINAPI IHTMLSelectionObject2_createRangeCollection_Proxy(IHTMLSelectionObject2 *This,IDispatch **rangeCollection);", "IHTMLSelectionObject2_get_typeDetail_Proxy": "HRESULT WINAPI IHTMLSelectionObject2_get_typeDetail_Proxy(IHTMLSelectionObject2 *This,BSTR *p);", "IHTMLOptionElement_put_selected_Proxy": "HRESULT WINAPI IHTMLOptionElement_put_selected_Proxy(IHTMLOptionElement *This,VARIANT_BOOL v);", "IHTMLOptionElement_get_selected_Proxy": "HRESULT WINAPI IHTMLOptionElement_get_selected_Proxy(IHTMLOptionElement *This,VARIANT_BOOL *p);", "IHTMLOptionElement_put_value_Proxy": "HRESULT WINAPI IHTMLOptionElement_put_value_Proxy(IHTMLOptionElement *This,BSTR v);", "IHTMLOptionElement_get_value_Proxy": "HRESULT WINAPI IHTMLOptionElement_get_value_Proxy(IHTMLOptionElement *This,BSTR *p);", "IHTMLOptionElement_put_defaultSelected_Proxy": "HRESULT WINAPI IHTMLOptionElement_put_defaultSelected_Proxy(IHTMLOptionElement *This,VARIANT_BOOL v);", "IHTMLOptionElement_get_defaultSelected_Proxy": "HRESULT WINAPI IHTMLOptionElement_get_defaultSelected_Proxy(IHTMLOptionElement *This,VARIANT_BOOL *p);", "IHTMLOptionElement_put_index_Proxy": "HRESULT WINAPI IHTMLOptionElement_put_index_Proxy(IHTMLOptionElement *This,LONG v);", "IHTMLOptionElement_get_index_Proxy": "HRESULT WINAPI IHTMLOptionElement_get_index_Proxy(IHTMLOptionElement *This,LONG *p);", "IHTMLOptionElement_put_text_Proxy": "HRESULT WINAPI IHTMLOptionElement_put_text_Proxy(IHTMLOptionElement *This,BSTR v);", "IHTMLOptionElement_get_text_Proxy": "HRESULT WINAPI IHTMLOptionElement_get_text_Proxy(IHTMLOptionElement *This,BSTR *p);", "IHTMLOptionElement_get_form_Proxy": "HRESULT WINAPI IHTMLOptionElement_get_form_Proxy(IHTMLOptionElement *This,IHTMLFormElement **p);", "IHTMLOptionElement3_put_label_Proxy": "HRESULT WINAPI IHTMLOptionElement3_put_label_Proxy(IHTMLOptionElement3 *This,BSTR v);", "IHTMLOptionElement3_get_label_Proxy": "HRESULT WINAPI IHTMLOptionElement3_get_label_Proxy(IHTMLOptionElement3 *This,BSTR *p);", "IHTMLOptionElementFactory_create_Proxy": "HRESULT WINAPI IHTMLOptionElementFactory_create_Proxy(IHTMLOptionElementFactory *This,VARIANT text,VARIANT value,VARIANT defaultselected,VARIANT selected,IHTMLOptionElement **__MIDL_0012);", "IHTMLInputElement_put_type_Proxy": "HRESULT WINAPI IHTMLInputElement_put_type_Proxy(IHTMLInputElement *This,BSTR v);", "IHTMLInputElement_get_type_Proxy": "HRESULT WINAPI IHTMLInputElement_get_type_Proxy(IHTMLInputElement *This,BSTR *p);", "IHTMLInputElement_put_value_Proxy": "HRESULT WINAPI IHTMLInputElement_put_value_Proxy(IHTMLInputElement *This,BSTR v);", "IHTMLInputElement_get_value_Proxy": "HRESULT WINAPI IHTMLInputElement_get_value_Proxy(IHTMLInputElement *This,BSTR *p);", "IHTMLInputElement_put_name_Proxy": "HRESULT WINAPI IHTMLInputElement_put_name_Proxy(IHTMLInputElement *This,BSTR v);", "IHTMLInputElement_get_name_Proxy": "HRESULT WINAPI IHTMLInputElement_get_name_Proxy(IHTMLInputElement *This,BSTR *p);", "IHTMLInputElement_put_status_Proxy": "HRESULT WINAPI IHTMLInputElement_put_status_Proxy(IHTMLInputElement *This,VARIANT_BOOL v);", "IHTMLInputElement_get_status_Proxy": "HRESULT WINAPI IHTMLInputElement_get_status_Proxy(IHTMLInputElement *This,VARIANT_BOOL *p);", "IHTMLInputElement_put_disabled_Proxy": "HRESULT WINAPI IHTMLInputElement_put_disabled_Proxy(IHTMLInputElement *This,VARIANT_BOOL v);", "IHTMLInputElement_get_disabled_Proxy": "HRESULT WINAPI IHTMLInputElement_get_disabled_Proxy(IHTMLInputElement *This,VARIANT_BOOL *p);", "IHTMLInputElement_get_form_Proxy": "HRESULT WINAPI IHTMLInputElement_get_form_Proxy(IHTMLInputElement *This,IHTMLFormElement **p);", "IHTMLInputElement_put_size_Proxy": "HRESULT WINAPI IHTMLInputElement_put_size_Proxy(IHTMLInputElement *This,__LONG32 v);", "IHTMLInputElement_get_size_Proxy": "HRESULT WINAPI IHTMLInputElement_get_size_Proxy(IHTMLInputElement *This,__LONG32 *p);", "IHTMLInputElement_put_maxLength_Proxy": "HRESULT WINAPI IHTMLInputElement_put_maxLength_Proxy(IHTMLInputElement *This,__LONG32 v);", "IHTMLInputElement_get_maxLength_Proxy": "HRESULT WINAPI IHTMLInputElement_get_maxLength_Proxy(IHTMLInputElement *This,__LONG32 *p);", "IHTMLInputElement_select_Proxy": "HRESULT WINAPI IHTMLInputElement_select_Proxy(IHTMLInputElement *This);", "IHTMLInputElement_put_onchange_Proxy": "HRESULT WINAPI IHTMLInputElement_put_onchange_Proxy(IHTMLInputElement *This,VARIANT v);", "IHTMLInputElement_get_onchange_Proxy": "HRESULT WINAPI IHTMLInputElement_get_onchange_Proxy(IHTMLInputElement *This,VARIANT *p);", "IHTMLInputElement_put_onselect_Proxy": "HRESULT WINAPI IHTMLInputElement_put_onselect_Proxy(IHTMLInputElement *This,VARIANT v);", "IHTMLInputElement_get_onselect_Proxy": "HRESULT WINAPI IHTMLInputElement_get_onselect_Proxy(IHTMLInputElement *This,VARIANT *p);", "IHTMLInputElement_put_defaultValue_Proxy": "HRESULT WINAPI IHTMLInputElement_put_defaultValue_Proxy(IHTMLInputElement *This,BSTR v);", "IHTMLInputElement_get_defaultValue_Proxy": "HRESULT WINAPI IHTMLInputElement_get_defaultValue_Proxy(IHTMLInputElement *This,BSTR *p);", "IHTMLInputElement_put_readOnly_Proxy": "HRESULT WINAPI IHTMLInputElement_put_readOnly_Proxy(IHTMLInputElement *This,VARIANT_BOOL v);", "IHTMLInputElement_get_readOnly_Proxy": "HRESULT WINAPI IHTMLInputElement_get_readOnly_Proxy(IHTMLInputElement *This,VARIANT_BOOL *p);", "IHTMLInputElement_createTextRange_Proxy": "HRESULT WINAPI IHTMLInputElement_createTextRange_Proxy(IHTMLInputElement *This,IHTMLTxtRange **range);", "IHTMLInputElement_put_indeterminate_Proxy": "HRESULT WINAPI IHTMLInputElement_put_indeterminate_Proxy(IHTMLInputElement *This,VARIANT_BOOL v);", "IHTMLInputElement_get_indeterminate_Proxy": "HRESULT WINAPI IHTMLInputElement_get_indeterminate_Proxy(IHTMLInputElement *This,VARIANT_BOOL *p);", "IHTMLInputElement_put_defaultChecked_Proxy": "HRESULT WINAPI IHTMLInputElement_put_defaultChecked_Proxy(IHTMLInputElement *This,VARIANT_BOOL v);", "IHTMLInputElement_get_defaultChecked_Proxy": "HRESULT WINAPI IHTMLInputElement_get_defaultChecked_Proxy(IHTMLInputElement *This,VARIANT_BOOL *p);", "IHTMLInputElement_put_checked_Proxy": "HRESULT WINAPI IHTMLInputElement_put_checked_Proxy(IHTMLInputElement *This,VARIANT_BOOL v);", "IHTMLInputElement_get_checked_Proxy": "HRESULT WINAPI IHTMLInputElement_get_checked_Proxy(IHTMLInputElement *This,VARIANT_BOOL *p);", "IHTMLInputElement_put_border_Proxy": "HRESULT WINAPI IHTMLInputElement_put_border_Proxy(IHTMLInputElement *This,VARIANT v);", "IHTMLInputElement_get_border_Proxy": "HRESULT WINAPI IHTMLInputElement_get_border_Proxy(IHTMLInputElement *This,VARIANT *p);", "IHTMLInputElement_put_vspace_Proxy": "HRESULT WINAPI IHTMLInputElement_put_vspace_Proxy(IHTMLInputElement *This,__LONG32 v);", "IHTMLInputElement_get_vspace_Proxy": "HRESULT WINAPI IHTMLInputElement_get_vspace_Proxy(IHTMLInputElement *This,__LONG32 *p);", "IHTMLInputElement_put_hspace_Proxy": "HRESULT WINAPI IHTMLInputElement_put_hspace_Proxy(IHTMLInputElement *This,__LONG32 v);", "IHTMLInputElement_get_hspace_Proxy": "HRESULT WINAPI IHTMLInputElement_get_hspace_Proxy(IHTMLInputElement *This,__LONG32 *p);", "IHTMLInputElement_put_alt_Proxy": "HRESULT WINAPI IHTMLInputElement_put_alt_Proxy(IHTMLInputElement *This,BSTR v);", "IHTMLInputElement_get_alt_Proxy": "HRESULT WINAPI IHTMLInputElement_get_alt_Proxy(IHTMLInputElement *This,BSTR *p);", "IHTMLInputElement_put_src_Proxy": "HRESULT WINAPI IHTMLInputElement_put_src_Proxy(IHTMLInputElement *This,BSTR v);", "IHTMLInputElement_get_src_Proxy": "HRESULT WINAPI IHTMLInputElement_get_src_Proxy(IHTMLInputElement *This,BSTR *p);", "IHTMLInputElement_put_lowsrc_Proxy": "HRESULT WINAPI IHTMLInputElement_put_lowsrc_Proxy(IHTMLInputElement *This,BSTR v);", "IHTMLInputElement_get_lowsrc_Proxy": "HRESULT WINAPI IHTMLInputElement_get_lowsrc_Proxy(IHTMLInputElement *This,BSTR *p);", "IHTMLInputElement_put_vrml_Proxy": "HRESULT WINAPI IHTMLInputElement_put_vrml_Proxy(IHTMLInputElement *This,BSTR v);", "IHTMLInputElement_get_vrml_Proxy": "HRESULT WINAPI IHTMLInputElement_get_vrml_Proxy(IHTMLInputElement *This,BSTR *p);", "IHTMLInputElement_put_dynsrc_Proxy": "HRESULT WINAPI IHTMLInputElement_put_dynsrc_Proxy(IHTMLInputElement *This,BSTR v);", "IHTMLInputElement_get_dynsrc_Proxy": "HRESULT WINAPI IHTMLInputElement_get_dynsrc_Proxy(IHTMLInputElement *This,BSTR *p);", "IHTMLInputElement_get_readyState_Proxy": "HRESULT WINAPI IHTMLInputElement_get_readyState_Proxy(IHTMLInputElement *This,BSTR *p);", "IHTMLInputElement_get_complete_Proxy": "HRESULT WINAPI IHTMLInputElement_get_complete_Proxy(IHTMLInputElement *This,VARIANT_BOOL *p);", "IHTMLInputElement_put_loop_Proxy": "HRESULT WINAPI IHTMLInputElement_put_loop_Proxy(IHTMLInputElement *This,VARIANT v);", "IHTMLInputElement_get_loop_Proxy": "HRESULT WINAPI IHTMLInputElement_get_loop_Proxy(IHTMLInputElement *This,VARIANT *p);", "IHTMLInputElement_put_align_Proxy": "HRESULT WINAPI IHTMLInputElement_put_align_Proxy(IHTMLInputElement *This,BSTR v);", "IHTMLInputElement_get_align_Proxy": "HRESULT WINAPI IHTMLInputElement_get_align_Proxy(IHTMLInputElement *This,BSTR *p);", "IHTMLInputElement_put_onload_Proxy": "HRESULT WINAPI IHTMLInputElement_put_onload_Proxy(IHTMLInputElement *This,VARIANT v);", "IHTMLInputElement_get_onload_Proxy": "HRESULT WINAPI IHTMLInputElement_get_onload_Proxy(IHTMLInputElement *This,VARIANT *p);", "IHTMLInputElement_put_onerror_Proxy": "HRESULT WINAPI IHTMLInputElement_put_onerror_Proxy(IHTMLInputElement *This,VARIANT v);", "IHTMLInputElement_get_onerror_Proxy": "HRESULT WINAPI IHTMLInputElement_get_onerror_Proxy(IHTMLInputElement *This,VARIANT *p);", "IHTMLInputElement_put_onabort_Proxy": "HRESULT WINAPI IHTMLInputElement_put_onabort_Proxy(IHTMLInputElement *This,VARIANT v);", "IHTMLInputElement_get_onabort_Proxy": "HRESULT WINAPI IHTMLInputElement_get_onabort_Proxy(IHTMLInputElement *This,VARIANT *p);", "IHTMLInputElement_put_width_Proxy": "HRESULT WINAPI IHTMLInputElement_put_width_Proxy(IHTMLInputElement *This,__LONG32 v);", "IHTMLInputElement_get_width_Proxy": "HRESULT WINAPI IHTMLInputElement_get_width_Proxy(IHTMLInputElement *This,__LONG32 *p);", "IHTMLInputElement_put_height_Proxy": "HRESULT WINAPI IHTMLInputElement_put_height_Proxy(IHTMLInputElement *This,__LONG32 v);", "IHTMLInputElement_get_height_Proxy": "HRESULT WINAPI IHTMLInputElement_get_height_Proxy(IHTMLInputElement *This,__LONG32 *p);", "IHTMLInputElement_put_start_Proxy": "HRESULT WINAPI IHTMLInputElement_put_start_Proxy(IHTMLInputElement *This,BSTR v);", "IHTMLInputElement_get_start_Proxy": "HRESULT WINAPI IHTMLInputElement_get_start_Proxy(IHTMLInputElement *This,BSTR *p);", "IHTMLInputElement2_put_accept_Proxy": "HRESULT WINAPI IHTMLInputElement2_put_accept_Proxy(IHTMLInputElement2 *This,BSTR v);", "IHTMLInputElement2_get_accept_Proxy": "HRESULT WINAPI IHTMLInputElement2_get_accept_Proxy(IHTMLInputElement2 *This,BSTR *p);", "IHTMLInputElement2_put_useMap_Proxy": "HRESULT WINAPI IHTMLInputElement2_put_useMap_Proxy(IHTMLInputElement2 *This,BSTR v);", "IHTMLInputElement2_get_useMap_Proxy": "HRESULT WINAPI IHTMLInputElement2_get_useMap_Proxy(IHTMLInputElement2 *This,BSTR *p);", "IHTMLInputButtonElement_get_type_Proxy": "HRESULT WINAPI IHTMLInputButtonElement_get_type_Proxy(IHTMLInputButtonElement *This,BSTR *p);", "IHTMLInputButtonElement_put_value_Proxy": "HRESULT WINAPI IHTMLInputButtonElement_put_value_Proxy(IHTMLInputButtonElement *This,BSTR v);", "IHTMLInputButtonElement_get_value_Proxy": "HRESULT WINAPI IHTMLInputButtonElement_get_value_Proxy(IHTMLInputButtonElement *This,BSTR *p);", "IHTMLInputButtonElement_put_name_Proxy": "HRESULT WINAPI IHTMLInputButtonElement_put_name_Proxy(IHTMLInputButtonElement *This,BSTR v);", "IHTMLInputButtonElement_get_name_Proxy": "HRESULT WINAPI IHTMLInputButtonElement_get_name_Proxy(IHTMLInputButtonElement *This,BSTR *p);", "IHTMLInputButtonElement_put_status_Proxy": "HRESULT WINAPI IHTMLInputButtonElement_put_status_Proxy(IHTMLInputButtonElement *This,VARIANT v);", "IHTMLInputButtonElement_get_status_Proxy": "HRESULT WINAPI IHTMLInputButtonElement_get_status_Proxy(IHTMLInputButtonElement *This,VARIANT *p);", "IHTMLInputButtonElement_put_disabled_Proxy": "HRESULT WINAPI IHTMLInputButtonElement_put_disabled_Proxy(IHTMLInputButtonElement *This,VARIANT_BOOL v);", "IHTMLInputButtonElement_get_disabled_Proxy": "HRESULT WINAPI IHTMLInputButtonElement_get_disabled_Proxy(IHTMLInputButtonElement *This,VARIANT_BOOL *p);", "IHTMLInputButtonElement_get_form_Proxy": "HRESULT WINAPI IHTMLInputButtonElement_get_form_Proxy(IHTMLInputButtonElement *This,IHTMLFormElement **p);", "IHTMLInputButtonElement_createTextRange_Proxy": "HRESULT WINAPI IHTMLInputButtonElement_createTextRange_Proxy(IHTMLInputButtonElement *This,IHTMLTxtRange **range);", "IHTMLInputHiddenElement_get_type_Proxy": "HRESULT WINAPI IHTMLInputHiddenElement_get_type_Proxy(IHTMLInputHiddenElement *This,BSTR *p);", "IHTMLInputHiddenElement_put_value_Proxy": "HRESULT WINAPI IHTMLInputHiddenElement_put_value_Proxy(IHTMLInputHiddenElement *This,BSTR v);", "IHTMLInputHiddenElement_get_value_Proxy": "HRESULT WINAPI IHTMLInputHiddenElement_get_value_Proxy(IHTMLInputHiddenElement *This,BSTR *p);", "IHTMLInputHiddenElement_put_name_Proxy": "HRESULT WINAPI IHTMLInputHiddenElement_put_name_Proxy(IHTMLInputHiddenElement *This,BSTR v);", "IHTMLInputHiddenElement_get_name_Proxy": "HRESULT WINAPI IHTMLInputHiddenElement_get_name_Proxy(IHTMLInputHiddenElement *This,BSTR *p);", "IHTMLInputHiddenElement_put_status_Proxy": "HRESULT WINAPI IHTMLInputHiddenElement_put_status_Proxy(IHTMLInputHiddenElement *This,VARIANT v);", "IHTMLInputHiddenElement_get_status_Proxy": "HRESULT WINAPI IHTMLInputHiddenElement_get_status_Proxy(IHTMLInputHiddenElement *This,VARIANT *p);", "IHTMLInputHiddenElement_put_disabled_Proxy": "HRESULT WINAPI IHTMLInputHiddenElement_put_disabled_Proxy(IHTMLInputHiddenElement *This,VARIANT_BOOL v);", "IHTMLInputHiddenElement_get_disabled_Proxy": "HRESULT WINAPI IHTMLInputHiddenElement_get_disabled_Proxy(IHTMLInputHiddenElement *This,VARIANT_BOOL *p);", "IHTMLInputHiddenElement_get_form_Proxy": "HRESULT WINAPI IHTMLInputHiddenElement_get_form_Proxy(IHTMLInputHiddenElement *This,IHTMLFormElement **p);", "IHTMLInputHiddenElement_createTextRange_Proxy": "HRESULT WINAPI IHTMLInputHiddenElement_createTextRange_Proxy(IHTMLInputHiddenElement *This,IHTMLTxtRange **range);", "IHTMLInputTextElement_get_type_Proxy": "HRESULT WINAPI IHTMLInputTextElement_get_type_Proxy(IHTMLInputTextElement *This,BSTR *p);", "IHTMLInputTextElement_put_value_Proxy": "HRESULT WINAPI IHTMLInputTextElement_put_value_Proxy(IHTMLInputTextElement *This,BSTR v);", "IHTMLInputTextElement_get_value_Proxy": "HRESULT WINAPI IHTMLInputTextElement_get_value_Proxy(IHTMLInputTextElement *This,BSTR *p);", "IHTMLInputTextElement_put_name_Proxy": "HRESULT WINAPI IHTMLInputTextElement_put_name_Proxy(IHTMLInputTextElement *This,BSTR v);", "IHTMLInputTextElement_get_name_Proxy": "HRESULT WINAPI IHTMLInputTextElement_get_name_Proxy(IHTMLInputTextElement *This,BSTR *p);", "IHTMLInputTextElement_put_status_Proxy": "HRESULT WINAPI IHTMLInputTextElement_put_status_Proxy(IHTMLInputTextElement *This,VARIANT v);", "IHTMLInputTextElement_get_status_Proxy": "HRESULT WINAPI IHTMLInputTextElement_get_status_Proxy(IHTMLInputTextElement *This,VARIANT *p);", "IHTMLInputTextElement_put_disabled_Proxy": "HRESULT WINAPI IHTMLInputTextElement_put_disabled_Proxy(IHTMLInputTextElement *This,VARIANT_BOOL v);", "IHTMLInputTextElement_get_disabled_Proxy": "HRESULT WINAPI IHTMLInputTextElement_get_disabled_Proxy(IHTMLInputTextElement *This,VARIANT_BOOL *p);", "IHTMLInputTextElement_get_form_Proxy": "HRESULT WINAPI IHTMLInputTextElement_get_form_Proxy(IHTMLInputTextElement *This,IHTMLFormElement **p);", "IHTMLInputTextElement_put_defaultValue_Proxy": "HRESULT WINAPI IHTMLInputTextElement_put_defaultValue_Proxy(IHTMLInputTextElement *This,BSTR v);", "IHTMLInputTextElement_get_defaultValue_Proxy": "HRESULT WINAPI IHTMLInputTextElement_get_defaultValue_Proxy(IHTMLInputTextElement *This,BSTR *p);", "IHTMLInputTextElement_put_size_Proxy": "HRESULT WINAPI IHTMLInputTextElement_put_size_Proxy(IHTMLInputTextElement *This,__LONG32 v);", "IHTMLInputTextElement_get_size_Proxy": "HRESULT WINAPI IHTMLInputTextElement_get_size_Proxy(IHTMLInputTextElement *This,__LONG32 *p);", "IHTMLInputTextElement_put_maxLength_Proxy": "HRESULT WINAPI IHTMLInputTextElement_put_maxLength_Proxy(IHTMLInputTextElement *This,__LONG32 v);", "IHTMLInputTextElement_get_maxLength_Proxy": "HRESULT WINAPI IHTMLInputTextElement_get_maxLength_Proxy(IHTMLInputTextElement *This,__LONG32 *p);", "IHTMLInputTextElement_select_Proxy": "HRESULT WINAPI IHTMLInputTextElement_select_Proxy(IHTMLInputTextElement *This);", "IHTMLInputTextElement_put_onchange_Proxy": "HRESULT WINAPI IHTMLInputTextElement_put_onchange_Proxy(IHTMLInputTextElement *This,VARIANT v);", "IHTMLInputTextElement_get_onchange_Proxy": "HRESULT WINAPI IHTMLInputTextElement_get_onchange_Proxy(IHTMLInputTextElement *This,VARIANT *p);", "IHTMLInputTextElement_put_onselect_Proxy": "HRESULT WINAPI IHTMLInputTextElement_put_onselect_Proxy(IHTMLInputTextElement *This,VARIANT v);", "IHTMLInputTextElement_get_onselect_Proxy": "HRESULT WINAPI IHTMLInputTextElement_get_onselect_Proxy(IHTMLInputTextElement *This,VARIANT *p);", "IHTMLInputTextElement_put_readOnly_Proxy": "HRESULT WINAPI IHTMLInputTextElement_put_readOnly_Proxy(IHTMLInputTextElement *This,VARIANT_BOOL v);", "IHTMLInputTextElement_get_readOnly_Proxy": "HRESULT WINAPI IHTMLInputTextElement_get_readOnly_Proxy(IHTMLInputTextElement *This,VARIANT_BOOL *p);", "IHTMLInputTextElement_createTextRange_Proxy": "HRESULT WINAPI IHTMLInputTextElement_createTextRange_Proxy(IHTMLInputTextElement *This,IHTMLTxtRange **range);", "IHTMLInputFileElement_get_type_Proxy": "HRESULT WINAPI IHTMLInputFileElement_get_type_Proxy(IHTMLInputFileElement *This,BSTR *p);", "IHTMLInputFileElement_put_name_Proxy": "HRESULT WINAPI IHTMLInputFileElement_put_name_Proxy(IHTMLInputFileElement *This,BSTR v);", "IHTMLInputFileElement_get_name_Proxy": "HRESULT WINAPI IHTMLInputFileElement_get_name_Proxy(IHTMLInputFileElement *This,BSTR *p);", "IHTMLInputFileElement_put_status_Proxy": "HRESULT WINAPI IHTMLInputFileElement_put_status_Proxy(IHTMLInputFileElement *This,VARIANT v);", "IHTMLInputFileElement_get_status_Proxy": "HRESULT WINAPI IHTMLInputFileElement_get_status_Proxy(IHTMLInputFileElement *This,VARIANT *p);", "IHTMLInputFileElement_put_disabled_Proxy": "HRESULT WINAPI IHTMLInputFileElement_put_disabled_Proxy(IHTMLInputFileElement *This,VARIANT_BOOL v);", "IHTMLInputFileElement_get_disabled_Proxy": "HRESULT WINAPI IHTMLInputFileElement_get_disabled_Proxy(IHTMLInputFileElement *This,VARIANT_BOOL *p);", "IHTMLInputFileElement_get_form_Proxy": "HRESULT WINAPI IHTMLInputFileElement_get_form_Proxy(IHTMLInputFileElement *This,IHTMLFormElement **p);", "IHTMLInputFileElement_put_size_Proxy": "HRESULT WINAPI IHTMLInputFileElement_put_size_Proxy(IHTMLInputFileElement *This,__LONG32 v);", "IHTMLInputFileElement_get_size_Proxy": "HRESULT WINAPI IHTMLInputFileElement_get_size_Proxy(IHTMLInputFileElement *This,__LONG32 *p);", "IHTMLInputFileElement_put_maxLength_Proxy": "HRESULT WINAPI IHTMLInputFileElement_put_maxLength_Proxy(IHTMLInputFileElement *This,__LONG32 v);", "IHTMLInputFileElement_get_maxLength_Proxy": "HRESULT WINAPI IHTMLInputFileElement_get_maxLength_Proxy(IHTMLInputFileElement *This,__LONG32 *p);", "IHTMLInputFileElement_select_Proxy": "HRESULT WINAPI IHTMLInputFileElement_select_Proxy(IHTMLInputFileElement *This);", "IHTMLInputFileElement_put_onchange_Proxy": "HRESULT WINAPI IHTMLInputFileElement_put_onchange_Proxy(IHTMLInputFileElement *This,VARIANT v);", "IHTMLInputFileElement_get_onchange_Proxy": "HRESULT WINAPI IHTMLInputFileElement_get_onchange_Proxy(IHTMLInputFileElement *This,VARIANT *p);", "IHTMLInputFileElement_put_onselect_Proxy": "HRESULT WINAPI IHTMLInputFileElement_put_onselect_Proxy(IHTMLInputFileElement *This,VARIANT v);", "IHTMLInputFileElement_get_onselect_Proxy": "HRESULT WINAPI IHTMLInputFileElement_get_onselect_Proxy(IHTMLInputFileElement *This,VARIANT *p);", "IHTMLInputFileElement_put_value_Proxy": "HRESULT WINAPI IHTMLInputFileElement_put_value_Proxy(IHTMLInputFileElement *This,BSTR v);", "IHTMLInputFileElement_get_value_Proxy": "HRESULT WINAPI IHTMLInputFileElement_get_value_Proxy(IHTMLInputFileElement *This,BSTR *p);", "IHTMLOptionButtonElement_put_value_Proxy": "HRESULT WINAPI IHTMLOptionButtonElement_put_value_Proxy(IHTMLOptionButtonElement *This,BSTR v);", "IHTMLOptionButtonElement_get_value_Proxy": "HRESULT WINAPI IHTMLOptionButtonElement_get_value_Proxy(IHTMLOptionButtonElement *This,BSTR *p);", "IHTMLOptionButtonElement_get_type_Proxy": "HRESULT WINAPI IHTMLOptionButtonElement_get_type_Proxy(IHTMLOptionButtonElement *This,BSTR *p);", "IHTMLOptionButtonElement_put_name_Proxy": "HRESULT WINAPI IHTMLOptionButtonElement_put_name_Proxy(IHTMLOptionButtonElement *This,BSTR v);", "IHTMLOptionButtonElement_get_name_Proxy": "HRESULT WINAPI IHTMLOptionButtonElement_get_name_Proxy(IHTMLOptionButtonElement *This,BSTR *p);", "IHTMLOptionButtonElement_put_checked_Proxy": "HRESULT WINAPI IHTMLOptionButtonElement_put_checked_Proxy(IHTMLOptionButtonElement *This,VARIANT_BOOL v);", "IHTMLOptionButtonElement_get_checked_Proxy": "HRESULT WINAPI IHTMLOptionButtonElement_get_checked_Proxy(IHTMLOptionButtonElement *This,VARIANT_BOOL *p);", "IHTMLOptionButtonElement_put_defaultChecked_Proxy": "HRESULT WINAPI IHTMLOptionButtonElement_put_defaultChecked_Proxy(IHTMLOptionButtonElement *This,VARIANT_BOOL v);", "IHTMLOptionButtonElement_get_defaultChecked_Proxy": "HRESULT WINAPI IHTMLOptionButtonElement_get_defaultChecked_Proxy(IHTMLOptionButtonElement *This,VARIANT_BOOL *p);", "IHTMLOptionButtonElement_put_onchange_Proxy": "HRESULT WINAPI IHTMLOptionButtonElement_put_onchange_Proxy(IHTMLOptionButtonElement *This,VARIANT v);", "IHTMLOptionButtonElement_get_onchange_Proxy": "HRESULT WINAPI IHTMLOptionButtonElement_get_onchange_Proxy(IHTMLOptionButtonElement *This,VARIANT *p);", "IHTMLOptionButtonElement_put_disabled_Proxy": "HRESULT WINAPI IHTMLOptionButtonElement_put_disabled_Proxy(IHTMLOptionButtonElement *This,VARIANT_BOOL v);", "IHTMLOptionButtonElement_get_disabled_Proxy": "HRESULT WINAPI IHTMLOptionButtonElement_get_disabled_Proxy(IHTMLOptionButtonElement *This,VARIANT_BOOL *p);", "IHTMLOptionButtonElement_put_status_Proxy": "HRESULT WINAPI IHTMLOptionButtonElement_put_status_Proxy(IHTMLOptionButtonElement *This,VARIANT_BOOL v);", "IHTMLOptionButtonElement_get_status_Proxy": "HRESULT WINAPI IHTMLOptionButtonElement_get_status_Proxy(IHTMLOptionButtonElement *This,VARIANT_BOOL *p);", "IHTMLOptionButtonElement_put_indeterminate_Proxy": "HRESULT WINAPI IHTMLOptionButtonElement_put_indeterminate_Proxy(IHTMLOptionButtonElement *This,VARIANT_BOOL v);", "IHTMLOptionButtonElement_get_indeterminate_Proxy": "HRESULT WINAPI IHTMLOptionButtonElement_get_indeterminate_Proxy(IHTMLOptionButtonElement *This,VARIANT_BOOL *p);", "IHTMLOptionButtonElement_get_form_Proxy": "HRESULT WINAPI IHTMLOptionButtonElement_get_form_Proxy(IHTMLOptionButtonElement *This,IHTMLFormElement **p);", "IHTMLInputImage_get_type_Proxy": "HRESULT WINAPI IHTMLInputImage_get_type_Proxy(IHTMLInputImage *This,BSTR *p);", "IHTMLInputImage_put_disabled_Proxy": "HRESULT WINAPI IHTMLInputImage_put_disabled_Proxy(IHTMLInputImage *This,VARIANT_BOOL v);", "IHTMLInputImage_get_disabled_Proxy": "HRESULT WINAPI IHTMLInputImage_get_disabled_Proxy(IHTMLInputImage *This,VARIANT_BOOL *p);", "IHTMLInputImage_put_border_Proxy": "HRESULT WINAPI IHTMLInputImage_put_border_Proxy(IHTMLInputImage *This,VARIANT v);", "IHTMLInputImage_get_border_Proxy": "HRESULT WINAPI IHTMLInputImage_get_border_Proxy(IHTMLInputImage *This,VARIANT *p);", "IHTMLInputImage_put_vspace_Proxy": "HRESULT WINAPI IHTMLInputImage_put_vspace_Proxy(IHTMLInputImage *This,__LONG32 v);", "IHTMLInputImage_get_vspace_Proxy": "HRESULT WINAPI IHTMLInputImage_get_vspace_Proxy(IHTMLInputImage *This,__LONG32 *p);", "IHTMLInputImage_put_hspace_Proxy": "HRESULT WINAPI IHTMLInputImage_put_hspace_Proxy(IHTMLInputImage *This,__LONG32 v);", "IHTMLInputImage_get_hspace_Proxy": "HRESULT WINAPI IHTMLInputImage_get_hspace_Proxy(IHTMLInputImage *This,__LONG32 *p);", "IHTMLInputImage_put_alt_Proxy": "HRESULT WINAPI IHTMLInputImage_put_alt_Proxy(IHTMLInputImage *This,BSTR v);", "IHTMLInputImage_get_alt_Proxy": "HRESULT WINAPI IHTMLInputImage_get_alt_Proxy(IHTMLInputImage *This,BSTR *p);", "IHTMLInputImage_put_src_Proxy": "HRESULT WINAPI IHTMLInputImage_put_src_Proxy(IHTMLInputImage *This,BSTR v);", "IHTMLInputImage_get_src_Proxy": "HRESULT WINAPI IHTMLInputImage_get_src_Proxy(IHTMLInputImage *This,BSTR *p);", "IHTMLInputImage_put_lowsrc_Proxy": "HRESULT WINAPI IHTMLInputImage_put_lowsrc_Proxy(IHTMLInputImage *This,BSTR v);", "IHTMLInputImage_get_lowsrc_Proxy": "HRESULT WINAPI IHTMLInputImage_get_lowsrc_Proxy(IHTMLInputImage *This,BSTR *p);", "IHTMLInputImage_put_vrml_Proxy": "HRESULT WINAPI IHTMLInputImage_put_vrml_Proxy(IHTMLInputImage *This,BSTR v);", "IHTMLInputImage_get_vrml_Proxy": "HRESULT WINAPI IHTMLInputImage_get_vrml_Proxy(IHTMLInputImage *This,BSTR *p);", "IHTMLInputImage_put_dynsrc_Proxy": "HRESULT WINAPI IHTMLInputImage_put_dynsrc_Proxy(IHTMLInputImage *This,BSTR v);", "IHTMLInputImage_get_dynsrc_Proxy": "HRESULT WINAPI IHTMLInputImage_get_dynsrc_Proxy(IHTMLInputImage *This,BSTR *p);", "IHTMLInputImage_get_readyState_Proxy": "HRESULT WINAPI IHTMLInputImage_get_readyState_Proxy(IHTMLInputImage *This,BSTR *p);", "IHTMLInputImage_get_complete_Proxy": "HRESULT WINAPI IHTMLInputImage_get_complete_Proxy(IHTMLInputImage *This,VARIANT_BOOL *p);", "IHTMLInputImage_put_loop_Proxy": "HRESULT WINAPI IHTMLInputImage_put_loop_Proxy(IHTMLInputImage *This,VARIANT v);", "IHTMLInputImage_get_loop_Proxy": "HRESULT WINAPI IHTMLInputImage_get_loop_Proxy(IHTMLInputImage *This,VARIANT *p);", "IHTMLInputImage_put_align_Proxy": "HRESULT WINAPI IHTMLInputImage_put_align_Proxy(IHTMLInputImage *This,BSTR v);", "IHTMLInputImage_get_align_Proxy": "HRESULT WINAPI IHTMLInputImage_get_align_Proxy(IHTMLInputImage *This,BSTR *p);", "IHTMLInputImage_put_onload_Proxy": "HRESULT WINAPI IHTMLInputImage_put_onload_Proxy(IHTMLInputImage *This,VARIANT v);", "IHTMLInputImage_get_onload_Proxy": "HRESULT WINAPI IHTMLInputImage_get_onload_Proxy(IHTMLInputImage *This,VARIANT *p);", "IHTMLInputImage_put_onerror_Proxy": "HRESULT WINAPI IHTMLInputImage_put_onerror_Proxy(IHTMLInputImage *This,VARIANT v);", "IHTMLInputImage_get_onerror_Proxy": "HRESULT WINAPI IHTMLInputImage_get_onerror_Proxy(IHTMLInputImage *This,VARIANT *p);", "IHTMLInputImage_put_onabort_Proxy": "HRESULT WINAPI IHTMLInputImage_put_onabort_Proxy(IHTMLInputImage *This,VARIANT v);", "IHTMLInputImage_get_onabort_Proxy": "HRESULT WINAPI IHTMLInputImage_get_onabort_Proxy(IHTMLInputImage *This,VARIANT *p);", "IHTMLInputImage_put_name_Proxy": "HRESULT WINAPI IHTMLInputImage_put_name_Proxy(IHTMLInputImage *This,BSTR v);", "IHTMLInputImage_get_name_Proxy": "HRESULT WINAPI IHTMLInputImage_get_name_Proxy(IHTMLInputImage *This,BSTR *p);", "IHTMLInputImage_put_width_Proxy": "HRESULT WINAPI IHTMLInputImage_put_width_Proxy(IHTMLInputImage *This,__LONG32 v);", "IHTMLInputImage_get_width_Proxy": "HRESULT WINAPI IHTMLInputImage_get_width_Proxy(IHTMLInputImage *This,__LONG32 *p);", "IHTMLInputImage_put_height_Proxy": "HRESULT WINAPI IHTMLInputImage_put_height_Proxy(IHTMLInputImage *This,__LONG32 v);", "IHTMLInputImage_get_height_Proxy": "HRESULT WINAPI IHTMLInputImage_get_height_Proxy(IHTMLInputImage *This,__LONG32 *p);", "IHTMLInputImage_put_start_Proxy": "HRESULT WINAPI IHTMLInputImage_put_start_Proxy(IHTMLInputImage *This,BSTR v);", "IHTMLInputImage_get_start_Proxy": "HRESULT WINAPI IHTMLInputImage_get_start_Proxy(IHTMLInputImage *This,BSTR *p);", "IHTMLTextAreaElement_get_type_Proxy": "HRESULT WINAPI IHTMLTextAreaElement_get_type_Proxy(IHTMLTextAreaElement *This,BSTR *p);", "IHTMLTextAreaElement_put_value_Proxy": "HRESULT WINAPI IHTMLTextAreaElement_put_value_Proxy(IHTMLTextAreaElement *This,BSTR v);", "IHTMLTextAreaElement_get_value_Proxy": "HRESULT WINAPI IHTMLTextAreaElement_get_value_Proxy(IHTMLTextAreaElement *This,BSTR *p);", "IHTMLTextAreaElement_put_name_Proxy": "HRESULT WINAPI IHTMLTextAreaElement_put_name_Proxy(IHTMLTextAreaElement *This,BSTR v);", "IHTMLTextAreaElement_get_name_Proxy": "HRESULT WINAPI IHTMLTextAreaElement_get_name_Proxy(IHTMLTextAreaElement *This,BSTR *p);", "IHTMLTextAreaElement_put_status_Proxy": "HRESULT WINAPI IHTMLTextAreaElement_put_status_Proxy(IHTMLTextAreaElement *This,VARIANT v);", "IHTMLTextAreaElement_get_status_Proxy": "HRESULT WINAPI IHTMLTextAreaElement_get_status_Proxy(IHTMLTextAreaElement *This,VARIANT *p);", "IHTMLTextAreaElement_put_disabled_Proxy": "HRESULT WINAPI IHTMLTextAreaElement_put_disabled_Proxy(IHTMLTextAreaElement *This,VARIANT_BOOL v);", "IHTMLTextAreaElement_get_disabled_Proxy": "HRESULT WINAPI IHTMLTextAreaElement_get_disabled_Proxy(IHTMLTextAreaElement *This,VARIANT_BOOL *p);", "IHTMLTextAreaElement_get_form_Proxy": "HRESULT WINAPI IHTMLTextAreaElement_get_form_Proxy(IHTMLTextAreaElement *This,IHTMLFormElement **p);", "IHTMLTextAreaElement_put_defaultValue_Proxy": "HRESULT WINAPI IHTMLTextAreaElement_put_defaultValue_Proxy(IHTMLTextAreaElement *This,BSTR v);", "IHTMLTextAreaElement_get_defaultValue_Proxy": "HRESULT WINAPI IHTMLTextAreaElement_get_defaultValue_Proxy(IHTMLTextAreaElement *This,BSTR *p);", "IHTMLTextAreaElement_select_Proxy": "HRESULT WINAPI IHTMLTextAreaElement_select_Proxy(IHTMLTextAreaElement *This);", "IHTMLTextAreaElement_put_onchange_Proxy": "HRESULT WINAPI IHTMLTextAreaElement_put_onchange_Proxy(IHTMLTextAreaElement *This,VARIANT v);", "IHTMLTextAreaElement_get_onchange_Proxy": "HRESULT WINAPI IHTMLTextAreaElement_get_onchange_Proxy(IHTMLTextAreaElement *This,VARIANT *p);", "IHTMLTextAreaElement_put_onselect_Proxy": "HRESULT WINAPI IHTMLTextAreaElement_put_onselect_Proxy(IHTMLTextAreaElement *This,VARIANT v);", "IHTMLTextAreaElement_get_onselect_Proxy": "HRESULT WINAPI IHTMLTextAreaElement_get_onselect_Proxy(IHTMLTextAreaElement *This,VARIANT *p);", "IHTMLTextAreaElement_put_readOnly_Proxy": "HRESULT WINAPI IHTMLTextAreaElement_put_readOnly_Proxy(IHTMLTextAreaElement *This,VARIANT_BOOL v);", "IHTMLTextAreaElement_get_readOnly_Proxy": "HRESULT WINAPI IHTMLTextAreaElement_get_readOnly_Proxy(IHTMLTextAreaElement *This,VARIANT_BOOL *p);", "IHTMLTextAreaElement_put_rows_Proxy": "HRESULT WINAPI IHTMLTextAreaElement_put_rows_Proxy(IHTMLTextAreaElement *This,__LONG32 v);", "IHTMLTextAreaElement_get_rows_Proxy": "HRESULT WINAPI IHTMLTextAreaElement_get_rows_Proxy(IHTMLTextAreaElement *This,__LONG32 *p);", "IHTMLTextAreaElement_put_cols_Proxy": "HRESULT WINAPI IHTMLTextAreaElement_put_cols_Proxy(IHTMLTextAreaElement *This,__LONG32 v);", "IHTMLTextAreaElement_get_cols_Proxy": "HRESULT WINAPI IHTMLTextAreaElement_get_cols_Proxy(IHTMLTextAreaElement *This,__LONG32 *p);", "IHTMLTextAreaElement_put_wrap_Proxy": "HRESULT WINAPI IHTMLTextAreaElement_put_wrap_Proxy(IHTMLTextAreaElement *This,BSTR v);", "IHTMLTextAreaElement_get_wrap_Proxy": "HRESULT WINAPI IHTMLTextAreaElement_get_wrap_Proxy(IHTMLTextAreaElement *This,BSTR *p);", "IHTMLTextAreaElement_createTextRange_Proxy": "HRESULT WINAPI IHTMLTextAreaElement_createTextRange_Proxy(IHTMLTextAreaElement *This,IHTMLTxtRange **range);", "IHTMLButtonElement_get_type_Proxy": "HRESULT WINAPI IHTMLButtonElement_get_type_Proxy(IHTMLButtonElement *This,BSTR *p);", "IHTMLButtonElement_put_value_Proxy": "HRESULT WINAPI IHTMLButtonElement_put_value_Proxy(IHTMLButtonElement *This,BSTR v);", "IHTMLButtonElement_get_value_Proxy": "HRESULT WINAPI IHTMLButtonElement_get_value_Proxy(IHTMLButtonElement *This,BSTR *p);", "IHTMLButtonElement_put_name_Proxy": "HRESULT WINAPI IHTMLButtonElement_put_name_Proxy(IHTMLButtonElement *This,BSTR v);", "IHTMLButtonElement_get_name_Proxy": "HRESULT WINAPI IHTMLButtonElement_get_name_Proxy(IHTMLButtonElement *This,BSTR *p);", "IHTMLButtonElement_put_status_Proxy": "HRESULT WINAPI IHTMLButtonElement_put_status_Proxy(IHTMLButtonElement *This,VARIANT v);", "IHTMLButtonElement_get_status_Proxy": "HRESULT WINAPI IHTMLButtonElement_get_status_Proxy(IHTMLButtonElement *This,VARIANT *p);", "IHTMLButtonElement_put_disabled_Proxy": "HRESULT WINAPI IHTMLButtonElement_put_disabled_Proxy(IHTMLButtonElement *This,VARIANT_BOOL v);", "IHTMLButtonElement_get_disabled_Proxy": "HRESULT WINAPI IHTMLButtonElement_get_disabled_Proxy(IHTMLButtonElement *This,VARIANT_BOOL *p);", "IHTMLButtonElement_get_form_Proxy": "HRESULT WINAPI IHTMLButtonElement_get_form_Proxy(IHTMLButtonElement *This,IHTMLFormElement **p);", "IHTMLButtonElement_createTextRange_Proxy": "HRESULT WINAPI IHTMLButtonElement_createTextRange_Proxy(IHTMLButtonElement *This,IHTMLTxtRange **range);", "IHTMLMarqueeElement_put_bgColor_Proxy": "HRESULT WINAPI IHTMLMarqueeElement_put_bgColor_Proxy(IHTMLMarqueeElement *This,VARIANT v);", "IHTMLMarqueeElement_get_bgColor_Proxy": "HRESULT WINAPI IHTMLMarqueeElement_get_bgColor_Proxy(IHTMLMarqueeElement *This,VARIANT *p);", "IHTMLMarqueeElement_put_scrollDelay_Proxy": "HRESULT WINAPI IHTMLMarqueeElement_put_scrollDelay_Proxy(IHTMLMarqueeElement *This,__LONG32 v);", "IHTMLMarqueeElement_get_scrollDelay_Proxy": "HRESULT WINAPI IHTMLMarqueeElement_get_scrollDelay_Proxy(IHTMLMarqueeElement *This,__LONG32 *p);", "IHTMLMarqueeElement_put_direction_Proxy": "HRESULT WINAPI IHTMLMarqueeElement_put_direction_Proxy(IHTMLMarqueeElement *This,BSTR v);", "IHTMLMarqueeElement_get_direction_Proxy": "HRESULT WINAPI IHTMLMarqueeElement_get_direction_Proxy(IHTMLMarqueeElement *This,BSTR *p);", "IHTMLMarqueeElement_put_behavior_Proxy": "HRESULT WINAPI IHTMLMarqueeElement_put_behavior_Proxy(IHTMLMarqueeElement *This,BSTR v);", "IHTMLMarqueeElement_get_behavior_Proxy": "HRESULT WINAPI IHTMLMarqueeElement_get_behavior_Proxy(IHTMLMarqueeElement *This,BSTR *p);", "IHTMLMarqueeElement_put_scrollAmount_Proxy": "HRESULT WINAPI IHTMLMarqueeElement_put_scrollAmount_Proxy(IHTMLMarqueeElement *This,__LONG32 v);", "IHTMLMarqueeElement_get_scrollAmount_Proxy": "HRESULT WINAPI IHTMLMarqueeElement_get_scrollAmount_Proxy(IHTMLMarqueeElement *This,__LONG32 *p);", "IHTMLMarqueeElement_put_loop_Proxy": "HRESULT WINAPI IHTMLMarqueeElement_put_loop_Proxy(IHTMLMarqueeElement *This,__LONG32 v);", "IHTMLMarqueeElement_get_loop_Proxy": "HRESULT WINAPI IHTMLMarqueeElement_get_loop_Proxy(IHTMLMarqueeElement *This,__LONG32 *p);", "IHTMLMarqueeElement_put_vspace_Proxy": "HRESULT WINAPI IHTMLMarqueeElement_put_vspace_Proxy(IHTMLMarqueeElement *This,__LONG32 v);", "IHTMLMarqueeElement_get_vspace_Proxy": "HRESULT WINAPI IHTMLMarqueeElement_get_vspace_Proxy(IHTMLMarqueeElement *This,__LONG32 *p);", "IHTMLMarqueeElement_put_hspace_Proxy": "HRESULT WINAPI IHTMLMarqueeElement_put_hspace_Proxy(IHTMLMarqueeElement *This,__LONG32 v);", "IHTMLMarqueeElement_get_hspace_Proxy": "HRESULT WINAPI IHTMLMarqueeElement_get_hspace_Proxy(IHTMLMarqueeElement *This,__LONG32 *p);", "IHTMLMarqueeElement_put_onfinish_Proxy": "HRESULT WINAPI IHTMLMarqueeElement_put_onfinish_Proxy(IHTMLMarqueeElement *This,VARIANT v);", "IHTMLMarqueeElement_get_onfinish_Proxy": "HRESULT WINAPI IHTMLMarqueeElement_get_onfinish_Proxy(IHTMLMarqueeElement *This,VARIANT *p);", "IHTMLMarqueeElement_put_onstart_Proxy": "HRESULT WINAPI IHTMLMarqueeElement_put_onstart_Proxy(IHTMLMarqueeElement *This,VARIANT v);", "IHTMLMarqueeElement_get_onstart_Proxy": "HRESULT WINAPI IHTMLMarqueeElement_get_onstart_Proxy(IHTMLMarqueeElement *This,VARIANT *p);", "IHTMLMarqueeElement_put_onbounce_Proxy": "HRESULT WINAPI IHTMLMarqueeElement_put_onbounce_Proxy(IHTMLMarqueeElement *This,VARIANT v);", "IHTMLMarqueeElement_get_onbounce_Proxy": "HRESULT WINAPI IHTMLMarqueeElement_get_onbounce_Proxy(IHTMLMarqueeElement *This,VARIANT *p);", "IHTMLMarqueeElement_put_width_Proxy": "HRESULT WINAPI IHTMLMarqueeElement_put_width_Proxy(IHTMLMarqueeElement *This,VARIANT v);", "IHTMLMarqueeElement_get_width_Proxy": "HRESULT WINAPI IHTMLMarqueeElement_get_width_Proxy(IHTMLMarqueeElement *This,VARIANT *p);", "IHTMLMarqueeElement_put_height_Proxy": "HRESULT WINAPI IHTMLMarqueeElement_put_height_Proxy(IHTMLMarqueeElement *This,VARIANT v);", "IHTMLMarqueeElement_get_height_Proxy": "HRESULT WINAPI IHTMLMarqueeElement_get_height_Proxy(IHTMLMarqueeElement *This,VARIANT *p);", "IHTMLMarqueeElement_put_trueSpeed_Proxy": "HRESULT WINAPI IHTMLMarqueeElement_put_trueSpeed_Proxy(IHTMLMarqueeElement *This,VARIANT_BOOL v);", "IHTMLMarqueeElement_get_trueSpeed_Proxy": "HRESULT WINAPI IHTMLMarqueeElement_get_trueSpeed_Proxy(IHTMLMarqueeElement *This,VARIANT_BOOL *p);", "IHTMLMarqueeElement_start_Proxy": "HRESULT WINAPI IHTMLMarqueeElement_start_Proxy(IHTMLMarqueeElement *This);", "IHTMLMarqueeElement_stop_Proxy": "HRESULT WINAPI IHTMLMarqueeElement_stop_Proxy(IHTMLMarqueeElement *This);", "IHTMLHtmlElement_put_version_Proxy": "HRESULT WINAPI IHTMLHtmlElement_put_version_Proxy(IHTMLHtmlElement *This,BSTR v);", "IHTMLHtmlElement_get_version_Proxy": "HRESULT WINAPI IHTMLHtmlElement_get_version_Proxy(IHTMLHtmlElement *This,BSTR *p);", "IHTMLHeadElement_put_profile_Proxy": "HRESULT WINAPI IHTMLHeadElement_put_profile_Proxy(IHTMLHeadElement *This,BSTR v);", "IHTMLHeadElement_get_profile_Proxy": "HRESULT WINAPI IHTMLHeadElement_get_profile_Proxy(IHTMLHeadElement *This,BSTR *p);", "IHTMLTitleElement_put_text_Proxy": "HRESULT WINAPI IHTMLTitleElement_put_text_Proxy(IHTMLTitleElement *This,BSTR v);", "IHTMLTitleElement_get_text_Proxy": "HRESULT WINAPI IHTMLTitleElement_get_text_Proxy(IHTMLTitleElement *This,BSTR *p);", "IHTMLMetaElement_put_httpEquiv_Proxy": "HRESULT WINAPI IHTMLMetaElement_put_httpEquiv_Proxy(IHTMLMetaElement *This,BSTR v);", "IHTMLMetaElement_get_httpEquiv_Proxy": "HRESULT WINAPI IHTMLMetaElement_get_httpEquiv_Proxy(IHTMLMetaElement *This,BSTR *p);", "IHTMLMetaElement_put_content_Proxy": "HRESULT WINAPI IHTMLMetaElement_put_content_Proxy(IHTMLMetaElement *This,BSTR v);", "IHTMLMetaElement_get_content_Proxy": "HRESULT WINAPI IHTMLMetaElement_get_content_Proxy(IHTMLMetaElement *This,BSTR *p);", "IHTMLMetaElement_put_name_Proxy": "HRESULT WINAPI IHTMLMetaElement_put_name_Proxy(IHTMLMetaElement *This,BSTR v);", "IHTMLMetaElement_get_name_Proxy": "HRESULT WINAPI IHTMLMetaElement_get_name_Proxy(IHTMLMetaElement *This,BSTR *p);", "IHTMLMetaElement_put_url_Proxy": "HRESULT WINAPI IHTMLMetaElement_put_url_Proxy(IHTMLMetaElement *This,BSTR v);", "IHTMLMetaElement_get_url_Proxy": "HRESULT WINAPI IHTMLMetaElement_get_url_Proxy(IHTMLMetaElement *This,BSTR *p);", "IHTMLMetaElement_put_charset_Proxy": "HRESULT WINAPI IHTMLMetaElement_put_charset_Proxy(IHTMLMetaElement *This,BSTR v);", "IHTMLMetaElement_get_charset_Proxy": "HRESULT WINAPI IHTMLMetaElement_get_charset_Proxy(IHTMLMetaElement *This,BSTR *p);", "IHTMLMetaElement2_put_scheme_Proxy": "HRESULT WINAPI IHTMLMetaElement2_put_scheme_Proxy(IHTMLMetaElement2 *This,BSTR v);", "IHTMLMetaElement2_get_scheme_Proxy": "HRESULT WINAPI IHTMLMetaElement2_get_scheme_Proxy(IHTMLMetaElement2 *This,BSTR *p);", "IHTMLBaseElement_put_href_Proxy": "HRESULT WINAPI IHTMLBaseElement_put_href_Proxy(IHTMLBaseElement *This,BSTR v);", "IHTMLBaseElement_get_href_Proxy": "HRESULT WINAPI IHTMLBaseElement_get_href_Proxy(IHTMLBaseElement *This,BSTR *p);", "IHTMLBaseElement_put_target_Proxy": "HRESULT WINAPI IHTMLBaseElement_put_target_Proxy(IHTMLBaseElement *This,BSTR v);", "IHTMLBaseElement_get_target_Proxy": "HRESULT WINAPI IHTMLBaseElement_get_target_Proxy(IHTMLBaseElement *This,BSTR *p);", "IHTMLIsIndexElement_put_prompt_Proxy": "HRESULT WINAPI IHTMLIsIndexElement_put_prompt_Proxy(IHTMLIsIndexElement *This,BSTR v);", "IHTMLIsIndexElement_get_prompt_Proxy": "HRESULT WINAPI IHTMLIsIndexElement_get_prompt_Proxy(IHTMLIsIndexElement *This,BSTR *p);", "IHTMLIsIndexElement_put_action_Proxy": "HRESULT WINAPI IHTMLIsIndexElement_put_action_Proxy(IHTMLIsIndexElement *This,BSTR v);", "IHTMLIsIndexElement_get_action_Proxy": "HRESULT WINAPI IHTMLIsIndexElement_get_action_Proxy(IHTMLIsIndexElement *This,BSTR *p);", "IHTMLIsIndexElement2_get_form_Proxy": "HRESULT WINAPI IHTMLIsIndexElement2_get_form_Proxy(IHTMLIsIndexElement2 *This,IHTMLFormElement **p);", "IHTMLNextIdElement_put_n_Proxy": "HRESULT WINAPI IHTMLNextIdElement_put_n_Proxy(IHTMLNextIdElement *This,BSTR v);", "IHTMLNextIdElement_get_n_Proxy": "HRESULT WINAPI IHTMLNextIdElement_get_n_Proxy(IHTMLNextIdElement *This,BSTR *p);", "IHTMLBaseFontElement_put_color_Proxy": "HRESULT WINAPI IHTMLBaseFontElement_put_color_Proxy(IHTMLBaseFontElement *This,VARIANT v);", "IHTMLBaseFontElement_get_color_Proxy": "HRESULT WINAPI IHTMLBaseFontElement_get_color_Proxy(IHTMLBaseFontElement *This,VARIANT *p);", "IHTMLBaseFontElement_put_face_Proxy": "HRESULT WINAPI IHTMLBaseFontElement_put_face_Proxy(IHTMLBaseFontElement *This,BSTR v);", "IHTMLBaseFontElement_get_face_Proxy": "HRESULT WINAPI IHTMLBaseFontElement_get_face_Proxy(IHTMLBaseFontElement *This,BSTR *p);", "IHTMLBaseFontElement_put_size_Proxy": "HRESULT WINAPI IHTMLBaseFontElement_put_size_Proxy(IHTMLBaseFontElement *This,__LONG32 v);", "IHTMLBaseFontElement_get_size_Proxy": "HRESULT WINAPI IHTMLBaseFontElement_get_size_Proxy(IHTMLBaseFontElement *This,__LONG32 *p);", "IOmHistory_get_length_Proxy": "HRESULT WINAPI IOmHistory_get_length_Proxy(IOmHistory *This,short *p);", "IOmHistory_back_Proxy": "HRESULT WINAPI IOmHistory_back_Proxy(IOmHistory *This,VARIANT *pvargdistance);", "IOmHistory_forward_Proxy": "HRESULT WINAPI IOmHistory_forward_Proxy(IOmHistory *This,VARIANT *pvargdistance);", "IOmHistory_go_Proxy": "HRESULT WINAPI IOmHistory_go_Proxy(IOmHistory *This,VARIANT *pvargdistance);", "IHTMLMimeTypesCollection_get_length_Proxy": "HRESULT WINAPI IHTMLMimeTypesCollection_get_length_Proxy(IHTMLMimeTypesCollection *This,__LONG32 *p);", "IHTMLPluginsCollection_get_length_Proxy": "HRESULT WINAPI IHTMLPluginsCollection_get_length_Proxy(IHTMLPluginsCollection *This,__LONG32 *p);", "IHTMLPluginsCollection_refresh_Proxy": "HRESULT WINAPI IHTMLPluginsCollection_refresh_Proxy(IHTMLPluginsCollection *This,VARIANT_BOOL reload);", "IHTMLOpsProfile_addRequest_Proxy": "HRESULT WINAPI IHTMLOpsProfile_addRequest_Proxy(IHTMLOpsProfile *This,BSTR name,VARIANT reserved,VARIANT_BOOL *success);", "IHTMLOpsProfile_clearRequest_Proxy": "HRESULT WINAPI IHTMLOpsProfile_clearRequest_Proxy(IHTMLOpsProfile *This);", "IHTMLOpsProfile_doRequest_Proxy": "HRESULT WINAPI IHTMLOpsProfile_doRequest_Proxy(IHTMLOpsProfile *This,VARIANT usage,VARIANT fname,VARIANT domain,VARIANT path,VARIANT expire,VARIANT reserved);", "IHTMLOpsProfile_getAttribute_Proxy": "HRESULT WINAPI IHTMLOpsProfile_getAttribute_Proxy(IHTMLOpsProfile *This,BSTR name,BSTR *value);", "IHTMLOpsProfile_setAttribute_Proxy": "HRESULT WINAPI IHTMLOpsProfile_setAttribute_Proxy(IHTMLOpsProfile *This,BSTR name,BSTR value,VARIANT prefs,VARIANT_BOOL *success);", "IHTMLOpsProfile_commitChanges_Proxy": "HRESULT WINAPI IHTMLOpsProfile_commitChanges_Proxy(IHTMLOpsProfile *This,VARIANT_BOOL *success);", "IHTMLOpsProfile_addReadRequest_Proxy": "HRESULT WINAPI IHTMLOpsProfile_addReadRequest_Proxy(IHTMLOpsProfile *This,BSTR name,VARIANT reserved,VARIANT_BOOL *success);", "IHTMLOpsProfile_doReadRequest_Proxy": "HRESULT WINAPI IHTMLOpsProfile_doReadRequest_Proxy(IHTMLOpsProfile *This,VARIANT usage,VARIANT fname,VARIANT domain,VARIANT path,VARIANT expire,VARIANT reserved);", "IHTMLOpsProfile_doWriteRequest_Proxy": "HRESULT WINAPI IHTMLOpsProfile_doWriteRequest_Proxy(IHTMLOpsProfile *This,VARIANT_BOOL *success);", "IOmNavigator_get_appCodeName_Proxy": "HRESULT WINAPI IOmNavigator_get_appCodeName_Proxy(IOmNavigator *This,BSTR *p);", "IOmNavigator_get_appName_Proxy": "HRESULT WINAPI IOmNavigator_get_appName_Proxy(IOmNavigator *This,BSTR *p);", "IOmNavigator_get_appVersion_Proxy": "HRESULT WINAPI IOmNavigator_get_appVersion_Proxy(IOmNavigator *This,BSTR *p);", "IOmNavigator_get_userAgent_Proxy": "HRESULT WINAPI IOmNavigator_get_userAgent_Proxy(IOmNavigator *This,BSTR *p);", "IOmNavigator_javaEnabled_Proxy": "HRESULT WINAPI IOmNavigator_javaEnabled_Proxy(IOmNavigator *This,VARIANT_BOOL *enabled);", "IOmNavigator_taintEnabled_Proxy": "HRESULT WINAPI IOmNavigator_taintEnabled_Proxy(IOmNavigator *This,VARIANT_BOOL *enabled);", "IOmNavigator_get_mimeTypes_Proxy": "HRESULT WINAPI IOmNavigator_get_mimeTypes_Proxy(IOmNavigator *This,IHTMLMimeTypesCollection **p);", "IOmNavigator_get_plugins_Proxy": "HRESULT WINAPI IOmNavigator_get_plugins_Proxy(IOmNavigator *This,IHTMLPluginsCollection **p);", "IOmNavigator_get_cookieEnabled_Proxy": "HRESULT WINAPI IOmNavigator_get_cookieEnabled_Proxy(IOmNavigator *This,VARIANT_BOOL *p);", "IOmNavigator_get_opsProfile_Proxy": "HRESULT WINAPI IOmNavigator_get_opsProfile_Proxy(IOmNavigator *This,IHTMLOpsProfile **p);", "IOmNavigator_toString_Proxy": "HRESULT WINAPI IOmNavigator_toString_Proxy(IOmNavigator *This,BSTR *string);", "IOmNavigator_get_cpuClass_Proxy": "HRESULT WINAPI IOmNavigator_get_cpuClass_Proxy(IOmNavigator *This,BSTR *p);", "IOmNavigator_get_systemLanguage_Proxy": "HRESULT WINAPI IOmNavigator_get_systemLanguage_Proxy(IOmNavigator *This,BSTR *p);", "IOmNavigator_get_browserLanguage_Proxy": "HRESULT WINAPI IOmNavigator_get_browserLanguage_Proxy(IOmNavigator *This,BSTR *p);", "IOmNavigator_get_userLanguage_Proxy": "HRESULT WINAPI IOmNavigator_get_userLanguage_Proxy(IOmNavigator *This,BSTR *p);", "IOmNavigator_get_platform_Proxy": "HRESULT WINAPI IOmNavigator_get_platform_Proxy(IOmNavigator *This,BSTR *p);", "IOmNavigator_get_appMinorVersion_Proxy": "HRESULT WINAPI IOmNavigator_get_appMinorVersion_Proxy(IOmNavigator *This,BSTR *p);", "IOmNavigator_get_connectionSpeed_Proxy": "HRESULT WINAPI IOmNavigator_get_connectionSpeed_Proxy(IOmNavigator *This,__LONG32 *p);", "IOmNavigator_get_onLine_Proxy": "HRESULT WINAPI IOmNavigator_get_onLine_Proxy(IOmNavigator *This,VARIANT_BOOL *p);", "IOmNavigator_get_userProfile_Proxy": "HRESULT WINAPI IOmNavigator_get_userProfile_Proxy(IOmNavigator *This,IHTMLOpsProfile **p);", "IHTMLLocation_put_href_Proxy": "HRESULT WINAPI IHTMLLocation_put_href_Proxy(IHTMLLocation *This,BSTR v);", "IHTMLLocation_get_href_Proxy": "HRESULT WINAPI IHTMLLocation_get_href_Proxy(IHTMLLocation *This,BSTR *p);", "IHTMLLocation_put_protocol_Proxy": "HRESULT WINAPI IHTMLLocation_put_protocol_Proxy(IHTMLLocation *This,BSTR v);", "IHTMLLocation_get_protocol_Proxy": "HRESULT WINAPI IHTMLLocation_get_protocol_Proxy(IHTMLLocation *This,BSTR *p);", "IHTMLLocation_put_host_Proxy": "HRESULT WINAPI IHTMLLocation_put_host_Proxy(IHTMLLocation *This,BSTR v);", "IHTMLLocation_get_host_Proxy": "HRESULT WINAPI IHTMLLocation_get_host_Proxy(IHTMLLocation *This,BSTR *p);", "IHTMLLocation_put_hostname_Proxy": "HRESULT WINAPI IHTMLLocation_put_hostname_Proxy(IHTMLLocation *This,BSTR v);", "IHTMLLocation_get_hostname_Proxy": "HRESULT WINAPI IHTMLLocation_get_hostname_Proxy(IHTMLLocation *This,BSTR *p);", "IHTMLLocation_put_port_Proxy": "HRESULT WINAPI IHTMLLocation_put_port_Proxy(IHTMLLocation *This,BSTR v);", "IHTMLLocation_get_port_Proxy": "HRESULT WINAPI IHTMLLocation_get_port_Proxy(IHTMLLocation *This,BSTR *p);", "IHTMLLocation_put_pathname_Proxy": "HRESULT WINAPI IHTMLLocation_put_pathname_Proxy(IHTMLLocation *This,BSTR v);", "IHTMLLocation_get_pathname_Proxy": "HRESULT WINAPI IHTMLLocation_get_pathname_Proxy(IHTMLLocation *This,BSTR *p);", "IHTMLLocation_put_search_Proxy": "HRESULT WINAPI IHTMLLocation_put_search_Proxy(IHTMLLocation *This,BSTR v);", "IHTMLLocation_get_search_Proxy": "HRESULT WINAPI IHTMLLocation_get_search_Proxy(IHTMLLocation *This,BSTR *p);", "IHTMLLocation_put_hash_Proxy": "HRESULT WINAPI IHTMLLocation_put_hash_Proxy(IHTMLLocation *This,BSTR v);", "IHTMLLocation_get_hash_Proxy": "HRESULT WINAPI IHTMLLocation_get_hash_Proxy(IHTMLLocation *This,BSTR *p);", "IHTMLLocation_reload_Proxy": "HRESULT WINAPI IHTMLLocation_reload_Proxy(IHTMLLocation *This,VARIANT_BOOL flag);", "IHTMLLocation_replace_Proxy": "HRESULT WINAPI IHTMLLocation_replace_Proxy(IHTMLLocation *This,BSTR bstr);", "IHTMLLocation_assign_Proxy": "HRESULT WINAPI IHTMLLocation_assign_Proxy(IHTMLLocation *This,BSTR bstr);", "IHTMLLocation_toString_Proxy": "HRESULT WINAPI IHTMLLocation_toString_Proxy(IHTMLLocation *This,BSTR *string);", "IHTMLBookmarkCollection_get_length_Proxy": "HRESULT WINAPI IHTMLBookmarkCollection_get_length_Proxy(IHTMLBookmarkCollection *This,__LONG32 *p);", "IHTMLBookmarkCollection_get__newEnum_Proxy": "HRESULT WINAPI IHTMLBookmarkCollection_get__newEnum_Proxy(IHTMLBookmarkCollection *This,IUnknown **p);", "IHTMLBookmarkCollection_item_Proxy": "HRESULT WINAPI IHTMLBookmarkCollection_item_Proxy(IHTMLBookmarkCollection *This,__LONG32 index,VARIANT *pVarBookmark);", "IHTMLDataTransfer_setData_Proxy": "HRESULT WINAPI IHTMLDataTransfer_setData_Proxy(IHTMLDataTransfer *This,BSTR format,VARIANT *data,VARIANT_BOOL *pret);", "IHTMLDataTransfer_getData_Proxy": "HRESULT WINAPI IHTMLDataTransfer_getData_Proxy(IHTMLDataTransfer *This,BSTR format,VARIANT *pvarRet);", "IHTMLDataTransfer_clearData_Proxy": "HRESULT WINAPI IHTMLDataTransfer_clearData_Proxy(IHTMLDataTransfer *This,BSTR format,VARIANT_BOOL *pret);", "IHTMLDataTransfer_put_dropEffect_Proxy": "HRESULT WINAPI IHTMLDataTransfer_put_dropEffect_Proxy(IHTMLDataTransfer *This,BSTR v);", "IHTMLDataTransfer_get_dropEffect_Proxy": "HRESULT WINAPI IHTMLDataTransfer_get_dropEffect_Proxy(IHTMLDataTransfer *This,BSTR *p);", "IHTMLDataTransfer_put_effectAllowed_Proxy": "HRESULT WINAPI IHTMLDataTransfer_put_effectAllowed_Proxy(IHTMLDataTransfer *This,BSTR v);", "IHTMLDataTransfer_get_effectAllowed_Proxy": "HRESULT WINAPI IHTMLDataTransfer_get_effectAllowed_Proxy(IHTMLDataTransfer *This,BSTR *p);", "IHTMLEventObj2_setAttribute_Proxy": "HRESULT WINAPI IHTMLEventObj2_setAttribute_Proxy(IHTMLEventObj2 *This,BSTR strAttributeName,VARIANT AttributeValue,LONG lFlags);", "IHTMLEventObj2_getAttribute_Proxy": "HRESULT WINAPI IHTMLEventObj2_getAttribute_Proxy(IHTMLEventObj2 *This,BSTR strAttributeName,LONG lFlags,VARIANT *AttributeValue);", "IHTMLEventObj2_removeAttribute_Proxy": "HRESULT WINAPI IHTMLEventObj2_removeAttribute_Proxy(IHTMLEventObj2 *This,BSTR strAttributeName,LONG lFlags,VARIANT_BOOL *pfSuccess);", "IHTMLEventObj2_put_propertyName_Proxy": "HRESULT WINAPI IHTMLEventObj2_put_propertyName_Proxy(IHTMLEventObj2 *This,BSTR v);", "IHTMLEventObj2_get_propertyName_Proxy": "HRESULT WINAPI IHTMLEventObj2_get_propertyName_Proxy(IHTMLEventObj2 *This,BSTR *p);", "IHTMLEventObj2_putref_bookmarks_Proxy": "HRESULT WINAPI IHTMLEventObj2_putref_bookmarks_Proxy(IHTMLEventObj2 *This,IHTMLBookmarkCollection *v);", "IHTMLEventObj2_get_bookmarks_Proxy": "HRESULT WINAPI IHTMLEventObj2_get_bookmarks_Proxy(IHTMLEventObj2 *This,IHTMLBookmarkCollection **p);", "IHTMLEventObj2_putref_recordset_Proxy": "HRESULT WINAPI IHTMLEventObj2_putref_recordset_Proxy(IHTMLEventObj2 *This,IDispatch *v);", "IHTMLEventObj2_get_recordset_Proxy": "HRESULT WINAPI IHTMLEventObj2_get_recordset_Proxy(IHTMLEventObj2 *This,IDispatch **p);", "IHTMLEventObj2_put_dataFld_Proxy": "HRESULT WINAPI IHTMLEventObj2_put_dataFld_Proxy(IHTMLEventObj2 *This,BSTR v);", "IHTMLEventObj2_get_dataFld_Proxy": "HRESULT WINAPI IHTMLEventObj2_get_dataFld_Proxy(IHTMLEventObj2 *This,BSTR *p);", "IHTMLEventObj2_putref_boundElements_Proxy": "HRESULT WINAPI IHTMLEventObj2_putref_boundElements_Proxy(IHTMLEventObj2 *This,IHTMLElementCollection *v);", "IHTMLEventObj2_get_boundElements_Proxy": "HRESULT WINAPI IHTMLEventObj2_get_boundElements_Proxy(IHTMLEventObj2 *This,IHTMLElementCollection **p);", "IHTMLEventObj2_put_repeat_Proxy": "HRESULT WINAPI IHTMLEventObj2_put_repeat_Proxy(IHTMLEventObj2 *This,VARIANT_BOOL v);", "IHTMLEventObj2_get_repeat_Proxy": "HRESULT WINAPI IHTMLEventObj2_get_repeat_Proxy(IHTMLEventObj2 *This,VARIANT_BOOL *p);", "IHTMLEventObj2_put_srcUrn_Proxy": "HRESULT WINAPI IHTMLEventObj2_put_srcUrn_Proxy(IHTMLEventObj2 *This,BSTR v);", "IHTMLEventObj2_get_srcUrn_Proxy": "HRESULT WINAPI IHTMLEventObj2_get_srcUrn_Proxy(IHTMLEventObj2 *This,BSTR *p);", "IHTMLEventObj2_putref_srcElement_Proxy": "HRESULT WINAPI IHTMLEventObj2_putref_srcElement_Proxy(IHTMLEventObj2 *This,IHTMLElement *v);", "IHTMLEventObj2_get_srcElement_Proxy": "HRESULT WINAPI IHTMLEventObj2_get_srcElement_Proxy(IHTMLEventObj2 *This,IHTMLElement **p);", "IHTMLEventObj2_put_altKey_Proxy": "HRESULT WINAPI IHTMLEventObj2_put_altKey_Proxy(IHTMLEventObj2 *This,VARIANT_BOOL v);", "IHTMLEventObj2_get_altKey_Proxy": "HRESULT WINAPI IHTMLEventObj2_get_altKey_Proxy(IHTMLEventObj2 *This,VARIANT_BOOL *p);", "IHTMLEventObj2_put_ctrlKey_Proxy": "HRESULT WINAPI IHTMLEventObj2_put_ctrlKey_Proxy(IHTMLEventObj2 *This,VARIANT_BOOL v);", "IHTMLEventObj2_get_ctrlKey_Proxy": "HRESULT WINAPI IHTMLEventObj2_get_ctrlKey_Proxy(IHTMLEventObj2 *This,VARIANT_BOOL *p);", "IHTMLEventObj2_put_shiftKey_Proxy": "HRESULT WINAPI IHTMLEventObj2_put_shiftKey_Proxy(IHTMLEventObj2 *This,VARIANT_BOOL v);", "IHTMLEventObj2_get_shiftKey_Proxy": "HRESULT WINAPI IHTMLEventObj2_get_shiftKey_Proxy(IHTMLEventObj2 *This,VARIANT_BOOL *p);", "IHTMLEventObj2_putref_fromElement_Proxy": "HRESULT WINAPI IHTMLEventObj2_putref_fromElement_Proxy(IHTMLEventObj2 *This,IHTMLElement *v);", "IHTMLEventObj2_get_fromElement_Proxy": "HRESULT WINAPI IHTMLEventObj2_get_fromElement_Proxy(IHTMLEventObj2 *This,IHTMLElement **p);", "IHTMLEventObj2_putref_toElement_Proxy": "HRESULT WINAPI IHTMLEventObj2_putref_toElement_Proxy(IHTMLEventObj2 *This,IHTMLElement *v);", "IHTMLEventObj2_get_toElement_Proxy": "HRESULT WINAPI IHTMLEventObj2_get_toElement_Proxy(IHTMLEventObj2 *This,IHTMLElement **p);", "IHTMLEventObj2_put_button_Proxy": "HRESULT WINAPI IHTMLEventObj2_put_button_Proxy(IHTMLEventObj2 *This,__LONG32 v);", "IHTMLEventObj2_get_button_Proxy": "HRESULT WINAPI IHTMLEventObj2_get_button_Proxy(IHTMLEventObj2 *This,__LONG32 *p);", "IHTMLEventObj2_put_type_Proxy": "HRESULT WINAPI IHTMLEventObj2_put_type_Proxy(IHTMLEventObj2 *This,BSTR v);", "IHTMLEventObj2_get_type_Proxy": "HRESULT WINAPI IHTMLEventObj2_get_type_Proxy(IHTMLEventObj2 *This,BSTR *p);", "IHTMLEventObj2_put_qualifier_Proxy": "HRESULT WINAPI IHTMLEventObj2_put_qualifier_Proxy(IHTMLEventObj2 *This,BSTR v);", "IHTMLEventObj2_get_qualifier_Proxy": "HRESULT WINAPI IHTMLEventObj2_get_qualifier_Proxy(IHTMLEventObj2 *This,BSTR *p);", "IHTMLEventObj2_put_reason_Proxy": "HRESULT WINAPI IHTMLEventObj2_put_reason_Proxy(IHTMLEventObj2 *This,__LONG32 v);", "IHTMLEventObj2_get_reason_Proxy": "HRESULT WINAPI IHTMLEventObj2_get_reason_Proxy(IHTMLEventObj2 *This,__LONG32 *p);", "IHTMLEventObj2_put_x_Proxy": "HRESULT WINAPI IHTMLEventObj2_put_x_Proxy(IHTMLEventObj2 *This,__LONG32 v);", "IHTMLEventObj2_get_x_Proxy": "HRESULT WINAPI IHTMLEventObj2_get_x_Proxy(IHTMLEventObj2 *This,__LONG32 *p);", "IHTMLEventObj2_put_y_Proxy": "HRESULT WINAPI IHTMLEventObj2_put_y_Proxy(IHTMLEventObj2 *This,__LONG32 v);", "IHTMLEventObj2_get_y_Proxy": "HRESULT WINAPI IHTMLEventObj2_get_y_Proxy(IHTMLEventObj2 *This,__LONG32 *p);", "IHTMLEventObj2_put_clientX_Proxy": "HRESULT WINAPI IHTMLEventObj2_put_clientX_Proxy(IHTMLEventObj2 *This,__LONG32 v);", "IHTMLEventObj2_get_clientX_Proxy": "HRESULT WINAPI IHTMLEventObj2_get_clientX_Proxy(IHTMLEventObj2 *This,__LONG32 *p);", "IHTMLEventObj2_put_clientY_Proxy": "HRESULT WINAPI IHTMLEventObj2_put_clientY_Proxy(IHTMLEventObj2 *This,__LONG32 v);", "IHTMLEventObj2_get_clientY_Proxy": "HRESULT WINAPI IHTMLEventObj2_get_clientY_Proxy(IHTMLEventObj2 *This,__LONG32 *p);", "IHTMLEventObj2_put_offsetX_Proxy": "HRESULT WINAPI IHTMLEventObj2_put_offsetX_Proxy(IHTMLEventObj2 *This,__LONG32 v);", "IHTMLEventObj2_get_offsetX_Proxy": "HRESULT WINAPI IHTMLEventObj2_get_offsetX_Proxy(IHTMLEventObj2 *This,__LONG32 *p);", "IHTMLEventObj2_put_offsetY_Proxy": "HRESULT WINAPI IHTMLEventObj2_put_offsetY_Proxy(IHTMLEventObj2 *This,__LONG32 v);", "IHTMLEventObj2_get_offsetY_Proxy": "HRESULT WINAPI IHTMLEventObj2_get_offsetY_Proxy(IHTMLEventObj2 *This,__LONG32 *p);", "IHTMLEventObj2_put_screenX_Proxy": "HRESULT WINAPI IHTMLEventObj2_put_screenX_Proxy(IHTMLEventObj2 *This,__LONG32 v);", "IHTMLEventObj2_get_screenX_Proxy": "HRESULT WINAPI IHTMLEventObj2_get_screenX_Proxy(IHTMLEventObj2 *This,__LONG32 *p);", "IHTMLEventObj2_put_screenY_Proxy": "HRESULT WINAPI IHTMLEventObj2_put_screenY_Proxy(IHTMLEventObj2 *This,__LONG32 v);", "IHTMLEventObj2_get_screenY_Proxy": "HRESULT WINAPI IHTMLEventObj2_get_screenY_Proxy(IHTMLEventObj2 *This,__LONG32 *p);", "IHTMLEventObj2_putref_srcFilter_Proxy": "HRESULT WINAPI IHTMLEventObj2_putref_srcFilter_Proxy(IHTMLEventObj2 *This,IDispatch *v);", "IHTMLEventObj2_get_srcFilter_Proxy": "HRESULT WINAPI IHTMLEventObj2_get_srcFilter_Proxy(IHTMLEventObj2 *This,IDispatch **p);", "IHTMLEventObj2_get_dataTransfer_Proxy": "HRESULT WINAPI IHTMLEventObj2_get_dataTransfer_Proxy(IHTMLEventObj2 *This,IHTMLDataTransfer **p);", "IHTMLEventObj3_get_contentOverflow_Proxy": "HRESULT WINAPI IHTMLEventObj3_get_contentOverflow_Proxy(IHTMLEventObj3 *This,VARIANT_BOOL *p);", "IHTMLEventObj3_put_shiftLeft_Proxy": "HRESULT WINAPI IHTMLEventObj3_put_shiftLeft_Proxy(IHTMLEventObj3 *This,VARIANT_BOOL v);", "IHTMLEventObj3_get_shiftLeft_Proxy": "HRESULT WINAPI IHTMLEventObj3_get_shiftLeft_Proxy(IHTMLEventObj3 *This,VARIANT_BOOL *p);", "IHTMLEventObj3_put_altLeft_Proxy": "HRESULT WINAPI IHTMLEventObj3_put_altLeft_Proxy(IHTMLEventObj3 *This,VARIANT_BOOL v);", "IHTMLEventObj3_get_altLeft_Proxy": "HRESULT WINAPI IHTMLEventObj3_get_altLeft_Proxy(IHTMLEventObj3 *This,VARIANT_BOOL *p);", "IHTMLEventObj3_put_ctrlLeft_Proxy": "HRESULT WINAPI IHTMLEventObj3_put_ctrlLeft_Proxy(IHTMLEventObj3 *This,VARIANT_BOOL v);", "IHTMLEventObj3_get_ctrlLeft_Proxy": "HRESULT WINAPI IHTMLEventObj3_get_ctrlLeft_Proxy(IHTMLEventObj3 *This,VARIANT_BOOL *p);", "IHTMLEventObj3_get_imeCompositionChange_Proxy": "HRESULT WINAPI IHTMLEventObj3_get_imeCompositionChange_Proxy(IHTMLEventObj3 *This,LONG_PTR *p);", "IHTMLEventObj3_get_imeNotifyCommand_Proxy": "HRESULT WINAPI IHTMLEventObj3_get_imeNotifyCommand_Proxy(IHTMLEventObj3 *This,LONG_PTR *p);", "IHTMLEventObj3_get_imeNotifyData_Proxy": "HRESULT WINAPI IHTMLEventObj3_get_imeNotifyData_Proxy(IHTMLEventObj3 *This,LONG_PTR *p);", "IHTMLEventObj3_get_imeRequest_Proxy": "HRESULT WINAPI IHTMLEventObj3_get_imeRequest_Proxy(IHTMLEventObj3 *This,LONG_PTR *p);", "IHTMLEventObj3_get_imeRequestData_Proxy": "HRESULT WINAPI IHTMLEventObj3_get_imeRequestData_Proxy(IHTMLEventObj3 *This,LONG_PTR *p);", "IHTMLEventObj3_get_keyboardLayout_Proxy": "HRESULT WINAPI IHTMLEventObj3_get_keyboardLayout_Proxy(IHTMLEventObj3 *This,LONG_PTR *p);", "IHTMLEventObj3_get_behaviorCookie_Proxy": "HRESULT WINAPI IHTMLEventObj3_get_behaviorCookie_Proxy(IHTMLEventObj3 *This,__LONG32 *p);", "IHTMLEventObj3_get_behaviorPart_Proxy": "HRESULT WINAPI IHTMLEventObj3_get_behaviorPart_Proxy(IHTMLEventObj3 *This,__LONG32 *p);", "IHTMLEventObj3_get_nextPage_Proxy": "HRESULT WINAPI IHTMLEventObj3_get_nextPage_Proxy(IHTMLEventObj3 *This,BSTR *p);", "IHTMLEventObj4_get_wheelDelta_Proxy": "HRESULT WINAPI IHTMLEventObj4_get_wheelDelta_Proxy(IHTMLEventObj4 *This,__LONG32 *p);", "IHTMLDocument2_get_all_Proxy": "HRESULT WINAPI IHTMLDocument2_get_all_Proxy(IHTMLDocument2 *This,IHTMLElementCollection **p);", "IHTMLDocument2_get_body_Proxy": "HRESULT WINAPI IHTMLDocument2_get_body_Proxy(IHTMLDocument2 *This,IHTMLElement **p);", "IHTMLDocument2_get_activeElement_Proxy": "HRESULT WINAPI IHTMLDocument2_get_activeElement_Proxy(IHTMLDocument2 *This,IHTMLElement **p);", "IHTMLDocument2_get_images_Proxy": "HRESULT WINAPI IHTMLDocument2_get_images_Proxy(IHTMLDocument2 *This,IHTMLElementCollection **p);", "IHTMLDocument2_get_applets_Proxy": "HRESULT WINAPI IHTMLDocument2_get_applets_Proxy(IHTMLDocument2 *This,IHTMLElementCollection **p);", "IHTMLDocument2_get_links_Proxy": "HRESULT WINAPI IHTMLDocument2_get_links_Proxy(IHTMLDocument2 *This,IHTMLElementCollection **p);", "IHTMLDocument2_get_forms_Proxy": "HRESULT WINAPI IHTMLDocument2_get_forms_Proxy(IHTMLDocument2 *This,IHTMLElementCollection **p);", "IHTMLDocument2_get_anchors_Proxy": "HRESULT WINAPI IHTMLDocument2_get_anchors_Proxy(IHTMLDocument2 *This,IHTMLElementCollection **p);", "IHTMLDocument2_put_title_Proxy": "HRESULT WINAPI IHTMLDocument2_put_title_Proxy(IHTMLDocument2 *This,BSTR v);", "IHTMLDocument2_get_title_Proxy": "HRESULT WINAPI IHTMLDocument2_get_title_Proxy(IHTMLDocument2 *This,BSTR *p);", "IHTMLDocument2_get_scripts_Proxy": "HRESULT WINAPI IHTMLDocument2_get_scripts_Proxy(IHTMLDocument2 *This,IHTMLElementCollection **p);", "IHTMLDocument2_put_designMode_Proxy": "HRESULT WINAPI IHTMLDocument2_put_designMode_Proxy(IHTMLDocument2 *This,BSTR v);", "IHTMLDocument2_get_designMode_Proxy": "HRESULT WINAPI IHTMLDocument2_get_designMode_Proxy(IHTMLDocument2 *This,BSTR *p);", "IHTMLDocument2_get_selection_Proxy": "HRESULT WINAPI IHTMLDocument2_get_selection_Proxy(IHTMLDocument2 *This,IHTMLSelectionObject **p);", "IHTMLDocument2_get_readyState_Proxy": "HRESULT WINAPI IHTMLDocument2_get_readyState_Proxy(IHTMLDocument2 *This,BSTR *p);", "IHTMLDocument2_get_frames_Proxy": "HRESULT WINAPI IHTMLDocument2_get_frames_Proxy(IHTMLDocument2 *This,IHTMLFramesCollection2 **p);", "IHTMLDocument2_get_embeds_Proxy": "HRESULT WINAPI IHTMLDocument2_get_embeds_Proxy(IHTMLDocument2 *This,IHTMLElementCollection **p);", "IHTMLDocument2_get_plugins_Proxy": "HRESULT WINAPI IHTMLDocument2_get_plugins_Proxy(IHTMLDocument2 *This,IHTMLElementCollection **p);", "IHTMLDocument2_put_alinkColor_Proxy": "HRESULT WINAPI IHTMLDocument2_put_alinkColor_Proxy(IHTMLDocument2 *This,VARIANT v);", "IHTMLDocument2_get_alinkColor_Proxy": "HRESULT WINAPI IHTMLDocument2_get_alinkColor_Proxy(IHTMLDocument2 *This,VARIANT *p);", "IHTMLDocument2_put_bgColor_Proxy": "HRESULT WINAPI IHTMLDocument2_put_bgColor_Proxy(IHTMLDocument2 *This,VARIANT v);", "IHTMLDocument2_get_bgColor_Proxy": "HRESULT WINAPI IHTMLDocument2_get_bgColor_Proxy(IHTMLDocument2 *This,VARIANT *p);", "IHTMLDocument2_put_fgColor_Proxy": "HRESULT WINAPI IHTMLDocument2_put_fgColor_Proxy(IHTMLDocument2 *This,VARIANT v);", "IHTMLDocument2_get_fgColor_Proxy": "HRESULT WINAPI IHTMLDocument2_get_fgColor_Proxy(IHTMLDocument2 *This,VARIANT *p);", "IHTMLDocument2_put_linkColor_Proxy": "HRESULT WINAPI IHTMLDocument2_put_linkColor_Proxy(IHTMLDocument2 *This,VARIANT v);", "IHTMLDocument2_get_linkColor_Proxy": "HRESULT WINAPI IHTMLDocument2_get_linkColor_Proxy(IHTMLDocument2 *This,VARIANT *p);", "IHTMLDocument2_put_vlinkColor_Proxy": "HRESULT WINAPI IHTMLDocument2_put_vlinkColor_Proxy(IHTMLDocument2 *This,VARIANT v);", "IHTMLDocument2_get_vlinkColor_Proxy": "HRESULT WINAPI IHTMLDocument2_get_vlinkColor_Proxy(IHTMLDocument2 *This,VARIANT *p);", "IHTMLDocument2_get_referrer_Proxy": "HRESULT WINAPI IHTMLDocument2_get_referrer_Proxy(IHTMLDocument2 *This,BSTR *p);", "IHTMLDocument2_get_location_Proxy": "HRESULT WINAPI IHTMLDocument2_get_location_Proxy(IHTMLDocument2 *This,IHTMLLocation **p);", "IHTMLDocument2_get_lastModified_Proxy": "HRESULT WINAPI IHTMLDocument2_get_lastModified_Proxy(IHTMLDocument2 *This,BSTR *p);", "IHTMLDocument2_put_URL_Proxy": "HRESULT WINAPI IHTMLDocument2_put_URL_Proxy(IHTMLDocument2 *This,BSTR v);", "IHTMLDocument2_get_URL_Proxy": "HRESULT WINAPI IHTMLDocument2_get_URL_Proxy(IHTMLDocument2 *This,BSTR *p);", "IHTMLDocument2_put_domain_Proxy": "HRESULT WINAPI IHTMLDocument2_put_domain_Proxy(IHTMLDocument2 *This,BSTR v);", "IHTMLDocument2_get_domain_Proxy": "HRESULT WINAPI IHTMLDocument2_get_domain_Proxy(IHTMLDocument2 *This,BSTR *p);", "IHTMLDocument2_put_cookie_Proxy": "HRESULT WINAPI IHTMLDocument2_put_cookie_Proxy(IHTMLDocument2 *This,BSTR v);", "IHTMLDocument2_get_cookie_Proxy": "HRESULT WINAPI IHTMLDocument2_get_cookie_Proxy(IHTMLDocument2 *This,BSTR *p);", "IHTMLDocument2_put_expando_Proxy": "HRESULT WINAPI IHTMLDocument2_put_expando_Proxy(IHTMLDocument2 *This,VARIANT_BOOL v);", "IHTMLDocument2_get_expando_Proxy": "HRESULT WINAPI IHTMLDocument2_get_expando_Proxy(IHTMLDocument2 *This,VARIANT_BOOL *p);", "IHTMLDocument2_put_charset_Proxy": "HRESULT WINAPI IHTMLDocument2_put_charset_Proxy(IHTMLDocument2 *This,BSTR v);", "IHTMLDocument2_get_charset_Proxy": "HRESULT WINAPI IHTMLDocument2_get_charset_Proxy(IHTMLDocument2 *This,BSTR *p);", "IHTMLDocument2_put_defaultCharset_Proxy": "HRESULT WINAPI IHTMLDocument2_put_defaultCharset_Proxy(IHTMLDocument2 *This,BSTR v);", "IHTMLDocument2_get_defaultCharset_Proxy": "HRESULT WINAPI IHTMLDocument2_get_defaultCharset_Proxy(IHTMLDocument2 *This,BSTR *p);", "IHTMLDocument2_get_mimeType_Proxy": "HRESULT WINAPI IHTMLDocument2_get_mimeType_Proxy(IHTMLDocument2 *This,BSTR *p);", "IHTMLDocument2_get_fileSize_Proxy": "HRESULT WINAPI IHTMLDocument2_get_fileSize_Proxy(IHTMLDocument2 *This,BSTR *p);", "IHTMLDocument2_get_fileCreatedDate_Proxy": "HRESULT WINAPI IHTMLDocument2_get_fileCreatedDate_Proxy(IHTMLDocument2 *This,BSTR *p);", "IHTMLDocument2_get_fileModifiedDate_Proxy": "HRESULT WINAPI IHTMLDocument2_get_fileModifiedDate_Proxy(IHTMLDocument2 *This,BSTR *p);", "IHTMLDocument2_get_fileUpdatedDate_Proxy": "HRESULT WINAPI IHTMLDocument2_get_fileUpdatedDate_Proxy(IHTMLDocument2 *This,BSTR *p);", "IHTMLDocument2_get_security_Proxy": "HRESULT WINAPI IHTMLDocument2_get_security_Proxy(IHTMLDocument2 *This,BSTR *p);", "IHTMLDocument2_get_protocol_Proxy": "HRESULT WINAPI IHTMLDocument2_get_protocol_Proxy(IHTMLDocument2 *This,BSTR *p);", "IHTMLDocument2_get_nameProp_Proxy": "HRESULT WINAPI IHTMLDocument2_get_nameProp_Proxy(IHTMLDocument2 *This,BSTR *p);", "IHTMLDocument2_write_Proxy": "HRESULT WINAPI IHTMLDocument2_write_Proxy(IHTMLDocument2 *This,SAFEARRAY *psarray);", "IHTMLDocument2_writeln_Proxy": "HRESULT WINAPI IHTMLDocument2_writeln_Proxy(IHTMLDocument2 *This,SAFEARRAY *psarray);", "IHTMLDocument2_open_Proxy": "HRESULT WINAPI IHTMLDocument2_open_Proxy(IHTMLDocument2 *This,BSTR url,VARIANT name,VARIANT features,VARIANT replace,IDispatch **pomWindowResult);", "IHTMLDocument2_close_Proxy": "HRESULT WINAPI IHTMLDocument2_close_Proxy(IHTMLDocument2 *This);", "IHTMLDocument2_clear_Proxy": "HRESULT WINAPI IHTMLDocument2_clear_Proxy(IHTMLDocument2 *This);", "IHTMLDocument2_queryCommandSupported_Proxy": "HRESULT WINAPI IHTMLDocument2_queryCommandSupported_Proxy(IHTMLDocument2 *This,BSTR cmdID,VARIANT_BOOL *pfRet);", "IHTMLDocument2_queryCommandEnabled_Proxy": "HRESULT WINAPI IHTMLDocument2_queryCommandEnabled_Proxy(IHTMLDocument2 *This,BSTR cmdID,VARIANT_BOOL *pfRet);", "IHTMLDocument2_queryCommandState_Proxy": "HRESULT WINAPI IHTMLDocument2_queryCommandState_Proxy(IHTMLDocument2 *This,BSTR cmdID,VARIANT_BOOL *pfRet);", "IHTMLDocument2_queryCommandIndeterm_Proxy": "HRESULT WINAPI IHTMLDocument2_queryCommandIndeterm_Proxy(IHTMLDocument2 *This,BSTR cmdID,VARIANT_BOOL *pfRet);", "IHTMLDocument2_queryCommandText_Proxy": "HRESULT WINAPI IHTMLDocument2_queryCommandText_Proxy(IHTMLDocument2 *This,BSTR cmdID,BSTR *pcmdText);", "IHTMLDocument2_queryCommandValue_Proxy": "HRESULT WINAPI IHTMLDocument2_queryCommandValue_Proxy(IHTMLDocument2 *This,BSTR cmdID,VARIANT *pcmdValue);", "IHTMLDocument2_execCommand_Proxy": "HRESULT WINAPI IHTMLDocument2_execCommand_Proxy(IHTMLDocument2 *This,BSTR cmdID,VARIANT_BOOL showUI,VARIANT value,VARIANT_BOOL *pfRet);", "IHTMLDocument2_execCommandShowHelp_Proxy": "HRESULT WINAPI IHTMLDocument2_execCommandShowHelp_Proxy(IHTMLDocument2 *This,BSTR cmdID,VARIANT_BOOL *pfRet);", "IHTMLDocument2_createElement_Proxy": "HRESULT WINAPI IHTMLDocument2_createElement_Proxy(IHTMLDocument2 *This,BSTR eTag,IHTMLElement **newElem);", "IHTMLDocument2_put_onhelp_Proxy": "HRESULT WINAPI IHTMLDocument2_put_onhelp_Proxy(IHTMLDocument2 *This,VARIANT v);", "IHTMLDocument2_get_onhelp_Proxy": "HRESULT WINAPI IHTMLDocument2_get_onhelp_Proxy(IHTMLDocument2 *This,VARIANT *p);", "IHTMLDocument2_put_onclick_Proxy": "HRESULT WINAPI IHTMLDocument2_put_onclick_Proxy(IHTMLDocument2 *This,VARIANT v);", "IHTMLDocument2_get_onclick_Proxy": "HRESULT WINAPI IHTMLDocument2_get_onclick_Proxy(IHTMLDocument2 *This,VARIANT *p);", "IHTMLDocument2_put_ondblclick_Proxy": "HRESULT WINAPI IHTMLDocument2_put_ondblclick_Proxy(IHTMLDocument2 *This,VARIANT v);", "IHTMLDocument2_get_ondblclick_Proxy": "HRESULT WINAPI IHTMLDocument2_get_ondblclick_Proxy(IHTMLDocument2 *This,VARIANT *p);", "IHTMLDocument2_put_onkeyup_Proxy": "HRESULT WINAPI IHTMLDocument2_put_onkeyup_Proxy(IHTMLDocument2 *This,VARIANT v);", "IHTMLDocument2_get_onkeyup_Proxy": "HRESULT WINAPI IHTMLDocument2_get_onkeyup_Proxy(IHTMLDocument2 *This,VARIANT *p);", "IHTMLDocument2_put_onkeydown_Proxy": "HRESULT WINAPI IHTMLDocument2_put_onkeydown_Proxy(IHTMLDocument2 *This,VARIANT v);", "IHTMLDocument2_get_onkeydown_Proxy": "HRESULT WINAPI IHTMLDocument2_get_onkeydown_Proxy(IHTMLDocument2 *This,VARIANT *p);", "IHTMLDocument2_put_onkeypress_Proxy": "HRESULT WINAPI IHTMLDocument2_put_onkeypress_Proxy(IHTMLDocument2 *This,VARIANT v);", "IHTMLDocument2_get_onkeypress_Proxy": "HRESULT WINAPI IHTMLDocument2_get_onkeypress_Proxy(IHTMLDocument2 *This,VARIANT *p);", "IHTMLDocument2_put_onmouseup_Proxy": "HRESULT WINAPI IHTMLDocument2_put_onmouseup_Proxy(IHTMLDocument2 *This,VARIANT v);", "IHTMLDocument2_get_onmouseup_Proxy": "HRESULT WINAPI IHTMLDocument2_get_onmouseup_Proxy(IHTMLDocument2 *This,VARIANT *p);", "IHTMLDocument2_put_onmousedown_Proxy": "HRESULT WINAPI IHTMLDocument2_put_onmousedown_Proxy(IHTMLDocument2 *This,VARIANT v);", "IHTMLDocument2_get_onmousedown_Proxy": "HRESULT WINAPI IHTMLDocument2_get_onmousedown_Proxy(IHTMLDocument2 *This,VARIANT *p);", "IHTMLDocument2_put_onmousemove_Proxy": "HRESULT WINAPI IHTMLDocument2_put_onmousemove_Proxy(IHTMLDocument2 *This,VARIANT v);", "IHTMLDocument2_get_onmousemove_Proxy": "HRESULT WINAPI IHTMLDocument2_get_onmousemove_Proxy(IHTMLDocument2 *This,VARIANT *p);", "IHTMLDocument2_put_onmouseout_Proxy": "HRESULT WINAPI IHTMLDocument2_put_onmouseout_Proxy(IHTMLDocument2 *This,VARIANT v);", "IHTMLDocument2_get_onmouseout_Proxy": "HRESULT WINAPI IHTMLDocument2_get_onmouseout_Proxy(IHTMLDocument2 *This,VARIANT *p);", "IHTMLDocument2_put_onmouseover_Proxy": "HRESULT WINAPI IHTMLDocument2_put_onmouseover_Proxy(IHTMLDocument2 *This,VARIANT v);", "IHTMLDocument2_get_onmouseover_Proxy": "HRESULT WINAPI IHTMLDocument2_get_onmouseover_Proxy(IHTMLDocument2 *This,VARIANT *p);", "IHTMLDocument2_put_onreadystatechange_Proxy": "HRESULT WINAPI IHTMLDocument2_put_onreadystatechange_Proxy(IHTMLDocument2 *This,VARIANT v);", "IHTMLDocument2_get_onreadystatechange_Proxy": "HRESULT WINAPI IHTMLDocument2_get_onreadystatechange_Proxy(IHTMLDocument2 *This,VARIANT *p);", "IHTMLDocument2_put_onafterupdate_Proxy": "HRESULT WINAPI IHTMLDocument2_put_onafterupdate_Proxy(IHTMLDocument2 *This,VARIANT v);", "IHTMLDocument2_get_onafterupdate_Proxy": "HRESULT WINAPI IHTMLDocument2_get_onafterupdate_Proxy(IHTMLDocument2 *This,VARIANT *p);", "IHTMLDocument2_put_onrowexit_Proxy": "HRESULT WINAPI IHTMLDocument2_put_onrowexit_Proxy(IHTMLDocument2 *This,VARIANT v);", "IHTMLDocument2_get_onrowexit_Proxy": "HRESULT WINAPI IHTMLDocument2_get_onrowexit_Proxy(IHTMLDocument2 *This,VARIANT *p);", "IHTMLDocument2_put_onrowenter_Proxy": "HRESULT WINAPI IHTMLDocument2_put_onrowenter_Proxy(IHTMLDocument2 *This,VARIANT v);", "IHTMLDocument2_get_onrowenter_Proxy": "HRESULT WINAPI IHTMLDocument2_get_onrowenter_Proxy(IHTMLDocument2 *This,VARIANT *p);", "IHTMLDocument2_put_ondragstart_Proxy": "HRESULT WINAPI IHTMLDocument2_put_ondragstart_Proxy(IHTMLDocument2 *This,VARIANT v);", "IHTMLDocument2_get_ondragstart_Proxy": "HRESULT WINAPI IHTMLDocument2_get_ondragstart_Proxy(IHTMLDocument2 *This,VARIANT *p);", "IHTMLDocument2_put_onselectstart_Proxy": "HRESULT WINAPI IHTMLDocument2_put_onselectstart_Proxy(IHTMLDocument2 *This,VARIANT v);", "IHTMLDocument2_get_onselectstart_Proxy": "HRESULT WINAPI IHTMLDocument2_get_onselectstart_Proxy(IHTMLDocument2 *This,VARIANT *p);", "IHTMLDocument2_elementFromPoint_Proxy": "HRESULT WINAPI IHTMLDocument2_elementFromPoint_Proxy(IHTMLDocument2 *This,__LONG32 x,__LONG32 y,IHTMLElement **elementHit);", "IHTMLDocument2_get_parentWindow_Proxy": "HRESULT WINAPI IHTMLDocument2_get_parentWindow_Proxy(IHTMLDocument2 *This,IHTMLWindow2 **p);", "IHTMLDocument2_get_styleSheets_Proxy": "HRESULT WINAPI IHTMLDocument2_get_styleSheets_Proxy(IHTMLDocument2 *This,IHTMLStyleSheetsCollection **p);", "IHTMLDocument2_put_onbeforeupdate_Proxy": "HRESULT WINAPI IHTMLDocument2_put_onbeforeupdate_Proxy(IHTMLDocument2 *This,VARIANT v);", "IHTMLDocument2_get_onbeforeupdate_Proxy": "HRESULT WINAPI IHTMLDocument2_get_onbeforeupdate_Proxy(IHTMLDocument2 *This,VARIANT *p);", "IHTMLDocument2_put_onerrorupdate_Proxy": "HRESULT WINAPI IHTMLDocument2_put_onerrorupdate_Proxy(IHTMLDocument2 *This,VARIANT v);", "IHTMLDocument2_get_onerrorupdate_Proxy": "HRESULT WINAPI IHTMLDocument2_get_onerrorupdate_Proxy(IHTMLDocument2 *This,VARIANT *p);", "IHTMLDocument2_toString_Proxy": "HRESULT WINAPI IHTMLDocument2_toString_Proxy(IHTMLDocument2 *This,BSTR *String);", "IHTMLDocument2_createStyleSheet_Proxy": "HRESULT WINAPI IHTMLDocument2_createStyleSheet_Proxy(IHTMLDocument2 *This,BSTR bstrHref,__LONG32 lIndex,IHTMLStyleSheet **ppnewStyleSheet);", "IHTMLFramesCollection2_item_Proxy": "HRESULT WINAPI IHTMLFramesCollection2_item_Proxy(IHTMLFramesCollection2 *This,VARIANT *pvarIndex,VARIANT *pvarResult);", "IHTMLFramesCollection2_get_length_Proxy": "HRESULT WINAPI IHTMLFramesCollection2_get_length_Proxy(IHTMLFramesCollection2 *This,__LONG32 *p);", "IHTMLWindow2_get_frames_Proxy": "HRESULT WINAPI IHTMLWindow2_get_frames_Proxy(IHTMLWindow2 *This,IHTMLFramesCollection2 **p);", "IHTMLWindow2_put_defaultStatus_Proxy": "HRESULT WINAPI IHTMLWindow2_put_defaultStatus_Proxy(IHTMLWindow2 *This,BSTR v);", "IHTMLWindow2_get_defaultStatus_Proxy": "HRESULT WINAPI IHTMLWindow2_get_defaultStatus_Proxy(IHTMLWindow2 *This,BSTR *p);", "IHTMLWindow2_put_status_Proxy": "HRESULT WINAPI IHTMLWindow2_put_status_Proxy(IHTMLWindow2 *This,BSTR v);", "IHTMLWindow2_get_status_Proxy": "HRESULT WINAPI IHTMLWindow2_get_status_Proxy(IHTMLWindow2 *This,BSTR *p);", "IHTMLWindow2_setTimeout_Proxy": "HRESULT WINAPI IHTMLWindow2_setTimeout_Proxy(IHTMLWindow2 *This,BSTR expression,__LONG32 msec,VARIANT *language,__LONG32 *timerID);", "IHTMLWindow2_clearTimeout_Proxy": "HRESULT WINAPI IHTMLWindow2_clearTimeout_Proxy(IHTMLWindow2 *This,__LONG32 timerID);", "IHTMLWindow2_alert_Proxy": "HRESULT WINAPI IHTMLWindow2_alert_Proxy(IHTMLWindow2 *This,BSTR message);", "IHTMLWindow2_confirm_Proxy": "HRESULT WINAPI IHTMLWindow2_confirm_Proxy(IHTMLWindow2 *This,BSTR message,VARIANT_BOOL *confirmed);", "IHTMLWindow2_prompt_Proxy": "HRESULT WINAPI IHTMLWindow2_prompt_Proxy(IHTMLWindow2 *This,BSTR message,BSTR defstr,VARIANT *textdata);", "IHTMLWindow2_get_Image_Proxy": "HRESULT WINAPI IHTMLWindow2_get_Image_Proxy(IHTMLWindow2 *This,IHTMLImageElementFactory **p);", "IHTMLWindow2_get_location_Proxy": "HRESULT WINAPI IHTMLWindow2_get_location_Proxy(IHTMLWindow2 *This,IHTMLLocation **p);", "IHTMLWindow2_get_history_Proxy": "HRESULT WINAPI IHTMLWindow2_get_history_Proxy(IHTMLWindow2 *This,IOmHistory **p);", "IHTMLWindow2_close_Proxy": "HRESULT WINAPI IHTMLWindow2_close_Proxy(IHTMLWindow2 *This);", "IHTMLWindow2_put_opener_Proxy": "HRESULT WINAPI IHTMLWindow2_put_opener_Proxy(IHTMLWindow2 *This,VARIANT v);", "IHTMLWindow2_get_opener_Proxy": "HRESULT WINAPI IHTMLWindow2_get_opener_Proxy(IHTMLWindow2 *This,VARIANT *p);", "IHTMLWindow2_get_navigator_Proxy": "HRESULT WINAPI IHTMLWindow2_get_navigator_Proxy(IHTMLWindow2 *This,IOmNavigator **p);", "IHTMLWindow2_put_name_Proxy": "HRESULT WINAPI IHTMLWindow2_put_name_Proxy(IHTMLWindow2 *This,BSTR v);", "IHTMLWindow2_get_name_Proxy": "HRESULT WINAPI IHTMLWindow2_get_name_Proxy(IHTMLWindow2 *This,BSTR *p);", "IHTMLWindow2_get_parent_Proxy": "HRESULT WINAPI IHTMLWindow2_get_parent_Proxy(IHTMLWindow2 *This,IHTMLWindow2 **p);", "IHTMLWindow2_open_Proxy": "HRESULT WINAPI IHTMLWindow2_open_Proxy(IHTMLWindow2 *This,BSTR url,BSTR name,BSTR features,VARIANT_BOOL replace,IHTMLWindow2 **pomWindowResult);", "IHTMLWindow2_get_self_Proxy": "HRESULT WINAPI IHTMLWindow2_get_self_Proxy(IHTMLWindow2 *This,IHTMLWindow2 **p);", "IHTMLWindow2_get_top_Proxy": "HRESULT WINAPI IHTMLWindow2_get_top_Proxy(IHTMLWindow2 *This,IHTMLWindow2 **p);", "IHTMLWindow2_get_window_Proxy": "HRESULT WINAPI IHTMLWindow2_get_window_Proxy(IHTMLWindow2 *This,IHTMLWindow2 **p);", "IHTMLWindow2_navigate_Proxy": "HRESULT WINAPI IHTMLWindow2_navigate_Proxy(IHTMLWindow2 *This,BSTR url);", "IHTMLWindow2_put_onfocus_Proxy": "HRESULT WINAPI IHTMLWindow2_put_onfocus_Proxy(IHTMLWindow2 *This,VARIANT v);", "IHTMLWindow2_get_onfocus_Proxy": "HRESULT WINAPI IHTMLWindow2_get_onfocus_Proxy(IHTMLWindow2 *This,VARIANT *p);", "IHTMLWindow2_put_onblur_Proxy": "HRESULT WINAPI IHTMLWindow2_put_onblur_Proxy(IHTMLWindow2 *This,VARIANT v);", "IHTMLWindow2_get_onblur_Proxy": "HRESULT WINAPI IHTMLWindow2_get_onblur_Proxy(IHTMLWindow2 *This,VARIANT *p);", "IHTMLWindow2_put_onload_Proxy": "HRESULT WINAPI IHTMLWindow2_put_onload_Proxy(IHTMLWindow2 *This,VARIANT v);", "IHTMLWindow2_get_onload_Proxy": "HRESULT WINAPI IHTMLWindow2_get_onload_Proxy(IHTMLWindow2 *This,VARIANT *p);", "IHTMLWindow2_put_onbeforeunload_Proxy": "HRESULT WINAPI IHTMLWindow2_put_onbeforeunload_Proxy(IHTMLWindow2 *This,VARIANT v);", "IHTMLWindow2_get_onbeforeunload_Proxy": "HRESULT WINAPI IHTMLWindow2_get_onbeforeunload_Proxy(IHTMLWindow2 *This,VARIANT *p);", "IHTMLWindow2_put_onunload_Proxy": "HRESULT WINAPI IHTMLWindow2_put_onunload_Proxy(IHTMLWindow2 *This,VARIANT v);", "IHTMLWindow2_get_onunload_Proxy": "HRESULT WINAPI IHTMLWindow2_get_onunload_Proxy(IHTMLWindow2 *This,VARIANT *p);", "IHTMLWindow2_put_onhelp_Proxy": "HRESULT WINAPI IHTMLWindow2_put_onhelp_Proxy(IHTMLWindow2 *This,VARIANT v);", "IHTMLWindow2_get_onhelp_Proxy": "HRESULT WINAPI IHTMLWindow2_get_onhelp_Proxy(IHTMLWindow2 *This,VARIANT *p);", "IHTMLWindow2_put_onerror_Proxy": "HRESULT WINAPI IHTMLWindow2_put_onerror_Proxy(IHTMLWindow2 *This,VARIANT v);", "IHTMLWindow2_get_onerror_Proxy": "HRESULT WINAPI IHTMLWindow2_get_onerror_Proxy(IHTMLWindow2 *This,VARIANT *p);", "IHTMLWindow2_put_onresize_Proxy": "HRESULT WINAPI IHTMLWindow2_put_onresize_Proxy(IHTMLWindow2 *This,VARIANT v);", "IHTMLWindow2_get_onresize_Proxy": "HRESULT WINAPI IHTMLWindow2_get_onresize_Proxy(IHTMLWindow2 *This,VARIANT *p);", "IHTMLWindow2_put_onscroll_Proxy": "HRESULT WINAPI IHTMLWindow2_put_onscroll_Proxy(IHTMLWindow2 *This,VARIANT v);", "IHTMLWindow2_get_onscroll_Proxy": "HRESULT WINAPI IHTMLWindow2_get_onscroll_Proxy(IHTMLWindow2 *This,VARIANT *p);", "IHTMLWindow2_get_document_Proxy": "HRESULT WINAPI IHTMLWindow2_get_document_Proxy(IHTMLWindow2 *This,IHTMLDocument2 **p);", "IHTMLWindow2_get_event_Proxy": "HRESULT WINAPI IHTMLWindow2_get_event_Proxy(IHTMLWindow2 *This,IHTMLEventObj **p);", "IHTMLWindow2_get__newEnum_Proxy": "HRESULT WINAPI IHTMLWindow2_get__newEnum_Proxy(IHTMLWindow2 *This,IUnknown **p);", "IHTMLWindow2_showModalDialog_Proxy": "HRESULT WINAPI IHTMLWindow2_showModalDialog_Proxy(IHTMLWindow2 *This,BSTR dialog,VARIANT *varArgIn,VARIANT *varOptions,VARIANT *varArgOut);", "IHTMLWindow2_showHelp_Proxy": "HRESULT WINAPI IHTMLWindow2_showHelp_Proxy(IHTMLWindow2 *This,BSTR helpURL,VARIANT helpArg,BSTR features);", "IHTMLWindow2_get_screen_Proxy": "HRESULT WINAPI IHTMLWindow2_get_screen_Proxy(IHTMLWindow2 *This,IHTMLScreen **p);", "IHTMLWindow2_get_Option_Proxy": "HRESULT WINAPI IHTMLWindow2_get_Option_Proxy(IHTMLWindow2 *This,IHTMLOptionElementFactory **p);", "IHTMLWindow2_focus_Proxy": "HRESULT WINAPI IHTMLWindow2_focus_Proxy(IHTMLWindow2 *This);", "IHTMLWindow2_get_closed_Proxy": "HRESULT WINAPI IHTMLWindow2_get_closed_Proxy(IHTMLWindow2 *This,VARIANT_BOOL *p);", "IHTMLWindow2_blur_Proxy": "HRESULT WINAPI IHTMLWindow2_blur_Proxy(IHTMLWindow2 *This);", "IHTMLWindow2_scroll_Proxy": "HRESULT WINAPI IHTMLWindow2_scroll_Proxy(IHTMLWindow2 *This,__LONG32 x,__LONG32 y);", "IHTMLWindow2_get_clientInformation_Proxy": "HRESULT WINAPI IHTMLWindow2_get_clientInformation_Proxy(IHTMLWindow2 *This,IOmNavigator **p);", "IHTMLWindow2_setInterval_Proxy": "HRESULT WINAPI IHTMLWindow2_setInterval_Proxy(IHTMLWindow2 *This,BSTR expression,__LONG32 msec,VARIANT *language,__LONG32 *timerID);", "IHTMLWindow2_clearInterval_Proxy": "HRESULT WINAPI IHTMLWindow2_clearInterval_Proxy(IHTMLWindow2 *This,__LONG32 timerID);", "IHTMLWindow2_put_offscreenBuffering_Proxy": "HRESULT WINAPI IHTMLWindow2_put_offscreenBuffering_Proxy(IHTMLWindow2 *This,VARIANT v);", "IHTMLWindow2_get_offscreenBuffering_Proxy": "HRESULT WINAPI IHTMLWindow2_get_offscreenBuffering_Proxy(IHTMLWindow2 *This,VARIANT *p);", "IHTMLWindow2_execScript_Proxy": "HRESULT WINAPI IHTMLWindow2_execScript_Proxy(IHTMLWindow2 *This,BSTR code,BSTR language,VARIANT *pvarRet);", "IHTMLWindow2_toString_Proxy": "HRESULT WINAPI IHTMLWindow2_toString_Proxy(IHTMLWindow2 *This,BSTR *String);", "IHTMLWindow2_scrollBy_Proxy": "HRESULT WINAPI IHTMLWindow2_scrollBy_Proxy(IHTMLWindow2 *This,__LONG32 x,__LONG32 y);", "IHTMLWindow2_scrollTo_Proxy": "HRESULT WINAPI IHTMLWindow2_scrollTo_Proxy(IHTMLWindow2 *This,__LONG32 x,__LONG32 y);", "IHTMLWindow2_moveTo_Proxy": "HRESULT WINAPI IHTMLWindow2_moveTo_Proxy(IHTMLWindow2 *This,__LONG32 x,__LONG32 y);", "IHTMLWindow2_moveBy_Proxy": "HRESULT WINAPI IHTMLWindow2_moveBy_Proxy(IHTMLWindow2 *This,__LONG32 x,__LONG32 y);", "IHTMLWindow2_resizeTo_Proxy": "HRESULT WINAPI IHTMLWindow2_resizeTo_Proxy(IHTMLWindow2 *This,__LONG32 x,__LONG32 y);", "IHTMLWindow2_resizeBy_Proxy": "HRESULT WINAPI IHTMLWindow2_resizeBy_Proxy(IHTMLWindow2 *This,__LONG32 x,__LONG32 y);", "IHTMLWindow2_get_external_Proxy": "HRESULT WINAPI IHTMLWindow2_get_external_Proxy(IHTMLWindow2 *This,IDispatch **p);", "IHTMLWindow3_get_screenLeft_Proxy": "HRESULT WINAPI IHTMLWindow3_get_screenLeft_Proxy(IHTMLWindow3 *This,__LONG32 *p);", "IHTMLWindow3_get_screenTop_Proxy": "HRESULT WINAPI IHTMLWindow3_get_screenTop_Proxy(IHTMLWindow3 *This,__LONG32 *p);", "IHTMLWindow3_attachEvent_Proxy": "HRESULT WINAPI IHTMLWindow3_attachEvent_Proxy(IHTMLWindow3 *This,BSTR event,IDispatch *pDisp,VARIANT_BOOL *pfResult);", "IHTMLWindow3_detachEvent_Proxy": "HRESULT WINAPI IHTMLWindow3_detachEvent_Proxy(IHTMLWindow3 *This,BSTR event,IDispatch *pDisp);", "IHTMLWindow3_setTimeout_Proxy": "HRESULT WINAPI IHTMLWindow3_setTimeout_Proxy(IHTMLWindow3 *This,VARIANT *expression,__LONG32 msec,VARIANT *language,__LONG32 *timerID);", "IHTMLWindow3_setInterval_Proxy": "HRESULT WINAPI IHTMLWindow3_setInterval_Proxy(IHTMLWindow3 *This,VARIANT *expression,__LONG32 msec,VARIANT *language,__LONG32 *timerID);", "IHTMLWindow3_print_Proxy": "HRESULT WINAPI IHTMLWindow3_print_Proxy(IHTMLWindow3 *This);", "IHTMLWindow3_put_onbeforeprint_Proxy": "HRESULT WINAPI IHTMLWindow3_put_onbeforeprint_Proxy(IHTMLWindow3 *This,VARIANT v);", "IHTMLWindow3_get_onbeforeprint_Proxy": "HRESULT WINAPI IHTMLWindow3_get_onbeforeprint_Proxy(IHTMLWindow3 *This,VARIANT *p);", "IHTMLWindow3_put_onafterprint_Proxy": "HRESULT WINAPI IHTMLWindow3_put_onafterprint_Proxy(IHTMLWindow3 *This,VARIANT v);", "IHTMLWindow3_get_onafterprint_Proxy": "HRESULT WINAPI IHTMLWindow3_get_onafterprint_Proxy(IHTMLWindow3 *This,VARIANT *p);", "IHTMLWindow3_get_clipboardData_Proxy": "HRESULT WINAPI IHTMLWindow3_get_clipboardData_Proxy(IHTMLWindow3 *This,IHTMLDataTransfer **p);", "IHTMLWindow3_showModelessDialog_Proxy": "HRESULT WINAPI IHTMLWindow3_showModelessDialog_Proxy(IHTMLWindow3 *This,BSTR url,VARIANT *varArgIn,VARIANT *options,IHTMLWindow2 **pDialog);", "IHTMLFrameBase_put_src_Proxy": "HRESULT WINAPI IHTMLFrameBase_put_src_Proxy(IHTMLFrameBase *This,BSTR v);", "IHTMLFrameBase_get_src_Proxy": "HRESULT WINAPI IHTMLFrameBase_get_src_Proxy(IHTMLFrameBase *This,BSTR *p);", "IHTMLFrameBase_put_name_Proxy": "HRESULT WINAPI IHTMLFrameBase_put_name_Proxy(IHTMLFrameBase *This,BSTR v);", "IHTMLFrameBase_get_name_Proxy": "HRESULT WINAPI IHTMLFrameBase_get_name_Proxy(IHTMLFrameBase *This,BSTR *p);", "IHTMLFrameBase_put_border_Proxy": "HRESULT WINAPI IHTMLFrameBase_put_border_Proxy(IHTMLFrameBase *This,VARIANT v);", "IHTMLFrameBase_get_border_Proxy": "HRESULT WINAPI IHTMLFrameBase_get_border_Proxy(IHTMLFrameBase *This,VARIANT *p);", "IHTMLFrameBase_put_frameBorder_Proxy": "HRESULT WINAPI IHTMLFrameBase_put_frameBorder_Proxy(IHTMLFrameBase *This,BSTR v);", "IHTMLFrameBase_get_frameBorder_Proxy": "HRESULT WINAPI IHTMLFrameBase_get_frameBorder_Proxy(IHTMLFrameBase *This,BSTR *p);", "IHTMLFrameBase_put_frameSpacing_Proxy": "HRESULT WINAPI IHTMLFrameBase_put_frameSpacing_Proxy(IHTMLFrameBase *This,VARIANT v);", "IHTMLFrameBase_get_frameSpacing_Proxy": "HRESULT WINAPI IHTMLFrameBase_get_frameSpacing_Proxy(IHTMLFrameBase *This,VARIANT *p);", "IHTMLFrameBase_put_marginWidth_Proxy": "HRESULT WINAPI IHTMLFrameBase_put_marginWidth_Proxy(IHTMLFrameBase *This,VARIANT v);", "IHTMLFrameBase_get_marginWidth_Proxy": "HRESULT WINAPI IHTMLFrameBase_get_marginWidth_Proxy(IHTMLFrameBase *This,VARIANT *p);", "IHTMLFrameBase_put_marginHeight_Proxy": "HRESULT WINAPI IHTMLFrameBase_put_marginHeight_Proxy(IHTMLFrameBase *This,VARIANT v);", "IHTMLFrameBase_get_marginHeight_Proxy": "HRESULT WINAPI IHTMLFrameBase_get_marginHeight_Proxy(IHTMLFrameBase *This,VARIANT *p);", "IHTMLFrameBase_put_noResize_Proxy": "HRESULT WINAPI IHTMLFrameBase_put_noResize_Proxy(IHTMLFrameBase *This,VARIANT_BOOL v);", "IHTMLFrameBase_get_noResize_Proxy": "HRESULT WINAPI IHTMLFrameBase_get_noResize_Proxy(IHTMLFrameBase *This,VARIANT_BOOL *p);", "IHTMLFrameBase_put_scrolling_Proxy": "HRESULT WINAPI IHTMLFrameBase_put_scrolling_Proxy(IHTMLFrameBase *This,BSTR v);", "IHTMLFrameBase_get_scrolling_Proxy": "HRESULT WINAPI IHTMLFrameBase_get_scrolling_Proxy(IHTMLFrameBase *This,BSTR *p);", "IHTMLScreen_get_colorDepth_Proxy": "HRESULT WINAPI IHTMLScreen_get_colorDepth_Proxy(IHTMLScreen *This,__LONG32 *p);", "IHTMLScreen_put_bufferDepth_Proxy": "HRESULT WINAPI IHTMLScreen_put_bufferDepth_Proxy(IHTMLScreen *This,__LONG32 v);", "IHTMLScreen_get_bufferDepth_Proxy": "HRESULT WINAPI IHTMLScreen_get_bufferDepth_Proxy(IHTMLScreen *This,__LONG32 *p);", "IHTMLScreen_get_width_Proxy": "HRESULT WINAPI IHTMLScreen_get_width_Proxy(IHTMLScreen *This,__LONG32 *p);", "IHTMLScreen_get_height_Proxy": "HRESULT WINAPI IHTMLScreen_get_height_Proxy(IHTMLScreen *This,__LONG32 *p);", "IHTMLScreen_put_updateInterval_Proxy": "HRESULT WINAPI IHTMLScreen_put_updateInterval_Proxy(IHTMLScreen *This,__LONG32 v);", "IHTMLScreen_get_updateInterval_Proxy": "HRESULT WINAPI IHTMLScreen_get_updateInterval_Proxy(IHTMLScreen *This,__LONG32 *p);", "IHTMLScreen_get_availHeight_Proxy": "HRESULT WINAPI IHTMLScreen_get_availHeight_Proxy(IHTMLScreen *This,__LONG32 *p);", "IHTMLScreen_get_availWidth_Proxy": "HRESULT WINAPI IHTMLScreen_get_availWidth_Proxy(IHTMLScreen *This,__LONG32 *p);", "IHTMLScreen_get_fontSmoothingEnabled_Proxy": "HRESULT WINAPI IHTMLScreen_get_fontSmoothingEnabled_Proxy(IHTMLScreen *This,VARIANT_BOOL *p);", "IHTMLScreen2_get_logicalXDPI_Proxy": "HRESULT WINAPI IHTMLScreen2_get_logicalXDPI_Proxy(IHTMLScreen2 *This,__LONG32 *p);", "IHTMLScreen2_get_logicalYDPI_Proxy": "HRESULT WINAPI IHTMLScreen2_get_logicalYDPI_Proxy(IHTMLScreen2 *This,__LONG32 *p);", "IHTMLScreen2_get_deviceXDPI_Proxy": "HRESULT WINAPI IHTMLScreen2_get_deviceXDPI_Proxy(IHTMLScreen2 *This,__LONG32 *p);", "IHTMLScreen2_get_deviceYDPI_Proxy": "HRESULT WINAPI IHTMLScreen2_get_deviceYDPI_Proxy(IHTMLScreen2 *This,__LONG32 *p);", "IHTMLWindow4_createPopup_Proxy": "HRESULT WINAPI IHTMLWindow4_createPopup_Proxy(IHTMLWindow4 *This,VARIANT *varArgIn,IDispatch **ppPopup);", "IHTMLWindow4_get_frameElement_Proxy": "HRESULT WINAPI IHTMLWindow4_get_frameElement_Proxy(IHTMLWindow4 *This,IHTMLFrameBase **p);", "IHTMLDocument3_releaseCapture_Proxy": "HRESULT WINAPI IHTMLDocument3_releaseCapture_Proxy(IHTMLDocument3 *This);", "IHTMLDocument3_recalc_Proxy": "HRESULT WINAPI IHTMLDocument3_recalc_Proxy(IHTMLDocument3 *This,VARIANT_BOOL fForce);", "IHTMLDocument3_createTextNode_Proxy": "HRESULT WINAPI IHTMLDocument3_createTextNode_Proxy(IHTMLDocument3 *This,BSTR text,IHTMLDOMNode **newTextNode);", "IHTMLDocument3_get_documentElement_Proxy": "HRESULT WINAPI IHTMLDocument3_get_documentElement_Proxy(IHTMLDocument3 *This,IHTMLElement **p);", "IHTMLDocument3_get_uniqueID_Proxy": "HRESULT WINAPI IHTMLDocument3_get_uniqueID_Proxy(IHTMLDocument3 *This,BSTR *p);", "IHTMLDocument3_attachEvent_Proxy": "HRESULT WINAPI IHTMLDocument3_attachEvent_Proxy(IHTMLDocument3 *This,BSTR event,IDispatch *pDisp,VARIANT_BOOL *pfResult);", "IHTMLDocument3_detachEvent_Proxy": "HRESULT WINAPI IHTMLDocument3_detachEvent_Proxy(IHTMLDocument3 *This,BSTR event,IDispatch *pDisp);", "IHTMLDocument3_put_onrowsdelete_Proxy": "HRESULT WINAPI IHTMLDocument3_put_onrowsdelete_Proxy(IHTMLDocument3 *This,VARIANT v);", "IHTMLDocument3_get_onrowsdelete_Proxy": "HRESULT WINAPI IHTMLDocument3_get_onrowsdelete_Proxy(IHTMLDocument3 *This,VARIANT *p);", "IHTMLDocument3_put_onrowsinserted_Proxy": "HRESULT WINAPI IHTMLDocument3_put_onrowsinserted_Proxy(IHTMLDocument3 *This,VARIANT v);", "IHTMLDocument3_get_onrowsinserted_Proxy": "HRESULT WINAPI IHTMLDocument3_get_onrowsinserted_Proxy(IHTMLDocument3 *This,VARIANT *p);", "IHTMLDocument3_put_oncellchange_Proxy": "HRESULT WINAPI IHTMLDocument3_put_oncellchange_Proxy(IHTMLDocument3 *This,VARIANT v);", "IHTMLDocument3_get_oncellchange_Proxy": "HRESULT WINAPI IHTMLDocument3_get_oncellchange_Proxy(IHTMLDocument3 *This,VARIANT *p);", "IHTMLDocument3_put_ondatasetchanged_Proxy": "HRESULT WINAPI IHTMLDocument3_put_ondatasetchanged_Proxy(IHTMLDocument3 *This,VARIANT v);", "IHTMLDocument3_get_ondatasetchanged_Proxy": "HRESULT WINAPI IHTMLDocument3_get_ondatasetchanged_Proxy(IHTMLDocument3 *This,VARIANT *p);", "IHTMLDocument3_put_ondataavailable_Proxy": "HRESULT WINAPI IHTMLDocument3_put_ondataavailable_Proxy(IHTMLDocument3 *This,VARIANT v);", "IHTMLDocument3_get_ondataavailable_Proxy": "HRESULT WINAPI IHTMLDocument3_get_ondataavailable_Proxy(IHTMLDocument3 *This,VARIANT *p);", "IHTMLDocument3_put_ondatasetcomplete_Proxy": "HRESULT WINAPI IHTMLDocument3_put_ondatasetcomplete_Proxy(IHTMLDocument3 *This,VARIANT v);", "IHTMLDocument3_get_ondatasetcomplete_Proxy": "HRESULT WINAPI IHTMLDocument3_get_ondatasetcomplete_Proxy(IHTMLDocument3 *This,VARIANT *p);", "IHTMLDocument3_put_onpropertychange_Proxy": "HRESULT WINAPI IHTMLDocument3_put_onpropertychange_Proxy(IHTMLDocument3 *This,VARIANT v);", "IHTMLDocument3_get_onpropertychange_Proxy": "HRESULT WINAPI IHTMLDocument3_get_onpropertychange_Proxy(IHTMLDocument3 *This,VARIANT *p);", "IHTMLDocument3_put_dir_Proxy": "HRESULT WINAPI IHTMLDocument3_put_dir_Proxy(IHTMLDocument3 *This,BSTR v);", "IHTMLDocument3_get_dir_Proxy": "HRESULT WINAPI IHTMLDocument3_get_dir_Proxy(IHTMLDocument3 *This,BSTR *p);", "IHTMLDocument3_put_oncontextmenu_Proxy": "HRESULT WINAPI IHTMLDocument3_put_oncontextmenu_Proxy(IHTMLDocument3 *This,VARIANT v);", "IHTMLDocument3_get_oncontextmenu_Proxy": "HRESULT WINAPI IHTMLDocument3_get_oncontextmenu_Proxy(IHTMLDocument3 *This,VARIANT *p);", "IHTMLDocument3_put_onstop_Proxy": "HRESULT WINAPI IHTMLDocument3_put_onstop_Proxy(IHTMLDocument3 *This,VARIANT v);", "IHTMLDocument3_get_onstop_Proxy": "HRESULT WINAPI IHTMLDocument3_get_onstop_Proxy(IHTMLDocument3 *This,VARIANT *p);", "IHTMLDocument3_createDocumentFragment_Proxy": "HRESULT WINAPI IHTMLDocument3_createDocumentFragment_Proxy(IHTMLDocument3 *This,IHTMLDocument2 **pNewDoc);", "IHTMLDocument3_get_parentDocument_Proxy": "HRESULT WINAPI IHTMLDocument3_get_parentDocument_Proxy(IHTMLDocument3 *This,IHTMLDocument2 **p);", "IHTMLDocument3_put_enableDownload_Proxy": "HRESULT WINAPI IHTMLDocument3_put_enableDownload_Proxy(IHTMLDocument3 *This,VARIANT_BOOL v);", "IHTMLDocument3_get_enableDownload_Proxy": "HRESULT WINAPI IHTMLDocument3_get_enableDownload_Proxy(IHTMLDocument3 *This,VARIANT_BOOL *p);", "IHTMLDocument3_put_baseUrl_Proxy": "HRESULT WINAPI IHTMLDocument3_put_baseUrl_Proxy(IHTMLDocument3 *This,BSTR v);", "IHTMLDocument3_get_baseUrl_Proxy": "HRESULT WINAPI IHTMLDocument3_get_baseUrl_Proxy(IHTMLDocument3 *This,BSTR *p);", "IHTMLDocument3_get_childNodes_Proxy": "HRESULT WINAPI IHTMLDocument3_get_childNodes_Proxy(IHTMLDocument3 *This,IDispatch **p);", "IHTMLDocument3_put_inheritStyleSheets_Proxy": "HRESULT WINAPI IHTMLDocument3_put_inheritStyleSheets_Proxy(IHTMLDocument3 *This,VARIANT_BOOL v);", "IHTMLDocument3_get_inheritStyleSheets_Proxy": "HRESULT WINAPI IHTMLDocument3_get_inheritStyleSheets_Proxy(IHTMLDocument3 *This,VARIANT_BOOL *p);", "IHTMLDocument3_put_onbeforeeditfocus_Proxy": "HRESULT WINAPI IHTMLDocument3_put_onbeforeeditfocus_Proxy(IHTMLDocument3 *This,VARIANT v);", "IHTMLDocument3_get_onbeforeeditfocus_Proxy": "HRESULT WINAPI IHTMLDocument3_get_onbeforeeditfocus_Proxy(IHTMLDocument3 *This,VARIANT *p);", "IHTMLDocument3_getElementsByName_Proxy": "HRESULT WINAPI IHTMLDocument3_getElementsByName_Proxy(IHTMLDocument3 *This,BSTR v,IHTMLElementCollection **pelColl);", "IHTMLDocument3_getElementById_Proxy": "HRESULT WINAPI IHTMLDocument3_getElementById_Proxy(IHTMLDocument3 *This,BSTR v,IHTMLElement **pel);", "IHTMLDocument3_getElementsByTagName_Proxy": "HRESULT WINAPI IHTMLDocument3_getElementsByTagName_Proxy(IHTMLDocument3 *This,BSTR v,IHTMLElementCollection **pelColl);", "IHTMLDocument4_focus_Proxy": "HRESULT WINAPI IHTMLDocument4_focus_Proxy(IHTMLDocument4 *This);", "IHTMLDocument4_hasFocus_Proxy": "HRESULT WINAPI IHTMLDocument4_hasFocus_Proxy(IHTMLDocument4 *This,VARIANT_BOOL *pfFocus);", "IHTMLDocument4_put_onselectionchange_Proxy": "HRESULT WINAPI IHTMLDocument4_put_onselectionchange_Proxy(IHTMLDocument4 *This,VARIANT v);", "IHTMLDocument4_get_onselectionchange_Proxy": "HRESULT WINAPI IHTMLDocument4_get_onselectionchange_Proxy(IHTMLDocument4 *This,VARIANT *p);", "IHTMLDocument4_get_namespaces_Proxy": "HRESULT WINAPI IHTMLDocument4_get_namespaces_Proxy(IHTMLDocument4 *This,IDispatch **p);", "IHTMLDocument4_createDocumentFromUrl_Proxy": "HRESULT WINAPI IHTMLDocument4_createDocumentFromUrl_Proxy(IHTMLDocument4 *This,BSTR bstrUrl,BSTR bstrOptions,IHTMLDocument2 **newDoc);", "IHTMLDocument4_put_media_Proxy": "HRESULT WINAPI IHTMLDocument4_put_media_Proxy(IHTMLDocument4 *This,BSTR v);", "IHTMLDocument4_get_media_Proxy": "HRESULT WINAPI IHTMLDocument4_get_media_Proxy(IHTMLDocument4 *This,BSTR *p);", "IHTMLDocument4_createEventObject_Proxy": "HRESULT WINAPI IHTMLDocument4_createEventObject_Proxy(IHTMLDocument4 *This,VARIANT *pvarEventObject,IHTMLEventObj **ppEventObj);", "IHTMLDocument4_fireEvent_Proxy": "HRESULT WINAPI IHTMLDocument4_fireEvent_Proxy(IHTMLDocument4 *This,BSTR bstrEventName,VARIANT *pvarEventObject,VARIANT_BOOL *pfCancelled);", "IHTMLDocument4_createRenderStyle_Proxy": "HRESULT WINAPI IHTMLDocument4_createRenderStyle_Proxy(IHTMLDocument4 *This,BSTR v,IHTMLRenderStyle **ppIHTMLRenderStyle);", "IHTMLDocument4_put_oncontrolselect_Proxy": "HRESULT WINAPI IHTMLDocument4_put_oncontrolselect_Proxy(IHTMLDocument4 *This,VARIANT v);", "IHTMLDocument4_get_oncontrolselect_Proxy": "HRESULT WINAPI IHTMLDocument4_get_oncontrolselect_Proxy(IHTMLDocument4 *This,VARIANT *p);", "IHTMLDocument4_get_URLUnencoded_Proxy": "HRESULT WINAPI IHTMLDocument4_get_URLUnencoded_Proxy(IHTMLDocument4 *This,BSTR *p);", "IHTMLDocument5_put_onmousewheel_Proxy": "HRESULT WINAPI IHTMLDocument5_put_onmousewheel_Proxy(IHTMLDocument5 *This,VARIANT v);", "IHTMLDocument5_get_onmousewheel_Proxy": "HRESULT WINAPI IHTMLDocument5_get_onmousewheel_Proxy(IHTMLDocument5 *This,VARIANT *p);", "IHTMLDocument5_get_doctype_Proxy": "HRESULT WINAPI IHTMLDocument5_get_doctype_Proxy(IHTMLDocument5 *This,IHTMLDOMNode **p);", "IHTMLDocument5_get_implementation_Proxy": "HRESULT WINAPI IHTMLDocument5_get_implementation_Proxy(IHTMLDocument5 *This,IHTMLDOMImplementation **p);", "IHTMLDocument5_createAttribute_Proxy": "HRESULT WINAPI IHTMLDocument5_createAttribute_Proxy(IHTMLDocument5 *This,BSTR bstrattrName,IHTMLDOMAttribute **ppattribute);", "IHTMLDocument5_createComment_Proxy": "HRESULT WINAPI IHTMLDocument5_createComment_Proxy(IHTMLDocument5 *This,BSTR bstrdata,IHTMLDOMNode **ppRetNode);", "IHTMLDocument5_put_onfocusin_Proxy": "HRESULT WINAPI IHTMLDocument5_put_onfocusin_Proxy(IHTMLDocument5 *This,VARIANT v);", "IHTMLDocument5_get_onfocusin_Proxy": "HRESULT WINAPI IHTMLDocument5_get_onfocusin_Proxy(IHTMLDocument5 *This,VARIANT *p);", "IHTMLDocument5_put_onfocusout_Proxy": "HRESULT WINAPI IHTMLDocument5_put_onfocusout_Proxy(IHTMLDocument5 *This,VARIANT v);", "IHTMLDocument5_get_onfocusout_Proxy": "HRESULT WINAPI IHTMLDocument5_get_onfocusout_Proxy(IHTMLDocument5 *This,VARIANT *p);", "IHTMLDocument5_put_onactivate_Proxy": "HRESULT WINAPI IHTMLDocument5_put_onactivate_Proxy(IHTMLDocument5 *This,VARIANT v);", "IHTMLDocument5_get_onactivate_Proxy": "HRESULT WINAPI IHTMLDocument5_get_onactivate_Proxy(IHTMLDocument5 *This,VARIANT *p);", "IHTMLDocument5_put_ondeactivate_Proxy": "HRESULT WINAPI IHTMLDocument5_put_ondeactivate_Proxy(IHTMLDocument5 *This,VARIANT v);", "IHTMLDocument5_get_ondeactivate_Proxy": "HRESULT WINAPI IHTMLDocument5_get_ondeactivate_Proxy(IHTMLDocument5 *This,VARIANT *p);", "IHTMLDocument5_put_onbeforeactivate_Proxy": "HRESULT WINAPI IHTMLDocument5_put_onbeforeactivate_Proxy(IHTMLDocument5 *This,VARIANT v);", "IHTMLDocument5_get_onbeforeactivate_Proxy": "HRESULT WINAPI IHTMLDocument5_get_onbeforeactivate_Proxy(IHTMLDocument5 *This,VARIANT *p);", "IHTMLDocument5_put_onbeforedeactivate_Proxy": "HRESULT WINAPI IHTMLDocument5_put_onbeforedeactivate_Proxy(IHTMLDocument5 *This,VARIANT v);", "IHTMLDocument5_get_onbeforedeactivate_Proxy": "HRESULT WINAPI IHTMLDocument5_get_onbeforedeactivate_Proxy(IHTMLDocument5 *This,VARIANT *p);", "IHTMLDocument5_get_compatMode_Proxy": "HRESULT WINAPI IHTMLDocument5_get_compatMode_Proxy(IHTMLDocument5 *This,BSTR *p);", "IWebBridge_put_URL_Proxy": "HRESULT WINAPI IWebBridge_put_URL_Proxy(IWebBridge *This,BSTR v);", "IWebBridge_get_URL_Proxy": "HRESULT WINAPI IWebBridge_get_URL_Proxy(IWebBridge *This,BSTR *p);", "IWebBridge_put_Scrollbar_Proxy": "HRESULT WINAPI IWebBridge_put_Scrollbar_Proxy(IWebBridge *This,VARIANT_BOOL v);", "IWebBridge_get_Scrollbar_Proxy": "HRESULT WINAPI IWebBridge_get_Scrollbar_Proxy(IWebBridge *This,VARIANT_BOOL *p);", "IWebBridge_put_embed_Proxy": "HRESULT WINAPI IWebBridge_put_embed_Proxy(IWebBridge *This,VARIANT_BOOL v);", "IWebBridge_get_embed_Proxy": "HRESULT WINAPI IWebBridge_get_embed_Proxy(IWebBridge *This,VARIANT_BOOL *p);", "IWebBridge_get_event_Proxy": "HRESULT WINAPI IWebBridge_get_event_Proxy(IWebBridge *This,IDispatch **p);", "IWebBridge_get_readyState_Proxy": "HRESULT WINAPI IWebBridge_get_readyState_Proxy(IWebBridge *This,__LONG32 *p);", "IWebBridge_AboutBox_Proxy": "HRESULT WINAPI IWebBridge_AboutBox_Proxy(IWebBridge *This);", "IWBScriptControl_raiseEvent_Proxy": "HRESULT WINAPI IWBScriptControl_raiseEvent_Proxy(IWBScriptControl *This,BSTR name,VARIANT eventData);", "IWBScriptControl_bubbleEvent_Proxy": "HRESULT WINAPI IWBScriptControl_bubbleEvent_Proxy(IWBScriptControl *This);", "IWBScriptControl_setContextMenu_Proxy": "HRESULT WINAPI IWBScriptControl_setContextMenu_Proxy(IWBScriptControl *This,VARIANT menuItemPairs);", "IWBScriptControl_put_selectableContent_Proxy": "HRESULT WINAPI IWBScriptControl_put_selectableContent_Proxy(IWBScriptControl *This,VARIANT_BOOL v);", "IWBScriptControl_get_selectableContent_Proxy": "HRESULT WINAPI IWBScriptControl_get_selectableContent_Proxy(IWBScriptControl *This,VARIANT_BOOL *p);", "IWBScriptControl_get_frozen_Proxy": "HRESULT WINAPI IWBScriptControl_get_frozen_Proxy(IWBScriptControl *This,VARIANT_BOOL *p);", "IWBScriptControl_put_scrollbar_Proxy": "HRESULT WINAPI IWBScriptControl_put_scrollbar_Proxy(IWBScriptControl *This,VARIANT_BOOL v);", "IWBScriptControl_get_scrollbar_Proxy": "HRESULT WINAPI IWBScriptControl_get_scrollbar_Proxy(IWBScriptControl *This,VARIANT_BOOL *p);", "IWBScriptControl_get_version_Proxy": "HRESULT WINAPI IWBScriptControl_get_version_Proxy(IWBScriptControl *This,BSTR *p);", "IWBScriptControl_get_visibility_Proxy": "HRESULT WINAPI IWBScriptControl_get_visibility_Proxy(IWBScriptControl *This,VARIANT_BOOL *p);", "IWBScriptControl_put_onvisibilitychange_Proxy": "HRESULT WINAPI IWBScriptControl_put_onvisibilitychange_Proxy(IWBScriptControl *This,VARIANT v);", "IWBScriptControl_get_onvisibilitychange_Proxy": "HRESULT WINAPI IWBScriptControl_get_onvisibilitychange_Proxy(IWBScriptControl *This,VARIANT *p);", "IHTMLEmbedElement_put_hidden_Proxy": "HRESULT WINAPI IHTMLEmbedElement_put_hidden_Proxy(IHTMLEmbedElement *This,BSTR v);", "IHTMLEmbedElement_get_hidden_Proxy": "HRESULT WINAPI IHTMLEmbedElement_get_hidden_Proxy(IHTMLEmbedElement *This,BSTR *p);", "IHTMLEmbedElement_get_palette_Proxy": "HRESULT WINAPI IHTMLEmbedElement_get_palette_Proxy(IHTMLEmbedElement *This,BSTR *p);", "IHTMLEmbedElement_get_pluginspage_Proxy": "HRESULT WINAPI IHTMLEmbedElement_get_pluginspage_Proxy(IHTMLEmbedElement *This,BSTR *p);", "IHTMLEmbedElement_put_src_Proxy": "HRESULT WINAPI IHTMLEmbedElement_put_src_Proxy(IHTMLEmbedElement *This,BSTR v);", "IHTMLEmbedElement_get_src_Proxy": "HRESULT WINAPI IHTMLEmbedElement_get_src_Proxy(IHTMLEmbedElement *This,BSTR *p);", "IHTMLEmbedElement_put_units_Proxy": "HRESULT WINAPI IHTMLEmbedElement_put_units_Proxy(IHTMLEmbedElement *This,BSTR v);", "IHTMLEmbedElement_get_units_Proxy": "HRESULT WINAPI IHTMLEmbedElement_get_units_Proxy(IHTMLEmbedElement *This,BSTR *p);", "IHTMLEmbedElement_put_name_Proxy": "HRESULT WINAPI IHTMLEmbedElement_put_name_Proxy(IHTMLEmbedElement *This,BSTR v);", "IHTMLEmbedElement_get_name_Proxy": "HRESULT WINAPI IHTMLEmbedElement_get_name_Proxy(IHTMLEmbedElement *This,BSTR *p);", "IHTMLEmbedElement_put_width_Proxy": "HRESULT WINAPI IHTMLEmbedElement_put_width_Proxy(IHTMLEmbedElement *This,VARIANT v);", "IHTMLEmbedElement_get_width_Proxy": "HRESULT WINAPI IHTMLEmbedElement_get_width_Proxy(IHTMLEmbedElement *This,VARIANT *p);", "IHTMLEmbedElement_put_height_Proxy": "HRESULT WINAPI IHTMLEmbedElement_put_height_Proxy(IHTMLEmbedElement *This,VARIANT v);", "IHTMLEmbedElement_get_height_Proxy": "HRESULT WINAPI IHTMLEmbedElement_get_height_Proxy(IHTMLEmbedElement *This,VARIANT *p);", "IHTMLAreasCollection_put_length_Proxy": "HRESULT WINAPI IHTMLAreasCollection_put_length_Proxy(IHTMLAreasCollection *This,__LONG32 v);", "IHTMLAreasCollection_get_length_Proxy": "HRESULT WINAPI IHTMLAreasCollection_get_length_Proxy(IHTMLAreasCollection *This,__LONG32 *p);", "IHTMLAreasCollection_get__newEnum_Proxy": "HRESULT WINAPI IHTMLAreasCollection_get__newEnum_Proxy(IHTMLAreasCollection *This,IUnknown **p);", "IHTMLAreasCollection_item_Proxy": "HRESULT WINAPI IHTMLAreasCollection_item_Proxy(IHTMLAreasCollection *This,VARIANT name,VARIANT index,IDispatch **pdisp);", "IHTMLAreasCollection_tags_Proxy": "HRESULT WINAPI IHTMLAreasCollection_tags_Proxy(IHTMLAreasCollection *This,VARIANT tagName,IDispatch **pdisp);", "IHTMLAreasCollection_add_Proxy": "HRESULT WINAPI IHTMLAreasCollection_add_Proxy(IHTMLAreasCollection *This,IHTMLElement *element,VARIANT before);", "IHTMLAreasCollection_remove_Proxy": "HRESULT WINAPI IHTMLAreasCollection_remove_Proxy(IHTMLAreasCollection *This,__LONG32 index);", "IHTMLAreasCollection2_urns_Proxy": "HRESULT WINAPI IHTMLAreasCollection2_urns_Proxy(IHTMLAreasCollection2 *This,VARIANT urn,IDispatch **pdisp);", "IHTMLAreasCollection3_namedItem_Proxy": "HRESULT WINAPI IHTMLAreasCollection3_namedItem_Proxy(IHTMLAreasCollection3 *This,BSTR name,IDispatch **pdisp);", "IHTMLMapElement_get_areas_Proxy": "HRESULT WINAPI IHTMLMapElement_get_areas_Proxy(IHTMLMapElement *This,IHTMLAreasCollection **p);", "IHTMLMapElement_put_name_Proxy": "HRESULT WINAPI IHTMLMapElement_put_name_Proxy(IHTMLMapElement *This,BSTR v);", "IHTMLMapElement_get_name_Proxy": "HRESULT WINAPI IHTMLMapElement_get_name_Proxy(IHTMLMapElement *This,BSTR *p);", "IHTMLAreaElement_put_shape_Proxy": "HRESULT WINAPI IHTMLAreaElement_put_shape_Proxy(IHTMLAreaElement *This,BSTR v);", "IHTMLAreaElement_get_shape_Proxy": "HRESULT WINAPI IHTMLAreaElement_get_shape_Proxy(IHTMLAreaElement *This,BSTR *p);", "IHTMLAreaElement_put_coords_Proxy": "HRESULT WINAPI IHTMLAreaElement_put_coords_Proxy(IHTMLAreaElement *This,BSTR v);", "IHTMLAreaElement_get_coords_Proxy": "HRESULT WINAPI IHTMLAreaElement_get_coords_Proxy(IHTMLAreaElement *This,BSTR *p);", "IHTMLAreaElement_put_href_Proxy": "HRESULT WINAPI IHTMLAreaElement_put_href_Proxy(IHTMLAreaElement *This,BSTR v);", "IHTMLAreaElement_get_href_Proxy": "HRESULT WINAPI IHTMLAreaElement_get_href_Proxy(IHTMLAreaElement *This,BSTR *p);", "IHTMLAreaElement_put_target_Proxy": "HRESULT WINAPI IHTMLAreaElement_put_target_Proxy(IHTMLAreaElement *This,BSTR v);", "IHTMLAreaElement_get_target_Proxy": "HRESULT WINAPI IHTMLAreaElement_get_target_Proxy(IHTMLAreaElement *This,BSTR *p);", "IHTMLAreaElement_put_alt_Proxy": "HRESULT WINAPI IHTMLAreaElement_put_alt_Proxy(IHTMLAreaElement *This,BSTR v);", "IHTMLAreaElement_get_alt_Proxy": "HRESULT WINAPI IHTMLAreaElement_get_alt_Proxy(IHTMLAreaElement *This,BSTR *p);", "IHTMLAreaElement_put_noHref_Proxy": "HRESULT WINAPI IHTMLAreaElement_put_noHref_Proxy(IHTMLAreaElement *This,VARIANT_BOOL v);", "IHTMLAreaElement_get_noHref_Proxy": "HRESULT WINAPI IHTMLAreaElement_get_noHref_Proxy(IHTMLAreaElement *This,VARIANT_BOOL *p);", "IHTMLAreaElement_put_host_Proxy": "HRESULT WINAPI IHTMLAreaElement_put_host_Proxy(IHTMLAreaElement *This,BSTR v);", "IHTMLAreaElement_get_host_Proxy": "HRESULT WINAPI IHTMLAreaElement_get_host_Proxy(IHTMLAreaElement *This,BSTR *p);", "IHTMLAreaElement_put_hostname_Proxy": "HRESULT WINAPI IHTMLAreaElement_put_hostname_Proxy(IHTMLAreaElement *This,BSTR v);", "IHTMLAreaElement_get_hostname_Proxy": "HRESULT WINAPI IHTMLAreaElement_get_hostname_Proxy(IHTMLAreaElement *This,BSTR *p);", "IHTMLAreaElement_put_pathname_Proxy": "HRESULT WINAPI IHTMLAreaElement_put_pathname_Proxy(IHTMLAreaElement *This,BSTR v);", "IHTMLAreaElement_get_pathname_Proxy": "HRESULT WINAPI IHTMLAreaElement_get_pathname_Proxy(IHTMLAreaElement *This,BSTR *p);", "IHTMLAreaElement_put_port_Proxy": "HRESULT WINAPI IHTMLAreaElement_put_port_Proxy(IHTMLAreaElement *This,BSTR v);", "IHTMLAreaElement_get_port_Proxy": "HRESULT WINAPI IHTMLAreaElement_get_port_Proxy(IHTMLAreaElement *This,BSTR *p);", "IHTMLAreaElement_put_protocol_Proxy": "HRESULT WINAPI IHTMLAreaElement_put_protocol_Proxy(IHTMLAreaElement *This,BSTR v);", "IHTMLAreaElement_get_protocol_Proxy": "HRESULT WINAPI IHTMLAreaElement_get_protocol_Proxy(IHTMLAreaElement *This,BSTR *p);", "IHTMLAreaElement_put_search_Proxy": "HRESULT WINAPI IHTMLAreaElement_put_search_Proxy(IHTMLAreaElement *This,BSTR v);", "IHTMLAreaElement_get_search_Proxy": "HRESULT WINAPI IHTMLAreaElement_get_search_Proxy(IHTMLAreaElement *This,BSTR *p);", "IHTMLAreaElement_put_hash_Proxy": "HRESULT WINAPI IHTMLAreaElement_put_hash_Proxy(IHTMLAreaElement *This,BSTR v);", "IHTMLAreaElement_get_hash_Proxy": "HRESULT WINAPI IHTMLAreaElement_get_hash_Proxy(IHTMLAreaElement *This,BSTR *p);", "IHTMLAreaElement_put_onblur_Proxy": "HRESULT WINAPI IHTMLAreaElement_put_onblur_Proxy(IHTMLAreaElement *This,VARIANT v);", "IHTMLAreaElement_get_onblur_Proxy": "HRESULT WINAPI IHTMLAreaElement_get_onblur_Proxy(IHTMLAreaElement *This,VARIANT *p);", "IHTMLAreaElement_put_onfocus_Proxy": "HRESULT WINAPI IHTMLAreaElement_put_onfocus_Proxy(IHTMLAreaElement *This,VARIANT v);", "IHTMLAreaElement_get_onfocus_Proxy": "HRESULT WINAPI IHTMLAreaElement_get_onfocus_Proxy(IHTMLAreaElement *This,VARIANT *p);", "IHTMLAreaElement_put_tabIndex_Proxy": "HRESULT WINAPI IHTMLAreaElement_put_tabIndex_Proxy(IHTMLAreaElement *This,short v);", "IHTMLAreaElement_get_tabIndex_Proxy": "HRESULT WINAPI IHTMLAreaElement_get_tabIndex_Proxy(IHTMLAreaElement *This,short *p);", "IHTMLAreaElement_focus_Proxy": "HRESULT WINAPI IHTMLAreaElement_focus_Proxy(IHTMLAreaElement *This);", "IHTMLAreaElement_blur_Proxy": "HRESULT WINAPI IHTMLAreaElement_blur_Proxy(IHTMLAreaElement *This);", "IHTMLTableCaption_put_align_Proxy": "HRESULT WINAPI IHTMLTableCaption_put_align_Proxy(IHTMLTableCaption *This,BSTR v);", "IHTMLTableCaption_get_align_Proxy": "HRESULT WINAPI IHTMLTableCaption_get_align_Proxy(IHTMLTableCaption *This,BSTR *p);", "IHTMLTableCaption_put_vAlign_Proxy": "HRESULT WINAPI IHTMLTableCaption_put_vAlign_Proxy(IHTMLTableCaption *This,BSTR v);", "IHTMLTableCaption_get_vAlign_Proxy": "HRESULT WINAPI IHTMLTableCaption_get_vAlign_Proxy(IHTMLTableCaption *This,BSTR *p);", "IHTMLCommentElement_put_text_Proxy": "HRESULT WINAPI IHTMLCommentElement_put_text_Proxy(IHTMLCommentElement *This,BSTR v);", "IHTMLCommentElement_get_text_Proxy": "HRESULT WINAPI IHTMLCommentElement_get_text_Proxy(IHTMLCommentElement *This,BSTR *p);", "IHTMLCommentElement_put_atomic_Proxy": "HRESULT WINAPI IHTMLCommentElement_put_atomic_Proxy(IHTMLCommentElement *This,__LONG32 v);", "IHTMLCommentElement_get_atomic_Proxy": "HRESULT WINAPI IHTMLCommentElement_get_atomic_Proxy(IHTMLCommentElement *This,__LONG32 *p);", "IHTMLCommentElement2_put_data_Proxy": "HRESULT WINAPI IHTMLCommentElement2_put_data_Proxy(IHTMLCommentElement2 *This,BSTR v);", "IHTMLCommentElement2_get_data_Proxy": "HRESULT WINAPI IHTMLCommentElement2_get_data_Proxy(IHTMLCommentElement2 *This,BSTR *p);", "IHTMLCommentElement2_get_length_Proxy": "HRESULT WINAPI IHTMLCommentElement2_get_length_Proxy(IHTMLCommentElement2 *This,__LONG32 *p);", "IHTMLCommentElement2_substringData_Proxy": "HRESULT WINAPI IHTMLCommentElement2_substringData_Proxy(IHTMLCommentElement2 *This,__LONG32 offset,__LONG32 Count,BSTR *pbstrsubString);", "IHTMLCommentElement2_appendData_Proxy": "HRESULT WINAPI IHTMLCommentElement2_appendData_Proxy(IHTMLCommentElement2 *This,BSTR bstrstring);", "IHTMLCommentElement2_insertData_Proxy": "HRESULT WINAPI IHTMLCommentElement2_insertData_Proxy(IHTMLCommentElement2 *This,__LONG32 offset,BSTR bstrstring);", "IHTMLCommentElement2_deleteData_Proxy": "HRESULT WINAPI IHTMLCommentElement2_deleteData_Proxy(IHTMLCommentElement2 *This,__LONG32 offset,__LONG32 Count);", "IHTMLCommentElement2_replaceData_Proxy": "HRESULT WINAPI IHTMLCommentElement2_replaceData_Proxy(IHTMLCommentElement2 *This,__LONG32 offset,__LONG32 Count,BSTR bstrstring);", "IHTMLPhraseElement2_put_cite_Proxy": "HRESULT WINAPI IHTMLPhraseElement2_put_cite_Proxy(IHTMLPhraseElement2 *This,BSTR v);", "IHTMLPhraseElement2_get_cite_Proxy": "HRESULT WINAPI IHTMLPhraseElement2_get_cite_Proxy(IHTMLPhraseElement2 *This,BSTR *p);", "IHTMLPhraseElement2_put_dateTime_Proxy": "HRESULT WINAPI IHTMLPhraseElement2_put_dateTime_Proxy(IHTMLPhraseElement2 *This,BSTR v);", "IHTMLPhraseElement2_get_dateTime_Proxy": "HRESULT WINAPI IHTMLPhraseElement2_get_dateTime_Proxy(IHTMLPhraseElement2 *This,BSTR *p);", "IHTMLTableSection_put_align_Proxy": "HRESULT WINAPI IHTMLTableSection_put_align_Proxy(IHTMLTableSection *This,BSTR v);", "IHTMLTableSection_get_align_Proxy": "HRESULT WINAPI IHTMLTableSection_get_align_Proxy(IHTMLTableSection *This,BSTR *p);", "IHTMLTableSection_put_vAlign_Proxy": "HRESULT WINAPI IHTMLTableSection_put_vAlign_Proxy(IHTMLTableSection *This,BSTR v);", "IHTMLTableSection_get_vAlign_Proxy": "HRESULT WINAPI IHTMLTableSection_get_vAlign_Proxy(IHTMLTableSection *This,BSTR *p);", "IHTMLTableSection_put_bgColor_Proxy": "HRESULT WINAPI IHTMLTableSection_put_bgColor_Proxy(IHTMLTableSection *This,VARIANT v);", "IHTMLTableSection_get_bgColor_Proxy": "HRESULT WINAPI IHTMLTableSection_get_bgColor_Proxy(IHTMLTableSection *This,VARIANT *p);", "IHTMLTableSection_get_rows_Proxy": "HRESULT WINAPI IHTMLTableSection_get_rows_Proxy(IHTMLTableSection *This,IHTMLElementCollection **p);", "IHTMLTableSection_insertRow_Proxy": "HRESULT WINAPI IHTMLTableSection_insertRow_Proxy(IHTMLTableSection *This,__LONG32 index,IDispatch **row);", "IHTMLTableSection_deleteRow_Proxy": "HRESULT WINAPI IHTMLTableSection_deleteRow_Proxy(IHTMLTableSection *This,__LONG32 index);", "IHTMLTable_put_cols_Proxy": "HRESULT WINAPI IHTMLTable_put_cols_Proxy(IHTMLTable *This,__LONG32 v);", "IHTMLTable_get_cols_Proxy": "HRESULT WINAPI IHTMLTable_get_cols_Proxy(IHTMLTable *This,__LONG32 *p);", "IHTMLTable_put_border_Proxy": "HRESULT WINAPI IHTMLTable_put_border_Proxy(IHTMLTable *This,VARIANT v);", "IHTMLTable_get_border_Proxy": "HRESULT WINAPI IHTMLTable_get_border_Proxy(IHTMLTable *This,VARIANT *p);", "IHTMLTable_put_frame_Proxy": "HRESULT WINAPI IHTMLTable_put_frame_Proxy(IHTMLTable *This,BSTR v);", "IHTMLTable_get_frame_Proxy": "HRESULT WINAPI IHTMLTable_get_frame_Proxy(IHTMLTable *This,BSTR *p);", "IHTMLTable_put_rules_Proxy": "HRESULT WINAPI IHTMLTable_put_rules_Proxy(IHTMLTable *This,BSTR v);", "IHTMLTable_get_rules_Proxy": "HRESULT WINAPI IHTMLTable_get_rules_Proxy(IHTMLTable *This,BSTR *p);", "IHTMLTable_put_cellSpacing_Proxy": "HRESULT WINAPI IHTMLTable_put_cellSpacing_Proxy(IHTMLTable *This,VARIANT v);", "IHTMLTable_get_cellSpacing_Proxy": "HRESULT WINAPI IHTMLTable_get_cellSpacing_Proxy(IHTMLTable *This,VARIANT *p);", "IHTMLTable_put_cellPadding_Proxy": "HRESULT WINAPI IHTMLTable_put_cellPadding_Proxy(IHTMLTable *This,VARIANT v);", "IHTMLTable_get_cellPadding_Proxy": "HRESULT WINAPI IHTMLTable_get_cellPadding_Proxy(IHTMLTable *This,VARIANT *p);", "IHTMLTable_put_background_Proxy": "HRESULT WINAPI IHTMLTable_put_background_Proxy(IHTMLTable *This,BSTR v);", "IHTMLTable_get_background_Proxy": "HRESULT WINAPI IHTMLTable_get_background_Proxy(IHTMLTable *This,BSTR *p);", "IHTMLTable_put_bgColor_Proxy": "HRESULT WINAPI IHTMLTable_put_bgColor_Proxy(IHTMLTable *This,VARIANT v);", "IHTMLTable_get_bgColor_Proxy": "HRESULT WINAPI IHTMLTable_get_bgColor_Proxy(IHTMLTable *This,VARIANT *p);", "IHTMLTable_put_borderColor_Proxy": "HRESULT WINAPI IHTMLTable_put_borderColor_Proxy(IHTMLTable *This,VARIANT v);", "IHTMLTable_get_borderColor_Proxy": "HRESULT WINAPI IHTMLTable_get_borderColor_Proxy(IHTMLTable *This,VARIANT *p);", "IHTMLTable_put_borderColorLight_Proxy": "HRESULT WINAPI IHTMLTable_put_borderColorLight_Proxy(IHTMLTable *This,VARIANT v);", "IHTMLTable_get_borderColorLight_Proxy": "HRESULT WINAPI IHTMLTable_get_borderColorLight_Proxy(IHTMLTable *This,VARIANT *p);", "IHTMLTable_put_borderColorDark_Proxy": "HRESULT WINAPI IHTMLTable_put_borderColorDark_Proxy(IHTMLTable *This,VARIANT v);", "IHTMLTable_get_borderColorDark_Proxy": "HRESULT WINAPI IHTMLTable_get_borderColorDark_Proxy(IHTMLTable *This,VARIANT *p);", "IHTMLTable_put_align_Proxy": "HRESULT WINAPI IHTMLTable_put_align_Proxy(IHTMLTable *This,BSTR v);", "IHTMLTable_get_align_Proxy": "HRESULT WINAPI IHTMLTable_get_align_Proxy(IHTMLTable *This,BSTR *p);", "IHTMLTable_refresh_Proxy": "HRESULT WINAPI IHTMLTable_refresh_Proxy(IHTMLTable *This);", "IHTMLTable_get_rows_Proxy": "HRESULT WINAPI IHTMLTable_get_rows_Proxy(IHTMLTable *This,IHTMLElementCollection **p);", "IHTMLTable_put_width_Proxy": "HRESULT WINAPI IHTMLTable_put_width_Proxy(IHTMLTable *This,VARIANT v);", "IHTMLTable_get_width_Proxy": "HRESULT WINAPI IHTMLTable_get_width_Proxy(IHTMLTable *This,VARIANT *p);", "IHTMLTable_put_height_Proxy": "HRESULT WINAPI IHTMLTable_put_height_Proxy(IHTMLTable *This,VARIANT v);", "IHTMLTable_get_height_Proxy": "HRESULT WINAPI IHTMLTable_get_height_Proxy(IHTMLTable *This,VARIANT *p);", "IHTMLTable_put_dataPageSize_Proxy": "HRESULT WINAPI IHTMLTable_put_dataPageSize_Proxy(IHTMLTable *This,__LONG32 v);", "IHTMLTable_get_dataPageSize_Proxy": "HRESULT WINAPI IHTMLTable_get_dataPageSize_Proxy(IHTMLTable *This,__LONG32 *p);", "IHTMLTable_nextPage_Proxy": "HRESULT WINAPI IHTMLTable_nextPage_Proxy(IHTMLTable *This);", "IHTMLTable_previousPage_Proxy": "HRESULT WINAPI IHTMLTable_previousPage_Proxy(IHTMLTable *This);", "IHTMLTable_get_tHead_Proxy": "HRESULT WINAPI IHTMLTable_get_tHead_Proxy(IHTMLTable *This,IHTMLTableSection **p);", "IHTMLTable_get_tFoot_Proxy": "HRESULT WINAPI IHTMLTable_get_tFoot_Proxy(IHTMLTable *This,IHTMLTableSection **p);", "IHTMLTable_get_tBodies_Proxy": "HRESULT WINAPI IHTMLTable_get_tBodies_Proxy(IHTMLTable *This,IHTMLElementCollection **p);", "IHTMLTable_get_caption_Proxy": "HRESULT WINAPI IHTMLTable_get_caption_Proxy(IHTMLTable *This,IHTMLTableCaption **p);", "IHTMLTable_createTHead_Proxy": "HRESULT WINAPI IHTMLTable_createTHead_Proxy(IHTMLTable *This,IDispatch **head);", "IHTMLTable_deleteTHead_Proxy": "HRESULT WINAPI IHTMLTable_deleteTHead_Proxy(IHTMLTable *This);", "IHTMLTable_createTFoot_Proxy": "HRESULT WINAPI IHTMLTable_createTFoot_Proxy(IHTMLTable *This,IDispatch **foot);", "IHTMLTable_deleteTFoot_Proxy": "HRESULT WINAPI IHTMLTable_deleteTFoot_Proxy(IHTMLTable *This);", "IHTMLTable_createCaption_Proxy": "HRESULT WINAPI IHTMLTable_createCaption_Proxy(IHTMLTable *This,IHTMLTableCaption **caption);", "IHTMLTable_deleteCaption_Proxy": "HRESULT WINAPI IHTMLTable_deleteCaption_Proxy(IHTMLTable *This);", "IHTMLTable_insertRow_Proxy": "HRESULT WINAPI IHTMLTable_insertRow_Proxy(IHTMLTable *This,__LONG32 index,IDispatch **row);", "IHTMLTable_deleteRow_Proxy": "HRESULT WINAPI IHTMLTable_deleteRow_Proxy(IHTMLTable *This,__LONG32 index);", "IHTMLTable_get_readyState_Proxy": "HRESULT WINAPI IHTMLTable_get_readyState_Proxy(IHTMLTable *This,BSTR *p);", "IHTMLTable_put_onreadystatechange_Proxy": "HRESULT WINAPI IHTMLTable_put_onreadystatechange_Proxy(IHTMLTable *This,VARIANT v);", "IHTMLTable_get_onreadystatechange_Proxy": "HRESULT WINAPI IHTMLTable_get_onreadystatechange_Proxy(IHTMLTable *This,VARIANT *p);", "IHTMLTable2_firstPage_Proxy": "HRESULT WINAPI IHTMLTable2_firstPage_Proxy(IHTMLTable2 *This);", "IHTMLTable2_lastPage_Proxy": "HRESULT WINAPI IHTMLTable2_lastPage_Proxy(IHTMLTable2 *This);", "IHTMLTable2_get_cells_Proxy": "HRESULT WINAPI IHTMLTable2_get_cells_Proxy(IHTMLTable2 *This,IHTMLElementCollection **p);", "IHTMLTable2_moveRow_Proxy": "HRESULT WINAPI IHTMLTable2_moveRow_Proxy(IHTMLTable2 *This,__LONG32 indexFrom,__LONG32 indexTo,IDispatch **row);", "IHTMLTable3_put_summary_Proxy": "HRESULT WINAPI IHTMLTable3_put_summary_Proxy(IHTMLTable3 *This,BSTR v);", "IHTMLTable3_get_summary_Proxy": "HRESULT WINAPI IHTMLTable3_get_summary_Proxy(IHTMLTable3 *This,BSTR *p);", "IHTMLTableCol_put_span_Proxy": "HRESULT WINAPI IHTMLTableCol_put_span_Proxy(IHTMLTableCol *This,__LONG32 v);", "IHTMLTableCol_get_span_Proxy": "HRESULT WINAPI IHTMLTableCol_get_span_Proxy(IHTMLTableCol *This,__LONG32 *p);", "IHTMLTableCol_put_width_Proxy": "HRESULT WINAPI IHTMLTableCol_put_width_Proxy(IHTMLTableCol *This,VARIANT v);", "IHTMLTableCol_get_width_Proxy": "HRESULT WINAPI IHTMLTableCol_get_width_Proxy(IHTMLTableCol *This,VARIANT *p);", "IHTMLTableCol_put_align_Proxy": "HRESULT WINAPI IHTMLTableCol_put_align_Proxy(IHTMLTableCol *This,BSTR v);", "IHTMLTableCol_get_align_Proxy": "HRESULT WINAPI IHTMLTableCol_get_align_Proxy(IHTMLTableCol *This,BSTR *p);", "IHTMLTableCol_put_vAlign_Proxy": "HRESULT WINAPI IHTMLTableCol_put_vAlign_Proxy(IHTMLTableCol *This,BSTR v);", "IHTMLTableCol_get_vAlign_Proxy": "HRESULT WINAPI IHTMLTableCol_get_vAlign_Proxy(IHTMLTableCol *This,BSTR *p);", "IHTMLTableCol2_put_ch_Proxy": "HRESULT WINAPI IHTMLTableCol2_put_ch_Proxy(IHTMLTableCol2 *This,BSTR v);", "IHTMLTableCol2_get_ch_Proxy": "HRESULT WINAPI IHTMLTableCol2_get_ch_Proxy(IHTMLTableCol2 *This,BSTR *p);", "IHTMLTableCol2_put_chOff_Proxy": "HRESULT WINAPI IHTMLTableCol2_put_chOff_Proxy(IHTMLTableCol2 *This,BSTR v);", "IHTMLTableCol2_get_chOff_Proxy": "HRESULT WINAPI IHTMLTableCol2_get_chOff_Proxy(IHTMLTableCol2 *This,BSTR *p);", "IHTMLTableSection2_moveRow_Proxy": "HRESULT WINAPI IHTMLTableSection2_moveRow_Proxy(IHTMLTableSection2 *This,__LONG32 indexFrom,__LONG32 indexTo,IDispatch **row);", "IHTMLTableSection3_put_ch_Proxy": "HRESULT WINAPI IHTMLTableSection3_put_ch_Proxy(IHTMLTableSection3 *This,BSTR v);", "IHTMLTableSection3_get_ch_Proxy": "HRESULT WINAPI IHTMLTableSection3_get_ch_Proxy(IHTMLTableSection3 *This,BSTR *p);", "IHTMLTableSection3_put_chOff_Proxy": "HRESULT WINAPI IHTMLTableSection3_put_chOff_Proxy(IHTMLTableSection3 *This,BSTR v);", "IHTMLTableSection3_get_chOff_Proxy": "HRESULT WINAPI IHTMLTableSection3_get_chOff_Proxy(IHTMLTableSection3 *This,BSTR *p);", "IHTMLTableRow_put_align_Proxy": "HRESULT WINAPI IHTMLTableRow_put_align_Proxy(IHTMLTableRow *This,BSTR v);", "IHTMLTableRow_get_align_Proxy": "HRESULT WINAPI IHTMLTableRow_get_align_Proxy(IHTMLTableRow *This,BSTR *p);", "IHTMLTableRow_put_vAlign_Proxy": "HRESULT WINAPI IHTMLTableRow_put_vAlign_Proxy(IHTMLTableRow *This,BSTR v);", "IHTMLTableRow_get_vAlign_Proxy": "HRESULT WINAPI IHTMLTableRow_get_vAlign_Proxy(IHTMLTableRow *This,BSTR *p);", "IHTMLTableRow_put_bgColor_Proxy": "HRESULT WINAPI IHTMLTableRow_put_bgColor_Proxy(IHTMLTableRow *This,VARIANT v);", "IHTMLTableRow_get_bgColor_Proxy": "HRESULT WINAPI IHTMLTableRow_get_bgColor_Proxy(IHTMLTableRow *This,VARIANT *p);", "IHTMLTableRow_put_borderColor_Proxy": "HRESULT WINAPI IHTMLTableRow_put_borderColor_Proxy(IHTMLTableRow *This,VARIANT v);", "IHTMLTableRow_get_borderColor_Proxy": "HRESULT WINAPI IHTMLTableRow_get_borderColor_Proxy(IHTMLTableRow *This,VARIANT *p);", "IHTMLTableRow_put_borderColorLight_Proxy": "HRESULT WINAPI IHTMLTableRow_put_borderColorLight_Proxy(IHTMLTableRow *This,VARIANT v);", "IHTMLTableRow_get_borderColorLight_Proxy": "HRESULT WINAPI IHTMLTableRow_get_borderColorLight_Proxy(IHTMLTableRow *This,VARIANT *p);", "IHTMLTableRow_put_borderColorDark_Proxy": "HRESULT WINAPI IHTMLTableRow_put_borderColorDark_Proxy(IHTMLTableRow *This,VARIANT v);", "IHTMLTableRow_get_borderColorDark_Proxy": "HRESULT WINAPI IHTMLTableRow_get_borderColorDark_Proxy(IHTMLTableRow *This,VARIANT *p);", "IHTMLTableRow_get_rowIndex_Proxy": "HRESULT WINAPI IHTMLTableRow_get_rowIndex_Proxy(IHTMLTableRow *This,__LONG32 *p);", "IHTMLTableRow_get_sectionRowIndex_Proxy": "HRESULT WINAPI IHTMLTableRow_get_sectionRowIndex_Proxy(IHTMLTableRow *This,__LONG32 *p);", "IHTMLTableRow_get_cells_Proxy": "HRESULT WINAPI IHTMLTableRow_get_cells_Proxy(IHTMLTableRow *This,IHTMLElementCollection **p);", "IHTMLTableRow_insertCell_Proxy": "HRESULT WINAPI IHTMLTableRow_insertCell_Proxy(IHTMLTableRow *This,__LONG32 index,IDispatch **row);", "IHTMLTableRow_deleteCell_Proxy": "HRESULT WINAPI IHTMLTableRow_deleteCell_Proxy(IHTMLTableRow *This,__LONG32 index);", "IHTMLTableRow2_put_height_Proxy": "HRESULT WINAPI IHTMLTableRow2_put_height_Proxy(IHTMLTableRow2 *This,VARIANT v);", "IHTMLTableRow2_get_height_Proxy": "HRESULT WINAPI IHTMLTableRow2_get_height_Proxy(IHTMLTableRow2 *This,VARIANT *p);", "IHTMLTableRow3_put_ch_Proxy": "HRESULT WINAPI IHTMLTableRow3_put_ch_Proxy(IHTMLTableRow3 *This,BSTR v);", "IHTMLTableRow3_get_ch_Proxy": "HRESULT WINAPI IHTMLTableRow3_get_ch_Proxy(IHTMLTableRow3 *This,BSTR *p);", "IHTMLTableRow3_put_chOff_Proxy": "HRESULT WINAPI IHTMLTableRow3_put_chOff_Proxy(IHTMLTableRow3 *This,BSTR v);", "IHTMLTableRow3_get_chOff_Proxy": "HRESULT WINAPI IHTMLTableRow3_get_chOff_Proxy(IHTMLTableRow3 *This,BSTR *p);", "IHTMLTableRowMetrics_get_clientHeight_Proxy": "HRESULT WINAPI IHTMLTableRowMetrics_get_clientHeight_Proxy(IHTMLTableRowMetrics *This,__LONG32 *p);", "IHTMLTableRowMetrics_get_clientWidth_Proxy": "HRESULT WINAPI IHTMLTableRowMetrics_get_clientWidth_Proxy(IHTMLTableRowMetrics *This,__LONG32 *p);", "IHTMLTableRowMetrics_get_clientTop_Proxy": "HRESULT WINAPI IHTMLTableRowMetrics_get_clientTop_Proxy(IHTMLTableRowMetrics *This,__LONG32 *p);", "IHTMLTableRowMetrics_get_clientLeft_Proxy": "HRESULT WINAPI IHTMLTableRowMetrics_get_clientLeft_Proxy(IHTMLTableRowMetrics *This,__LONG32 *p);", "IHTMLTableCell_put_rowSpan_Proxy": "HRESULT WINAPI IHTMLTableCell_put_rowSpan_Proxy(IHTMLTableCell *This,__LONG32 v);", "IHTMLTableCell_get_rowSpan_Proxy": "HRESULT WINAPI IHTMLTableCell_get_rowSpan_Proxy(IHTMLTableCell *This,__LONG32 *p);", "IHTMLTableCell_put_colSpan_Proxy": "HRESULT WINAPI IHTMLTableCell_put_colSpan_Proxy(IHTMLTableCell *This,__LONG32 v);", "IHTMLTableCell_get_colSpan_Proxy": "HRESULT WINAPI IHTMLTableCell_get_colSpan_Proxy(IHTMLTableCell *This,__LONG32 *p);", "IHTMLTableCell_put_align_Proxy": "HRESULT WINAPI IHTMLTableCell_put_align_Proxy(IHTMLTableCell *This,BSTR v);", "IHTMLTableCell_get_align_Proxy": "HRESULT WINAPI IHTMLTableCell_get_align_Proxy(IHTMLTableCell *This,BSTR *p);", "IHTMLTableCell_put_vAlign_Proxy": "HRESULT WINAPI IHTMLTableCell_put_vAlign_Proxy(IHTMLTableCell *This,BSTR v);", "IHTMLTableCell_get_vAlign_Proxy": "HRESULT WINAPI IHTMLTableCell_get_vAlign_Proxy(IHTMLTableCell *This,BSTR *p);", "IHTMLTableCell_put_bgColor_Proxy": "HRESULT WINAPI IHTMLTableCell_put_bgColor_Proxy(IHTMLTableCell *This,VARIANT v);", "IHTMLTableCell_get_bgColor_Proxy": "HRESULT WINAPI IHTMLTableCell_get_bgColor_Proxy(IHTMLTableCell *This,VARIANT *p);", "IHTMLTableCell_put_noWrap_Proxy": "HRESULT WINAPI IHTMLTableCell_put_noWrap_Proxy(IHTMLTableCell *This,VARIANT_BOOL v);", "IHTMLTableCell_get_noWrap_Proxy": "HRESULT WINAPI IHTMLTableCell_get_noWrap_Proxy(IHTMLTableCell *This,VARIANT_BOOL *p);", "IHTMLTableCell_put_background_Proxy": "HRESULT WINAPI IHTMLTableCell_put_background_Proxy(IHTMLTableCell *This,BSTR v);", "IHTMLTableCell_get_background_Proxy": "HRESULT WINAPI IHTMLTableCell_get_background_Proxy(IHTMLTableCell *This,BSTR *p);", "IHTMLTableCell_put_borderColor_Proxy": "HRESULT WINAPI IHTMLTableCell_put_borderColor_Proxy(IHTMLTableCell *This,VARIANT v);", "IHTMLTableCell_get_borderColor_Proxy": "HRESULT WINAPI IHTMLTableCell_get_borderColor_Proxy(IHTMLTableCell *This,VARIANT *p);", "IHTMLTableCell_put_borderColorLight_Proxy": "HRESULT WINAPI IHTMLTableCell_put_borderColorLight_Proxy(IHTMLTableCell *This,VARIANT v);", "IHTMLTableCell_get_borderColorLight_Proxy": "HRESULT WINAPI IHTMLTableCell_get_borderColorLight_Proxy(IHTMLTableCell *This,VARIANT *p);", "IHTMLTableCell_put_borderColorDark_Proxy": "HRESULT WINAPI IHTMLTableCell_put_borderColorDark_Proxy(IHTMLTableCell *This,VARIANT v);", "IHTMLTableCell_get_borderColorDark_Proxy": "HRESULT WINAPI IHTMLTableCell_get_borderColorDark_Proxy(IHTMLTableCell *This,VARIANT *p);", "IHTMLTableCell_put_width_Proxy": "HRESULT WINAPI IHTMLTableCell_put_width_Proxy(IHTMLTableCell *This,VARIANT v);", "IHTMLTableCell_get_width_Proxy": "HRESULT WINAPI IHTMLTableCell_get_width_Proxy(IHTMLTableCell *This,VARIANT *p);", "IHTMLTableCell_put_height_Proxy": "HRESULT WINAPI IHTMLTableCell_put_height_Proxy(IHTMLTableCell *This,VARIANT v);", "IHTMLTableCell_get_height_Proxy": "HRESULT WINAPI IHTMLTableCell_get_height_Proxy(IHTMLTableCell *This,VARIANT *p);", "IHTMLTableCell_get_cellIndex_Proxy": "HRESULT WINAPI IHTMLTableCell_get_cellIndex_Proxy(IHTMLTableCell *This,__LONG32 *p);", "IHTMLTableCell2_put_abbr_Proxy": "HRESULT WINAPI IHTMLTableCell2_put_abbr_Proxy(IHTMLTableCell2 *This,BSTR v);", "IHTMLTableCell2_get_abbr_Proxy": "HRESULT WINAPI IHTMLTableCell2_get_abbr_Proxy(IHTMLTableCell2 *This,BSTR *p);", "IHTMLTableCell2_put_axis_Proxy": "HRESULT WINAPI IHTMLTableCell2_put_axis_Proxy(IHTMLTableCell2 *This,BSTR v);", "IHTMLTableCell2_get_axis_Proxy": "HRESULT WINAPI IHTMLTableCell2_get_axis_Proxy(IHTMLTableCell2 *This,BSTR *p);", "IHTMLTableCell2_put_ch_Proxy": "HRESULT WINAPI IHTMLTableCell2_put_ch_Proxy(IHTMLTableCell2 *This,BSTR v);", "IHTMLTableCell2_get_ch_Proxy": "HRESULT WINAPI IHTMLTableCell2_get_ch_Proxy(IHTMLTableCell2 *This,BSTR *p);", "IHTMLTableCell2_put_chOff_Proxy": "HRESULT WINAPI IHTMLTableCell2_put_chOff_Proxy(IHTMLTableCell2 *This,BSTR v);", "IHTMLTableCell2_get_chOff_Proxy": "HRESULT WINAPI IHTMLTableCell2_get_chOff_Proxy(IHTMLTableCell2 *This,BSTR *p);", "IHTMLTableCell2_put_headers_Proxy": "HRESULT WINAPI IHTMLTableCell2_put_headers_Proxy(IHTMLTableCell2 *This,BSTR v);", "IHTMLTableCell2_get_headers_Proxy": "HRESULT WINAPI IHTMLTableCell2_get_headers_Proxy(IHTMLTableCell2 *This,BSTR *p);", "IHTMLTableCell2_put_scope_Proxy": "HRESULT WINAPI IHTMLTableCell2_put_scope_Proxy(IHTMLTableCell2 *This,BSTR v);", "IHTMLTableCell2_get_scope_Proxy": "HRESULT WINAPI IHTMLTableCell2_get_scope_Proxy(IHTMLTableCell2 *This,BSTR *p);", "IHTMLScriptElement_put_src_Proxy": "HRESULT WINAPI IHTMLScriptElement_put_src_Proxy(IHTMLScriptElement *This,BSTR v);", "IHTMLScriptElement_get_src_Proxy": "HRESULT WINAPI IHTMLScriptElement_get_src_Proxy(IHTMLScriptElement *This,BSTR *p);", "IHTMLScriptElement_put_htmlFor_Proxy": "HRESULT WINAPI IHTMLScriptElement_put_htmlFor_Proxy(IHTMLScriptElement *This,BSTR v);", "IHTMLScriptElement_get_htmlFor_Proxy": "HRESULT WINAPI IHTMLScriptElement_get_htmlFor_Proxy(IHTMLScriptElement *This,BSTR *p);", "IHTMLScriptElement_put_event_Proxy": "HRESULT WINAPI IHTMLScriptElement_put_event_Proxy(IHTMLScriptElement *This,BSTR v);", "IHTMLScriptElement_get_event_Proxy": "HRESULT WINAPI IHTMLScriptElement_get_event_Proxy(IHTMLScriptElement *This,BSTR *p);", "IHTMLScriptElement_put_text_Proxy": "HRESULT WINAPI IHTMLScriptElement_put_text_Proxy(IHTMLScriptElement *This,BSTR v);", "IHTMLScriptElement_get_text_Proxy": "HRESULT WINAPI IHTMLScriptElement_get_text_Proxy(IHTMLScriptElement *This,BSTR *p);", "IHTMLScriptElement_put_defer_Proxy": "HRESULT WINAPI IHTMLScriptElement_put_defer_Proxy(IHTMLScriptElement *This,VARIANT_BOOL v);", "IHTMLScriptElement_get_defer_Proxy": "HRESULT WINAPI IHTMLScriptElement_get_defer_Proxy(IHTMLScriptElement *This,VARIANT_BOOL *p);", "IHTMLScriptElement_get_readyState_Proxy": "HRESULT WINAPI IHTMLScriptElement_get_readyState_Proxy(IHTMLScriptElement *This,BSTR *p);", "IHTMLScriptElement_put_onerror_Proxy": "HRESULT WINAPI IHTMLScriptElement_put_onerror_Proxy(IHTMLScriptElement *This,VARIANT v);", "IHTMLScriptElement_get_onerror_Proxy": "HRESULT WINAPI IHTMLScriptElement_get_onerror_Proxy(IHTMLScriptElement *This,VARIANT *p);", "IHTMLScriptElement_put_type_Proxy": "HRESULT WINAPI IHTMLScriptElement_put_type_Proxy(IHTMLScriptElement *This,BSTR v);", "IHTMLScriptElement_get_type_Proxy": "HRESULT WINAPI IHTMLScriptElement_get_type_Proxy(IHTMLScriptElement *This,BSTR *p);", "IHTMLScriptElement2_put_charset_Proxy": "HRESULT WINAPI IHTMLScriptElement2_put_charset_Proxy(IHTMLScriptElement2 *This,BSTR v);", "IHTMLScriptElement2_get_charset_Proxy": "HRESULT WINAPI IHTMLScriptElement2_get_charset_Proxy(IHTMLScriptElement2 *This,BSTR *p);", "IHTMLObjectElement_get_object_Proxy": "HRESULT WINAPI IHTMLObjectElement_get_object_Proxy(IHTMLObjectElement *This,IDispatch **p);", "IHTMLObjectElement_get_classid_Proxy": "HRESULT WINAPI IHTMLObjectElement_get_classid_Proxy(IHTMLObjectElement *This,BSTR *p);", "IHTMLObjectElement_get_data_Proxy": "HRESULT WINAPI IHTMLObjectElement_get_data_Proxy(IHTMLObjectElement *This,BSTR *p);", "IHTMLObjectElement_putref_recordset_Proxy": "HRESULT WINAPI IHTMLObjectElement_putref_recordset_Proxy(IHTMLObjectElement *This,IDispatch *v);", "IHTMLObjectElement_get_recordset_Proxy": "HRESULT WINAPI IHTMLObjectElement_get_recordset_Proxy(IHTMLObjectElement *This,IDispatch **p);", "IHTMLObjectElement_put_align_Proxy": "HRESULT WINAPI IHTMLObjectElement_put_align_Proxy(IHTMLObjectElement *This,BSTR v);", "IHTMLObjectElement_get_align_Proxy": "HRESULT WINAPI IHTMLObjectElement_get_align_Proxy(IHTMLObjectElement *This,BSTR *p);", "IHTMLObjectElement_put_name_Proxy": "HRESULT WINAPI IHTMLObjectElement_put_name_Proxy(IHTMLObjectElement *This,BSTR v);", "IHTMLObjectElement_get_name_Proxy": "HRESULT WINAPI IHTMLObjectElement_get_name_Proxy(IHTMLObjectElement *This,BSTR *p);", "IHTMLObjectElement_put_codeBase_Proxy": "HRESULT WINAPI IHTMLObjectElement_put_codeBase_Proxy(IHTMLObjectElement *This,BSTR v);", "IHTMLObjectElement_get_codeBase_Proxy": "HRESULT WINAPI IHTMLObjectElement_get_codeBase_Proxy(IHTMLObjectElement *This,BSTR *p);", "IHTMLObjectElement_put_codeType_Proxy": "HRESULT WINAPI IHTMLObjectElement_put_codeType_Proxy(IHTMLObjectElement *This,BSTR v);", "IHTMLObjectElement_get_codeType_Proxy": "HRESULT WINAPI IHTMLObjectElement_get_codeType_Proxy(IHTMLObjectElement *This,BSTR *p);", "IHTMLObjectElement_put_code_Proxy": "HRESULT WINAPI IHTMLObjectElement_put_code_Proxy(IHTMLObjectElement *This,BSTR v);", "IHTMLObjectElement_get_code_Proxy": "HRESULT WINAPI IHTMLObjectElement_get_code_Proxy(IHTMLObjectElement *This,BSTR *p);", "IHTMLObjectElement_get_BaseHref_Proxy": "HRESULT WINAPI IHTMLObjectElement_get_BaseHref_Proxy(IHTMLObjectElement *This,BSTR *p);", "IHTMLObjectElement_put_type_Proxy": "HRESULT WINAPI IHTMLObjectElement_put_type_Proxy(IHTMLObjectElement *This,BSTR v);", "IHTMLObjectElement_get_type_Proxy": "HRESULT WINAPI IHTMLObjectElement_get_type_Proxy(IHTMLObjectElement *This,BSTR *p);", "IHTMLObjectElement_get_form_Proxy": "HRESULT WINAPI IHTMLObjectElement_get_form_Proxy(IHTMLObjectElement *This,IHTMLFormElement **p);", "IHTMLObjectElement_put_width_Proxy": "HRESULT WINAPI IHTMLObjectElement_put_width_Proxy(IHTMLObjectElement *This,VARIANT v);", "IHTMLObjectElement_get_width_Proxy": "HRESULT WINAPI IHTMLObjectElement_get_width_Proxy(IHTMLObjectElement *This,VARIANT *p);", "IHTMLObjectElement_put_height_Proxy": "HRESULT WINAPI IHTMLObjectElement_put_height_Proxy(IHTMLObjectElement *This,VARIANT v);", "IHTMLObjectElement_get_height_Proxy": "HRESULT WINAPI IHTMLObjectElement_get_height_Proxy(IHTMLObjectElement *This,VARIANT *p);", "IHTMLObjectElement_get_readyState_Proxy": "HRESULT WINAPI IHTMLObjectElement_get_readyState_Proxy(IHTMLObjectElement *This,__LONG32 *p);", "IHTMLObjectElement_put_onreadystatechange_Proxy": "HRESULT WINAPI IHTMLObjectElement_put_onreadystatechange_Proxy(IHTMLObjectElement *This,VARIANT v);", "IHTMLObjectElement_get_onreadystatechange_Proxy": "HRESULT WINAPI IHTMLObjectElement_get_onreadystatechange_Proxy(IHTMLObjectElement *This,VARIANT *p);", "IHTMLObjectElement_put_onerror_Proxy": "HRESULT WINAPI IHTMLObjectElement_put_onerror_Proxy(IHTMLObjectElement *This,VARIANT v);", "IHTMLObjectElement_get_onerror_Proxy": "HRESULT WINAPI IHTMLObjectElement_get_onerror_Proxy(IHTMLObjectElement *This,VARIANT *p);", "IHTMLObjectElement_put_altHtml_Proxy": "HRESULT WINAPI IHTMLObjectElement_put_altHtml_Proxy(IHTMLObjectElement *This,BSTR v);", "IHTMLObjectElement_get_altHtml_Proxy": "HRESULT WINAPI IHTMLObjectElement_get_altHtml_Proxy(IHTMLObjectElement *This,BSTR *p);", "IHTMLObjectElement_put_vspace_Proxy": "HRESULT WINAPI IHTMLObjectElement_put_vspace_Proxy(IHTMLObjectElement *This,__LONG32 v);", "IHTMLObjectElement_get_vspace_Proxy": "HRESULT WINAPI IHTMLObjectElement_get_vspace_Proxy(IHTMLObjectElement *This,__LONG32 *p);", "IHTMLObjectElement_put_hspace_Proxy": "HRESULT WINAPI IHTMLObjectElement_put_hspace_Proxy(IHTMLObjectElement *This,__LONG32 v);", "IHTMLObjectElement_get_hspace_Proxy": "HRESULT WINAPI IHTMLObjectElement_get_hspace_Proxy(IHTMLObjectElement *This,__LONG32 *p);", "IHTMLObjectElement2_namedRecordset_Proxy": "HRESULT WINAPI IHTMLObjectElement2_namedRecordset_Proxy(IHTMLObjectElement2 *This,BSTR dataMember,VARIANT *hierarchy,IDispatch **ppRecordset);", "IHTMLObjectElement2_put_classid_Proxy": "HRESULT WINAPI IHTMLObjectElement2_put_classid_Proxy(IHTMLObjectElement2 *This,BSTR v);", "IHTMLObjectElement2_get_classid_Proxy": "HRESULT WINAPI IHTMLObjectElement2_get_classid_Proxy(IHTMLObjectElement2 *This,BSTR *p);", "IHTMLObjectElement2_put_data_Proxy": "HRESULT WINAPI IHTMLObjectElement2_put_data_Proxy(IHTMLObjectElement2 *This,BSTR v);", "IHTMLObjectElement2_get_data_Proxy": "HRESULT WINAPI IHTMLObjectElement2_get_data_Proxy(IHTMLObjectElement2 *This,BSTR *p);", "IHTMLObjectElement3_put_archive_Proxy": "HRESULT WINAPI IHTMLObjectElement3_put_archive_Proxy(IHTMLObjectElement3 *This,BSTR v);", "IHTMLObjectElement3_get_archive_Proxy": "HRESULT WINAPI IHTMLObjectElement3_get_archive_Proxy(IHTMLObjectElement3 *This,BSTR *p);", "IHTMLObjectElement3_put_alt_Proxy": "HRESULT WINAPI IHTMLObjectElement3_put_alt_Proxy(IHTMLObjectElement3 *This,BSTR v);", "IHTMLObjectElement3_get_alt_Proxy": "HRESULT WINAPI IHTMLObjectElement3_get_alt_Proxy(IHTMLObjectElement3 *This,BSTR *p);", "IHTMLObjectElement3_put_declare_Proxy": "HRESULT WINAPI IHTMLObjectElement3_put_declare_Proxy(IHTMLObjectElement3 *This,VARIANT_BOOL v);", "IHTMLObjectElement3_get_declare_Proxy": "HRESULT WINAPI IHTMLObjectElement3_get_declare_Proxy(IHTMLObjectElement3 *This,VARIANT_BOOL *p);", "IHTMLObjectElement3_put_standby_Proxy": "HRESULT WINAPI IHTMLObjectElement3_put_standby_Proxy(IHTMLObjectElement3 *This,BSTR v);", "IHTMLObjectElement3_get_standby_Proxy": "HRESULT WINAPI IHTMLObjectElement3_get_standby_Proxy(IHTMLObjectElement3 *This,BSTR *p);", "IHTMLObjectElement3_put_border_Proxy": "HRESULT WINAPI IHTMLObjectElement3_put_border_Proxy(IHTMLObjectElement3 *This,VARIANT v);", "IHTMLObjectElement3_get_border_Proxy": "HRESULT WINAPI IHTMLObjectElement3_get_border_Proxy(IHTMLObjectElement3 *This,VARIANT *p);", "IHTMLObjectElement3_put_useMap_Proxy": "HRESULT WINAPI IHTMLObjectElement3_put_useMap_Proxy(IHTMLObjectElement3 *This,BSTR v);", "IHTMLObjectElement3_get_useMap_Proxy": "HRESULT WINAPI IHTMLObjectElement3_get_useMap_Proxy(IHTMLObjectElement3 *This,BSTR *p);", "IHTMLParamElement_put_name_Proxy": "HRESULT WINAPI IHTMLParamElement_put_name_Proxy(IHTMLParamElement *This,BSTR v);", "IHTMLParamElement_get_name_Proxy": "HRESULT WINAPI IHTMLParamElement_get_name_Proxy(IHTMLParamElement *This,BSTR *p);", "IHTMLParamElement_put_value_Proxy": "HRESULT WINAPI IHTMLParamElement_put_value_Proxy(IHTMLParamElement *This,BSTR v);", "IHTMLParamElement_get_value_Proxy": "HRESULT WINAPI IHTMLParamElement_get_value_Proxy(IHTMLParamElement *This,BSTR *p);", "IHTMLParamElement_put_type_Proxy": "HRESULT WINAPI IHTMLParamElement_put_type_Proxy(IHTMLParamElement *This,BSTR v);", "IHTMLParamElement_get_type_Proxy": "HRESULT WINAPI IHTMLParamElement_get_type_Proxy(IHTMLParamElement *This,BSTR *p);", "IHTMLParamElement_put_valueType_Proxy": "HRESULT WINAPI IHTMLParamElement_put_valueType_Proxy(IHTMLParamElement *This,BSTR v);", "IHTMLParamElement_get_valueType_Proxy": "HRESULT WINAPI IHTMLParamElement_get_valueType_Proxy(IHTMLParamElement *This,BSTR *p);", "IHTMLFrameBase2_get_contentWindow_Proxy": "HRESULT WINAPI IHTMLFrameBase2_get_contentWindow_Proxy(IHTMLFrameBase2 *This,IHTMLWindow2 **p);", "IHTMLFrameBase2_put_onload_Proxy": "HRESULT WINAPI IHTMLFrameBase2_put_onload_Proxy(IHTMLFrameBase2 *This,VARIANT v);", "IHTMLFrameBase2_get_onload_Proxy": "HRESULT WINAPI IHTMLFrameBase2_get_onload_Proxy(IHTMLFrameBase2 *This,VARIANT *p);", "IHTMLFrameBase2_put_onreadystatechange_Proxy": "HRESULT WINAPI IHTMLFrameBase2_put_onreadystatechange_Proxy(IHTMLFrameBase2 *This,VARIANT v);", "IHTMLFrameBase2_get_onreadystatechange_Proxy": "HRESULT WINAPI IHTMLFrameBase2_get_onreadystatechange_Proxy(IHTMLFrameBase2 *This,VARIANT *p);", "IHTMLFrameBase2_get_readyState_Proxy": "HRESULT WINAPI IHTMLFrameBase2_get_readyState_Proxy(IHTMLFrameBase2 *This,BSTR *p);", "IHTMLFrameBase2_put_allowTransparency_Proxy": "HRESULT WINAPI IHTMLFrameBase2_put_allowTransparency_Proxy(IHTMLFrameBase2 *This,VARIANT_BOOL v);", "IHTMLFrameBase2_get_allowTransparency_Proxy": "HRESULT WINAPI IHTMLFrameBase2_get_allowTransparency_Proxy(IHTMLFrameBase2 *This,VARIANT_BOOL *p);", "IHTMLFrameBase3_put_longDesc_Proxy": "HRESULT WINAPI IHTMLFrameBase3_put_longDesc_Proxy(IHTMLFrameBase3 *This,BSTR v);", "IHTMLFrameBase3_get_longDesc_Proxy": "HRESULT WINAPI IHTMLFrameBase3_get_longDesc_Proxy(IHTMLFrameBase3 *This,BSTR *p);", "IHTMLFrameElement_put_borderColor_Proxy": "HRESULT WINAPI IHTMLFrameElement_put_borderColor_Proxy(IHTMLFrameElement *This,VARIANT v);", "IHTMLFrameElement_get_borderColor_Proxy": "HRESULT WINAPI IHTMLFrameElement_get_borderColor_Proxy(IHTMLFrameElement *This,VARIANT *p);", "IHTMLFrameElement2_put_height_Proxy": "HRESULT WINAPI IHTMLFrameElement2_put_height_Proxy(IHTMLFrameElement2 *This,VARIANT v);", "IHTMLFrameElement2_get_height_Proxy": "HRESULT WINAPI IHTMLFrameElement2_get_height_Proxy(IHTMLFrameElement2 *This,VARIANT *p);", "IHTMLFrameElement2_put_width_Proxy": "HRESULT WINAPI IHTMLFrameElement2_put_width_Proxy(IHTMLFrameElement2 *This,VARIANT v);", "IHTMLFrameElement2_get_width_Proxy": "HRESULT WINAPI IHTMLFrameElement2_get_width_Proxy(IHTMLFrameElement2 *This,VARIANT *p);", "IHTMLIFrameElement_put_vspace_Proxy": "HRESULT WINAPI IHTMLIFrameElement_put_vspace_Proxy(IHTMLIFrameElement *This,__LONG32 v);", "IHTMLIFrameElement_get_vspace_Proxy": "HRESULT WINAPI IHTMLIFrameElement_get_vspace_Proxy(IHTMLIFrameElement *This,__LONG32 *p);", "IHTMLIFrameElement_put_hspace_Proxy": "HRESULT WINAPI IHTMLIFrameElement_put_hspace_Proxy(IHTMLIFrameElement *This,__LONG32 v);", "IHTMLIFrameElement_get_hspace_Proxy": "HRESULT WINAPI IHTMLIFrameElement_get_hspace_Proxy(IHTMLIFrameElement *This,__LONG32 *p);", "IHTMLIFrameElement_put_align_Proxy": "HRESULT WINAPI IHTMLIFrameElement_put_align_Proxy(IHTMLIFrameElement *This,BSTR v);", "IHTMLIFrameElement_get_align_Proxy": "HRESULT WINAPI IHTMLIFrameElement_get_align_Proxy(IHTMLIFrameElement *This,BSTR *p);", "IHTMLIFrameElement2_put_height_Proxy": "HRESULT WINAPI IHTMLIFrameElement2_put_height_Proxy(IHTMLIFrameElement2 *This,VARIANT v);", "IHTMLIFrameElement2_get_height_Proxy": "HRESULT WINAPI IHTMLIFrameElement2_get_height_Proxy(IHTMLIFrameElement2 *This,VARIANT *p);", "IHTMLIFrameElement2_put_width_Proxy": "HRESULT WINAPI IHTMLIFrameElement2_put_width_Proxy(IHTMLIFrameElement2 *This,VARIANT v);", "IHTMLIFrameElement2_get_width_Proxy": "HRESULT WINAPI IHTMLIFrameElement2_get_width_Proxy(IHTMLIFrameElement2 *This,VARIANT *p);", "IHTMLDivPosition_put_align_Proxy": "HRESULT WINAPI IHTMLDivPosition_put_align_Proxy(IHTMLDivPosition *This,BSTR v);", "IHTMLDivPosition_get_align_Proxy": "HRESULT WINAPI IHTMLDivPosition_get_align_Proxy(IHTMLDivPosition *This,BSTR *p);", "IHTMLFieldSetElement_put_align_Proxy": "HRESULT WINAPI IHTMLFieldSetElement_put_align_Proxy(IHTMLFieldSetElement *This,BSTR v);", "IHTMLFieldSetElement_get_align_Proxy": "HRESULT WINAPI IHTMLFieldSetElement_get_align_Proxy(IHTMLFieldSetElement *This,BSTR *p);", "IHTMLFieldSetElement2_get_form_Proxy": "HRESULT WINAPI IHTMLFieldSetElement2_get_form_Proxy(IHTMLFieldSetElement2 *This,IHTMLFormElement **p);", "IHTMLLegendElement_put_align_Proxy": "HRESULT WINAPI IHTMLLegendElement_put_align_Proxy(IHTMLLegendElement *This,BSTR v);", "IHTMLLegendElement_get_align_Proxy": "HRESULT WINAPI IHTMLLegendElement_get_align_Proxy(IHTMLLegendElement *This,BSTR *p);", "IHTMLLegendElement2_get_form_Proxy": "HRESULT WINAPI IHTMLLegendElement2_get_form_Proxy(IHTMLLegendElement2 *This,IHTMLFormElement **p);", "IHTMLSpanFlow_put_align_Proxy": "HRESULT WINAPI IHTMLSpanFlow_put_align_Proxy(IHTMLSpanFlow *This,BSTR v);", "IHTMLSpanFlow_get_align_Proxy": "HRESULT WINAPI IHTMLSpanFlow_get_align_Proxy(IHTMLSpanFlow *This,BSTR *p);", "IHTMLFrameSetElement_put_rows_Proxy": "HRESULT WINAPI IHTMLFrameSetElement_put_rows_Proxy(IHTMLFrameSetElement *This,BSTR v);", "IHTMLFrameSetElement_get_rows_Proxy": "HRESULT WINAPI IHTMLFrameSetElement_get_rows_Proxy(IHTMLFrameSetElement *This,BSTR *p);", "IHTMLFrameSetElement_put_cols_Proxy": "HRESULT WINAPI IHTMLFrameSetElement_put_cols_Proxy(IHTMLFrameSetElement *This,BSTR v);", "IHTMLFrameSetElement_get_cols_Proxy": "HRESULT WINAPI IHTMLFrameSetElement_get_cols_Proxy(IHTMLFrameSetElement *This,BSTR *p);", "IHTMLFrameSetElement_put_border_Proxy": "HRESULT WINAPI IHTMLFrameSetElement_put_border_Proxy(IHTMLFrameSetElement *This,VARIANT v);", "IHTMLFrameSetElement_get_border_Proxy": "HRESULT WINAPI IHTMLFrameSetElement_get_border_Proxy(IHTMLFrameSetElement *This,VARIANT *p);", "IHTMLFrameSetElement_put_borderColor_Proxy": "HRESULT WINAPI IHTMLFrameSetElement_put_borderColor_Proxy(IHTMLFrameSetElement *This,VARIANT v);", "IHTMLFrameSetElement_get_borderColor_Proxy": "HRESULT WINAPI IHTMLFrameSetElement_get_borderColor_Proxy(IHTMLFrameSetElement *This,VARIANT *p);", "IHTMLFrameSetElement_put_frameBorder_Proxy": "HRESULT WINAPI IHTMLFrameSetElement_put_frameBorder_Proxy(IHTMLFrameSetElement *This,BSTR v);", "IHTMLFrameSetElement_get_frameBorder_Proxy": "HRESULT WINAPI IHTMLFrameSetElement_get_frameBorder_Proxy(IHTMLFrameSetElement *This,BSTR *p);", "IHTMLFrameSetElement_put_frameSpacing_Proxy": "HRESULT WINAPI IHTMLFrameSetElement_put_frameSpacing_Proxy(IHTMLFrameSetElement *This,VARIANT v);", "IHTMLFrameSetElement_get_frameSpacing_Proxy": "HRESULT WINAPI IHTMLFrameSetElement_get_frameSpacing_Proxy(IHTMLFrameSetElement *This,VARIANT *p);", "IHTMLFrameSetElement_put_name_Proxy": "HRESULT WINAPI IHTMLFrameSetElement_put_name_Proxy(IHTMLFrameSetElement *This,BSTR v);", "IHTMLFrameSetElement_get_name_Proxy": "HRESULT WINAPI IHTMLFrameSetElement_get_name_Proxy(IHTMLFrameSetElement *This,BSTR *p);", "IHTMLFrameSetElement_put_onload_Proxy": "HRESULT WINAPI IHTMLFrameSetElement_put_onload_Proxy(IHTMLFrameSetElement *This,VARIANT v);", "IHTMLFrameSetElement_get_onload_Proxy": "HRESULT WINAPI IHTMLFrameSetElement_get_onload_Proxy(IHTMLFrameSetElement *This,VARIANT *p);", "IHTMLFrameSetElement_put_onunload_Proxy": "HRESULT WINAPI IHTMLFrameSetElement_put_onunload_Proxy(IHTMLFrameSetElement *This,VARIANT v);", "IHTMLFrameSetElement_get_onunload_Proxy": "HRESULT WINAPI IHTMLFrameSetElement_get_onunload_Proxy(IHTMLFrameSetElement *This,VARIANT *p);", "IHTMLFrameSetElement_put_onbeforeunload_Proxy": "HRESULT WINAPI IHTMLFrameSetElement_put_onbeforeunload_Proxy(IHTMLFrameSetElement *This,VARIANT v);", "IHTMLFrameSetElement_get_onbeforeunload_Proxy": "HRESULT WINAPI IHTMLFrameSetElement_get_onbeforeunload_Proxy(IHTMLFrameSetElement *This,VARIANT *p);", "IHTMLFrameSetElement2_put_onbeforeprint_Proxy": "HRESULT WINAPI IHTMLFrameSetElement2_put_onbeforeprint_Proxy(IHTMLFrameSetElement2 *This,VARIANT v);", "IHTMLFrameSetElement2_get_onbeforeprint_Proxy": "HRESULT WINAPI IHTMLFrameSetElement2_get_onbeforeprint_Proxy(IHTMLFrameSetElement2 *This,VARIANT *p);", "IHTMLFrameSetElement2_put_onafterprint_Proxy": "HRESULT WINAPI IHTMLFrameSetElement2_put_onafterprint_Proxy(IHTMLFrameSetElement2 *This,VARIANT v);", "IHTMLFrameSetElement2_get_onafterprint_Proxy": "HRESULT WINAPI IHTMLFrameSetElement2_get_onafterprint_Proxy(IHTMLFrameSetElement2 *This,VARIANT *p);", "IHTMLBGsound_put_src_Proxy": "HRESULT WINAPI IHTMLBGsound_put_src_Proxy(IHTMLBGsound *This,BSTR v);", "IHTMLBGsound_get_src_Proxy": "HRESULT WINAPI IHTMLBGsound_get_src_Proxy(IHTMLBGsound *This,BSTR *p);", "IHTMLBGsound_put_loop_Proxy": "HRESULT WINAPI IHTMLBGsound_put_loop_Proxy(IHTMLBGsound *This,VARIANT v);", "IHTMLBGsound_get_loop_Proxy": "HRESULT WINAPI IHTMLBGsound_get_loop_Proxy(IHTMLBGsound *This,VARIANT *p);", "IHTMLBGsound_put_volume_Proxy": "HRESULT WINAPI IHTMLBGsound_put_volume_Proxy(IHTMLBGsound *This,VARIANT v);", "IHTMLBGsound_get_volume_Proxy": "HRESULT WINAPI IHTMLBGsound_get_volume_Proxy(IHTMLBGsound *This,VARIANT *p);", "IHTMLBGsound_put_balance_Proxy": "HRESULT WINAPI IHTMLBGsound_put_balance_Proxy(IHTMLBGsound *This,VARIANT v);", "IHTMLBGsound_get_balance_Proxy": "HRESULT WINAPI IHTMLBGsound_get_balance_Proxy(IHTMLBGsound *This,VARIANT *p);", "IHTMLFontNamesCollection_get_length_Proxy": "HRESULT WINAPI IHTMLFontNamesCollection_get_length_Proxy(IHTMLFontNamesCollection *This,__LONG32 *p);", "IHTMLFontNamesCollection_get__newEnum_Proxy": "HRESULT WINAPI IHTMLFontNamesCollection_get__newEnum_Proxy(IHTMLFontNamesCollection *This,IUnknown **p);", "IHTMLFontNamesCollection_item_Proxy": "HRESULT WINAPI IHTMLFontNamesCollection_item_Proxy(IHTMLFontNamesCollection *This,__LONG32 index,BSTR *pBstr);", "IHTMLFontSizesCollection_get_length_Proxy": "HRESULT WINAPI IHTMLFontSizesCollection_get_length_Proxy(IHTMLFontSizesCollection *This,__LONG32 *p);", "IHTMLFontSizesCollection_get__newEnum_Proxy": "HRESULT WINAPI IHTMLFontSizesCollection_get__newEnum_Proxy(IHTMLFontSizesCollection *This,IUnknown **p);", "IHTMLFontSizesCollection_get_forFont_Proxy": "HRESULT WINAPI IHTMLFontSizesCollection_get_forFont_Proxy(IHTMLFontSizesCollection *This,BSTR *p);", "IHTMLFontSizesCollection_item_Proxy": "HRESULT WINAPI IHTMLFontSizesCollection_item_Proxy(IHTMLFontSizesCollection *This,__LONG32 index,__LONG32 *plSize);", "IHTMLOptionsHolder_get_document_Proxy": "HRESULT WINAPI IHTMLOptionsHolder_get_document_Proxy(IHTMLOptionsHolder *This,IHTMLDocument2 **p);", "IHTMLOptionsHolder_get_fonts_Proxy": "HRESULT WINAPI IHTMLOptionsHolder_get_fonts_Proxy(IHTMLOptionsHolder *This,IHTMLFontNamesCollection **p);", "IHTMLOptionsHolder_put_execArg_Proxy": "HRESULT WINAPI IHTMLOptionsHolder_put_execArg_Proxy(IHTMLOptionsHolder *This,VARIANT v);", "IHTMLOptionsHolder_get_execArg_Proxy": "HRESULT WINAPI IHTMLOptionsHolder_get_execArg_Proxy(IHTMLOptionsHolder *This,VARIANT *p);", "IHTMLOptionsHolder_put_errorLine_Proxy": "HRESULT WINAPI IHTMLOptionsHolder_put_errorLine_Proxy(IHTMLOptionsHolder *This,__LONG32 v);", "IHTMLOptionsHolder_get_errorLine_Proxy": "HRESULT WINAPI IHTMLOptionsHolder_get_errorLine_Proxy(IHTMLOptionsHolder *This,__LONG32 *p);", "IHTMLOptionsHolder_put_errorCharacter_Proxy": "HRESULT WINAPI IHTMLOptionsHolder_put_errorCharacter_Proxy(IHTMLOptionsHolder *This,__LONG32 v);", "IHTMLOptionsHolder_get_errorCharacter_Proxy": "HRESULT WINAPI IHTMLOptionsHolder_get_errorCharacter_Proxy(IHTMLOptionsHolder *This,__LONG32 *p);", "IHTMLOptionsHolder_put_errorCode_Proxy": "HRESULT WINAPI IHTMLOptionsHolder_put_errorCode_Proxy(IHTMLOptionsHolder *This,__LONG32 v);", "IHTMLOptionsHolder_get_errorCode_Proxy": "HRESULT WINAPI IHTMLOptionsHolder_get_errorCode_Proxy(IHTMLOptionsHolder *This,__LONG32 *p);", "IHTMLOptionsHolder_put_errorMessage_Proxy": "HRESULT WINAPI IHTMLOptionsHolder_put_errorMessage_Proxy(IHTMLOptionsHolder *This,BSTR v);", "IHTMLOptionsHolder_get_errorMessage_Proxy": "HRESULT WINAPI IHTMLOptionsHolder_get_errorMessage_Proxy(IHTMLOptionsHolder *This,BSTR *p);", "IHTMLOptionsHolder_put_errorDebug_Proxy": "HRESULT WINAPI IHTMLOptionsHolder_put_errorDebug_Proxy(IHTMLOptionsHolder *This,VARIANT_BOOL v);", "IHTMLOptionsHolder_get_errorDebug_Proxy": "HRESULT WINAPI IHTMLOptionsHolder_get_errorDebug_Proxy(IHTMLOptionsHolder *This,VARIANT_BOOL *p);", "IHTMLOptionsHolder_get_unsecuredWindowOfDocument_Proxy": "HRESULT WINAPI IHTMLOptionsHolder_get_unsecuredWindowOfDocument_Proxy(IHTMLOptionsHolder *This,IHTMLWindow2 **p);", "IHTMLOptionsHolder_put_findText_Proxy": "HRESULT WINAPI IHTMLOptionsHolder_put_findText_Proxy(IHTMLOptionsHolder *This,BSTR v);", "IHTMLOptionsHolder_get_findText_Proxy": "HRESULT WINAPI IHTMLOptionsHolder_get_findText_Proxy(IHTMLOptionsHolder *This,BSTR *p);", "IHTMLOptionsHolder_put_anythingAfterFrameset_Proxy": "HRESULT WINAPI IHTMLOptionsHolder_put_anythingAfterFrameset_Proxy(IHTMLOptionsHolder *This,VARIANT_BOOL v);", "IHTMLOptionsHolder_get_anythingAfterFrameset_Proxy": "HRESULT WINAPI IHTMLOptionsHolder_get_anythingAfterFrameset_Proxy(IHTMLOptionsHolder *This,VARIANT_BOOL *p);", "IHTMLOptionsHolder_sizes_Proxy": "HRESULT WINAPI IHTMLOptionsHolder_sizes_Proxy(IHTMLOptionsHolder *This,BSTR fontName,IHTMLFontSizesCollection **pSizesCollection);", "IHTMLOptionsHolder_openfiledlg_Proxy": "HRESULT WINAPI IHTMLOptionsHolder_openfiledlg_Proxy(IHTMLOptionsHolder *This,VARIANT initFile,VARIANT initDir,VARIANT filter,VARIANT title,BSTR *pathName);", "IHTMLOptionsHolder_savefiledlg_Proxy": "HRESULT WINAPI IHTMLOptionsHolder_savefiledlg_Proxy(IHTMLOptionsHolder *This,VARIANT initFile,VARIANT initDir,VARIANT filter,VARIANT title,BSTR *pathName);", "IHTMLOptionsHolder_choosecolordlg_Proxy": "HRESULT WINAPI IHTMLOptionsHolder_choosecolordlg_Proxy(IHTMLOptionsHolder *This,VARIANT initColor,__LONG32 *rgbColor);", "IHTMLOptionsHolder_showSecurityInfo_Proxy": "HRESULT WINAPI IHTMLOptionsHolder_showSecurityInfo_Proxy(IHTMLOptionsHolder *This);", "IHTMLOptionsHolder_isApartmentModel_Proxy": "HRESULT WINAPI IHTMLOptionsHolder_isApartmentModel_Proxy(IHTMLOptionsHolder *This,IHTMLObjectElement *object,VARIANT_BOOL *fApartment);", "IHTMLOptionsHolder_getCharset_Proxy": "HRESULT WINAPI IHTMLOptionsHolder_getCharset_Proxy(IHTMLOptionsHolder *This,BSTR fontName,__LONG32 *charset);", "IHTMLOptionsHolder_get_secureConnectionInfo_Proxy": "HRESULT WINAPI IHTMLOptionsHolder_get_secureConnectionInfo_Proxy(IHTMLOptionsHolder *This,BSTR *p);", "IHTMLStyleElement_put_type_Proxy": "HRESULT WINAPI IHTMLStyleElement_put_type_Proxy(IHTMLStyleElement *This,BSTR v);", "IHTMLStyleElement_get_type_Proxy": "HRESULT WINAPI IHTMLStyleElement_get_type_Proxy(IHTMLStyleElement *This,BSTR *p);", "IHTMLStyleElement_get_readyState_Proxy": "HRESULT WINAPI IHTMLStyleElement_get_readyState_Proxy(IHTMLStyleElement *This,BSTR *p);", "IHTMLStyleElement_put_onreadystatechange_Proxy": "HRESULT WINAPI IHTMLStyleElement_put_onreadystatechange_Proxy(IHTMLStyleElement *This,VARIANT v);", "IHTMLStyleElement_get_onreadystatechange_Proxy": "HRESULT WINAPI IHTMLStyleElement_get_onreadystatechange_Proxy(IHTMLStyleElement *This,VARIANT *p);", "IHTMLStyleElement_put_onload_Proxy": "HRESULT WINAPI IHTMLStyleElement_put_onload_Proxy(IHTMLStyleElement *This,VARIANT v);", "IHTMLStyleElement_get_onload_Proxy": "HRESULT WINAPI IHTMLStyleElement_get_onload_Proxy(IHTMLStyleElement *This,VARIANT *p);", "IHTMLStyleElement_put_onerror_Proxy": "HRESULT WINAPI IHTMLStyleElement_put_onerror_Proxy(IHTMLStyleElement *This,VARIANT v);", "IHTMLStyleElement_get_onerror_Proxy": "HRESULT WINAPI IHTMLStyleElement_get_onerror_Proxy(IHTMLStyleElement *This,VARIANT *p);", "IHTMLStyleElement_get_styleSheet_Proxy": "HRESULT WINAPI IHTMLStyleElement_get_styleSheet_Proxy(IHTMLStyleElement *This,IHTMLStyleSheet **p);", "IHTMLStyleElement_put_disabled_Proxy": "HRESULT WINAPI IHTMLStyleElement_put_disabled_Proxy(IHTMLStyleElement *This,VARIANT_BOOL v);", "IHTMLStyleElement_get_disabled_Proxy": "HRESULT WINAPI IHTMLStyleElement_get_disabled_Proxy(IHTMLStyleElement *This,VARIANT_BOOL *p);", "IHTMLStyleElement_put_media_Proxy": "HRESULT WINAPI IHTMLStyleElement_put_media_Proxy(IHTMLStyleElement *This,BSTR v);", "IHTMLStyleElement_get_media_Proxy": "HRESULT WINAPI IHTMLStyleElement_get_media_Proxy(IHTMLStyleElement *This,BSTR *p);", "IHTMLStyleFontFace_put_fontsrc_Proxy": "HRESULT WINAPI IHTMLStyleFontFace_put_fontsrc_Proxy(IHTMLStyleFontFace *This,BSTR v);", "IHTMLStyleFontFace_get_fontsrc_Proxy": "HRESULT WINAPI IHTMLStyleFontFace_get_fontsrc_Proxy(IHTMLStyleFontFace *This,BSTR *p);", "ICSSFilterSite_GetElement_Proxy": "HRESULT WINAPI ICSSFilterSite_GetElement_Proxy(ICSSFilterSite *This,IHTMLElement **Element);", "ICSSFilterSite_FireOnFilterChangeEvent_Proxy": "HRESULT WINAPI ICSSFilterSite_FireOnFilterChangeEvent_Proxy(ICSSFilterSite *This);", "IMarkupPointer_OwningDoc_Proxy": "HRESULT WINAPI IMarkupPointer_OwningDoc_Proxy(IMarkupPointer *This,IHTMLDocument2 **ppDoc);", "IMarkupPointer_Gravity_Proxy": "HRESULT WINAPI IMarkupPointer_Gravity_Proxy(IMarkupPointer *This,POINTER_GRAVITY *pGravity);", "IMarkupPointer_SetGravity_Proxy": "HRESULT WINAPI IMarkupPointer_SetGravity_Proxy(IMarkupPointer *This,POINTER_GRAVITY Gravity);", "IMarkupPointer_Cling_Proxy": "HRESULT WINAPI IMarkupPointer_Cling_Proxy(IMarkupPointer *This,WINBOOL *pfCling);", "IMarkupPointer_SetCling_Proxy": "HRESULT WINAPI IMarkupPointer_SetCling_Proxy(IMarkupPointer *This,WINBOOL fCLing);", "IMarkupPointer_Unposition_Proxy": "HRESULT WINAPI IMarkupPointer_Unposition_Proxy(IMarkupPointer *This);", "IMarkupPointer_IsPositioned_Proxy": "HRESULT WINAPI IMarkupPointer_IsPositioned_Proxy(IMarkupPointer *This,WINBOOL *pfPositioned);", "IMarkupPointer_GetContainer_Proxy": "HRESULT WINAPI IMarkupPointer_GetContainer_Proxy(IMarkupPointer *This,IMarkupContainer **ppContainer);", "IMarkupPointer_MoveAdjacentToElement_Proxy": "HRESULT WINAPI IMarkupPointer_MoveAdjacentToElement_Proxy(IMarkupPointer *This,IHTMLElement *pElement,ELEMENT_ADJACENCY eAdj);", "IMarkupPointer_MoveToPointer_Proxy": "HRESULT WINAPI IMarkupPointer_MoveToPointer_Proxy(IMarkupPointer *This,IMarkupPointer *pPointer);", "IMarkupPointer_MoveToContainer_Proxy": "HRESULT WINAPI IMarkupPointer_MoveToContainer_Proxy(IMarkupPointer *This,IMarkupContainer *pContainer,WINBOOL fAtStart);", "IMarkupPointer_Left_Proxy": "HRESULT WINAPI IMarkupPointer_Left_Proxy(IMarkupPointer *This,WINBOOL fMove,MARKUP_CONTEXT_TYPE *pContext,IHTMLElement **ppElement,__LONG32 *pcch,OLECHAR *pchText);", "IMarkupPointer_Right_Proxy": "HRESULT WINAPI IMarkupPointer_Right_Proxy(IMarkupPointer *This,WINBOOL fMove,MARKUP_CONTEXT_TYPE *pContext,IHTMLElement **ppElement,__LONG32 *pcch,OLECHAR *pchText);", "IMarkupPointer_CurrentScope_Proxy": "HRESULT WINAPI IMarkupPointer_CurrentScope_Proxy(IMarkupPointer *This,IHTMLElement **ppElemCurrent);", "IMarkupPointer_IsLeftOf_Proxy": "HRESULT WINAPI IMarkupPointer_IsLeftOf_Proxy(IMarkupPointer *This,IMarkupPointer *pPointerThat,WINBOOL *pfResult);", "IMarkupPointer_IsLeftOfOrEqualTo_Proxy": "HRESULT WINAPI IMarkupPointer_IsLeftOfOrEqualTo_Proxy(IMarkupPointer *This,IMarkupPointer *pPointerThat,WINBOOL *pfResult);", "IMarkupPointer_IsRightOf_Proxy": "HRESULT WINAPI IMarkupPointer_IsRightOf_Proxy(IMarkupPointer *This,IMarkupPointer *pPointerThat,WINBOOL *pfResult);", "IMarkupPointer_IsRightOfOrEqualTo_Proxy": "HRESULT WINAPI IMarkupPointer_IsRightOfOrEqualTo_Proxy(IMarkupPointer *This,IMarkupPointer *pPointerThat,WINBOOL *pfResult);", "IMarkupPointer_IsEqualTo_Proxy": "HRESULT WINAPI IMarkupPointer_IsEqualTo_Proxy(IMarkupPointer *This,IMarkupPointer *pPointerThat,WINBOOL *pfAreEqual);", "IMarkupPointer_MoveUnit_Proxy": "HRESULT WINAPI IMarkupPointer_MoveUnit_Proxy(IMarkupPointer *This,MOVEUNIT_ACTION muAction);", "IMarkupPointer_FindText_Proxy": "HRESULT WINAPI IMarkupPointer_FindText_Proxy(IMarkupPointer *This,OLECHAR *pchFindText,DWORD dwFlags,IMarkupPointer *pIEndMatch,IMarkupPointer *pIEndSearch);", "IMarkupContainer_OwningDoc_Proxy": "HRESULT WINAPI IMarkupContainer_OwningDoc_Proxy(IMarkupContainer *This,IHTMLDocument2 **ppDoc);", "IMarkupContainer2_CreateChangeLog_Proxy": "HRESULT WINAPI IMarkupContainer2_CreateChangeLog_Proxy(IMarkupContainer2 *This,IHTMLChangeSink *pChangeSink,IHTMLChangeLog **ppChangeLog,WINBOOL fForward,WINBOOL fBackward);", "IMarkupContainer2_RegisterForDirtyRange_Proxy": "HRESULT WINAPI IMarkupContainer2_RegisterForDirtyRange_Proxy(IMarkupContainer2 *This,IHTMLChangeSink *pChangeSink,DWORD *pdwCookie);", "IMarkupContainer2_UnRegisterForDirtyRange_Proxy": "HRESULT WINAPI IMarkupContainer2_UnRegisterForDirtyRange_Proxy(IMarkupContainer2 *This,DWORD dwCookie);", "IMarkupContainer2_GetAndClearDirtyRange_Proxy": "HRESULT WINAPI IMarkupContainer2_GetAndClearDirtyRange_Proxy(IMarkupContainer2 *This,DWORD dwCookie,IMarkupPointer *pIPointerBegin,IMarkupPointer *pIPointerEnd);", "IMarkupContainer2_GetVersionNumber_Proxy": "__LONG32 WINAPI IMarkupContainer2_GetVersionNumber_Proxy(IMarkupContainer2 *This);", "IMarkupContainer2_GetMasterElement_Proxy": "HRESULT WINAPI IMarkupContainer2_GetMasterElement_Proxy(IMarkupContainer2 *This,IHTMLElement **ppElementMaster);", "IHTMLChangeLog_GetNextChange_Proxy": "HRESULT WINAPI IHTMLChangeLog_GetNextChange_Proxy(IHTMLChangeLog *This,BYTE *pbBuffer,__LONG32 nBufferSize,__LONG32 *pnRecordLength);", "IHTMLChangeSink_Notify_Proxy": "HRESULT WINAPI IHTMLChangeSink_Notify_Proxy(IHTMLChangeSink *This);", "IActiveIMMApp_AssociateContext_Proxy": "HRESULT WINAPI IActiveIMMApp_AssociateContext_Proxy(IActiveIMMApp *This,HWND hWnd,HIMC hIME,HIMC *phPrev);", "IActiveIMMApp_ConfigureIMEA_Proxy": "HRESULT WINAPI IActiveIMMApp_ConfigureIMEA_Proxy(IActiveIMMApp *This,HKL hKL,HWND hWnd,DWORD dwMode,REGISTERWORDA *pData);", "IActiveIMMApp_ConfigureIMEW_Proxy": "HRESULT WINAPI IActiveIMMApp_ConfigureIMEW_Proxy(IActiveIMMApp *This,HKL hKL,HWND hWnd,DWORD dwMode,REGISTERWORDW *pData);", "IActiveIMMApp_CreateContext_Proxy": "HRESULT WINAPI IActiveIMMApp_CreateContext_Proxy(IActiveIMMApp *This,HIMC *phIMC);", "IActiveIMMApp_DestroyContext_Proxy": "HRESULT WINAPI IActiveIMMApp_DestroyContext_Proxy(IActiveIMMApp *This,HIMC hIME);", "IActiveIMMApp_EnumRegisterWordA_Proxy": "HRESULT WINAPI IActiveIMMApp_EnumRegisterWordA_Proxy(IActiveIMMApp *This,HKL hKL,LPSTR szReading,DWORD dwStyle,LPSTR szRegister,LPVOID pData,IEnumRegisterWordA **pEnum);", "IActiveIMMApp_EnumRegisterWordW_Proxy": "HRESULT WINAPI IActiveIMMApp_EnumRegisterWordW_Proxy(IActiveIMMApp *This,HKL hKL,LPWSTR szReading,DWORD dwStyle,LPWSTR szRegister,LPVOID pData,IEnumRegisterWordW **pEnum);", "IActiveIMMApp_EscapeA_Proxy": "HRESULT WINAPI IActiveIMMApp_EscapeA_Proxy(IActiveIMMApp *This,HKL hKL,HIMC hIMC,UINT uEscape,LPVOID pData,LRESULT *plResult);", "IActiveIMMApp_EscapeW_Proxy": "HRESULT WINAPI IActiveIMMApp_EscapeW_Proxy(IActiveIMMApp *This,HKL hKL,HIMC hIMC,UINT uEscape,LPVOID pData,LRESULT *plResult);", "IActiveIMMApp_GetCandidateListA_Proxy": "HRESULT WINAPI IActiveIMMApp_GetCandidateListA_Proxy(IActiveIMMApp *This,HIMC hIMC,DWORD dwIndex,UINT uBufLen,CANDIDATELIST *pCandList,UINT *puCopied);", "IActiveIMMApp_GetCandidateListW_Proxy": "HRESULT WINAPI IActiveIMMApp_GetCandidateListW_Proxy(IActiveIMMApp *This,HIMC hIMC,DWORD dwIndex,UINT uBufLen,CANDIDATELIST *pCandList,UINT *puCopied);", "IActiveIMMApp_GetCandidateListCountA_Proxy": "HRESULT WINAPI IActiveIMMApp_GetCandidateListCountA_Proxy(IActiveIMMApp *This,HIMC hIMC,DWORD *pdwListSize,DWORD *pdwBufLen);", "IActiveIMMApp_GetCandidateListCountW_Proxy": "HRESULT WINAPI IActiveIMMApp_GetCandidateListCountW_Proxy(IActiveIMMApp *This,HIMC hIMC,DWORD *pdwListSize,DWORD *pdwBufLen);", "IActiveIMMApp_GetCandidateWindow_Proxy": "HRESULT WINAPI IActiveIMMApp_GetCandidateWindow_Proxy(IActiveIMMApp *This,HIMC hIMC,DWORD dwIndex,CANDIDATEFORM *pCandidate);", "IActiveIMMApp_GetCompositionFontA_Proxy": "HRESULT WINAPI IActiveIMMApp_GetCompositionFontA_Proxy(IActiveIMMApp *This,HIMC hIMC,LOGFONTA *plf);", "IActiveIMMApp_GetCompositionFontW_Proxy": "HRESULT WINAPI IActiveIMMApp_GetCompositionFontW_Proxy(IActiveIMMApp *This,HIMC hIMC,LOGFONTW *plf);", "IActiveIMMApp_GetCompositionStringA_Proxy": "HRESULT WINAPI IActiveIMMApp_GetCompositionStringA_Proxy(IActiveIMMApp *This,HIMC hIMC,DWORD dwIndex,DWORD dwBufLen,LONG *plCopied,LPVOID pBuf);", "IActiveIMMApp_GetCompositionStringW_Proxy": "HRESULT WINAPI IActiveIMMApp_GetCompositionStringW_Proxy(IActiveIMMApp *This,HIMC hIMC,DWORD dwIndex,DWORD dwBufLen,LONG *plCopied,LPVOID pBuf);", "IActiveIMMApp_GetCompositionWindow_Proxy": "HRESULT WINAPI IActiveIMMApp_GetCompositionWindow_Proxy(IActiveIMMApp *This,HIMC hIMC,COMPOSITIONFORM *pCompForm);", "IActiveIMMApp_GetContext_Proxy": "HRESULT WINAPI IActiveIMMApp_GetContext_Proxy(IActiveIMMApp *This,HWND hWnd,HIMC *phIMC);", "IActiveIMMApp_GetConversionListA_Proxy": "HRESULT WINAPI IActiveIMMApp_GetConversionListA_Proxy(IActiveIMMApp *This,HKL hKL,HIMC hIMC,LPSTR pSrc,UINT uBufLen,UINT uFlag,CANDIDATELIST *pDst,UINT *puCopied);", "IActiveIMMApp_GetConversionListW_Proxy": "HRESULT WINAPI IActiveIMMApp_GetConversionListW_Proxy(IActiveIMMApp *This,HKL hKL,HIMC hIMC,LPWSTR pSrc,UINT uBufLen,UINT uFlag,CANDIDATELIST *pDst,UINT *puCopied);", "IActiveIMMApp_GetConversionStatus_Proxy": "HRESULT WINAPI IActiveIMMApp_GetConversionStatus_Proxy(IActiveIMMApp *This,HIMC hIMC,DWORD *pfdwConversion,DWORD *pfdwSentence);", "IActiveIMMApp_GetDefaultIMEWnd_Proxy": "HRESULT WINAPI IActiveIMMApp_GetDefaultIMEWnd_Proxy(IActiveIMMApp *This,HWND hWnd,HWND *phDefWnd);", "IActiveIMMApp_GetDescriptionA_Proxy": "HRESULT WINAPI IActiveIMMApp_GetDescriptionA_Proxy(IActiveIMMApp *This,HKL hKL,UINT uBufLen,LPSTR szDescription,UINT *puCopied);", "IActiveIMMApp_GetDescriptionW_Proxy": "HRESULT WINAPI IActiveIMMApp_GetDescriptionW_Proxy(IActiveIMMApp *This,HKL hKL,UINT uBufLen,LPWSTR szDescription,UINT *puCopied);", "IActiveIMMApp_GetGuideLineA_Proxy": "HRESULT WINAPI IActiveIMMApp_GetGuideLineA_Proxy(IActiveIMMApp *This,HIMC hIMC,DWORD dwIndex,DWORD dwBufLen,LPSTR pBuf,DWORD *pdwResult);", "IActiveIMMApp_GetGuideLineW_Proxy": "HRESULT WINAPI IActiveIMMApp_GetGuideLineW_Proxy(IActiveIMMApp *This,HIMC hIMC,DWORD dwIndex,DWORD dwBufLen,LPWSTR pBuf,DWORD *pdwResult);", "IActiveIMMApp_GetIMEFileNameA_Proxy": "HRESULT WINAPI IActiveIMMApp_GetIMEFileNameA_Proxy(IActiveIMMApp *This,HKL hKL,UINT uBufLen,LPSTR szFileName,UINT *puCopied);", "IActiveIMMApp_GetIMEFileNameW_Proxy": "HRESULT WINAPI IActiveIMMApp_GetIMEFileNameW_Proxy(IActiveIMMApp *This,HKL hKL,UINT uBufLen,LPWSTR szFileName,UINT *puCopied);", "IActiveIMMApp_GetOpenStatus_Proxy": "HRESULT WINAPI IActiveIMMApp_GetOpenStatus_Proxy(IActiveIMMApp *This,HIMC hIMC);", "IActiveIMMApp_GetProperty_Proxy": "HRESULT WINAPI IActiveIMMApp_GetProperty_Proxy(IActiveIMMApp *This,HKL hKL,DWORD fdwIndex,DWORD *pdwProperty);", "IActiveIMMApp_GetRegisterWordStyleA_Proxy": "HRESULT WINAPI IActiveIMMApp_GetRegisterWordStyleA_Proxy(IActiveIMMApp *This,HKL hKL,UINT nItem,STYLEBUFA *pStyleBuf,UINT *puCopied);", "IActiveIMMApp_GetRegisterWordStyleW_Proxy": "HRESULT WINAPI IActiveIMMApp_GetRegisterWordStyleW_Proxy(IActiveIMMApp *This,HKL hKL,UINT nItem,STYLEBUFW *pStyleBuf,UINT *puCopied);", "IActiveIMMApp_GetStatusWindowPos_Proxy": "HRESULT WINAPI IActiveIMMApp_GetStatusWindowPos_Proxy(IActiveIMMApp *This,HIMC hIMC,POINT *pptPos);", "IActiveIMMApp_GetVirtualKey_Proxy": "HRESULT WINAPI IActiveIMMApp_GetVirtualKey_Proxy(IActiveIMMApp *This,HWND hWnd,UINT *puVirtualKey);", "IActiveIMMApp_InstallIMEA_Proxy": "HRESULT WINAPI IActiveIMMApp_InstallIMEA_Proxy(IActiveIMMApp *This,LPSTR szIMEFileName,LPSTR szLayoutText,HKL *phKL);", "IActiveIMMApp_InstallIMEW_Proxy": "HRESULT WINAPI IActiveIMMApp_InstallIMEW_Proxy(IActiveIMMApp *This,LPWSTR szIMEFileName,LPWSTR szLayoutText,HKL *phKL);", "IActiveIMMApp_IsIME_Proxy": "HRESULT WINAPI IActiveIMMApp_IsIME_Proxy(IActiveIMMApp *This,HKL hKL);", "IActiveIMMApp_IsUIMessageA_Proxy": "HRESULT WINAPI IActiveIMMApp_IsUIMessageA_Proxy(IActiveIMMApp *This,HWND hWndIME,UINT msg,WPARAM wParam,LPARAM lParam);", "IActiveIMMApp_IsUIMessageW_Proxy": "HRESULT WINAPI IActiveIMMApp_IsUIMessageW_Proxy(IActiveIMMApp *This,HWND hWndIME,UINT msg,WPARAM wParam,LPARAM lParam);", "IActiveIMMApp_NotifyIME_Proxy": "HRESULT WINAPI IActiveIMMApp_NotifyIME_Proxy(IActiveIMMApp *This,HIMC hIMC,DWORD dwAction,DWORD dwIndex,DWORD dwValue);", "IActiveIMMApp_RegisterWordA_Proxy": "HRESULT WINAPI IActiveIMMApp_RegisterWordA_Proxy(IActiveIMMApp *This,HKL hKL,LPSTR szReading,DWORD dwStyle,LPSTR szRegister);", "IActiveIMMApp_RegisterWordW_Proxy": "HRESULT WINAPI IActiveIMMApp_RegisterWordW_Proxy(IActiveIMMApp *This,HKL hKL,LPWSTR szReading,DWORD dwStyle,LPWSTR szRegister);", "IActiveIMMApp_ReleaseContext_Proxy": "HRESULT WINAPI IActiveIMMApp_ReleaseContext_Proxy(IActiveIMMApp *This,HWND hWnd,HIMC hIMC);", "IActiveIMMApp_SetCandidateWindow_Proxy": "HRESULT WINAPI IActiveIMMApp_SetCandidateWindow_Proxy(IActiveIMMApp *This,HIMC hIMC,CANDIDATEFORM *pCandidate);", "IActiveIMMApp_SetCompositionFontA_Proxy": "HRESULT WINAPI IActiveIMMApp_SetCompositionFontA_Proxy(IActiveIMMApp *This,HIMC hIMC,LOGFONTA *plf);", "IActiveIMMApp_SetCompositionFontW_Proxy": "HRESULT WINAPI IActiveIMMApp_SetCompositionFontW_Proxy(IActiveIMMApp *This,HIMC hIMC,LOGFONTW *plf);", "IActiveIMMApp_SetCompositionStringA_Proxy": "HRESULT WINAPI IActiveIMMApp_SetCompositionStringA_Proxy(IActiveIMMApp *This,HIMC hIMC,DWORD dwIndex,LPVOID pComp,DWORD dwCompLen,LPVOID pRead,DWORD dwReadLen);", "IActiveIMMApp_SetCompositionStringW_Proxy": "HRESULT WINAPI IActiveIMMApp_SetCompositionStringW_Proxy(IActiveIMMApp *This,HIMC hIMC,DWORD dwIndex,LPVOID pComp,DWORD dwCompLen,LPVOID pRead,DWORD dwReadLen);", "IActiveIMMApp_SetCompositionWindow_Proxy": "HRESULT WINAPI IActiveIMMApp_SetCompositionWindow_Proxy(IActiveIMMApp *This,HIMC hIMC,COMPOSITIONFORM *pCompForm);", "IActiveIMMApp_SetConversionStatus_Proxy": "HRESULT WINAPI IActiveIMMApp_SetConversionStatus_Proxy(IActiveIMMApp *This,HIMC hIMC,DWORD fdwConversion,DWORD fdwSentence);", "IActiveIMMApp_SetOpenStatus_Proxy": "HRESULT WINAPI IActiveIMMApp_SetOpenStatus_Proxy(IActiveIMMApp *This,HIMC hIMC,WINBOOL fOpen);", "IActiveIMMApp_SetStatusWindowPos_Proxy": "HRESULT WINAPI IActiveIMMApp_SetStatusWindowPos_Proxy(IActiveIMMApp *This,HIMC hIMC,POINT *pptPos);", "IActiveIMMApp_SimulateHotKey_Proxy": "HRESULT WINAPI IActiveIMMApp_SimulateHotKey_Proxy(IActiveIMMApp *This,HWND hWnd,DWORD dwHotKeyID);", "IActiveIMMApp_UnregisterWordA_Proxy": "HRESULT WINAPI IActiveIMMApp_UnregisterWordA_Proxy(IActiveIMMApp *This,HKL hKL,LPSTR szReading,DWORD dwStyle,LPSTR szUnregister);", "IActiveIMMApp_UnregisterWordW_Proxy": "HRESULT WINAPI IActiveIMMApp_UnregisterWordW_Proxy(IActiveIMMApp *This,HKL hKL,LPWSTR szReading,DWORD dwStyle,LPWSTR szUnregister);", "IActiveIMMApp_Activate_Proxy": "HRESULT WINAPI IActiveIMMApp_Activate_Proxy(IActiveIMMApp *This,WINBOOL fRestoreLayout);", "IActiveIMMApp_Deactivate_Proxy": "HRESULT WINAPI IActiveIMMApp_Deactivate_Proxy(IActiveIMMApp *This);", "IActiveIMMApp_OnDefWindowProc_Proxy": "HRESULT WINAPI IActiveIMMApp_OnDefWindowProc_Proxy(IActiveIMMApp *This,HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam,LRESULT *plResult);", "IActiveIMMApp_FilterClientWindows_Proxy": "HRESULT WINAPI IActiveIMMApp_FilterClientWindows_Proxy(IActiveIMMApp *This,ATOM *aaClassList,UINT uSize);", "IActiveIMMApp_GetCodePageA_Proxy": "HRESULT WINAPI IActiveIMMApp_GetCodePageA_Proxy(IActiveIMMApp *This,HKL hKL,UINT *uCodePage);", "IActiveIMMApp_GetLangId_Proxy": "HRESULT WINAPI IActiveIMMApp_GetLangId_Proxy(IActiveIMMApp *This,HKL hKL,LANGID *plid);", "IActiveIMMApp_AssociateContextEx_Proxy": "HRESULT WINAPI IActiveIMMApp_AssociateContextEx_Proxy(IActiveIMMApp *This,HWND hWnd,HIMC hIMC,DWORD dwFlags);", "IActiveIMMApp_DisableIME_Proxy": "HRESULT WINAPI IActiveIMMApp_DisableIME_Proxy(IActiveIMMApp *This,DWORD idThread);", "IActiveIMMApp_GetImeMenuItemsA_Proxy": "HRESULT WINAPI IActiveIMMApp_GetImeMenuItemsA_Proxy(IActiveIMMApp *This,HIMC hIMC,DWORD dwFlags,DWORD dwType,IMEMENUITEMINFOA *pImeParentMenu,IMEMENUITEMINFOA *pImeMenu,DWORD dwSize,DWORD *pdwResult);", "IActiveIMMApp_GetImeMenuItemsW_Proxy": "HRESULT WINAPI IActiveIMMApp_GetImeMenuItemsW_Proxy(IActiveIMMApp *This,HIMC hIMC,DWORD dwFlags,DWORD dwType,IMEMENUITEMINFOW *pImeParentMenu,IMEMENUITEMINFOW *pImeMenu,DWORD dwSize,DWORD *pdwResult);", "IActiveIMMApp_EnumInputContext_Proxy": "HRESULT WINAPI IActiveIMMApp_EnumInputContext_Proxy(IActiveIMMApp *This,DWORD idThread,IEnumInputContext **ppEnum);", "ISegmentList_CreateIterator_Proxy": "HRESULT WINAPI ISegmentList_CreateIterator_Proxy(ISegmentList *This,ISegmentListIterator **ppIIter);", "ISegmentList_GetType_Proxy": "HRESULT WINAPI ISegmentList_GetType_Proxy(ISegmentList *This,SELECTION_TYPE *peType);", "ISegmentList_IsEmpty_Proxy": "HRESULT WINAPI ISegmentList_IsEmpty_Proxy(ISegmentList *This,WINBOOL *pfEmpty);", "ISegmentListIterator_Current_Proxy": "HRESULT WINAPI ISegmentListIterator_Current_Proxy(ISegmentListIterator *This,ISegment **ppISegment);", "ISegmentListIterator_First_Proxy": "HRESULT WINAPI ISegmentListIterator_First_Proxy(ISegmentListIterator *This);", "ISegmentListIterator_IsDone_Proxy": "HRESULT WINAPI ISegmentListIterator_IsDone_Proxy(ISegmentListIterator *This);", "ISegmentListIterator_Advance_Proxy": "HRESULT WINAPI ISegmentListIterator_Advance_Proxy(ISegmentListIterator *This);", "IHTMLCaret_MoveCaretToPointer_Proxy": "HRESULT WINAPI IHTMLCaret_MoveCaretToPointer_Proxy(IHTMLCaret *This,IDisplayPointer *pDispPointer,WINBOOL fScrollIntoView,CARET_DIRECTION eDir);", "IHTMLCaret_MoveCaretToPointerEx_Proxy": "HRESULT WINAPI IHTMLCaret_MoveCaretToPointerEx_Proxy(IHTMLCaret *This,IDisplayPointer *pDispPointer,WINBOOL fVisible,WINBOOL fScrollIntoView,CARET_DIRECTION eDir);", "IHTMLCaret_MoveMarkupPointerToCaret_Proxy": "HRESULT WINAPI IHTMLCaret_MoveMarkupPointerToCaret_Proxy(IHTMLCaret *This,IMarkupPointer *pIMarkupPointer);", "IHTMLCaret_MoveDisplayPointerToCaret_Proxy": "HRESULT WINAPI IHTMLCaret_MoveDisplayPointerToCaret_Proxy(IHTMLCaret *This,IDisplayPointer *pDispPointer);", "IHTMLCaret_IsVisible_Proxy": "HRESULT WINAPI IHTMLCaret_IsVisible_Proxy(IHTMLCaret *This,WINBOOL *pIsVisible);", "IHTMLCaret_Show_Proxy": "HRESULT WINAPI IHTMLCaret_Show_Proxy(IHTMLCaret *This,WINBOOL fScrollIntoView);", "IHTMLCaret_Hide_Proxy": "HRESULT WINAPI IHTMLCaret_Hide_Proxy(IHTMLCaret *This);", "IHTMLCaret_InsertText_Proxy": "HRESULT WINAPI IHTMLCaret_InsertText_Proxy(IHTMLCaret *This,OLECHAR *pText,LONG lLen);", "IHTMLCaret_ScrollIntoView_Proxy": "HRESULT WINAPI IHTMLCaret_ScrollIntoView_Proxy(IHTMLCaret *This);", "IHTMLCaret_GetLocation_Proxy": "HRESULT WINAPI IHTMLCaret_GetLocation_Proxy(IHTMLCaret *This,POINT *pPoint,WINBOOL fTranslate);", "IHTMLCaret_GetCaretDirection_Proxy": "HRESULT WINAPI IHTMLCaret_GetCaretDirection_Proxy(IHTMLCaret *This,CARET_DIRECTION *peDir);", "IHTMLCaret_SetCaretDirection_Proxy": "HRESULT WINAPI IHTMLCaret_SetCaretDirection_Proxy(IHTMLCaret *This,CARET_DIRECTION eDir);", "ISegment_GetPointers_Proxy": "HRESULT WINAPI ISegment_GetPointers_Proxy(ISegment *This,IMarkupPointer *pIStart,IMarkupPointer *pIEnd);", "IElementSegment_GetElement_Proxy": "HRESULT WINAPI IElementSegment_GetElement_Proxy(IElementSegment *This,IHTMLElement **ppIElement);", "IElementSegment_SetPrimary_Proxy": "HRESULT WINAPI IElementSegment_SetPrimary_Proxy(IElementSegment *This,WINBOOL fPrimary);", "IElementSegment_IsPrimary_Proxy": "HRESULT WINAPI IElementSegment_IsPrimary_Proxy(IElementSegment *This,WINBOOL *pfPrimary);", "IHighlightRenderingServices_AddSegment_Proxy": "HRESULT WINAPI IHighlightRenderingServices_AddSegment_Proxy(IHighlightRenderingServices *This,IDisplayPointer *pDispPointerStart,IDisplayPointer *pDispPointerEnd,IHTMLRenderStyle *pIRenderStyle,IHighlightSegment **ppISegment);", "IHighlightRenderingServices_MoveSegmentToPointers_Proxy": "HRESULT WINAPI IHighlightRenderingServices_MoveSegmentToPointers_Proxy(IHighlightRenderingServices *This,IHighlightSegment *pISegment,IDisplayPointer *pDispPointerStart,IDisplayPointer *pDispPointerEnd);", "IHighlightRenderingServices_RemoveSegment_Proxy": "HRESULT WINAPI IHighlightRenderingServices_RemoveSegment_Proxy(IHighlightRenderingServices *This,IHighlightSegment *pISegment);", "ILineInfo_get_x_Proxy": "HRESULT WINAPI ILineInfo_get_x_Proxy(ILineInfo *This,__LONG32 *p);", "ILineInfo_get_baseLine_Proxy": "HRESULT WINAPI ILineInfo_get_baseLine_Proxy(ILineInfo *This,__LONG32 *p);", "ILineInfo_get_textDescent_Proxy": "HRESULT WINAPI ILineInfo_get_textDescent_Proxy(ILineInfo *This,__LONG32 *p);", "ILineInfo_get_textHeight_Proxy": "HRESULT WINAPI ILineInfo_get_textHeight_Proxy(ILineInfo *This,__LONG32 *p);", "ILineInfo_get_lineDirection_Proxy": "HRESULT WINAPI ILineInfo_get_lineDirection_Proxy(ILineInfo *This,LONG *p);", "IDisplayPointer_MoveToPoint_Proxy": "HRESULT WINAPI IDisplayPointer_MoveToPoint_Proxy(IDisplayPointer *This,POINT ptPoint,COORD_SYSTEM eCoordSystem,IHTMLElement *pElementContext,DWORD dwHitTestOptions,DWORD *pdwHitTestResults);", "IDisplayPointer_MoveUnit_Proxy": "HRESULT WINAPI IDisplayPointer_MoveUnit_Proxy(IDisplayPointer *This,DISPLAY_MOVEUNIT eMoveUnit,LONG lXPos);", "IDisplayPointer_PositionMarkupPointer_Proxy": "HRESULT WINAPI IDisplayPointer_PositionMarkupPointer_Proxy(IDisplayPointer *This,IMarkupPointer *pMarkupPointer);", "IDisplayPointer_MoveToPointer_Proxy": "HRESULT WINAPI IDisplayPointer_MoveToPointer_Proxy(IDisplayPointer *This,IDisplayPointer *pDispPointer);", "IDisplayPointer_SetPointerGravity_Proxy": "HRESULT WINAPI IDisplayPointer_SetPointerGravity_Proxy(IDisplayPointer *This,POINTER_GRAVITY eGravity);", "IDisplayPointer_GetPointerGravity_Proxy": "HRESULT WINAPI IDisplayPointer_GetPointerGravity_Proxy(IDisplayPointer *This,POINTER_GRAVITY *peGravity);", "IDisplayPointer_SetDisplayGravity_Proxy": "HRESULT WINAPI IDisplayPointer_SetDisplayGravity_Proxy(IDisplayPointer *This,DISPLAY_GRAVITY eGravity);", "IDisplayPointer_GetDisplayGravity_Proxy": "HRESULT WINAPI IDisplayPointer_GetDisplayGravity_Proxy(IDisplayPointer *This,DISPLAY_GRAVITY *peGravity);", "IDisplayPointer_IsPositioned_Proxy": "HRESULT WINAPI IDisplayPointer_IsPositioned_Proxy(IDisplayPointer *This,WINBOOL *pfPositioned);", "IDisplayPointer_Unposition_Proxy": "HRESULT WINAPI IDisplayPointer_Unposition_Proxy(IDisplayPointer *This);", "IDisplayPointer_IsEqualTo_Proxy": "HRESULT WINAPI IDisplayPointer_IsEqualTo_Proxy(IDisplayPointer *This,IDisplayPointer *pDispPointer,WINBOOL *pfIsEqual);", "IDisplayPointer_IsLeftOf_Proxy": "HRESULT WINAPI IDisplayPointer_IsLeftOf_Proxy(IDisplayPointer *This,IDisplayPointer *pDispPointer,WINBOOL *pfIsLeftOf);", "IDisplayPointer_IsRightOf_Proxy": "HRESULT WINAPI IDisplayPointer_IsRightOf_Proxy(IDisplayPointer *This,IDisplayPointer *pDispPointer,WINBOOL *pfIsRightOf);", "IDisplayPointer_IsAtBOL_Proxy": "HRESULT WINAPI IDisplayPointer_IsAtBOL_Proxy(IDisplayPointer *This,WINBOOL *pfBOL);", "IDisplayPointer_MoveToMarkupPointer_Proxy": "HRESULT WINAPI IDisplayPointer_MoveToMarkupPointer_Proxy(IDisplayPointer *This,IMarkupPointer *pPointer,IDisplayPointer *pDispLineContext);", "IDisplayPointer_ScrollIntoView_Proxy": "HRESULT WINAPI IDisplayPointer_ScrollIntoView_Proxy(IDisplayPointer *This);", "IDisplayPointer_GetLineInfo_Proxy": "HRESULT WINAPI IDisplayPointer_GetLineInfo_Proxy(IDisplayPointer *This,ILineInfo **ppLineInfo);", "IDisplayPointer_GetFlowElement_Proxy": "HRESULT WINAPI IDisplayPointer_GetFlowElement_Proxy(IDisplayPointer *This,IHTMLElement **ppLayoutElement);", "IDisplayPointer_QueryBreaks_Proxy": "HRESULT WINAPI IDisplayPointer_QueryBreaks_Proxy(IDisplayPointer *This,DWORD *pdwBreaks);", "IDisplayServices_CreateDisplayPointer_Proxy": "HRESULT WINAPI IDisplayServices_CreateDisplayPointer_Proxy(IDisplayServices *This,IDisplayPointer **ppDispPointer);", "IDisplayServices_TransformRect_Proxy": "HRESULT WINAPI IDisplayServices_TransformRect_Proxy(IDisplayServices *This,RECT *pRect,COORD_SYSTEM eSource,COORD_SYSTEM eDestination,IHTMLElement *pIElement);", "IDisplayServices_TransformPoint_Proxy": "HRESULT WINAPI IDisplayServices_TransformPoint_Proxy(IDisplayServices *This,POINT *pPoint,COORD_SYSTEM eSource,COORD_SYSTEM eDestination,IHTMLElement *pIElement);", "IDisplayServices_GetCaret_Proxy": "HRESULT WINAPI IDisplayServices_GetCaret_Proxy(IDisplayServices *This,IHTMLCaret **ppCaret);", "IDisplayServices_GetComputedStyle_Proxy": "HRESULT WINAPI IDisplayServices_GetComputedStyle_Proxy(IDisplayServices *This,IMarkupPointer *pPointer,IHTMLComputedStyle **ppComputedStyle);", "IDisplayServices_ScrollRectIntoView_Proxy": "HRESULT WINAPI IDisplayServices_ScrollRectIntoView_Proxy(IDisplayServices *This,IHTMLElement *pIElement,RECT rect);", "IDisplayServices_HasFlowLayout_Proxy": "HRESULT WINAPI IDisplayServices_HasFlowLayout_Proxy(IDisplayServices *This,IHTMLElement *pIElement,WINBOOL *pfHasFlowLayout);", "IHtmlDlgSafeHelper_choosecolordlg_Proxy": "HRESULT WINAPI IHtmlDlgSafeHelper_choosecolordlg_Proxy(IHtmlDlgSafeHelper *This,VARIANT initColor,VARIANT *rgbColor);", "IHtmlDlgSafeHelper_getCharset_Proxy": "HRESULT WINAPI IHtmlDlgSafeHelper_getCharset_Proxy(IHtmlDlgSafeHelper *This,BSTR fontName,VARIANT *charset);", "IHtmlDlgSafeHelper_get_Fonts_Proxy": "HRESULT WINAPI IHtmlDlgSafeHelper_get_Fonts_Proxy(IHtmlDlgSafeHelper *This,IDispatch **p);", "IHtmlDlgSafeHelper_get_BlockFormats_Proxy": "HRESULT WINAPI IHtmlDlgSafeHelper_get_BlockFormats_Proxy(IHtmlDlgSafeHelper *This,IDispatch **p);", "IBlockFormats_get__NewEnum_Proxy": "HRESULT WINAPI IBlockFormats_get__NewEnum_Proxy(IBlockFormats *This,IUnknown **p);", "IBlockFormats_get_Count_Proxy": "HRESULT WINAPI IBlockFormats_get_Count_Proxy(IBlockFormats *This,__LONG32 *p);", "IBlockFormats_Item_Proxy": "HRESULT WINAPI IBlockFormats_Item_Proxy(IBlockFormats *This,VARIANT *pvarIndex,BSTR *pbstrBlockFormat);", "IFontNames_get__NewEnum_Proxy": "HRESULT WINAPI IFontNames_get__NewEnum_Proxy(IFontNames *This,IUnknown **p);", "IFontNames_get_Count_Proxy": "HRESULT WINAPI IFontNames_get_Count_Proxy(IFontNames *This,__LONG32 *p);", "IFontNames_Item_Proxy": "HRESULT WINAPI IFontNames_Item_Proxy(IFontNames *This,VARIANT *pvarIndex,BSTR *pbstrFontName);", "ICSSFilter_SetSite_Proxy": "HRESULT WINAPI ICSSFilter_SetSite_Proxy(ICSSFilter *This,ICSSFilterSite *pSink);", "ICSSFilter_OnAmbientPropertyChange_Proxy": "HRESULT WINAPI ICSSFilter_OnAmbientPropertyChange_Proxy(ICSSFilter *This,LONG dispid);", "ISecureUrlHost_ValidateSecureUrl_Proxy": "HRESULT WINAPI ISecureUrlHost_ValidateSecureUrl_Proxy(ISecureUrlHost *This,WINBOOL *pfAllow,OLECHAR *pchUrlInQuestion,DWORD dwFlags);", "IMarkupServices_CreateMarkupPointer_Proxy": "HRESULT WINAPI IMarkupServices_CreateMarkupPointer_Proxy(IMarkupServices *This,IMarkupPointer **ppPointer);", "IMarkupServices_CreateMarkupContainer_Proxy": "HRESULT WINAPI IMarkupServices_CreateMarkupContainer_Proxy(IMarkupServices *This,IMarkupContainer **ppMarkupContainer);", "IMarkupServices_CreateElement_Proxy": "HRESULT WINAPI IMarkupServices_CreateElement_Proxy(IMarkupServices *This,ELEMENT_TAG_ID tagID,OLECHAR *pchAttributes,IHTMLElement **ppElement);", "IMarkupServices_CloneElement_Proxy": "HRESULT WINAPI IMarkupServices_CloneElement_Proxy(IMarkupServices *This,IHTMLElement *pElemCloneThis,IHTMLElement **ppElementTheClone);", "IMarkupServices_InsertElement_Proxy": "HRESULT WINAPI IMarkupServices_InsertElement_Proxy(IMarkupServices *This,IHTMLElement *pElementInsert,IMarkupPointer *pPointerStart,IMarkupPointer *pPointerFinish);", "IMarkupServices_RemoveElement_Proxy": "HRESULT WINAPI IMarkupServices_RemoveElement_Proxy(IMarkupServices *This,IHTMLElement *pElementRemove);", "IMarkupServices_Remove_Proxy": "HRESULT WINAPI IMarkupServices_Remove_Proxy(IMarkupServices *This,IMarkupPointer *pPointerStart,IMarkupPointer *pPointerFinish);", "IMarkupServices_Copy_Proxy": "HRESULT WINAPI IMarkupServices_Copy_Proxy(IMarkupServices *This,IMarkupPointer *pPointerSourceStart,IMarkupPointer *pPointerSourceFinish,IMarkupPointer *pPointerTarget);", "IMarkupServices_Move_Proxy": "HRESULT WINAPI IMarkupServices_Move_Proxy(IMarkupServices *This,IMarkupPointer *pPointerSourceStart,IMarkupPointer *pPointerSourceFinish,IMarkupPointer *pPointerTarget);", "IMarkupServices_InsertText_Proxy": "HRESULT WINAPI IMarkupServices_InsertText_Proxy(IMarkupServices *This,OLECHAR *pchText,__LONG32 cch,IMarkupPointer *pPointerTarget);", "IMarkupServices_ParseString_Proxy": "HRESULT WINAPI IMarkupServices_ParseString_Proxy(IMarkupServices *This,OLECHAR *pchHTML,DWORD dwFlags,IMarkupContainer **ppContainerResult,IMarkupPointer *ppPointerStart,IMarkupPointer *ppPointerFinish);", "IMarkupServices_ParseGlobal_Proxy": "HRESULT WINAPI IMarkupServices_ParseGlobal_Proxy(IMarkupServices *This,HGLOBAL hglobalHTML,DWORD dwFlags,IMarkupContainer **ppContainerResult,IMarkupPointer *pPointerStart,IMarkupPointer *pPointerFinish);", "IMarkupServices_IsScopedElement_Proxy": "HRESULT WINAPI IMarkupServices_IsScopedElement_Proxy(IMarkupServices *This,IHTMLElement *pElement,WINBOOL *pfScoped);", "IMarkupServices_GetElementTagId_Proxy": "HRESULT WINAPI IMarkupServices_GetElementTagId_Proxy(IMarkupServices *This,IHTMLElement *pElement,ELEMENT_TAG_ID *ptagId);", "IMarkupServices_GetTagIDForName_Proxy": "HRESULT WINAPI IMarkupServices_GetTagIDForName_Proxy(IMarkupServices *This,BSTR bstrName,ELEMENT_TAG_ID *ptagId);", "IMarkupServices_GetNameForTagID_Proxy": "HRESULT WINAPI IMarkupServices_GetNameForTagID_Proxy(IMarkupServices *This,ELEMENT_TAG_ID tagId,BSTR *pbstrName);", "IMarkupServices_MovePointersToRange_Proxy": "HRESULT WINAPI IMarkupServices_MovePointersToRange_Proxy(IMarkupServices *This,IHTMLTxtRange *pIRange,IMarkupPointer *pPointerStart,IMarkupPointer *pPointerFinish);", "IMarkupServices_MoveRangeToPointers_Proxy": "HRESULT WINAPI IMarkupServices_MoveRangeToPointers_Proxy(IMarkupServices *This,IMarkupPointer *pPointerStart,IMarkupPointer *pPointerFinish,IHTMLTxtRange *pIRange);", "IMarkupServices_BeginUndoUnit_Proxy": "HRESULT WINAPI IMarkupServices_BeginUndoUnit_Proxy(IMarkupServices *This,OLECHAR *pchTitle);", "IMarkupServices_EndUndoUnit_Proxy": "HRESULT WINAPI IMarkupServices_EndUndoUnit_Proxy(IMarkupServices *This);", "IMarkupServices2_ParseGlobalEx_Proxy": "HRESULT WINAPI IMarkupServices2_ParseGlobalEx_Proxy(IMarkupServices2 *This,HGLOBAL hglobalHTML,DWORD dwFlags,IMarkupContainer *pContext,IMarkupContainer **ppContainerResult,IMarkupPointer *pPointerStart,IMarkupPointer *pPointerFinish);", "IMarkupServices2_ValidateElements_Proxy": "HRESULT WINAPI IMarkupServices2_ValidateElements_Proxy(IMarkupServices2 *This,IMarkupPointer *pPointerStart,IMarkupPointer *pPointerFinish,IMarkupPointer *pPointerTarget,IMarkupPointer *pPointerStatus,IHTMLElement **ppElemFailBottom,IHTMLElement **ppElemFailTop);", "IMarkupServices2_SaveSegmentsToClipboard_Proxy": "HRESULT WINAPI IMarkupServices2_SaveSegmentsToClipboard_Proxy(IMarkupServices2 *This,ISegmentList *pSegmentList,DWORD dwFlags);", "IHTMLChangePlayback_ExecChange_Proxy": "HRESULT WINAPI IHTMLChangePlayback_ExecChange_Proxy(IHTMLChangePlayback *This,BYTE *pbRecord,WINBOOL fForward);", "IMarkupPointer2_IsAtWordBreak_Proxy": "HRESULT WINAPI IMarkupPointer2_IsAtWordBreak_Proxy(IMarkupPointer2 *This,WINBOOL *pfAtBreak);", "IMarkupPointer2_GetMarkupPosition_Proxy": "HRESULT WINAPI IMarkupPointer2_GetMarkupPosition_Proxy(IMarkupPointer2 *This,__LONG32 *plMP);", "IMarkupPointer2_MoveToMarkupPosition_Proxy": "HRESULT WINAPI IMarkupPointer2_MoveToMarkupPosition_Proxy(IMarkupPointer2 *This,IMarkupContainer *pContainer,__LONG32 lMP);", "IMarkupPointer2_MoveUnitBounded_Proxy": "HRESULT WINAPI IMarkupPointer2_MoveUnitBounded_Proxy(IMarkupPointer2 *This,MOVEUNIT_ACTION muAction,IMarkupPointer *pIBoundary);", "IMarkupPointer2_IsInsideURL_Proxy": "HRESULT WINAPI IMarkupPointer2_IsInsideURL_Proxy(IMarkupPointer2 *This,IMarkupPointer *pRight,WINBOOL *pfResult);", "IMarkupPointer2_MoveToContent_Proxy": "HRESULT WINAPI IMarkupPointer2_MoveToContent_Proxy(IMarkupPointer2 *This,IHTMLElement *pIElement,WINBOOL fAtStart);", "IMarkupTextFrags_GetTextFragCount_Proxy": "HRESULT WINAPI IMarkupTextFrags_GetTextFragCount_Proxy(IMarkupTextFrags *This,__LONG32 *pcFrags);", "IMarkupTextFrags_GetTextFrag_Proxy": "HRESULT WINAPI IMarkupTextFrags_GetTextFrag_Proxy(IMarkupTextFrags *This,__LONG32 iFrag,BSTR *pbstrFrag,IMarkupPointer *pPointerFrag);", "IMarkupTextFrags_RemoveTextFrag_Proxy": "HRESULT WINAPI IMarkupTextFrags_RemoveTextFrag_Proxy(IMarkupTextFrags *This,__LONG32 iFrag);", "IMarkupTextFrags_InsertTextFrag_Proxy": "HRESULT WINAPI IMarkupTextFrags_InsertTextFrag_Proxy(IMarkupTextFrags *This,__LONG32 iFrag,BSTR bstrInsert,IMarkupPointer *pPointerInsert);", "IMarkupTextFrags_FindTextFragFromMarkupPointer_Proxy": "HRESULT WINAPI IMarkupTextFrags_FindTextFragFromMarkupPointer_Proxy(IMarkupTextFrags *This,IMarkupPointer *pPointerFind,__LONG32 *piFrag,WINBOOL *pfFragFound);", "IXMLGenericParse_SetGenericParse_Proxy": "HRESULT WINAPI IXMLGenericParse_SetGenericParse_Proxy(IXMLGenericParse *This,VARIANT_BOOL fDoGeneric);", "IHTMLEditHost_SnapRect_Proxy": "HRESULT WINAPI IHTMLEditHost_SnapRect_Proxy(IHTMLEditHost *This,IHTMLElement *pIElement,RECT *prcNew,ELEMENT_CORNER eHandle);", "IHTMLEditHost2_PreDrag_Proxy": "HRESULT WINAPI IHTMLEditHost2_PreDrag_Proxy(IHTMLEditHost2 *This);", "ISequenceNumber_GetSequenceNumber_Proxy": "HRESULT WINAPI ISequenceNumber_GetSequenceNumber_Proxy(ISequenceNumber *This,__LONG32 nCurrent,__LONG32 *pnNew);", "IIMEServices_GetActiveIMM_Proxy": "HRESULT WINAPI IIMEServices_GetActiveIMM_Proxy(IIMEServices *This,IActiveIMMApp **ppActiveIMM);", "ISelectionServicesListener_BeginSelectionUndo_Proxy": "HRESULT WINAPI ISelectionServicesListener_BeginSelectionUndo_Proxy(ISelectionServicesListener *This);", "ISelectionServicesListener_EndSelectionUndo_Proxy": "HRESULT WINAPI ISelectionServicesListener_EndSelectionUndo_Proxy(ISelectionServicesListener *This);", "ISelectionServicesListener_OnSelectedElementExit_Proxy": "HRESULT WINAPI ISelectionServicesListener_OnSelectedElementExit_Proxy(ISelectionServicesListener *This,IMarkupPointer *pIElementStart,IMarkupPointer *pIElementEnd,IMarkupPointer *pIElementContentStart,IMarkupPointer *pIElementContentEnd);", "ISelectionServicesListener_OnChangeType_Proxy": "HRESULT WINAPI ISelectionServicesListener_OnChangeType_Proxy(ISelectionServicesListener *This,SELECTION_TYPE eType,ISelectionServicesListener *pIListener);", "ISelectionServicesListener_GetTypeDetail_Proxy": "HRESULT WINAPI ISelectionServicesListener_GetTypeDetail_Proxy(ISelectionServicesListener *This,BSTR *pTypeDetail);", "ISelectionServices_SetSelectionType_Proxy": "HRESULT WINAPI ISelectionServices_SetSelectionType_Proxy(ISelectionServices *This,SELECTION_TYPE eType,ISelectionServicesListener *pIListener);", "ISelectionServices_GetMarkupContainer_Proxy": "HRESULT WINAPI ISelectionServices_GetMarkupContainer_Proxy(ISelectionServices *This,IMarkupContainer **ppIContainer);", "ISelectionServices_AddSegment_Proxy": "HRESULT WINAPI ISelectionServices_AddSegment_Proxy(ISelectionServices *This,IMarkupPointer *pIStart,IMarkupPointer *pIEnd,ISegment **ppISegmentAdded);", "ISelectionServices_AddElementSegment_Proxy": "HRESULT WINAPI ISelectionServices_AddElementSegment_Proxy(ISelectionServices *This,IHTMLElement *pIElement,IElementSegment **ppISegmentAdded);", "ISelectionServices_RemoveSegment_Proxy": "HRESULT WINAPI ISelectionServices_RemoveSegment_Proxy(ISelectionServices *This,ISegment *pISegment);", "ISelectionServices_GetSelectionServicesListener_Proxy": "HRESULT WINAPI ISelectionServices_GetSelectionServicesListener_Proxy(ISelectionServices *This,ISelectionServicesListener **ppISelectionServicesListener);", "IHTMLEditDesigner_PreHandleEvent_Proxy": "HRESULT WINAPI IHTMLEditDesigner_PreHandleEvent_Proxy(IHTMLEditDesigner *This,DISPID inEvtDispId,IHTMLEventObj *pIEventObj);", "IHTMLEditDesigner_PostHandleEvent_Proxy": "HRESULT WINAPI IHTMLEditDesigner_PostHandleEvent_Proxy(IHTMLEditDesigner *This,DISPID inEvtDispId,IHTMLEventObj *pIEventObj);", "IHTMLEditDesigner_TranslateAccelerator_Proxy": "HRESULT WINAPI IHTMLEditDesigner_TranslateAccelerator_Proxy(IHTMLEditDesigner *This,DISPID inEvtDispId,IHTMLEventObj *pIEventObj);", "IHTMLEditDesigner_PostEditorEventNotify_Proxy": "HRESULT WINAPI IHTMLEditDesigner_PostEditorEventNotify_Proxy(IHTMLEditDesigner *This,DISPID inEvtDispId,IHTMLEventObj *pIEventObj);", "IHTMLEditServices_AddDesigner_Proxy": "HRESULT WINAPI IHTMLEditServices_AddDesigner_Proxy(IHTMLEditServices *This,IHTMLEditDesigner *pIDesigner);", "IHTMLEditServices_RemoveDesigner_Proxy": "HRESULT WINAPI IHTMLEditServices_RemoveDesigner_Proxy(IHTMLEditServices *This,IHTMLEditDesigner *pIDesigner);", "IHTMLEditServices_GetSelectionServices_Proxy": "HRESULT WINAPI IHTMLEditServices_GetSelectionServices_Proxy(IHTMLEditServices *This,IMarkupContainer *pIContainer,ISelectionServices **ppSelSvc);", "IHTMLEditServices_MoveToSelectionAnchor_Proxy": "HRESULT WINAPI IHTMLEditServices_MoveToSelectionAnchor_Proxy(IHTMLEditServices *This,IMarkupPointer *pIStartAnchor);", "IHTMLEditServices_MoveToSelectionEnd_Proxy": "HRESULT WINAPI IHTMLEditServices_MoveToSelectionEnd_Proxy(IHTMLEditServices *This,IMarkupPointer *pIEndAnchor);", "IHTMLEditServices_SelectRange_Proxy": "HRESULT WINAPI IHTMLEditServices_SelectRange_Proxy(IHTMLEditServices *This,IMarkupPointer *pStart,IMarkupPointer *pEnd,SELECTION_TYPE eType);", "IHTMLEditServices2_MoveToSelectionAnchorEx_Proxy": "HRESULT WINAPI IHTMLEditServices2_MoveToSelectionAnchorEx_Proxy(IHTMLEditServices2 *This,IDisplayPointer *pIStartAnchor);", "IHTMLEditServices2_MoveToSelectionEndEx_Proxy": "HRESULT WINAPI IHTMLEditServices2_MoveToSelectionEndEx_Proxy(IHTMLEditServices2 *This,IDisplayPointer *pIEndAnchor);", "IHTMLEditServices2_FreezeVirtualCaretPos_Proxy": "HRESULT WINAPI IHTMLEditServices2_FreezeVirtualCaretPos_Proxy(IHTMLEditServices2 *This,WINBOOL fReCompute);", "IHTMLEditServices2_UnFreezeVirtualCaretPos_Proxy": "HRESULT WINAPI IHTMLEditServices2_UnFreezeVirtualCaretPos_Proxy(IHTMLEditServices2 *This,WINBOOL fReset);", "IHTMLComputedStyle_get_bold_Proxy": "HRESULT WINAPI IHTMLComputedStyle_get_bold_Proxy(IHTMLComputedStyle *This,VARIANT_BOOL *p);", "IHTMLComputedStyle_get_italic_Proxy": "HRESULT WINAPI IHTMLComputedStyle_get_italic_Proxy(IHTMLComputedStyle *This,VARIANT_BOOL *p);", "IHTMLComputedStyle_get_underline_Proxy": "HRESULT WINAPI IHTMLComputedStyle_get_underline_Proxy(IHTMLComputedStyle *This,VARIANT_BOOL *p);", "IHTMLComputedStyle_get_overline_Proxy": "HRESULT WINAPI IHTMLComputedStyle_get_overline_Proxy(IHTMLComputedStyle *This,VARIANT_BOOL *p);", "IHTMLComputedStyle_get_strikeOut_Proxy": "HRESULT WINAPI IHTMLComputedStyle_get_strikeOut_Proxy(IHTMLComputedStyle *This,VARIANT_BOOL *p);", "IHTMLComputedStyle_get_subScript_Proxy": "HRESULT WINAPI IHTMLComputedStyle_get_subScript_Proxy(IHTMLComputedStyle *This,VARIANT_BOOL *p);", "IHTMLComputedStyle_get_superScript_Proxy": "HRESULT WINAPI IHTMLComputedStyle_get_superScript_Proxy(IHTMLComputedStyle *This,VARIANT_BOOL *p);", "IHTMLComputedStyle_get_explicitFace_Proxy": "HRESULT WINAPI IHTMLComputedStyle_get_explicitFace_Proxy(IHTMLComputedStyle *This,VARIANT_BOOL *p);", "IHTMLComputedStyle_get_fontWeight_Proxy": "HRESULT WINAPI IHTMLComputedStyle_get_fontWeight_Proxy(IHTMLComputedStyle *This,__LONG32 *p);", "IHTMLComputedStyle_get_fontSize_Proxy": "HRESULT WINAPI IHTMLComputedStyle_get_fontSize_Proxy(IHTMLComputedStyle *This,__LONG32 *p);", "IHTMLComputedStyle_get_fontName_Proxy": "HRESULT WINAPI IHTMLComputedStyle_get_fontName_Proxy(IHTMLComputedStyle *This,TCHAR *p);", "IHTMLComputedStyle_get_hasBgColor_Proxy": "HRESULT WINAPI IHTMLComputedStyle_get_hasBgColor_Proxy(IHTMLComputedStyle *This,VARIANT_BOOL *p);", "IHTMLComputedStyle_get_textColor_Proxy": "HRESULT WINAPI IHTMLComputedStyle_get_textColor_Proxy(IHTMLComputedStyle *This,DWORD *p);", "IHTMLComputedStyle_get_backgroundColor_Proxy": "HRESULT WINAPI IHTMLComputedStyle_get_backgroundColor_Proxy(IHTMLComputedStyle *This,DWORD *p);", "IHTMLComputedStyle_get_preFormatted_Proxy": "HRESULT WINAPI IHTMLComputedStyle_get_preFormatted_Proxy(IHTMLComputedStyle *This,VARIANT_BOOL *p);", "IHTMLComputedStyle_get_direction_Proxy": "HRESULT WINAPI IHTMLComputedStyle_get_direction_Proxy(IHTMLComputedStyle *This,VARIANT_BOOL *p);", "IHTMLComputedStyle_get_blockDirection_Proxy": "HRESULT WINAPI IHTMLComputedStyle_get_blockDirection_Proxy(IHTMLComputedStyle *This,VARIANT_BOOL *p);", "IHTMLComputedStyle_get_OL_Proxy": "HRESULT WINAPI IHTMLComputedStyle_get_OL_Proxy(IHTMLComputedStyle *This,VARIANT_BOOL *p);", "IHTMLComputedStyle_IsEqual_Proxy": "HRESULT WINAPI IHTMLComputedStyle_IsEqual_Proxy(IHTMLComputedStyle *This,IHTMLComputedStyle *pComputedStyle,VARIANT_BOOL *pfEqual);", "IHTMLNamespace_get_name_Proxy": "HRESULT WINAPI IHTMLNamespace_get_name_Proxy(IHTMLNamespace *This,BSTR *p);", "IHTMLNamespace_get_urn_Proxy": "HRESULT WINAPI IHTMLNamespace_get_urn_Proxy(IHTMLNamespace *This,BSTR *p);", "IHTMLNamespace_get_tagNames_Proxy": "HRESULT WINAPI IHTMLNamespace_get_tagNames_Proxy(IHTMLNamespace *This,IDispatch **p);", "IHTMLNamespace_get_readyState_Proxy": "HRESULT WINAPI IHTMLNamespace_get_readyState_Proxy(IHTMLNamespace *This,VARIANT *p);", "IHTMLNamespace_put_onreadystatechange_Proxy": "HRESULT WINAPI IHTMLNamespace_put_onreadystatechange_Proxy(IHTMLNamespace *This,VARIANT v);", "IHTMLNamespace_get_onreadystatechange_Proxy": "HRESULT WINAPI IHTMLNamespace_get_onreadystatechange_Proxy(IHTMLNamespace *This,VARIANT *p);", "IHTMLNamespace_doImport_Proxy": "HRESULT WINAPI IHTMLNamespace_doImport_Proxy(IHTMLNamespace *This,BSTR bstrImplementationUrl);", "IHTMLNamespace_attachEvent_Proxy": "HRESULT WINAPI IHTMLNamespace_attachEvent_Proxy(IHTMLNamespace *This,BSTR event,IDispatch *pDisp,VARIANT_BOOL *pfResult);", "IHTMLNamespace_detachEvent_Proxy": "HRESULT WINAPI IHTMLNamespace_detachEvent_Proxy(IHTMLNamespace *This,BSTR event,IDispatch *pDisp);", "IHTMLNamespaceCollection_get_length_Proxy": "HRESULT WINAPI IHTMLNamespaceCollection_get_length_Proxy(IHTMLNamespaceCollection *This,__LONG32 *p);", "IHTMLNamespaceCollection_item_Proxy": "HRESULT WINAPI IHTMLNamespaceCollection_item_Proxy(IHTMLNamespaceCollection *This,VARIANT index,IDispatch **ppNamespace);", "IHTMLNamespaceCollection_add_Proxy": "HRESULT WINAPI IHTMLNamespaceCollection_add_Proxy(IHTMLNamespaceCollection *This,BSTR bstrNamespace,BSTR bstrUrn,VARIANT implementationUrl,IDispatch **ppNamespace);", "IHTMLPainter_Draw_Proxy": "HRESULT WINAPI IHTMLPainter_Draw_Proxy(IHTMLPainter *This,RECT rcBounds,RECT rcUpdate,LONG lDrawFlags,HDC hdc,LPVOID pvDrawObject);", "IHTMLPainter_OnResize_Proxy": "HRESULT WINAPI IHTMLPainter_OnResize_Proxy(IHTMLPainter *This,SIZE size);", "IHTMLPainter_GetPainterInfo_Proxy": "HRESULT WINAPI IHTMLPainter_GetPainterInfo_Proxy(IHTMLPainter *This,HTML_PAINTER_INFO *pInfo);", "IHTMLPainter_HitTestPoint_Proxy": "HRESULT WINAPI IHTMLPainter_HitTestPoint_Proxy(IHTMLPainter *This,POINT pt,WINBOOL *pbHit,LONG *plPartID);", "IHTMLPaintSite_InvalidatePainterInfo_Proxy": "HRESULT WINAPI IHTMLPaintSite_InvalidatePainterInfo_Proxy(IHTMLPaintSite *This);", "IHTMLPaintSite_InvalidateRect_Proxy": "HRESULT WINAPI IHTMLPaintSite_InvalidateRect_Proxy(IHTMLPaintSite *This,RECT *prcInvalid);", "IHTMLPaintSite_InvalidateRegion_Proxy": "HRESULT WINAPI IHTMLPaintSite_InvalidateRegion_Proxy(IHTMLPaintSite *This,HRGN rgnInvalid);", "IHTMLPaintSite_GetDrawInfo_Proxy": "HRESULT WINAPI IHTMLPaintSite_GetDrawInfo_Proxy(IHTMLPaintSite *This,LONG lFlags,HTML_PAINT_DRAW_INFO *pDrawInfo);", "IHTMLPaintSite_TransformGlobalToLocal_Proxy": "HRESULT WINAPI IHTMLPaintSite_TransformGlobalToLocal_Proxy(IHTMLPaintSite *This,POINT ptGlobal,POINT *pptLocal);", "IHTMLPaintSite_TransformLocalToGlobal_Proxy": "HRESULT WINAPI IHTMLPaintSite_TransformLocalToGlobal_Proxy(IHTMLPaintSite *This,POINT ptLocal,POINT *pptGlobal);", "IHTMLPaintSite_GetHitTestCookie_Proxy": "HRESULT WINAPI IHTMLPaintSite_GetHitTestCookie_Proxy(IHTMLPaintSite *This,LONG *plCookie);", "IHTMLPainterEventInfo_GetEventInfoFlags_Proxy": "HRESULT WINAPI IHTMLPainterEventInfo_GetEventInfoFlags_Proxy(IHTMLPainterEventInfo *This,__LONG32 *plEventInfoFlags);", "IHTMLPainterEventInfo_GetEventTarget_Proxy": "HRESULT WINAPI IHTMLPainterEventInfo_GetEventTarget_Proxy(IHTMLPainterEventInfo *This,IHTMLElement **ppElement);", "IHTMLPainterEventInfo_SetCursor_Proxy": "HRESULT WINAPI IHTMLPainterEventInfo_SetCursor_Proxy(IHTMLPainterEventInfo *This,LONG lPartID);", "IHTMLPainterEventInfo_StringFromPartID_Proxy": "HRESULT WINAPI IHTMLPainterEventInfo_StringFromPartID_Proxy(IHTMLPainterEventInfo *This,LONG lPartID,BSTR *pbstrPart);", "IHTMLPainterOverlay_OnMove_Proxy": "HRESULT WINAPI IHTMLPainterOverlay_OnMove_Proxy(IHTMLPainterOverlay *This,RECT rcDevice);", "IHTMLIPrintCollection_get_length_Proxy": "HRESULT WINAPI IHTMLIPrintCollection_get_length_Proxy(IHTMLIPrintCollection *This,__LONG32 *p);", "IHTMLIPrintCollection_get__newEnum_Proxy": "HRESULT WINAPI IHTMLIPrintCollection_get__newEnum_Proxy(IHTMLIPrintCollection *This,IUnknown **p);", "IHTMLIPrintCollection_item_Proxy": "HRESULT WINAPI IHTMLIPrintCollection_item_Proxy(IHTMLIPrintCollection *This,__LONG32 index,IUnknown **ppIPrint);", "IEnumPrivacyRecords_Reset_Proxy": "HRESULT WINAPI IEnumPrivacyRecords_Reset_Proxy(IEnumPrivacyRecords *This);", "IEnumPrivacyRecords_GetSize_Proxy": "HRESULT WINAPI IEnumPrivacyRecords_GetSize_Proxy(IEnumPrivacyRecords *This,ULONG *pSize);", "IEnumPrivacyRecords_GetPrivacyImpacted_Proxy": "HRESULT WINAPI IEnumPrivacyRecords_GetPrivacyImpacted_Proxy(IEnumPrivacyRecords *This,WINBOOL *pState);", "IEnumPrivacyRecords_Next_Proxy": "HRESULT WINAPI IEnumPrivacyRecords_Next_Proxy(IEnumPrivacyRecords *This,BSTR *pbstrUrl,BSTR *pbstrPolicyRef,LONG *pdwReserved,DWORD *pdwPrivacyFlags);", "IHTMLDialog_put_dialogTop_Proxy": "HRESULT WINAPI IHTMLDialog_put_dialogTop_Proxy(IHTMLDialog *This,VARIANT v);", "IHTMLDialog_get_dialogTop_Proxy": "HRESULT WINAPI IHTMLDialog_get_dialogTop_Proxy(IHTMLDialog *This,VARIANT *p);", "IHTMLDialog_put_dialogLeft_Proxy": "HRESULT WINAPI IHTMLDialog_put_dialogLeft_Proxy(IHTMLDialog *This,VARIANT v);", "IHTMLDialog_get_dialogLeft_Proxy": "HRESULT WINAPI IHTMLDialog_get_dialogLeft_Proxy(IHTMLDialog *This,VARIANT *p);", "IHTMLDialog_put_dialogWidth_Proxy": "HRESULT WINAPI IHTMLDialog_put_dialogWidth_Proxy(IHTMLDialog *This,VARIANT v);", "IHTMLDialog_get_dialogWidth_Proxy": "HRESULT WINAPI IHTMLDialog_get_dialogWidth_Proxy(IHTMLDialog *This,VARIANT *p);", "IHTMLDialog_put_dialogHeight_Proxy": "HRESULT WINAPI IHTMLDialog_put_dialogHeight_Proxy(IHTMLDialog *This,VARIANT v);", "IHTMLDialog_get_dialogHeight_Proxy": "HRESULT WINAPI IHTMLDialog_get_dialogHeight_Proxy(IHTMLDialog *This,VARIANT *p);", "IHTMLDialog_get_dialogArguments_Proxy": "HRESULT WINAPI IHTMLDialog_get_dialogArguments_Proxy(IHTMLDialog *This,VARIANT *p);", "IHTMLDialog_get_menuArguments_Proxy": "HRESULT WINAPI IHTMLDialog_get_menuArguments_Proxy(IHTMLDialog *This,VARIANT *p);", "IHTMLDialog_put_returnValue_Proxy": "HRESULT WINAPI IHTMLDialog_put_returnValue_Proxy(IHTMLDialog *This,VARIANT v);", "IHTMLDialog_get_returnValue_Proxy": "HRESULT WINAPI IHTMLDialog_get_returnValue_Proxy(IHTMLDialog *This,VARIANT *p);", "IHTMLDialog_close_Proxy": "HRESULT WINAPI IHTMLDialog_close_Proxy(IHTMLDialog *This);", "IHTMLDialog_toString_Proxy": "HRESULT WINAPI IHTMLDialog_toString_Proxy(IHTMLDialog *This,BSTR *String);", "IHTMLDialog2_put_status_Proxy": "HRESULT WINAPI IHTMLDialog2_put_status_Proxy(IHTMLDialog2 *This,BSTR v);", "IHTMLDialog2_get_status_Proxy": "HRESULT WINAPI IHTMLDialog2_get_status_Proxy(IHTMLDialog2 *This,BSTR *p);", "IHTMLDialog2_put_resizable_Proxy": "HRESULT WINAPI IHTMLDialog2_put_resizable_Proxy(IHTMLDialog2 *This,BSTR v);", "IHTMLDialog2_get_resizable_Proxy": "HRESULT WINAPI IHTMLDialog2_get_resizable_Proxy(IHTMLDialog2 *This,BSTR *p);", "IHTMLDialog3_put_unadorned_Proxy": "HRESULT WINAPI IHTMLDialog3_put_unadorned_Proxy(IHTMLDialog3 *This,BSTR v);", "IHTMLDialog3_get_unadorned_Proxy": "HRESULT WINAPI IHTMLDialog3_get_unadorned_Proxy(IHTMLDialog3 *This,BSTR *p);", "IHTMLDialog3_put_dialogHide_Proxy": "HRESULT WINAPI IHTMLDialog3_put_dialogHide_Proxy(IHTMLDialog3 *This,BSTR v);", "IHTMLDialog3_get_dialogHide_Proxy": "HRESULT WINAPI IHTMLDialog3_get_dialogHide_Proxy(IHTMLDialog3 *This,BSTR *p);", "IHTMLModelessInit_get_parameters_Proxy": "HRESULT WINAPI IHTMLModelessInit_get_parameters_Proxy(IHTMLModelessInit *This,VARIANT *p);", "IHTMLModelessInit_get_optionString_Proxy": "HRESULT WINAPI IHTMLModelessInit_get_optionString_Proxy(IHTMLModelessInit *This,VARIANT *p);", "IHTMLModelessInit_get_moniker_Proxy": "HRESULT WINAPI IHTMLModelessInit_get_moniker_Proxy(IHTMLModelessInit *This,IUnknown **p);", "IHTMLModelessInit_get_document_Proxy": "HRESULT WINAPI IHTMLModelessInit_get_document_Proxy(IHTMLModelessInit *This,IUnknown **p);", "IHTMLPopup_show_Proxy": "HRESULT WINAPI IHTMLPopup_show_Proxy(IHTMLPopup *This,__LONG32 x,__LONG32 y,__LONG32 w,__LONG32 h,VARIANT *pElement);", "IHTMLPopup_hide_Proxy": "HRESULT WINAPI IHTMLPopup_hide_Proxy(IHTMLPopup *This);", "IHTMLPopup_get_document_Proxy": "HRESULT WINAPI IHTMLPopup_get_document_Proxy(IHTMLPopup *This,IHTMLDocument **p);", "IHTMLPopup_get_isOpen_Proxy": "HRESULT WINAPI IHTMLPopup_get_isOpen_Proxy(IHTMLPopup *This,VARIANT_BOOL *p);", "IHTMLAppBehavior_put_applicationName_Proxy": "HRESULT WINAPI IHTMLAppBehavior_put_applicationName_Proxy(IHTMLAppBehavior *This,BSTR v);", "IHTMLAppBehavior_get_applicationName_Proxy": "HRESULT WINAPI IHTMLAppBehavior_get_applicationName_Proxy(IHTMLAppBehavior *This,BSTR *p);", "IHTMLAppBehavior_put_version_Proxy": "HRESULT WINAPI IHTMLAppBehavior_put_version_Proxy(IHTMLAppBehavior *This,BSTR v);", "IHTMLAppBehavior_get_version_Proxy": "HRESULT WINAPI IHTMLAppBehavior_get_version_Proxy(IHTMLAppBehavior *This,BSTR *p);", "IHTMLAppBehavior_put_icon_Proxy": "HRESULT WINAPI IHTMLAppBehavior_put_icon_Proxy(IHTMLAppBehavior *This,BSTR v);", "IHTMLAppBehavior_get_icon_Proxy": "HRESULT WINAPI IHTMLAppBehavior_get_icon_Proxy(IHTMLAppBehavior *This,BSTR *p);", "IHTMLAppBehavior_put_singleInstance_Proxy": "HRESULT WINAPI IHTMLAppBehavior_put_singleInstance_Proxy(IHTMLAppBehavior *This,BSTR v);", "IHTMLAppBehavior_get_singleInstance_Proxy": "HRESULT WINAPI IHTMLAppBehavior_get_singleInstance_Proxy(IHTMLAppBehavior *This,BSTR *p);", "IHTMLAppBehavior_put_minimizeButton_Proxy": "HRESULT WINAPI IHTMLAppBehavior_put_minimizeButton_Proxy(IHTMLAppBehavior *This,BSTR v);", "IHTMLAppBehavior_get_minimizeButton_Proxy": "HRESULT WINAPI IHTMLAppBehavior_get_minimizeButton_Proxy(IHTMLAppBehavior *This,BSTR *p);", "IHTMLAppBehavior_put_maximizeButton_Proxy": "HRESULT WINAPI IHTMLAppBehavior_put_maximizeButton_Proxy(IHTMLAppBehavior *This,BSTR v);", "IHTMLAppBehavior_get_maximizeButton_Proxy": "HRESULT WINAPI IHTMLAppBehavior_get_maximizeButton_Proxy(IHTMLAppBehavior *This,BSTR *p);", "IHTMLAppBehavior_put_border_Proxy": "HRESULT WINAPI IHTMLAppBehavior_put_border_Proxy(IHTMLAppBehavior *This,BSTR v);", "IHTMLAppBehavior_get_border_Proxy": "HRESULT WINAPI IHTMLAppBehavior_get_border_Proxy(IHTMLAppBehavior *This,BSTR *p);", "IHTMLAppBehavior_put_borderStyle_Proxy": "HRESULT WINAPI IHTMLAppBehavior_put_borderStyle_Proxy(IHTMLAppBehavior *This,BSTR v);", "IHTMLAppBehavior_get_borderStyle_Proxy": "HRESULT WINAPI IHTMLAppBehavior_get_borderStyle_Proxy(IHTMLAppBehavior *This,BSTR *p);", "IHTMLAppBehavior_put_sysMenu_Proxy": "HRESULT WINAPI IHTMLAppBehavior_put_sysMenu_Proxy(IHTMLAppBehavior *This,BSTR v);", "IHTMLAppBehavior_get_sysMenu_Proxy": "HRESULT WINAPI IHTMLAppBehavior_get_sysMenu_Proxy(IHTMLAppBehavior *This,BSTR *p);", "IHTMLAppBehavior_put_caption_Proxy": "HRESULT WINAPI IHTMLAppBehavior_put_caption_Proxy(IHTMLAppBehavior *This,BSTR v);", "IHTMLAppBehavior_get_caption_Proxy": "HRESULT WINAPI IHTMLAppBehavior_get_caption_Proxy(IHTMLAppBehavior *This,BSTR *p);", "IHTMLAppBehavior_put_windowState_Proxy": "HRESULT WINAPI IHTMLAppBehavior_put_windowState_Proxy(IHTMLAppBehavior *This,BSTR v);", "IHTMLAppBehavior_get_windowState_Proxy": "HRESULT WINAPI IHTMLAppBehavior_get_windowState_Proxy(IHTMLAppBehavior *This,BSTR *p);", "IHTMLAppBehavior_put_showInTaskBar_Proxy": "HRESULT WINAPI IHTMLAppBehavior_put_showInTaskBar_Proxy(IHTMLAppBehavior *This,BSTR v);", "IHTMLAppBehavior_get_showInTaskBar_Proxy": "HRESULT WINAPI IHTMLAppBehavior_get_showInTaskBar_Proxy(IHTMLAppBehavior *This,BSTR *p);", "IHTMLAppBehavior_get_commandLine_Proxy": "HRESULT WINAPI IHTMLAppBehavior_get_commandLine_Proxy(IHTMLAppBehavior *This,BSTR *p);", "IHTMLAppBehavior2_put_contextMenu_Proxy": "HRESULT WINAPI IHTMLAppBehavior2_put_contextMenu_Proxy(IHTMLAppBehavior2 *This,BSTR v);", "IHTMLAppBehavior2_get_contextMenu_Proxy": "HRESULT WINAPI IHTMLAppBehavior2_get_contextMenu_Proxy(IHTMLAppBehavior2 *This,BSTR *p);", "IHTMLAppBehavior2_put_innerBorder_Proxy": "HRESULT WINAPI IHTMLAppBehavior2_put_innerBorder_Proxy(IHTMLAppBehavior2 *This,BSTR v);", "IHTMLAppBehavior2_get_innerBorder_Proxy": "HRESULT WINAPI IHTMLAppBehavior2_get_innerBorder_Proxy(IHTMLAppBehavior2 *This,BSTR *p);", "IHTMLAppBehavior2_put_scroll_Proxy": "HRESULT WINAPI IHTMLAppBehavior2_put_scroll_Proxy(IHTMLAppBehavior2 *This,BSTR v);", "IHTMLAppBehavior2_get_scroll_Proxy": "HRESULT WINAPI IHTMLAppBehavior2_get_scroll_Proxy(IHTMLAppBehavior2 *This,BSTR *p);", "IHTMLAppBehavior2_put_scrollFlat_Proxy": "HRESULT WINAPI IHTMLAppBehavior2_put_scrollFlat_Proxy(IHTMLAppBehavior2 *This,BSTR v);", "IHTMLAppBehavior2_get_scrollFlat_Proxy": "HRESULT WINAPI IHTMLAppBehavior2_get_scrollFlat_Proxy(IHTMLAppBehavior2 *This,BSTR *p);", "IHTMLAppBehavior2_put_selection_Proxy": "HRESULT WINAPI IHTMLAppBehavior2_put_selection_Proxy(IHTMLAppBehavior2 *This,BSTR v);", "IHTMLAppBehavior2_get_selection_Proxy": "HRESULT WINAPI IHTMLAppBehavior2_get_selection_Proxy(IHTMLAppBehavior2 *This,BSTR *p);", "IHTMLAppBehavior3_put_navigable_Proxy": "HRESULT WINAPI IHTMLAppBehavior3_put_navigable_Proxy(IHTMLAppBehavior3 *This,BSTR v);", "IHTMLAppBehavior3_get_navigable_Proxy": "HRESULT WINAPI IHTMLAppBehavior3_get_navigable_Proxy(IHTMLAppBehavior3 *This,BSTR *p);", "IElementNamespace_AddTag_Proxy": "HRESULT WINAPI IElementNamespace_AddTag_Proxy(IElementNamespace *This,BSTR bstrTagName,LONG lFlags);", "IElementNamespaceTable_AddNamespace_Proxy": "HRESULT WINAPI IElementNamespaceTable_AddNamespace_Proxy(IElementNamespaceTable *This,BSTR bstrNamespace,BSTR bstrUrn,LONG lFlags,VARIANT *pvarFactory);", "IElementNamespaceFactory_Create_Proxy": "HRESULT WINAPI IElementNamespaceFactory_Create_Proxy(IElementNamespaceFactory *This,IElementNamespace *pNamespace);", "IElementNamespaceFactory2_CreateWithImplementation_Proxy": "HRESULT WINAPI IElementNamespaceFactory2_CreateWithImplementation_Proxy(IElementNamespaceFactory2 *This,IElementNamespace *pNamespace,BSTR bstrImplementation);", "IElementNamespaceFactoryCallback_Resolve_Proxy": "HRESULT WINAPI IElementNamespaceFactoryCallback_Resolve_Proxy(IElementNamespaceFactoryCallback *This,BSTR bstrNamespace,BSTR bstrTagName,BSTR bstrAttrs,IElementNamespace *pNamespace);", "IElementBehaviorSiteOM2_GetDefaults_Proxy": "HRESULT WINAPI IElementBehaviorSiteOM2_GetDefaults_Proxy(IElementBehaviorSiteOM2 *This,IHTMLElementDefaults **ppDefaults);", "IElementBehaviorCategory_GetCategory_Proxy": "HRESULT WINAPI IElementBehaviorCategory_GetCategory_Proxy(IElementBehaviorCategory *This,LPOLESTR *ppchCategory);", "IElementBehaviorSiteCategory_GetRelatedBehaviors_Proxy": "HRESULT WINAPI IElementBehaviorSiteCategory_GetRelatedBehaviors_Proxy(IElementBehaviorSiteCategory *This,LONG lDirection,LPOLESTR pchCategory,IEnumUnknown **ppEnumerator);", "IElementBehaviorSubmit_GetSubmitInfo_Proxy": "HRESULT WINAPI IElementBehaviorSubmit_GetSubmitInfo_Proxy(IElementBehaviorSubmit *This,IHTMLSubmitData *pSubmitData);", "IElementBehaviorSubmit_Reset_Proxy": "HRESULT WINAPI IElementBehaviorSubmit_Reset_Proxy(IElementBehaviorSubmit *This);", "IElementBehaviorFocus_GetFocusRect_Proxy": "HRESULT WINAPI IElementBehaviorFocus_GetFocusRect_Proxy(IElementBehaviorFocus *This,RECT *pRect);", "IElementBehaviorLayout_GetSize_Proxy": "HRESULT WINAPI IElementBehaviorLayout_GetSize_Proxy(IElementBehaviorLayout *This,LONG dwFlags,SIZE sizeContent,POINT *pptTranslateBy,POINT *pptTopLeft,SIZE *psizeProposed);", "IElementBehaviorLayout_GetLayoutInfo_Proxy": "HRESULT WINAPI IElementBehaviorLayout_GetLayoutInfo_Proxy(IElementBehaviorLayout *This,LONG *plLayoutInfo);", "IElementBehaviorLayout_GetPosition_Proxy": "HRESULT WINAPI IElementBehaviorLayout_GetPosition_Proxy(IElementBehaviorLayout *This,LONG lFlags,POINT *pptTopLeft);", "IElementBehaviorLayout_MapSize_Proxy": "HRESULT WINAPI IElementBehaviorLayout_MapSize_Proxy(IElementBehaviorLayout *This,SIZE *psizeIn,RECT *prcOut);", "IElementBehaviorLayout2_GetTextDescent_Proxy": "HRESULT WINAPI IElementBehaviorLayout2_GetTextDescent_Proxy(IElementBehaviorLayout2 *This,LONG *plDescent);", "IElementBehaviorSiteLayout_InvalidateLayoutInfo_Proxy": "HRESULT WINAPI IElementBehaviorSiteLayout_InvalidateLayoutInfo_Proxy(IElementBehaviorSiteLayout *This);", "IElementBehaviorSiteLayout_InvalidateSize_Proxy": "HRESULT WINAPI IElementBehaviorSiteLayout_InvalidateSize_Proxy(IElementBehaviorSiteLayout *This);", "IElementBehaviorSiteLayout_GetMediaResolution_Proxy": "HRESULT WINAPI IElementBehaviorSiteLayout_GetMediaResolution_Proxy(IElementBehaviorSiteLayout *This,SIZE *psizeResolution);", "IElementBehaviorSiteLayout2_GetFontInfo_Proxy": "HRESULT WINAPI IElementBehaviorSiteLayout2_GetFontInfo_Proxy(IElementBehaviorSiteLayout2 *This,LOGFONTW *plf);", "IHostBehaviorInit_PopulateNamespaceTable_Proxy": "HRESULT WINAPI IHostBehaviorInit_PopulateNamespaceTable_Proxy(IHostBehaviorInit *This);", "CryptSIPGetSignedDataMsg": "extern WINBOOL WINAPI CryptSIPGetSignedDataMsg(SIP_SUBJECTINFO *pSubjectInfo,DWORD *pdwEncodingType,DWORD dwIndex,DWORD *pcbSignedDataMsg,BYTE *pbSignedDataMsg);", "CryptSIPPutSignedDataMsg": "extern WINBOOL WINAPI CryptSIPPutSignedDataMsg(SIP_SUBJECTINFO *pSubjectInfo,DWORD dwEncodingType,DWORD *pdwIndex,DWORD cbSignedDataMsg,BYTE *pbSignedDataMsg);", "CryptSIPCreateIndirectData": "extern WINBOOL WINAPI CryptSIPCreateIndirectData(SIP_SUBJECTINFO *pSubjectInfo,DWORD *pcbIndirectData,SIP_INDIRECT_DATA *pIndirectData);", "CryptSIPVerifyIndirectData": "extern WINBOOL WINAPI CryptSIPVerifyIndirectData(SIP_SUBJECTINFO *pSubjectInfo,SIP_INDIRECT_DATA *pIndirectData);", "CryptSIPRemoveSignedDataMsg": "extern WINBOOL WINAPI CryptSIPRemoveSignedDataMsg(SIP_SUBJECTINFO *pSubjectInfo,DWORD dwIndex);", "CryptSIPLoad": "extern WINBOOL WINAPI CryptSIPLoad(const GUID *pgSubject,DWORD dwFlags,SIP_DISPATCH_INFO *pSipDispatch);", "CryptSIPRetrieveSubjectGuid": "extern WINBOOL WINAPI CryptSIPRetrieveSubjectGuid(LPCWSTR FileName,HANDLE hFileIn,GUID *pgSubject);", "CryptSIPRetrieveSubjectGuidForCatalogFile": "extern WINBOOL WINAPI CryptSIPRetrieveSubjectGuidForCatalogFile(LPCWSTR FileName,HANDLE hFileIn,GUID *pgSubject);", "CryptSIPAddProvider": "extern WINBOOL WINAPI CryptSIPAddProvider(SIP_ADD_NEWPROVIDER *psNewProv);", "CryptSIPRemoveProvider": "extern WINBOOL WINAPI CryptSIPRemoveProvider(GUID *pgProv);", "DrvDocumentEvent": "int WINAPI DrvDocumentEvent(HANDLE,HDC,int,ULONG,PVOID,ULONG,PVOID);", "DrvDriverEvent": "WINBOOL WINAPI DrvDriverEvent(DWORD, DWORD, LPBYTE, LPARAM);", "DrvPrinterEvent": "WINBOOL WINAPI DrvPrinterEvent(LPWSTR, INT, DWORD, LPARAM);", "GetExpandedResourceExclusiveCpuCount": "HRESULT WINAPI GetExpandedResourceExclusiveCpuCount(ULONG *exclusiveCpuCount);", "HasExpandedResources": "HRESULT WINAPI HasExpandedResources(BOOL *hasExpandedResources);", "ReleaseExclusiveCpuSets": "HRESULT WINAPI ReleaseExclusiveCpuSets(VOID);", "ImageList_CoCreateInstance": "WINCOMMCTRLAPI HRESULT WINAPI ImageList_CoCreateInstance (REFCLSID rclsid, const IUnknown *punkOuter, REFIID riid, void **ppv);", "ITriEditDocument_FilterIn_Proxy": "HRESULT WINAPI ITriEditDocument_FilterIn_Proxy(ITriEditDocument *This,IUnknown *pStmOld,IUnknown **ppStmNew,DWORD dwFlags,BSTR bstrBaseURL);", "ITriEditDocument_FilterOut_Proxy": "HRESULT WINAPI ITriEditDocument_FilterOut_Proxy(ITriEditDocument *This,IUnknown *pStmOld,IUnknown **ppStmNew,DWORD dwFlags,BSTR bstrBaseURL);", "IDocHostDragDropHandler_DrawDragFeedback_Proxy": "HRESULT WINAPI IDocHostDragDropHandler_DrawDragFeedback_Proxy(IDocHostDragDropHandler *This,RECT *pRect);", "CryptAcquireContextA": "WINIMPM WINBOOL WINAPI CryptAcquireContextA (HCRYPTPROV *phProv, LPCSTR szContainer, LPCSTR szProvider, DWORD dwProvType, DWORD dwFlags);", "CryptAcquireContextW": "WINIMPM WINBOOL WINAPI CryptAcquireContextW (HCRYPTPROV *phProv, LPCWSTR szContainer, LPCWSTR szProvider, DWORD dwProvType, DWORD dwFlags);", "CryptGenRandom": "WINIMPM WINBOOL WINAPI CryptGenRandom (HCRYPTPROV hProv, DWORD dwLen, BYTE *pbBuffer);", "CryptReleaseContext": "WINIMPM WINBOOL WINAPI CryptReleaseContext (HCRYPTPROV hProv, DWORD dwFlags);", "CryptHashSessionKey": "WINIMPM WINBOOL WINAPI CryptHashSessionKey (HCRYPTHASH hHash, HCRYPTKEY hKey, DWORD dwFlags);", "CryptSetProviderA": "WINIMPM WINBOOL WINAPI CryptSetProviderA (LPCSTR pszProvName, DWORD dwProvType);", "CryptSetProviderExA": "WINIMPM WINBOOL WINAPI CryptSetProviderExA (LPCSTR pszProvName, DWORD dwProvType, DWORD *pdwReserved, DWORD dwFlags);", "CryptSetProviderExW": "WINIMPM WINBOOL WINAPI CryptSetProviderExW (LPCWSTR pszProvName, DWORD dwProvType, DWORD *pdwReserved, DWORD dwFlags);", "CryptEnumProviderTypesA": "WINIMPM WINBOOL WINAPI CryptEnumProviderTypesA (DWORD dwIndex, DWORD *pdwReserved, DWORD dwFlags, DWORD *pdwProvType, LPSTR szTypeName, DWORD *pcbTypeName);", "CryptEnumProviderTypesW": "WINIMPM WINBOOL WINAPI CryptEnumProviderTypesW (DWORD dwIndex, DWORD *pdwReserved, DWORD dwFlags, DWORD *pdwProvType, LPWSTR szTypeName, DWORD *pcbTypeName);", "CryptContextAddRef": "WINIMPM WINBOOL WINAPI CryptContextAddRef (HCRYPTPROV hProv, DWORD *pdwReserved, DWORD dwFlags);", "CryptDuplicateHash": "WINIMPM WINBOOL WINAPI CryptDuplicateHash (HCRYPTHASH hHash, DWORD *pdwReserved, DWORD dwFlags, HCRYPTHASH *phHash);", "CryptGenKey": "WINIMPM WINBOOL WINAPI CryptGenKey (HCRYPTPROV hProv, ALG_ID Algid, DWORD dwFlags, HCRYPTKEY *phKey);", "CryptDeriveKey": "WINIMPM WINBOOL WINAPI CryptDeriveKey (HCRYPTPROV hProv, ALG_ID Algid, HCRYPTHASH hBaseData, DWORD dwFlags, HCRYPTKEY *phKey);", "CryptDestroyKey": "WINIMPM WINBOOL WINAPI CryptDestroyKey (HCRYPTKEY hKey);", "CryptSetKeyParam": "WINIMPM WINBOOL WINAPI CryptSetKeyParam (HCRYPTKEY hKey, DWORD dwParam, CONST BYTE *pbData, DWORD dwFlags);", "CryptGetKeyParam": "WINIMPM WINBOOL WINAPI CryptGetKeyParam (HCRYPTKEY hKey, DWORD dwParam, BYTE *pbData, DWORD *pdwDataLen, DWORD dwFlags);", "CryptSetHashParam": "WINIMPM WINBOOL WINAPI CryptSetHashParam (HCRYPTHASH hHash, DWORD dwParam, CONST BYTE *pbData, DWORD dwFlags);", "CryptGetHashParam": "WINIMPM WINBOOL WINAPI CryptGetHashParam (HCRYPTHASH hHash, DWORD dwParam, BYTE *pbData, DWORD *pdwDataLen, DWORD dwFlags);", "CryptSetProvParam": "WINIMPM WINBOOL WINAPI CryptSetProvParam (HCRYPTPROV hProv, DWORD dwParam, CONST BYTE *pbData, DWORD dwFlags);", "CryptGetProvParam": "WINIMPM WINBOOL WINAPI CryptGetProvParam (HCRYPTPROV hProv, DWORD dwParam, BYTE *pbData, DWORD *pdwDataLen, DWORD dwFlags);", "CryptGetUserKey": "WINIMPM WINBOOL WINAPI CryptGetUserKey (HCRYPTPROV hProv, DWORD dwKeySpec, HCRYPTKEY *phUserKey);", "CryptExportKey": "WINIMPM WINBOOL WINAPI CryptExportKey (HCRYPTKEY hKey, HCRYPTKEY hExpKey, DWORD dwBlobType, DWORD dwFlags, BYTE *pbData, DWORD *pdwDataLen);", "CryptImportKey": "WINIMPM WINBOOL WINAPI CryptImportKey (HCRYPTPROV hProv, CONST BYTE *pbData, DWORD dwDataLen, HCRYPTKEY hPubKey, DWORD dwFlags, HCRYPTKEY *phKey);", "CryptEncrypt": "WINIMPM WINBOOL WINAPI CryptEncrypt (HCRYPTKEY hKey, HCRYPTHASH hHash, WINBOOL Final, DWORD dwFlags, BYTE *pbData, DWORD *pdwDataLen, DWORD dwBufLen);", "CryptDecrypt": "WINIMPM WINBOOL WINAPI CryptDecrypt (HCRYPTKEY hKey, HCRYPTHASH hHash, WINBOOL Final, DWORD dwFlags, BYTE *pbData, DWORD *pdwDataLen);", "CryptCreateHash": "WINIMPM WINBOOL WINAPI CryptCreateHash (HCRYPTPROV hProv, ALG_ID Algid, HCRYPTKEY hKey, DWORD dwFlags, HCRYPTHASH *phHash);", "CryptHashData": "WINIMPM WINBOOL WINAPI CryptHashData (HCRYPTHASH hHash, CONST BYTE *pbData, DWORD dwDataLen, DWORD dwFlags);", "CryptDestroyHash": "WINIMPM WINBOOL WINAPI CryptDestroyHash (HCRYPTHASH hHash);", "CryptSignHashA": "WINIMPM WINBOOL WINAPI CryptSignHashA (HCRYPTHASH hHash, DWORD dwKeySpec, LPCSTR szDescription, DWORD dwFlags, BYTE *pbSignature, DWORD *pdwSigLen);", "CryptSignHashW": "WINIMPM WINBOOL WINAPI CryptSignHashW (HCRYPTHASH hHash, DWORD dwKeySpec, LPCWSTR szDescription, DWORD dwFlags, BYTE *pbSignature, DWORD *pdwSigLen);", "CryptVerifySignatureA": "WINIMPM WINBOOL WINAPI CryptVerifySignatureA (HCRYPTHASH hHash, CONST BYTE *pbSignature, DWORD dwSigLen, HCRYPTKEY hPubKey, LPCSTR szDescription, DWORD dwFlags);", "CryptVerifySignatureW": "WINIMPM WINBOOL WINAPI CryptVerifySignatureW (HCRYPTHASH hHash, CONST BYTE *pbSignature, DWORD dwSigLen, HCRYPTKEY hPubKey, LPCWSTR szDescription, DWORD dwFlags);", "CryptGetDefaultProviderA": "WINIMPM WINBOOL WINAPI CryptGetDefaultProviderA (DWORD dwProvType, DWORD *pdwReserved, DWORD dwFlags, LPSTR pszProvName, DWORD *pcbProvName);", "CryptGetDefaultProviderW": "WINIMPM WINBOOL WINAPI CryptGetDefaultProviderW (DWORD dwProvType, DWORD *pdwReserved, DWORD dwFlags, LPWSTR pszProvName, DWORD *pcbProvName);", "CryptDuplicateKey": "WINIMPM WINBOOL WINAPI CryptDuplicateKey (HCRYPTKEY hKey, DWORD *pdwReserved, DWORD dwFlags, HCRYPTKEY *phKey);", "CryptEnumProvidersA": "WINIMPM WINBOOL WINAPI CryptEnumProvidersA (DWORD dwIndex, DWORD *pdwReserved, DWORD dwFlags, DWORD *pdwProvType, LPSTR szProvName, DWORD *pcbProvName);", "CryptEnumProvidersW": "WINIMPM WINBOOL WINAPI CryptEnumProvidersW (DWORD dwIndex, DWORD *pdwReserved, DWORD dwFlags, DWORD *pdwProvType, LPWSTR szProvName, DWORD *pcbProvName);", "CryptSetProviderW": "WINIMPM WINBOOL WINAPI CryptSetProviderW (LPCWSTR pszProvName, DWORD dwProvType);", "CryptFormatObject": "WINIMPM WINBOOL WINAPI CryptFormatObject (DWORD dwCertEncodingType, DWORD dwFormatType, DWORD dwFormatStrType, void *pFormatStruct, LPCSTR lpszStructType, const BYTE *pbEncoded, DWORD cbEncoded, void *pbFormat, DWORD *pcbFormat);", "CryptEncodeObjectEx": "WINIMPM WINBOOL WINAPI CryptEncodeObjectEx (DWORD dwCertEncodingType, LPCSTR lpszStructType, const void *pvStructInfo, DWORD dwFlags, PCRYPT_ENCODE_PARA pEncodePara, void *pvEncoded, DWORD *pcbEncoded);", "CryptEncodeObject": "WINIMPM WINBOOL WINAPI CryptEncodeObject (DWORD dwCertEncodingType, LPCSTR lpszStructType, const void *pvStructInfo, BYTE *pbEncoded, DWORD *pcbEncoded);", "CryptDecodeObjectEx": "WINIMPM WINBOOL WINAPI CryptDecodeObjectEx (DWORD dwCertEncodingType, LPCSTR lpszStructType, const BYTE *pbEncoded, DWORD cbEncoded, DWORD dwFlags, PCRYPT_DECODE_PARA pDecodePara, void *pvStructInfo, DWORD *pcbStructInfo);", "CryptDecodeObject": "WINIMPM WINBOOL WINAPI CryptDecodeObject (DWORD dwCertEncodingType, LPCSTR lpszStructType, const BYTE *pbEncoded, DWORD cbEncoded, DWORD dwFlags, void *pvStructInfo, DWORD *pcbStructInfo);", "CryptInstallOIDFunctionAddress": "WINIMPM WINBOOL WINAPI CryptInstallOIDFunctionAddress (HMODULE hModule, DWORD dwEncodingType, LPCSTR pszFuncName, DWORD cFuncEntry, const CRYPT_OID_FUNC_ENTRY rgFuncEntry[], DWORD dwFlags);", "CryptInitOIDFunctionSet": "WINIMPM HCRYPTOIDFUNCSET WINAPI CryptInitOIDFunctionSet (LPCSTR pszFuncName, DWORD dwFlags);", "CryptGetOIDFunctionAddress": "WINIMPM WINBOOL WINAPI CryptGetOIDFunctionAddress (HCRYPTOIDFUNCSET hFuncSet, DWORD dwEncodingType, LPCSTR pszOID, DWORD dwFlags, void **ppvFuncAddr, HCRYPTOIDFUNCADDR *phFuncAddr);", "CryptGetDefaultOIDDllList": "WINIMPM WINBOOL WINAPI CryptGetDefaultOIDDllList (HCRYPTOIDFUNCSET hFuncSet, DWORD dwEncodingType, WCHAR *pwszDllList, DWORD *pcchDllList);", "CryptGetDefaultOIDFunctionAddress": "WINIMPM WINBOOL WINAPI CryptGetDefaultOIDFunctionAddress (HCRYPTOIDFUNCSET hFuncSet, DWORD dwEncodingType, LPCWSTR pwszDll, DWORD dwFlags, void **ppvFuncAddr, HCRYPTOIDFUNCADDR *phFuncAddr);", "CryptFreeOIDFunctionAddress": "WINIMPM WINBOOL WINAPI CryptFreeOIDFunctionAddress (HCRYPTOIDFUNCADDR hFuncAddr, DWORD dwFlags);", "CryptRegisterOIDFunction": "WINIMPM WINBOOL WINAPI CryptRegisterOIDFunction (DWORD dwEncodingType, LPCSTR pszFuncName, LPCSTR pszOID, LPCWSTR pwszDll, LPCSTR pszOverrideFuncName);", "CryptUnregisterOIDFunction": "WINIMPM WINBOOL WINAPI CryptUnregisterOIDFunction (DWORD dwEncodingType, LPCSTR pszFuncName, LPCSTR pszOID);", "CryptRegisterDefaultOIDFunction": "WINIMPM WINBOOL WINAPI CryptRegisterDefaultOIDFunction (DWORD dwEncodingType, LPCSTR pszFuncName, DWORD dwIndex, LPCWSTR pwszDll);", "CryptUnregisterDefaultOIDFunction": "WINIMPM WINBOOL WINAPI CryptUnregisterDefaultOIDFunction (DWORD dwEncodingType, LPCSTR pszFuncName, LPCWSTR pwszDll);", "CryptSetOIDFunctionValue": "WINIMPM WINBOOL WINAPI CryptSetOIDFunctionValue (DWORD dwEncodingType, LPCSTR pszFuncName, LPCSTR pszOID, LPCWSTR pwszValueName, DWORD dwValueType, const BYTE *pbValueData, DWORD cbValueData);", "CryptGetOIDFunctionValue": "WINIMPM WINBOOL WINAPI CryptGetOIDFunctionValue (DWORD dwEncodingType, LPCSTR pszFuncName, LPCSTR pszOID, LPCWSTR pwszValueName, DWORD *pdwValueType, BYTE *pbValueData, DWORD *pcbValueData);", "CryptEnumOIDFunction": "WINIMPM WINBOOL WINAPI CryptEnumOIDFunction (DWORD dwEncodingType, LPCSTR pszFuncName, LPCSTR pszOID, DWORD dwFlags, void *pvArg, PFN_CRYPT_ENUM_OID_FUNC pfnEnumOIDFunc);", "CryptFindOIDInfo": "WINIMPM PCCRYPT_OID_INFO WINAPI CryptFindOIDInfo (DWORD dwKeyType, void *pvKey, DWORD dwGroupId);", "CryptRegisterOIDInfo": "WINIMPM WINBOOL WINAPI CryptRegisterOIDInfo (PCCRYPT_OID_INFO pInfo, DWORD dwFlags);", "CryptUnregisterOIDInfo": "WINIMPM WINBOOL WINAPI CryptUnregisterOIDInfo (PCCRYPT_OID_INFO pInfo);", "CryptEnumOIDInfo": "WINIMPM WINBOOL WINAPI CryptEnumOIDInfo (DWORD dwGroupId, DWORD dwFlags, void *pvArg, PFN_CRYPT_ENUM_OID_INFO pfnEnumOIDInfo);", "CryptFindLocalizedName": "WINIMPM LPCWSTR WINAPI CryptFindLocalizedName (LPCWSTR pwszCryptName);", "CryptMsgOpenToEncode": "WINIMPM HCRYPTMSG WINAPI CryptMsgOpenToEncode (DWORD dwMsgEncodingType, DWORD dwFlags, DWORD dwMsgType, void const *pvMsgEncodeInfo, LPSTR pszInnerContentObjID, PCMSG_STREAM_INFO pStreamInfo);", "CryptMsgCalculateEncodedLength": "WINIMPM DWORD WINAPI CryptMsgCalculateEncodedLength (DWORD dwMsgEncodingType, DWORD dwFlags, DWORD dwMsgType, void const *pvMsgEncodeInfo, LPSTR pszInnerContentObjID, DWORD cbData);", "CryptMsgOpenToDecode": "WINIMPM HCRYPTMSG WINAPI CryptMsgOpenToDecode (DWORD dwMsgEncodingType, DWORD dwFlags, DWORD dwMsgType, HCRYPTPROV_LEGACY hCryptProv, PCERT_INFO pRecipientInfo, PCMSG_STREAM_INFO pStreamInfo);", "CryptMsgDuplicate": "WINIMPM HCRYPTMSG WINAPI CryptMsgDuplicate (HCRYPTMSG hCryptMsg);", "CryptMsgClose": "WINIMPM WINBOOL WINAPI CryptMsgClose (HCRYPTMSG hCryptMsg);", "CryptMsgUpdate": "WINIMPM WINBOOL WINAPI CryptMsgUpdate (HCRYPTMSG hCryptMsg, const BYTE *pbData, DWORD cbData, WINBOOL fFinal);", "CryptMsgGetParam": "WINIMPM WINBOOL WINAPI CryptMsgGetParam (HCRYPTMSG hCryptMsg, DWORD dwParamType, DWORD dwIndex, void *pvData, DWORD *pcbData);", "CryptMsgControl": "WINIMPM WINBOOL WINAPI CryptMsgControl (HCRYPTMSG hCryptMsg, DWORD dwFlags, DWORD dwCtrlType, void const *pvCtrlPara);", "CryptMsgVerifyCountersignatureEncoded": "WINBOOL WINAPI CryptMsgVerifyCountersignatureEncoded (HCRYPTPROV_LEGACY hCryptProv, DWORD dwEncodingType, PBYTE pbSignerInfo, DWORD cbSignerInfo, PBYTE pbSignerInfoCountersignature, DWORD cbSignerInfoCountersignature, PCERT_INFO pciCountersigner);", "CryptMsgVerifyCountersignatureEncodedEx": "WINBOOL WINAPI CryptMsgVerifyCountersignatureEncodedEx (HCRYPTPROV_LEGACY hCryptProv, DWORD dwEncodingType, PBYTE pbSignerInfo, DWORD cbSignerInfo, PBYTE pbSignerInfoCountersignature, DWORD cbSignerInfoCountersignature, DWORD dwSignerType, void *pvSigner, DWORD dwFlags, void *pvExtra);", "CryptMsgCountersign": "WINBOOL WINAPI CryptMsgCountersign (HCRYPTMSG hCryptMsg, DWORD dwIndex, DWORD cCountersigners, PCMSG_SIGNER_ENCODE_INFO rgCountersigners);", "CryptMsgCountersignEncoded": "WINBOOL WINAPI CryptMsgCountersignEncoded (DWORD dwEncodingType, PBYTE pbSignerInfo, DWORD cbSignerInfo, DWORD cCountersigners, PCMSG_SIGNER_ENCODE_INFO rgCountersigners, PBYTE pbCountersignature, PDWORD pcbCountersignature);", "CertOpenStore": "WINIMPM HCERTSTORE WINAPI CertOpenStore (LPCSTR lpszStoreProvider, DWORD dwEncodingType, HCRYPTPROV_LEGACY hCryptProv, DWORD dwFlags, const void *pvPara);", "CertDuplicateStore": "WINIMPM HCERTSTORE WINAPI CertDuplicateStore (HCERTSTORE hCertStore);", "CertSaveStore": "WINIMPM WINBOOL WINAPI CertSaveStore (HCERTSTORE hCertStore, DWORD dwEncodingType, DWORD dwSaveAs, DWORD dwSaveTo, void *pvSaveToPara, DWORD dwFlags);", "CertCloseStore": "WINIMPM WINBOOL WINAPI CertCloseStore (HCERTSTORE hCertStore, DWORD dwFlags);", "CertGetSubjectCertificateFromStore": "WINIMPM PCCERT_CONTEXT WINAPI CertGetSubjectCertificateFromStore (HCERTSTORE hCertStore, DWORD dwCertEncodingType, PCERT_INFO pCertId);", "CertEnumCertificatesInStore": "WINIMPM PCCERT_CONTEXT WINAPI CertEnumCertificatesInStore (HCERTSTORE hCertStore, PCCERT_CONTEXT pPrevCertContext);", "CertFindCertificateInStore": "WINIMPM PCCERT_CONTEXT WINAPI CertFindCertificateInStore (HCERTSTORE hCertStore, DWORD dwCertEncodingType, DWORD dwFindFlags, DWORD dwFindType, const void *pvFindPara, PCCERT_CONTEXT pPrevCertContext);", "CertGetIssuerCertificateFromStore": "WINIMPM PCCERT_CONTEXT WINAPI CertGetIssuerCertificateFromStore (HCERTSTORE hCertStore, PCCERT_CONTEXT pSubjectContext, PCCERT_CONTEXT pPrevIssuerContext, DWORD *pdwFlags);", "CertVerifySubjectCertificateContext": "WINIMPM WINBOOL WINAPI CertVerifySubjectCertificateContext (PCCERT_CONTEXT pSubject, PCCERT_CONTEXT pIssuer, DWORD *pdwFlags);", "CertDuplicateCertificateContext": "WINIMPM PCCERT_CONTEXT WINAPI CertDuplicateCertificateContext (PCCERT_CONTEXT pCertContext);", "CertCreateCertificateContext": "WINIMPM PCCERT_CONTEXT WINAPI CertCreateCertificateContext (DWORD dwCertEncodingType, const BYTE *pbCertEncoded, DWORD cbCertEncoded);", "CertFreeCertificateContext": "WINIMPM WINBOOL WINAPI CertFreeCertificateContext (PCCERT_CONTEXT pCertContext);", "CertSetCertificateContextProperty": "WINIMPM WINBOOL WINAPI CertSetCertificateContextProperty (PCCERT_CONTEXT pCertContext, DWORD dwPropId, DWORD dwFlags, const void *pvData);", "CertEnumCRLsInStore": "WINIMPM PCCRL_CONTEXT WINAPI CertEnumCRLsInStore (HCERTSTORE hCertStore, PCCRL_CONTEXT pPrevCrlContext);", "CertDeleteCRLFromStore": "WINIMPM WINBOOL WINAPI CertDeleteCRLFromStore (PCCRL_CONTEXT pCrlContext);", "CertDuplicateCRLContext": "WINIMPM PCCRL_CONTEXT WINAPI CertDuplicateCRLContext (PCCRL_CONTEXT pCrlContext);", "CertFindCRLInStore": "WINIMPM PCCRL_CONTEXT WINAPI CertFindCRLInStore (HCERTSTORE hCertStore, DWORD dwCertEncodingType, DWORD dwFindFlags, DWORD dwFindType, const void *pvFindPara, PCCRL_CONTEXT pPrevCrlContext);", "CertFreeCRLContext": "WINIMPM WINBOOL WINAPI CertFreeCRLContext (PCCRL_CONTEXT pCrlContext);", "CertGetCertificateContextProperty": "WINIMPM WINBOOL WINAPI CertGetCertificateContextProperty (PCCERT_CONTEXT pCertContext, DWORD dwPropId, void *pvData, DWORD *pcbData);", "CertEnumCertificateContextProperties": "WINIMPM DWORD WINAPI CertEnumCertificateContextProperties (PCCERT_CONTEXT pCertContext, DWORD dwPropId);", "CertDeleteCertificateFromStore": "WINIMPM WINBOOL WINAPI CertDeleteCertificateFromStore (PCCERT_CONTEXT pCertContext);", "CertCreateCTLEntryFromCertificateContextProperties": "WINIMPM WINBOOL WINAPI CertCreateCTLEntryFromCertificateContextProperties (PCCERT_CONTEXT pCertContext, DWORD cOptAttr, PCRYPT_ATTRIBUTE rgOptAttr, DWORD dwFlags, void *pvReserved, PCTL_ENTRY pCtlEntry, DWORD *pcbCtlEntry);", "CertSetCertificateContextPropertiesFromCTLEntry": "WINIMPM WINBOOL WINAPI CertSetCertificateContextPropertiesFromCTLEntry (PCCERT_CONTEXT pCertContext, PCTL_ENTRY pCtlEntry, DWORD dwFlags);", "CertGetCRLFromStore": "WINIMPM PCCRL_CONTEXT WINAPI CertGetCRLFromStore (HCERTSTORE hCertStore, PCCERT_CONTEXT pIssuerContext, PCCRL_CONTEXT pPrevCrlContext, DWORD *pdwFlags);", "CertCreateCRLContext": "WINIMPM PCCRL_CONTEXT WINAPI CertCreateCRLContext (DWORD dwCertEncodingType, const BYTE *pbCrlEncoded, DWORD cbCrlEncoded);", "CertSetCRLContextProperty": "WINIMPM WINBOOL WINAPI CertSetCRLContextProperty (PCCRL_CONTEXT pCrlContext, DWORD dwPropId, DWORD dwFlags, const void *pvData);", "CertGetCRLContextProperty": "WINIMPM WINBOOL WINAPI CertGetCRLContextProperty (PCCRL_CONTEXT pCrlContext, DWORD dwPropId, void *pvData, DWORD *pcbData);", "CertEnumCRLContextProperties": "WINIMPM DWORD WINAPI CertEnumCRLContextProperties (PCCRL_CONTEXT pCrlContext, DWORD dwPropId);", "CertFindCertificateInCRL": "WINIMPM WINBOOL WINAPI CertFindCertificateInCRL (PCCERT_CONTEXT pCert, PCCRL_CONTEXT pCrlContext, DWORD dwFlags, void *pvReserved, PCRL_ENTRY *ppCrlEntry);", "CertIsValidCRLForCertificate": "WINIMPM WINBOOL WINAPI CertIsValidCRLForCertificate (PCCERT_CONTEXT pCert, PCCRL_CONTEXT pCrl, DWORD dwFlags, void *pvReserved);", "CertAddEncodedCertificateToStore": "WINIMPM WINBOOL WINAPI CertAddEncodedCertificateToStore (HCERTSTORE hCertStore, DWORD dwCertEncodingType, const BYTE *pbCertEncoded, DWORD cbCertEncoded, DWORD dwAddDisposition, PCCERT_CONTEXT *ppCertContext);", "CertAddCertificateContextToStore": "WINIMPM WINBOOL WINAPI CertAddCertificateContextToStore (HCERTSTORE hCertStore, PCCERT_CONTEXT pCertContext, DWORD dwAddDisposition, PCCERT_CONTEXT *ppStoreContext);", "CertAddSerializedElementToStore": "WINIMPM WINBOOL WINAPI CertAddSerializedElementToStore (HCERTSTORE hCertStore, const BYTE *pbElement, DWORD cbElement, DWORD dwAddDisposition, DWORD dwFlags, DWORD dwContextTypeFlags, DWORD *pdwContextType, const void **ppvContext);", "CertAddEncodedCRLToStore": "WINIMPM WINBOOL WINAPI CertAddEncodedCRLToStore (HCERTSTORE hCertStore, DWORD dwCertEncodingType, const BYTE *pbCrlEncoded, DWORD cbCrlEncoded, DWORD dwAddDisposition, PCCRL_CONTEXT *ppCrlContext);", "CertAddCRLContextToStore": "WINIMPM WINBOOL WINAPI CertAddCRLContextToStore (HCERTSTORE hCertStore, PCCRL_CONTEXT pCrlContext, DWORD dwAddDisposition, PCCRL_CONTEXT *ppStoreContext);", "CertSerializeCertificateStoreElement": "WINIMPM WINBOOL WINAPI CertSerializeCertificateStoreElement (PCCERT_CONTEXT pCertContext, DWORD dwFlags, BYTE *pbElement, DWORD *pcbElement);", "CertSerializeCRLStoreElement": "WINIMPM WINBOOL WINAPI CertSerializeCRLStoreElement (PCCRL_CONTEXT pCrlContext, DWORD dwFlags, BYTE *pbElement, DWORD *pcbElement);", "CertDuplicateCTLContext": "WINIMPM PCCTL_CONTEXT WINAPI CertDuplicateCTLContext (PCCTL_CONTEXT pCtlContext);", "CertCreateCTLContext": "WINIMPM PCCTL_CONTEXT WINAPI CertCreateCTLContext (DWORD dwMsgAndCertEncodingType, const BYTE *pbCtlEncoded, DWORD cbCtlEncoded);", "CertFreeCTLContext": "WINIMPM WINBOOL WINAPI CertFreeCTLContext (PCCTL_CONTEXT pCtlContext);", "CertSetCTLContextProperty": "WINIMPM WINBOOL WINAPI CertSetCTLContextProperty (PCCTL_CONTEXT pCtlContext, DWORD dwPropId, DWORD dwFlags, const void *pvData);", "CertGetCTLContextProperty": "WINIMPM WINBOOL WINAPI CertGetCTLContextProperty (PCCTL_CONTEXT pCtlContext, DWORD dwPropId, void *pvData, DWORD *pcbData);", "CertEnumCTLContextProperties": "WINIMPM DWORD WINAPI CertEnumCTLContextProperties (PCCTL_CONTEXT pCtlContext, DWORD dwPropId);", "CertEnumCTLsInStore": "WINIMPM PCCTL_CONTEXT WINAPI CertEnumCTLsInStore (HCERTSTORE hCertStore, PCCTL_CONTEXT pPrevCtlContext);", "CertFindSubjectInCTL": "WINIMPM PCTL_ENTRY WINAPI CertFindSubjectInCTL (DWORD dwEncodingType, DWORD dwSubjectType, void *pvSubject, PCCTL_CONTEXT pCtlContext, DWORD dwFlags);", "CertFindCTLInStore": "WINIMPM PCCTL_CONTEXT WINAPI CertFindCTLInStore (HCERTSTORE hCertStore, DWORD dwMsgAndCertEncodingType, DWORD dwFindFlags, DWORD dwFindType, const void *pvFindPara, PCCTL_CONTEXT pPrevCtlContext);", "CertAddEncodedCTLToStore": "WINIMPM WINBOOL WINAPI CertAddEncodedCTLToStore (HCERTSTORE hCertStore, DWORD dwMsgAndCertEncodingType, const BYTE *pbCtlEncoded, DWORD cbCtlEncoded, DWORD dwAddDisposition, PCCTL_CONTEXT *ppCtlContext);", "CertAddCTLContextToStore": "WINIMPM WINBOOL WINAPI CertAddCTLContextToStore (HCERTSTORE hCertStore, PCCTL_CONTEXT pCtlContext, DWORD dwAddDisposition, PCCTL_CONTEXT *ppStoreContext);", "CertSerializeCTLStoreElement": "WINIMPM WINBOOL WINAPI CertSerializeCTLStoreElement (PCCTL_CONTEXT pCtlContext, DWORD dwFlags, BYTE *pbElement, DWORD *pcbElement);", "CertDeleteCTLFromStore": "WINIMPM WINBOOL WINAPI CertDeleteCTLFromStore (PCCTL_CONTEXT pCtlContext);", "CertAddCertificateLinkToStore": "WINIMPM WINBOOL WINAPI CertAddCertificateLinkToStore (HCERTSTORE hCertStore, PCCERT_CONTEXT pCertContext, DWORD dwAddDisposition, PCCERT_CONTEXT *ppStoreContext);", "CertAddCRLLinkToStore": "WINIMPM WINBOOL WINAPI CertAddCRLLinkToStore (HCERTSTORE hCertStore, PCCRL_CONTEXT pCrlContext, DWORD dwAddDisposition, PCCRL_CONTEXT *ppStoreContext);", "CertAddCTLLinkToStore": "WINIMPM WINBOOL WINAPI CertAddCTLLinkToStore (HCERTSTORE hCertStore, PCCTL_CONTEXT pCtlContext, DWORD dwAddDisposition, PCCTL_CONTEXT *ppStoreContext);", "CertAddStoreToCollection": "WINIMPM WINBOOL WINAPI CertAddStoreToCollection (HCERTSTORE hCollectionStore, HCERTSTORE hSiblingStore, DWORD dwUpdateFlags, DWORD dwPriority);", "CertRemoveStoreFromCollection": "WINIMPM void WINAPI CertRemoveStoreFromCollection (HCERTSTORE hCollectionStore, HCERTSTORE hSiblingStore);", "CertControlStore": "WINIMPM WINBOOL WINAPI CertControlStore (HCERTSTORE hCertStore, DWORD dwFlags, DWORD dwCtrlType, void const *pvCtrlPara);", "CertSetStoreProperty": "WINIMPM WINBOOL WINAPI CertSetStoreProperty (HCERTSTORE hCertStore, DWORD dwPropId, DWORD dwFlags, const void *pvData);", "CertGetStoreProperty": "WINIMPM WINBOOL WINAPI CertGetStoreProperty (HCERTSTORE hCertStore, DWORD dwPropId, void *pvData, DWORD *pcbData);", "CertCreateContext": "WINIMPM const void *WINAPI CertCreateContext (DWORD dwContextType, DWORD dwEncodingType, const BYTE *pbEncoded, DWORD cbEncoded, DWORD dwFlags, PCERT_CREATE_CONTEXT_PARA pCreatePara);", "CertRegisterSystemStore": "WINIMPM WINBOOL WINAPI CertRegisterSystemStore (const void *pvSystemStore, DWORD dwFlags, PCERT_SYSTEM_STORE_INFO pStoreInfo, void *pvReserved);", "CertRegisterPhysicalStore": "WINIMPM WINBOOL WINAPI CertRegisterPhysicalStore (const void *pvSystemStore, DWORD dwFlags, LPCWSTR pwszStoreName, PCERT_PHYSICAL_STORE_INFO pStoreInfo, void *pvReserved);", "CertUnregisterSystemStore": "WINIMPM WINBOOL WINAPI CertUnregisterSystemStore (const void *pvSystemStore, DWORD dwFlags);", "CertUnregisterPhysicalStore": "WINIMPM WINBOOL WINAPI CertUnregisterPhysicalStore (const void *pvSystemStore, DWORD dwFlags, LPCWSTR pwszStoreName);", "CertEnumSystemStoreLocation": "WINIMPM WINBOOL WINAPI CertEnumSystemStoreLocation (DWORD dwFlags, void *pvArg, PFN_CERT_ENUM_SYSTEM_STORE_LOCATION pfnEnum);", "CertEnumSystemStore": "WINIMPM WINBOOL WINAPI CertEnumSystemStore (DWORD dwFlags, void *pvSystemStoreLocationPara, void *pvArg, PFN_CERT_ENUM_SYSTEM_STORE pfnEnum);", "CertEnumPhysicalStore": "WINIMPM WINBOOL WINAPI CertEnumPhysicalStore (const void *pvSystemStore, DWORD dwFlags, void *pvArg, PFN_CERT_ENUM_PHYSICAL_STORE pfnEnum);", "CertGetEnhancedKeyUsage": "WINIMPM WINBOOL WINAPI CertGetEnhancedKeyUsage (PCCERT_CONTEXT pCertContext, DWORD dwFlags, PCERT_ENHKEY_USAGE pUsage, DWORD *pcbUsage);", "CertSetEnhancedKeyUsage": "WINIMPM WINBOOL WINAPI CertSetEnhancedKeyUsage (PCCERT_CONTEXT pCertContext, PCERT_ENHKEY_USAGE pUsage);", "CertAddEnhancedKeyUsageIdentifier": "WINIMPM WINBOOL WINAPI CertAddEnhancedKeyUsageIdentifier (PCCERT_CONTEXT pCertContext, LPCSTR pszUsageIdentifier);", "CertRemoveEnhancedKeyUsageIdentifier": "WINIMPM WINBOOL WINAPI CertRemoveEnhancedKeyUsageIdentifier (PCCERT_CONTEXT pCertContext, LPCSTR pszUsageIdentifier);", "CertGetValidUsages": "WINIMPM WINBOOL WINAPI CertGetValidUsages (DWORD cCerts, PCCERT_CONTEXT *rghCerts, int *cNumOIDs, LPSTR *rghOIDs, DWORD *pcbOIDs);", "CryptMsgGetAndVerifySigner": "WINIMPM WINBOOL WINAPI CryptMsgGetAndVerifySigner (HCRYPTMSG hCryptMsg, DWORD cSignerStore, HCERTSTORE *rghSignerStore, DWORD dwFlags, PCCERT_CONTEXT *ppSigner, DWORD *pdwSignerIndex);", "CryptMsgSignCTL": "WINIMPM WINBOOL WINAPI CryptMsgSignCTL (DWORD dwMsgEncodingType, BYTE *pbCtlContent, DWORD cbCtlContent, PCMSG_SIGNED_ENCODE_INFO pSignInfo, DWORD dwFlags, BYTE *pbEncoded, DWORD *pcbEncoded);", "CryptMsgEncodeAndSignCTL": "WINIMPM WINBOOL WINAPI CryptMsgEncodeAndSignCTL (DWORD dwMsgEncodingType, PCTL_INFO pCtlInfo, PCMSG_SIGNED_ENCODE_INFO pSignInfo, DWORD dwFlags, BYTE *pbEncoded, DWORD *pcbEncoded);", "CertFindSubjectInSortedCTL": "WINIMPM WINBOOL WINAPI CertFindSubjectInSortedCTL (PCRYPT_DATA_BLOB pSubjectIdentifier, PCCTL_CONTEXT pCtlContext, DWORD dwFlags, void *pvReserved, PCRYPT_DER_BLOB pEncodedAttributes);", "CertEnumSubjectInSortedCTL": "WINIMPM WINBOOL WINAPI CertEnumSubjectInSortedCTL (PCCTL_CONTEXT pCtlContext, void **ppvNextSubject, PCRYPT_DER_BLOB pSubjectIdentifier, PCRYPT_DER_BLOB pEncodedAttributes);", "CertVerifyCTLUsage": "WINIMPM WINBOOL WINAPI CertVerifyCTLUsage (DWORD dwEncodingType, DWORD dwSubjectType, void *pvSubject, PCTL_USAGE pSubjectUsage, DWORD dwFlags, PCTL_VERIFY_USAGE_PARA pVerifyUsagePara, PCTL_VERIFY_USAGE_STATUS pVerifyUsageStatus);", "CertVerifyRevocation": "WINIMPM WINBOOL WINAPI CertVerifyRevocation (DWORD dwEncodingType, DWORD dwRevType, DWORD cContext, PVOID rgpvContext[], DWORD dwFlags, PCERT_REVOCATION_PARA pRevPara, PCERT_REVOCATION_STATUS pRevStatus);", "CertCompareIntegerBlob": "WINBOOL WINAPI CertCompareIntegerBlob (PCRYPT_INTEGER_BLOB pInt1, PCRYPT_INTEGER_BLOB pInt2);", "CertCompareCertificate": "WINIMPM WINBOOL WINAPI CertCompareCertificate (DWORD dwCertEncodingType, PCERT_INFO pCertId1, PCERT_INFO pCertId2);", "CertCompareCertificateName": "WINIMPM WINBOOL WINAPI CertCompareCertificateName (DWORD dwCertEncodingType, PCERT_NAME_BLOB pCertName1, PCERT_NAME_BLOB pCertName2);", "CertIsRDNAttrsInCertificateName": "WINIMPM WINBOOL WINAPI CertIsRDNAttrsInCertificateName (DWORD dwCertEncodingType, DWORD dwFlags, PCERT_NAME_BLOB pCertName, PCERT_RDN pRDN);", "CertComparePublicKeyInfo": "WINIMPM WINBOOL WINAPI CertComparePublicKeyInfo (DWORD dwCertEncodingType, PCERT_PUBLIC_KEY_INFO pPublicKey1, PCERT_PUBLIC_KEY_INFO pPublicKey2);", "CertGetPublicKeyLength": "WINIMPM DWORD WINAPI CertGetPublicKeyLength (DWORD dwCertEncodingType, PCERT_PUBLIC_KEY_INFO pPublicKey);", "CryptVerifyCertificateSignature": "WINIMPM WINBOOL WINAPI CryptVerifyCertificateSignature (HCRYPTPROV_LEGACY hCryptProv, DWORD dwCertEncodingType, const BYTE *pbEncoded, DWORD cbEncoded, PCERT_PUBLIC_KEY_INFO pPublicKey);", "CryptVerifyCertificateSignatureEx": "WINIMPM WINBOOL WINAPI CryptVerifyCertificateSignatureEx (HCRYPTPROV_LEGACY hCryptProv, DWORD dwCertEncodingType, DWORD dwSubjectType, void *pvSubject, DWORD dwIssuerType, void *pvIssuer, DWORD dwFlags, void *pvExtra);", "CertIsStrongHashToSign": "WINIMPM WINBOOL WINAPI CertIsStrongHashToSign (PCCERT_STRONG_SIGN_PARA pStrongSignPara, LPCWSTR pwszCNGHashAlgid, PCCERT_CONTEXT pSigningCert);", "CryptHashToBeSigned": "WINIMPM WINBOOL WINAPI CryptHashToBeSigned (HCRYPTPROV_LEGACY hCryptProv, DWORD dwCertEncodingType, const BYTE *pbEncoded, DWORD cbEncoded, BYTE *pbComputedHash, DWORD *pcbComputedHash);", "CryptHashCertificate": "WINIMPM WINBOOL WINAPI CryptHashCertificate (HCRYPTPROV_LEGACY hCryptProv, ALG_ID Algid, DWORD dwFlags, const BYTE *pbEncoded, DWORD cbEncoded, BYTE *pbComputedHash, DWORD *pcbComputedHash);", "CryptHashCertificate2": "WINIMPM WINBOOL WINAPI CryptHashCertificate2 (LPCWSTR pwszCNGHashAlgid, DWORD dwFlags, void *pvReserved, const BYTE *pbEncoded, DWORD cbEncoded, BYTE *pbComputedHash, DWORD *pcbComputedHash);", "CryptSignCertificate": "WINIMPM WINBOOL WINAPI CryptSignCertificate (HCRYPTPROV_OR_NCRYPT_KEY_HANDLE hCryptProvOrNCryptKey, DWORD dwKeySpec, DWORD dwCertEncodingType, const BYTE *pbEncodedToBeSigned, DWORD cbEncodedToBeSigned, PCRYPT_ALGORITHM_IDENTIFIER pSignatureAlgorithm, const void *pvHashAuxInfo, BYTE *pbSignature, DWORD *pcbSignature);", "CryptSignAndEncodeCertificate": "WINIMPM WINBOOL WINAPI CryptSignAndEncodeCertificate (HCRYPTPROV_OR_NCRYPT_KEY_HANDLE hCryptProvOrNCryptKey, DWORD dwKeySpec, DWORD dwCertEncodingType, LPCSTR lpszStructType, const void *pvStructInfo, PCRYPT_ALGORITHM_IDENTIFIER pSignatureAlgorithm, const void *pvHashAuxInfo, BYTE *pbEncoded, DWORD *pcbEncoded);", "CertVerifyTimeValidity": "WINIMPM LONG WINAPI CertVerifyTimeValidity (LPFILETIME pTimeToVerify, PCERT_INFO pCertInfo);", "CertVerifyCRLTimeValidity": "WINIMPM LONG WINAPI CertVerifyCRLTimeValidity (LPFILETIME pTimeToVerify, PCRL_INFO pCrlInfo);", "CertVerifyValidityNesting": "WINIMPM WINBOOL WINAPI CertVerifyValidityNesting (PCERT_INFO pSubjectInfo, PCERT_INFO pIssuerInfo);", "CertVerifyCRLRevocation": "WINIMPM WINBOOL WINAPI CertVerifyCRLRevocation (DWORD dwCertEncodingType, PCERT_INFO pCertId, DWORD cCrlInfo, PCRL_INFO rgpCrlInfo[]);", "CertAlgIdToOID": "WINIMPM LPCSTR WINAPI CertAlgIdToOID (DWORD dwAlgId);", "CertOIDToAlgId": "WINIMPM DWORD WINAPI CertOIDToAlgId (LPCSTR pszObjId);", "CertFindExtension": "WINIMPM PCERT_EXTENSION WINAPI CertFindExtension (LPCSTR pszObjId, DWORD cExtensions, CERT_EXTENSION rgExtensions[]);", "CertFindAttribute": "WINIMPM PCRYPT_ATTRIBUTE WINAPI CertFindAttribute (LPCSTR pszObjId, DWORD cAttr, CRYPT_ATTRIBUTE rgAttr[]);", "CertFindRDNAttr": "WINIMPM PCERT_RDN_ATTR WINAPI CertFindRDNAttr (LPCSTR pszObjId, PCERT_NAME_INFO pName);", "CertGetIntendedKeyUsage": "WINIMPM WINBOOL WINAPI CertGetIntendedKeyUsage (DWORD dwCertEncodingType, PCERT_INFO pCertInfo, BYTE *pbKeyUsage, DWORD cbKeyUsage);", "CryptInstallDefaultContext": "WINIMPM WINBOOL WINAPI CryptInstallDefaultContext (HCRYPTPROV hCryptProv, DWORD dwDefaultType, const void *pvDefaultPara, DWORD dwFlags, void *pvReserved, HCRYPTDEFAULTCONTEXT *phDefaultContext);", "CryptUninstallDefaultContext": "WINIMPM WINBOOL WINAPI CryptUninstallDefaultContext (HCRYPTDEFAULTCONTEXT hDefaultContext, DWORD dwFlags, void *pvReserved);", "CryptExportPublicKeyInfo": "WINIMPM WINBOOL WINAPI CryptExportPublicKeyInfo (HCRYPTPROV_OR_NCRYPT_KEY_HANDLE hCryptProvOrNCryptKey, DWORD dwKeySpec, DWORD dwCertEncodingType, PCERT_PUBLIC_KEY_INFO pInfo, DWORD *pcbInfo);", "CryptExportPublicKeyInfoEx": "WINIMPM WINBOOL WINAPI CryptExportPublicKeyInfoEx (HCRYPTPROV_OR_NCRYPT_KEY_HANDLE hCryptProvOrNCryptKey, DWORD dwKeySpec, DWORD dwCertEncodingType, LPSTR pszPublicKeyObjId, DWORD dwFlags, void *pvAuxInfo, PCERT_PUBLIC_KEY_INFO pInfo, DWORD *pcbInfo);", "CryptExportPublicKeyInfoFromBCryptKeyHandle": "WINIMPM WINBOOL WINAPI CryptExportPublicKeyInfoFromBCryptKeyHandle (BCRYPT_KEY_HANDLE hBCryptKey, DWORD dwCertEncodingType, LPSTR pszPublicKeyObjId, DWORD dwFlags, void *pvAuxInfo, PCERT_PUBLIC_KEY_INFO pInfo, DWORD *pcbInfo);", "CryptImportPublicKeyInfo": "WINIMPM WINBOOL WINAPI CryptImportPublicKeyInfo (HCRYPTPROV hCryptProv, DWORD dwCertEncodingType, PCERT_PUBLIC_KEY_INFO pInfo, HCRYPTKEY *phKey);", "CryptImportPublicKeyInfoEx": "WINIMPM WINBOOL WINAPI CryptImportPublicKeyInfoEx (HCRYPTPROV hCryptProv, DWORD dwCertEncodingType, PCERT_PUBLIC_KEY_INFO pInfo, ALG_ID aiKeyAlg, DWORD dwFlags, void *pvAuxInfo, HCRYPTKEY *phKey);", "CryptImportPublicKeyInfoEx2": "WINIMPM WINBOOL WINAPI CryptImportPublicKeyInfoEx2 (DWORD dwCertEncodingType, PCERT_PUBLIC_KEY_INFO pInfo, DWORD dwFlags, void *pvAuxInfo, BCRYPT_KEY_HANDLE *phKey);", "CryptAcquireCertificatePrivateKey": "WINIMPM WINBOOL WINAPI CryptAcquireCertificatePrivateKey (PCCERT_CONTEXT pCert, DWORD dwFlags, void *pvParameters, HCRYPTPROV_OR_NCRYPT_KEY_HANDLE *phCryptProvOrNCryptKey, DWORD *pdwKeySpec, WINBOOL *pfCallerFreeProvOrNCryptKey);", "CryptFindCertificateKeyProvInfo": "WINIMPM WINBOOL WINAPI CryptFindCertificateKeyProvInfo (PCCERT_CONTEXT pCert, DWORD dwFlags, void *pvReserved);", "CryptImportPKCS8": "WINIMPM WINBOOL WINAPI CryptImportPKCS8 (CRYPT_PKCS8_IMPORT_PARAMS sPrivateKeyAndParams, DWORD dwFlags, HCRYPTPROV *phCryptProv, void *pvAuxInfo);", "CryptExportPKCS8": "WINIMPM WINBOOL WINAPI CryptExportPKCS8 (HCRYPTPROV hCryptProv, DWORD dwKeySpec, LPSTR pszPrivateKeyObjId, DWORD dwFlags, void *pvAuxInfo, BYTE *pbPrivateKeyBlob, DWORD *pcbPrivateKeyBlob);", "CryptExportPKCS8Ex": "WINIMPM WINBOOL WINAPI CryptExportPKCS8Ex (CRYPT_PKCS8_EXPORT_PARAMS *psExportParams, DWORD dwFlags, void *pvAuxInfo, BYTE *pbPrivateKeyBlob, DWORD *pcbPrivateKeyBlob);", "CryptHashPublicKeyInfo": "WINIMPM WINBOOL WINAPI CryptHashPublicKeyInfo (HCRYPTPROV_LEGACY hCryptProv, ALG_ID Algid, DWORD dwFlags, DWORD dwCertEncodingType, PCERT_PUBLIC_KEY_INFO pInfo, BYTE *pbComputedHash, DWORD *pcbComputedHash);", "CertRDNValueToStrA": "WINIMPM DWORD WINAPI CertRDNValueToStrA (DWORD dwValueType, PCERT_RDN_VALUE_BLOB pValue, LPSTR psz, DWORD csz);", "CertRDNValueToStrW": "WINIMPM DWORD WINAPI CertRDNValueToStrW (DWORD dwValueType, PCERT_RDN_VALUE_BLOB pValue, LPWSTR psz, DWORD csz);", "CertNameToStrA": "WINIMPM DWORD WINAPI CertNameToStrA (DWORD dwCertEncodingType, PCERT_NAME_BLOB pName, DWORD dwStrType, LPSTR psz, DWORD csz);", "CertNameToStrW": "WINIMPM DWORD WINAPI CertNameToStrW (DWORD dwCertEncodingType, PCERT_NAME_BLOB pName, DWORD dwStrType, LPWSTR psz, DWORD csz);", "CertStrToNameA": "WINIMPM WINBOOL WINAPI CertStrToNameA (DWORD dwCertEncodingType, LPCSTR pszX500, DWORD dwStrType, void *pvReserved, BYTE *pbEncoded, DWORD *pcbEncoded, LPCSTR *ppszError);", "CertStrToNameW": "WINIMPM WINBOOL WINAPI CertStrToNameW (DWORD dwCertEncodingType, LPCWSTR pszX500, DWORD dwStrType, void *pvReserved, BYTE *pbEncoded, DWORD *pcbEncoded, LPCWSTR *ppszError);", "CertGetNameStringA": "WINIMPM DWORD WINAPI CertGetNameStringA (PCCERT_CONTEXT pCertContext, DWORD dwType, DWORD dwFlags, void *pvTypePara, LPSTR pszNameString, DWORD cchNameString);", "CertGetNameStringW": "WINIMPM DWORD WINAPI CertGetNameStringW (PCCERT_CONTEXT pCertContext, DWORD dwType, DWORD dwFlags, void *pvTypePara, LPWSTR pszNameString, DWORD cchNameString);", "CryptSignMessage": "WINIMPM WINBOOL WINAPI CryptSignMessage (PCRYPT_SIGN_MESSAGE_PARA pSignPara, WINBOOL fDetachedSignature, DWORD cToBeSigned, const BYTE *rgpbToBeSigned[], DWORD rgcbToBeSigned[], BYTE *pbSignedBlob, DWORD *pcbSignedBlob);", "CryptVerifyMessageSignature": "WINIMPM WINBOOL WINAPI CryptVerifyMessageSignature (PCRYPT_VERIFY_MESSAGE_PARA pVerifyPara, DWORD dwSignerIndex, const BYTE *pbSignedBlob, DWORD cbSignedBlob, BYTE *pbDecoded, DWORD *pcbDecoded, PCCERT_CONTEXT *ppSignerCert);", "CryptGetMessageSignerCount": "WINIMPM LONG WINAPI CryptGetMessageSignerCount (DWORD dwMsgEncodingType, const BYTE *pbSignedBlob, DWORD cbSignedBlob);", "CryptGetMessageCertificates": "WINIMPM HCERTSTORE WINAPI CryptGetMessageCertificates (DWORD dwMsgAndCertEncodingType, HCRYPTPROV_LEGACY hCryptProv, DWORD dwFlags, const BYTE *pbSignedBlob, DWORD cbSignedBlob);", "CryptVerifyDetachedMessageSignature": "WINIMPM WINBOOL WINAPI CryptVerifyDetachedMessageSignature (PCRYPT_VERIFY_MESSAGE_PARA pVerifyPara, DWORD dwSignerIndex, const BYTE *pbDetachedSignBlob, DWORD cbDetachedSignBlob, DWORD cToBeSigned, const BYTE *rgpbToBeSigned[], DWORD rgcbToBeSigned[], PCCERT_CONTEXT *ppSignerCert);", "CryptEncryptMessage": "WINIMPM WINBOOL WINAPI CryptEncryptMessage (PCRYPT_ENCRYPT_MESSAGE_PARA pEncryptPara, DWORD cRecipientCert, PCCERT_CONTEXT rgpRecipientCert[], const BYTE *pbToBeEncrypted, DWORD cbToBeEncrypted, BYTE *pbEncryptedBlob, DWORD *pcbEncryptedBlob);", "CryptDecryptMessage": "WINIMPM WINBOOL WINAPI CryptDecryptMessage (PCRYPT_DECRYPT_MESSAGE_PARA pDecryptPara, const BYTE *pbEncryptedBlob, DWORD cbEncryptedBlob, BYTE *pbDecrypted, DWORD *pcbDecrypted, PCCERT_CONTEXT *ppXchgCert);", "CryptSignAndEncryptMessage": "WINIMPM WINBOOL WINAPI CryptSignAndEncryptMessage (PCRYPT_SIGN_MESSAGE_PARA pSignPara, PCRYPT_ENCRYPT_MESSAGE_PARA pEncryptPara, DWORD cRecipientCert, PCCERT_CONTEXT rgpRecipientCert[], const BYTE *pbToBeSignedAndEncrypted, DWORD cbToBeSignedAndEncrypted, BYTE *pbSignedAndEncryptedBlob, DWORD *pcbSignedAndEncryptedBlob);", "CryptDecryptAndVerifyMessageSignature": "WINIMPM WINBOOL WINAPI CryptDecryptAndVerifyMessageSignature (PCRYPT_DECRYPT_MESSAGE_PARA pDecryptPara, PCRYPT_VERIFY_MESSAGE_PARA pVerifyPara, DWORD dwSignerIndex, const BYTE *pbEncryptedBlob, DWORD cbEncryptedBlob, BYTE *pbDecrypted, DWORD *pcbDecrypted, PCCERT_CONTEXT *ppXchgCert, PCCERT_CONTEXT *ppSignerCert);", "CryptDecodeMessage": "WINIMPM WINBOOL WINAPI CryptDecodeMessage (DWORD dwMsgTypeFlags, PCRYPT_DECRYPT_MESSAGE_PARA pDecryptPara, PCRYPT_VERIFY_MESSAGE_PARA pVerifyPara, DWORD dwSignerIndex, const BYTE *pbEncodedBlob, DWORD cbEncodedBlob, DWORD dwPrevInnerContentType, DWORD *pdwMsgType, DWORD *pdwInnerContentType, BYTE *pbDecoded, DWORD *pcbDecoded, PCCERT_CONTEXT *ppXchgCert, PCCERT_CONTEXT *ppSignerCert);", "CryptHashMessage": "WINIMPM WINBOOL WINAPI CryptHashMessage (PCRYPT_HASH_MESSAGE_PARA pHashPara, WINBOOL fDetachedHash, DWORD cToBeHashed, const BYTE *rgpbToBeHashed[], DWORD rgcbToBeHashed[], BYTE *pbHashedBlob, DWORD *pcbHashedBlob, BYTE *pbComputedHash, DWORD *pcbComputedHash);", "CryptVerifyMessageHash": "WINIMPM WINBOOL WINAPI CryptVerifyMessageHash (PCRYPT_HASH_MESSAGE_PARA pHashPara, BYTE *pbHashedBlob, DWORD cbHashedBlob, BYTE *pbToBeHashed, DWORD *pcbToBeHashed, BYTE *pbComputedHash, DWORD *pcbComputedHash);", "CryptVerifyDetachedMessageHash": "WINIMPM WINBOOL WINAPI CryptVerifyDetachedMessageHash (PCRYPT_HASH_MESSAGE_PARA pHashPara, BYTE *pbDetachedHashBlob, DWORD cbDetachedHashBlob, DWORD cToBeHashed, const BYTE *rgpbToBeHashed[], DWORD rgcbToBeHashed[], BYTE *pbComputedHash, DWORD *pcbComputedHash);", "CryptSignMessageWithKey": "WINIMPM WINBOOL WINAPI CryptSignMessageWithKey (PCRYPT_KEY_SIGN_MESSAGE_PARA pSignPara, const BYTE *pbToBeSigned, DWORD cbToBeSigned, BYTE *pbSignedBlob, DWORD *pcbSignedBlob);", "CryptVerifyMessageSignatureWithKey": "WINIMPM WINBOOL WINAPI CryptVerifyMessageSignatureWithKey (PCRYPT_KEY_VERIFY_MESSAGE_PARA pVerifyPara, PCERT_PUBLIC_KEY_INFO pPublicKeyInfo, const BYTE *pbSignedBlob, DWORD cbSignedBlob, BYTE *pbDecoded, DWORD *pcbDecoded);", "CertOpenSystemStoreA": "WINIMPM HCERTSTORE WINAPI CertOpenSystemStoreA (HCRYPTPROV_LEGACY hProv, LPCSTR szSubsystemProtocol);", "CertOpenSystemStoreW": "WINIMPM HCERTSTORE WINAPI CertOpenSystemStoreW (HCRYPTPROV_LEGACY hProv, LPCWSTR szSubsystemProtocol);", "CertAddEncodedCertificateToSystemStoreA": "WINIMPM WINBOOL WINAPI CertAddEncodedCertificateToSystemStoreA (LPCSTR szCertStoreName, const BYTE *pbCertEncoded, DWORD cbCertEncoded);", "CertAddEncodedCertificateToSystemStoreW": "WINIMPM WINBOOL WINAPI CertAddEncodedCertificateToSystemStoreW (LPCWSTR szCertStoreName, const BYTE *pbCertEncoded, DWORD cbCertEncoded);", "FindCertsByIssuer": "HRESULT WINAPI FindCertsByIssuer (PCERT_CHAIN pCertChains, DWORD *pcbCertChains, DWORD *pcCertChains, BYTE *pbEncodedIssuerName, DWORD cbEncodedIssuerName, LPCWSTR pwszPurpose, DWORD dwKeySpec);", "CryptQueryObject": "WINIMPM WINBOOL WINAPI CryptQueryObject (DWORD dwObjectType, const void *pvObject, DWORD dwExpectedContentTypeFlags, DWORD dwExpectedFormatTypeFlags, DWORD dwFlags, DWORD *pdwMsgAndCertEncodingType, DWORD *pdwContentType, DWORD *pdwFormatType, HCERTSTORE *phCertStore, HCRYPTMSG *phMsg, const void **ppvContext);", "CryptMemAlloc": "WINIMPM LPVOID WINAPI CryptMemAlloc (ULONG cbSize);", "CryptMemRealloc": "WINIMPM LPVOID WINAPI CryptMemRealloc (LPVOID pv, ULONG cbSize);", "CryptMemFree": "WINIMPM VOID WINAPI CryptMemFree (LPVOID pv);", "CryptCreateAsyncHandle": "WINIMPM WINBOOL WINAPI CryptCreateAsyncHandle (DWORD dwFlags, PHCRYPTASYNC phAsync);", "CryptSetAsyncParam": "WINIMPM WINBOOL WINAPI CryptSetAsyncParam (HCRYPTASYNC hAsync, LPSTR pszParamOid, LPVOID pvParam, PFN_CRYPT_ASYNC_PARAM_FREE_FUNC pfnFree);", "CryptGetAsyncParam": "WINIMPM WINBOOL WINAPI CryptGetAsyncParam (HCRYPTASYNC hAsync, LPSTR pszParamOid, LPVOID *ppvParam, PFN_CRYPT_ASYNC_PARAM_FREE_FUNC *ppfnFree);", "CryptCloseAsyncHandle": "WINIMPM WINBOOL WINAPI CryptCloseAsyncHandle (HCRYPTASYNC hAsync);", "CryptRetrieveObjectByUrlA": "WINIMPM WINBOOL WINAPI CryptRetrieveObjectByUrlA (LPCSTR pszUrl, LPCSTR pszObjectOid, DWORD dwRetrievalFlags, DWORD dwTimeout, LPVOID *ppvObject, HCRYPTASYNC hAsyncRetrieve, PCRYPT_CREDENTIALS pCredentials, LPVOID pvVerify, PCRYPT_RETRIEVE_AUX_INFO pAuxInfo);", "CryptRetrieveObjectByUrlW": "WINIMPM WINBOOL WINAPI CryptRetrieveObjectByUrlW (LPCWSTR pszUrl, LPCSTR pszObjectOid, DWORD dwRetrievalFlags, DWORD dwTimeout, LPVOID *ppvObject, HCRYPTASYNC hAsyncRetrieve, PCRYPT_CREDENTIALS pCredentials, LPVOID pvVerify, PCRYPT_RETRIEVE_AUX_INFO pAuxInfo);", "CryptInstallCancelRetrieval": "WINIMPM WINBOOL WINAPI CryptInstallCancelRetrieval (PFN_CRYPT_CANCEL_RETRIEVAL pfnCancel, const void *pvArg, DWORD dwFlags, void *pvReserved);", "CryptUninstallCancelRetrieval": "WINIMPM WINBOOL WINAPI CryptUninstallCancelRetrieval (DWORD dwFlags, void *pvReserved);", "CryptCancelAsyncRetrieval": "WINIMPM WINBOOL WINAPI CryptCancelAsyncRetrieval (HCRYPTASYNC hAsyncRetrieval);", "CryptGetObjectUrl": "WINIMPM WINBOOL WINAPI CryptGetObjectUrl (LPCSTR pszUrlOid, LPVOID pvPara, DWORD dwFlags, PCRYPT_URL_ARRAY pUrlArray, DWORD *pcbUrlArray, PCRYPT_URL_INFO pUrlInfo, DWORD *pcbUrlInfo, LPVOID pvReserved);", "CryptGetTimeValidObject": "WINIMPM WINBOOL WINAPI CryptGetTimeValidObject (LPCSTR pszTimeValidOid, LPVOID pvPara, PCCERT_CONTEXT pIssuer, LPFILETIME pftValidFor, DWORD dwFlags, DWORD dwTimeout, LPVOID *ppvObject, PCRYPT_CREDENTIALS pCredentials, PCRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO pExtraInfo);", "CryptFlushTimeValidObject": "WINIMPM WINBOOL WINAPI CryptFlushTimeValidObject (LPCSTR pszFlushTimeValidOid, LPVOID pvPara, PCCERT_CONTEXT pIssuer, DWORD dwFlags, LPVOID pvReserved);", "CertCreateSelfSignCertificate": "WINIMPM PCCERT_CONTEXT WINAPI CertCreateSelfSignCertificate (HCRYPTPROV_OR_NCRYPT_KEY_HANDLE hCryptProvOrNCryptKey, PCERT_NAME_BLOB pSubjectIssuerBlob, DWORD dwFlags, PCRYPT_KEY_PROV_INFO pKeyProvInfo, PCRYPT_ALGORITHM_IDENTIFIER pSignatureAlgorithm, PSYSTEMTIME pStartTime, PSYSTEMTIME pEndTime, PCERT_EXTENSIONS pExtensions);", "CryptGetKeyIdentifierProperty": "WINIMPM WINBOOL WINAPI CryptGetKeyIdentifierProperty (const CRYPT_HASH_BLOB *pKeyIdentifier, DWORD dwPropId, DWORD dwFlags, LPCWSTR pwszComputerName, void *pvReserved, void *pvData, DWORD *pcbData);", "CryptSetKeyIdentifierProperty": "WINIMPM WINBOOL WINAPI CryptSetKeyIdentifierProperty (const CRYPT_HASH_BLOB *pKeyIdentifier, DWORD dwPropId, DWORD dwFlags, LPCWSTR pwszComputerName, void *pvReserved, const void *pvData);", "CryptEnumKeyIdentifierProperties": "WINIMPM WINBOOL WINAPI CryptEnumKeyIdentifierProperties (const CRYPT_HASH_BLOB *pKeyIdentifier, DWORD dwPropId, DWORD dwFlags, LPCWSTR pwszComputerName, void *pvReserved, void *pvArg, PFN_CRYPT_ENUM_KEYID_PROP pfnEnum);", "CryptCreateKeyIdentifierFromCSP": "WINIMPM WINBOOL WINAPI CryptCreateKeyIdentifierFromCSP (DWORD dwCertEncodingType, LPCSTR pszPubKeyOID, const PUBLICKEYSTRUC *pPubKeyStruc, DWORD cbPubKeyStruc, DWORD dwFlags, void *pvReserved, BYTE *pbHash, DWORD *pcbHash);", "CertCreateCertificateChainEngine": "WINIMPM WINBOOL WINAPI CertCreateCertificateChainEngine (PCERT_CHAIN_ENGINE_CONFIG pConfig, HCERTCHAINENGINE *phChainEngine);", "CertFreeCertificateChainEngine": "WINIMPM VOID WINAPI CertFreeCertificateChainEngine (HCERTCHAINENGINE hChainEngine);", "CertResyncCertificateChainEngine": "WINIMPM WINBOOL WINAPI CertResyncCertificateChainEngine (HCERTCHAINENGINE hChainEngine);", "CertGetCertificateChain": "WINIMPM WINBOOL WINAPI CertGetCertificateChain (HCERTCHAINENGINE hChainEngine, PCCERT_CONTEXT pCertContext, LPFILETIME pTime, HCERTSTORE hAdditionalStore, PCERT_CHAIN_PARA pChainPara, DWORD dwFlags, LPVOID pvReserved, PCCERT_CHAIN_CONTEXT *ppChainContext);", "CertFreeCertificateChain": "WINIMPM VOID WINAPI CertFreeCertificateChain (PCCERT_CHAIN_CONTEXT pChainContext);", "CertDuplicateCertificateChain": "WINIMPM PCCERT_CHAIN_CONTEXT WINAPI CertDuplicateCertificateChain (PCCERT_CHAIN_CONTEXT pChainContext);", "CertFindChainInStore": "WINIMPM PCCERT_CHAIN_CONTEXT WINAPI CertFindChainInStore (HCERTSTORE hCertStore, DWORD dwCertEncodingType, DWORD dwFindFlags, DWORD dwFindType, const void *pvFindPara, PCCERT_CHAIN_CONTEXT pPrevChainContext);", "CertVerifyCertificateChainPolicy": "WINIMPM WINBOOL WINAPI CertVerifyCertificateChainPolicy (LPCSTR pszPolicyOID, PCCERT_CHAIN_CONTEXT pChainContext, PCERT_CHAIN_POLICY_PARA pPolicyPara, PCERT_CHAIN_POLICY_STATUS pPolicyStatus);", "CryptStringToBinaryA": "WINIMPM WINBOOL WINAPI CryptStringToBinaryA (LPCSTR pszString, DWORD cchString, DWORD dwFlags, BYTE *pbBinary, DWORD *pcbBinary, DWORD *pdwSkip, DWORD *pdwFlags);", "CryptStringToBinaryW": "WINIMPM WINBOOL WINAPI CryptStringToBinaryW (LPCWSTR pszString, DWORD cchString, DWORD dwFlags, BYTE *pbBinary, DWORD *pcbBinary, DWORD *pdwSkip, DWORD *pdwFlags);", "CryptBinaryToStringA": "WINIMPM WINBOOL WINAPI CryptBinaryToStringA (CONST BYTE *pbBinary, DWORD cbBinary, DWORD dwFlags, LPSTR pszString, DWORD *pcchString);", "CryptBinaryToStringW": "WINIMPM WINBOOL WINAPI CryptBinaryToStringW (CONST BYTE *pbBinary, DWORD cbBinary, DWORD dwFlags, LPWSTR pszString, DWORD *pcchString);", "PFXImportCertStore": "WINIMPM HCERTSTORE WINAPI PFXImportCertStore (CRYPT_DATA_BLOB *pPFX, LPCWSTR szPassword, DWORD dwFlags);", "PFXIsPFXBlob": "WINIMPM WINBOOL WINAPI PFXIsPFXBlob (CRYPT_DATA_BLOB *pPFX);", "PFXVerifyPassword": "WINIMPM WINBOOL WINAPI PFXVerifyPassword (CRYPT_DATA_BLOB *pPFX, LPCWSTR szPassword, DWORD dwFlags);", "PFXExportCertStoreEx": "WINIMPM WINBOOL WINAPI PFXExportCertStoreEx (HCERTSTORE hStore, CRYPT_DATA_BLOB *pPFX, LPCWSTR szPassword, void *pvPara, DWORD dwFlags);", "PFXExportCertStore": "WINIMPM WINBOOL WINAPI PFXExportCertStore (HCERTSTORE hStore, CRYPT_DATA_BLOB *pPFX, LPCWSTR szPassword, DWORD dwFlags);", "CertOpenServerOcspResponse": "WINIMPM HCERT_SERVER_OCSP_RESPONSE WINAPI CertOpenServerOcspResponse (PCCERT_CHAIN_CONTEXT pChainContext, DWORD dwFlags, LPVOID pvReserved);", "CertAddRefServerOcspResponse": "WINIMPM VOID WINAPI CertAddRefServerOcspResponse (HCERT_SERVER_OCSP_RESPONSE hServerOcspResponse);", "CertCloseServerOcspResponse": "WINIMPM VOID WINAPI CertCloseServerOcspResponse (HCERT_SERVER_OCSP_RESPONSE hServerOcspResponse, DWORD dwFlags);", "CertGetServerOcspResponseContext": "WINIMPM PCCERT_SERVER_OCSP_RESPONSE_CONTEXT WINAPI CertGetServerOcspResponseContext (HCERT_SERVER_OCSP_RESPONSE hServerOcspResponse, DWORD dwFlags, LPVOID pvReserved);", "CertAddRefServerOcspResponseContext": "WINIMPM VOID WINAPI CertAddRefServerOcspResponseContext (PCCERT_SERVER_OCSP_RESPONSE_CONTEXT pServerOcspResponseContext);", "CertFreeServerOcspResponseContext": "WINIMPM VOID WINAPI CertFreeServerOcspResponseContext (PCCERT_SERVER_OCSP_RESPONSE_CONTEXT pServerOcspResponseContext);", "CertRetrieveLogoOrBiometricInfo": "WINIMPM WINBOOL WINAPI CertRetrieveLogoOrBiometricInfo (PCCERT_CONTEXT pCertContext, LPCSTR lpszLogoOrBiometricType, DWORD dwRetrievalFlags, DWORD dwTimeout, DWORD dwFlags, void *pvReserved, BYTE **ppbData, DWORD *pcbData, LPWSTR *ppwszMimeType);", "CertSelectCertificateChains": "WINIMPM WINBOOL WINAPI CertSelectCertificateChains (LPCGUID pSelectionContext, DWORD dwFlags, PCCERT_SELECT_CHAIN_PARA pChainParameters, DWORD cCriteria, PCCERT_SELECT_CRITERIA rgpCriteria, HCERTSTORE hStore, PDWORD pcSelection, PCCERT_CHAIN_CONTEXT **pprgpSelection);", "CertFreeCertificateChainList": "WINIMPM VOID WINAPI CertFreeCertificateChainList (PCCERT_CHAIN_CONTEXT *prgpSelection);", "CryptRetrieveTimeStamp": "WINBOOL WINAPI CryptRetrieveTimeStamp (LPCWSTR wszUrl, DWORD dwRetrievalFlags, DWORD dwTimeout, LPCSTR pszHashId, const CRYPT_TIMESTAMP_PARA *pPara, const BYTE *pbData, DWORD cbData, PCRYPT_TIMESTAMP_CONTEXT *ppTsContext, PCCERT_CONTEXT *ppTsSigner, HCERTSTORE *phStore);", "CryptVerifyTimeStampSignature": "WINBOOL WINAPI CryptVerifyTimeStampSignature (const BYTE *pbTSContentInfo, DWORD cbTSContentInfo, const BYTE *pbData, DWORD cbData, HCERTSTORE hAdditionalStore, PCRYPT_TIMESTAMP_CONTEXT *ppTsContext, PCCERT_CONTEXT *ppTsSigner, HCERTSTORE *phStore);", "CertIsWeakHash": "WINIMPM WINBOOL WINAPI CertIsWeakHash(DWORD dwHashUseType, LPCWSTR pwszCNGHashAlgid, DWORD dwChainFlags, PCCERT_CHAIN_CONTEXT pSignerChainContext, LPFILETIME pTimeStamp, LPCWSTR pwszFileName);", "BluetoothGATTGetServices": "HRESULT WINAPI BluetoothGATTGetServices(HANDLE hDevice, USHORT ServicesBufferCount, PBTH_LE_GATT_SERVICE ServicesBuffer, USHORT *ServicesBufferActual, ULONG Flags);", "BluetoothGATTGetIncludedServices": "HRESULT WINAPI BluetoothGATTGetIncludedServices(HANDLE hDevice, PBTH_LE_GATT_SERVICE ParentService, USHORT IncludedServicesBufferCount, PBTH_LE_GATT_SERVICE IncludedServicesBuffer, USHORT *IncludedServicesBufferActual, ULONG Flags);", "BluetoothGATTGetCharacteristics": "HRESULT WINAPI BluetoothGATTGetCharacteristics(HANDLE hDevice, PBTH_LE_GATT_SERVICE Service, USHORT CharacteristicsBufferCount, PBTH_LE_GATT_CHARACTERISTIC CharacteristicsBuffer, USHORT *CharacteristicsBufferActual, ULONG Flags);", "BluetoothGATTGetDescriptors": "HRESULT WINAPI BluetoothGATTGetDescriptors(HANDLE hDevice, PBTH_LE_GATT_CHARACTERISTIC Characteristic, USHORT DescriptorsBufferCount, PBTH_LE_GATT_DESCRIPTOR DescriptorsBuffer, USHORT *DescriptorsBufferActual, ULONG Flags);", "BluetoothGATTGetCharacteristicValue": "HRESULT WINAPI BluetoothGATTGetCharacteristicValue(HANDLE hDevice, PBTH_LE_GATT_CHARACTERISTIC Characteristic, ULONG CharacteristicValueDataSize, PBTH_LE_GATT_CHARACTERISTIC_VALUE CharacteristicValue, USHORT *CharacteristicValueSizeRequired, ULONG Flags);", "BluetoothGATTGetDescriptorValue": "HRESULT WINAPI BluetoothGATTGetDescriptorValue(HANDLE hDevice, PBTH_LE_GATT_DESCRIPTOR Descriptor, ULONG DescriptorValueDataSize, PBTH_LE_GATT_DESCRIPTOR_VALUE DescriptorValue, USHORT *DescriptorValueSizeRequired, ULONG Flags);", "BluetoothGATTBeginReliableWrite": "HRESULT WINAPI BluetoothGATTBeginReliableWrite(HANDLE hDevice, PBTH_LE_GATT_RELIABLE_WRITE_CONTEXT ReliableWriteContext, ULONG Flags);", "BluetoothGATTSetCharacteristicValue": "HRESULT WINAPI BluetoothGATTSetCharacteristicValue(HANDLE hDevice, PBTH_LE_GATT_CHARACTERISTIC Characteristic, PBTH_LE_GATT_CHARACTERISTIC_VALUE CharacteristicValue, BTH_LE_GATT_RELIABLE_WRITE_CONTEXT ReliableWriteContext, ULONG Flags);", "BluetoothGATTEndReliableWrite": "HRESULT WINAPI BluetoothGATTEndReliableWrite(HANDLE hDevice, BTH_LE_GATT_RELIABLE_WRITE_CONTEXT ReliableWriteContext, ULONG Flags);", "BluetoothGATTAbortReliableWrite": "HRESULT WINAPI BluetoothGATTAbortReliableWrite(HANDLE hDevice, BTH_LE_GATT_RELIABLE_WRITE_CONTEXT ReliableWriteContext, ULONG Flags);", "BluetoothGATTSetDescriptorValue": "HRESULT WINAPI BluetoothGATTSetDescriptorValue(HANDLE hDevice, PBTH_LE_GATT_DESCRIPTOR Descriptor, PBTH_LE_GATT_DESCRIPTOR_VALUE DescriptorValue, ULONG Flags);", "BluetoothGATTRegisterEvent": "HRESULT WINAPI BluetoothGATTRegisterEvent(HANDLE hService, BTH_LE_GATT_EVENT_TYPE EventType, PVOID EventParameterIn, PFNBLUETOOTH_GATT_EVENT_CALLBACK Callback, PVOID CallbackContext, BLUETOOTH_GATT_EVENT_HANDLE *pEventHandle, ULONG Flags);", "BluetoothGATTUnregisterEvent": "HRESULT WINAPI BluetoothGATTUnregisterEvent(BLUETOOTH_GATT_EVENT_HANDLE EventHandle, ULONG Flags);", "WSDCreateHttpAddress": "HRESULT WINAPI WSDCreateHttpAddress(IWSDHttpAddress **ppAdress);", "WSDCreateHttpMessageParameters": "HRESULT WINAPI WSDCreateHttpMessageParameters(IWSDHttpMessageParameters **ppTxParams);", "DdCreateDirectDrawObject": "WINBOOL WINAPI DdCreateDirectDrawObject(LPDDRAWI_DIRECTDRAW_GBL pDirectDrawGlobal,HDC hdc);", "DdQueryDirectDrawObject": "WINBOOL WINAPI DdQueryDirectDrawObject(LPDDRAWI_DIRECTDRAW_GBL pDirectDrawGlobal,LPDDHALINFO pHalInfo,LPDDHAL_DDCALLBACKS pDDCallbacks,LPDDHAL_DDSURFACECALLBACKS pDDSurfaceCallbacks,LPDDHAL_DDPALETTECALLBACKS pDDPaletteCallbacks,LPD3DHAL_CALLBACKS pD3dCallbacks,LPD3DHAL_GLOBALDRIVERDATA pD3dDriverData,LPDDHAL_DDEXEBUFCALLBACKS pD3dBufferCallbacks,LPDDSURFACEDESC pD3dTextureFormats,LPDWORD pdwFourCC,LPVIDMEM pvmList);", "DdDeleteDirectDrawObject": "WINBOOL WINAPI DdDeleteDirectDrawObject(LPDDRAWI_DIRECTDRAW_GBL pDirectDrawGlobal);", "DdCreateSurfaceObject": "WINBOOL WINAPI DdCreateSurfaceObject(LPDDRAWI_DDRAWSURFACE_LCL pSurfaceLocal,WINBOOL bPrimarySurface);", "DdDeleteSurfaceObject": "WINBOOL WINAPI DdDeleteSurfaceObject(LPDDRAWI_DDRAWSURFACE_LCL pSurfaceLocal);", "DdResetVisrgn": "WINBOOL WINAPI DdResetVisrgn(LPDDRAWI_DDRAWSURFACE_LCL pSurfaceLocal,HWND hWnd);", "DdGetDC": "HDC WINAPI DdGetDC(LPDDRAWI_DDRAWSURFACE_LCL pSurfaceLocal,LPPALETTEENTRY pColorTable);", "DdReleaseDC": "WINBOOL WINAPI DdReleaseDC(LPDDRAWI_DDRAWSURFACE_LCL pSurfaceLocal);", "DdCreateDIBSection": "HBITMAP WINAPI DdCreateDIBSection(HDC hdc,CONST BITMAPINFO *pbmi,UINT iUsage,VOID **ppvBits,HANDLE hSectionApp,DWORD dwOffset);", "DdReenableDirectDrawObject": "WINBOOL WINAPI DdReenableDirectDrawObject(LPDDRAWI_DIRECTDRAW_GBL pDirectDrawGlobal,WINBOOL *pbNewMode);", "DdAttachSurface": "WINBOOL WINAPI DdAttachSurface(LPDDRAWI_DDRAWSURFACE_LCL pSurfaceFrom,LPDDRAWI_DDRAWSURFACE_LCL pSurfaceTo);", "DdUnattachSurface": "VOID WINAPI DdUnattachSurface(LPDDRAWI_DDRAWSURFACE_LCL pSurface,LPDDRAWI_DDRAWSURFACE_LCL pSurfaceAttached);", "DdQueryDisplaySettingsUniqueness": "ULONG WINAPI DdQueryDisplaySettingsUniqueness(VOID);", "DdGetDxHandle": "HANDLE WINAPI DdGetDxHandle(LPDDRAWI_DIRECTDRAW_LCL pDDraw,LPDDRAWI_DDRAWSURFACE_LCL pSurface,WINBOOL bRelease);", "DdSetGammaRamp": "WINBOOL WINAPI DdSetGammaRamp(LPDDRAWI_DIRECTDRAW_LCL pDDraw,HDC hdc,LPVOID lpGammaRamp);", "DdSwapTextureHandles": "DWORD WINAPI DdSwapTextureHandles(LPDDRAWI_DIRECTDRAW_LCL pDDraw,LPDDRAWI_DDRAWSURFACE_LCL pDDSLcl1,LPDDRAWI_DDRAWSURFACE_LCL pDDSLcl2);", "DirectSoundCreate": "extern HRESULT WINAPI DirectSoundCreate(LPCGUID lpGUID,LPDIRECTSOUND *ppDS,LPUNKNOWN pUnkOuter);", "DirectSoundEnumerateA": "extern HRESULT WINAPI DirectSoundEnumerateA(LPDSENUMCALLBACKA, LPVOID);", "DirectSoundEnumerateW": "extern HRESULT WINAPI DirectSoundEnumerateW(LPDSENUMCALLBACKW, LPVOID);", "DirectSoundCaptureCreate": "extern HRESULT WINAPI DirectSoundCaptureCreate(LPCGUID lpGUID, LPDIRECTSOUNDCAPTURE *ppDSC, LPUNKNOWN pUnkOuter);", "DirectSoundCaptureEnumerateA": "extern HRESULT WINAPI DirectSoundCaptureEnumerateA(LPDSENUMCALLBACKA, LPVOID);", "DirectSoundCaptureEnumerateW": "extern HRESULT WINAPI DirectSoundCaptureEnumerateW(LPDSENUMCALLBACKW, LPVOID);", "DirectSoundCreate8": "extern HRESULT WINAPI DirectSoundCreate8(LPCGUID lpGUID,LPDIRECTSOUND8 *ppDS8,LPUNKNOWN pUnkOuter);", "DirectSoundCaptureCreate8": "extern HRESULT WINAPI DirectSoundCaptureCreate8(LPCGUID lpGUID, LPDIRECTSOUNDCAPTURE8 *ppDSC8, LPUNKNOWN pUnkOuter);", "DirectSoundFullDuplexCreate": "extern HRESULT WINAPI DirectSoundFullDuplexCreate(LPCGUID pcGuidCaptureDevice, LPCGUID pcGuidRenderDevice,", "GetDeviceID": "extern HRESULT WINAPI GetDeviceID(LPCGUID lpGuidSrc, LPGUID lpGuidDest);", "D3D11CreateDevice": "HRESULT WINAPI D3D11CreateDevice(IDXGIAdapter*,D3D_DRIVER_TYPE,HMODULE,UINT,const D3D_FEATURE_LEVEL*,", "ICertGetConfig_GetConfig_Proxy": "HRESULT WINAPI ICertGetConfig_GetConfig_Proxy(ICertGetConfig *This,LONG Flags,BSTR *pstrOut);", "ICertConfig_Reset_Proxy": "HRESULT WINAPI ICertConfig_Reset_Proxy(ICertConfig *This,LONG Index,LONG *pCount);", "ICertConfig_Next_Proxy": "HRESULT WINAPI ICertConfig_Next_Proxy(ICertConfig *This,LONG *pIndex);", "ICertConfig_GetField_Proxy": "HRESULT WINAPI ICertConfig_GetField_Proxy(ICertConfig *This,const BSTR strFieldName,BSTR *pstrOut);", "ICertConfig_GetConfig_Proxy": "HRESULT WINAPI ICertConfig_GetConfig_Proxy(ICertConfig *This,LONG Flags,BSTR *pstrOut);", "ICertConfig2_SetSharedFolder_Proxy": "HRESULT WINAPI ICertConfig2_SetSharedFolder_Proxy(ICertConfig2 *This,const BSTR strSharedFolder);", "ICertRequest_Submit_Proxy": "HRESULT WINAPI ICertRequest_Submit_Proxy(ICertRequest *This,LONG Flags,const BSTR strRequest,const BSTR strAttributes,const BSTR strConfig,LONG *pDisposition);", "ICertRequest_RetrievePending_Proxy": "HRESULT WINAPI ICertRequest_RetrievePending_Proxy(ICertRequest *This,LONG RequestId,const BSTR strConfig,LONG *pDisposition);", "ICertRequest_GetLastStatus_Proxy": "HRESULT WINAPI ICertRequest_GetLastStatus_Proxy(ICertRequest *This,LONG *pStatus);", "ICertRequest_GetRequestId_Proxy": "HRESULT WINAPI ICertRequest_GetRequestId_Proxy(ICertRequest *This,LONG *pRequestId);", "ICertRequest_GetDispositionMessage_Proxy": "HRESULT WINAPI ICertRequest_GetDispositionMessage_Proxy(ICertRequest *This,BSTR *pstrDispositionMessage);", "ICertRequest_GetCACertificate_Proxy": "HRESULT WINAPI ICertRequest_GetCACertificate_Proxy(ICertRequest *This,LONG fExchangeCertificate,const BSTR strConfig,LONG Flags,BSTR *pstrCertificate);", "ICertRequest_GetCertificate_Proxy": "HRESULT WINAPI ICertRequest_GetCertificate_Proxy(ICertRequest *This,LONG Flags,BSTR *pstrCertificate);", "ICertRequest2_GetIssuedCertificate_Proxy": "HRESULT WINAPI ICertRequest2_GetIssuedCertificate_Proxy(ICertRequest2 *This,const BSTR strConfig,LONG RequestId,const BSTR strSerialNumber,LONG *pDisposition);", "ICertRequest2_GetErrorMessageText_Proxy": "HRESULT WINAPI ICertRequest2_GetErrorMessageText_Proxy(ICertRequest2 *This,LONG hrMessage,LONG Flags,BSTR *pstrErrorMessageText);", "ICertRequest2_GetCAProperty_Proxy": "HRESULT WINAPI ICertRequest2_GetCAProperty_Proxy(ICertRequest2 *This,const BSTR strConfig,LONG PropId,LONG PropIndex,LONG PropType,LONG Flags,VARIANT *pvarPropertyValue);", "ICertRequest2_GetCAPropertyFlags_Proxy": "HRESULT WINAPI ICertRequest2_GetCAPropertyFlags_Proxy(ICertRequest2 *This,const BSTR strConfig,LONG PropId,LONG *pPropFlags);", "ICertRequest2_GetCAPropertyDisplayName_Proxy": "HRESULT WINAPI ICertRequest2_GetCAPropertyDisplayName_Proxy(ICertRequest2 *This,const BSTR strConfig,LONG PropId,BSTR *pstrDisplayName);", "ICertRequest2_GetFullResponseProperty_Proxy": "HRESULT WINAPI ICertRequest2_GetFullResponseProperty_Proxy(ICertRequest2 *This,LONG PropId,LONG PropIndex,LONG PropType,LONG Flags,VARIANT *pvarPropertyValue);", "InstallApplication": "DWORD WINAPI InstallApplication(PINSTALLDATA pInstallInfo);", "UninstallApplication": "DWORD WINAPI UninstallApplication(WCHAR *ProductCode,DWORD dwStatus);", "CommandLineFromMsiDescriptor": "DWORD WINAPI CommandLineFromMsiDescriptor(WCHAR *Descriptor,WCHAR *CommandLine,DWORD *CommandLineLength);", "GetManagedApplications": "DWORD WINAPI GetManagedApplications(GUID *pCategory,DWORD dwQueryFlags,DWORD dwInfoLevel,LPDWORD pdwApps,PMANAGEDAPPLICATION *prgManagedApps);", "GetLocalManagedApplications": "DWORD WINAPI GetLocalManagedApplications(WINBOOL bUserApps,LPDWORD pdwApps,PLOCALMANAGEDAPPLICATION *prgLocalApps);", "GetLocalManagedApplicationData": "void WINAPI GetLocalManagedApplicationData(WCHAR *ProductCode,LPWSTR *DisplayName,LPWSTR *SupportUrl);", "GetManagedApplicationCategories": "DWORD WINAPI GetManagedApplicationCategories(DWORD dwReserved,APPCATEGORYINFOLIST *pAppCategory);", "ActivateAudioInterfaceAsync": "HRESULT WINAPI ActivateAudioInterfaceAsync(", "SLAcquireGenuineTicket": "HRESULT WINAPI SLAcquireGenuineTicket(", "SLGetGenuineInformation": "HRESULT WINAPI SLGetGenuineInformation(", "SLGetInstalledSAMLicenseApplications": "HRESULT WINAPI SLGetInstalledSAMLicenseApplications(", "SLGetSAMLicense": "HRESULT WINAPI SLGetSAMLicense(", "SLGetWindowsInformation": "HRESULT WINAPI SLGetWindowsInformation(", "SLGetWindowsInformationDWORD": "HRESULT WINAPI SLGetWindowsInformationDWORD(", "SLInstallSAMLicense": "HRESULT WINAPI SLInstallSAMLicense(", "SLIsGenuineLocal": "HRESULT WINAPI SLIsGenuineLocal(", "SLSetGenuineInformation": "HRESULT WINAPI SLSetGenuineInformation(", "SLUninstallSAMLicense": "HRESULT WINAPI SLUninstallSAMLicense(", "SLIsGenuineLocalEx": "HRESULT WINAPI SLIsGenuineLocalEx(", "IClusCfgCreateClusterWizard_put_ClusterName_Proxy": "HRESULT WINAPI IClusCfgCreateClusterWizard_put_ClusterName_Proxy(IClusCfgCreateClusterWizard *This,BSTR bstrClusterNameIn);", "IClusCfgCreateClusterWizard_get_ClusterName_Proxy": "HRESULT WINAPI IClusCfgCreateClusterWizard_get_ClusterName_Proxy(IClusCfgCreateClusterWizard *This,BSTR *pbstrClusterNameOut);", "IClusCfgCreateClusterWizard_put_ServiceAccountName_Proxy": "HRESULT WINAPI IClusCfgCreateClusterWizard_put_ServiceAccountName_Proxy(IClusCfgCreateClusterWizard *This,BSTR bstrServiceAccountNameIn);", "IClusCfgCreateClusterWizard_get_ServiceAccountName_Proxy": "HRESULT WINAPI IClusCfgCreateClusterWizard_get_ServiceAccountName_Proxy(IClusCfgCreateClusterWizard *This,BSTR *pbstrServiceAccountNameOut);", "IClusCfgCreateClusterWizard_put_ServiceAccountDomain_Proxy": "HRESULT WINAPI IClusCfgCreateClusterWizard_put_ServiceAccountDomain_Proxy(IClusCfgCreateClusterWizard *This,BSTR bstrServiceAccountDomainIn);", "IClusCfgCreateClusterWizard_get_ServiceAccountDomain_Proxy": "HRESULT WINAPI IClusCfgCreateClusterWizard_get_ServiceAccountDomain_Proxy(IClusCfgCreateClusterWizard *This,BSTR *pbstrServiceAccountDomainOut);", "IClusCfgCreateClusterWizard_put_ServiceAccountPassword_Proxy": "HRESULT WINAPI IClusCfgCreateClusterWizard_put_ServiceAccountPassword_Proxy(IClusCfgCreateClusterWizard *This,BSTR bstrPasswordIn);", "IClusCfgCreateClusterWizard_put_ClusterIPAddress_Proxy": "HRESULT WINAPI IClusCfgCreateClusterWizard_put_ClusterIPAddress_Proxy(IClusCfgCreateClusterWizard *This,BSTR bstrClusterIPAddressIn);", "IClusCfgCreateClusterWizard_get_ClusterIPAddress_Proxy": "HRESULT WINAPI IClusCfgCreateClusterWizard_get_ClusterIPAddress_Proxy(IClusCfgCreateClusterWizard *This,BSTR *pbstrClusterIPAddressOut);", "IClusCfgCreateClusterWizard_get_ClusterIPSubnet_Proxy": "HRESULT WINAPI IClusCfgCreateClusterWizard_get_ClusterIPSubnet_Proxy(IClusCfgCreateClusterWizard *This,BSTR *pbstrClusterIPSubnetOut);", "IClusCfgCreateClusterWizard_get_ClusterIPAddressNetwork_Proxy": "HRESULT WINAPI IClusCfgCreateClusterWizard_get_ClusterIPAddressNetwork_Proxy(IClusCfgCreateClusterWizard *This,BSTR *pbstrClusterNetworkNameOut);", "IClusCfgCreateClusterWizard_put_FirstNodeInCluster_Proxy": "HRESULT WINAPI IClusCfgCreateClusterWizard_put_FirstNodeInCluster_Proxy(IClusCfgCreateClusterWizard *This,BSTR bstrFirstNodeInClusterIn);", "IClusCfgCreateClusterWizard_get_FirstNodeInCluster_Proxy": "HRESULT WINAPI IClusCfgCreateClusterWizard_get_FirstNodeInCluster_Proxy(IClusCfgCreateClusterWizard *This,BSTR *pbstrFirstNodeInClusterOut);", "IClusCfgCreateClusterWizard_put_MinimumConfiguration_Proxy": "HRESULT WINAPI IClusCfgCreateClusterWizard_put_MinimumConfiguration_Proxy(IClusCfgCreateClusterWizard *This,VARIANT_BOOL fMinConfigIn);", "IClusCfgCreateClusterWizard_get_MinimumConfiguration_Proxy": "HRESULT WINAPI IClusCfgCreateClusterWizard_get_MinimumConfiguration_Proxy(IClusCfgCreateClusterWizard *This,VARIANT_BOOL *pfMinConfigOut);", "IClusCfgCreateClusterWizard_ShowWizard_Proxy": "HRESULT WINAPI IClusCfgCreateClusterWizard_ShowWizard_Proxy(IClusCfgCreateClusterWizard *This,__LONG32 lParentWindowHandleIn,VARIANT_BOOL *pfCompletedOut);", "IClusCfgAddNodesWizard_put_ClusterName_Proxy": "HRESULT WINAPI IClusCfgAddNodesWizard_put_ClusterName_Proxy(IClusCfgAddNodesWizard *This,BSTR bstrClusterNameIn);", "IClusCfgAddNodesWizard_get_ClusterName_Proxy": "HRESULT WINAPI IClusCfgAddNodesWizard_get_ClusterName_Proxy(IClusCfgAddNodesWizard *This,BSTR *pbstrClusterNameOut);", "IClusCfgAddNodesWizard_put_ServiceAccountPassword_Proxy": "HRESULT WINAPI IClusCfgAddNodesWizard_put_ServiceAccountPassword_Proxy(IClusCfgAddNodesWizard *This,BSTR bstrPasswordIn);", "IClusCfgAddNodesWizard_put_MinimumConfiguration_Proxy": "HRESULT WINAPI IClusCfgAddNodesWizard_put_MinimumConfiguration_Proxy(IClusCfgAddNodesWizard *This,VARIANT_BOOL fMinConfigIn);", "IClusCfgAddNodesWizard_get_MinimumConfiguration_Proxy": "HRESULT WINAPI IClusCfgAddNodesWizard_get_MinimumConfiguration_Proxy(IClusCfgAddNodesWizard *This,VARIANT_BOOL *pfMinConfigOut);", "IClusCfgAddNodesWizard_AddNodeToList_Proxy": "HRESULT WINAPI IClusCfgAddNodesWizard_AddNodeToList_Proxy(IClusCfgAddNodesWizard *This,BSTR bstrNodeNameIn);", "IClusCfgAddNodesWizard_RemoveNodeFromList_Proxy": "HRESULT WINAPI IClusCfgAddNodesWizard_RemoveNodeFromList_Proxy(IClusCfgAddNodesWizard *This,BSTR bstrNodeNameIn);", "IClusCfgAddNodesWizard_ClearNodeList_Proxy": "HRESULT WINAPI IClusCfgAddNodesWizard_ClearNodeList_Proxy(IClusCfgAddNodesWizard *This);", "IClusCfgAddNodesWizard_ShowWizard_Proxy": "HRESULT WINAPI IClusCfgAddNodesWizard_ShowWizard_Proxy(IClusCfgAddNodesWizard *This,__LONG32 lParentWindowHandleIn,VARIANT_BOOL *pfCompletedOut);", "IAccessibleHandler_AccessibleObjectFromID_Proxy": "HRESULT WINAPI IAccessibleHandler_AccessibleObjectFromID_Proxy(IAccessibleHandler *This,LONG hwnd,LONG lObjectID,LPACCESSIBLE *pIAccessible);", "IAccIdentity_GetIdentityString_Proxy": "HRESULT WINAPI IAccIdentity_GetIdentityString_Proxy(IAccIdentity *This,DWORD dwIDChild,BYTE **ppIDString,DWORD *pdwIDStringLen);", "IAccPropServer_GetPropValue_Proxy": "HRESULT WINAPI IAccPropServer_GetPropValue_Proxy(IAccPropServer *This,const BYTE *pIDString,DWORD dwIDStringLen,MSAAPROPID idProp,VARIANT *pvarValue,WINBOOL *pfHasProp);", "IAccPropServices_SetPropValue_Proxy": "HRESULT WINAPI IAccPropServices_SetPropValue_Proxy(IAccPropServices *This,const BYTE *pIDString,DWORD dwIDStringLen,MSAAPROPID idProp,VARIANT var);", "IAccPropServices_SetPropServer_Proxy": "HRESULT WINAPI IAccPropServices_SetPropServer_Proxy(IAccPropServices *This,const BYTE *pIDString,DWORD dwIDStringLen,const MSAAPROPID *paProps,int cProps,IAccPropServer *pServer,AnnoScope annoScope);", "IAccPropServices_ClearProps_Proxy": "HRESULT WINAPI IAccPropServices_ClearProps_Proxy(IAccPropServices *This,const BYTE *pIDString,DWORD dwIDStringLen,const MSAAPROPID *paProps,int cProps);", "IAccPropServices_SetHwndProp_Proxy": "HRESULT WINAPI IAccPropServices_SetHwndProp_Proxy(IAccPropServices *This,HWND hwnd,DWORD idObject,DWORD idChild,MSAAPROPID idProp,VARIANT var);", "IAccPropServices_SetHwndPropStr_Proxy": "HRESULT WINAPI IAccPropServices_SetHwndPropStr_Proxy(IAccPropServices *This,HWND hwnd,DWORD idObject,DWORD idChild,MSAAPROPID idProp,LPCWSTR str);", "IAccPropServices_SetHwndPropServer_Proxy": "HRESULT WINAPI IAccPropServices_SetHwndPropServer_Proxy(IAccPropServices *This,HWND hwnd,DWORD idObject,DWORD idChild,const MSAAPROPID *paProps,int cProps,IAccPropServer *pServer,AnnoScope annoScope);", "IAccPropServices_ClearHwndProps_Proxy": "HRESULT WINAPI IAccPropServices_ClearHwndProps_Proxy(IAccPropServices *This,HWND hwnd,DWORD idObject,DWORD idChild,const MSAAPROPID *paProps,int cProps);", "IAccPropServices_ComposeHwndIdentityString_Proxy": "HRESULT WINAPI IAccPropServices_ComposeHwndIdentityString_Proxy(IAccPropServices *This,HWND hwnd,DWORD idObject,DWORD idChild,BYTE **ppIDString,DWORD *pdwIDStringLen);", "IAccPropServices_DecomposeHwndIdentityString_Proxy": "HRESULT WINAPI IAccPropServices_DecomposeHwndIdentityString_Proxy(IAccPropServices *This,const BYTE *pIDString,DWORD dwIDStringLen,HWND *phwnd,DWORD *pidObject,DWORD *pidChild);", "IAccPropServices_SetHmenuProp_Proxy": "HRESULT WINAPI IAccPropServices_SetHmenuProp_Proxy(IAccPropServices *This,HMENU hmenu,DWORD idChild,MSAAPROPID idProp,VARIANT var);", "IAccPropServices_SetHmenuPropStr_Proxy": "HRESULT WINAPI IAccPropServices_SetHmenuPropStr_Proxy(IAccPropServices *This,HMENU hmenu,DWORD idChild,MSAAPROPID idProp,LPCWSTR str);", "IAccPropServices_SetHmenuPropServer_Proxy": "HRESULT WINAPI IAccPropServices_SetHmenuPropServer_Proxy(IAccPropServices *This,HMENU hmenu,DWORD idChild,const MSAAPROPID *paProps,int cProps,IAccPropServer *pServer,AnnoScope annoScope);", "IAccPropServices_ClearHmenuProps_Proxy": "HRESULT WINAPI IAccPropServices_ClearHmenuProps_Proxy(IAccPropServices *This,HMENU hmenu,DWORD idChild,const MSAAPROPID *paProps,int cProps);", "IAccPropServices_ComposeHmenuIdentityString_Proxy": "HRESULT WINAPI IAccPropServices_ComposeHmenuIdentityString_Proxy(IAccPropServices *This,HMENU hmenu,DWORD idChild,BYTE **ppIDString,DWORD *pdwIDStringLen);", "IAccPropServices_DecomposeHmenuIdentityString_Proxy": "HRESULT WINAPI IAccPropServices_DecomposeHmenuIdentityString_Proxy(IAccPropServices *This,const BYTE *pIDString,DWORD dwIDStringLen,HMENU *phmenu,DWORD *pidChild);", "ITextDocument_GetName_Proxy": "HRESULT WINAPI ITextDocument_GetName_Proxy(ITextDocument *This,BSTR *pName);", "ITextDocument_GetSelection_Proxy": "HRESULT WINAPI ITextDocument_GetSelection_Proxy(ITextDocument *This,ITextSelection **ppSel);", "ITextDocument_GetStoryCount_Proxy": "HRESULT WINAPI ITextDocument_GetStoryCount_Proxy(ITextDocument *This,__LONG32 *pCount);", "ITextDocument_GetStoryRanges_Proxy": "HRESULT WINAPI ITextDocument_GetStoryRanges_Proxy(ITextDocument *This,ITextStoryRanges **ppStories);", "ITextDocument_GetSaved_Proxy": "HRESULT WINAPI ITextDocument_GetSaved_Proxy(ITextDocument *This,__LONG32 *pValue);", "ITextDocument_SetSaved_Proxy": "HRESULT WINAPI ITextDocument_SetSaved_Proxy(ITextDocument *This,__LONG32 Value);", "ITextDocument_GetDefaultTabStop_Proxy": "HRESULT WINAPI ITextDocument_GetDefaultTabStop_Proxy(ITextDocument *This,float *pValue);", "ITextDocument_SetDefaultTabStop_Proxy": "HRESULT WINAPI ITextDocument_SetDefaultTabStop_Proxy(ITextDocument *This,float Value);", "ITextDocument_New_Proxy": "HRESULT WINAPI ITextDocument_New_Proxy(ITextDocument *This);", "ITextDocument_Open_Proxy": "HRESULT WINAPI ITextDocument_Open_Proxy(ITextDocument *This,VARIANT *pVar,__LONG32 Flags,__LONG32 CodePage);", "ITextDocument_Save_Proxy": "HRESULT WINAPI ITextDocument_Save_Proxy(ITextDocument *This,VARIANT *pVar,__LONG32 Flags,__LONG32 CodePage);", "ITextDocument_Freeze_Proxy": "HRESULT WINAPI ITextDocument_Freeze_Proxy(ITextDocument *This,__LONG32 *pCount);", "ITextDocument_Unfreeze_Proxy": "HRESULT WINAPI ITextDocument_Unfreeze_Proxy(ITextDocument *This,__LONG32 *pCount);", "ITextDocument_BeginEditCollection_Proxy": "HRESULT WINAPI ITextDocument_BeginEditCollection_Proxy(ITextDocument *This);", "ITextDocument_EndEditCollection_Proxy": "HRESULT WINAPI ITextDocument_EndEditCollection_Proxy(ITextDocument *This);", "ITextDocument_Undo_Proxy": "HRESULT WINAPI ITextDocument_Undo_Proxy(ITextDocument *This,__LONG32 Count,__LONG32 *prop);", "ITextDocument_Redo_Proxy": "HRESULT WINAPI ITextDocument_Redo_Proxy(ITextDocument *This,__LONG32 Count,__LONG32 *prop);", "ITextDocument_Range_Proxy": "HRESULT WINAPI ITextDocument_Range_Proxy(ITextDocument *This,__LONG32 cp1,__LONG32 cp2,ITextRange **ppRange);", "ITextDocument_RangeFromPoint_Proxy": "HRESULT WINAPI ITextDocument_RangeFromPoint_Proxy(ITextDocument *This,__LONG32 x,__LONG32 y,ITextRange **ppRange);", "ITextRange_GetText_Proxy": "HRESULT WINAPI ITextRange_GetText_Proxy(ITextRange *This,BSTR *pbstr);", "ITextRange_SetText_Proxy": "HRESULT WINAPI ITextRange_SetText_Proxy(ITextRange *This,BSTR bstr);", "ITextRange_GetChar_Proxy": "HRESULT WINAPI ITextRange_GetChar_Proxy(ITextRange *This,__LONG32 *pch);", "ITextRange_SetChar_Proxy": "HRESULT WINAPI ITextRange_SetChar_Proxy(ITextRange *This,__LONG32 ch);", "ITextRange_GetDuplicate_Proxy": "HRESULT WINAPI ITextRange_GetDuplicate_Proxy(ITextRange *This,ITextRange **ppRange);", "ITextRange_GetFormattedText_Proxy": "HRESULT WINAPI ITextRange_GetFormattedText_Proxy(ITextRange *This,ITextRange **ppRange);", "ITextRange_SetFormattedText_Proxy": "HRESULT WINAPI ITextRange_SetFormattedText_Proxy(ITextRange *This,ITextRange *pRange);", "ITextRange_GetStart_Proxy": "HRESULT WINAPI ITextRange_GetStart_Proxy(ITextRange *This,__LONG32 *pcpFirst);", "ITextRange_SetStart_Proxy": "HRESULT WINAPI ITextRange_SetStart_Proxy(ITextRange *This,__LONG32 cpFirst);", "ITextRange_GetEnd_Proxy": "HRESULT WINAPI ITextRange_GetEnd_Proxy(ITextRange *This,__LONG32 *pcpLim);", "ITextRange_SetEnd_Proxy": "HRESULT WINAPI ITextRange_SetEnd_Proxy(ITextRange *This,__LONG32 cpLim);", "ITextRange_GetFont_Proxy": "HRESULT WINAPI ITextRange_GetFont_Proxy(ITextRange *This,ITextFont **pFont);", "ITextRange_SetFont_Proxy": "HRESULT WINAPI ITextRange_SetFont_Proxy(ITextRange *This,ITextFont *pFont);", "ITextRange_GetPara_Proxy": "HRESULT WINAPI ITextRange_GetPara_Proxy(ITextRange *This,ITextPara **pPara);", "ITextRange_SetPara_Proxy": "HRESULT WINAPI ITextRange_SetPara_Proxy(ITextRange *This,ITextPara *pPara);", "ITextRange_GetStoryLength_Proxy": "HRESULT WINAPI ITextRange_GetStoryLength_Proxy(ITextRange *This,__LONG32 *pcch);", "ITextRange_GetStoryType_Proxy": "HRESULT WINAPI ITextRange_GetStoryType_Proxy(ITextRange *This,__LONG32 *pValue);", "ITextRange_Collapse_Proxy": "HRESULT WINAPI ITextRange_Collapse_Proxy(ITextRange *This,__LONG32 bStart);", "ITextRange_Expand_Proxy": "HRESULT WINAPI ITextRange_Expand_Proxy(ITextRange *This,__LONG32 Unit,__LONG32 *pDelta);", "ITextRange_GetIndex_Proxy": "HRESULT WINAPI ITextRange_GetIndex_Proxy(ITextRange *This,__LONG32 Unit,__LONG32 *pIndex);", "ITextRange_SetIndex_Proxy": "HRESULT WINAPI ITextRange_SetIndex_Proxy(ITextRange *This,__LONG32 Unit,__LONG32 Index,__LONG32 Extend);", "ITextRange_SetRange_Proxy": "HRESULT WINAPI ITextRange_SetRange_Proxy(ITextRange *This,__LONG32 cpActive,__LONG32 cpOther);", "ITextRange_InRange_Proxy": "HRESULT WINAPI ITextRange_InRange_Proxy(ITextRange *This,ITextRange *pRange,__LONG32 *pb);", "ITextRange_InStory_Proxy": "HRESULT WINAPI ITextRange_InStory_Proxy(ITextRange *This,ITextRange *pRange,__LONG32 *pb);", "ITextRange_IsEqual_Proxy": "HRESULT WINAPI ITextRange_IsEqual_Proxy(ITextRange *This,ITextRange *pRange,__LONG32 *pb);", "ITextRange_Select_Proxy": "HRESULT WINAPI ITextRange_Select_Proxy(ITextRange *This);", "ITextRange_StartOf_Proxy": "HRESULT WINAPI ITextRange_StartOf_Proxy(ITextRange *This,__LONG32 Unit,__LONG32 Extend,__LONG32 *pDelta);", "ITextRange_EndOf_Proxy": "HRESULT WINAPI ITextRange_EndOf_Proxy(ITextRange *This,__LONG32 Unit,__LONG32 Extend,__LONG32 *pDelta);", "ITextRange_Move_Proxy": "HRESULT WINAPI ITextRange_Move_Proxy(ITextRange *This,__LONG32 Unit,__LONG32 Count,__LONG32 *pDelta);", "ITextRange_MoveStart_Proxy": "HRESULT WINAPI ITextRange_MoveStart_Proxy(ITextRange *This,__LONG32 Unit,__LONG32 Count,__LONG32 *pDelta);", "ITextRange_MoveEnd_Proxy": "HRESULT WINAPI ITextRange_MoveEnd_Proxy(ITextRange *This,__LONG32 Unit,__LONG32 Count,__LONG32 *pDelta);", "ITextRange_MoveWhile_Proxy": "HRESULT WINAPI ITextRange_MoveWhile_Proxy(ITextRange *This,VARIANT *Cset,__LONG32 Count,__LONG32 *pDelta);", "ITextRange_MoveStartWhile_Proxy": "HRESULT WINAPI ITextRange_MoveStartWhile_Proxy(ITextRange *This,VARIANT *Cset,__LONG32 Count,__LONG32 *pDelta);", "ITextRange_MoveEndWhile_Proxy": "HRESULT WINAPI ITextRange_MoveEndWhile_Proxy(ITextRange *This,VARIANT *Cset,__LONG32 Count,__LONG32 *pDelta);", "ITextRange_MoveUntil_Proxy": "HRESULT WINAPI ITextRange_MoveUntil_Proxy(ITextRange *This,VARIANT *Cset,__LONG32 Count,__LONG32 *pDelta);", "ITextRange_MoveStartUntil_Proxy": "HRESULT WINAPI ITextRange_MoveStartUntil_Proxy(ITextRange *This,VARIANT *Cset,__LONG32 Count,__LONG32 *pDelta);", "ITextRange_MoveEndUntil_Proxy": "HRESULT WINAPI ITextRange_MoveEndUntil_Proxy(ITextRange *This,VARIANT *Cset,__LONG32 Count,__LONG32 *pDelta);", "ITextRange_FindText_Proxy": "HRESULT WINAPI ITextRange_FindText_Proxy(ITextRange *This,BSTR bstr,__LONG32 cch,__LONG32 Flags,__LONG32 *pLength);", "ITextRange_FindTextStart_Proxy": "HRESULT WINAPI ITextRange_FindTextStart_Proxy(ITextRange *This,BSTR bstr,__LONG32 cch,__LONG32 Flags,__LONG32 *pLength);", "ITextRange_FindTextEnd_Proxy": "HRESULT WINAPI ITextRange_FindTextEnd_Proxy(ITextRange *This,BSTR bstr,__LONG32 cch,__LONG32 Flags,__LONG32 *pLength);", "ITextRange_Delete_Proxy": "HRESULT WINAPI ITextRange_Delete_Proxy(ITextRange *This,__LONG32 Unit,__LONG32 Count,__LONG32 *pDelta);", "ITextRange_Cut_Proxy": "HRESULT WINAPI ITextRange_Cut_Proxy(ITextRange *This,VARIANT *pVar);", "ITextRange_Copy_Proxy": "HRESULT WINAPI ITextRange_Copy_Proxy(ITextRange *This,VARIANT *pVar);", "ITextRange_Paste_Proxy": "HRESULT WINAPI ITextRange_Paste_Proxy(ITextRange *This,VARIANT *pVar,__LONG32 Format);", "ITextRange_CanPaste_Proxy": "HRESULT WINAPI ITextRange_CanPaste_Proxy(ITextRange *This,VARIANT *pVar,__LONG32 Format,__LONG32 *pb);", "ITextRange_CanEdit_Proxy": "HRESULT WINAPI ITextRange_CanEdit_Proxy(ITextRange *This,__LONG32 *pbCanEdit);", "ITextRange_ChangeCase_Proxy": "HRESULT WINAPI ITextRange_ChangeCase_Proxy(ITextRange *This,__LONG32 Type);", "ITextRange_GetPoint_Proxy": "HRESULT WINAPI ITextRange_GetPoint_Proxy(ITextRange *This,__LONG32 Type,__LONG32 *px,__LONG32 *py);", "ITextRange_SetPoint_Proxy": "HRESULT WINAPI ITextRange_SetPoint_Proxy(ITextRange *This,__LONG32 x,__LONG32 y,__LONG32 Type,__LONG32 Extend);", "ITextRange_ScrollIntoView_Proxy": "HRESULT WINAPI ITextRange_ScrollIntoView_Proxy(ITextRange *This,__LONG32 Value);", "ITextRange_GetEmbeddedObject_Proxy": "HRESULT WINAPI ITextRange_GetEmbeddedObject_Proxy(ITextRange *This,IUnknown **ppv);", "ITextSelection_GetFlags_Proxy": "HRESULT WINAPI ITextSelection_GetFlags_Proxy(ITextSelection *This,__LONG32 *pFlags);", "ITextSelection_SetFlags_Proxy": "HRESULT WINAPI ITextSelection_SetFlags_Proxy(ITextSelection *This,LONG Flags);", "ITextSelection_GetType_Proxy": "HRESULT WINAPI ITextSelection_GetType_Proxy(ITextSelection *This,__LONG32 *pType);", "ITextSelection_MoveLeft_Proxy": "HRESULT WINAPI ITextSelection_MoveLeft_Proxy(ITextSelection *This,__LONG32 Unit,__LONG32 Count,__LONG32 Extend,__LONG32 *pDelta);", "ITextSelection_MoveRight_Proxy": "HRESULT WINAPI ITextSelection_MoveRight_Proxy(ITextSelection *This,__LONG32 Unit,__LONG32 Count,__LONG32 Extend,__LONG32 *pDelta);", "ITextSelection_MoveUp_Proxy": "HRESULT WINAPI ITextSelection_MoveUp_Proxy(ITextSelection *This,__LONG32 Unit,__LONG32 Count,__LONG32 Extend,__LONG32 *pDelta);", "ITextSelection_MoveDown_Proxy": "HRESULT WINAPI ITextSelection_MoveDown_Proxy(ITextSelection *This,__LONG32 Unit,__LONG32 Count,__LONG32 Extend,__LONG32 *pDelta);", "ITextSelection_HomeKey_Proxy": "HRESULT WINAPI ITextSelection_HomeKey_Proxy(ITextSelection *This,__LONG32 Unit,__LONG32 Extend,__LONG32 *pDelta);", "ITextSelection_EndKey_Proxy": "HRESULT WINAPI ITextSelection_EndKey_Proxy(ITextSelection *This,__LONG32 Unit,__LONG32 Extend,__LONG32 *pDelta);", "ITextSelection_TypeText_Proxy": "HRESULT WINAPI ITextSelection_TypeText_Proxy(ITextSelection *This,BSTR bstr);", "ITextFont_GetDuplicate_Proxy": "HRESULT WINAPI ITextFont_GetDuplicate_Proxy(ITextFont *This,ITextFont **ppFont);", "ITextFont_SetDuplicate_Proxy": "HRESULT WINAPI ITextFont_SetDuplicate_Proxy(ITextFont *This,ITextFont *pFont);", "ITextFont_CanChange_Proxy": "HRESULT WINAPI ITextFont_CanChange_Proxy(ITextFont *This,__LONG32 *pB);", "ITextFont_IsEqual_Proxy": "HRESULT WINAPI ITextFont_IsEqual_Proxy(ITextFont *This,ITextFont *pFont,__LONG32 *pB);", "ITextFont_Reset_Proxy": "HRESULT WINAPI ITextFont_Reset_Proxy(ITextFont *This,__LONG32 Value);", "ITextFont_GetStyle_Proxy": "HRESULT WINAPI ITextFont_GetStyle_Proxy(ITextFont *This,__LONG32 *pValue);", "ITextFont_SetStyle_Proxy": "HRESULT WINAPI ITextFont_SetStyle_Proxy(ITextFont *This,__LONG32 Value);", "ITextFont_GetAllCaps_Proxy": "HRESULT WINAPI ITextFont_GetAllCaps_Proxy(ITextFont *This,__LONG32 *pValue);", "ITextFont_SetAllCaps_Proxy": "HRESULT WINAPI ITextFont_SetAllCaps_Proxy(ITextFont *This,__LONG32 Value);", "ITextFont_GetAnimation_Proxy": "HRESULT WINAPI ITextFont_GetAnimation_Proxy(ITextFont *This,__LONG32 *pValue);", "ITextFont_SetAnimation_Proxy": "HRESULT WINAPI ITextFont_SetAnimation_Proxy(ITextFont *This,__LONG32 Value);", "ITextFont_GetBackColor_Proxy": "HRESULT WINAPI ITextFont_GetBackColor_Proxy(ITextFont *This,__LONG32 *pValue);", "ITextFont_SetBackColor_Proxy": "HRESULT WINAPI ITextFont_SetBackColor_Proxy(ITextFont *This,__LONG32 Value);", "ITextFont_GetBold_Proxy": "HRESULT WINAPI ITextFont_GetBold_Proxy(ITextFont *This,__LONG32 *pValue);", "ITextFont_SetBold_Proxy": "HRESULT WINAPI ITextFont_SetBold_Proxy(ITextFont *This,__LONG32 Value);", "ITextFont_GetEmboss_Proxy": "HRESULT WINAPI ITextFont_GetEmboss_Proxy(ITextFont *This,__LONG32 *pValue);", "ITextFont_SetEmboss_Proxy": "HRESULT WINAPI ITextFont_SetEmboss_Proxy(ITextFont *This,__LONG32 Value);", "ITextFont_GetForeColor_Proxy": "HRESULT WINAPI ITextFont_GetForeColor_Proxy(ITextFont *This,__LONG32 *pValue);", "ITextFont_SetForeColor_Proxy": "HRESULT WINAPI ITextFont_SetForeColor_Proxy(ITextFont *This,__LONG32 Value);", "ITextFont_GetHidden_Proxy": "HRESULT WINAPI ITextFont_GetHidden_Proxy(ITextFont *This,__LONG32 *pValue);", "ITextFont_SetHidden_Proxy": "HRESULT WINAPI ITextFont_SetHidden_Proxy(ITextFont *This,__LONG32 Value);", "ITextFont_GetEngrave_Proxy": "HRESULT WINAPI ITextFont_GetEngrave_Proxy(ITextFont *This,__LONG32 *pValue);", "ITextFont_SetEngrave_Proxy": "HRESULT WINAPI ITextFont_SetEngrave_Proxy(ITextFont *This,__LONG32 Value);", "ITextFont_GetItalic_Proxy": "HRESULT WINAPI ITextFont_GetItalic_Proxy(ITextFont *This,__LONG32 *pValue);", "ITextFont_SetItalic_Proxy": "HRESULT WINAPI ITextFont_SetItalic_Proxy(ITextFont *This,__LONG32 Value);", "ITextFont_GetKerning_Proxy": "HRESULT WINAPI ITextFont_GetKerning_Proxy(ITextFont *This,float *pValue);", "ITextFont_SetKerning_Proxy": "HRESULT WINAPI ITextFont_SetKerning_Proxy(ITextFont *This,float Value);", "ITextFont_GetLanguageID_Proxy": "HRESULT WINAPI ITextFont_GetLanguageID_Proxy(ITextFont *This,__LONG32 *pValue);", "ITextFont_SetLanguageID_Proxy": "HRESULT WINAPI ITextFont_SetLanguageID_Proxy(ITextFont *This,__LONG32 Value);", "ITextFont_GetName_Proxy": "HRESULT WINAPI ITextFont_GetName_Proxy(ITextFont *This,BSTR *pbstr);", "ITextFont_SetName_Proxy": "HRESULT WINAPI ITextFont_SetName_Proxy(ITextFont *This,BSTR bstr);", "ITextFont_GetOutline_Proxy": "HRESULT WINAPI ITextFont_GetOutline_Proxy(ITextFont *This,__LONG32 *pValue);", "ITextFont_SetOutline_Proxy": "HRESULT WINAPI ITextFont_SetOutline_Proxy(ITextFont *This,__LONG32 Value);", "ITextFont_GetPosition_Proxy": "HRESULT WINAPI ITextFont_GetPosition_Proxy(ITextFont *This,float *pValue);", "ITextFont_SetPosition_Proxy": "HRESULT WINAPI ITextFont_SetPosition_Proxy(ITextFont *This,float Value);", "ITextFont_GetProtected_Proxy": "HRESULT WINAPI ITextFont_GetProtected_Proxy(ITextFont *This,__LONG32 *pValue);", "ITextFont_SetProtected_Proxy": "HRESULT WINAPI ITextFont_SetProtected_Proxy(ITextFont *This,__LONG32 Value);", "ITextFont_GetShadow_Proxy": "HRESULT WINAPI ITextFont_GetShadow_Proxy(ITextFont *This,__LONG32 *pValue);", "ITextFont_SetShadow_Proxy": "HRESULT WINAPI ITextFont_SetShadow_Proxy(ITextFont *This,__LONG32 Value);", "ITextFont_GetSize_Proxy": "HRESULT WINAPI ITextFont_GetSize_Proxy(ITextFont *This,float *pValue);", "ITextFont_SetSize_Proxy": "HRESULT WINAPI ITextFont_SetSize_Proxy(ITextFont *This,float Value);", "ITextFont_GetSmallCaps_Proxy": "HRESULT WINAPI ITextFont_GetSmallCaps_Proxy(ITextFont *This,__LONG32 *pValue);", "ITextFont_SetSmallCaps_Proxy": "HRESULT WINAPI ITextFont_SetSmallCaps_Proxy(ITextFont *This,__LONG32 Value);", "ITextFont_GetSpacing_Proxy": "HRESULT WINAPI ITextFont_GetSpacing_Proxy(ITextFont *This,float *pValue);", "ITextFont_SetSpacing_Proxy": "HRESULT WINAPI ITextFont_SetSpacing_Proxy(ITextFont *This,float Value);", "ITextFont_GetStrikeThrough_Proxy": "HRESULT WINAPI ITextFont_GetStrikeThrough_Proxy(ITextFont *This,__LONG32 *pValue);", "ITextFont_SetStrikeThrough_Proxy": "HRESULT WINAPI ITextFont_SetStrikeThrough_Proxy(ITextFont *This,__LONG32 Value);", "ITextFont_GetSubscript_Proxy": "HRESULT WINAPI ITextFont_GetSubscript_Proxy(ITextFont *This,__LONG32 *pValue);", "ITextFont_SetSubscript_Proxy": "HRESULT WINAPI ITextFont_SetSubscript_Proxy(ITextFont *This,__LONG32 Value);", "ITextFont_GetSuperscript_Proxy": "HRESULT WINAPI ITextFont_GetSuperscript_Proxy(ITextFont *This,__LONG32 *pValue);", "ITextFont_SetSuperscript_Proxy": "HRESULT WINAPI ITextFont_SetSuperscript_Proxy(ITextFont *This,__LONG32 Value);", "ITextFont_GetUnderline_Proxy": "HRESULT WINAPI ITextFont_GetUnderline_Proxy(ITextFont *This,__LONG32 *pValue);", "ITextFont_SetUnderline_Proxy": "HRESULT WINAPI ITextFont_SetUnderline_Proxy(ITextFont *This,__LONG32 Value);", "ITextFont_GetWeight_Proxy": "HRESULT WINAPI ITextFont_GetWeight_Proxy(ITextFont *This,__LONG32 *pValue);", "ITextFont_SetWeight_Proxy": "HRESULT WINAPI ITextFont_SetWeight_Proxy(ITextFont *This,__LONG32 Value);", "ITextPara_GetDuplicate_Proxy": "HRESULT WINAPI ITextPara_GetDuplicate_Proxy(ITextPara *This,ITextPara **ppPara);", "ITextPara_SetDuplicate_Proxy": "HRESULT WINAPI ITextPara_SetDuplicate_Proxy(ITextPara *This,ITextPara *pPara);", "ITextPara_CanChange_Proxy": "HRESULT WINAPI ITextPara_CanChange_Proxy(ITextPara *This,__LONG32 *pB);", "ITextPara_IsEqual_Proxy": "HRESULT WINAPI ITextPara_IsEqual_Proxy(ITextPara *This,ITextPara *pPara,__LONG32 *pB);", "ITextPara_Reset_Proxy": "HRESULT WINAPI ITextPara_Reset_Proxy(ITextPara *This,__LONG32 Value);", "ITextPara_GetStyle_Proxy": "HRESULT WINAPI ITextPara_GetStyle_Proxy(ITextPara *This,__LONG32 *pValue);", "ITextPara_SetStyle_Proxy": "HRESULT WINAPI ITextPara_SetStyle_Proxy(ITextPara *This,__LONG32 Value);", "ITextPara_GetAlignment_Proxy": "HRESULT WINAPI ITextPara_GetAlignment_Proxy(ITextPara *This,__LONG32 *pValue);", "ITextPara_SetAlignment_Proxy": "HRESULT WINAPI ITextPara_SetAlignment_Proxy(ITextPara *This,__LONG32 Value);", "ITextPara_GetHyphenation_Proxy": "HRESULT WINAPI ITextPara_GetHyphenation_Proxy(ITextPara *This,__LONG32 *pValue);", "ITextPara_SetHyphenation_Proxy": "HRESULT WINAPI ITextPara_SetHyphenation_Proxy(ITextPara *This,__LONG32 Value);", "ITextPara_GetFirstLineIndent_Proxy": "HRESULT WINAPI ITextPara_GetFirstLineIndent_Proxy(ITextPara *This,float *pValue);", "ITextPara_GetKeepTogether_Proxy": "HRESULT WINAPI ITextPara_GetKeepTogether_Proxy(ITextPara *This,__LONG32 *pValue);", "ITextPara_SetKeepTogether_Proxy": "HRESULT WINAPI ITextPara_SetKeepTogether_Proxy(ITextPara *This,__LONG32 Value);", "ITextPara_GetKeepWithNext_Proxy": "HRESULT WINAPI ITextPara_GetKeepWithNext_Proxy(ITextPara *This,__LONG32 *pValue);", "ITextPara_SetKeepWithNext_Proxy": "HRESULT WINAPI ITextPara_SetKeepWithNext_Proxy(ITextPara *This,__LONG32 Value);", "ITextPara_GetLeftIndent_Proxy": "HRESULT WINAPI ITextPara_GetLeftIndent_Proxy(ITextPara *This,float *pValue);", "ITextPara_GetLineSpacing_Proxy": "HRESULT WINAPI ITextPara_GetLineSpacing_Proxy(ITextPara *This,float *pValue);", "ITextPara_GetLineSpacingRule_Proxy": "HRESULT WINAPI ITextPara_GetLineSpacingRule_Proxy(ITextPara *This,__LONG32 *pValue);", "ITextPara_GetListAlignment_Proxy": "HRESULT WINAPI ITextPara_GetListAlignment_Proxy(ITextPara *This,__LONG32 *pValue);", "ITextPara_SetListAlignment_Proxy": "HRESULT WINAPI ITextPara_SetListAlignment_Proxy(ITextPara *This,__LONG32 Value);", "ITextPara_GetListLevelIndex_Proxy": "HRESULT WINAPI ITextPara_GetListLevelIndex_Proxy(ITextPara *This,__LONG32 *pValue);", "ITextPara_SetListLevelIndex_Proxy": "HRESULT WINAPI ITextPara_SetListLevelIndex_Proxy(ITextPara *This,__LONG32 Value);", "ITextPara_GetListStart_Proxy": "HRESULT WINAPI ITextPara_GetListStart_Proxy(ITextPara *This,__LONG32 *pValue);", "ITextPara_SetListStart_Proxy": "HRESULT WINAPI ITextPara_SetListStart_Proxy(ITextPara *This,__LONG32 Value);", "ITextPara_GetListTab_Proxy": "HRESULT WINAPI ITextPara_GetListTab_Proxy(ITextPara *This,float *pValue);", "ITextPara_SetListTab_Proxy": "HRESULT WINAPI ITextPara_SetListTab_Proxy(ITextPara *This,float Value);", "ITextPara_GetListType_Proxy": "HRESULT WINAPI ITextPara_GetListType_Proxy(ITextPara *This,__LONG32 *pValue);", "ITextPara_SetListType_Proxy": "HRESULT WINAPI ITextPara_SetListType_Proxy(ITextPara *This,__LONG32 Value);", "ITextPara_GetNoLineNumber_Proxy": "HRESULT WINAPI ITextPara_GetNoLineNumber_Proxy(ITextPara *This,__LONG32 *pValue);", "ITextPara_SetNoLineNumber_Proxy": "HRESULT WINAPI ITextPara_SetNoLineNumber_Proxy(ITextPara *This,__LONG32 Value);", "ITextPara_GetPageBreakBefore_Proxy": "HRESULT WINAPI ITextPara_GetPageBreakBefore_Proxy(ITextPara *This,__LONG32 *pValue);", "ITextPara_SetPageBreakBefore_Proxy": "HRESULT WINAPI ITextPara_SetPageBreakBefore_Proxy(ITextPara *This,__LONG32 Value);", "ITextPara_GetRightIndent_Proxy": "HRESULT WINAPI ITextPara_GetRightIndent_Proxy(ITextPara *This,float *pValue);", "ITextPara_SetRightIndent_Proxy": "HRESULT WINAPI ITextPara_SetRightIndent_Proxy(ITextPara *This,float Value);", "ITextPara_SetIndents_Proxy": "HRESULT WINAPI ITextPara_SetIndents_Proxy(ITextPara *This,float StartIndent,float LeftIndent,float RightIndent);", "ITextPara_SetLineSpacing_Proxy": "HRESULT WINAPI ITextPara_SetLineSpacing_Proxy(ITextPara *This,__LONG32 LineSpacingRule,float LineSpacing);", "ITextPara_GetSpaceAfter_Proxy": "HRESULT WINAPI ITextPara_GetSpaceAfter_Proxy(ITextPara *This,float *pValue);", "ITextPara_SetSpaceAfter_Proxy": "HRESULT WINAPI ITextPara_SetSpaceAfter_Proxy(ITextPara *This,float Value);", "ITextPara_GetSpaceBefore_Proxy": "HRESULT WINAPI ITextPara_GetSpaceBefore_Proxy(ITextPara *This,float *pValue);", "ITextPara_SetSpaceBefore_Proxy": "HRESULT WINAPI ITextPara_SetSpaceBefore_Proxy(ITextPara *This,float Value);", "ITextPara_GetWidowControl_Proxy": "HRESULT WINAPI ITextPara_GetWidowControl_Proxy(ITextPara *This,__LONG32 *pValue);", "ITextPara_SetWidowControl_Proxy": "HRESULT WINAPI ITextPara_SetWidowControl_Proxy(ITextPara *This,__LONG32 Value);", "ITextPara_GetTabCount_Proxy": "HRESULT WINAPI ITextPara_GetTabCount_Proxy(ITextPara *This,__LONG32 *pCount);", "ITextPara_AddTab_Proxy": "HRESULT WINAPI ITextPara_AddTab_Proxy(ITextPara *This,float tbPos,__LONG32 tbAlign,__LONG32 tbLeader);", "ITextPara_ClearAllTabs_Proxy": "HRESULT WINAPI ITextPara_ClearAllTabs_Proxy(ITextPara *This);", "ITextPara_DeleteTab_Proxy": "HRESULT WINAPI ITextPara_DeleteTab_Proxy(ITextPara *This,float tbPos);", "ITextPara_GetTab_Proxy": "HRESULT WINAPI ITextPara_GetTab_Proxy(ITextPara *This,__LONG32 iTab,float *ptbPos,__LONG32 *ptbAlign,__LONG32 *ptbLeader);", "ITextStoryRanges__NewEnum_Proxy": "HRESULT WINAPI ITextStoryRanges__NewEnum_Proxy(ITextStoryRanges *This,IUnknown **ppunkEnum);", "ITextStoryRanges_Item_Proxy": "HRESULT WINAPI ITextStoryRanges_Item_Proxy(ITextStoryRanges *This,__LONG32 Index,ITextRange **ppRange);", "ITextStoryRanges_GetCount_Proxy": "HRESULT WINAPI ITextStoryRanges_GetCount_Proxy(ITextStoryRanges *This,__LONG32 *pCount);", "ITextDocument2_AttachMsgFilter_Proxy": "HRESULT WINAPI ITextDocument2_AttachMsgFilter_Proxy(ITextDocument2 *This,IUnknown *pFilter);", "ITextDocument2_SetEffectColor_Proxy": "HRESULT WINAPI ITextDocument2_SetEffectColor_Proxy(ITextDocument2 *This,__LONG32 Index,COLORREF cr);", "ITextDocument2_GetEffectColor_Proxy": "HRESULT WINAPI ITextDocument2_GetEffectColor_Proxy(ITextDocument2 *This,__LONG32 Index,COLORREF *pcr);", "ITextDocument2_GetCaretType_Proxy": "HRESULT WINAPI ITextDocument2_GetCaretType_Proxy(ITextDocument2 *This,__LONG32 *pCaretType);", "ITextDocument2_SetCaretType_Proxy": "HRESULT WINAPI ITextDocument2_SetCaretType_Proxy(ITextDocument2 *This,__LONG32 CaretType);", "ITextDocument2_GetImmContext_Proxy": "HRESULT WINAPI ITextDocument2_GetImmContext_Proxy(ITextDocument2 *This,__LONG32 *pContext);", "ITextDocument2_ReleaseImmContext_Proxy": "HRESULT WINAPI ITextDocument2_ReleaseImmContext_Proxy(ITextDocument2 *This,__LONG32 Context);", "ITextDocument2_GetPreferredFont_Proxy": "HRESULT WINAPI ITextDocument2_GetPreferredFont_Proxy(ITextDocument2 *This,__LONG32 cp,__LONG32 CodePage,__LONG32 Option,__LONG32 curCodepage,__LONG32 curFontSize,BSTR *pbstr,__LONG32 *pPitchAndFamily,__LONG32 *pNewFontSize);", "ITextDocument2_GetNotificationMode_Proxy": "HRESULT WINAPI ITextDocument2_GetNotificationMode_Proxy(ITextDocument2 *This,__LONG32 *pMode);", "ITextDocument2_SetNotificationMode_Proxy": "HRESULT WINAPI ITextDocument2_SetNotificationMode_Proxy(ITextDocument2 *This,__LONG32 Mode);", "ITextDocument2_GetClientRect_Proxy": "HRESULT WINAPI ITextDocument2_GetClientRect_Proxy(ITextDocument2 *This,__LONG32 Type,__LONG32 *pLeft,__LONG32 *pTop,__LONG32 *pRight,__LONG32 *pBottom);", "ITextDocument2_GetSelectionEx_Proxy": "HRESULT WINAPI ITextDocument2_GetSelectionEx_Proxy(ITextDocument2 *This,ITextSelection **ppSel);", "ITextDocument2_GetWindow_Proxy": "HRESULT WINAPI ITextDocument2_GetWindow_Proxy(ITextDocument2 *This,__LONG32 *phWnd);", "ITextDocument2_GetFEFlags_Proxy": "HRESULT WINAPI ITextDocument2_GetFEFlags_Proxy(ITextDocument2 *This,__LONG32 *pFlags);", "ITextDocument2_UpdateWindow_Proxy": "HRESULT WINAPI ITextDocument2_UpdateWindow_Proxy(ITextDocument2 *This);", "ITextDocument2_CheckTextLimit_Proxy": "HRESULT WINAPI ITextDocument2_CheckTextLimit_Proxy(ITextDocument2 *This,__LONG32 cch,__LONG32 *pcch);", "ITextDocument2_IMEInProgress_Proxy": "HRESULT WINAPI ITextDocument2_IMEInProgress_Proxy(ITextDocument2 *This,__LONG32 Mode);", "ITextDocument2_SysBeep_Proxy": "HRESULT WINAPI ITextDocument2_SysBeep_Proxy(ITextDocument2 *This);", "ITextDocument2_Update_Proxy": "HRESULT WINAPI ITextDocument2_Update_Proxy(ITextDocument2 *This,__LONG32 Mode);", "ITextDocument2_Notify_Proxy": "HRESULT WINAPI ITextDocument2_Notify_Proxy(ITextDocument2 *This,__LONG32 Notify);", "ITextMsgFilter_AttachDocument_Proxy": "HRESULT WINAPI ITextMsgFilter_AttachDocument_Proxy(ITextMsgFilter *This,HWND hwnd,ITextDocument2 *pTextDoc);", "ITextMsgFilter_HandleMessage_Proxy": "HRESULT WINAPI ITextMsgFilter_HandleMessage_Proxy(ITextMsgFilter *This,UINT *pmsg,WPARAM *pwparam,LPARAM *plparam,LRESULT *plres);", "ITextMsgFilter_AttachMsgFilter_Proxy": "HRESULT WINAPI ITextMsgFilter_AttachMsgFilter_Proxy(ITextMsgFilter *This,ITextMsgFilter *pMsgFilter);", "IMcastScope_get_ScopeID_Proxy": "HRESULT WINAPI IMcastScope_get_ScopeID_Proxy(IMcastScope *This,__LONG32 *pID);", "IMcastScope_get_ServerID_Proxy": "HRESULT WINAPI IMcastScope_get_ServerID_Proxy(IMcastScope *This,__LONG32 *pID);", "IMcastScope_get_InterfaceID_Proxy": "HRESULT WINAPI IMcastScope_get_InterfaceID_Proxy(IMcastScope *This,__LONG32 *pID);", "IMcastScope_get_ScopeDescription_Proxy": "HRESULT WINAPI IMcastScope_get_ScopeDescription_Proxy(IMcastScope *This,BSTR *ppDescription);", "IMcastScope_get_TTL_Proxy": "HRESULT WINAPI IMcastScope_get_TTL_Proxy(IMcastScope *This,__LONG32 *pTTL);", "IMcastLeaseInfo_get_RequestID_Proxy": "HRESULT WINAPI IMcastLeaseInfo_get_RequestID_Proxy(IMcastLeaseInfo *This,BSTR *ppRequestID);", "IMcastLeaseInfo_get_LeaseStartTime_Proxy": "HRESULT WINAPI IMcastLeaseInfo_get_LeaseStartTime_Proxy(IMcastLeaseInfo *This,DATE *pTime);", "IMcastLeaseInfo_put_LeaseStartTime_Proxy": "HRESULT WINAPI IMcastLeaseInfo_put_LeaseStartTime_Proxy(IMcastLeaseInfo *This,DATE time);", "IMcastLeaseInfo_get_LeaseStopTime_Proxy": "HRESULT WINAPI IMcastLeaseInfo_get_LeaseStopTime_Proxy(IMcastLeaseInfo *This,DATE *pTime);", "IMcastLeaseInfo_put_LeaseStopTime_Proxy": "HRESULT WINAPI IMcastLeaseInfo_put_LeaseStopTime_Proxy(IMcastLeaseInfo *This,DATE time);", "IMcastLeaseInfo_get_AddressCount_Proxy": "HRESULT WINAPI IMcastLeaseInfo_get_AddressCount_Proxy(IMcastLeaseInfo *This,__LONG32 *pCount);", "IMcastLeaseInfo_get_ServerAddress_Proxy": "HRESULT WINAPI IMcastLeaseInfo_get_ServerAddress_Proxy(IMcastLeaseInfo *This,BSTR *ppAddress);", "IMcastLeaseInfo_get_TTL_Proxy": "HRESULT WINAPI IMcastLeaseInfo_get_TTL_Proxy(IMcastLeaseInfo *This,__LONG32 *pTTL);", "IMcastLeaseInfo_get_Addresses_Proxy": "HRESULT WINAPI IMcastLeaseInfo_get_Addresses_Proxy(IMcastLeaseInfo *This,VARIANT *pVariant);", "IMcastLeaseInfo_EnumerateAddresses_Proxy": "HRESULT WINAPI IMcastLeaseInfo_EnumerateAddresses_Proxy(IMcastLeaseInfo *This,IEnumBstr **ppEnumAddresses);", "IEnumMcastScope_Next_Proxy": "HRESULT WINAPI IEnumMcastScope_Next_Proxy(IEnumMcastScope *This,ULONG celt,IMcastScope **ppScopes,ULONG *pceltFetched);", "IEnumMcastScope_Reset_Proxy": "HRESULT WINAPI IEnumMcastScope_Reset_Proxy(IEnumMcastScope *This);", "IEnumMcastScope_Skip_Proxy": "HRESULT WINAPI IEnumMcastScope_Skip_Proxy(IEnumMcastScope *This,ULONG celt);", "IEnumMcastScope_Clone_Proxy": "HRESULT WINAPI IEnumMcastScope_Clone_Proxy(IEnumMcastScope *This,IEnumMcastScope **ppEnum);", "IMcastAddressAllocation_get_Scopes_Proxy": "HRESULT WINAPI IMcastAddressAllocation_get_Scopes_Proxy(IMcastAddressAllocation *This,VARIANT *pVariant);", "IMcastAddressAllocation_EnumerateScopes_Proxy": "HRESULT WINAPI IMcastAddressAllocation_EnumerateScopes_Proxy(IMcastAddressAllocation *This,IEnumMcastScope **ppEnumMcastScope);", "IMcastAddressAllocation_RequestAddress_Proxy": "HRESULT WINAPI IMcastAddressAllocation_RequestAddress_Proxy(IMcastAddressAllocation *This,IMcastScope *pScope,DATE LeaseStartTime,DATE LeaseStopTime,__LONG32 NumAddresses,IMcastLeaseInfo **ppLeaseResponse);", "IMcastAddressAllocation_RenewAddress_Proxy": "HRESULT WINAPI IMcastAddressAllocation_RenewAddress_Proxy(IMcastAddressAllocation *This,__LONG32 lReserved,IMcastLeaseInfo *pRenewRequest,IMcastLeaseInfo **ppRenewResponse);", "IMcastAddressAllocation_ReleaseAddress_Proxy": "HRESULT WINAPI IMcastAddressAllocation_ReleaseAddress_Proxy(IMcastAddressAllocation *This,IMcastLeaseInfo *pReleaseRequest);", "IMcastAddressAllocation_CreateLeaseInfo_Proxy": "HRESULT WINAPI IMcastAddressAllocation_CreateLeaseInfo_Proxy(IMcastAddressAllocation *This,DATE LeaseStartTime,DATE LeaseStopTime,DWORD dwNumAddresses,LPWSTR *ppAddresses,LPWSTR pRequestID,LPWSTR pServerAddress,IMcastLeaseInfo **ppReleaseRequest);", "IMcastAddressAllocation_CreateLeaseInfoFromVariant_Proxy": "HRESULT WINAPI IMcastAddressAllocation_CreateLeaseInfoFromVariant_Proxy(IMcastAddressAllocation *This,DATE LeaseStartTime,DATE LeaseStopTime,VARIANT vAddresses,BSTR pRequestID,BSTR pServerAddress,IMcastLeaseInfo **ppReleaseRequest);", "InitializeSListHead": "WINBASEAPI VOID WINAPI InitializeSListHead (PSLIST_HEADER ListHead);", "InterlockedPopEntrySList": "WINBASEAPI PSLIST_ENTRY WINAPI InterlockedPopEntrySList (PSLIST_HEADER ListHead);", "InterlockedPushEntrySList": "WINBASEAPI PSLIST_ENTRY WINAPI InterlockedPushEntrySList (PSLIST_HEADER ListHead, PSLIST_ENTRY ListEntry);", "InterlockedFlushSList": "WINBASEAPI PSLIST_ENTRY WINAPI InterlockedFlushSList (PSLIST_HEADER ListHead);", "QueryDepthSList": "WINBASEAPI USHORT WINAPI QueryDepthSList (PSLIST_HEADER ListHead);", "InterlockedPushListSListEx": "WINBASEAPI PSLIST_ENTRY WINAPI InterlockedPushListSListEx (PSLIST_HEADER ListHead, PSLIST_ENTRY List, PSLIST_ENTRY ListEnd, ULONG Count);"}